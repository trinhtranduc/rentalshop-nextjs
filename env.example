# ========================================
# RAILWAY ENVIRONMENT VARIABLES
# ========================================
# Environment variables for Railway deployment
# Copy these to Railway Dashboard or use setup script: ./scripts/setup-railway-env.sh
#
# QUICK REFERENCE:
#   üì¶ API Service:    Requires all variables below (11 required + optional AWS S3)
#   üéõÔ∏è  Admin Service:  Requires NODE_ENV, NEXTAUTH_SECRET, NEXTAUTH_URL, NEXT_PUBLIC_API_URL
#   üõí Client Service: Requires NODE_ENV, NEXTAUTH_SECRET, NEXTAUTH_URL, NEXT_PUBLIC_API_URL
#
# IMPORTANT: NEXTAUTH_SECRET must be the SAME across all 3 services!
#
# See RAILWAY_ENV_VARIABLES_GUIDE.md for detailed explanation
# See RAILWAY_ENV_MINIMAL.md for quick summary

# ========================================
# DATABASE CONFIGURATION
# ========================================
# PostgreSQL database from Railway
# Use variable reference to connect to Railway PostgreSQL service
DATABASE_URL=${{Postgres.DATABASE_URL}}

# ========================================
# NODE ENVIRONMENT
# ========================================
NODE_ENV=production

# ========================================
# JWT CONFIGURATION (CRITICAL - Set Strong Secrets!)
# ========================================
# Generate with: openssl rand -hex 32
# Must be at least 32 characters
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters
JWT_EXPIRES_IN=1d

# ========================================
# NEXTAUTH CONFIGURATION (CRITICAL - Set Strong Secrets!)
# ========================================
# Generate with: openssl rand -hex 32
# Must be at least 32 characters
# Use same NEXTAUTH_SECRET across all services (api, admin, client)
NEXTAUTH_SECRET=your-super-secret-nextauth-key-minimum-32-characters

# Set to your actual Railway service URL or custom domain
# Replace with your Railway deployment URLs or custom domains
NEXTAUTH_URL=https://apis-development.up.railway.app
# Or with custom domain: NEXTAUTH_URL=https://api.anyrent.shop

# ========================================
# API URLS (Railway Service URLs or Custom Domains)
# ========================================
# Replace with your actual Railway deployment URLs or custom domains
# Development API
API_URL=https://dev-api.anyrent.shop
# Or Railway URL: API_URL=https://apis-development.up.railway.app

# Production API  
API_URL_PROD=https://api.anyrent.shop

# Development Client & Admin
CLIENT_URL=https://dev.anyrent.shop
# Or Railway: CLIENT_URL=https://client-development.up.railway.app

ADMIN_URL=https://dev-admin.anyrent.shop
# Or Railway: ADMIN_URL=https://admin-development.up.railway.app

# Production Client & Admin
CLIENT_URL_PROD=https://anyrent.shop
ADMIN_URL_PROD=https://admin.anyrent.shop

# Public API URL for client-side requests (must start with NEXT_PUBLIC_)
# Development
NEXT_PUBLIC_API_URL=https://dev-api.anyrent.shop
# Production: NEXT_PUBLIC_API_URL=https://api.anyrent.shop

# ========================================
# CORS CONFIGURATION
# ========================================
# Comma-separated list of allowed origins (no trailing slashes, no spaces)
# Development
CORS_ORIGINS=https://dev.anyrent.shop,https://dev-admin.anyrent.shop
# Production: CORS_ORIGINS=https://anyrent.shop,https://admin.anyrent.shop
# Or Railway: CORS_ORIGINS=https://client-development.up.railway.app,https://admin-development.up.railway.app

# ========================================
# FILE UPLOAD - AWS S3 (Primary) + Railway Volume (Fallback)
# ========================================
# Primary: AWS S3 for CDN and scalability
# Fallback: Railway Volume for reliability

# AWS S3 Configuration (Primary)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_S3_BUCKET_NAME=rentalshop-images
AWS_CLOUDFRONT_DOMAIN=your-cloudfront-domain.cloudfront.net

# Railway Volume (Fallback)
# Images are stored in Railway Volume (/app/public/uploads)
# 100GB free storage included with Railway plan

# ========================================
# LOGGING CONFIGURATION (Optional)
# ========================================
LOG_LEVEL=info
LOG_FORMAT=json

# ========================================
# RATE LIMITING (Optional)
# ========================================
RATE_LIMIT_WINDOW=15m
RATE_LIMIT_MAX=100

# ========================================
# EMAIL CONFIGURATION (AWS SES)
# ========================================
# Email Provider: 'console' (dev), 'ses' (AWS - production)
EMAIL_PROVIDER=ses
EMAIL_FROM=noreply@anyrent.shop

# AWS SES Configuration (uses same AWS credentials as S3)
# After verifying domain anyrent.shop in SES, you can send from any email in that domain
# Region must match the region where you verified the domain in AWS SES
AWS_SES_REGION=ap-southeast-1
# Uses existing: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY (from S3 config above)

# ========================================
# FEATURE FLAGS (Optional)
# ========================================
ENABLE_EMAIL_VERIFICATION=true
ENABLE_ANALYTICS=false
ENABLE_DEBUG_LOGS=false

# ========================================
# LOCAL DEVELOPMENT ONLY
# ========================================
# For local development, use SQLite
# DATABASE_URL=file:./prisma/dev.db
# NODE_ENV=development
# JWT_SECRET=local-jwt-secret-DO-NOT-USE-IN-PRODUCTION
# NEXTAUTH_SECRET=local-nextauth-secret-DO-NOT-USE-IN-PRODUCTION
# API_URL=http://localhost:3002
# CLIENT_URL=http://localhost:3000
# ADMIN_URL=http://localhost:3001

# ========================================
# QUICK SETUP
# ========================================
# Use the automated setup script:
#   ./scripts/setup-railway-env.sh
#
# This will:
#   1. Generate secure secrets
#   2. Set all environment variables
#   3. Push database schema
#   4. Seed initial data
