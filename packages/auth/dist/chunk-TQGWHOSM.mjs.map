{"version":3,"sources":["../src/client/index.ts"],"sourcesContent":["/**\n * Authentication utilities for client app (reusing shared package)\n */\n\n// Import storage utilities from utils\nexport {\n  getAuthToken,\n  getStoredUser,\n  storeAuthData,\n  clearAuthData,\n  authenticatedFetch,\n  handleApiResponse,\n  isAuthenticated,\n  getCurrentUser,\n  type StoredUser,\n} from '@rentalshop/utils';\n\n// Import authentication functions from utils auth API\nimport { authApi, getCurrentUser } from '@rentalshop/utils';\n\n// Re-export auth API functions with simpler names\nexport const loginUser = authApi.login;\nexport const logoutUser = authApi.logout;\nexport const verifyTokenWithServer = authApi.verifyToken;\n\n// Client-specific aliases for compatibility\nexport const loginUserClient = authApi.login;\nexport const logoutUserClient = authApi.logout;\nexport const getCurrentUserClient = getCurrentUser;\n\n// Export types\nexport type { AuthResponse } from '@rentalshop/utils';\n\nexport const isAuthenticatedWithVerification = async (): Promise<boolean> => {\n  const { isAuthenticated } = await import('@rentalshop/utils');\n  if (!isAuthenticated()) return false;\n  \n  try {\n    const result = await authApi.verifyToken();\n    return result.success === true;\n  } catch (error) {\n    return false;\n  }\n}; "],"mappings":";AAKA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAEK;AAGP,SAAS,SAAS,kBAAAA,uBAAsB;AAGjC,IAAM,YAAY,QAAQ;AAC1B,IAAM,aAAa,QAAQ;AAC3B,IAAM,wBAAwB,QAAQ;AAGtC,IAAM,kBAAkB,QAAQ;AAChC,IAAM,mBAAmB,QAAQ;AACjC,IAAM,uBAAuBA;AAK7B,IAAM,kCAAkC,YAA8B;AAC3E,QAAM,EAAE,iBAAAC,iBAAgB,IAAI,MAAM,OAAO,mBAAmB;AAC5D,MAAI,CAACA,iBAAgB;AAAG,WAAO;AAE/B,MAAI;AACF,UAAM,SAAS,MAAM,QAAQ,YAAY;AACzC,WAAO,OAAO,YAAY;AAAA,EAC5B,SAAS,OAAO;AACd,WAAO;AAAA,EACT;AACF;","names":["getCurrentUser","isAuthenticated"]}