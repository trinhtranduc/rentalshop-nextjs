{"version":3,"sources":["../src/index.ts","../src/pagination.ts","../src/search.ts","../src/validation.ts","../src/ui.ts","../src/business.ts","../src/environment.ts","../src/api.ts","../src/orders.ts","../src/status.ts","../src/subscription.ts","../src/pricing.ts","../src/countries.ts"],"sourcesContent":["/**\n * Centralized Constants for Rental Shop Monorepo\n * \n * This package provides all constants used across the application\n * to ensure consistency and maintainability.\n */\n\n// Import all constant modules\nimport { PAGINATION } from './pagination';\nimport { SEARCH } from './search';\nimport { VALIDATION } from './validation';\nimport { UI } from './ui';\nimport { BUSINESS } from './business';\nimport { ENVIRONMENT } from './environment';\nimport { API } from './api';\nimport * as ORDERS from './orders';\nimport * as STATUS from './status';\n\n// Export all constant modules\nexport * from './pagination';\nexport * from './search';\nexport * from './validation';\nexport * from './ui';\nexport * from './business';\nexport * from './environment';\nexport * from './api';\nexport * from './orders';\nexport * from './status';\nexport * from './subscription';\nexport * from './pricing';\nexport * from './countries';\n\n// Explicit exports for status constants\nexport { \n  SUBSCRIPTION_STATUS,\n  ORDER_STATUS,\n  PAYMENT_STATUS,\n  PAYMENT_METHOD,\n  PAYMENT_TYPE,\n  ORDER_TYPE,\n  USER_ROLE,\n  ENTITY_STATUS,\n  PRODUCT_AVAILABILITY_STATUS,\n  BILLING_INTERVAL,\n  AUDIT_ACTION,\n  AUDIT_ENTITY_TYPE\n} from './status';\n\n// Export status types\nexport type {\n  SubscriptionStatus,\n  OrderStatus,\n  PaymentStatus,\n  PaymentMethod,\n  PaymentType,\n  OrderType,\n  UserRole,\n  EntityStatus,\n  ProductAvailabilityStatus,\n  BillingInterval,\n  AuditAction,\n  AuditEntityType\n} from './status';\n\n// Explicit exports for critical constants\nexport { \n  ORDER_STATUS_COLORS,\n  ORDER_TYPE_COLORS,\n  ORDER_STATUSES,\n  ORDER_TYPES,\n  ORDER_STATUS_LABELS,\n  ORDER_TYPE_LABELS\n} from './orders';\n\n\n// Explicit API export to fix import issues\nexport { API } from './api';\n\n// Convenience exports for easy access\nexport const CONSTANTS = {\n  PAGINATION,\n  SEARCH,\n  VALIDATION,\n  UI,\n  BUSINESS,\n  ENVIRONMENT,\n  API,\n  ORDERS,\n  STATUS,\n} as const;\n\n// Re-export the main constants object\nexport { CONSTANTS as default };\n\n// Re-export status functions directly\nexport { \n  getStatusColor,\n  getStatusLabel,\n  getStatusOptions,\n  isSubscriptionActive,\n  isOrderCompleted,\n  isPaymentSuccessful,\n  isPaymentPending,\n  isPaymentFailed,\n  isEntityActive\n} from './status';\n\n// ============================================================================\n// PRICING CONFIGURATION\n// ============================================================================\nexport {\n  BUSINESS_TYPE_DEFAULTS,\n  PRICING_TYPE_LABELS,\n  BUSINESS_TYPE_LABELS,\n  PRICING_TYPE_DESCRIPTIONS,\n  BUSINESS_TYPE_DESCRIPTIONS,\n  getDefaultPricingConfig,\n  getPricingTypeLabel,\n  getBusinessTypeLabel,\n  getPricingTypeDescription,\n  getBusinessTypeDescription,\n  requiresRentalDates,\n  getDurationUnit\n} from './pricing';\n","/**\n * Pagination and List Constants\n * \n * These constants define limits for various list operations across the application\n */\n\nexport const PAGINATION = {\n  // Search and List Limits\n  SEARCH_LIMIT: 20,\n  DEFAULT_PAGE_SIZE: 25,\n  MAX_PAGE_SIZE: 20,\n  \n  // Dashboard Limits\n  DASHBOARD_ITEMS: 10,\n  RECENT_ORDERS: 5,\n  TOP_PRODUCTS: 8,\n  TOP_CUSTOMERS: 6,\n  \n  // Mobile Limits\n  MOBILE_SEARCH_LIMIT: 15,\n  MOBILE_PAGE_SIZE: 20,\n  \n  // API Limits\n  API_MAX_LIMIT: 1000,\n  API_DEFAULT_LIMIT: 50,\n} as const;\n\n// Type for pagination values\nexport type PaginationValue = typeof PAGINATION[keyof typeof PAGINATION];\n","/**\n * Search and Query Constants\n * \n * These constants define search behavior and query limits\n */\n\nexport const SEARCH = {\n  // Debounce and Timing\n  DEBOUNCE_MS: 300,\n  MIN_QUERY_LENGTH: 2,\n  MAX_QUERY_LENGTH: 100,\n  \n  // Suggestion and Results\n  SUGGESTION_LIMIT: 5,\n  MAX_SEARCH_RESULTS: 1000,\n  \n  // Auto-complete\n  AUTOCOMPLETE_DELAY: 200,\n  AUTOCOMPLETE_MIN_CHARS: 1,\n  \n  // Search Types\n  PRODUCT_SEARCH: 'product',\n  CUSTOMER_SEARCH: 'customer',\n  ORDER_SEARCH: 'order',\n} as const;\n\n// Type for search values\nexport type SearchValue = typeof SEARCH[keyof typeof SEARCH];\n","/**\n * Validation and Business Rule Constants\n * \n * These constants define validation rules and business logic limits\n */\n\nexport const VALIDATION = {\n  // Rental Rules\n  MIN_RENTAL_DAYS: 1,\n  MAX_RENTAL_DAYS: 365,\n  \n  // Stock and Inventory\n  LOW_STOCK_THRESHOLD: 2,\n  CRITICAL_STOCK_THRESHOLD: 0,\n  MAX_STOCK_QUANTITY: 9999,\n  \n  // User Input\n  MIN_PASSWORD_LENGTH: 8,\n  MAX_PASSWORD_LENGTH: 128,\n  MIN_NAME_LENGTH: 1,\n  MAX_NAME_LENGTH: 100,\n  MAX_PHONE_LENGTH: 20,\n  MAX_EMAIL_LENGTH: 255,\n  \n  // Order Rules\n  MIN_ORDER_AMOUNT: 0.01,\n  MAX_ORDER_AMOUNT: 999999.99,\n  MAX_ORDER_ITEMS: 50,\n  \n  // Financial\n  MIN_DEPOSIT_AMOUNT: 0,\n  MAX_DEPOSIT_AMOUNT: 99999.99,\n  MIN_DISCOUNT_AMOUNT: 0,\n  MAX_DISCOUNT_PERCENTAGE: 100,\n  \n  // File Uploads\n  MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\n  ALLOWED_IMAGE_TYPES: ['image/jpeg', 'image/png', 'image/webp'],\n} as const;\n\n// Type for validation values\nexport type ValidationValue = typeof VALIDATION[keyof typeof VALIDATION];\n","/**\n * UI and User Experience Constants\n * \n * These constants define UI behavior, animations, and user experience settings\n */\n\nexport const UI = {\n  // Animation and Timing\n  ANIMATION_DURATION: 200,\n  TRANSITION_DURATION: 150,\n  HOVER_DELAY: 100,\n  \n  // Toast and Notifications\n  TOAST_DURATION: 5000,\n  TOAST_DURATION_LONG: 10000,\n  TOAST_DURATION_SHORT: 3000,\n  \n  // Loading States\n  LOADING_DELAY: 1000,\n  SKELETON_DURATION: 1500,\n  \n  // Debounce and Throttle\n  DEBOUNCE_DELAY: 300,\n  THROTTLE_DELAY: 100,\n  \n  // Scroll and Pagination\n  INFINITE_SCROLL_THRESHOLD: 100,\n  SCROLL_TO_TOP_THRESHOLD: 500,\n  \n  // Breakpoints (in pixels)\n  BREAKPOINTS: {\n    MOBILE: 768,\n    TABLET: 1024,\n    DESKTOP: 1280,\n    LARGE_DESKTOP: 1536,\n  },\n  \n  // Z-Index Layers\n  Z_INDEX: {\n    DROPDOWN: 1000,\n    MODAL: 2000,\n    TOOLTIP: 3000,\n    TOAST: 4000,\n    OVERLAY: 5000,\n  },\n} as const;\n\n// Type for UI values\nexport type UIValue = typeof UI[keyof typeof UI];\n","/**\n * Business Logic Constants\n * \n * These constants define business rules, defaults, and operational values\n */\n\nexport const BUSINESS = {\n  // Order Defaults\n  DEFAULT_QUANTITY: 1,\n  DEFAULT_DEPOSIT: 0,\n  DEFAULT_DISCOUNT: 0,\n  DEFAULT_TAX_RATE: 0,\n  \n  // Order Limits\n  MAX_ORDER_ITEMS: 50,\n  MIN_ORDER_AMOUNT: 0.01,\n  MAX_ORDER_AMOUNT: 999999.99,\n  \n  // Rental Rules\n  MIN_RENTAL_DAYS: 1,\n  MAX_RENTAL_DAYS: 365,\n  \n  // Customer Defaults\n  DEFAULT_CUSTOMER_TYPE: 'WALK_IN',\n  DEFAULT_CUSTOMER_STATUS: 'ACTIVE',\n  \n  // Product Defaults\n  DEFAULT_PRODUCT_STATUS: 'ACTIVE',\n  DEFAULT_PRODUCT_CATEGORY: 'UNCATEGORIZED',\n  \n  // Rental Defaults\n  DEFAULT_RENTAL_PERIOD: 1, // days\n  DEFAULT_LATE_FEE_RATE: 0.1, // 10% per day\n  DEFAULT_DAMAGE_FEE: 0,\n  \n  // Payment Defaults\n  DEFAULT_PAYMENT_METHOD: 'CASH',\n  DEFAULT_PAYMENT_STATUS: 'PENDING',\n  \n  // Outlet Defaults\n  DEFAULT_OUTLET_STATUS: 'ACTIVE',\n  DEFAULT_OUTLET_TYPE: 'RETAIL',\n  \n  // User Defaults\n  DEFAULT_USER_STATUS: 'ACTIVE',\n  DEFAULT_USER_ROLE: 'OUTLET_STAFF',\n  \n  // Notification Defaults\n  DEFAULT_NOTIFICATION_TYPE: 'INFO',\n  DEFAULT_NOTIFICATION_PRIORITY: 'NORMAL',\n  \n  // Rental Shop Specific\n  DEFAULT_PICKUP_TIME: '09:00',\n  DEFAULT_RETURN_TIME: '17:00',\n  BUSINESS_HOURS: {\n    OPEN: '08:00',\n    CLOSE: '18:00',\n    BREAK_START: '12:00',\n    BREAK_END: '13:00',\n  },\n  \n  // Inventory Management\n  LOW_STOCK_WARNING: 5,\n  CRITICAL_STOCK_WARNING: 2,\n  AUTO_REORDER_THRESHOLD: 3,\n  \n  // Customer Management\n  MAX_CUSTOMER_ORDERS: 100,\n  CUSTOMER_CREDIT_LIMIT: 1000,\n  LOYALTY_POINTS_RATE: 0.01, // 1 point per $1 spent\n  \n  // Order Processing\n  ORDER_PREPARATION_TIME: 30, // minutes\n  PICKUP_GRACE_PERIOD: 15, // minutes\n  RETURN_GRACE_PERIOD: 30, // minutes\n  \n  // Financial Rules\n  MIN_DEPOSIT_PERCENTAGE: 0.1, // 10% of order value\n  MAX_DEPOSIT_PERCENTAGE: 0.5, // 50% of order value\n  LATE_FEE_CAP: 100, // Maximum late fee per order\n  DAMAGE_FEE_CAP: 500, // Maximum damage fee per item\n} as const;\n\n// Type for business values\nexport type BusinessValue = typeof BUSINESS[keyof typeof BUSINESS];\n","/**\n * Environment-Specific Constants\n * \n * These constants can vary based on the environment (development, staging, production)\n */\n\nexport const ENVIRONMENT = {\n  // API Configuration\n  API_TIMEOUT: process.env.NODE_ENV === 'production' ? 10000 : 30000,\n  API_RETRY_ATTEMPTS: process.env.NODE_ENV === 'production' ? 3 : 1,\n  \n  // Search and Pagination (Production vs Development)\n  SEARCH_LIMIT: process.env.NODE_ENV === 'production' ? 50 : 20,\n  DASHBOARD_ITEMS: process.env.NODE_ENV === 'production' ? 20 : 10,\n  \n  // Caching\n  CACHE_TTL: process.env.NODE_ENV === 'production' ? 300 : 60, // seconds\n  CACHE_MAX_SIZE: process.env.NODE_ENV === 'production' ? 1000 : 100,\n  \n  // Logging\n  LOG_LEVEL: process.env.NODE_ENV === 'production' ? 'error' : 'debug',\n  LOG_RETENTION: process.env.NODE_ENV === 'production' ? 30 : 7, // days\n  \n  // Performance\n  DEBOUNCE_DELAY: process.env.NODE_ENV === 'production' ? 500 : 300,\n  THROTTLE_DELAY: process.env.NODE_ENV === 'production' ? 200 : 100,\n  \n  // Security\n  SESSION_TIMEOUT: process.env.NODE_ENV === 'production' ? 3600 : 7200, // seconds\n  MAX_LOGIN_ATTEMPTS: process.env.NODE_ENV === 'production' ? 5 : 10,\n  \n  // Feature Flags\n  ENABLE_ANALYTICS: process.env.NODE_ENV === 'production',\n  ENABLE_DEBUG_MODE: process.env.NODE_ENV !== 'production',\n  ENABLE_PERFORMANCE_MONITORING: process.env.NODE_ENV === 'production',\n} as const;\n\n// Type for environment values\nexport type EnvironmentValue = typeof ENVIRONMENT[keyof typeof ENVIRONMENT];\n","/**\n * API and Network Constants\n * \n * These constants define API behavior, endpoints, and network settings\n */\n\nexport const API = {\n  // HTTP Status Codes\n  STATUS: {\n    OK: 200,\n    CREATED: 201,\n    NO_CONTENT: 204,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    PAYMENT_REQUIRED: 402, // For subscription errors (expired, paused, etc.)\n    FORBIDDEN: 403,\n    NOT_FOUND: 404,\n    CONFLICT: 409,\n    UNPROCESSABLE_ENTITY: 422,\n    INTERNAL_SERVER_ERROR: 500,\n    SERVICE_UNAVAILABLE: 503,\n  },\n  \n  // HTTP Methods\n  METHODS: {\n    GET: 'GET',\n    POST: 'POST',\n    PUT: 'PUT',\n    PATCH: 'PATCH',\n    DELETE: 'DELETE',\n  },\n  \n  // Content Types\n  CONTENT_TYPES: {\n    JSON: 'application/json',\n    FORM_DATA: 'multipart/form-data',\n    TEXT: 'text/plain',\n    HTML: 'text/html',\n  },\n  \n  // Headers\n  HEADERS: {\n    AUTHORIZATION: 'Authorization',\n    CONTENT_TYPE: 'Content-Type',\n    ACCEPT: 'Accept',\n    USER_AGENT: 'User-Agent',\n    CACHE_CONTROL: 'Cache-Control',\n  },\n  \n  // Rate Limiting\n  RATE_LIMITS: {\n    REQUESTS_PER_MINUTE: 60,\n    REQUESTS_PER_HOUR: 1000,\n    BURST_LIMIT: 10,\n  },\n  \n  // Timeouts\n  TIMEOUTS: {\n    CONNECT: 5000,\n    READ: 30000,\n    WRITE: 30000,\n    IDLE: 60000,\n  },\n  \n  // Retry Configuration\n  RETRY: {\n    MAX_ATTEMPTS: 3,\n    INITIAL_DELAY: 1000,\n    MAX_DELAY: 10000,\n    BACKOFF_MULTIPLIER: 2,\n  },\n  \n  // Cache Headers\n  CACHE: {\n    NO_CACHE: 'no-cache',\n    NO_STORE: 'no-store',\n    MUST_REVALIDATE: 'must-revalidate',\n    PRIVATE: 'private',\n    PUBLIC: 'public',\n  },\n  \n  // Error Codes\n  ERROR_CODES: {\n    NETWORK_ERROR: 'NETWORK_ERROR',\n    TIMEOUT_ERROR: 'TIMEOUT_ERROR',\n    VALIDATION_ERROR: 'VALIDATION_ERROR',\n    AUTHENTICATION_ERROR: 'AUTHENTICATION_ERROR',\n    AUTHORIZATION_ERROR: 'AUTHORIZATION_ERROR',\n    SUBSCRIPTION_ERROR: 'SUBSCRIPTION_ERROR',\n    NOT_FOUND_ERROR: 'NOT_FOUND_ERROR',\n    CONFLICT_ERROR: 'CONFLICT_ERROR',\n    SERVER_ERROR: 'SERVER_ERROR',\n  },\n} as const;\n\n// Type for API values\nexport type ApiValue = typeof API[keyof typeof API];\n","// ============================================================================\n// ORDER CONSTANTS\n// ============================================================================\n\nimport { ORDER_STATUS, OrderStatus } from './status';\n\n// Re-export from centralized status constants\nexport { ORDER_STATUS as ORDER_STATUSES } from './status';\nexport type { OrderStatus } from './status';\n\n// ============================================================================\n// ORDER TYPES\n// ============================================================================\nexport const ORDER_TYPES = {\n  RENT: 'RENT',\n  SALE: 'SALE'\n} as const;\n\nexport type OrderType = typeof ORDER_TYPES[keyof typeof ORDER_TYPES];\n\n// ============================================================================\n// ORDER STATUS COLORS - CENTRALIZED COLOR SYSTEM\n// ============================================================================\nexport const ORDER_STATUS_COLORS = {\n  RESERVED: 'bg-red-100 text-red-800',\n  PICKUPED: 'bg-[#f19920] text-white',\n  RETURNED: 'bg-[#0F9347] text-white',\n  COMPLETED: 'bg-gray-100 text-gray-800',\n  CANCELLED: 'bg-[#b22222] text-white'\n} as const;\n\n// ============================================================================\n// ORDER TYPE COLORS\n// ============================================================================\nexport const ORDER_TYPE_COLORS = {\n  RENT: 'bg-blue-100 text-blue-800',\n  SALE: 'bg-green-100 text-green-800'\n} as const;\n\n// ============================================================================\n// ORDER STATUS ICONS\n// ============================================================================\nexport const ORDER_STATUS_ICONS = {\n  RESERVED: '📋',\n  PICKUPED: '⏳',\n  RETURNED: '✅',\n  COMPLETED: '🎉',\n  CANCELLED: '❌'\n} as const;\n\n// ============================================================================\n// ORDER TYPE ICONS\n// ============================================================================\nexport const ORDER_TYPE_ICONS = {\n  RENT: '🔄',\n  SALE: '💰'\n} as const;\n\n// ============================================================================\n// ORDER STATUS LABELS (Vietnamese)\n// ============================================================================\nexport const ORDER_STATUS_LABELS = {\n  RESERVED: 'Mới cọc',\n  PICKUPED: 'Đang thuê',\n  RETURNED: 'Đã trả',\n  COMPLETED: 'Hoàn thành',\n  CANCELLED: 'Hủy'\n} as const;\n\n// ============================================================================\n// ORDER TYPE LABELS (Vietnamese)\n// ============================================================================\nexport const ORDER_TYPE_LABELS = {\n  RENT: 'Thuê',\n  SALE: 'Bán'\n} as const;\n","// ============================================================================\n// CENTRALIZED STATUS CONSTANTS\n// ============================================================================\n// This file centralizes all status definitions used across the rental shop system.\n// All status-related constants should be defined here and imported where needed.\n\n// ============================================================================\n// SUBSCRIPTION STATUSES\n// ============================================================================\nexport const SUBSCRIPTION_STATUS = {\n  TRIAL: 'TRIAL',\n  ACTIVE: 'ACTIVE',\n  PAST_DUE: 'PAST_DUE',\n  CANCELLED: 'CANCELLED',\n  PAUSED: 'PAUSED',\n  EXPIRED: 'EXPIRED'\n} as const;\n\nexport type SubscriptionStatus = typeof SUBSCRIPTION_STATUS[keyof typeof SUBSCRIPTION_STATUS];\n\n// ============================================================================\n// ORDER STATUSES\n// ============================================================================\nexport const ORDER_STATUS = {\n  // RENT order statuses\n  RESERVED: 'RESERVED',   // New order, scheduled for pickup\n  PICKUPED: 'PICKUPED',   // Currently being rented\n  RETURNED: 'RETURNED',   // Rental completed\n  \n  // SALE order statuses\n  COMPLETED: 'COMPLETED', // Sale finalized\n  \n  // Common statuses\n  CANCELLED: 'CANCELLED'  // Order cancelled (applies to both types)\n} as const;\n\nexport type OrderStatus = typeof ORDER_STATUS[keyof typeof ORDER_STATUS];\n\n// ============================================================================\n// PAYMENT STATUSES\n// ============================================================================\nexport const PAYMENT_STATUS = {\n  PENDING: 'PENDING',     // Payment initiated but not confirmed\n  COMPLETED: 'COMPLETED', // Payment fully processed and confirmed\n  FAILED: 'FAILED',       // Payment processing failed\n  REFUNDED: 'REFUNDED',   // Payment was refunded\n  CANCELLED: 'CANCELLED'  // Payment was cancelled before processing\n} as const;\n\nexport type PaymentStatus = typeof PAYMENT_STATUS[keyof typeof PAYMENT_STATUS];\n\n// ============================================================================\n// PAYMENT METHODS\n// ============================================================================\nexport const PAYMENT_METHOD = {\n  STRIPE: 'STRIPE',\n  TRANSFER: 'TRANSFER',\n  MANUAL: 'MANUAL',\n  CASH: 'CASH',\n  CHECK: 'CHECK',\n  PAYPAL: 'PAYPAL'\n} as const;\n\nexport type PaymentMethod = typeof PAYMENT_METHOD[keyof typeof PAYMENT_METHOD];\n\n// ============================================================================\n// PAYMENT TYPES\n// ============================================================================\nexport const PAYMENT_TYPE = {\n  ORDER_PAYMENT: 'ORDER_PAYMENT',\n  SUBSCRIPTION_PAYMENT: 'SUBSCRIPTION_PAYMENT',\n  PLAN_CHANGE: 'PLAN_CHANGE',\n  PLAN_EXTENSION: 'PLAN_EXTENSION'\n} as const;\n\nexport type PaymentType = typeof PAYMENT_TYPE[keyof typeof PAYMENT_TYPE];\n\n// ============================================================================\n// ORDER TYPES\n// ============================================================================\nexport const ORDER_TYPE = {\n  RENT: 'RENT',\n  SALE: 'SALE'\n} as const;\n\nexport type OrderType = typeof ORDER_TYPE[keyof typeof ORDER_TYPE];\n\n// ============================================================================\n// USER ROLES\n// ============================================================================\nexport const USER_ROLE = {\n  ADMIN: 'ADMIN',                    // System Administrator\n  MERCHANT: 'MERCHANT',              // Business Owner\n  OUTLET_ADMIN: 'OUTLET_ADMIN',      // Outlet Manager\n  OUTLET_STAFF: 'OUTLET_STAFF'       // Outlet Employee\n} as const;\n\nexport type UserRole = typeof USER_ROLE[keyof typeof USER_ROLE];\n\n// ============================================================================\n// ENTITY STATUSES (Active/Inactive)\n// ============================================================================\nexport const ENTITY_STATUS = {\n  ACTIVE: 'active',\n  INACTIVE: 'inactive'\n} as const;\n\nexport type EntityStatus = typeof ENTITY_STATUS[keyof typeof ENTITY_STATUS];\n\n// ============================================================================\n// PRODUCT AVAILABILITY STATUSES\n// ============================================================================\nexport const PRODUCT_AVAILABILITY_STATUS = {\n  AVAILABLE: 'available',\n  OUT_OF_STOCK: 'out-of-stock',\n  UNAVAILABLE: 'unavailable',\n  DATE_CONFLICT: 'date-conflict'\n} as const;\n\nexport type ProductAvailabilityStatus = typeof PRODUCT_AVAILABILITY_STATUS[keyof typeof PRODUCT_AVAILABILITY_STATUS];\n\n// ============================================================================\n// BILLING INTERVALS\n// ============================================================================\nexport const BILLING_INTERVAL = {\n  MONTH: 'month',\n  QUARTER: 'quarter',\n  SEMI_ANNUAL: 'semiAnnual',\n  YEAR: 'year'\n} as const;\n\nexport type BillingInterval = typeof BILLING_INTERVAL[keyof typeof BILLING_INTERVAL];\n\n// ============================================================================\n// AUDIT LOG ACTIONS\n// ============================================================================\nexport const AUDIT_ACTION = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE',\n  DELETE: 'DELETE',\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n  VIEW: 'VIEW',\n  EXPORT: 'EXPORT',\n  IMPORT: 'IMPORT',\n  CANCEL: 'CANCEL',\n  APPROVE: 'APPROVE',\n  REJECT: 'REJECT'\n} as const;\n\nexport type AuditAction = typeof AUDIT_ACTION[keyof typeof AUDIT_ACTION];\n\n// ============================================================================\n// AUDIT LOG ENTITY TYPES\n// ============================================================================\nexport const AUDIT_ENTITY_TYPE = {\n  USER: 'USER',\n  MERCHANT: 'MERCHANT',\n  OUTLET: 'OUTLET',\n  CUSTOMER: 'CUSTOMER',\n  PRODUCT: 'PRODUCT',\n  ORDER: 'ORDER',\n  PAYMENT: 'PAYMENT',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  PLAN: 'PLAN',\n  CATEGORY: 'CATEGORY'\n} as const;\n\nexport type AuditEntityType = typeof AUDIT_ENTITY_TYPE[keyof typeof AUDIT_ENTITY_TYPE];\n\n// ============================================================================\n// STATUS VALIDATION HELPERS\n// ============================================================================\n\n/**\n * Check if a subscription status is active (trial or active)\n */\nexport function isSubscriptionActive(status: SubscriptionStatus): boolean {\n  return status === SUBSCRIPTION_STATUS.TRIAL || status === SUBSCRIPTION_STATUS.ACTIVE;\n}\n\n/**\n * Check if an order status is completed (returned for rent, completed for sale)\n */\nexport function isOrderCompleted(status: OrderStatus, orderType: OrderType): boolean {\n  if (orderType === ORDER_TYPE.RENT) {\n    return status === ORDER_STATUS.RETURNED;\n  }\n  return status === ORDER_STATUS.COMPLETED;\n}\n\n/**\n * Check if a payment status is successful\n */\nexport function isPaymentSuccessful(status: PaymentStatus): boolean {\n  return status === PAYMENT_STATUS.COMPLETED;\n}\n\n/**\n * Check if a payment status is pending\n */\nexport function isPaymentPending(status: PaymentStatus): boolean {\n  return status === PAYMENT_STATUS.PENDING;\n}\n\n/**\n * Check if a payment status is failed\n */\nexport function isPaymentFailed(status: PaymentStatus): boolean {\n  return status === PAYMENT_STATUS.FAILED;\n}\n\n/**\n * Check if an entity is active\n */\nexport function isEntityActive(status: EntityStatus): boolean {\n  return status === ENTITY_STATUS.ACTIVE;\n}\n\n// ============================================================================\n// STATUS DISPLAY HELPERS\n// ============================================================================\n\n/**\n * Get human-readable status label\n */\nexport function getStatusLabel(status: string, type: 'subscription' | 'order' | 'payment' | 'entity' | 'availability'): string {\n  switch (type) {\n    case 'subscription':\n      return status.charAt(0).toUpperCase() + status.slice(1).replace('_', ' ');\n    case 'order':\n      return status.charAt(0).toUpperCase() + status.slice(1).toLowerCase();\n    case 'payment':\n      return status.charAt(0).toUpperCase() + status.slice(1).toLowerCase();\n    case 'entity':\n      return status.charAt(0).toUpperCase() + status.slice(1).toLowerCase();\n    case 'availability':\n      return status.replace('-', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    default:\n      return status;\n  }\n}\n\n/**\n * Get status color class for UI components\n */\nexport function getStatusColor(status: string, type: 'subscription' | 'order' | 'payment' | 'entity' | 'availability'): string {\n  switch (type) {\n    case 'subscription':\n      switch (status) {\n        case SUBSCRIPTION_STATUS.TRIAL:\n          return 'text-blue-600 bg-blue-100';\n        case SUBSCRIPTION_STATUS.ACTIVE:\n          return 'text-green-600 bg-green-100';\n        case SUBSCRIPTION_STATUS.PAST_DUE:\n          return 'text-yellow-600 bg-yellow-100';\n        case SUBSCRIPTION_STATUS.CANCELLED:\n        case SUBSCRIPTION_STATUS.EXPIRED:\n          return 'text-red-600 bg-red-100';\n        case SUBSCRIPTION_STATUS.PAUSED:\n          return 'text-orange-600 bg-orange-100';\n        default:\n          return 'text-gray-600 bg-gray-100';\n      }\n    case 'order':\n      switch (status) {\n        case ORDER_STATUS.RESERVED:\n          return 'text-blue-600 bg-blue-100';\n        case ORDER_STATUS.PICKUPED:\n          return 'text-purple-600 bg-purple-100';\n        case ORDER_STATUS.RETURNED:\n        case ORDER_STATUS.COMPLETED:\n          return 'text-green-600 bg-green-100';\n        case ORDER_STATUS.CANCELLED:\n          return 'text-red-600 bg-red-100';\n        default:\n          return 'text-gray-600 bg-gray-100';\n      }\n    case 'payment':\n      switch (status) {\n        case PAYMENT_STATUS.PENDING:\n          return 'text-yellow-600 bg-yellow-100';\n        case PAYMENT_STATUS.COMPLETED:\n          return 'text-green-600 bg-green-100';\n        case PAYMENT_STATUS.FAILED:\n          return 'text-red-600 bg-red-100';\n        case PAYMENT_STATUS.REFUNDED:\n          return 'text-blue-600 bg-blue-100';\n        case PAYMENT_STATUS.CANCELLED:\n          return 'text-gray-600 bg-gray-100';\n        default:\n          return 'text-gray-600 bg-gray-100';\n      }\n    case 'entity':\n      switch (status) {\n        case ENTITY_STATUS.ACTIVE:\n          return 'text-green-600 bg-green-100';\n        case ENTITY_STATUS.INACTIVE:\n          return 'text-red-600 bg-red-100';\n        default:\n          return 'text-gray-600 bg-gray-100';\n      }\n    case 'availability':\n      switch (status) {\n        case PRODUCT_AVAILABILITY_STATUS.AVAILABLE:\n          return 'text-green-600 bg-green-100';\n        case PRODUCT_AVAILABILITY_STATUS.OUT_OF_STOCK:\n          return 'text-red-600 bg-red-100';\n        case PRODUCT_AVAILABILITY_STATUS.UNAVAILABLE:\n          return 'text-gray-600 bg-gray-100';\n        case PRODUCT_AVAILABILITY_STATUS.DATE_CONFLICT:\n          return 'text-yellow-600 bg-yellow-100';\n        default:\n          return 'text-gray-600 bg-gray-100';\n      }\n    default:\n      return 'text-gray-600 bg-gray-100';\n  }\n}\n\n// ============================================================================\n// STATUS FILTER OPTIONS\n// ============================================================================\n\n/**\n * Get all status options for dropdowns/filters\n */\nexport function getStatusOptions(type: 'subscription' | 'order' | 'payment' | 'entity' | 'availability') {\n  switch (type) {\n    case 'subscription':\n      return Object.values(SUBSCRIPTION_STATUS).map(status => ({\n        value: status,\n        label: getStatusLabel(status, 'subscription')\n      }));\n    case 'order':\n      return Object.values(ORDER_STATUS).map(status => ({\n        value: status,\n        label: getStatusLabel(status, 'order')\n      }));\n    case 'payment':\n      return Object.values(PAYMENT_STATUS).map(status => ({\n        value: status,\n        label: getStatusLabel(status, 'payment')\n      }));\n    case 'entity':\n      return Object.values(ENTITY_STATUS).map(status => ({\n        value: status,\n        label: getStatusLabel(status, 'entity')\n      }));\n    case 'availability':\n      return Object.values(PRODUCT_AVAILABILITY_STATUS).map(status => ({\n        value: status,\n        label: getStatusLabel(status, 'availability')\n      }));\n    default:\n      return [];\n  }\n}\n","// ============================================================================\n// SIMPLE SUBSCRIPTION CONFIGURATION\n// ============================================================================\n// Simple subscription model without complex pricing\n\nexport interface PlanLimits {\n  outlets: number;             // Maximum number of outlets allowed (-1 for unlimited)\n  users: number;               // Maximum number of users allowed (-1 for unlimited)\n  products: number;            // Maximum number of products allowed (-1 for unlimited)\n  customers: number;           // Maximum number of customers allowed (-1 for unlimited)\n  orders: number;              // Maximum number of orders allowed (-1 for unlimited)\n}\n\n// ============================================================================\n// INTERFACES\n// ============================================================================\n\nexport interface PlanFeature {\n  name: string;\n  description: string;\n  included: boolean;\n}\n\nexport interface PlanConfig {\n  id: string;\n  name: string;\n  description: string;\n  basePrice: number;\n  currency: string;\n  limits: PlanLimits;\n  features: PlanFeature[];\n  platform: 'mobile' | 'mobile+web';  // Platform access level\n  publicProductCheck: boolean;         // Can share product links publicly\n  isPopular: boolean;\n  isActive: boolean;\n  sortOrder: number;\n  color: string;\n  badge?: string;\n  upgradeFrom?: string[];      // Plans that can upgrade to this one\n  downgradeTo?: string[];      // Plans that this can downgrade to\n}\n\n// ============================================================================\n// BILLING CYCLES\n// ============================================================================\n\nexport const BILLING_CYCLES = {\n  MONTHLY: {\n    id: 'monthly',\n    name: 'Monthly',\n    duration: 1,\n    unit: 'month',\n    discount: 0\n  },\n  QUARTERLY: {\n    id: 'quarterly',\n    name: 'Quarterly',\n    duration: 3,\n    unit: 'months',\n    discount: 0.05 // 5% discount\n  },\n  YEARLY: {\n    id: 'yearly',\n    name: 'Yearly',\n    duration: 12,\n    unit: 'months',\n    discount: 0.2 // 20% discount\n  }\n};\n\n// ============================================================================\n// RENEWAL DURATIONS\n// ============================================================================\n\nexport const RENEWAL_DURATIONS = [\n  {\n    id: 'monthly',\n    name: 'Monthly',\n    months: 1,\n    duration: 1,\n    unit: 'month',\n    description: 'Renew every month',\n    isPopular: false\n  },\n  {\n    id: 'quarterly',\n    name: 'Quarterly',\n    months: 3,\n    duration: 3,\n    unit: 'months',\n    description: 'Save 5% with quarterly billing',\n    isPopular: false\n  },\n  {\n    id: 'semiannual',\n    name: '6 Months',\n    months: 6,\n    duration: 6,\n    unit: 'months',\n    description: 'Save 10% with 6-month billing',\n    isPopular: false\n  },\n  {\n    id: 'yearly',\n    name: 'Yearly',\n    months: 12,\n    duration: 12,\n    unit: 'months',\n    description: 'Save 20% with annual billing',\n    isPopular: true\n  }\n];\n\n// ============================================================================\n// TRIAL CONFIGURATION\n// ============================================================================\n\nexport const TRIAL_CONFIG = {\n  DEFAULT_TRIAL_DAYS: 14,\n  TRIAL_NOTIFICATIONS: {\n    DAYS_BEFORE_EXPIRY: [7, 3, 1] as readonly number[]\n  }\n};\n\n// ============================================================================\n// SUBSCRIPTION PLANS CONFIGURATION\n// ============================================================================\n\nexport const SUBSCRIPTION_PLANS: Record<string, PlanConfig> = {\n  TRIAL: {\n    id: 'trial',\n    name: 'Trial',\n    description: 'Free trial with starter plan limits',\n    basePrice: 0, // Free trial\n    currency: 'VND',\n    limits: {\n      outlets: 1,\n      users: 3,\n      products: 500,\n      customers: 2000,\n      orders: 2000\n    },\n    features: [\n      { name: 'Mobile app access', description: 'Access your business on mobile devices', included: true },\n      { name: 'Basic inventory management', description: 'Track products and stock levels', included: true },\n      { name: 'Customer management', description: 'Store customer information and history', included: true },\n      { name: 'Order processing', description: 'Create and manage rental orders', included: true },\n      { name: 'Basic reporting', description: 'View sales and rental reports', included: true },\n      { name: 'Public product catalog', description: 'Share product list publicly with customers', included: true },\n      { name: 'Product public check', description: 'Send public links to customers to view products and pricing', included: true }\n    ],\n    platform: 'mobile',\n    publicProductCheck: true,\n    isPopular: false,\n    isActive: true,\n    sortOrder: 0,\n    color: 'green',\n    badge: 'Free Trial',\n    upgradeFrom: [],\n    downgradeTo: ['basic']\n  },\n\n  BASIC: {\n    id: 'basic',\n    name: 'Basic',\n    description: 'Perfect for small rental businesses',\n    basePrice: 79000, // 79k VND\n    currency: 'VND',\n    limits: {\n      outlets: 1,\n      users: 3,\n      products: 500,\n      customers: 2000,\n      orders: 2000\n    },\n    features: [\n      { name: 'Mobile app access', description: 'Access your business on mobile devices', included: true },\n      { name: 'Basic inventory management', description: 'Track products and stock levels', included: true },\n      { name: 'Customer management', description: 'Store customer information and history', included: true },\n      { name: 'Order processing', description: 'Create and manage rental orders', included: true },\n      { name: 'Basic reporting', description: 'View sales and rental reports', included: true },\n      { name: 'Public product catalog', description: 'Share product list publicly with customers', included: true },\n      { name: 'Product public check', description: 'Send public links to customers to view products and pricing', included: true }\n    ],\n    platform: 'mobile',\n    publicProductCheck: true,\n    isPopular: false,\n    isActive: true,\n    sortOrder: 1,\n    color: 'blue',\n    upgradeFrom: [],\n    downgradeTo: []\n  },\n\n  PROFESSIONAL: {\n    id: 'professional',\n    name: 'Professional',\n    description: 'Ideal for growing rental businesses with web access',\n    basePrice: 199000, // 199k VND\n    currency: 'VND',\n    limits: {\n      outlets: 1,\n      users: 8,\n      products: 5000,\n      customers: 10000,\n      orders: 10000\n    },\n    features: [\n      { name: 'All Basic features', description: 'Includes all Basic plan features', included: true },\n      { name: 'Web dashboard access', description: 'Full web-based management interface', included: true },\n      { name: 'Advanced reporting & analytics', description: 'Detailed business insights and trends', included: true },\n      { name: 'Inventory forecasting', description: 'Predict demand and optimize stock levels', included: true },\n      { name: 'Online payments', description: 'Accept online payments and deposits', included: true },\n      { name: 'API integration', description: 'Connect with third-party tools', included: true },\n      { name: 'Team collaboration tools', description: 'Manage team permissions and workflows', included: true },\n      { name: 'Priority support', description: 'Fast response times for support', included: true }\n    ],\n    platform: 'mobile+web',\n    publicProductCheck: true,\n    isPopular: true,\n    isActive: true,\n    sortOrder: 2,\n    color: 'purple',\n    badge: 'Most Popular',\n    upgradeFrom: ['basic'],\n    downgradeTo: ['basic']\n  },\n\n  ENTERPRISE: {\n    id: 'enterprise',\n    name: 'Enterprise',\n    description: 'For large rental operations with multiple outlets',\n    basePrice: 399000, // 399k VND\n    currency: 'VND',\n    limits: {\n      outlets: 3,\n      users: 15,\n      products: 15000,\n      customers: 50000,\n      orders: 50000\n    },\n    features: [\n      { name: 'All Professional features', description: 'Includes all Professional plan features', included: true },\n      { name: 'Multiple outlets', description: 'Manage multiple rental locations', included: true },\n      { name: 'Advanced team management', description: 'Sophisticated user roles and permissions', included: true },\n      { name: 'Custom integrations', description: 'Tailored third-party integrations', included: true },\n      { name: 'Dedicated account manager', description: 'Personal support representative', included: true },\n      { name: 'Custom reporting', description: 'Tailored analytics and reporting', included: true },\n      { name: 'White-label solution', description: 'Brand the platform with your company identity', included: true },\n      { name: '24/7 phone support', description: 'Round-the-clock support via phone', included: true }\n    ],\n    platform: 'mobile+web',\n    publicProductCheck: true,\n    isPopular: false,\n    isActive: true,\n    sortOrder: 3,\n    color: 'gold',\n    badge: 'Premium',\n    upgradeFrom: ['basic', 'professional'],\n    downgradeTo: ['professional']\n  }\n};\n\n// ============================================================================\n// HELPER FUNCTIONS\n// ============================================================================\n\n/**\n * Get plan configuration by ID\n */\nexport function getPlan(planId: string): PlanConfig | null {\n  const plan = SUBSCRIPTION_PLANS[planId.toUpperCase()];\n  return plan || null;\n}\n\n/**\n * Get all available plans\n */\nexport function getAllPlans(): PlanConfig[] {\n  return Object.values(SUBSCRIPTION_PLANS).sort((a, b) => a.sortOrder - b.sortOrder);\n}\n\n/**\n * Get active plans only\n */\nexport function getActivePlans(): PlanConfig[] {\n  return getAllPlans().filter(plan => plan.isActive);\n}\n\n/**\n * Get plan limits by plan ID\n */\nexport function getPlanLimits(planId: string): PlanLimits | null {\n  const plan = getPlan(planId);\n  return plan ? plan.limits : null;\n}\n\n/**\n * Check if plan has web access\n */\nexport function hasWebAccess(planId: string): boolean {\n  const plan = getPlan(planId);\n  return plan ? plan.platform === 'mobile+web' : false;\n}\n\n/**\n * Check if plan has mobile access\n */\nexport function hasMobileAccess(planId: string): boolean {\n  const plan = getPlan(planId);\n  return plan ? plan.platform === 'mobile' || plan.platform === 'mobile+web' : false;\n}\n\n/**\n * Check if plan has public product check feature\n */\nexport function hasProductPublicCheck(planId: string): boolean {\n  const plan = getPlan(planId);\n  return plan ? plan.publicProductCheck : false;\n}\n\n/**\n * Get plan platform\n */\nexport function getPlanPlatform(planId: string): 'mobile' | 'mobile+web' | null {\n  const plan = getPlan(planId);\n  return plan ? plan.platform : null;\n}\n\n/**\n * Check if plan is unlimited for a specific entity type\n */\nexport function isUnlimitedPlan(planId: string, entityType: keyof PlanLimits): boolean {\n  const limits = getPlanLimits(planId);\n  if (!limits) return false;\n  return limits[entityType] === -1;\n}\n\n/**\n * Get trial notification days\n */\nexport function getTrialNotificationDays(): readonly number[] {\n  return TRIAL_CONFIG.TRIAL_NOTIFICATIONS.DAYS_BEFORE_EXPIRY;\n}\n\n/**\n * Get default trial days\n */\nexport function getDefaultTrialDays(): number {\n  return TRIAL_CONFIG.DEFAULT_TRIAL_DAYS;\n}\n\n/**\n * Get plan comparison data for display\n */\nexport function getPlanComparison() {\n  const plans = getActivePlans();\n  \n  return {\n    plans: plans.map(plan => ({\n      id: plan.id,\n      name: plan.name,\n      description: plan.description,\n      basePrice: plan.basePrice,\n      currency: plan.currency,\n      badge: plan.badge,\n      color: plan.color\n    })),\n    features: [\n      { name: 'Mobile App', basic: true, professional: true, enterprise: true },\n      { name: 'Web Dashboard', basic: false, professional: true, enterprise: true },\n      { name: 'Products', basic: '500', professional: '5,000', enterprise: '15,000' },\n      { name: 'Customers', basic: '2,000', professional: '10,000', enterprise: '50,000' },\n      { name: 'Users', basic: '3', professional: '8', enterprise: '15' },\n      { name: 'Outlets', basic: '1', professional: '1', enterprise: '3' },\n      { name: 'Orders', basic: '2,000', professional: '10,000', enterprise: '50,000' },\n      { name: 'Product Public Check', basic: true, professional: true, enterprise: true },\n      { name: 'Advanced Analytics', basic: false, professional: true, enterprise: true },\n      { name: 'API Access', basic: false, professional: true, enterprise: true },\n      { name: 'Priority Support', basic: false, professional: true, enterprise: true },\n      { name: '24/7 Phone Support', basic: false, professional: false, enterprise: true }\n    ]\n  };\n}\n\n/**\n * Validate plan configuration\n */\nexport function validatePlanConfig(plan: PlanConfig): { isValid: boolean; errors: string[] } {\n  const errors: string[] = [];\n\n  if (!plan.id || plan.id.trim() === '') {\n    errors.push('Plan ID is required');\n  }\n\n  if (!plan.name || plan.name.trim() === '') {\n    errors.push('Plan name is required');\n  }\n\n  if (plan.basePrice < 0) {\n    errors.push('Base price must be non-negative');\n  }\n\n  if (!plan.limits) {\n    errors.push('Plan limits are required');\n  } else {\n    if (plan.limits.outlets < -1) {\n      errors.push('Outlets limit must be -1 (unlimited) or positive');\n    }\n    if (plan.limits.users < -1) {\n      errors.push('Users limit must be -1 (unlimited) or positive');\n    }\n    if (plan.limits.products < -1) {\n      errors.push('Products limit must be -1 (unlimited) or positive');\n    }\n    if (plan.limits.customers < -1) {\n      errors.push('Customers limit must be -1 (unlimited) or positive');\n    }\n    if (plan.limits.orders < -1) {\n      errors.push('Orders limit must be -1 (unlimited) or positive');\n    }\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n}","// ============================================================================\n// PRICING CONFIGURATION CONSTANTS\n// ============================================================================\n\n// Local type definitions to avoid circular dependency\nexport type BusinessType = 'CLOTHING' | 'VEHICLE' | 'EQUIPMENT' | 'GENERAL';\nexport type PricingType = 'FIXED' | 'HOURLY' | 'DAILY' | 'WEEKLY';\n\n// ============================================================================\n// BUSINESS TYPE & PRICING TYPE DESCRIPTIONS\n// ============================================================================\n\nexport interface BusinessTypeOption {\n  value: BusinessType;\n  label: string;\n  description: string;\n  icon: string;\n}\n\nexport interface PricingTypeOption {\n  value: PricingType;\n  label: string;\n  description: string;\n  icon: string;\n}\n\nexport const BUSINESS_TYPE_OPTIONS: BusinessTypeOption[] = [\n  {\n    value: 'GENERAL',\n    label: 'General Rental',\n    description: 'Mixed rental business with various product types',\n    icon: ''\n  },\n  {\n    value: 'CLOTHING',\n    label: 'Clothing & Fashion',\n    description: 'Rent or sell clothing, accessories, and fashion items',\n    icon: ''\n  },\n  {\n    value: 'VEHICLE',\n    label: 'Vehicle Rental',\n    description: 'Car, motorcycle, bicycle, and vehicle rental services',\n    icon: ''\n  },\n  {\n    value: 'EQUIPMENT',\n    label: 'Equipment Rental',\n    description: 'Tools, machinery, and equipment rental services',\n    icon: ''\n  }\n];\n\nexport const PRICING_TYPE_OPTIONS: PricingTypeOption[] = [\n  {\n    value: 'FIXED',\n    label: 'Fixed Price',\n    description: 'Same price regardless of rental duration',\n    icon: ''\n  },\n  {\n    value: 'HOURLY',\n    label: 'Hourly Pricing',\n    description: 'Price calculated per hour of rental',\n    icon: ''\n  },\n  {\n    value: 'DAILY',\n    label: 'Daily Pricing',\n    description: 'Price calculated per day of rental',\n    icon: ''\n  },\n  {\n    value: 'WEEKLY',\n    label: 'Weekly Pricing',\n    description: 'Price calculated per week of rental',\n    icon: ''\n  }\n];\n\nexport interface PricingBusinessRules {\n  requireRentalDates: boolean;\n  showPricingOptions: boolean;\n}\n\nexport interface PricingDurationLimits {\n  minDuration: number;\n  maxDuration: number;\n  defaultDuration: number;\n}\n\nexport interface MerchantPricingConfig {\n  businessType: BusinessType;\n  defaultPricingType: PricingType;\n  businessRules: PricingBusinessRules;\n  durationLimits: PricingDurationLimits;\n}\n\n// ============================================================================\n// BUSINESS TYPE DEFAULTS\n// ============================================================================\n\n/**\n * Default pricing configuration for each business type\n */\nexport const BUSINESS_TYPE_DEFAULTS: Record<BusinessType, MerchantPricingConfig> = {\n  CLOTHING: {\n    businessType: 'CLOTHING',\n    defaultPricingType: 'FIXED',\n    businessRules: {\n      requireRentalDates: false,\n      showPricingOptions: false\n    },\n    durationLimits: {\n      minDuration: 1,\n      maxDuration: 1,\n      defaultDuration: 1\n    }\n  },\n  \n  VEHICLE: {\n    businessType: 'VEHICLE',\n    defaultPricingType: 'HOURLY',\n    businessRules: {\n      requireRentalDates: true,\n      showPricingOptions: true\n    },\n    durationLimits: {\n      minDuration: 1,      // 1 hour\n      maxDuration: 168,    // 1 week (24*7)\n      defaultDuration: 4   // 4 hours\n    }\n  },\n  \n  EQUIPMENT: {\n    businessType: 'EQUIPMENT',\n    defaultPricingType: 'DAILY',\n    businessRules: {\n      requireRentalDates: true,\n      showPricingOptions: false\n    },\n    durationLimits: {\n      minDuration: 1,      // 1 day\n      maxDuration: 30,     // 30 days\n      defaultDuration: 3   // 3 days\n    }\n  },\n  \n  GENERAL: {\n    businessType: 'GENERAL',\n    defaultPricingType: 'FIXED',\n    businessRules: {\n      requireRentalDates: false,\n      showPricingOptions: false\n    },\n    durationLimits: {\n      minDuration: 1,\n      maxDuration: 1,\n      defaultDuration: 1\n    }\n  }\n};\n\n// ============================================================================\n// LABELS AND DESCRIPTIONS\n// ============================================================================\n\n/**\n * Human-readable labels for pricing types\n */\nexport const PRICING_TYPE_LABELS = {\n  FIXED: 'Fixed Price',\n  HOURLY: 'Hourly',\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly'\n} as const;\n\n/**\n * Human-readable labels for business types\n */\nexport const BUSINESS_TYPE_LABELS = {\n  CLOTHING: 'Clothing Rental',\n  VEHICLE: 'Vehicle Rental',\n  EQUIPMENT: 'Equipment Rental',\n  GENERAL: 'General Rental'\n} as const;\n\n/**\n * Descriptions for pricing types\n */\nexport const PRICING_TYPE_DESCRIPTIONS = {\n  FIXED: 'One price per rental (e.g., equipment rental)',\n  HOURLY: 'Price per hour (e.g., vehicles, tools)',\n  DAILY: 'Price per day (e.g., construction equipment)',\n  WEEKLY: 'Price per week (e.g., long-term rentals)'\n} as const;\n\n/**\n * Descriptions for business types\n */\nexport const BUSINESS_TYPE_DESCRIPTIONS = {\n  CLOTHING: 'Dresses, suits, costumes, accessories',\n  VEHICLE: 'Cars, bikes, motorcycles',\n  EQUIPMENT: 'Tools, machinery, equipment',\n  GENERAL: 'Various items and services'\n} as const;\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Get default pricing configuration for business type\n */\nexport function getDefaultPricingConfig(businessType: BusinessType): MerchantPricingConfig {\n  return BUSINESS_TYPE_DEFAULTS[businessType];\n}\n\n/**\n * Get pricing type label\n */\nexport function getPricingTypeLabel(pricingType: PricingType): string {\n  return PRICING_TYPE_LABELS[pricingType];\n}\n\n/**\n * Get business type label\n */\nexport function getBusinessTypeLabel(businessType: BusinessType): string {\n  return BUSINESS_TYPE_LABELS[businessType];\n}\n\n/**\n * Get pricing type description\n */\nexport function getPricingTypeDescription(pricingType: PricingType): string {\n  return PRICING_TYPE_DESCRIPTIONS[pricingType];\n}\n\n/**\n * Get business type description\n */\nexport function getBusinessTypeDescription(businessType: BusinessType): string {\n  return BUSINESS_TYPE_DESCRIPTIONS[businessType];\n}\n\n/**\n * Check if pricing type requires rental dates\n */\nexport function requiresRentalDates(pricingType: PricingType): boolean {\n  return pricingType !== 'FIXED';\n}\n\n/**\n * Get duration unit for pricing type\n */\nexport function getDurationUnit(pricingType: PricingType): string {\n  switch (pricingType) {\n    case 'HOURLY': return 'hour';\n    case 'DAILY': return 'day';\n    case 'WEEKLY': return 'week';\n    case 'FIXED': return 'rental';\n    default: return 'unit';\n  }\n}\n","// ============================================================================\n// COUNTRY CONSTANTS\n// ============================================================================\n\nexport interface Country {\n  code: string;\n  name: string;\n  flag: string;\n  currency: string;\n  phoneCode: string;\n}\n\nexport const COUNTRIES: Country[] = [\n  // North America\n  { code: 'US', name: 'United States', flag: '🇺🇸', currency: 'USD', phoneCode: '+1' },\n  { code: 'CA', name: 'Canada', flag: '🇨🇦', currency: 'CAD', phoneCode: '+1' },\n  { code: 'MX', name: 'Mexico', flag: '🇲🇽', currency: 'MXN', phoneCode: '+52' },\n\n  // Europe\n  { code: 'GB', name: 'United Kingdom', flag: '🇬🇧', currency: 'GBP', phoneCode: '+44' },\n  { code: 'DE', name: 'Germany', flag: '🇩🇪', currency: 'EUR', phoneCode: '+49' },\n  { code: 'FR', name: 'France', flag: '🇫🇷', currency: 'EUR', phoneCode: '+33' },\n  { code: 'IT', name: 'Italy', flag: '🇮🇹', currency: 'EUR', phoneCode: '+39' },\n  { code: 'ES', name: 'Spain', flag: '🇪🇸', currency: 'EUR', phoneCode: '+34' },\n  { code: 'NL', name: 'Netherlands', flag: '🇳🇱', currency: 'EUR', phoneCode: '+31' },\n  { code: 'CH', name: 'Switzerland', flag: '🇨🇭', currency: 'CHF', phoneCode: '+41' },\n  { code: 'SE', name: 'Sweden', flag: '🇸🇪', currency: 'SEK', phoneCode: '+46' },\n  { code: 'NO', name: 'Norway', flag: '🇳🇴', currency: 'NOK', phoneCode: '+47' },\n  { code: 'DK', name: 'Denmark', flag: '🇩🇰', currency: 'DKK', phoneCode: '+45' },\n  { code: 'FI', name: 'Finland', flag: '🇫🇮', currency: 'EUR', phoneCode: '+358' },\n  { code: 'AT', name: 'Austria', flag: '🇦🇹', currency: 'EUR', phoneCode: '+43' },\n  { code: 'BE', name: 'Belgium', flag: '🇧🇪', currency: 'EUR', phoneCode: '+32' },\n  { code: 'IE', name: 'Ireland', flag: '🇮🇪', currency: 'EUR', phoneCode: '+353' },\n  { code: 'PT', name: 'Portugal', flag: '🇵🇹', currency: 'EUR', phoneCode: '+351' },\n\n  // Asia Pacific\n  { code: 'AU', name: 'Australia', flag: '🇦🇺', currency: 'AUD', phoneCode: '+61' },\n  { code: 'NZ', name: 'New Zealand', flag: '🇳🇿', currency: 'NZD', phoneCode: '+64' },\n  { code: 'JP', name: 'Japan', flag: '🇯🇵', currency: 'JPY', phoneCode: '+81' },\n  { code: 'KR', name: 'South Korea', flag: '🇰🇷', currency: 'KRW', phoneCode: '+82' },\n  { code: 'SG', name: 'Singapore', flag: '🇸🇬', currency: 'SGD', phoneCode: '+65' },\n  { code: 'HK', name: 'Hong Kong', flag: '🇭🇰', currency: 'HKD', phoneCode: '+852' },\n  { code: 'TW', name: 'Taiwan', flag: '🇹🇼', currency: 'TWD', phoneCode: '+886' },\n  { code: 'MY', name: 'Malaysia', flag: '🇲🇾', currency: 'MYR', phoneCode: '+60' },\n  { code: 'TH', name: 'Thailand', flag: '🇹🇭', currency: 'THB', phoneCode: '+66' },\n  { code: 'ID', name: 'Indonesia', flag: '🇮🇩', currency: 'IDR', phoneCode: '+62' },\n  { code: 'PH', name: 'Philippines', flag: '🇵🇭', currency: 'PHP', phoneCode: '+63' },\n  { code: 'VN', name: 'Vietnam', flag: '🇻🇳', currency: 'VND', phoneCode: '+84' },\n  { code: 'IN', name: 'India', flag: '🇮🇳', currency: 'INR', phoneCode: '+91' },\n  { code: 'CN', name: 'China', flag: '🇨🇳', currency: 'CNY', phoneCode: '+86' },\n\n  // Middle East & Africa\n  { code: 'AE', name: 'United Arab Emirates', flag: '🇦🇪', currency: 'AED', phoneCode: '+971' },\n  { code: 'SA', name: 'Saudi Arabia', flag: '🇸🇦', currency: 'SAR', phoneCode: '+966' },\n  { code: 'IL', name: 'Israel', flag: '🇮🇱', currency: 'ILS', phoneCode: '+972' },\n  { code: 'ZA', name: 'South Africa', flag: '🇿🇦', currency: 'ZAR', phoneCode: '+27' },\n  { code: 'EG', name: 'Egypt', flag: '🇪🇬', currency: 'EGP', phoneCode: '+20' },\n  { code: 'MA', name: 'Morocco', flag: '🇲🇦', currency: 'MAD', phoneCode: '+212' },\n  { code: 'NG', name: 'Nigeria', flag: '🇳🇬', currency: 'NGN', phoneCode: '+234' },\n  { code: 'KE', name: 'Kenya', flag: '🇰🇪', currency: 'KES', phoneCode: '+254' },\n\n  // South America\n  { code: 'BR', name: 'Brazil', flag: '🇧🇷', currency: 'BRL', phoneCode: '+55' },\n  { code: 'AR', name: 'Argentina', flag: '🇦🇷', currency: 'ARS', phoneCode: '+54' },\n  { code: 'CL', name: 'Chile', flag: '🇨🇱', currency: 'CLP', phoneCode: '+56' },\n  { code: 'CO', name: 'Colombia', flag: '🇨🇴', currency: 'COP', phoneCode: '+57' },\n  { code: 'PE', name: 'Peru', flag: '🇵🇪', currency: 'PEN', phoneCode: '+51' },\n  { code: 'UY', name: 'Uruguay', flag: '🇺🇾', currency: 'UYU', phoneCode: '+598' },\n\n  // Central America & Caribbean\n  { code: 'CR', name: 'Costa Rica', flag: '🇨🇷', currency: 'CRC', phoneCode: '+506' },\n  { code: 'PA', name: 'Panama', flag: '🇵🇦', currency: 'PAB', phoneCode: '+507' },\n  { code: 'GT', name: 'Guatemala', flag: '🇬🇹', currency: 'GTQ', phoneCode: '+502' },\n  { code: 'CU', name: 'Cuba', flag: '🇨🇺', currency: 'CUP', phoneCode: '+53' },\n  { code: 'DO', name: 'Dominican Republic', flag: '🇩🇴', currency: 'DOP', phoneCode: '+1' },\n  { code: 'JM', name: 'Jamaica', flag: '🇯🇲', currency: 'JMD', phoneCode: '+1' },\n];\n\n// ============================================================================\n// UTILITY FUNCTIONS\n// ============================================================================\n\n/**\n * Get country by code\n */\nexport function getCountryByCode(code: string): Country | undefined {\n  return COUNTRIES.find(country => country.code === code);\n}\n\n/**\n * Get country by name\n */\nexport function getCountryByName(name: string): Country | undefined {\n  return COUNTRIES.find(country => country.name === name);\n}\n\n/**\n * Get all countries sorted by name\n */\nexport function getCountriesSorted(): Country[] {\n  return [...COUNTRIES].sort((a, b) => a.name.localeCompare(b.name));\n}\n\n/**\n * Get countries by region (for future use)\n */\nexport function getCountriesByRegion(region: string): Country[] {\n  const regions: Record<string, string[]> = {\n    'north-america': ['US', 'CA', 'MX'],\n    'europe': ['GB', 'DE', 'FR', 'IT', 'ES', 'NL', 'CH', 'SE', 'NO', 'DK', 'FI', 'AT', 'BE', 'IE', 'PT'],\n    'asia-pacific': ['AU', 'NZ', 'JP', 'KR', 'SG', 'HK', 'TW', 'MY', 'TH', 'ID', 'PH', 'VN', 'IN', 'CN'],\n    'middle-east-africa': ['AE', 'SA', 'IL', 'ZA', 'EG', 'MA', 'NG', 'KE'],\n    'south-america': ['BR', 'AR', 'CL', 'CO', 'PE', 'UY'],\n    'central-america-caribbean': ['CR', 'PA', 'GT', 'CU', 'DO', 'JM']\n  };\n\n  const countryCodes = regions[region] || [];\n  return COUNTRIES.filter(country => countryCodes.includes(country.code));\n}\n\n/**\n * Format country display name with flag\n */\nexport function formatCountryDisplay(country: Country): string {\n  return `${country.flag} ${country.name}`;\n}\n\n/**\n * Get default country (Vietnam)\n */\nexport function getDefaultCountry(): Country {\n  return COUNTRIES.find(country => country.code === 'VN') || COUNTRIES[0]; // Vietnam or fallback to first country\n}\n"],"mappings":"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","names":[]}