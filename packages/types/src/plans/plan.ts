// ============================================================================
// PLAN TYPES
// ============================================================================

export interface PlanLimits {
  outlets: number;             // Maximum number of outlets allowed (-1 for unlimited)
  users: number;               // Maximum number of users allowed (-1 for unlimited)
  products: number;            // Maximum number of products allowed (-1 for unlimited)
  customers: number;           // Maximum number of customers allowed (-1 for unlimited)
  orders: number;              // Maximum number of orders allowed (-1 for unlimited)
  allowWebAccess?: boolean;    // Whether this plan allows web access (default: true)
  allowMobileAccess?: boolean; // Whether this plan allows mobile access (default: true)
}

export interface PlanPricing {
  price: number;
  discount: number;
  savings: number;
}

export interface Plan {
  id: number;                    // Auto-incrementing integer ID
  name: string;                  // Plan name (e.g., "Basic", "Professional", "Enterprise")
  description: string;           // Plan description
  basePrice: number;             // Base price for monthly calculations
  currency: string;              // Currency code (USD, VND)
  trialDays: number;             // Number of trial days
  limits: PlanLimits;            // Plan limits (stored as JSON)
  features: string[];            // Array of feature strings (stored as JSON)
  isActive: boolean;             // Whether the plan is active
  isPopular: boolean;            // Whether to highlight this plan
  sortOrder: number;             // Display order
  pricing: {
    monthly: PlanPricing;
    quarterly: PlanPricing;
    sixMonths: PlanPricing;
    yearly: PlanPricing;
  };
  createdAt: Date;
  updatedAt: Date;
  deletedAt?: Date;              // Soft delete timestamp
}

export type BillingCycle = 'monthly' | 'quarterly' | 'semi_annual' | 'annual';

export interface BillingCycleOption {
  value: BillingCycle;
  label: string;
  months: number;
  description: string;
}

export interface PlanCreateInput {
  name: string;
  description: string;
  basePrice: number;             // Base price for monthly calculations
  currency?: string;
  trialDays: number;
  limits: PlanLimits;
  features: string[];
  // pricing is auto-generated by database based on basePrice, not required in input
  isActive?: boolean;
  isPopular?: boolean;
  sortOrder?: number;
  // id is auto-generated by database, not required in input
}

export interface PlanUpdateInput {
  name?: string;
  description?: string;
  basePrice?: number;            // Base price for monthly calculations
  currency?: string;
  trialDays?: number;
  limits?: Partial<PlanLimits>;
  features?: string[];
  pricing?: {
    monthly?: PlanPricing;
    quarterly?: PlanPricing;
    sixMonths?: PlanPricing;
    yearly?: PlanPricing;
  };
  isActive?: boolean;
  isPopular?: boolean;
  sortOrder?: number;
}

export interface PlanFilters {
  search?: string;
  isActive?: boolean;
  isPopular?: boolean;
  limit?: number;
  offset?: number;
  sortBy?: 'name' | 'price' | 'basePrice' | 'createdAt' | 'sortOrder';  // âœ… Updated: Support both price and basePrice
  sortOrder?: 'asc' | 'desc';
}

export interface PlanFeature {
  id: number;
  name: string;
  description: string;
  icon: string;
  isIncluded: boolean;
}

export interface PlanComparison {
  basic: Plan;
  professional: Plan;
  enterprise: Plan;
}

// ============================================================================
// PLAN VARIANT TYPES - FOR BACKWARD COMPATIBILITY
// ============================================================================

/**
 * Plan variant interface
 * Used for plan variants in admin/client apps
 */
export interface PlanVariant {
  id: number;
  name: string;
  planId: number;
  duration: number; // months
  price: number;
  discount: number;
  savings: number;
  isActive: boolean;
  createdAt: Date | string;
  updatedAt: Date | string;
  plan?: Plan;
}

/**
 * Plan variant create input
 * Used for creating plan variants
 */
export interface PlanVariantCreateInput {
  name: string;
  planId: number;
  duration: number;
  price: number;
  discount: number;
  isActive?: boolean;
}

/**
 * Plan variant update input
 * Used for updating plan variants
 */
export interface PlanVariantUpdateInput {
  name?: string;
  duration?: number;
  price?: number;
  discount?: number;
  isActive?: boolean;
}

/**
 * Plan variant filters
 * Used for filtering plan variants
 */
export interface PlanVariantFilters {
  planId?: number;
  isActive?: boolean;
  search?: string;
  limit?: number;
  offset?: number;
}
