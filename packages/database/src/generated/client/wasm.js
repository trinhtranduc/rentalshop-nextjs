
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  merchantId: 'merchantId',
  outletId: 'outletId',
  deletedAt: 'deletedAt'
};

exports.Prisma.MerchantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  businessType: 'businessType',
  pricingType: 'pricingType',
  taxId: 'taxId',
  website: 'website',
  description: 'description',
  pricingConfig: 'pricingConfig',
  planId: 'planId',
  subscriptionStatus: 'subscriptionStatus',
  totalRevenue: 'totalRevenue',
  lastActiveAt: 'lastActiveAt',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OutletScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  description: 'description',
  isActive: 'isActive',
  isDefault: 'isDefault',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  merchantId: 'merchantId',
  phone: 'phone',
  city: 'city',
  country: 'country',
  state: 'state',
  zipCode: 'zipCode'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  merchantId: 'merchantId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  barcode: 'barcode',
  totalStock: 'totalStock',
  rentPrice: 'rentPrice',
  salePrice: 'salePrice',
  deposit: 'deposit',
  images: 'images',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  merchantId: 'merchantId',
  categoryId: 'categoryId'
};

exports.Prisma.OutletStockScalarFieldEnum = {
  id: 'id',
  stock: 'stock',
  available: 'available',
  renting: 'renting',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  productId: 'productId',
  outletId: 'outletId'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  dateOfBirth: 'dateOfBirth',
  idNumber: 'idNumber',
  idType: 'idType',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  merchantId: 'merchantId'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  orderType: 'orderType',
  status: 'status',
  totalAmount: 'totalAmount',
  depositAmount: 'depositAmount',
  securityDeposit: 'securityDeposit',
  damageFee: 'damageFee',
  lateFee: 'lateFee',
  discountType: 'discountType',
  discountValue: 'discountValue',
  discountAmount: 'discountAmount',
  pickupPlanAt: 'pickupPlanAt',
  returnPlanAt: 'returnPlanAt',
  pickedUpAt: 'pickedUpAt',
  returnedAt: 'returnedAt',
  rentalDuration: 'rentalDuration',
  isReadyToDeliver: 'isReadyToDeliver',
  collateralType: 'collateralType',
  collateralDetails: 'collateralDetails',
  notes: 'notes',
  pickupNotes: 'pickupNotes',
  returnNotes: 'returnNotes',
  damageNotes: 'damageNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  outletId: 'outletId',
  customerId: 'customerId',
  createdById: 'createdById'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  deposit: 'deposit',
  orderId: 'orderId',
  productId: 'productId',
  notes: 'notes',
  rentalDays: 'rentalDays'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  currency: 'currency',
  method: 'method',
  type: 'type',
  status: 'status',
  reference: 'reference',
  transactionId: 'transactionId',
  invoiceNumber: 'invoiceNumber',
  description: 'description',
  notes: 'notes',
  failureReason: 'failureReason',
  metadata: 'metadata',
  processedAt: 'processedAt',
  processedBy: 'processedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  orderId: 'orderId',
  subscriptionId: 'subscriptionId',
  merchantId: 'merchantId'
};

exports.Prisma.PlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  basePrice: 'basePrice',
  currency: 'currency',
  trialDays: 'trialDays',
  limits: 'limits',
  features: 'features',
  isActive: 'isActive',
  isPopular: 'isPopular',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  merchantId: 'merchantId',
  planId: 'planId',
  status: 'status',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  trialStart: 'trialStart',
  trialEnd: 'trialEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  canceledAt: 'canceledAt',
  cancelReason: 'cancelReason',
  amount: 'amount',
  currency: 'currency',
  interval: 'interval',
  intervalCount: 'intervalCount',
  period: 'period',
  discount: 'discount',
  savings: 'savings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionActivityScalarFieldEnum = {
  id: 'id',
  subscriptionId: 'subscriptionId',
  type: 'type',
  description: 'description',
  reason: 'reason',
  metadata: 'metadata',
  performedBy: 'performedBy',
  createdAt: 'createdAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  entityId: 'entityId',
  action: 'action',
  details: 'details',
  userId: 'userId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Merchant: 'Merchant',
  Outlet: 'Outlet',
  Category: 'Category',
  Product: 'Product',
  OutletStock: 'OutletStock',
  Customer: 'Customer',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Payment: 'Payment',
  Plan: 'Plan',
  Subscription: 'Subscription',
  SubscriptionActivity: 'SubscriptionActivity',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/mac/Source-Code/rentalshop-nextjs/packages/database/src/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/mac/Source-Code/rentalshop-nextjs/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../packages/database/src/generated/client\"\n  binaryTargets = [\"native\", \"linux-musl-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                     Int                    @id @default(autoincrement())\n  email                  String                 @unique\n  password               String\n  firstName              String\n  lastName               String\n  phone                  String?\n  role                   String                 @default(\"OUTLET_STAFF\")\n  isActive               Boolean                @default(true)\n  createdAt              DateTime               @default(now())\n  updatedAt              DateTime               @updatedAt\n  merchantId             Int?\n  outletId               Int?\n  deletedAt              DateTime?\n  auditLogs              AuditLog[]\n  createdOrders          Order[]\n  subscriptionActivities SubscriptionActivity[]\n  outlet                 Outlet?                @relation(fields: [outletId], references: [id])\n  merchant               Merchant?              @relation(fields: [merchantId], references: [id])\n\n  @@unique([merchantId, email])\n  @@unique([merchantId, phone])\n  @@index([email])\n  @@index([merchantId])\n  @@index([outletId])\n  @@index([deletedAt])\n}\n\nmodel Merchant {\n  id                 Int           @id @default(autoincrement())\n  name               String\n  email              String        @unique\n  phone              String?\n  address            String?\n  city               String?\n  state              String?\n  zipCode            String?\n  country            String?\n  businessType       String?\n  pricingType        String?\n  taxId              String?\n  website            String?\n  description        String?\n  pricingConfig      String?       @default(\"{\\\"businessType\\\":\\\"GENERAL\\\",\\\"defaultPricingType\\\":\\\"FIXED\\\",\\\"businessRules\\\":{\\\"requireRentalDates\\\":false,\\\"showPricingOptions\\\":false},\\\"durationLimits\\\":{\\\"minDuration\\\":1,\\\"maxDuration\\\":1,\\\"defaultDuration\\\":1}}\")\n  planId             Int?\n  subscriptionStatus String        @default(\"trial\")\n  totalRevenue       Float         @default(0)\n  lastActiveAt       DateTime?\n  isActive           Boolean       @default(true)\n  createdAt          DateTime      @default(now())\n  updatedAt          DateTime      @updatedAt\n  categories         Category[]\n  customers          Customer[]\n  Plan               Plan?         @relation(fields: [planId], references: [id])\n  outlets            Outlet[]\n  payments           Payment[]\n  products           Product[]\n  subscription       Subscription?\n  users              User[]\n\n  @@index([name])\n  @@index([email])\n  @@index([subscriptionStatus])\n  @@index([planId])\n}\n\nmodel Outlet {\n  id          Int           @id @default(autoincrement())\n  name        String\n  address     String?\n  description String?\n  isActive    Boolean       @default(true)\n  isDefault   Boolean       @default(false)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  merchantId  Int\n  phone       String?\n  city        String?\n  country     String?\n  state       String?\n  zipCode     String?\n  orders      Order[]\n  merchant    Merchant      @relation(fields: [merchantId], references: [id], onDelete: Cascade)\n  products    OutletStock[]\n  users       User[]\n\n  @@index([merchantId])\n  @@index([name])\n  @@index([isDefault])\n}\n\nmodel Category {\n  id          Int       @id @default(autoincrement())\n  name        String\n  description String?\n  isActive    Boolean   @default(true)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  merchantId  Int\n  merchant    Merchant  @relation(fields: [merchantId], references: [id], onDelete: Cascade)\n  products    Product[]\n\n  @@unique([merchantId, name])\n  @@index([merchantId])\n}\n\nmodel Product {\n  id          Int           @id @default(autoincrement())\n  name        String\n  description String?\n  barcode     String?       @unique\n  totalStock  Int           @default(0)\n  rentPrice   Float\n  salePrice   Float?\n  deposit     Float         @default(0)\n  images      String?\n  isActive    Boolean       @default(true)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  merchantId  Int\n  categoryId  Int\n  orderItems  OrderItem[]\n  outletStock OutletStock[]\n  category    Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)\n  merchant    Merchant      @relation(fields: [merchantId], references: [id], onDelete: Cascade)\n\n  @@index([merchantId])\n  @@index([categoryId])\n  @@index([barcode])\n  @@index([name])\n}\n\nmodel OutletStock {\n  id        Int      @id @default(autoincrement())\n  stock     Int      @default(0)\n  available Int      @default(0)\n  renting   Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  productId Int\n  outletId  Int\n  outlet    Outlet   @relation(fields: [outletId], references: [id], onDelete: Cascade)\n  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@unique([productId, outletId])\n  @@index([outletId, available])\n  @@index([productId])\n}\n\nmodel Customer {\n  id          Int       @id @default(autoincrement())\n  firstName   String\n  lastName    String\n  email       String?\n  phone       String\n  address     String?\n  city        String?\n  state       String?\n  zipCode     String?\n  country     String?\n  dateOfBirth DateTime?\n  idNumber    String?\n  idType      String?\n  notes       String?\n  isActive    Boolean   @default(true)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  merchantId  Int\n  merchant    Merchant  @relation(fields: [merchantId], references: [id], onDelete: Cascade)\n  orders      Order[]\n\n  @@unique([merchantId, phone])\n  @@index([merchantId, firstName, lastName])\n}\n\nmodel Order {\n  id                Int         @id @default(autoincrement())\n  orderNumber       String      @unique\n  orderType         String\n  status            String      @default(\"RESERVED\")\n  totalAmount       Float\n  depositAmount     Float       @default(0)\n  securityDeposit   Float       @default(0)\n  damageFee         Float       @default(0)\n  lateFee           Float       @default(0)\n  discountType      String?\n  discountValue     Float       @default(0)\n  discountAmount    Float       @default(0)\n  pickupPlanAt      DateTime?\n  returnPlanAt      DateTime?\n  pickedUpAt        DateTime?\n  returnedAt        DateTime?\n  rentalDuration    Int?\n  isReadyToDeliver  Boolean     @default(false)\n  collateralType    String?\n  collateralDetails String?\n  notes             String?\n  pickupNotes       String?\n  returnNotes       String?\n  damageNotes       String?\n  createdAt         DateTime    @default(now())\n  updatedAt         DateTime    @updatedAt\n  outletId          Int\n  customerId        Int?\n  createdById       Int\n  createdBy         User        @relation(fields: [createdById], references: [id])\n  outlet            Outlet      @relation(fields: [outletId], references: [id])\n  customer          Customer?   @relation(fields: [customerId], references: [id])\n  orderItems        OrderItem[]\n  payments          Payment[]\n\n  @@index([status, outletId])\n  @@index([customerId, createdAt(sort: Desc)])\n  @@index([pickupPlanAt, returnPlanAt])\n  @@index([orderNumber])\n  @@index([isReadyToDeliver, outletId])\n  // Performance optimization indexes\n  @@index([createdAt]) // Default sorting\n  @@index([outletId, createdAt]) // Outlet + date queries\n  @@index([orderType, status]) // Type filtering\n  @@index([outletId, status, createdAt]) // Composite for complex queries\n  @@index([createdById, createdAt]) // User order history\n  @@index([totalAmount]) // Financial reporting\n  @@index([status, orderType, createdAt]) // Status + type + date\n}\n\nmodel OrderItem {\n  id         Int     @id @default(autoincrement())\n  quantity   Int     @default(1)\n  unitPrice  Float\n  totalPrice Float\n  deposit    Float   @default(0)\n  orderId    Int\n  productId  Int\n  notes      String?\n  rentalDays Int?\n  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  product    Product @relation(fields: [productId], references: [id])\n\n  @@index([orderId, productId])\n}\n\nmodel Payment {\n  id             Int           @id @default(autoincrement())\n  amount         Float\n  currency       String        @default(\"USD\")\n  method         String\n  type           String\n  status         String        @default(\"PENDING\")\n  reference      String?\n  transactionId  String?\n  invoiceNumber  String?\n  description    String?\n  notes          String?\n  failureReason  String?\n  metadata       String?\n  processedAt    DateTime?\n  processedBy    String?\n  createdAt      DateTime      @default(now())\n  updatedAt      DateTime      @updatedAt\n  orderId        Int?\n  subscriptionId Int?\n  merchantId     Int?\n  merchant       Merchant?     @relation(fields: [merchantId], references: [id], onDelete: Cascade)\n  subscription   Subscription? @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n  order          Order?        @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  @@index([orderId, status])\n  @@index([subscriptionId, status])\n  @@index([merchantId, status])\n  @@index([status])\n  @@index([type])\n  @@index([method])\n  @@index([currency])\n}\n\nmodel Plan {\n  id            Int            @id @default(autoincrement())\n  name          String         @unique\n  description   String\n  basePrice     Float\n  currency      String         @default(\"USD\")\n  trialDays     Int            @default(14)\n  limits        String         @default(\"{\\\"outlets\\\": 0, \\\"users\\\": 0, \\\"products\\\": 0, \\\"customers\\\": 0}\") // JSON object: {\"outlets\": 5, \"users\": 10, \"products\": 100, \"customers\": 500}\n  features      String         @default(\"[]\") // JSON array: [\"feature1\", \"feature2\", \"feature3\"]\n  isActive      Boolean        @default(true)\n  isPopular     Boolean        @default(false)\n  sortOrder     Int            @default(0)\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  deletedAt     DateTime?\n  Merchant      Merchant[]\n  subscriptions Subscription[]\n\n  @@index([isActive])\n  @@index([sortOrder])\n  @@index([deletedAt])\n}\n\nmodel Subscription {\n  id                 Int                    @id @default(autoincrement())\n  merchantId         Int                    @unique\n  planId             Int\n  status             String                 @default(\"trial\")\n  currentPeriodStart DateTime\n  currentPeriodEnd   DateTime\n  trialStart         DateTime?\n  trialEnd           DateTime?\n  cancelAtPeriodEnd  Boolean                @default(false)\n  canceledAt         DateTime?\n  cancelReason       String?\n  amount             Float\n  currency           String                 @default(\"USD\")\n  interval           String                 @default(\"month\")\n  intervalCount      Int                    @default(1)\n  period             Int                    @default(1)\n  discount           Float                  @default(0)\n  savings            Float                  @default(0)\n  createdAt          DateTime               @default(now())\n  updatedAt          DateTime               @updatedAt\n  payments           Payment[]\n  activities         SubscriptionActivity[]\n  merchant           Merchant               @relation(fields: [merchantId], references: [id], onDelete: Cascade)\n  plan               Plan                   @relation(fields: [planId], references: [id])\n\n  @@index([merchantId])\n  @@index([planId])\n  @@index([status])\n}\n\nmodel SubscriptionActivity {\n  id             Int      @id @default(autoincrement())\n  subscriptionId Int\n  type           String // subscription_created, plan_changed, subscription_paused, etc.\n  description    String\n  reason         String? // Reason for the action (e.g., \"Paused by admin\", \"Trial ended\")\n  metadata       String? // JSON metadata (SQLite doesn't need @db.Text)\n  performedBy    Int? // User ID who performed the action\n  createdAt      DateTime @default(now())\n\n  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n  user         User?        @relation(fields: [performedBy], references: [id], onDelete: SetNull)\n\n  @@index([subscriptionId])\n  @@index([type])\n  @@index([createdAt])\n}\n\nmodel AuditLog {\n  id         Int      @id @default(autoincrement())\n  entityType String\n  entityId   String\n  action     String\n  details    String\n  userId     Int?\n  ipAddress  String?\n  userAgent  String?\n  createdAt  DateTime @default(now())\n  user       User?    @relation(fields: [userId], references: [id])\n\n  @@index([entityType, entityId])\n  @@index([userId])\n  @@index([action])\n  @@index([createdAt])\n}\n",
  "inlineSchemaHash": "244a3f8731fe27f22a321b6f5d09eacaf9c98660ba92d9823328e5430264512a",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outletId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"createdOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"subscriptionActivities\",\"kind\":\"object\",\"type\":\"SubscriptionActivity\",\"relationName\":\"SubscriptionActivityToUser\"},{\"name\":\"outlet\",\"kind\":\"object\",\"type\":\"Outlet\",\"relationName\":\"OutletToUser\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"MerchantToUser\"}],\"dbName\":null},\"Merchant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pricingType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pricingConfig\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptionStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalRevenue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastActiveAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToMerchant\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToMerchant\"},{\"name\":\"Plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"MerchantToPlan\"},{\"name\":\"outlets\",\"kind\":\"object\",\"type\":\"Outlet\",\"relationName\":\"MerchantToOutlet\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"MerchantToPayment\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"MerchantToProduct\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"MerchantToSubscription\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MerchantToUser\"}],\"dbName\":null},\"Outlet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOutlet\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"MerchantToOutlet\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"OutletStock\",\"relationName\":\"OutletToOutletStock\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OutletToUser\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"CategoryToMerchant\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"barcode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rentPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"salePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deposit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"outletStock\",\"kind\":\"object\",\"type\":\"OutletStock\",\"relationName\":\"OutletStockToProduct\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"MerchantToProduct\"}],\"dbName\":null},\"OutletStock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"available\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"renting\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outletId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outlet\",\"kind\":\"object\",\"type\":\"Outlet\",\"relationName\":\"OutletToOutletStock\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OutletStockToProduct\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"idNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"CustomerToMerchant\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CustomerToOrder\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"depositAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"securityDeposit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"damageFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lateFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pickupPlanAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"returnPlanAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"pickedUpAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"returnedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rentalDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isReadyToDeliver\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"collateralType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"collateralDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pickupNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"returnNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"damageNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"outletId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"outlet\",\"kind\":\"object\",\"type\":\"Outlet\",\"relationName\":\"OrderToOutlet\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrder\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrderToPayment\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deposit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rentalDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"failureReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"MerchantToPayment\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PaymentToSubscription\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPayment\"}],\"dbName\":null},\"Plan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"basePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trialDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isPopular\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"MerchantToPlan\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"PlanToSubscription\"}],\"dbName\":null},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"merchantId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intervalCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"savings\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToSubscription\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"SubscriptionActivity\",\"relationName\":\"SubscriptionToSubscriptionActivity\"},{\"name\":\"merchant\",\"kind\":\"object\",\"type\":\"Merchant\",\"relationName\":\"MerchantToSubscription\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"Plan\",\"relationName\":\"PlanToSubscription\"}],\"dbName\":null},\"SubscriptionActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"performedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"SubscriptionToSubscriptionActivity\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubscriptionActivityToUser\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

