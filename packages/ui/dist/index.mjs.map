{"version":3,"sources":["../../../node_modules/property-expr/index.js","../../../node_modules/tiny-case/index.js","../../../node_modules/toposort/index.js","../../../node_modules/react-fast-compare/index.js","../../../node_modules/react-is/cjs/react-is.production.min.js","../../../node_modules/react-is/cjs/react-is.development.js","../../../node_modules/react-is/index.js","../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../src/components/ui/alert.tsx","../src/lib/utils.ts","../src/components/ui/badge.tsx","../src/lib/cn.ts","../src/components/ui/status-badge.tsx","../src/components/ui/breadcrumb.tsx","../src/components/ui/button.tsx","../src/components/ui/button-clean.tsx","../src/components/ui/button-colorful.tsx","../src/components/ui/card.tsx","../src/components/ui/card-clean.tsx","../src/components/ui/card-colorful.tsx","../src/components/ui/select.tsx","../src/components/ui/currency-selector.tsx","../src/components/ui/dialog.tsx","../src/components/ui/confirmation-dialog.tsx","../src/components/ui/confirmation-dialog-with-reason.tsx","../src/components/ui/textarea.tsx","../src/components/ui/label.tsx","../src/components/ui/input.tsx","../src/components/ui/loading-indicator.tsx","../src/contexts/CurrencyContext.tsx","../src/hooks/useFormatCurrency.ts","../src/components/ui/Money.tsx","../src/components/ui/separator.tsx","../src/components/ui/switch.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/ui/table.tsx","../src/components/ui/price-input.tsx","../src/components/ui/numeric-input-demo.tsx","../src/components/ui/limit-input.tsx","../src/components/ui/date-range-picker.tsx","../src/components/ui/pagination.tsx","../src/components/ui/radio-group.tsx","../src/components/ui/skeleton.tsx","../src/components/ui/product-availability-async-display.tsx","../src/components/ui/product-availability-badge.tsx","../src/components/ui/product-availability-warning.tsx","../src/components/ui/searchable-select.tsx","../src/components/ui/searchable-country-select.tsx","../src/components/ui/toast.tsx","../src/components/forms/ProductForm.tsx","../src/components/forms/OrderForm.tsx","../src/components/forms/CreateOrderForm/CreateOrderForm.tsx","../src/components/forms/CreateOrderForm/hooks/useCreateOrderForm.ts","../src/components/forms/CreateOrderForm/hooks/useOrderValidation.ts","../src/components/forms/CreateOrderForm/hooks/useProductSearch.ts","../src/components/forms/CreateOrderForm/hooks/useCustomerSearch.ts","../src/components/forms/CreateOrderForm/components/ProductsSection.tsx","../src/components/forms/CreateOrderForm/components/OrderInfoSection.tsx","../src/components/forms/CreateOrderForm/components/OrderSummarySection.tsx","../src/components/forms/CreateOrderForm/components/CustomerCreationDialog.tsx","../src/components/features/Customers/components/AddCustomerForm.tsx","../src/components/forms/CreateOrderForm/components/OrderPreviewDialog.tsx","../src/components/forms/CreateOrderForm/components/OrderPreviewForm.tsx","../src/components/forms/PlanForm.tsx","../src/components/forms/LoginForm.tsx","../../../node_modules/yup/index.esm.js","../../../node_modules/deepmerge/dist/es.js","../../../node_modules/lodash-es/_freeGlobal.js","../../../node_modules/lodash-es/_root.js","../../../node_modules/lodash-es/_Symbol.js","../../../node_modules/lodash-es/_getRawTag.js","../../../node_modules/lodash-es/_objectToString.js","../../../node_modules/lodash-es/_baseGetTag.js","../../../node_modules/lodash-es/_overArg.js","../../../node_modules/lodash-es/_getPrototype.js","../../../node_modules/lodash-es/isObjectLike.js","../../../node_modules/lodash-es/isPlainObject.js","../../../node_modules/lodash-es/_listCacheClear.js","../../../node_modules/lodash-es/eq.js","../../../node_modules/lodash-es/_assocIndexOf.js","../../../node_modules/lodash-es/_listCacheDelete.js","../../../node_modules/lodash-es/_listCacheGet.js","../../../node_modules/lodash-es/_listCacheHas.js","../../../node_modules/lodash-es/_listCacheSet.js","../../../node_modules/lodash-es/_ListCache.js","../../../node_modules/lodash-es/_stackClear.js","../../../node_modules/lodash-es/_stackDelete.js","../../../node_modules/lodash-es/_stackGet.js","../../../node_modules/lodash-es/_stackHas.js","../../../node_modules/lodash-es/isObject.js","../../../node_modules/lodash-es/isFunction.js","../../../node_modules/lodash-es/_coreJsData.js","../../../node_modules/lodash-es/_isMasked.js","../../../node_modules/lodash-es/_toSource.js","../../../node_modules/lodash-es/_baseIsNative.js","../../../node_modules/lodash-es/_getValue.js","../../../node_modules/lodash-es/_getNative.js","../../../node_modules/lodash-es/_Map.js","../../../node_modules/lodash-es/_nativeCreate.js","../../../node_modules/lodash-es/_hashClear.js","../../../node_modules/lodash-es/_hashDelete.js","../../../node_modules/lodash-es/_hashGet.js","../../../node_modules/lodash-es/_hashHas.js","../../../node_modules/lodash-es/_hashSet.js","../../../node_modules/lodash-es/_Hash.js","../../../node_modules/lodash-es/_mapCacheClear.js","../../../node_modules/lodash-es/_isKeyable.js","../../../node_modules/lodash-es/_getMapData.js","../../../node_modules/lodash-es/_mapCacheDelete.js","../../../node_modules/lodash-es/_mapCacheGet.js","../../../node_modules/lodash-es/_mapCacheHas.js","../../../node_modules/lodash-es/_mapCacheSet.js","../../../node_modules/lodash-es/_MapCache.js","../../../node_modules/lodash-es/_stackSet.js","../../../node_modules/lodash-es/_Stack.js","../../../node_modules/lodash-es/_arrayEach.js","../../../node_modules/lodash-es/_defineProperty.js","../../../node_modules/lodash-es/_baseAssignValue.js","../../../node_modules/lodash-es/_assignValue.js","../../../node_modules/lodash-es/_copyObject.js","../../../node_modules/lodash-es/_baseTimes.js","../../../node_modules/lodash-es/_baseIsArguments.js","../../../node_modules/lodash-es/isArguments.js","../../../node_modules/lodash-es/isArray.js","../../../node_modules/lodash-es/stubFalse.js","../../../node_modules/lodash-es/isBuffer.js","../../../node_modules/lodash-es/_isIndex.js","../../../node_modules/lodash-es/isLength.js","../../../node_modules/lodash-es/_baseIsTypedArray.js","../../../node_modules/lodash-es/_baseUnary.js","../../../node_modules/lodash-es/_nodeUtil.js","../../../node_modules/lodash-es/isTypedArray.js","../../../node_modules/lodash-es/_arrayLikeKeys.js","../../../node_modules/lodash-es/_isPrototype.js","../../../node_modules/lodash-es/_nativeKeys.js","../../../node_modules/lodash-es/_baseKeys.js","../../../node_modules/lodash-es/isArrayLike.js","../../../node_modules/lodash-es/keys.js","../../../node_modules/lodash-es/_baseAssign.js","../../../node_modules/lodash-es/_nativeKeysIn.js","../../../node_modules/lodash-es/_baseKeysIn.js","../../../node_modules/lodash-es/keysIn.js","../../../node_modules/lodash-es/_baseAssignIn.js","../../../node_modules/lodash-es/_cloneBuffer.js","../../../node_modules/lodash-es/_copyArray.js","../../../node_modules/lodash-es/_arrayFilter.js","../../../node_modules/lodash-es/stubArray.js","../../../node_modules/lodash-es/_getSymbols.js","../../../node_modules/lodash-es/_copySymbols.js","../../../node_modules/lodash-es/_arrayPush.js","../../../node_modules/lodash-es/_getSymbolsIn.js","../../../node_modules/lodash-es/_copySymbolsIn.js","../../../node_modules/lodash-es/_baseGetAllKeys.js","../../../node_modules/lodash-es/_getAllKeys.js","../../../node_modules/lodash-es/_getAllKeysIn.js","../../../node_modules/lodash-es/_DataView.js","../../../node_modules/lodash-es/_Promise.js","../../../node_modules/lodash-es/_Set.js","../../../node_modules/lodash-es/_WeakMap.js","../../../node_modules/lodash-es/_getTag.js","../../../node_modules/lodash-es/_initCloneArray.js","../../../node_modules/lodash-es/_Uint8Array.js","../../../node_modules/lodash-es/_cloneArrayBuffer.js","../../../node_modules/lodash-es/_cloneDataView.js","../../../node_modules/lodash-es/_cloneRegExp.js","../../../node_modules/lodash-es/_cloneSymbol.js","../../../node_modules/lodash-es/_cloneTypedArray.js","../../../node_modules/lodash-es/_initCloneByTag.js","../../../node_modules/lodash-es/_baseCreate.js","../../../node_modules/lodash-es/_initCloneObject.js","../../../node_modules/lodash-es/_baseIsMap.js","../../../node_modules/lodash-es/isMap.js","../../../node_modules/lodash-es/_baseIsSet.js","../../../node_modules/lodash-es/isSet.js","../../../node_modules/lodash-es/_baseClone.js","../../../node_modules/lodash-es/cloneDeep.js","../../../node_modules/tiny-warning/dist/tiny-warning.esm.js","../../../node_modules/lodash-es/clone.js","../../../node_modules/lodash-es/_arrayMap.js","../../../node_modules/lodash-es/isSymbol.js","../../../node_modules/lodash-es/memoize.js","../../../node_modules/lodash-es/_memoizeCapped.js","../../../node_modules/lodash-es/_stringToPath.js","../../../node_modules/lodash-es/_toKey.js","../../../node_modules/lodash-es/_baseToString.js","../../../node_modules/lodash-es/toString.js","../../../node_modules/lodash-es/toPath.js","../../../node_modules/formik/src/FormikContext.tsx","../../../node_modules/formik/src/utils.ts","../../../node_modules/formik/src/Formik.tsx","../../../node_modules/formik/src/Field.tsx","../../../node_modules/formik/src/Form.tsx","../../../node_modules/formik/src/withFormik.tsx","../../../node_modules/formik/src/connect.tsx","../../../node_modules/formik/src/FieldArray.tsx","../../../node_modules/formik/src/ErrorMessage.tsx","../../../node_modules/formik/src/FastField.tsx","../src/components/layout/LanguageSwitcher.tsx","../../../node_modules/use-intl/dist/esm/production/react.js","../src/components/forms/RegisterForm.tsx","../src/components/forms/ForgetPasswordForm.tsx","../src/components/layout/TimePeriodSelector.tsx","../src/components/features/Dashboard/components/DashboardHeader.tsx","../src/components/features/Dashboard/components/DashboardStats.tsx","../src/components/charts/IncomeChart.tsx","../src/components/charts/OrderChart.tsx","../src/components/charts/PieChart.tsx","../src/components/charts/ColorfulList.tsx","../src/components/charts/SimpleList.tsx","../src/components/charts/TopCustomers.tsx","../src/components/charts/TopProducts.tsx","../src/components/charts/RecentOrders.tsx","../src/components/features/Dashboard/components/DashboardCharts.tsx","../src/components/features/Dashboard/components/DashboardFocus.tsx","../src/components/features/Dashboard/components/DashboardActions.tsx","../src/components/features/Dashboard/components/DashboardNavigation.tsx","../src/components/features/Dashboard/components/DashboardLoading.tsx","../src/components/layout/DashboardWrapper.tsx","../src/components/layout/sidebar.tsx","../src/components/features/Dashboard/Dashboard.tsx","../src/components/features/Products/Products.tsx","../src/components/features/Products/components/ProductHeader.tsx","../src/components/features/Products/components/ProductPageHeader.tsx","../src/components/features/Products/components/ProductFilters.tsx","../src/components/features/Products/components/ProductGrid.tsx","../src/components/features/Products/components/ProductCard.tsx","../src/components/features/Products/components/ProductTable.tsx","../src/components/features/Products/components/ProductActions.tsx","../src/components/features/Products/components/ProductAddDialog.tsx","../src/components/features/Products/components/ProductAddForm.tsx","../src/components/features/Products/components/ProductsLoading.tsx","../src/components/features/Products/components/ProductDetailList.tsx","../src/lib/index.ts","../src/components/features/Products/components/ProductDetailMultiLayout.tsx","../src/components/features/Products/components/ProductEdit.tsx","../src/components/features/Products/components/ProductOrdersView.tsx","../src/components/features/Orders/components/OrderHeader.tsx","../src/components/features/Orders/components/OrderFilters.tsx","../src/components/features/Orders/components/OrderQuickFilters.tsx","../src/components/features/Orders/components/OrderDateRangeFilter.tsx","../src/components/features/Orders/components/OrderTable.tsx","../src/components/features/Orders/components/OrderActions.tsx","../src/components/features/Orders/components/OrderStats.tsx","../src/components/features/Orders/components/OrderPagination.tsx","../src/components/features/Orders/components/OrdersLoading.tsx","../src/components/features/Products/components/ProductOrdersDialog.tsx","../src/components/features/Customers/Customers.tsx","../src/components/features/Customers/components/CustomerTable.tsx","../src/components/features/Customers/components/CustomerDetailDialog.tsx","../src/components/features/Customers/components/CustomerInfoCard.tsx","../src/components/features/Customers/components/CustomerOrdersSummaryCard.tsx","../src/components/features/Customers/components/CustomerPageHeader.tsx","../src/components/features/Customers/components/AddCustomerDialog.tsx","../src/components/features/Customers/components/EditCustomerForm.tsx","../src/components/features/Customers/components/CustomerForm.tsx","../src/components/features/Customers/components/CustomerActions.tsx","../src/components/features/Customers/components/CustomerHeader.tsx","../src/components/features/Customers/components/CustomerSearch.tsx","../src/components/features/Customers/components/CustomerStats.tsx","../src/components/features/Customers/components/CustomerOrdersDialog.tsx","../src/components/features/Customers/components/CustomersLoading.tsx","../src/components/features/Orders/Orders.tsx","../src/components/features/Orders/RentalPeriodSelector.tsx","../src/components/features/Merchants/Merchants.tsx","../src/components/features/Merchants/components/MerchantHeader.tsx","../src/components/features/Merchants/components/MerchantListHeader.tsx","../src/components/features/Merchants/components/MerchantFilters.tsx","../src/components/features/Merchants/components/MerchantTable.tsx","../src/components/features/Merchants/components/MerchantPlanManagement.tsx","../src/components/features/Subscriptions/components/SubscriptionList.tsx","../src/components/features/Subscriptions/components/SubscriptionViewDialog.tsx","../src/components/features/Subscriptions/components/SubscriptionExtendDialog.tsx","../src/components/features/Subscriptions/components/SubscriptionChangePlanDialog.tsx","../src/components/features/Subscriptions/components/SubscriptionEditDialog.tsx","../src/components/features/Subscriptions/components/SubscriptionFormSimple.tsx","../src/components/features/Subscriptions/components/SubscriptionForm.tsx","../src/components/features/Subscriptions/components/SubscriptionPreviewPage.tsx","../src/components/features/Subscriptions/components/PlanSelectionModal.tsx","../src/components/features/Subscriptions/components/SubscriptionStatusBanner.tsx","../src/components/features/Subscriptions/SubscriptionPeriodCard.tsx","../src/components/features/Subscriptions/components/RestrictedButton.tsx","../src/components/features/Subscriptions/components/PaymentHistoryTable.tsx","../src/components/features/Subscriptions/components/ManualRenewalModal.tsx","../src/components/features/Subscriptions/components/UpgradeTrialModal.tsx","../src/components/features/Subscriptions/components/SubscriptionActivityTimeline.tsx","../src/components/features/Subscriptions/components/SubscriptionHistoryDialog.tsx","../src/components/features/Merchants/components/MerchantDetail.tsx","../src/components/features/Merchants/components/MerchantSubscriptionSection.tsx","../src/components/features/Calendars/Calendars.tsx","../src/components/features/Calendars/components/CalendarHeader.tsx","../src/components/features/Calendars/components/CalendarNavigation.tsx","../src/components/features/Calendars/components/CalendarStats.tsx","../src/components/features/Calendars/components/CalendarGrid.tsx","../src/components/features/Calendars/components/CalendarLoading.tsx","../src/components/features/Calendars/components/OrdersList.tsx","../src/components/features/Users/Users.tsx","../src/components/features/Users/components/UserHeader.tsx","../src/components/features/Users/components/UserFilters.tsx","../src/components/features/Users/components/UserCard.tsx","../src/components/features/Users/components/UserGrid.tsx","../src/components/features/Users/components/UserTable.tsx","../src/components/features/Users/components/UsersLoading.tsx","../src/components/features/Users/components/UserActions.tsx","../src/components/features/Users/components/UserDetailDialog.tsx","../src/components/features/Users/components/ChangePasswordDialog.tsx","../src/components/features/Users/lib/UserApiClient.ts","../src/components/features/Users/components/UserDisplayInfo.tsx","../src/components/features/Users/components/AddUserDialog.tsx","../src/components/features/Users/components/UserForm.tsx","../src/components/features/Users/components/UserFormFields.tsx","../src/components/features/Users/components/UserFormValidation.ts","../src/components/features/Users/components/UserRow.tsx","../src/components/features/Users/components/UserPageHeader.tsx","../src/components/features/Users/components/AccountManagementCard.tsx","../src/components/features/Outlets/Outlets.tsx","../src/components/features/Outlets/components/OutletHeader.tsx","../src/components/features/Outlets/components/OutletFilters.tsx","../src/components/features/Outlets/components/OutletGrid.tsx","../src/components/features/Outlets/components/OutletTable.tsx","../src/components/features/Outlets/components/OutletSearch.tsx","../src/components/features/Outlets/components/OutletPagination.tsx","../src/components/features/Outlets/components/AddOutletDialog.tsx","../src/components/features/Outlets/components/AddOutletForm.tsx","../src/components/features/Categories/Categories.tsx","../src/components/features/Categories/components/CategoryHeader.tsx","../src/components/features/Categories/components/CategoryActions.tsx","../src/components/features/Categories/components/AddCategoryDialog.tsx","../src/components/features/Categories/components/CategoryFormContent.tsx","../src/components/features/Categories/components/CategoryCard.tsx","../src/components/features/Categories/components/CategoryGrid.tsx","../src/components/features/Categories/components/CategoryTable.tsx","../src/components/features/Categories/components/CategoryForm.tsx","../src/components/features/Categories/components/CategoryView.tsx","../src/components/features/Categories/components/CategoryFilters.tsx","../src/components/features/Categories/components/CategorySearch.tsx","../src/components/features/Categories/components/CategoriesLoading.tsx","../src/components/features/Plans/components/PlanDialog.tsx","../src/components/features/Plans/components/PlanActions.tsx","../src/components/features/Plans/components/PlanSelection.tsx","../src/components/features/Plans/components/PlanCard.tsx","../src/components/features/Plans/components/PlanTable.tsx","../src/components/features/Plans/components/PlanFilters.tsx","../src/components/features/Plans/components/PlanStats.tsx","../src/components/features/Plans/components/PlanDetailModal.tsx","../src/components/features/BillingCycles/components/BillingCycleTable.tsx","../src/components/features/BillingCycles/components/BillingCycleForm.tsx","../src/components/features/BillingCycles/components/BillingCycleDetailDialog.tsx","../src/components/features/Payments/components/PaymentForm.tsx","../src/components/features/Payments/components/PaymentDetailDialog.tsx","../src/components/features/Payments/components/PaymentTable.tsx","../src/components/features/Admin/components/StatsOverview.tsx","../src/components/features/Admin/components/SearchAndFilters.tsx","../src/components/features/Admin/components/StatusBadge.tsx","../src/components/features/Admin/components/ActionButton.tsx","../src/components/features/Admin/components/EmptyState.tsx","../src/components/features/Admin/components/DataTable.tsx","../src/components/layout/PageWrapper.tsx","../src/components/features/Admin/components/AdminPageHeader.tsx","../src/components/features/Admin/components/SettingsNavigation.tsx","../src/components/features/Admin/components/SettingsForm.tsx","../src/components/features/Admin/components/SystemStatus.tsx","../src/components/features/Admin/components/SettingsLayout.tsx","../src/components/features/Admin/components/SettingsFields.tsx","../src/components/features/Admin/components/SecurityCard.tsx","../src/components/features/Admin/components/MetricCard.tsx","../src/components/features/Admin/components/ActivityFeed.tsx","../src/components/features/Admin/components/QuickActions.tsx","../src/components/features/Admin/components/SystemHealth.tsx","../src/components/features/Performance/components/PerformanceMetricCard.tsx","../src/components/features/Performance/components/PerformanceAlertCard.tsx","../src/components/features/Performance/components/PerformanceMetricsGrid.tsx","../src/components/features/Performance/components/PerformanceAlertsList.tsx","../src/components/features/Maintenance/components/MaintenanceTaskCard.tsx","../src/components/features/Maintenance/components/MaintenanceModeToggle.tsx","../src/components/features/Maintenance/components/MaintenanceTasksGrid.tsx","../src/components/features/Maintenance/components/MaintenanceWindowCard.tsx","../src/components/features/Backup/components/BackupCard.tsx","../src/components/features/Backup/components/BackupScheduleCard.tsx","../src/components/features/Backup/components/BackupGrid.tsx","../src/components/features/Backup/components/BackupSchedulesGrid.tsx","../src/components/features/ApiManagement/components/ApiKeyCard.tsx","../src/components/features/ApiManagement/components/ApiEndpointCard.tsx","../src/components/features/ApiManagement/components/ApiKeysGrid.tsx","../src/components/features/ApiManagement/components/ApiEndpointsGrid.tsx","../src/components/features/SystemLogs/components/LogEntryCard.tsx","../src/components/features/SystemLogs/components/LogsList.tsx","../src/components/features/SystemLogs/components/LogFilters.tsx","../src/components/features/Security/components/SecurityEventCard.tsx","../src/components/features/Security/components/SecurityEventsList.tsx","../src/components/features/Security/components/SecurityMetricsCard.tsx","../src/components/features/AuditLogs/AuditLogViewer.tsx","../src/components/features/AuditLogs/AuditLogDetail.tsx","../src/components/features/OrderDetail/OrderDetail.tsx","../src/components/features/OrderDetail/components/CollectionReturnModal.tsx","../src/components/features/OrderDetail/utils.ts","../src/components/features/OrderDetail/components/OrderInformation.tsx","../src/components/features/OrderDetail/components/OrderProductsList.tsx","../src/components/features/OrderDetail/components/OrderSummaryCard.tsx","../src/components/features/OrderDetail/components/OrderSettingsCard.tsx","../src/components/features/OrderDetail/components/OrderActionsSection.tsx","../src/components/features/OrderDetail/components/OrderSummary.tsx","../src/components/features/Shops/components/ShopsLoading.tsx","../src/components/features/Shops/components/OutletsLoading.tsx","../src/components/features/Settings/Settings.tsx","../src/components/features/Settings/components/SettingsLayout.tsx","../src/components/features/Settings/components/ProfileSection.tsx","../src/components/features/Settings/components/MerchantSection.tsx","../src/components/features/Settings/components/OutletSection.tsx","../src/components/features/Settings/components/SubscriptionSection.tsx","../src/components/features/Settings/components/AccountSection.tsx","../src/components/features/Settings/components/LanguageSection.tsx","../src/components/features/Settings/components/ChangePasswordDialog.tsx","../src/components/features/Settings/components/DeleteAccountDialog.tsx","../src/components/features/Settings/components/SecuritySection.tsx","../src/components/features/Settings/components/CurrencySection.tsx","../src/components/layout/TopNavigation.tsx","../src/components/layout/ServerTopNavigation.tsx","../src/components/layout/DashboardWrapperClean.tsx","../src/components/layout/DashboardWrapperColorful.tsx","../src/components/layout/TodaysFocus.tsx","../src/components/layout/ColorfulQuickActions.tsx","../src/components/layout/ColorfulTodaysFocus.tsx","../src/components/layout/QuickActionsGrid.tsx","../src/components/layout/SearchInput.tsx","../src/components/layout/navigation.tsx","../src/components/layout/AdminSidebar.tsx","../src/components/layout/ClientSidebar.tsx","../src/components/layout/layout.tsx","../src/components/layout/SubscriptionStatus.tsx"],"sourcesContent":["/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n'use strict'\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n","const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        warning:\n          \"border-yellow-500/50 text-yellow-700 dark:border-yellow-500 dark:text-yellow-300 [&>svg]:text-yellow-600\",\n        success:\n          \"border-green-500/50 text-green-700 dark:border-green-500 dark:text-green-300 [&>svg]:text-green-600\",\n        info:\n          \"border-blue-500/50 text-blue-700 dark:border-blue-500 dark:text-blue-300 [&>svg]:text-blue-700\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Format a date to a readable string\n * @param date - Date to format\n * @param locale - Locale for formatting (default: 'vi-VN')\n * @returns Formatted date string\n */\nexport function formatDate(date: Date | string | null | undefined, locale: string = 'vi-VN'): string {\n  if (!date) return 'N/A';\n  \n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  \n  if (isNaN(dateObj.getTime())) return 'Invalid Date';\n  \n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n  }).format(dateObj);\n}\n\n/**\n * Format a date to a date-only string (no time)\n * @param date - Date to format\n * @param locale - Locale for formatting (default: 'vi-VN')\n * @returns Formatted date string (YYYY/MM/DD per locale)\n */\nexport function formatDateOnly(\n  date: Date | string | null | undefined,\n  locale: string = 'vi-VN'\n): string {\n  if (!date) return 'N/A';\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  if (isNaN(dateObj.getTime())) return 'Invalid Date';\n  return new Intl.DateTimeFormat(locale, {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  }).format(dateObj);\n}\n\n// formatCurrency is now exported from @rentalshop/utils for centralized currency management ","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/cn\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants } ","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} ","'use client';\n\nimport React from 'react';\nimport { cn } from '../../lib/utils';\nimport { getStatusColor, getStatusLabel } from '@rentalshop/constants';\n\nexport interface StatusBadgeProps {\n  status: string;\n  type?: 'subscription' | 'order' | 'payment' | 'entity' | 'availability';\n  variant?: 'default' | 'outline' | 'solid';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\n// Special statuses that don't fit the standard categories\nconst specialStatusConfig = {\n  // User Statuses\n  online: {\n    color: 'bg-action-success/10 text-action-success border-action-success/20',\n    icon: '🟢'\n  },\n  offline: {\n    color: 'bg-text-tertiary/10 text-text-tertiary border-text-tertiary/20',\n    icon: '⚪'\n  },\n  \n  // System Statuses\n  healthy: {\n    color: 'bg-action-success/10 text-action-success border-action-success/20',\n    icon: '✅'\n  },\n  warning: {\n    color: 'bg-action-warning/10 text-action-warning border-action-warning/20',\n    icon: '⚠️'\n  },\n  error: {\n    color: 'bg-action-danger/10 text-action-danger border-action-danger/20',\n    icon: '❌'\n  },\n  \n  // Outlet Statuses\n  default: {\n    color: 'bg-gray-100 text-gray-700 border-gray-300 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600',\n    icon: ''\n  },\n  'main branch': {\n    color: 'bg-gray-100 text-gray-700 border-gray-300 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600',\n    icon: ''\n  }\n};\n\nconst sizeClasses = {\n  sm: 'px-2 py-1 text-xs',\n  md: 'px-2.5 py-1 text-sm',\n  lg: 'px-3 py-1.5 text-base'\n};\n\nexport const StatusBadge: React.FC<StatusBadgeProps> = ({\n  status,\n  type = 'entity',\n  variant = 'default',\n  size = 'md',\n  className\n}) => {\n  // Handle undefined or null status\n  if (!status) {\n    return (\n      <span className={cn('inline-flex items-center gap-1.5 rounded-full font-medium border px-2 py-1 text-xs bg-gray-100 text-gray-600 border-gray-300', className)}>\n        Unknown\n      </span>\n    );\n  }\n\n  // Check if it's a special status first\n  const specialConfig = specialStatusConfig[status.toLowerCase() as keyof typeof specialStatusConfig];\n  \n  let config;\n  if (specialConfig) {\n    config = specialConfig;\n  } else {\n    // Use centralized status constants\n    const colorClass = getStatusColor(status, type);\n    const label = getStatusLabel(status, type);\n    config = {\n      color: colorClass,\n      icon: ''\n    };\n  }\n\n  const baseClasses = cn(\n    'inline-flex items-center gap-1.5 rounded-full font-medium border',\n    sizeClasses[size],\n    config.color,\n    className\n  );\n\n  return (\n    <span className={baseClasses}>\n      <span className=\"text-xs\">{config.icon}</span>\n      <span className=\"capitalize\">{status}</span>\n    </span>\n  );\n};\n\nexport default StatusBadge;\n","import React from 'react';\nimport Link from 'next/link';\nimport { ChevronRight, Home } from 'lucide-react';\nimport { cn } from '../../lib/utils';\n\nexport interface BreadcrumbItem {\n  label: string;\n  href?: string;\n  icon?: React.ReactNode;\n}\n\nexport interface BreadcrumbProps {\n  items: BreadcrumbItem[];\n  showHome?: boolean;\n  homeHref?: string;\n  separator?: React.ReactNode;\n  className?: string;\n}\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n  items,\n  showHome = true,\n  homeHref = '/',\n  separator = <ChevronRight className=\"w-4 h-4\" />,\n  className\n}) => {\n  const allItems = showHome\n    ? [{ label: 'Home', href: homeHref, icon: <Home className=\"w-4 h-4\" /> }, ...items]\n    : items;\n\n  return (\n    <nav aria-label=\"Breadcrumb\" className={cn('flex items-center space-x-2 py-3', className)}>\n      <ol className=\"flex items-center space-x-2\">\n        {allItems.map((item, index) => {\n          const isLast = index === allItems.length - 1;\n\n          return (\n            <li key={index} className=\"flex items-center space-x-2\">\n              {index > 0 && (\n                <span className=\"text-gray-400 dark:text-gray-500\" aria-hidden=\"true\">\n                  {separator}\n                </span>\n              )}\n              \n              {item.href && !isLast ? (\n                <Link\n                  href={item.href}\n                  className={cn(\n                    'flex items-center gap-1.5 text-sm font-medium transition-colors',\n                    'text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100',\n                    'hover:underline'\n                  )}\n                >\n                  {item.icon}\n                  <span>{item.label}</span>\n                </Link>\n              ) : (\n                <span\n                  className={cn(\n                    'flex items-center gap-1.5 text-sm font-medium',\n                    isLast ? 'text-gray-900 dark:text-gray-100' : 'text-gray-600 dark:text-gray-400'\n                  )}\n                  aria-current={isLast ? 'page' : undefined}\n                >\n                  {item.icon}\n                  <span>{item.label}</span>\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../../lib/cn\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-lg text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        // Blue-700 Theme - Primary button with blue-700\n        default: \"bg-blue-700 text-white hover:bg-blue-800\",\n        // Destructive - Red for danger actions\n        destructive: \"bg-red-500 text-white hover:bg-red-600\",\n        // Outline - Neutral gray border (for table actions, pagination)\n        outline: \"border border-slate-300 bg-transparent text-slate-700 hover:bg-slate-50 hover:text-slate-900\",\n        // Secondary - Light slate background\n        secondary: \"bg-slate-100 text-slate-800 hover:bg-slate-200\",\n        // Ghost - Transparent with hover effect\n        ghost: \"hover:bg-slate-100 hover:text-slate-800\",\n        // Link - Blue-700 text with underline\n        link: \"text-blue-700 underline-offset-4 hover:underline\",\n        // Success - Emerald green (keep for success states)\n        success: \"bg-emerald-500 text-white hover:bg-emerald-600\",\n        // Warning - Amber yellow\n        warning: \"bg-amber-500 text-white hover:bg-amber-600\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } ","import React from 'react';\nimport { cn } from '../../lib/cn';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nconst buttonCleanVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-brand-primary text-white hover:bg-brand-600\",\n        secondary: \"bg-bg-secondary text-text-primary hover:bg-bg-tertiary border border-border\",\n        outline: \"border border-border bg-transparent text-text-primary hover:bg-bg-secondary\",\n        ghost: \"hover:bg-bg-secondary hover:text-text-primary\",\n        link: \"text-brand-primary underline-offset-4 hover:underline\",\n        success: \"bg-action-success text-white hover:bg-green-600\",\n        danger: \"bg-action-danger text-white hover:bg-red-600\",\n        warning: \"bg-action-warning text-white hover:bg-amber-600\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 px-3 text-xs\",\n        lg: \"h-10 px-6\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonCleanProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonCleanVariants> {\n  asChild?: boolean;\n  icon?: React.ReactNode;\n  showIcon?: boolean;\n  iconPosition?: 'left' | 'right';\n}\n\nconst ButtonClean = React.forwardRef<HTMLButtonElement, ButtonCleanProps>(\n  ({ \n    className, \n    variant, \n    size, \n    asChild = false, \n    icon, \n    showIcon = true, \n    iconPosition = 'left',\n    children,\n    ...props \n  }, ref) => {\n    const Comp = asChild ? 'button' : \"button\";\n    \n    const renderIcon = () => {\n      if (!icon || !showIcon) return null;\n      return (\n        <span className={cn(\n          \"inline-flex items-center\",\n          iconPosition === 'left' ? 'mr-2' : 'ml-2'\n        )}>\n          {icon}\n        </span>\n      );\n    };\n\n    return (\n      <Comp\n        className={cn(buttonCleanVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      >\n        {iconPosition === 'left' && renderIcon()}\n        {children}\n        {iconPosition === 'right' && renderIcon()}\n      </Comp>\n    );\n  }\n);\n\nButtonClean.displayName = \"ButtonClean\";\n\nexport { ButtonClean, buttonCleanVariants }; ","import React from 'react';\nimport { cn } from '../../lib/cn';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nconst buttonColorfulVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-xl text-lg font-semibold transition-all duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:scale-105 active:scale-95\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gradient-to-r from-brand-500 to-brand-600 text-white shadow-glow hover:shadow-glow-blue\",\n        destructive: \"bg-gradient-to-r from-action-danger to-red-600 text-white shadow-glow hover:shadow-glow\",\n        outline: \"border-2 border-brand-500 bg-transparent text-brand-500 hover:bg-brand-500 hover:text-white\",\n        secondary: \"bg-gradient-to-r from-action-secondary to-purple-600 text-white shadow-glow-purple hover:shadow-glow\",\n        ghost: \"hover:bg-brand-100 hover:text-brand-700\",\n        link: \"text-brand-500 underline-offset-4 hover:underline\",\n        success: \"bg-gradient-to-r from-action-success to-emerald-600 text-white shadow-glow hover:shadow-glow\",\n        warning: \"bg-gradient-to-r from-action-warning to-amber-600 text-white shadow-glow hover:shadow-glow\",\n        info: \"bg-gradient-to-r from-action-info to-cyan-600 text-white shadow-glow hover:shadow-glow\",\n        warm: \"bg-gradient-to-r from-gradient-warm text-white shadow-glow hover:shadow-glow\",\n        cool: \"bg-gradient-to-r from-gradient-cool text-white shadow-glow hover:shadow-glow\",\n      },\n      size: {\n        default: \"h-12 px-8 py-3 text-lg\",\n        sm: \"h-10 px-6 py-2 text-base\",\n        lg: \"h-14 px-10 py-4 text-xl\",\n        xl: \"h-16 px-12 py-5 text-2xl\",\n        icon: \"h-12 w-12\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonColorfulProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonColorfulVariants> {\n  asChild?: boolean;\n}\n\nconst ButtonColorful = React.forwardRef<HTMLButtonElement, ButtonColorfulProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? 'button' : \"button\";\n    return (\n      <Comp\n        className={cn(buttonColorfulVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nButtonColorful.displayName = \"ButtonColorful\";\n\nexport { ButtonColorful, buttonColorfulVariants }; ","import * as React from \"react\"\n\nimport { cn } from \"../../lib/cn\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-border bg-bg-card text-text-primary shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight text-text-primary\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-text-secondary\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent } ","import React from 'react';\nimport { cn } from '../../lib/cn';\n\ninterface CardCleanProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: 'default' | 'subtle' | 'bordered';\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const CardClean: React.FC<CardCleanProps> = ({\n  children,\n  className,\n  variant = 'default',\n  size = 'md',\n}) => {\n  const baseClasses = \"rounded-lg transition-colors duration-200\";\n  \n  const variantClasses = {\n    default: \"bg-white shadow-sm\",\n    subtle: \"bg-bg-secondary\",\n    bordered: \"bg-white border border-border\",\n  };\n  \n  const sizeClasses = {\n    sm: \"p-4\",\n    md: \"p-6\",\n    lg: \"p-8\",\n  };\n\n  return (\n    <div className={cn(\n      baseClasses,\n      variantClasses[variant],\n      sizeClasses[size],\n      className\n    )}>\n      {children}\n    </div>\n  );\n};\n\ninterface CardHeaderCleanProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardHeaderClean: React.FC<CardHeaderCleanProps> = ({\n  children,\n  className,\n}) => (\n  <div className={cn(\"mb-4\", className)}>\n    {children}\n  </div>\n);\n\ninterface CardTitleCleanProps {\n  children: React.ReactNode;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const CardTitleClean: React.FC<CardTitleCleanProps> = ({\n  children,\n  className,\n  size = 'md',\n}) => {\n  const sizeClasses = {\n    sm: \"text-lg font-medium\",\n    md: \"text-xl font-semibold\",\n    lg: \"text-2xl font-bold\",\n  };\n\n  return (\n    <h3 className={cn(\n      \"text-text-primary\",\n      sizeClasses[size],\n      className\n    )}>\n      {children}\n    </h3>\n  );\n};\n\ninterface CardContentCleanProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardContentClean: React.FC<CardContentCleanProps> = ({\n  children,\n  className,\n}) => (\n  <div className={cn(\"space-y-3\", className)}>\n    {children}\n  </div>\n);\n\ninterface CardDescriptionCleanProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardDescriptionClean: React.FC<CardDescriptionCleanProps> = ({\n  children,\n  className,\n}) => (\n  <p className={cn(\n    \"text-text-secondary text-sm\",\n    className\n  )}>\n    {children}\n  </p>\n);\n\ninterface CardFooterCleanProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardFooterClean: React.FC<CardFooterCleanProps> = ({\n  children,\n  className,\n}) => (\n  <div className={cn(\"mt-4 pt-4 border-t border-border-light\", className)}>\n    {children}\n  </div>\n); ","import React from 'react';\nimport { cn } from '../../lib/cn';\n\ninterface CardColorfulProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: 'default' | 'gradient' | 'glow' | 'elevated';\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport const CardColorful: React.FC<CardColorfulProps> = ({\n  children,\n  className,\n  variant = 'default',\n  size = 'md',\n}) => {\n  const baseClasses = \"rounded-2xl border-0 transition-all duration-300 hover:scale-105\";\n  \n  const variantClasses = {\n    default: \"bg-white shadow-soft hover:shadow-medium\",\n    gradient: \"bg-gradient-to-br from-brand-500 to-action-primary text-white shadow-glow\",\n    glow: \"bg-white shadow-glow-blue border border-action-primary/20\",\n    elevated: \"bg-white shadow-large hover:shadow-glow\",\n  };\n  \n  const sizeClasses = {\n    sm: \"p-4\",\n    md: \"p-6\",\n    lg: \"p-8\",\n    xl: \"p-12\",\n  };\n\n  return (\n    <div className={cn(\n      baseClasses,\n      variantClasses[variant],\n      sizeClasses[size],\n      className\n    )}>\n      {children}\n    </div>\n  );\n};\n\ninterface CardHeaderColorfulProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardHeaderColorful: React.FC<CardHeaderColorfulProps> = ({\n  children,\n  className,\n}) => (\n  <div className={cn(\"mb-6\", className)}>\n    {children}\n  </div>\n);\n\ninterface CardTitleColorfulProps {\n  children: React.ReactNode;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport const CardTitleColorful: React.FC<CardTitleColorfulProps> = ({\n  children,\n  className,\n  size = 'lg',\n}) => {\n  const sizeClasses = {\n    sm: \"text-lg font-semibold\",\n    md: \"text-xl font-semibold\",\n    lg: \"text-2xl font-bold\",\n    xl: \"text-3xl font-bold\",\n  };\n\n  return (\n    <h3 className={cn(\n      \"font-display text-text-primary\",\n      sizeClasses[size],\n      className\n    )}>\n      {children}\n    </h3>\n  );\n};\n\ninterface CardContentColorfulProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardContentColorful: React.FC<CardContentColorfulProps> = ({\n  children,\n  className,\n}) => (\n  <div className={cn(\"space-y-4\", className)}>\n    {children}\n  </div>\n);\n\ninterface CardDescriptionColorfulProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardDescriptionColorful: React.FC<CardDescriptionColorfulProps> = ({\n  children,\n  className,\n}) => (\n  <p className={cn(\n    \"text-text-secondary text-lg font-medium\",\n    className\n  )}>\n    {children}\n  </p>\n);\n\ninterface CardFooterColorfulProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const CardFooterColorful: React.FC<CardFooterColorfulProps> = ({\n  children,\n  className,\n}) => (\n  <div className={cn(\"mt-6 pt-6 border-t border-border-light\", className)}>\n    {children}\n  </div>\n); ","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/cn\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nexport interface SelectTriggerProps extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> {\n  variant?: 'default' | 'filled' | 'underline' | 'ghost';\n}\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  SelectTriggerProps\n>(({ className, children, variant = 'default', ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      variant === 'filled' && \"flex h-10 w-full items-center justify-between rounded-md bg-gray-50 border border-gray-200 px-3 py-2 text-sm focus:bg-white focus:border-blue-400 focus:ring-4 focus:ring-blue-100\",\n      variant === 'underline' && \"h-10 border-0 border-b border-gray-300 rounded-none px-0 text-sm focus:border-blue-500 focus:ring-0\",\n      variant === 'ghost' && \"h-10 bg-transparent border-transparent px-3 py-2 text-sm focus:border-blue-400 focus:ring-2 focus:ring-blue-100\",\n      variant === 'default' && \"flex h-10 w-full items-center justify-between rounded-lg border border-border bg-bg-card px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-action-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal container={typeof document !== 'undefined' ? document.body : undefined}>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-[110] max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-white text-gray-900 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none hover:bg-gray-50 focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n} ","// ============================================================================\n// CURRENCY SELECTOR COMPONENT\n// ============================================================================\n\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './select';\nimport { useCurrency } from '@rentalshop/hooks';\nimport { CurrencyCode } from '@rentalshop/types';\nimport { getCurrencyDisplay } from '@rentalshop/utils';\n\ninterface CurrencySelectorProps {\n  /** CSS class name for styling */\n  className?: string;\n  /** Whether to show currency symbols */\n  showSymbols?: boolean;\n  /** Whether to show currency codes */\n  showCodes?: boolean;\n  /** Whether the selector is disabled */\n  disabled?: boolean;\n  /** Callback when currency changes */\n  onCurrencyChange?: (currency: CurrencyCode) => void;\n}\n\nexport function CurrencySelector({\n  className = '',\n  showSymbols = true,\n  showCodes = true,\n  disabled = false,\n  onCurrencyChange,\n}: CurrencySelectorProps) {\n  const { currentCurrency, setCurrency, settings } = useCurrency();\n\n  const handleCurrencyChange = (value: string) => {\n    const newCurrency = value as CurrencyCode;\n    setCurrency(newCurrency);\n    onCurrencyChange?.(newCurrency);\n  };\n\n  // Get available currencies from settings\n  const availableCurrencies = settings.availableCurrencies;\n\n  return (\n    <Select\n      value={currentCurrency}\n      onValueChange={handleCurrencyChange}\n      disabled={disabled}\n    >\n      <SelectTrigger className={`w-auto min-w-[120px] ${className}`}>\n        <SelectValue>\n          <span className=\"flex items-center gap-2\">\n            {showSymbols && (\n              <span className=\"text-sm font-medium\">\n                {currentCurrency === 'USD' ? '$' : 'đ'}\n              </span>\n            )}\n            {showCodes && (\n              <span className=\"text-sm\">\n                {currentCurrency}\n              </span>\n            )}\n          </span>\n        </SelectValue>\n      </SelectTrigger>\n      \n      <SelectContent>\n        {availableCurrencies.map((currency) => (\n          <SelectItem key={currency.code} value={currency.code}>\n            <div className=\"flex items-center gap-2\">\n              {showSymbols && (\n                <span className=\"font-medium\">\n                  {currency.symbol}\n                </span>\n              )}\n              {showCodes && (\n                <span>\n                  {currency.code}\n                </span>\n              )}\n              <span className=\"text-muted-foreground text-xs\">\n                {currency.name}\n              </span>\n            </div>\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n}\n\nexport default CurrencySelector;\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\nimport { cn } from \"../../lib/cn\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-[100] bg-black/20 backdrop-blur-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-[100] grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-border bg-bg-card p-6 shadow-xl rounded-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n} ","'use client'\n\nimport React from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from './dialog';\nimport { Button } from './button';\nimport { AlertTriangle, AlertCircle, Info, CheckCircle, XCircle } from 'lucide-react';\n\nexport type ConfirmationType = 'danger' | 'warning' | 'info' | 'success';\n\nexport interface ConfirmationDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  type: ConfirmationType;\n  title: string;\n  description: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel?: () => void;\n  isLoading?: boolean;\n  disabled?: boolean;\n}\n\nconst getTypeConfig = (type: ConfirmationType) => {\n  switch (type) {\n    case 'danger':\n      return {\n        icon: XCircle,\n        iconColor: 'text-red-500',\n        buttonVariant: 'destructive' as const,\n        buttonColor: 'bg-red-600 hover:bg-red-700 text-white'\n      };\n    case 'warning':\n      return {\n        icon: AlertTriangle,\n        iconColor: 'text-orange-500',\n        buttonVariant: 'outline' as const,\n        buttonColor: 'border-orange-300 text-orange-600 hover:bg-orange-50'\n      };\n    case 'info':\n      return {\n        icon: Info,\n        iconColor: 'text-blue-500',\n        buttonVariant: 'outline' as const,\n        buttonColor: 'border-blue-300 text-blue-700 hover:bg-blue-50'\n      };\n    case 'success':\n      return {\n        icon: CheckCircle,\n        iconColor: 'text-green-500',\n        buttonVariant: 'default' as const,\n        buttonColor: 'bg-green-600 hover:bg-green-700 text-white'\n      };\n    default:\n      return {\n        icon: AlertCircle,\n        iconColor: 'text-gray-500',\n        buttonVariant: 'outline' as const,\n        buttonColor: 'border-gray-300 text-gray-600 hover:bg-gray-50'\n      };\n  }\n};\n\nexport const ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  open,\n  onOpenChange,\n  type,\n  title,\n  description,\n  confirmText,\n  cancelText = 'Cancel',\n  onConfirm,\n  onCancel,\n  isLoading = false,\n  disabled = false\n}) => {\n  const config = getTypeConfig(type);\n  const IconComponent = config.icon;\n\n  const handleConfirm = () => {\n    onConfirm();\n    onOpenChange(false);\n  };\n\n  const handleCancel = () => {\n    if (onCancel) {\n      onCancel();\n    }\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <div className=\"flex items-center gap-3\">\n            <IconComponent className={`h-6 w-6 ${config.iconColor}`} />\n            <div>\n              <DialogTitle className=\"text-lg font-semibold\">\n                {title}\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n                {description}\n              </DialogDescription>\n            </div>\n          </div>\n        </DialogHeader>\n\n        <DialogFooter className=\"flex justify-end space-x-2 mt-6\">\n          <Button\n            variant=\"outline\"\n            onClick={handleCancel}\n            disabled={isLoading || disabled}\n          >\n            {cancelText}\n          </Button>\n          <Button\n            variant={config.buttonVariant}\n            onClick={handleConfirm}\n            disabled={isLoading || disabled}\n            className={config.buttonColor}\n          >\n            {isLoading ? 'Processing...' : (confirmText || 'Confirm')}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from './dialog';\nimport { Button } from './button';\nimport { Textarea } from './textarea';\nimport { Label } from './label';\nimport { AlertTriangle, AlertCircle, Info, CheckCircle, XCircle } from 'lucide-react';\n\nexport type ConfirmationType = 'danger' | 'warning' | 'info' | 'success';\n\nexport interface ConfirmationDialogWithReasonProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  type: ConfirmationType;\n  title: string;\n  description: string;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: (reason: string) => void;\n  onCancel?: () => void;\n  isLoading?: boolean;\n  disabled?: boolean;\n  reasonLabel?: string;\n  reasonPlaceholder?: string;\n  requireReason?: boolean;\n}\n\nconst getTypeConfig = (type: ConfirmationType) => {\n  switch (type) {\n    case 'danger':\n      return {\n        icon: XCircle,\n        iconColor: 'text-red-500',\n        buttonVariant: 'destructive' as const,\n        buttonColor: 'bg-red-600 hover:bg-red-700 text-white'\n      };\n    case 'warning':\n      return {\n        icon: AlertTriangle,\n        iconColor: 'text-orange-500',\n        buttonVariant: 'outline' as const,\n        buttonColor: 'border-orange-300 text-orange-600 hover:bg-orange-50'\n      };\n    case 'info':\n      return {\n        icon: Info,\n        iconColor: 'text-blue-500',\n        buttonVariant: 'outline' as const,\n        buttonColor: 'border-blue-300 text-blue-700 hover:bg-blue-50'\n      };\n    case 'success':\n      return {\n        icon: CheckCircle,\n        iconColor: 'text-green-500',\n        buttonVariant: 'default' as const,\n        buttonColor: 'bg-green-600 hover:bg-green-700 text-white'\n      };\n    default:\n      return {\n        icon: AlertCircle,\n        iconColor: 'text-gray-500',\n        buttonVariant: 'outline' as const,\n        buttonColor: 'border-gray-300 text-gray-600 hover:bg-gray-50'\n      };\n  }\n};\n\nexport const ConfirmationDialogWithReason: React.FC<ConfirmationDialogWithReasonProps> = ({\n  open,\n  onOpenChange,\n  type,\n  title,\n  description,\n  confirmText,\n  cancelText = 'Cancel',\n  onConfirm,\n  onCancel,\n  isLoading = false,\n  disabled = false,\n  reasonLabel = 'Reason',\n  reasonPlaceholder = 'Enter reason...',\n  requireReason = true\n}) => {\n  const [reason, setReason] = useState('');\n\n  const config = getTypeConfig(type);\n  const IconComponent = config.icon;\n\n  const handleConfirm = () => {\n    onConfirm(reason.trim());\n    setReason('');\n    onOpenChange(false);\n  };\n\n  const handleCancel = () => {\n    setReason('');\n    if (onCancel) {\n      onCancel();\n    }\n    onOpenChange(false);\n  };\n\n  const isConfirmDisabled = isLoading || disabled || (requireReason && !reason.trim());\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <div className=\"flex items-center gap-3\">\n            <IconComponent className={`h-6 w-6 ${config.iconColor}`} />\n            <div>\n              <DialogTitle className=\"text-lg font-semibold\">\n                {title}\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n                {description}\n              </DialogDescription>\n            </div>\n          </div>\n        </DialogHeader>\n\n        <div className=\"space-y-4 mt-6\">\n          <div>\n            <Label htmlFor=\"reason\">{reasonLabel}</Label>\n            <Textarea\n              id=\"reason\"\n              value={reason}\n              onChange={(e) => setReason(e.target.value)}\n              placeholder={reasonPlaceholder}\n              rows={3}\n              className=\"mt-1\"\n            />\n          </div>\n        </div>\n\n        <DialogFooter className=\"flex justify-end space-x-2 mt-6\">\n          <Button\n            variant=\"outline\"\n            onClick={handleCancel}\n            disabled={isLoading || disabled}\n          >\n            {cancelText}\n          </Button>\n          <Button\n            variant={config.buttonVariant}\n            onClick={handleConfirm}\n            disabled={isConfirmDisabled}\n            className={config.buttonColor}\n          >\n            {isLoading ? 'Processing...' : (confirmText || 'Confirm')}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import * as React from \"react\"\n\nimport { cn } from '../../lib/cn';\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  variant?: 'default' | 'filled' | 'underline' | 'ghost';\n}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, variant = 'filled', ...props }, ref) => {\n  const base =\n    \"flex min-h-[80px] w-full rounded-lg border border-border bg-bg-card px-3 py-2 text-sm ring-offset-background placeholder:text-text-tertiary focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-action-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\";\n\n  const variants: Record<NonNullable<TextareaProps['variant']>, string> = {\n    default: base,\n    filled:\n      \"flex w-full min-h-[80px] rounded-md bg-gray-50 border border-gray-200 px-3 py-2 text-sm focus:bg-white focus:border-blue-400 focus:ring-4 focus:ring-blue-100\",\n    underline:\n      \"flex w-full min-h-[80px] border-0 border-b border-gray-300 rounded-none px-0 text-sm focus:border-blue-500 focus:ring-0\",\n    ghost:\n      \"flex w-full min-h-[80px] bg-transparent border-transparent px-3 py-2 text-sm focus:border-blue-400 focus:ring-2 focus:ring-blue-100\",\n  };\n\n  return (\n    <textarea\n      className={cn(variants[variant], className)}\n      ref={ref}\n      {...props}\n    />\n  );\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea } ","import React from 'react';\nimport { cn } from '../../lib/utils';\n\n// ============================================================================\n// LABEL COMPONENT\n// ============================================================================\n\nexport interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  required?: boolean;\n}\n\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\n  ({ className, required, children, ...props }, ref) => {\n    return (\n      <label\n        ref={ref}\n        className={cn(\n          \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {required && <span className=\"text-red-500 ml-1\">*</span>}\n      </label>\n    );\n  }\n);\n\nLabel.displayName = \"Label\";\n\nexport { Label };\n","import * as React from \"react\"\n\nimport { cn } from \"../../lib/cn\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  variant?: 'default' | 'filled' | 'underline' | 'ghost';\n  leadingIcon?: React.ReactNode;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>((\n  { className, type, variant = 'filled', leadingIcon, ...props },\n  ref\n) => {\n  const base =\n    \"flex h-10 w-full rounded-lg border border-border bg-bg-card px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-text-tertiary focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-action-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\";\n\n  const variants: Record<NonNullable<InputProps['variant']>, string> = {\n    default: base,\n    filled:\n      \"flex w-full h-11 rounded-md bg-gray-50 border border-gray-200 px-3 py-2 text-sm focus:bg-white focus:border-blue-400 focus:ring-4 focus:ring-blue-100\",\n    underline:\n      \"flex w-full h-11 border-0 border-b border-gray-300 rounded-none px-0 text-sm focus:border-blue-500 focus:ring-0\",\n    ghost:\n      \"flex w-full h-11 bg-transparent border-transparent px-3 py-2 text-sm focus:border-blue-400 focus:ring-2 focus:ring-blue-100\",\n  };\n\n  const input = (\n    <input\n      type={type}\n      className={cn(variants[variant], className)}\n      ref={ref}\n      {...props}\n    />\n  );\n\n  if (!leadingIcon) return input;\n\n  return (\n    <div className=\"relative\">\n      <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\">{leadingIcon}</span>\n      {React.cloneElement(input as any, {\n        className: cn(variants[variant], 'pl-9', className),\n      })}\n    </div>\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input } ","import React from 'react';\nimport { cn } from '../../lib/utils';\n\ninterface LoadingIndicatorProps {\n  variant?: 'bar' | 'circular' | 'dots' | 'pulse' | 'spinner';\n  size?: 'sm' | 'md' | 'lg';\n  message?: string;\n  className?: string;\n}\n\n/**\n * Modern Loading Indicator Component\n * \n * Variants:\n * - bar: Progress bar style (default, modern)\n * - circular: Circular progress with blue arc (like image)\n * - dots: Bouncing dots (playful)\n * - pulse: Pulsing effect (subtle)\n * - spinner: Traditional spinner (fallback)\n */\nexport function LoadingIndicator({ \n  variant = 'bar', \n  size = 'md',\n  message = 'Loading...',\n  className \n}: LoadingIndicatorProps) {\n  \n  // Size classes\n  const sizeClasses = {\n    sm: { container: 'text-sm', bar: 'h-1', circular: 'h-6 w-6', dots: 'h-2 w-2', spinner: 'h-6 w-6' },\n    md: { container: 'text-base', bar: 'h-1.5', circular: 'h-8 w-8', dots: 'h-3 w-3', spinner: 'h-8 w-8' },\n    lg: { container: 'text-lg', bar: 'h-2', circular: 'h-12 w-12', dots: 'h-4 w-4', spinner: 'h-12 w-12' }\n  };\n\n  const sizes = sizeClasses[size];\n\n  return (\n    <div className={cn('flex flex-col items-center justify-center space-y-4', className)}>\n      {/* Loading Animation */}\n      {variant === 'bar' && (\n        <div className=\"w-64 bg-gray-200 rounded-full overflow-hidden\">\n          <div className={cn(\n            'bg-gradient-to-r from-green-500 via-green-600 to-green-500 rounded-full',\n            'animate-progress',\n            sizes.bar\n          )}>\n            <div className=\"h-full w-full bg-gradient-to-r from-transparent via-white/30 to-transparent animate-shimmer\" />\n          </div>\n        </div>\n      )}\n\n      {variant === 'circular' && (\n        <div className={cn('relative', sizes.circular)}>\n          <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 36 36\">\n            {/* Background circle */}\n            <path\n              className=\"text-gray-200\"\n              stroke=\"currentColor\"\n              strokeWidth=\"3\"\n              fill=\"none\"\n              d=\"M18 2.0845\n                a 15.9155 15.9155 0 0 1 0 31.831\n                a 15.9155 15.9155 0 0 1 0 -31.831\"\n            />\n            {/* Progress arc - blue like in image */}\n            <path\n              className=\"text-blue-700 animate-circular-progress\"\n              stroke=\"currentColor\"\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              fill=\"none\"\n              strokeDasharray=\"100, 100\"\n              strokeDashoffset=\"25\"\n              d=\"M18 2.0845\n                a 15.9155 15.9155 0 0 1 0 31.831\n                a 15.9155 15.9155 0 0 1 0 -31.831\"\n            />\n          </svg>\n        </div>\n      )}\n\n      {variant === 'dots' && (\n        <div className=\"flex space-x-2\">\n          <div className={cn(sizes.dots, 'bg-green-500 rounded-full animate-bounce [animation-delay:-0.3s]')} />\n          <div className={cn(sizes.dots, 'bg-green-600 rounded-full animate-bounce [animation-delay:-0.15s]')} />\n          <div className={cn(sizes.dots, 'bg-green-700 rounded-full animate-bounce')} />\n        </div>\n      )}\n\n      {variant === 'pulse' && (\n        <div className=\"relative\">\n          <div className={cn(sizes.spinner, 'bg-green-500 rounded-full animate-ping absolute opacity-75')} />\n          <div className={cn(sizes.spinner, 'bg-green-600 rounded-full relative')} />\n        </div>\n      )}\n\n      {variant === 'spinner' && (\n        <svg \n          className={cn('animate-spin text-green-600', sizes.spinner)} \n          xmlns=\"http://www.w3.org/2000/svg\" \n          fill=\"none\" \n          viewBox=\"0 0 24 24\"\n        >\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      )}\n\n      {/* Loading Message */}\n      {message && (\n        <p className={cn('text-gray-600 font-medium', sizes.container)}>\n          {message}\n        </p>\n      )}\n    </div>\n  );\n}\n\n/**\n * Compact inline loading indicator (for buttons, cards, etc.)\n */\nexport function LoadingInline({ \n  variant = 'dots',\n  size = 'sm',\n  className \n}: Pick<LoadingIndicatorProps, 'variant' | 'size' | 'className'>) {\n  const sizeClasses = {\n    sm: { dots: 'h-1.5 w-1.5', spinner: 'h-4 w-4' },\n    md: { dots: 'h-2 w-2', spinner: 'h-5 w-5' },\n    lg: { dots: 'h-3 w-3', spinner: 'h-6 w-6' }\n  };\n\n  const sizes = sizeClasses[size];\n\n  if (variant === 'dots') {\n    return (\n      <div className={cn('flex items-center space-x-1', className)}>\n        <div className={cn(sizes.dots, 'bg-current rounded-full animate-bounce [animation-delay:-0.3s]')} />\n        <div className={cn(sizes.dots, 'bg-current rounded-full animate-bounce [animation-delay:-0.15s]')} />\n        <div className={cn(sizes.dots, 'bg-current rounded-full animate-bounce')} />\n      </div>\n    );\n  }\n\n  return (\n    <svg \n      className={cn('animate-spin', sizes.spinner, className)} \n      xmlns=\"http://www.w3.org/2000/svg\" \n      fill=\"none\" \n      viewBox=\"0 0 24 24\"\n    >\n      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n    </svg>\n  );\n}\n\n","'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport type { CurrencyCode } from '@rentalshop/types';\n\n/**\n * Currency Context Interface\n * Provides currency information throughout the application\n */\ninterface CurrencyContextType {\n  /** Current currency code */\n  currency: CurrencyCode;\n  /** Set currency (usually from merchant data) */\n  setCurrency: (currency: CurrencyCode) => void;\n  /** Currency symbol (e.g., '$', 'đ') */\n  symbol: string;\n  /** Currency name (e.g., 'US Dollar', 'Vietnamese Dong') */\n  name: string;\n}\n\n/**\n * Currency configuration for supported currencies\n */\nconst CURRENCY_CONFIG: Record<CurrencyCode, { symbol: string; name: string }> = {\n  USD: { symbol: '$', name: 'US Dollar' },\n  VND: { symbol: 'đ', name: 'Vietnamese Dong' },\n};\n\n// Create context with default USD\nconst CurrencyContext = createContext<CurrencyContextType>({\n  currency: 'USD',\n  setCurrency: () => {},\n  symbol: '$',\n  name: 'US Dollar',\n});\n\n/**\n * Currency Provider Props\n */\ninterface CurrencyProviderProps {\n  children: ReactNode;\n  /** Initial currency (defaults to USD) */\n  initialCurrency?: CurrencyCode;\n  /** Merchant currency (if available) */\n  merchantCurrency?: CurrencyCode;\n}\n\n/**\n * Currency Provider Component\n * \n * Provides currency context to all child components.\n * Automatically uses merchant's currency if available.\n * \n * @example\n * ```tsx\n * // Wrap your app with the provider\n * <CurrencyProvider merchantCurrency={merchant.currency}>\n *   <App />\n * </CurrencyProvider>\n * \n * // Use the currency in any component\n * function MyComponent() {\n *   const { currency, symbol } = useCurrency();\n *   return <div>{formatCurrency(100, currency)}</div>;\n * }\n * ```\n */\nexport const CurrencyProvider: React.FC<CurrencyProviderProps> = ({\n  children,\n  initialCurrency = 'USD',\n  merchantCurrency,\n}) => {\n  const [currency, setCurrency] = useState<CurrencyCode>(\n    merchantCurrency || initialCurrency\n  );\n\n  // Update currency when merchant currency changes\n  useEffect(() => {\n    if (merchantCurrency && merchantCurrency !== currency) {\n      setCurrency(merchantCurrency);\n    }\n  }, [merchantCurrency]);\n\n  // Get currency configuration\n  const config = CURRENCY_CONFIG[currency] || CURRENCY_CONFIG.USD;\n\n  const value: CurrencyContextType = {\n    currency,\n    setCurrency,\n    symbol: config.symbol,\n    name: config.name,\n  };\n\n  return (\n    <CurrencyContext.Provider value={value}>\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n\n/**\n * useCurrency Hook\n * \n * Access currency context in any component\n * \n * @returns Currency context with current currency, symbol, and name\n * \n * @example\n * ```tsx\n * function ProductPrice({ price }: { price: number }) {\n *   const { currency, symbol } = useCurrency();\n *   return (\n *     <div>\n *       {symbol}{price.toLocaleString()} {currency}\n *     </div>\n *   );\n * }\n * ```\n */\nexport const useCurrency = (): CurrencyContextType => {\n  const context = useContext(CurrencyContext);\n  \n  if (!context) {\n    throw new Error('useCurrency must be used within a CurrencyProvider');\n  }\n  \n  return context;\n};\n\n/**\n * withCurrency HOC\n * \n * Higher-order component to inject currency props\n * \n * @param Component - Component to wrap\n * @returns Wrapped component with currency props\n * \n * @example\n * ```tsx\n * interface Props {\n *   price: number;\n *   currency: CurrencyCode;\n * }\n * \n * const ProductPrice = withCurrency<Props>(({ price, currency }) => {\n *   return <div>{formatCurrency(price, currency)}</div>;\n * });\n * ```\n */\nexport function withCurrency<P extends { currency?: CurrencyCode }>(\n  Component: React.ComponentType<P>\n): React.FC<Omit<P, 'currency'>> {\n  return function CurrencyWrappedComponent(props: Omit<P, 'currency'>) {\n    const { currency } = useCurrency();\n    return <Component {...(props as P)} currency={currency} />;\n  };\n}\n\n// Export context for advanced use cases\nexport { CurrencyContext };\nexport default CurrencyProvider;\n\n","/**\n * useFormatCurrency Hook\n * \n * Custom hook that automatically uses merchant's currency from context\n * to format amounts without having to pass currency every time.\n * \n * @example\n * ```tsx\n * const format = useFormatCurrency();\n * \n * // Simple usage\n * <div>{format(100)}</div>  // Output: $100.00 or 100,000đ\n * \n * // With calculations\n * <div>{format(quantity * price)}</div>\n * ```\n */\n\nimport { useCurrency } from '../contexts/CurrencyContext';\nimport { formatCurrency } from '@rentalshop/utils';\n\nexport function useFormatCurrency() {\n  const { currency } = useCurrency();\n  \n  /**\n   * Format amount with merchant's currency\n   * @param amount - Amount to format\n   * @returns Formatted currency string\n   */\n  return (amount: number | null | undefined): string => {\n    return formatCurrency(amount, currency);\n  };\n}\n\n","/**\n * Money Component\n * \n * Automatically formats and displays money using merchant's currency from context.\n * No need to manually get currency or call formatCurrency.\n * \n * @example\n * ```tsx\n * // Simple display\n * <Money amount={100} />  // Output: $100.00 or 100,000đ\n * \n * // With calculation\n * <Money amount={quantity * price} />\n * \n * // With custom className\n * <Money amount={total} className=\"text-lg font-bold text-green-600\" />\n * \n * // As inline text\n * Total: <Money amount={1000} /> (no wrapper div)\n * ```\n */\n\nimport React from 'react';\nimport { useFormatCurrency } from '../../hooks/useFormatCurrency';\n\ninterface MoneyProps {\n  /** Amount to display */\n  amount: number | null | undefined;\n  /** Optional className for styling */\n  className?: string;\n  /** If true, renders as span instead of div (for inline usage) */\n  inline?: boolean;\n}\n\nexport const Money: React.FC<MoneyProps> = ({ \n  amount, \n  className = '',\n  inline = false \n}) => {\n  const format = useFormatCurrency();\n  const formatted = format(amount);\n  \n  if (inline) {\n    return <span className={className}>{formatted}</span>;\n  }\n  \n  return <div className={className}>{formatted}</div>;\n};\n\n/**\n * MoneyBold - Money component with bold styling\n */\nexport const MoneyBold: React.FC<Omit<MoneyProps, 'className'>> = ({ amount, inline }) => (\n  <Money amount={amount} className=\"font-bold\" inline={inline} />\n);\n\n/**\n * MoneyLarge - Money component with larger text\n */\nexport const MoneyLarge: React.FC<Omit<MoneyProps, 'className'>> = ({ amount, inline }) => (\n  <Money amount={amount} className=\"text-lg font-semibold\" inline={inline} />\n);\n\nexport default Money;\n\n","import React from 'react';\nimport { cn } from '../../lib/utils';\n\n// ============================================================================\n// SEPARATOR COMPONENT\n// ============================================================================\n\nexport interface SeparatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: 'horizontal' | 'vertical';\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(\n  ({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        role={decorative ? 'none' : 'separator'}\n        aria-orientation={orientation}\n        className={cn(\n          \"shrink-0 bg-border\",\n          orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\n\nSeparator.displayName = \"Separator\";\n\nexport { Separator };\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../../lib/cn';\n\nexport interface SwitchProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  checked?: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  ({ className, checked, onCheckedChange, ...props }, ref) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      onCheckedChange?.(event.target.checked);\n    };\n\n    return (\n      <input\n        type=\"checkbox\"\n        ref={ref}\n        checked={checked}\n        onChange={handleChange}\n        className={cn(\n          'peer h-6 w-11 shrink-0 cursor-pointer appearance-none rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input',\n          className\n        )}\n        style={{\n          background: checked ? 'var(--color-primary)' : 'var(--color-input)',\n        }}\n        {...props}\n      />\n    );\n  }\n);\n\nSwitch.displayName = 'Switch';\n\nexport { Switch };\n","import * as React from \"react\"\nimport { ChevronDown, Check } from \"lucide-react\"\nimport { cn } from \"../../lib/cn\"\nimport { Button } from \"./button\"\n\nconst DropdownMenu = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"relative\", className)} {...props} />\n))\nDropdownMenu.displayName = \"DropdownMenu\"\n\nconst DropdownMenuTrigger = React.forwardRef<\n  HTMLButtonElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement> & {\n    onToggle?: (open: boolean) => void\n    asChild?: boolean\n  }\n>(({ className, children, onToggle, asChild = false, ...props }, ref) => {\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(children as React.ReactElement<any>, {\n      ...props,\n      ref,\n      onClick: (e: React.MouseEvent) => {\n        e.stopPropagation()\n        onToggle?.(true)\n        children.props.onClick?.(e)\n      }\n    })\n  }\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"ghost\"\n      className={cn(\n        \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n        className\n      )}\n      onClick={(e) => {\n        e.stopPropagation()\n        onToggle?.(true)\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  )\n})\nDropdownMenuTrigger.displayName = \"DropdownMenuTrigger\"\n\nconst DropdownMenuContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    align?: \"start\" | \"end\"\n    sideOffset?: number\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(({ className, align = \"start\", sideOffset = 4, open = false, onOpenChange, ...props }, ref) => {\n  const contentRef = React.useRef<HTMLDivElement>(null)\n  \n  React.useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (open && contentRef.current && !contentRef.current.contains(event.target as Node)) {\n        onOpenChange?.(false)\n      }\n    }\n\n    if (open) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [open, onOpenChange])\n\n  if (!open) return null\n  \n  return (\n    <div\n      ref={(node) => {\n        (contentRef as React.MutableRefObject<HTMLDivElement | null>).current = node\n        if (typeof ref === 'function') {\n          ref(node)\n        } else if (ref) {\n          (ref as React.MutableRefObject<HTMLDivElement | null>).current = node\n        }\n      }}\n      className={cn(\n        \"absolute z-50 min-w-[8rem] overflow-hidden rounded-md border bg-white p-1 text-gray-900 shadow-md animate-in fade-in-0 zoom-in-95\",\n        align === \"end\" ? \"right-0\" : \"left-0\",\n        className\n      )}\n      style={{ marginTop: sideOffset }}\n      onClick={(e) => e.stopPropagation()}\n      {...props}\n    />\n  )\n})\nDropdownMenuContent.displayName = \"DropdownMenuContent\"\n\nconst DropdownMenuItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    inset?: boolean\n    onSelect?: () => void\n  }\n>(({ className, inset, onSelect, onClick, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center justify-start rounded-sm px-2 py-1.5 text-sm text-left outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    onClick={(e) => {\n      e.stopPropagation()\n      onSelect?.()\n      onClick?.(e)\n    }}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = \"DropdownMenuItem\"\n\nconst DropdownMenuSeparator = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = \"DropdownMenuSeparator\"\n\nconst DropdownMenuLabel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = \"DropdownMenuLabel\"\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    checked?: boolean\n  }\n>(({ className, children, checked, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      {checked && <Check className=\"h-4 w-4\" />}\n    </span>\n    {children}\n  </div>\n))\nDropdownMenuCheckboxItem.displayName = \"DropdownMenuCheckboxItem\"\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    checked?: boolean\n  }\n>(({ className, children, checked, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      {checked && <div className=\"h-2 w-2 rounded-full bg-current\" />}\n    </span>\n    {children}\n  </div>\n))\nDropdownMenuRadioItem.displayName = \"DropdownMenuRadioItem\"\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nconst DropdownMenuGroup = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"\", className)} {...props} />\n))\nDropdownMenuGroup.displayName = \"DropdownMenuGroup\"\n\nconst DropdownMenuPortal = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"\", className)} {...props} />\n))\nDropdownMenuPortal.displayName = \"DropdownMenuPortal\"\n\nconst DropdownMenuSub = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"\", className)} {...props} />\n))\nDropdownMenuSub.displayName = \"DropdownMenuSub\"\n\nconst DropdownMenuSubContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg animate-in fade-in-0 zoom-in-95\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName = \"DropdownMenuSubContent\"\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronDown className=\"ml-auto h-4 w-4\" />\n  </div>\n))\nDropdownMenuSubTrigger.displayName = \"DropdownMenuSubTrigger\"\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"\", className)} {...props} />\n))\nDropdownMenuRadioGroup.displayName = \"DropdownMenuRadioGroup\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from \"react\"\nimport { cn } from '../../lib/cn';\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n} ","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Input } from './input';\nimport { cn } from '../../lib/utils';\n\nexport interface NumericInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  placeholder?: string;\n  className?: string;\n  error?: boolean;\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n  step?: number;\n  required?: boolean;\n  label?: string;\n  allowDecimals?: boolean;\n  maxDecimalPlaces?: number;\n  suffix?: string;\n}\n\nexport const NumericInput: React.FC<NumericInputProps> = ({\n  value,\n  onChange,\n  placeholder = \"0\",\n  className,\n  error = false,\n  disabled = false,\n  min = 0,\n  max,\n  step = 1,\n  required = false,\n  label,\n  allowDecimals = true,\n  maxDecimalPlaces = 2,\n  suffix\n}) => {\n  const [displayValue, setDisplayValue] = useState<string>('');\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    setDisplayValue(formatValueForDisplay(value || 0));\n  }, [value]);\n\n  // Format value for display with thousand separators\n  const formatValueForDisplay = (numValue: number): string => {\n    // Handle undefined, null, or NaN values\n    if (numValue === undefined || numValue === null || isNaN(numValue)) {\n      return '';\n    }\n    \n    if (numValue === 0) return '';\n    \n    if (allowDecimals) {\n      return numValue.toLocaleString('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxDecimalPlaces\n      });\n    } else {\n      return numValue.toLocaleString('en-US');\n    }\n  };\n\n  // Handle input change with proper formatting\n  const handleInputChange = (inputValue: string) => {\n    // Handle empty input\n    if (!inputValue || inputValue.trim() === '') {\n      setDisplayValue('');\n      onChange(0);\n      return;\n    }\n    \n    // Remove all non-numeric characters except decimal point (if decimals allowed)\n    const regex = allowDecimals ? /[^\\d.]/g : /[^\\d]/g;\n    const cleanValue = inputValue.replace(regex, '');\n    \n    // Handle decimal points (only allow one if decimals are allowed)\n    if (allowDecimals) {\n      const parts = cleanValue.split('.');\n      if (parts.length > 2) return; // More than one decimal point\n      \n      // Limit decimal places\n      if (parts[1] && parts[1].length > maxDecimalPlaces) return;\n    }\n    \n    // Convert to number\n    const numericValue = allowDecimals ? parseFloat(cleanValue) || 0 : parseInt(cleanValue) || 0;\n    \n    // Apply min/max constraints\n    if (min !== undefined && numericValue < min) return;\n    if (max !== undefined && numericValue > max) return;\n    \n    // Update display value\n    setDisplayValue(cleanValue);\n    \n    // Call parent onChange with numeric value\n    onChange(numericValue);\n  };\n\n  // Handle blur to format the display value\n  const handleBlur = () => {\n    if (value && value > 0) {\n      setDisplayValue(formatValueForDisplay(value));\n    }\n  };\n\n  // Handle focus to show raw value for editing\n  const handleFocus = () => {\n    if (value && value > 0) {\n      setDisplayValue(value.toString());\n    }\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label className=\"text-sm font-medium text-text-primary\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <div className=\"relative\">\n        <Input\n          type=\"text\"\n          value={displayValue}\n          onChange={(e) => handleInputChange(e.target.value)}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          placeholder={placeholder}\n          className={cn(\n            suffix ? \"pr-12\" : \"\",\n            error && \"border-red-500 focus:border-red-500\",\n            className\n          )}\n          disabled={disabled}\n        />\n        {suffix && (\n          <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-text-secondary pointer-events-none\">\n            {suffix}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Keep the old name for backward compatibility\nexport const PriceInput = NumericInput;\nexport default NumericInput;\n","'use client';\n\nimport React, { useState } from 'react';\nimport { NumericInput } from './price-input';\nimport { Card, CardHeader, CardTitle, CardContent } from './card';\n\nexport const NumericInputDemo: React.FC = () => {\n  const [price, setPrice] = useState<number>(0);\n  const [quantity, setQuantity] = useState<number>(0);\n  const [weight, setWeight] = useState<number>(0);\n  const [percentage, setPercentage] = useState<number>(0);\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <h1 className=\"text-2xl font-bold\">NumericInput Component Demo</h1>\n      <p className=\"text-gray-600\">\n        This component can be used for both price and quantity inputs with different configurations.\n      </p>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Price Input Examples */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Price Inputs (with decimals)</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <NumericInput\n              label=\"Price with Currency\"\n              value={price}\n              onChange={setPrice}\n              placeholder=\"0.00\"\n              allowDecimals={true}\n              maxDecimalPlaces={2}\n              suffix=\"$\"\n            />\n            \n            <NumericInput\n              label=\"Price with VND\"\n              value={price}\n              onChange={setPrice}\n              placeholder=\"0.00\"\n              allowDecimals={true}\n              maxDecimalPlaces={0}\n              suffix=\"₫\"\n            />\n            \n            <NumericInput\n              label=\"Price without suffix\"\n              value={price}\n              onChange={setPrice}\n              placeholder=\"0.00\"\n              allowDecimals={true}\n              maxDecimalPlaces={2}\n            />\n          </CardContent>\n        </Card>\n\n        {/* Quantity Input Examples */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Quantity Inputs (no decimals)</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <NumericInput\n              label=\"Stock Quantity\"\n              value={quantity}\n              onChange={setQuantity}\n              placeholder=\"0\"\n              allowDecimals={false}\n              min={0}\n            />\n            \n            <NumericInput\n              label=\"Weight in grams\"\n              value={weight}\n              onChange={setWeight}\n              placeholder=\"0\"\n              allowDecimals={false}\n              min={0}\n              suffix=\"g\"\n            />\n            \n            <NumericInput\n              label=\"Percentage\"\n              value={percentage}\n              onChange={setPercentage}\n              placeholder=\"0\"\n              allowDecimals={false}\n              min={0}\n              max={100}\n              suffix=\"%\"\n            />\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Current Values Display */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Current Values</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"font-medium\">Price:</span> ${price.toFixed(2)}\n            </div>\n            <div>\n              <span className=\"font-medium\">Quantity:</span> {quantity}\n            </div>\n            <div>\n              <span className=\"font-medium\">Weight:</span> {weight}g\n            </div>\n            <div>\n              <span className=\"font-medium\">Percentage:</span> {percentage}%\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Features List */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Features</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ul className=\"space-y-2 text-sm\">\n            <li>✅ Thousand separators (1,000 instead of 1000)</li>\n            <li>✅ No leading zeros (can type 1000 directly)</li>\n            <li>✅ Configurable decimal places (0-2)</li>\n            <li>✅ Optional suffix (currency, units, etc.)</li>\n            <li>✅ Min/max constraints</li>\n            <li>✅ Error state support</li>\n            <li>✅ Required field support</li>\n            <li>✅ Customizable styling</li>\n            <li>✅ Works for both price and quantity inputs</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default NumericInputDemo;\n","'use client';\n\nimport React from 'react';\nimport { Input } from './input';\nimport { Label } from './label';\nimport { cn } from '../../lib/utils';\n\nexport interface LimitInputProps {\n  id: string;\n  label: string;\n  value: number;\n  onChange: (value: number) => void;\n  placeholder?: string;\n  className?: string;\n  error?: boolean;\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n  required?: boolean;\n  helpText?: string;\n}\n\nexport const LimitInput: React.FC<LimitInputProps> = ({\n  id,\n  label,\n  value,\n  onChange,\n  placeholder = \"-1 (unlimited)\",\n  className,\n  error = false,\n  disabled = false,\n  min = -1,\n  max,\n  required = false,\n  helpText = \"Use -1 for unlimited\"\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value;\n    \n    // Handle empty input - set to -1 (unlimited) when empty\n    if (!inputValue || inputValue.trim() === '') {\n      onChange(-1);\n      return;\n    }\n    \n    // Parse the value\n    const numericValue = parseInt(inputValue);\n    \n    // Handle NaN (invalid input)\n    if (isNaN(numericValue)) {\n      return; // Don't update if invalid\n    }\n    \n    // Apply min/max constraints (but allow -1 for unlimited)\n    if (min !== undefined && numericValue < min && numericValue !== -1) {\n      return;\n    }\n    if (max !== undefined && numericValue > max) {\n      return;\n    }\n    \n    // Update the value\n    onChange(numericValue);\n  };\n\n  const getDisplayValue = () => {\n    if (value === undefined || value === null) {\n      return '';\n    }\n    // Handle -1 (unlimited) and other values properly\n    return value.toString();\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor={id}>\n        {label}\n        {required && <span className=\"text-red-500 ml-1\">*</span>}\n      </Label>\n      <Input\n        id={id}\n        type=\"number\"\n        value={getDisplayValue()}\n        onChange={handleChange}\n        placeholder={placeholder}\n        min={min === -1 ? undefined : min} // Don't set min if it's -1 to allow unlimited\n        max={max}\n        disabled={disabled}\n        className={cn(\n          error && \"border-red-500 focus:border-red-500\",\n          className\n        )}\n      />\n      {helpText && (\n        <p className=\"text-xs text-gray-500\">{helpText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default LimitInput;\n","'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Calendar, ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { cn } from '../../lib/cn';\n\nexport interface DateRange {\n  from: Date | undefined;\n  to: Date | undefined;\n}\n\nexport interface DateRangePickerProps {\n  value?: DateRange;\n  onChange?: (range: DateRange) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  showPresets?: boolean;\n  format?: 'short' | 'long';\n  align?: 'left' | 'right';\n}\n\nexport const DateRangePicker: React.FC<DateRangePickerProps> = ({\n  value = { from: undefined, to: undefined },\n  onChange,\n  placeholder = \"Select date range\",\n  className,\n  disabled = false,\n  minDate = new Date(),\n  maxDate,\n  showPresets = true,\n  format = 'short',\n  align = 'left'\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [currentMonth, setCurrentMonth] = useState(() => {\n    const startDate = value?.from || new Date();\n    return new Date(startDate.getFullYear(), startDate.getMonth(), 1);\n  });\n  const [hoveredDate, setHoveredDate] = useState<Date | null>(null);\n  const [tempRange, setTempRange] = useState<DateRange>(value);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // Update temp range when value changes\n  useEffect(() => {\n    setTempRange(value);\n  }, [value]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const formatDate = (date: Date, formatType: 'short' | 'long' = format) => {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    \n    if (formatType === 'long') {\n      return `${day}/${month}/${year}`;\n    }\n    // For short format, show dd/mm\n    return `${day}/${month}`;\n  };\n\n  const formatDisplayValue = () => {\n    if (!value?.from && !value?.to) return placeholder;\n    \n    if (value.from && value.to) {\n      return `${formatDate(value.from, 'long')} - ${formatDate(value.to, 'long')}`;\n    }\n    \n    if (value.from) {\n      return `From ${formatDate(value.from, 'long')}`;\n    }\n    \n    if (value.to) {\n      return `To ${formatDate(value.to, 'long')}`;\n    }\n    \n    return placeholder;\n  };\n\n  const getDaysInMonth = (date: Date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n    \n    return { daysInMonth, startingDayOfWeek };\n  };\n\n  const isDateInRange = (date: Date) => {\n    if (!tempRange.from && !tempRange.to) return false;\n    \n    const dateTime = date.getTime();\n    const fromTime = tempRange.from?.getTime() || 0;\n    const toTime = tempRange.to?.getTime() || 0;\n    \n    if (tempRange.from && tempRange.to) {\n      return dateTime >= fromTime && dateTime <= toTime;\n    }\n    \n    if (tempRange.from) {\n      return dateTime >= fromTime;\n    }\n    \n    if (tempRange.to) {\n      return dateTime <= toTime;\n    }\n    \n    return false;\n  };\n\n  const isDateSelected = (date: Date) => {\n    if (!tempRange.from && !tempRange.to) return false;\n    \n    const dateTime = date.getTime();\n    const fromTime = tempRange.from?.getTime() || 0;\n    const toTime = tempRange.to?.getTime() || 0;\n    \n    return dateTime === fromTime || dateTime === toTime;\n  };\n\n  const isDateDisabled = (date: Date) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    if (minDate && date < minDate) return true;\n    if (maxDate && date > maxDate) return true;\n    \n    return false;\n  };\n\n  const handleDateClick = (date: Date) => {\n    if (isDateDisabled(date)) return;\n    \n    if (!tempRange.from || (tempRange.from && tempRange.to)) {\n      // Start new range\n      setTempRange({ from: date, to: undefined });\n    } else {\n      // Complete range\n      if (date < tempRange.from!) {\n        setTempRange({ from: date, to: tempRange.from });\n      } else {\n        setTempRange({ from: tempRange.from, to: date });\n      }\n    }\n  };\n\n  const handleDateHover = (date: Date) => {\n    if (tempRange.from && !tempRange.to) {\n      setHoveredDate(date);\n    }\n  };\n\n  const handleApply = () => {\n    if (onChange) {\n      onChange(tempRange);\n    }\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    const clearedRange = { from: undefined, to: undefined };\n    setTempRange(clearedRange);\n    if (onChange) {\n      onChange(clearedRange);\n    }\n  };\n\n  const handlePresetClick = (days: number) => {\n    const today = new Date();\n    const from = new Date(today);\n    from.setDate(today.getDate() + 1); // Tomorrow\n    \n    const to = new Date(from);\n    to.setDate(from.getDate() + days - 1);\n    \n    const newRange = { from, to };\n    setTempRange(newRange);\n    if (onChange) {\n      onChange(newRange);\n    }\n    setIsOpen(false);\n  };\n\n  const navigateMonth = (direction: 'prev' | 'next') => {\n    setCurrentMonth(prev => {\n      const newMonth = new Date(prev);\n      if (direction === 'prev') {\n        newMonth.setMonth(prev.getMonth() - 1);\n      } else {\n        newMonth.setMonth(prev.getMonth() + 1);\n      }\n      return newMonth;\n    });\n  };\n\n  const { daysInMonth, startingDayOfWeek } = getDaysInMonth(currentMonth);\n  const weekdays = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n\n  return (\n    <div className={cn(\"relative\", className)} ref={containerRef}>\n      <Button\n        variant=\"outline\"\n        onClick={() => !disabled && setIsOpen(!isOpen)}\n        disabled={disabled}\n        className={cn(\n          \"w-full justify-start text-left font-normal\",\n          !value?.from && !value?.to && \"text-muted-foreground\"\n        )}\n      >\n        <Calendar className=\"mr-2 h-4 w-4\" />\n        {formatDisplayValue()}\n      </Button>\n\n                   {isOpen && (\n               <div className={cn(\n                 \"absolute top-full mt-2 w-full bg-white border border-gray-200 rounded-lg shadow-lg z-50 p-2\",\n                 align === 'left' ? 'left-0' : 'right-0'\n               )}>\n          {/* Header */}\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"text-sm font-semibold text-gray-900\">Chọn khoảng thời gian</h3>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsOpen(false)}\n              className=\"h-6 w-6 p-0\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n\n          {/* Presets */}\n          {showPresets && (\n            <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n              <h4 className=\"text-xs font-medium text-gray-600 mb-2\">Gợi ý nhanh</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                {[1, 3, 7, 14, 30].map(days => (\n                  <Button\n                    key={days}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handlePresetClick(days)}\n                    className=\"text-xs h-7 px-2\"\n                  >\n                    {days} {days === 1 ? 'day' : 'days'}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Calendar Navigation */}\n          <div className=\"flex items-center justify-between mb-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => navigateMonth('prev')}\n              className=\"h-8 w-8 p-0\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            \n            <h4 className=\"text-sm font-medium text-gray-900\">\n              {currentMonth.toLocaleDateString('en-US', { \n                month: 'long', \n                year: 'numeric' \n              })}\n            </h4>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => navigateMonth('next')}\n              className=\"h-8 w-8 p-0\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </div>\n\n                           {/* Calendar Grid */}\n                 <div className=\"mb-2\">\n                   {/* Weekday headers */}\n                   <div className=\"grid grid-cols-7 gap-2 mb-2\">\n                     {weekdays.map(day => (\n                       <div key={day} className=\"text-sm font-medium text-gray-500 text-center py-2\">\n                         {day}\n                       </div>\n                     ))}\n                   </div>\n\n                   {/* Calendar days */}\n                   <div className=\"grid grid-cols-7 gap-2\">\n                     {/* Empty cells for days before month starts */}\n                     {Array.from({ length: startingDayOfWeek }, (_, i) => (\n                       <div key={`empty-${i}`} className=\"h-8\" />\n                     ))}\n\n                     {/* Month days */}\n                     {Array.from({ length: daysInMonth }, (_, i) => {\n                       const date = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), i + 1);\n                       const isDisabled = isDateDisabled(date);\n                       const isSelected = isDateSelected(date);\n                       const isInRange = isDateInRange(date);\n                       const isHovered = hoveredDate && date.getTime() === hoveredDate.getTime();\n\n                      return (\n                        <Button\n                          variant=\"ghost\"\n                          key={i}\n                          onClick={() => handleDateClick(date)}\n                          onMouseEnter={() => handleDateHover(date)}\n                          disabled={isDisabled}\n                          className={cn(\n                            \"h-8 w-8 text-sm rounded-lg transition-colors relative p-0\",\n                            isDisabled && \"text-gray-300 cursor-not-allowed\",\n                            !isDisabled && \"hover:bg-gray-100\",\n                            isSelected && \"bg-blue-700 text-white hover:bg-blue-700\",\n                            isInRange && !isSelected && \"bg-blue-100 text-blue-900\",\n                            isHovered && !isSelected && \"bg-blue-50\"\n                          )}\n                        >\n                          {date.getDate()}\n                        </Button>\n                      );\n                     })}\n                   </div>\n                 </div>\n\n\n\n          {/* Actions */}\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleClear}\n              className=\"flex-1\"\n            >\n              Clear\n            </Button>\n            <Button\n              size=\"sm\"\n              onClick={handleApply}\n              className=\"flex-1\"\n            >\n              Apply\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button } from './button';\nimport { useCommonTranslations } from '@rentalshop/hooks';\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  total: number;\n  limit: number;\n  onPageChange: (page: number) => void;\n  itemName?: string; // e.g., \"orders\", \"products\", \"customers\"\n}\n\nexport function Pagination({ \n  currentPage, \n  totalPages, \n  total, \n  limit,\n  onPageChange,\n  itemName = \"items\"\n}: PaginationProps) {\n  const t = useCommonTranslations();\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxVisiblePages = 5;\n    \n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      if (currentPage <= 3) {\n        for (let i = 1; i <= 4; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      } else if (currentPage >= totalPages - 2) {\n        pages.push(1);\n        pages.push('...');\n        for (let i = totalPages - 3; i <= totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        pages.push(1);\n        pages.push('...');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('...');\n        pages.push(totalPages);\n      }\n    }\n    \n    return pages;\n  };\n\n  const startItem = (currentPage - 1) * limit + 1;\n  const endItem = Math.min(currentPage * limit, total);\n\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n      <div className=\"text-sm text-gray-700 dark:text-gray-300\">\n        {t('pagination.showing')} {startItem} {t('pagination.to')} {endItem} {t('pagination.of')} {total} {itemName}\n      </div>\n      \n      <div className=\"flex items-center space-x-2\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          {t('buttons.previous')}\n        </Button>\n        \n        <div className=\"flex items-center space-x-1\">\n          {getPageNumbers().map((page, index) => (\n            <React.Fragment key={index}>\n              {page === '...' ? (\n                <span className=\"px-3 py-2 text-gray-500\">...</span>\n              ) : (\n                <Button\n                  variant={currentPage === page ? 'default' : 'outline'}\n                  size=\"sm\"\n                  onClick={() => onPageChange(page as number)}\n                  className=\"w-10 h-10 p-0\"\n                >\n                  {page}\n                </Button>\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n        \n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n        >\n          {t('buttons.next')}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/cn\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","import { cn } from '../../lib/cn';\n\ninterface SkeletonProps {\n  className?: string;\n}\n\nexport function Skeleton({ className }: SkeletonProps) {\n  return (\n    <div\n      className={cn(\n        \"animate-pulse rounded-md bg-gray-200 dark:bg-gray-700\",\n        className\n      )}\n    />\n  );\n}\n\n// Card skeleton\nexport function CardSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"rounded-lg border bg-card p-6\", className)}>\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-4 w-3/4\" />\n        <Skeleton className=\"h-4 w-1/2\" />\n        <Skeleton className=\"h-4 w-2/3\" />\n      </div>\n    </div>\n  );\n}\n\n// Table row skeleton\nexport function TableRowSkeleton({ columns = 4 }: { columns?: number }) {\n  return (\n    <tr className=\"border-b transition-colors hover:bg-muted/50\">\n      {Array.from({ length: columns }).map((_, index) => (\n        <td key={index} className=\"p-4\">\n          <Skeleton className=\"h-4 w-full\" />\n        </td>\n      ))}\n    </tr>\n  );\n}\n\n// Table skeleton\nexport function TableSkeleton({ \n  rows = 5, \n  columns = 4, \n  className \n}: { \n  rows?: number; \n  columns?: number; \n  className?: string;\n}) {\n  return (\n    <div className={cn(\"w-full\", className)}>\n      <div className=\"rounded-md border\">\n        <div className=\"border-b bg-muted/50 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <Skeleton className=\"h-6 w-32\" />\n            <Skeleton className=\"h-9 w-24\" />\n          </div>\n        </div>\n        <table className=\"w-full\">\n          <thead className=\"border-b bg-muted/50\">\n            <tr>\n              {Array.from({ length: columns }).map((_, index) => (\n                <th key={index} className=\"p-4 text-left font-medium\">\n                  <Skeleton className=\"h-4 w-20\" />\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from({ length: rows }).map((_, rowIndex) => (\n              <TableRowSkeleton key={rowIndex} columns={columns} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\n// Grid skeleton\nexport function GridSkeleton({ \n  items = 6, \n  className \n}: { \n  items?: number; \n  className?: string;\n}) {\n  return (\n    <div className={cn(\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\", className)}>\n      {Array.from({ length: items }).map((_, index) => (\n        <CardSkeleton key={index} />\n      ))}\n    </div>\n  );\n}\n\n// Form skeleton\nexport function FormSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"space-y-6\", className)}>\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-6 w-24\" />\n        <Skeleton className=\"h-10 w-full\" />\n      </div>\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-6 w-20\" />\n        <Skeleton className=\"h-10 w-full\" />\n      </div>\n      <div className=\"space-y-4\">\n        <Skeleton className=\"h-6 w-28\" />\n        <Skeleton className=\"h-24 w-full\" />\n      </div>\n      <div className=\"flex gap-3\">\n        <Skeleton className=\"h-10 w-24\" />\n        <Skeleton className=\"h-10 w-24\" />\n      </div>\n    </div>\n  );\n}\n\n// Navigation skeleton\nexport function NavigationSkeleton({ className }: SkeletonProps) {\n  return (\n    <nav className={cn(\"flex items-center space-x-4\", className)}>\n      {Array.from({ length: 5 }).map((_, index) => (\n        <Skeleton key={index} className=\"h-8 w-20\" />\n      ))}\n    </nav>\n  );\n}\n\n// Stats skeleton\nexport function StatsSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\", className)}>\n      {Array.from({ length: 4 }).map((_, index) => (\n        <div key={index} className=\"rounded-lg border bg-card p-6\">\n          <div className=\"space-y-2\">\n            <Skeleton className=\"h-4 w-20\" />\n            <Skeleton className=\"h-8 w-16\" />\n            <Skeleton className=\"h-3 w-24\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// Calendar skeleton\nexport function CalendarSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      <div className=\"flex items-center justify-between\">\n        <Skeleton className=\"h-8 w-32\" />\n        <div className=\"flex gap-2\">\n          <Skeleton className=\"h-8 w-8\" />\n          <Skeleton className=\"h-8 w-8\" />\n        </div>\n      </div>\n      <div className=\"grid grid-cols-7 gap-1\">\n        {Array.from({ length: 7 }).map((_, index) => (\n          <div key={index} className=\"h-10 rounded border p-2\">\n            <Skeleton className=\"h-4 w-6\" />\n          </div>\n        ))}\n        {Array.from({ length: 35 }).map((_, index) => (\n          <div key={index} className=\"h-20 rounded border p-2\">\n            <div className=\"space-y-1\">\n              <Skeleton className=\"h-3 w-8\" />\n              <Skeleton className=\"h-2 w-6\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Search skeleton\nexport function SearchSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      <div className=\"flex gap-2\">\n        <Skeleton className=\"h-10 flex-1\" />\n        <Skeleton className=\"h-10 w-24\" />\n      </div>\n      <div className=\"flex gap-2\">\n        <Skeleton className=\"h-8 w-20\" />\n        <Skeleton className=\"h-8 w-24\" />\n        <Skeleton className=\"h-8 w-16\" />\n      </div>\n    </div>\n  );\n}\n\n// Pagination skeleton\nexport function PaginationSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"flex items-center justify-between\", className)}>\n      <Skeleton className=\"h-4 w-32\" />\n      <div className=\"flex gap-1\">\n        <Skeleton className=\"h-8 w-8\" />\n        <Skeleton className=\"h-8 w-8\" />\n        <Skeleton className=\"h-8 w-8\" />\n        <Skeleton className=\"h-8 w-8\" />\n      </div>\n    </div>\n  );\n}\n\n// Sidebar skeleton\nexport function SidebarSkeleton({ className }: SkeletonProps) {\n  return (\n    <div className={cn(\"w-64 space-y-4 p-4\", className)}>\n      <Skeleton className=\"h-8 w-32\" />\n      <div className=\"space-y-2\">\n        {Array.from({ length: 6 }).map((_, index) => (\n          <Skeleton key={index} className=\"h-10 w-full\" />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Header skeleton\nexport function HeaderSkeleton({ className }: SkeletonProps) {\n  return (\n    <header className={cn(\"border-b bg-background\", className)}>\n      <div className=\"flex h-16 items-center justify-between px-4\">\n        <Skeleton className=\"h-8 w-32\" />\n        <div className=\"flex items-center gap-4\">\n          <Skeleton className=\"h-8 w-8\" />\n          <Skeleton className=\"h-8 w-8\" />\n          <Skeleton className=\"h-8 w-24\" />\n        </div>\n      </div>\n    </header>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Loader2 } from 'lucide-react';\nimport type { ProductWithStock } from '@rentalshop/types';\n\ninterface AvailabilityStatus {\n  status: string;\n  text: string;\n  color: string;\n}\n\ninterface ProductAvailabilityAsyncDisplayProps {\n  product: ProductWithStock | undefined;\n  pickupDate?: string;\n  returnDate?: string;\n  requestedQuantity: number;\n  getProductAvailabilityStatus: (\n    product: ProductWithStock, \n    startDate?: string, \n    endDate?: string, \n    requestedQuantity?: number\n  ) => Promise<AvailabilityStatus>;\n}\n\nexport const ProductAvailabilityAsyncDisplay: React.FC<ProductAvailabilityAsyncDisplayProps> = ({\n  product,\n  pickupDate,\n  returnDate,\n  requestedQuantity,\n  getProductAvailabilityStatus\n}) => {\n  const [availability, setAvailability] = useState<AvailabilityStatus | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!product || !pickupDate || !returnDate) {\n      setAvailability(null);\n      return;\n    }\n\n    const checkAvailability = async () => {\n      setIsLoading(true);\n      setError(null);\n      \n      try {\n        const status = await getProductAvailabilityStatus(\n          product, \n          pickupDate, \n          returnDate, \n          requestedQuantity\n        );\n        setAvailability(status);\n      } catch (err) {\n        setError('Failed to check availability');\n        console.error('Availability check error:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Debounce the availability check\n    const timeoutId = setTimeout(checkAvailability, 300);\n    return () => clearTimeout(timeoutId);\n  }, [product, pickupDate, returnDate, requestedQuantity, getProductAvailabilityStatus]);\n\n  if (!product) return null;\n\n  if (isLoading) {\n    return (\n      <div className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-600\">\n        <Loader2 className=\"w-3 h-3 animate-spin mr-1\" />\n        Checking...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-600\">\n        ⚠️ Error checking availability\n      </div>\n    );\n  }\n\n  if (!availability) {\n    return null;\n  }\n\n  return (\n    <div className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${availability.color}`}>\n      {availability.text}\n      {availability.status === 'date-conflict' && (\n        <span className=\"ml-1\">⚠️</span>\n      )}\n      {availability.status === 'out-of-stock' && (\n        <span className=\"ml-1\">🚫</span>\n      )}\n      {availability.status === 'unavailable' && (\n        <span className=\"ml-1\">⚠️</span>\n      )}\n      {availability.status === 'available' && (\n        <span className=\"ml-1\">✅</span>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { CheckCircle, AlertTriangle, XCircle, Package, Loader2 } from 'lucide-react';\n\nexport interface ProductAvailability {\n  status: 'available' | 'unavailable' | 'unknown';\n  available: number;\n  storage: number;\n  hasDateConflict?: boolean;\n  conflictingQuantity?: number;\n  remainingStock?: number;\n}\n\ninterface ProductAvailabilityBadgeProps {\n  availability: ProductAvailability;\n  isLoading?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n}\n\n/**\n * Component hiển thị badge tình trạng sẵn có của sản phẩm\n */\nexport const ProductAvailabilityBadge: React.FC<ProductAvailabilityBadgeProps> = ({ \n  availability, \n  isLoading = false, \n  size = 'sm' \n}) => {\n  if (isLoading) {\n    return (\n      <div className=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-600 border border-gray-200\">\n        <Loader2 className=\"w-3 h-3 animate-spin\" />\n        <span>Checking...</span>\n      </div>\n    );\n  }\n\n  if (!availability) {\n    return null;\n  }\n\n  const { status, available, storage } = availability;\n\n  // Xác định style dựa trên trạng thái\n  const getStatusStyle = () => {\n    switch (status) {\n      case 'available':\n        return {\n          bgColor: 'bg-green-100',\n          textColor: 'text-green-800',\n          borderColor: 'border-green-200',\n          icon: CheckCircle,\n          iconColor: 'text-green-600'\n        };\n      case 'unavailable':\n        return {\n          bgColor: 'bg-red-100',\n          textColor: 'text-red-800',\n          borderColor: 'border-red-200',\n          icon: XCircle,\n          iconColor: 'text-red-600'\n        };\n      default:\n        return {\n          bgColor: 'bg-gray-100',\n          textColor: 'text-gray-800',\n          borderColor: 'border-gray-200',\n          icon: Package,\n          iconColor: 'text-gray-600'\n        };\n    }\n  };\n\n  const getStatusText = () => {\n    switch (status) {\n      case 'available':\n        return 'Available';\n      case 'unavailable':\n        return 'Unavailable';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const getTooltipText = () => {\n    const { hasDateConflict, conflictingQuantity, remainingStock } = availability;\n    \n    switch (status) {\n      case 'available':\n        return `Available for rent: ${remainingStock || available}/${storage}`;\n      case 'unavailable':\n        if (hasDateConflict) {\n          return `Date conflict: ${conflictingQuantity} items rented during this period`;\n        } else {\n          return `Currently unavailable: ${storage - (remainingStock || available)} items rented out`;\n        }\n      default:\n        return 'Stock information unavailable';\n    }\n  };\n\n  const style = getStatusStyle();\n  const IconComponent = style.icon;\n\n  // Size classes\n  const sizeClasses = {\n    sm: 'px-2 py-1 text-xs',\n    md: 'px-3 py-1.5 text-sm',\n    lg: 'px-4 py-2 text-base'\n  };\n\n  const iconSizes = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  return (\n    <div \n      className={`inline-flex items-center gap-1 rounded-full font-medium border transition-colors duration-200 ${sizeClasses[size]} ${style.bgColor} ${style.textColor} ${style.borderColor}`}\n      title={getTooltipText()}\n    >\n      <IconComponent className={`${iconSizes[size]} ${style.iconColor}`} />\n      <span>{getStatusText()}</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { AlertTriangle, CheckCircle } from 'lucide-react';\n\nexport interface OrderItem {\n  productId: number;\n  productName: string;\n  quantity: number;\n}\n\nexport interface ProductAvailabilityData {\n  [productId: number]: {\n    status: 'available' | 'unavailable' | 'unknown';\n    available: number;\n    storage: number;\n    hasDateConflict?: boolean;\n    conflictingQuantity?: number;\n    remainingStock?: number;\n  };\n}\n\ninterface ProductAvailabilityWarningProps {\n  orderItems: OrderItem[];\n  availabilityData: ProductAvailabilityData;\n}\n\n/**\n * Component hiển thị cảnh báo tình trạng sẵn có của sản phẩm trong đơn hàng\n */\nexport const ProductAvailabilityWarning: React.FC<ProductAvailabilityWarningProps> = ({ \n  orderItems, \n  availabilityData \n}) => {\n  if (!orderItems || orderItems.length === 0) {\n    return null;\n  }\n\n  // Kiểm tra các sản phẩm không khả dụng\n  const problematicProducts = orderItems.filter(order => {\n    const availability = availabilityData[order.productId];\n    if (!availability) return false;\n    \n    return availability.status === 'unavailable';\n  });\n\n  if (problematicProducts.length === 0) {\n    return null;\n  }\n\n  const getWarningType = () => {\n    const hasUnavailable = problematicProducts.some(p => \n      availabilityData[p.productId]?.status === 'unavailable'\n    );\n    \n    if (hasUnavailable) return 'warning';\n    return 'info';\n  };\n\n  const getWarningIcon = () => {\n    const type = getWarningType();\n    switch (type) {\n      case 'warning':\n        return <AlertTriangle className=\"w-5 h-5 text-orange-600\" />;\n      default:\n        return <CheckCircle className=\"w-5 h-5 text-blue-700\" />;\n    }\n  };\n\n  const getWarningClass = () => {\n    const type = getWarningType();\n    switch (type) {\n      case 'warning':\n        return 'bg-orange-50 border-orange-200 text-orange-800';\n      default:\n        return 'bg-blue-50 border-blue-200 text-blue-800';\n    }\n  };\n\n  const getWarningTitle = () => {\n    const type = getWarningType();\n    switch (type) {\n      case 'warning':\n        return 'Some products may not be available';\n      default:\n        return 'Stock information';\n    }\n  };\n\n  return (\n    <div className={`p-4 rounded-lg border ${getWarningClass()} mb-4`}>\n      <div className=\"flex items-start gap-3\">\n        {getWarningIcon()}\n        <div className=\"flex-1\">\n          <h4 className=\"font-medium mb-2\">{getWarningTitle()}</h4>\n          <div className=\"space-y-2\">\n            {problematicProducts.map((product) => {\n              const availability = availabilityData[product.productId];\n              if (!availability) return null;\n\n              const getProductStatusText = () => {\n                const { hasDateConflict, conflictingQuantity } = availability;\n                \n                switch (availability.status) {\n                  case 'unavailable':\n                    if (hasDateConflict) {\n                      return `Date conflict: ${conflictingQuantity} items`;\n                    } else {\n                      return 'Currently unavailable';\n                    }\n                  default:\n                    return 'Unknown status';\n                }\n              };\n\n              return (\n                <div key={product.productId} className=\"text-sm\">\n                  <span className=\"font-medium\">{product.productName}</span>\n                  <span className=\"mx-2\">-</span>\n                  <span>{getProductStatusText()}</span>\n                  <span className=\"text-xs opacity-75 ml-2\">\n                    (Requested: {product.quantity})\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../../lib/cn';\nimport { ChevronDown } from 'lucide-react';\nimport { Button } from './button';\n\nexport interface SearchableOption {\n  value: string;\n  label: string;\n  // Extended fields for rich product display\n  image?: string;\n  subtitle?: string;\n  description?: string;\n  details?: string[];\n  type?: 'customer' | 'product' | 'default';\n}\n\nexport interface SearchableSelectProps {\n  value?: number;\n  onChange?: (value: number) => void;\n  options?: SearchableOption[]; // Make optional since it's not needed when onSearch is provided\n  placeholder?: string;\n  searchPlaceholder?: string;\n  className?: string;\n  onSearch?: (query: string) => Promise<SearchableOption[]> | void;\n  emptyText?: string;\n  displayMode?: 'input' | 'button';\n  showAddNew?: boolean; // Show \"Add New\" option at top\n  addNewText?: string; // Text for \"Add New\" option\n  onAddNew?: () => void; // Callback when \"Add New\" is clicked\n}\n\nexport const SearchableSelect: React.FC<SearchableSelectProps> = ({\n  value,\n  onChange,\n  options,\n  placeholder = 'Chọn...',\n  searchPlaceholder = 'Tìm kiếm...',\n  className,\n  onSearch,\n  emptyText = 'Không có dữ liệu',\n  displayMode = 'input',\n  showAddNew = false,\n  addNewText = 'Add New',\n  onAddNew,\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const [query, setQuery] = React.useState('');\n  const [internalOptions, setInternalOptions] = React.useState<SearchableOption[]>(options || []);\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n  const onSearchRef = React.useRef(onSearch);\n  const debounceTimeoutRef = React.useRef<NodeJS.Timeout | null>(null);\n\n  // Update ref when onSearch changes\n  React.useEffect(() => {\n    onSearchRef.current = onSearch;\n  }, [onSearch]);\n\n  // Initialize internal options based on mode\n  React.useEffect(() => {\n    if (onSearch) {\n      // In search mode, start with empty options\n      setInternalOptions([]);\n    } else {\n      // In static mode, start with original options\n      setInternalOptions(options || []);\n    }\n  }, [onSearch, options]);\n\n  // Search effect for dynamic search mode with debounce mechanism\n  React.useEffect(() => {\n    let active = true;\n    const DEBOUNCE_DELAY = 300; // 300ms debounce\n    \n    // Clear any existing timeout\n    if (debounceTimeoutRef.current) {\n      clearTimeout(debounceTimeoutRef.current);\n    }\n    \n    const runSearch = async () => {\n      const currentOnSearch = onSearchRef.current;\n      \n      if (currentOnSearch && query.trim()) {  // Only search if query has content\n        console.log('🔍 SearchableSelect: Making API call for query:', query);\n        const res = await currentOnSearch(query);\n        if (active && Array.isArray(res)) {\n          console.log('🔍 SearchableSelect: Received results:', res.length);\n          setInternalOptions(res);\n        }\n      } else if (currentOnSearch && !query.trim() && !value) {\n        // Only clear search results when query is empty AND no value is selected\n        console.log('🔍 SearchableSelect: Clearing results for empty query (no selection)');\n        setInternalOptions([]);\n      }\n    };\n    \n    if (query.trim()) {\n      // Debounce: wait for user to stop typing before searching\n      debounceTimeoutRef.current = setTimeout(() => {\n        runSearch();\n      }, DEBOUNCE_DELAY);\n    } else if (!query.trim() && !value) {\n      // Clear results immediately for empty query\n      setInternalOptions([]);\n    }\n    \n    return () => {\n      active = false;\n      if (debounceTimeoutRef.current) {\n        clearTimeout(debounceTimeoutRef.current);\n      }\n    };\n  }, [query, value]); // Depend on both query and value\n\n  const filtered = React.useMemo(() => {\n    console.log('🔍 SearchableSelect: Filtering with query:', query, 'onSearch:', !!onSearch, 'options count:', options?.length || 0);\n    \n    if (onSearch) {\n      // In search mode, return search results if available, otherwise show empty\n      if (query.trim()) {\n        console.log('🔍 SearchableSelect: Search mode - returning internalOptions:', internalOptions.length);\n        return internalOptions;\n      } else {\n        console.log('🔍 SearchableSelect: Search mode - returning empty array');\n        return [];\n      }\n    }\n    \n    // In non-search mode, filter the static options\n    const q = query.trim().toLowerCase();\n    if (!q) {\n      console.log('🔍 SearchableSelect: No query - returning all options:', (options || []).length);\n      return options || []; // Use original options, not internalOptions\n    }\n    \n    const filtered = options?.filter((o) => o.label.toLowerCase().includes(q));\n    console.log('🔍 SearchableSelect: Filtered results:', filtered?.length || 0, 'for query:', q);\n    return filtered || [];\n  }, [query, internalOptions, onSearch, options]);\n\n  const selected = internalOptions.find((o) => o.value === String(value));\n\n  // Keep selected label in input for better UX\n  const displayValue = selected?.label || query;\n\n  // Close on outside click (works for both input and button modes)\n  React.useEffect(() => {\n    const handler = (e: MouseEvent | TouchEvent) => {\n      const el = rootRef.current;\n      if (!el) return;\n      if (open && !el.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handler);\n    document.addEventListener('touchstart', handler);\n\n    return () => {\n      document.removeEventListener('mousedown', handler);\n      document.removeEventListener('touchstart', handler);\n    };\n  }, [open]);\n\n  const handleSelect = (option: SearchableOption) => {\n    onChange?.(parseInt(option.value));\n    setOpen(false);\n    // Keep the selected option in the internal options so it remains visible\n    if (onSearch) {\n      setInternalOptions([option]);\n    }\n    // Clear the query after a short delay to allow the selection to be visible\n    setTimeout(() => {\n      setQuery('');\n    }, 100);\n  };\n\n  return (\n    <div className={cn('relative', className)} ref={rootRef}>\n      \n      {displayMode === 'input' ? (\n        <>\n          <input\n            value={displayValue}\n            onFocus={() => {\n              setOpen(true);\n            }}\n            onChange={(e) => {\n              setQuery(e.target.value);\n              setOpen(true);\n            }}\n            onBlur={() => {\n              // Only close dropdown after a longer delay\n              setTimeout(() => {\n                setOpen(false);\n                // Don't clear query here - let it persist for search\n              }, 300);\n            }}\n            placeholder={selected ? selected.label : placeholder}\n            className={cn(\n              'h-11 w-full rounded-lg border border-gray-300 bg-white pl-4 pr-12 text-sm transition-all duration-200',\n              'focus:bg-white focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-100 focus:ring-offset-0',\n              'hover:border-gray-400'\n            )}\n          />\n          <span className=\"pointer-events-none absolute right-10 top-1/2 -translate-y-1/2 h-6 w-px bg-gray-300\" />\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            type=\"button\"\n            aria-label=\"Toggle options\"\n            className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-150 h-6 w-6 p-0\"\n            onMouseDown={(e) => {\n              e.preventDefault();\n              setOpen((o) => !o);\n            }}\n          >\n            <ChevronDown className=\"h-5 w-5\" />\n          </Button>\n          \n          {/* Clear button when there's a query */}\n          {query && (\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              type=\"button\"\n              onClick={() => {\n                setQuery('');\n                // Reset to original options when clearing search\n                if (onSearch) {\n                  setInternalOptions([]); // Clear search results\n                } else {\n                  setInternalOptions(options || []); // Restore original options\n                }\n                setOpen(false);\n              }}\n              className=\"absolute right-12 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-150 h-6 w-6 p-0\"\n            >\n              ✕\n            </Button>\n          )}\n        </>\n      ) : (\n        <Button\n          variant=\"outline\"\n          type=\"button\"\n          onClick={() => setOpen((v) => !v)}\n          className={cn(\n            'h-11 w-full rounded-lg border border-gray-300 bg-white px-4 text-left text-sm flex items-center justify-between transition-all duration-200',\n            'hover:bg-gray-50 hover:border-gray-400 focus:bg-white focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-100 focus:ring-offset-0'\n          )}\n        >\n          <span className={cn(!selected && 'text-gray-400')}>{selected ? selected.label : placeholder}</span>\n          <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n        </Button>\n      )}\n\n      {open && (\n        <div className=\"absolute z-[9999] mt-1 w-full rounded-lg border border-gray-200 bg-white shadow-lg ring-1 ring-black ring-opacity-5\">\n          <div className=\"max-h-64 overflow-auto py-2\">\n            {filtered.length === 0 ? (\n              <div className=\"px-4 py-6 text-center text-sm text-gray-500\">\n                <div className=\"w-8 h-8 mx-auto mb-2 text-gray-300\">\n                  <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <div>{emptyText}</div>\n              </div>\n            ) : (\n              <>\n                {/* Add New Customer Option */}\n                {showAddNew && onAddNew && (\n                  <Button\n                    variant=\"ghost\"\n                    type=\"button\"\n                    onClick={() => {\n                      onAddNew();\n                      setOpen(false);\n                    }}\n                    className=\"flex w-full items-center gap-3 px-4 py-3 text-left text-sm hover:bg-green-50 hover:text-green-700 transition-all duration-150 ease-in-out border-b border-gray-100 h-auto justify-start rounded-none\"\n                  >\n                    {/* Plus icon for add new */}\n                    <div className=\"flex-shrink-0 w-5 h-5 text-green-500\">\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                      </svg>\n                    </div>\n                    \n                    {/* Add New text */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"font-medium text-green-700\">{addNewText}</div>\n                    </div>\n                  </Button>\n                )}\n                \n                {/* Options with custom rendering based on type */}\n                {filtered.map((opt) => {\n                  return (\n                    <Button\n                      variant=\"ghost\"\n                      type=\"button\"\n                      key={opt.value}\n                      onClick={() => {\n                        handleSelect(opt);\n                      }}\n                      className={cn(\n                        'flex w-full items-center gap-3 px-4 py-3 text-left text-sm hover:bg-gray-50 hover:text-gray-900 transition-all duration-150 ease-in-out h-auto justify-start rounded-none',\n                        value === parseInt(opt.value) && 'bg-blue-50 text-blue-700 hover:bg-blue-100'\n                      )}\n                    >\n                    {/* Icon or Image based on type */}\n                    {opt.type === 'product' && opt.image ? (\n                      // Product with image\n                      <div className=\"flex-shrink-0 w-12 h-12 rounded-lg overflow-hidden border border-gray-200\">\n                        <img \n                          src={opt.image} \n                          alt={opt.label}\n                          className=\"w-full h-full object-cover\"\n                          onError={(e) => {\n                            // Fallback to package icon if image fails to load\n                            e.currentTarget.style.display = 'none';\n                            e.currentTarget.nextElementSibling?.classList.remove('hidden');\n                          }}\n                        />\n                        <div className=\"hidden w-full h-full bg-gray-100 flex items-center justify-center\">\n                          <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                          </svg>\n                        </div>\n                      </div>\n                    ) : opt.type === 'product' ? (\n                      // Product without image - use package icon\n                      <div className=\"flex-shrink-0 w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center\">\n                        <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                        </svg>\n                      </div>\n                    ) : (\n                      // Customer or default - use user icon\n                      <div className=\"flex-shrink-0 w-5 h-5 text-gray-400\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                        </svg>\n                      </div>\n                    )}\n                    \n                    {/* Content based on type */}\n                    <div className=\"flex-1 min-w-0\">\n                      {opt.type === 'product' ? (\n                        // Product layout with rich information\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium text-gray-900 truncate\">{opt.label}</div>\n                          {opt.subtitle && (\n                            <div className=\"text-sm text-gray-600 truncate\">{opt.subtitle}</div>\n                          )}\n                          {opt.details && opt.details.length > 0 && (\n                            <div className=\"flex flex-wrap gap-2\">\n                              {opt.details.map((detail, index) => (\n                                <span \n                                  key={index}\n                                  className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800\"\n                                >\n                                  {detail}\n                                </span>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        // Customer or default layout\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium text-gray-900 truncate\">{opt.label}</div>\n                          {opt.description && (\n                            <div className=\"text-sm text-gray-600 whitespace-pre-line\">{opt.description}</div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Selection indicator */}\n                    {value === parseInt(opt.value) && (\n                      <div className=\"flex-shrink-0 w-5 h-5 text-blue-700\">\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </div>\n                    )}\n                  </Button>\n                );\n              })}\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Close on outside click\nexport default SearchableSelect;\n\n\n","'use client';\n\nimport * as React from 'react';\nimport { cn } from '../../lib/cn';\nimport { ChevronDown } from 'lucide-react';\nimport { Button } from './button';\n\nexport interface CountryOption {\n  code: string;\n  name: string;\n  flag: string;\n}\n\nexport interface SearchableCountrySelectProps {\n  value?: string;\n  onChange?: (value: string) => void;\n  options: CountryOption[];\n  placeholder?: string;\n  className?: string;\n  emptyMessage?: string;\n}\n\nexport const SearchableCountrySelect: React.FC<SearchableCountrySelectProps> = ({\n  value,\n  onChange,\n  options,\n  placeholder = 'Select country...',\n  className,\n  emptyMessage = 'No countries found',\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const [query, setQuery] = React.useState('');\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n\n  // Filter countries based on search query\n  const filtered = React.useMemo(() => {\n    const q = query.trim().toLowerCase();\n    if (!q) {\n      return options;\n    }\n    return options.filter((country) => \n      country.name.toLowerCase().includes(q) || \n      country.code.toLowerCase().includes(q)\n    );\n  }, [query, options]);\n\n  const selected = options.find((o) => o.name === value);\n\n  // Keep selected label in input for better UX\n  const displayValue = selected?.label || query;\n\n  // Close on outside click (same as searchable-select.tsx)\n  React.useEffect(() => {\n    const handler = (e: MouseEvent | TouchEvent) => {\n      const el = rootRef.current;\n      if (!el) return;\n      if (open && !el.contains(e.target as Node)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handler);\n    document.addEventListener('touchstart', handler);\n\n    return () => {\n      document.removeEventListener('mousedown', handler);\n      document.removeEventListener('touchstart', handler);\n    };\n  }, [open]);\n\n  const handleSelect = (country: CountryOption) => {\n    console.log('🌍 Country selected:', country.name);\n    onChange?.(country.name);\n    setOpen(false);\n    // Clear the query after a short delay (same as searchable-select.tsx)\n    setTimeout(() => {\n      setQuery('');\n    }, 100);\n  };\n\n  const handleClear = () => {\n    onChange?.('');\n    setQuery('');\n    setOpen(false);\n  };\n\n  return (\n    <div className={cn('relative', className)} ref={rootRef}>\n      {/* Input field - EXACT COPY from searchable-select.tsx */}\n      <>\n        <input\n          value={displayValue}\n          onFocus={() => {\n            setOpen(true);\n          }}\n          onChange={(e) => {\n            setQuery(e.target.value);\n            setOpen(true);\n          }}\n          onBlur={() => {\n            // Only close dropdown after a longer delay (same as searchable-select.tsx)\n            setTimeout(() => {\n              setOpen(false);\n              // Don't clear query here - let it persist for search\n            }, 300);\n          }}\n          placeholder={selected ? `${selected.flag} ${selected.name}` : placeholder}\n          className={cn(\n            'h-11 w-full rounded-lg border border-gray-300 bg-white pl-4 pr-12 text-sm transition-all duration-200',\n            'focus:bg-white focus:border-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-100 focus:ring-offset-0',\n            'hover:border-gray-400'\n          )}\n        />\n        <span className=\"pointer-events-none absolute right-10 top-1/2 -translate-y-1/2 h-6 w-px bg-gray-300\" />\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          type=\"button\"\n          aria-label=\"Toggle options\"\n          className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-150 h-6 w-6 p-0\"\n          onMouseDown={(e) => {\n            e.preventDefault();\n            setOpen((o) => !o);\n          }}\n        >\n          <ChevronDown className=\"h-5 w-5\" />\n        </Button>\n\n        \n        {/* Clear button when there's a query (same as searchable-select.tsx) */}\n        {query && (\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            type=\"button\"\n            onClick={() => {\n              setQuery('');\n              setOpen(false);\n            }}\n            className=\"absolute right-12 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-150 h-6 w-6 p-0\"\n          >\n            ✕\n          </Button>\n        )}\n      </>\n\n      {/* Dropdown */}\n      {open && (\n        <div className=\"absolute z-[9999] mt-1 w-full rounded-lg border border-gray-200 bg-white shadow-lg ring-1 ring-black ring-opacity-5\">\n          <div className=\"max-h-64 overflow-auto py-2\">\n            {filtered.length === 0 ? (\n              <div className=\"px-4 py-6 text-center text-sm text-gray-500\">\n                <div className=\"w-8 h-8 mx-auto mb-2 text-gray-300\">\n                  <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <div>{emptyMessage}</div>\n              </div>\n            ) : (\n              <>\n                {filtered.map((country) => (\n                  <Button\n                    variant=\"ghost\"\n                    type=\"button\"\n                    key={country.code}\n                    onClick={() => {\n                      console.log('🖱️ Selecting country:', country.name);\n                      handleSelect(country);\n                    }}\n                    className={cn(\n                      'flex w-full items-center gap-3 px-4 py-3 text-left text-sm hover:bg-gray-50 hover:text-gray-900 transition-all duration-150 ease-in-out h-auto justify-start rounded-none',\n                      value === country.name && 'bg-blue-50 text-blue-700 hover:bg-blue-100'\n                    )}\n                  >\n                    {/* Flag */}\n                    <span className=\"text-2xl flex-shrink-0\">{country.flag}</span>\n                    \n                    {/* Country name and code */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"font-medium text-gray-900 truncate\">{country.name}</div>\n                      <div className=\"text-xs text-gray-500\">{country.code}</div>\n                    </div>\n                    \n                    {/* Selection indicator */}\n                    {value === country.name && (\n                      <div className=\"flex-shrink-0 w-5 h-5 text-blue-700\">\n                        <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </div>\n                    )}\n                  </Button>\n                ))}\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchableCountrySelect;\n\n","'use client';\n\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react';\nimport { cn } from '../../lib/utils';\nimport { Button } from './button';\n\nexport type ToastType = 'success' | 'error' | 'warning' | 'info';\n\nexport interface ToastProps {\n  id: string;\n  type: ToastType;\n  title: string;\n  message?: string;\n  duration?: number;\n  onClose: (id: string) => void;\n}\n\nconst toastIcons = {\n  success: CheckCircle,\n  error: AlertCircle,\n  warning: AlertTriangle,\n  info: Info,\n};\n\nconst toastStyles = {\n  success: 'bg-green-50 border-green-200 text-green-800',\n  error: 'bg-red-50 border-red-200 text-red-800',\n  warning: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n  info: 'bg-blue-50 border-blue-200 text-blue-800',\n};\n\nconst iconStyles = {\n  success: 'text-green-400',\n  error: 'text-red-400',\n  warning: 'text-yellow-400',\n  info: 'text-blue-400',\n};\n\nexport const Toast: React.FC<ToastProps> = ({\n  id,\n  type,\n  title,\n  message,\n  duration = 5000,\n  onClose,\n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        setIsVisible(false);\n        setTimeout(() => onClose(id), 300); // Wait for fade out animation\n      }, duration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [duration, id, onClose]);\n\n  const Icon = toastIcons[type];\n\n  return (\n    <div\n      className={cn(\n        'w-full transition-all duration-300 ease-in-out',\n        isVisible ? 'opacity-100 scale-100' : 'opacity-0 scale-95'\n      )}\n    >\n      <div\n        className={cn(\n          'border rounded-lg shadow-lg p-4 flex items-start space-x-3',\n          toastStyles[type]\n        )}\n      >\n        <Icon className={cn('w-5 h-5 mt-0.5 flex-shrink-0', iconStyles[type])} />\n        \n        <div className=\"flex-1 min-w-0\">\n          <h4 className=\"text-sm font-medium\">{title}</h4>\n          {message && (\n            <p className=\"text-sm mt-1 opacity-90\">{message}</p>\n          )}\n        </div>\n        \n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={() => {\n            setIsVisible(false);\n            setTimeout(() => onClose(id), 300);\n          }}\n          className=\"ml-2 flex-shrink-0 opacity-70 hover:opacity-100 transition-opacity h-6 w-6 p-0\"\n        >\n          <X className=\"w-4 h-4\" />\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport interface ToastContainerProps {\n  toasts: ToastProps[];\n  onClose: (id: string) => void;\n}\n\nexport const ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onClose }) => {\n  console.log('🎯 ToastContainer render:', { toastsCount: toasts?.length || 0, toasts });\n  \n  return (\n    <div className=\"fixed top-4 right-4 z-[9999] flex flex-col gap-3 max-w-sm\">\n      {toasts?.map((toast, index) => (\n        <div \n          key={toast.id} \n          className=\"animate-slide-in-from-right\"\n          style={{ \n            animationDelay: `${index * 100}ms`,\n            transform: `translateY(${index * 8}px)`\n          }}\n        >\n          <Toast {...toast} onClose={onClose} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Toast Context Type\ntype ToastContextType = {\n  toasts: ToastProps[];\n  addToast: (type: ToastType, title: string, message?: string, duration?: number) => string;\n  removeToast: (id: string) => void;\n};\n\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\n// Toast Provider Component\nexport const ToastProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastProps[]>([]);\n\n  const addToast = (type: ToastType, title: string, message?: string, duration?: number) => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const newToast: ToastProps = {\n      id,\n      type,\n      title,\n      message,\n      duration,\n      onClose: removeToast,\n    };\n    \n    setToasts(prev => [...prev, newToast]);\n    return id;\n  };\n\n  const removeToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  return (\n    <ToastContext.Provider value={{ toasts, addToast, removeToast }}>\n      {children}\n      <ToastContainer toasts={toasts} onClose={removeToast} />\n    </ToastContext.Provider>\n  );\n};\n\n// Hook for managing toasts (internal)\nexport const useToasts = () => {\n  const context = useContext(ToastContext);\n  if (context === undefined) {\n    throw new Error('useToasts must be used within a ToastProvider');\n  }\n  return context;\n};\n\n// Unified toast hook with consistent naming (public API)\nexport const useToast = () => {\n  const { addToast, removeToast } = useToasts();\n  \n  // ✅ NEW: Prefixed naming to avoid conflicts with state variables\n  const toastSuccess = (title: string, message?: string) => addToast('success', title, message);\n  const toastError = (title: string, message?: string) => addToast('error', title, message, 0); // No auto-hide for errors\n  const toastWarning = (title: string, message?: string) => addToast('warning', title, message);\n  const toastInfo = (title: string, message?: string) => addToast('info', title, message);\n  \n  return {\n    // Primary API - use these to avoid naming conflicts\n    toastSuccess,\n    toastError,\n    toastWarning,\n    toastInfo,\n    removeToast,\n    // Deprecated: kept for backward compatibility, will be removed in future\n    success: toastSuccess,\n    error: toastError,\n    warning: toastWarning,\n    info: toastInfo,\n  };\n};\n","'use client'\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent, \n  Button, \n  Input, \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue, \n  Textarea, \n  Badge, \n  Table, \n  TableHeader, \n  TableBody, \n  TableHead, \n  TableRow, \n  TableCell, \n  NumericInput\n} from '../ui';\nimport { formatCurrency } from '../../lib';\nimport { uploadImage, getAuthToken, type UploadProgress } from '@rentalshop/utils';\nimport { useProductTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { \n  Package, \n  DollarSign, \n  Warehouse, \n  Tag,\n  Plus,\n  Trash2,\n  CheckCircle,\n  XCircle,\n  Upload,\n  Image as ImageIcon,\n  AlertCircle,\n  RefreshCw,\n  Loader2\n} from 'lucide-react';\nimport type { \n  ProductInput, \n  ProductUpdateInput\n} from '@rentalshop/types';\n\n// Define Category interface locally since it's not exported from database\ninterface Category {\n  id: number;\n  name: string;\n  description?: string;\n  isActive: boolean;\n}\n\ninterface ProductFormData {\n  name: string;\n  description: string;\n  barcode: string;\n  categoryId: number;\n  rentPrice: number;\n  salePrice: number;\n  deposit: number;\n  totalStock: number;\n  images: string[];\n  outletStock: Array<{\n    outletId: number;\n    stock: number;\n  }>;\n  sku: string;\n}\n\ninterface ProductFormProps {\n  initialData?: Partial<ProductFormData>;\n  categories: Category[];\n  outlets: Array<{ id: number; name: string; address?: string }>;\n  onSubmit: (data: ProductInput, files?: File[]) => void; // Updated to support files\n  onCancel?: () => void;\n  loading?: boolean;\n  title?: string;\n  submitText?: string | React.ReactNode;\n  mode?: 'create' | 'edit';\n  merchantId?: string | number; // Add merchantId prop\n  hideHeader?: boolean; // Hide header when used in dialog\n  hideSubmitButton?: boolean; // Hide submit button when using external action buttons\n  formId?: string; // Form ID for external submit buttons\n  useMultipartUpload?: boolean; // New prop to enable multipart form data upload\n}\n\nexport const ProductForm: React.FC<ProductFormProps> = ({\n  initialData = {},\n  categories = [],\n  outlets = [],\n  onSubmit,\n  onCancel,\n  loading = false,\n  title = 'Product Information',\n  submitText = 'Save Product',\n  mode = 'create',\n  merchantId = '',\n  hideHeader = false,\n  hideSubmitButton = false,\n  formId,\n  useMultipartUpload = false\n}) => {\n  const t = useProductTranslations();\n  const tc = useCommonTranslations();\n  \n  const [formData, setFormData] = useState<ProductFormData>({\n    name: '',\n    description: '',\n    barcode: '',\n    categoryId: 0,\n    rentPrice: 0,\n    salePrice: 0,\n    deposit: 0,\n    totalStock: 0,\n    images: [],\n    outletStock: [],\n    sku: '',\n    ...initialData\n  });\n\n  \n\n  const [errors, setValidationErrors] = useState<Partial<Record<keyof ProductFormData, string>>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [dragActive, setDragActive] = useState(false);\n  const [autoSaveStatus, setAutoSaveStatus] = useState<'idle' | 'saving' | 'saved' | 'error'>('idle');\n  const [uploadProgress, setUploadProgress] = useState<Record<string, UploadProgress>>({});\n  const [uploadErrors, setUploadErrors] = useState<Record<string, string>>({});\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]); // New state for files when using multipart upload\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Debug: Log initial data changes\n  useEffect(() => {\n    console.log('🔍 ProductForm - initialData changed:', initialData);\n    console.log('🔍 ProductForm - initialData.categoryId:', initialData.categoryId);\n    console.log('🔍 ProductForm - initialData.categoryId type:', typeof initialData.categoryId);\n    console.log('🔍 ProductForm - mode:', mode);\n    console.log('🔍 ProductForm - outlets:', outlets);\n    console.log('🔍 ProductForm - initialData.outletStock:', initialData.outletStock);\n    console.log('🔍 ProductForm - formData.outletStock:', formData.outletStock);\n    console.log('🔍 ProductForm - outlets.length:', outlets.length);\n    console.log('🔍 ProductForm - formData.outletStock.length:', formData.outletStock.length);\n    \n    // Additional debugging for edit mode\n    if (mode === 'edit') {\n      console.log('🔍 ProductForm - EDIT MODE: Checking outlet stock coverage');\n      const outletIds = outlets.map(o => o.id);\n      const stockOutletIds = formData.outletStock.map(os => os.outletId);\n      console.log('🔍 ProductForm - All outlet IDs:', outletIds);\n      console.log('🔍 ProductForm - Stock outlet IDs:', stockOutletIds);\n      \n      const missingOutlets = outletIds.filter(id => !stockOutletIds.includes(id));\n      if (missingOutlets.length > 0) {\n        console.warn('🔍 ProductForm - WARNING: Missing outlet stock for outlets:', missingOutlets);\n      }\n    }\n  }, [initialData, mode, outlets, formData.outletStock]);\n\n  // Handle initialData changes and re-initialize form\n  useEffect(() => {\n    if (initialData && Object.keys(initialData).length > 0) {\n      console.log('🔍 ProductForm - Re-initializing form with new initialData:', initialData);\n      setFormData({\n        name: '',\n        description: '',\n        barcode: '',\n        categoryId: 0,\n        rentPrice: 0,\n        salePrice: 0,\n        deposit: 0,\n        totalStock: 0,\n        images: [],\n        outletStock: [],\n        sku: '',\n        ...initialData\n      });\n    }\n  }, [initialData]);\n\n  // Initialize outlet stock and default category if not provided\n  useEffect(() => {\n    let updatedFormData = { ...formData };\n    \n    // Initialize outlet stock if not provided (only for new products, not edit mode)\n    if (mode === 'create' && formData.outletStock.length === 0 && outlets.length > 0) {\n      updatedFormData.outletStock = outlets.map(outlet => ({\n        outletId: outlet.id,\n        stock: 0,\n      }));\n    }\n    \n    // Set default category if none selected and categories are available\n    if (!formData.categoryId && categories.length > 0) {\n      updatedFormData.categoryId = categories[0].id;\n    }\n    \n    // Auto-generate barcode if not provided (only for new products)\n    if (mode === 'create' && !formData.barcode) {\n      updatedFormData.barcode = generateBarcode();\n    }\n    \n    // Only update if there are changes\n    if (JSON.stringify(updatedFormData) !== JSON.stringify(formData)) {\n      setFormData(updatedFormData);\n    }\n  }, [outlets, categories, formData.outletStock.length, formData.categoryId, formData.barcode, mode]);\n\n  // Auto-sync outlet stock with totalStock if only 1 outlet (default outlet)\n  useEffect(() => {\n    if (outlets.length === 1 && formData.outletStock.length === 1) {\n      const currentOutletStock = formData.outletStock[0].stock;\n      \n      // If totalStock changes and differs from outlet stock, sync it\n      if (formData.totalStock !== currentOutletStock) {\n        setFormData(prev => ({\n          ...prev,\n          outletStock: [{\n            outletId: outlets[0].id,\n            stock: formData.totalStock\n          }]\n        }));\n      }\n    }\n  }, [formData.totalStock, outlets.length]);\n\n  // Generate unique barcode\n  const generateBarcode = (): string => {\n    const timestamp = Date.now().toString().slice(-8); // Last 8 digits of timestamp\n    const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n    return `${timestamp}${random}`; // RS = Rental Shop prefix\n  };\n\n  // Auto-save functionality\n  useEffect(() => {\n    if (mode === 'edit' && formData.name && formData.categoryId) {\n      const timeoutId = setTimeout(() => {\n        handleAutoSave();\n      }, 2000);\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [formData.name, formData.description, formData.categoryId, mode]);\n\n  const handleAutoSave = useCallback(async () => {\n    // Don't validate during auto-save to avoid setState warnings\n    // Just proceed with auto-save logic\n    \n    setAutoSaveStatus('saving');\n    try {\n      // Here you would call a lightweight auto-save API\n      // For now, we'll just simulate it\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setAutoSaveStatus('saved');\n      setTimeout(() => setAutoSaveStatus('idle'), 3000);\n    } catch (error) {\n      setAutoSaveStatus('error');\n      setTimeout(() => setAutoSaveStatus('idle'), 3000);\n    }\n  }, [formData]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<Record<keyof ProductFormData, string>> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Product name is required';\n    }\n\n    if (!formData.categoryId) {\n      newErrors.categoryId = 'Category is required';\n    }\n\n    if (formData.rentPrice <= 0) {\n      newErrors.rentPrice = 'Rent price is required and must be greater than 0';\n    }\n\n    if (formData.salePrice <= 0) {\n      newErrors.salePrice = 'Sale price is required and must be greater than 0';\n    }\n\n    if (formData.deposit < 0) {\n      newErrors.deposit = 'Deposit is required and cannot be negative';\n    }\n\n    if (formData.totalStock <= 0) {\n      newErrors.totalStock = 'Total stock is required and must be greater than 0';\n    }\n\n    // Check if outlets are available\n    if (outlets.length === 0) {\n      newErrors.outletStock = 'No outlets available. Please contact your administrator to set up outlets.';\n      return false;\n    }\n\n    // Validate outlet stock - ensure outlet stock is provided\n    if (formData.outletStock.length === 0) {\n      newErrors.outletStock = 'Outlet stock is required. Please specify stock levels for at least one outlet.';\n      return false;\n    }\n\n    // Validate outlet stock - ensure all outlets have stock values\n    if (formData.outletStock.length > 0) {\n      const invalidOutletStock = formData.outletStock.find(item => item.stock < 0);\n      if (invalidOutletStock) {\n        newErrors.outletStock = 'Outlet stock values cannot be negative';\n      }\n    }\n\n    // Don't call setValidationErrors here - just return the errors\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    console.log('🔍 ProductForm: Form submitted with data:', formData);\n    console.log('🔍 ProductForm - categoryId type:', typeof formData.categoryId);\n    console.log('🔍 ProductForm - categoryId value:', formData.categoryId);\n    \n    // Validate form and set errors if validation fails\n    if (!validateForm()) {\n      console.log('❌ ProductForm: Validation failed');\n\n      // Set validation errors here instead\n      const newErrors: Partial<Record<keyof ProductFormData, string>> = {};\n\n      if (!formData.name.trim()) {\n        newErrors.name = 'Product name is required';\n      }\n\n      if (!formData.categoryId) {\n        newErrors.categoryId = 'Category is required';\n      }\n\n      if (formData.rentPrice <= 0) {\n        newErrors.rentPrice = 'Rent price is required and must be greater than 0';\n      }\n\n      if (formData.salePrice <= 0) {\n        newErrors.salePrice = 'Sale price is required and must be greater than 0';\n      }\n\n      if (formData.deposit < 0) {\n        newErrors.deposit = 'Deposit is required and cannot be negative';\n      }\n\n      if (formData.totalStock <= 0) {\n        newErrors.totalStock = 'Total stock is required and must be greater than 0';\n      }\n\n      // Validate outlet stock - ensure outlet stock is provided\n      if (formData.outletStock.length === 0) {\n        newErrors.outletStock = 'Outlet stock is required. Please specify stock levels for at least one outlet.';\n        setValidationErrors(newErrors);\n        return;\n      }\n\n      // Validate outlet stock - ensure all outlets have stock values\n      if (formData.outletStock.length > 0) {\n        const invalidOutletStock = formData.outletStock.find(item => item.stock < 0);\n        if (invalidOutletStock) {\n          newErrors.outletStock = 'Outlet stock values cannot be negative';\n        }\n      }\n\n\n      setValidationErrors(newErrors);\n      return;\n    }\n    \n\n\n    const productData: ProductInput = {\n      merchantId: typeof merchantId === 'string' ? parseInt(merchantId) || 0 : merchantId || 0,\n      categoryId: formData.categoryId,\n      name: formData.name,\n      description: formData.description,\n      barcode: formData.barcode,\n      totalStock: formData.totalStock,\n      rentPrice: formData.rentPrice,\n      salePrice: formData.salePrice > 0 ? formData.salePrice : undefined,\n      deposit: formData.deposit,\n      images: useMultipartUpload ? [] : formData.images, // Empty array for multipart, existing images for immediate upload\n      outletStock: formData.outletStock,\n    };\n\n    // Pass files when using multipart upload\n    if (useMultipartUpload) {\n      onSubmit(productData, selectedFiles);\n    } else {\n      onSubmit(productData);\n    }\n  };\n\n  const handleInputChange = (field: keyof ProductFormData, value: any) => {\n    // Handle type conversion for specific fields\n    let processedValue = value;\n    \n    if (field === 'categoryId') {\n      // Convert string to number for categoryId\n      processedValue = parseInt(value) || 0;\n    } else if (field === 'rentPrice' || field === 'salePrice' || field === 'deposit') {\n      // Ensure numeric fields are numbers\n      processedValue = parseFloat(value) || 0;\n    } else if (field === 'totalStock') {\n      // Ensure stock is a number\n      processedValue = parseInt(value) || 0;\n    }\n    \n    setFormData(prev => ({\n      ...prev,\n      [field]: processedValue\n    }));\n\n    // Clear validation error for this field\n    if (errors[field]) {\n      setValidationErrors(prev => ({\n        ...prev,\n        [field]: undefined\n      }));\n    }\n  };\n\n\n\n  const updateOutletStock = (outletId: number, field: 'stock', value: number) => {\n    setFormData(prev => ({\n      ...prev,\n      outletStock: prev.outletStock.map(item =>\n        item.outletId === outletId ? { ...item, [field]: value } : item\n      )\n    }));\n  };\n\n\n\n  // Image handling - supports both immediate upload and multipart form data\n  const handleImageUpload = async (files: FileList | null) => {\n    if (!files) return;\n    \n    // Check if adding more files would exceed the 3 image limit\n    const currentImageCount = useMultipartUpload ? selectedFiles.length : formData.images.length;\n    if (currentImageCount >= 3) {\n      console.warn('Maximum 3 images allowed');\n      return;\n    }\n    \n    const filesArray = Array.from(files);\n    const filesToUpload = filesArray.slice(0, 3 - currentImageCount);\n    \n    if (useMultipartUpload) {\n      // For multipart upload, just store files and show preview\n      console.log('🔍 Using multipart upload mode - storing files locally');\n      setSelectedFiles(prev => [...prev, ...filesToUpload]);\n      \n      // Clear any upload errors\n      setUploadErrors({});\n      return;\n    }\n    \n    // Get auth token for immediate upload\n    const token = getAuthToken();\n    if (!token) {\n      console.error('No authentication token found');\n      setUploadErrors(prev => ({\n        ...prev,\n        general: 'Authentication required. Please log in again.'\n      }));\n      return;\n    }\n    \n    for (const file of filesToUpload) {\n      const fileId = `${file.name}-${Date.now()}`;\n      \n      // Clear any previous errors for this file\n      setUploadErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[fileId];\n        return newErrors;\n      });\n      \n      // Add placeholder for loading state\n      setFormData(prev => ({\n        ...prev,\n        images: [...prev.images, `uploading-${fileId}`]\n      }));\n      \n      try {\n        // Upload with progress tracking, compression, and optimization\n        const uploadResult = await uploadImage(file, token, {\n          folder: 'staging',\n          maxFileSize: 5 * 1024 * 1024, // 5MB\n          allowedTypes: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\n          maxWidth: 1200, // Client-side resize before upload\n          maxHeight: 900,\n          quality: 0.85,\n          // Enable advanced compression\n          enableCompression: true,\n          compressionQuality: 0.8, // 80% quality\n          maxSizeMB: 1, // Max 1MB after compression\n          onProgress: (progress: UploadProgress) => {\n            setUploadProgress(prev => ({\n              ...prev,\n              [fileId]: progress\n            }));\n          }\n        });\n        \n        if (uploadResult.success && uploadResult.data) {\n          // Success - replace placeholder with actual URL\n          setFormData(prev => ({\n            ...prev,\n            images: prev.images.map(img => \n              img === `uploading-${fileId}` ? uploadResult.data!.url : img\n            )\n          }));\n          \n          // Show success message based on upload method\n          if (uploadResult.data.uploadMethod === 'base64') {\n            console.warn('⚠️ Image uploaded using base64 fallback. Configure Cloudinary for production.');\n          } else if (uploadResult.data.uploadMethod === 'local') {\n            console.warn('⚠️ Image uploaded to local storage. Configure Cloudinary for production.');\n          } else {\n            console.log('✅ Image uploaded successfully to Cloudinary');\n          }\n          \n          // Clean up progress\n          setUploadProgress(prev => {\n            const newProgress = { ...prev };\n            delete newProgress[fileId];\n            return newProgress;\n          });\n        } else {\n          // Upload failed\n          console.error('Upload failed:', uploadResult.error);\n          setUploadErrors(prev => ({\n            ...prev,\n            [fileId]: uploadResult.error || 'Upload failed'\n          }));\n          \n          // Remove placeholder\n          setFormData(prev => ({\n            ...prev,\n            images: prev.images.filter(img => img !== `uploading-${fileId}`)\n          }));\n        }\n      } catch (error) {\n        console.error('Upload error:', error);\n        setUploadErrors(prev => ({\n          ...prev,\n          [fileId]: error instanceof Error ? error.message : 'Upload failed'\n        }));\n        \n        // Remove placeholder\n        setFormData(prev => ({\n          ...prev,\n          images: prev.images.filter(img => img !== `uploading-${fileId}`)\n        }));\n      }\n    }\n  };\n\n  const removeImage = (index: number) => {\n    if (useMultipartUpload) {\n      // Remove from selectedFiles\n      setSelectedFiles(prev => prev.filter((_, i) => i !== index));\n    } else {\n      // Remove from formData.images (existing behavior)\n      setFormData(prev => ({\n        ...prev,\n        images: prev.images.filter((_, i) => i !== index)\n      }));\n    }\n  };\n\n  const handleDrag = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  }, []);\n\n    const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n\n    const currentImageCount = useMultipartUpload ? selectedFiles.length : formData.images.length;\n    if (e.dataTransfer.files && e.dataTransfer.files[0] && currentImageCount < 3) {\n      handleImageUpload(e.dataTransfer.files);\n    }\n  }, [formData.images.length, selectedFiles.length, useMultipartUpload]);\n\n  const getProductStatus = () => {\n    if (formData.totalStock === 0) return { status: 'Out of Stock', variant: 'destructive' as const };\n    return { status: 'In Stock', variant: 'default' as const };\n  };\n\n  const { status, variant } = getProductStatus();\n\n  // Helper variables for image handling\n  const currentImages = useMultipartUpload ? selectedFiles : formData.images;\n  const currentImageCount = currentImages.length;\n  const isMaxImagesReached = currentImageCount >= 3;\n\n  // Helper function to create image preview URL for files\n  const createFilePreviewUrl = (file: File): string => {\n    return URL.createObjectURL(file);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Auto-save Status */}\n      {!hideHeader && (\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-text-primary mb-2\">{title}</h1>\n          \n            {mode === 'edit' && (\n              <div className=\"flex items-center gap-2 mt-2\">\n                {autoSaveStatus === 'saving' && (\n                  <div className=\"flex items-center gap-2 text-sm text-text-secondary\">\n                    <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-text-secondary\" />\n                    Auto-saving...\n                  </div>\n                )}\n                {autoSaveStatus === 'saved' && (\n                  <div className=\"flex items-center gap-2 text-sm text-green-600\">\n                    <CheckCircle className=\"w-4 h-4\" />\n                    Auto-saved\n                  </div>\n                )}\n                {autoSaveStatus === 'error' && (\n                  <div className=\"flex items-center gap-2 text-sm text-red-600\">\n                    <XCircle className=\"w-4 h-4\" />\n                    Auto-save failed\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <Badge variant={variant} className=\"text-sm\">\n              {status}\n            </Badge>\n          </div>\n        </div>\n      )}\n\n      <form id={formId} onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Product Information */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Package className=\"w-5 h-5\" />\n              {t('productDetails')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-text-primary\">{t('fields.name')} *</label>\n                <Input\n                  value={formData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  placeholder={t('fields.name')}\n                  className={errors.name ? 'border-red-500' : ''}\n                />\n                {errors.name && <p className=\"text-sm text-red-500\">{errors.name}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-text-primary\">{t('fields.sku')}</label>\n                <Input\n                  value={formData.sku}\n                  onChange={(e) => handleInputChange('sku', e.target.value)}\n                  placeholder={t('fields.sku')}\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-text-primary\">{t('fields.barcode')}</label>\n                <div className=\"flex gap-2\">\n                  <Input\n                    value={formData.barcode}\n                    onChange={(e) => handleInputChange('barcode', e.target.value)}\n                    placeholder={t('fields.barcode')}\n                    className=\"flex-1\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleInputChange('barcode', generateBarcode())}\n                    title={t('messages.generateBarcode')}\n                  >\n                    <RefreshCw className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-text-primary\">{t('fields.category')} *</label>\n                <Select\n                  value={formData.categoryId.toString()}\n                  onValueChange={(value) => {\n                    handleInputChange('categoryId', value);\n                  }}\n                >\n                  <SelectTrigger className={errors.categoryId ? 'border-red-500' : ''}>\n                    <SelectValue placeholder={t('fields.category')} />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {categories.map((category) => (\n                      <SelectItem key={category.id} value={category.id.toString()}>\n                        {category.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {errors.categoryId && <p className=\"text-sm text-red-500\">{errors.categoryId}</p>}\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-text-primary\">{t('fields.description')}</label>\n              <Textarea\n                value={formData.description}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                placeholder={t('fields.description')}\n                rows={3}\n              />\n            </div>\n\n            {/* Pricing Section - Merged into Product Details */}\n            <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\n              <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center gap-2\">\n                <DollarSign className=\"w-4 h-4\" />\n                {t('pricing.title')}\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <NumericInput\n                  label={t('fields.rentPrice')}\n                  value={formData.rentPrice}\n                  onChange={(value) => handleInputChange('rentPrice', value)}\n                  placeholder=\"0.00\"\n                  error={!!errors.rentPrice}\n                  required\n                  allowDecimals={true}\n                  maxDecimalPlaces={2}\n                />\n                {errors.rentPrice && <p className=\"text-sm text-red-500\">{errors.rentPrice}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <NumericInput\n                  label={t('fields.salePrice')}\n                  value={formData.salePrice}\n                  onChange={(value) => handleInputChange('salePrice', value)}\n                  placeholder=\"0.00\"\n                  error={!!errors.salePrice}\n                  required\n                  allowDecimals={true}\n                  maxDecimalPlaces={2}\n                />\n                {errors.salePrice && <p className=\"text-sm text-red-500\">{errors.salePrice}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <NumericInput\n                  label={t('fields.deposit')}\n                  value={formData.deposit}\n                  onChange={(value) => handleInputChange('deposit', value)}\n                  placeholder=\"0.00\"\n                  error={!!errors.deposit}\n                  required\n                  allowDecimals={true}\n                  maxDecimalPlaces={2}\n                />\n                {errors.deposit && <p className=\"text-sm text-red-500\">{errors.deposit}</p>}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <NumericInput\n                  label={t('fields.stock')}\n                  value={formData.totalStock}\n                  onChange={(value) => handleInputChange('totalStock', value)}\n                  placeholder=\"0\"\n                  error={!!errors.totalStock}\n                  required\n                  allowDecimals={false}\n                  min={0}\n                />\n                {errors.totalStock && <p className=\"text-sm text-red-500\">{errors.totalStock}</p>}\n              </div>\n            </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Outlet Stock Management - Only show if merchant has multiple outlets */}\n        {outlets.length > 1 ? (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Warehouse className=\"w-5 h-5\" />\n                {t('inventory.outletStockDistribution')} *\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n            <div className=\"mb-4\">\n              <p className=\"text-sm text-muted-foreground\">\n                {t('inventory.totalOutlets')}: {outlets.length} | {t('inventory.stockEntries')}: {formData.outletStock.length} | <span className=\"text-red-500\">*</span> {t('inventory.stockRequired')}\n              </p>\n            </div>\n            \n            {outlets.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Warehouse className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold mb-2\">{t('inventory.noOutletsAvailable')}</h3>\n                <p className=\"text-muted-foreground mb-4\">\n                  {t('inventory.needOutletMessage')}\n                </p>\n                <p className=\"text-sm text-red-500\">\n                  {t('inventory.contactAdmin')}\n                </p>\n              </div>\n            ) : (\n              <>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>{t('filters.outletLabel')}</TableHead>\n                      <TableHead>{t('stock.label')}</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {formData.outletStock.map((outletStock) => {\n                      const outlet = outlets.find(o => o.id === outletStock.outletId);\n                      \n                      return (\n                        <TableRow key={outletStock.outletId}>\n                          <TableCell className=\"font-medium\">\n                            <div>\n                              <div className=\"font-medium\">{outlet?.name || 'Unknown Outlet'}</div>\n                              {outlet?.address && (\n                                <div className=\"text-sm text-text-secondary mt-1\">\n                                  {outlet.address}\n                                </div>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <NumericInput\n                              value={outletStock.stock}\n                              onChange={(value) => updateOutletStock(outletStock.outletId, 'stock', value)}\n                              min={0}\n                              allowDecimals={false}\n                              required\n                              className=\"w-20\"\n                            />\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n                \n                {/* Outlet Stock Validation Error */}\n                {errors.outletStock && (\n                  <div className=\"mt-4\">\n                    <p className=\"text-sm text-red-500\">{errors.outletStock}</p>\n                  </div>\n                )}\n              </>\n            )}\n          </CardContent>\n        </Card>\n        ) : null}\n\n        {/* Enhanced Image Management */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <ImageIcon className=\"w-5 h-5\" />\n              {t('fields.images')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {/* Drag & Drop Zone */}\n            <div\n              className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n                dragActive && !isMaxImagesReached\n                  ? 'border-action-primary bg-action-primary/10' \n                  : isMaxImagesReached\n                  ? 'border-gray-300 bg-gray-50'\n                  : 'border-border hover:border-action-primary/50'\n              }`}\n              onDragEnter={!isMaxImagesReached ? handleDrag : undefined}\n              onDragLeave={!isMaxImagesReached ? handleDrag : undefined}\n              onDragOver={!isMaxImagesReached ? handleDrag : undefined}\n              onDrop={!isMaxImagesReached ? handleDrop : undefined}\n            >\n              <Upload className={`w-8 h-8 mx-auto mb-2 ${isMaxImagesReached ? 'text-gray-400' : 'text-text-secondary'}`} />\n              <p className=\"text-text-primary font-medium mb-1\">\n                {isMaxImagesReached ? t('messages.maxImagesReached') : t('messages.dragDropImages')}\n              </p>\n              <p className=\"text-text-secondary text-sm mb-3\">\n                {useMultipartUpload \n                  ? `${t('messages.imageFormats')} (will be uploaded with form data)`\n                  : t('messages.imageFormats')\n                }\n              </p>\n              \n              {/* File Input */}\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                multiple\n                accept=\"image/*\"\n                onChange={(e) => handleImageUpload(e.target.files)}\n                className=\"hidden\"\n                id=\"image-upload\"\n                disabled={isMaxImagesReached}\n              />\n              \n              {/* Browse Button */}\n              <Button \n                type=\"button\" \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => fileInputRef.current?.click()}\n                disabled={isMaxImagesReached}\n              >\n                {isMaxImagesReached ? t('messages.maxImagesReached') : tc('buttons.browse')}\n              </Button>\n            </div>\n\n            {/* Image Counter and Preview Grid */}\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm text-text-secondary\">\n                {currentImageCount}/3 {useMultipartUpload ? t('messages.imagesSelected') : t('messages.imagesUploaded')}\n              </p>\n              {currentImageCount > 0 && (\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => {\n                    if (useMultipartUpload) {\n                      setSelectedFiles([]);\n                    } else {\n                      setFormData(prev => ({ ...prev, images: [] }));\n                    }\n                  }}\n                >\n                  {t('messages.clearAllImages')}\n                </Button>\n              )}\n            </div>\n            \n            {/* Upload Errors Display */}\n            {Object.keys(uploadErrors).length > 0 && (\n              <div className=\"space-y-2\">\n                {Object.entries(uploadErrors).map(([fileId, error]) => (\n                  <div key={fileId} className=\"flex items-start gap-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n                    <AlertCircle className=\"w-4 h-4 text-red-500 mt-0.5 flex-shrink-0\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm text-red-700 font-medium\">{t('messages.uploadFailed')}</p>\n                      <p className=\"text-xs text-red-600 mt-1\">{error}</p>\n                    </div>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      type=\"button\"\n                      onClick={() => setUploadErrors(prev => {\n                        const newErrors = { ...prev };\n                        delete newErrors[fileId];\n                        return newErrors;\n                      })}\n                      className=\"text-red-400 hover:text-red-600 h-6 w-6 p-0\"\n                    >\n                      <XCircle className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            {currentImageCount > 0 && (\n              <div className=\"grid grid-cols-3 gap-3\">\n                {useMultipartUpload ? (\n                  // Render selected files for multipart upload\n                  selectedFiles.map((file, index) => {\n                    const previewUrl = createFilePreviewUrl(file);\n                    return (\n                      <div key={index} className=\"relative group\">\n                        <img\n                          src={previewUrl}\n                          alt={`${file.name}`}\n                          className=\"w-full h-24 object-cover rounded-lg border\"\n                        />\n                        <div className=\"absolute bottom-0 left-0 right-0 bg-black/50 text-white text-xs p-1 rounded-b-lg truncate\">\n                          {file.name}\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          type=\"button\"\n                          onClick={() => {\n                            removeImage(index);\n                            URL.revokeObjectURL(previewUrl); // Clean up object URL\n                          }}\n                          className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-600 h-6 w-6\"\n                          title={t('messages.removeImage')}\n                        >\n                          <XCircle className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    );\n                  })\n                ) : (\n                  // Render uploaded images (existing behavior)\n                  formData.images.map((image, index) => {\n                    // Check if this is an uploading placeholder\n                    const isUploading = image.startsWith('uploading-');\n                    const fileId = isUploading ? image.replace('uploading-', '') : '';\n                    const progress = isUploading ? uploadProgress[fileId] : null;\n                    \n                    return (\n                      <div key={index} className=\"relative group\">\n                        {isUploading ? (\n                          // Upload Progress Card\n                          <div className=\"w-full h-24 rounded-lg border border-action-primary bg-action-primary/5 flex flex-col items-center justify-center gap-2\">\n                            <Loader2 className=\"w-6 h-6 animate-spin text-action-primary\" />\n                            {progress && (\n                              <>\n                                <div className=\"w-full px-4\">\n                                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                                    <div \n                                      className=\"bg-action-primary h-2 rounded-full transition-all duration-300\"\n                                      style={{ width: `${progress.percentage}%` }}\n                                    />\n                                  </div>\n                                </div>\n                                <p className=\"text-xs text-text-secondary\">\n                                  {progress.stage === 'preparing' && t('messages.preparing')}\n                                  {progress.stage === 'uploading' && `${t('messages.uploading')} ${progress.percentage}%`}\n                                  {progress.stage === 'processing' && t('messages.processing')}\n                                  {progress.stage === 'complete' && t('messages.complete')}\n                                </p>\n                              </>\n                            )}\n                          </div>\n                        ) : (\n                          // Image Preview\n                          <>\n                            <img\n                              src={image}\n                              alt={`${t('fields.name')} ${index + 1}`}\n                              className=\"w-full h-24 object-cover rounded-lg border\"\n                            />\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              type=\"button\"\n                              onClick={() => removeImage(index)}\n                              className=\"absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-600 h-6 w-6\"\n                              title={t('messages.removeImage')}\n                            >\n                              <XCircle className=\"w-4 h-4\" />\n                            </Button>\n                          </>\n                        )}\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n\n\n\n\n        {/* Action Buttons */}\n        {!hideSubmitButton && (\n          <div className=\"flex justify-end\">\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting || !validateForm()}\n              className=\"min-w-[120px]\"\n            >\n              {isSubmitting ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\" />\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                  {submitText}\n                </>\n              )}\n            </Button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea,\n  Badge,\n  formatDate,\n  formatCurrency,\n  SearchableSelect,\n  useToast  } from '@rentalshop/ui';\nimport type { \n  OrderInput, \n  OrderItemInput, \n  OrderType,\n  CustomerSearchResult,\n  ProductWithStock\n} from '@rentalshop/types';\n\ninterface OrderFormProps {\n  initialData?: Partial<OrderInput>;\n  customers?: CustomerSearchResult[];\n  products?: ProductWithStock[];\n  outlets?: Array<{ id: number; name: string }>;\n  onSubmit: (data: OrderInput) => void;\n  onCancel: () => void;\n  loading?: boolean;\n  layout?: 'stacked' | 'split';\n}\n\ninterface OrderItemFormData {\n  productId: number;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n  \n  // Core rental fields (keeping previous calculation logic)\n  rentalDays: number;       // Số ngày thuê (Rental Duration)\n  startDate?: string;       // Ngày bắt đầu thuê (Start Date) - Optional\n  endDate?: string;         // Ngày kết thúc thuê (End Date) - Optional\n  daysRented?: number;      // Calculated days (keeping for backward compatibility)\n  \n  // Financial fields\n  deposit: number;          // Tiền cọc (Deposit Amount) - keeping previous field\n  \n  // Additional info\n  notes: string;            // Ghi chú cho sản phẩm này\n}\n\nexport const OrderForm: React.FC<OrderFormProps> = ({\n  initialData,\n  customers = [],\n  products = [],\n  outlets = [],\n  onSubmit,\n  onCancel,\n  loading = false,\n  layout = 'stacked',\n}) => {\n  const { toastError, toastWarning } = useToast();\n  \n  const [formData, setFormData] = useState<Partial<OrderInput>>({\n    orderType: 'RENT',\n    customerId: '',\n    outletId: '',\n    pickupPlanAt: undefined,\n    returnPlanAt: undefined,\n    subtotal: 0,\n    taxAmount: 0,\n    discountAmount: 0,\n    totalAmount: 0,\n    depositAmount: 0,\n    notes: '',\n    customerName: '',\n    customerPhone: '',\n    customerEmail: '',\n    orderItems: [],\n    ...initialData,\n  });\n\n  const [orderItems, setOrderItems] = useState<OrderItemFormData[]>(\n    initialData?.orderItems?.map(item => ({\n      productId: item.productId,\n      quantity: item.quantity,\n      unitPrice: item.unitPrice,\n      totalPrice: item.totalPrice,\n      rentalDays: item.rentalDays || 0,\n      startDate: item.startDate?.toISOString().split('T')[0] || '',\n      endDate: item.endDate?.toISOString().split('T')[0] || '',\n      daysRented: item.daysRented || 0,\n      deposit: item.deposit || 0,\n      notes: item.notes || '',\n    })) || []\n  );\n\n  const [selectedCustomer, setSelectedCustomer] = useState<CustomerSearchResult | null>(\n    customers.find(c => c.id === formData.customerId) || null\n  );\n\n  // Calculate totals when order items change\n  useEffect(() => {\n    const subtotal = orderItems.reduce((sum, item) => sum + item.totalPrice, 0);\n    const taxAmount = subtotal * 0.1; // 10% tax\n    const totalAmount = subtotal + taxAmount - (formData.discountAmount || 0);\n\n    setFormData(prev => ({\n      ...prev,\n      subtotal,\n      taxAmount,\n      totalAmount,\n      orderItems: orderItems.map(item => ({\n        productId: item.productId,\n        quantity: item.quantity,\n        unitPrice: item.unitPrice,\n        totalPrice: item.totalPrice,\n        rentalDays: item.rentalDays,\n        startDate: item.startDate ? new Date(item.startDate) : undefined,\n        endDate: item.endDate ? new Date(item.endDate) : undefined,\n        daysRented: item.daysRented,\n        deposit: item.deposit,\n        notes: item.notes,\n      })),\n    }));\n  }, [orderItems, formData.discountAmount]);\n\n  // Update customer info when customer is selected\n  useEffect(() => {\n    if (selectedCustomer) {\n      setFormData(prev => ({\n        ...prev,\n        customerId: selectedCustomer.id,\n        customerName: `${selectedCustomer.firstName} ${selectedCustomer.lastName}`,\n        customerPhone: selectedCustomer.phone,\n        customerEmail: selectedCustomer.email,\n      }));\n    }\n  }, [selectedCustomer]);\n\n  const addOrderItem = () => {\n    setOrderItems(prev => [...prev, {\n      productId: '',\n      quantity: 1,\n      unitPrice: 0,\n      totalPrice: 0,\n      rentalDays: 0,\n      startDate: '',\n      endDate: '',\n      daysRented: 0,\n      deposit: 0,\n      notes: '',\n    }]);\n  };\n\n  const removeOrderItem = (index: number) => {\n    setOrderItems(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const updateOrderItem = (index: number, field: keyof OrderItemFormData, value: any) => {\n    setOrderItems(prev => {\n      const newItems = [...prev];\n      const item = { ...newItems[index], [field]: value };\n\n      // Auto-calculate total price\n      if (field === 'quantity' || field === 'unitPrice') {\n        item.totalPrice = item.quantity * item.unitPrice;\n      }\n\n      // Auto-calculate total price for rentals based on rental days\n      if (formData.orderType === 'RENT' && field === 'rentalDays') {\n        item.totalPrice = item.quantity * item.unitPrice * (item.rentalDays || 1);\n      }\n\n      // Auto-calculate unit price and total price based on product\n      if (field === 'productId') {\n        const product = products.find(p => p.id === value);\n        if (product) {\n          item.unitPrice = formData.orderType === 'RENT' ? product.rentPrice : (product.salePrice || 0);\n          item.totalPrice = item.quantity * item.unitPrice;\n        }\n      }\n\n      newItems[index] = item;\n      return newItems;\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!formData.outletId) {\n      toastError('Validation Error', 'Please select an outlet');\n      return;\n    }\n\n    if (orderItems.length === 0) {\n      toastError('Validation Error', 'Please add at least one product');\n      return;\n    }\n\n    if (orderItems.some(item => !item.productId)) {\n      toastError('Validation Error', 'Please select a product for all items');\n      return;\n    }\n\n    onSubmit(formData as OrderInput);\n  };\n\n  // --- Build sections once ---\n  const InfoCard = (\n    <Card>\n      <CardHeader>\n        <CardTitle>Thông tin đơn hàng</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Loại đơn hàng</label>\n            <Select\n              value={formData.orderType}\n              onValueChange={(value: OrderType) => setFormData(prev => ({ ...prev, orderType: value }))}\n            >\n              <SelectTrigger variant=\"filled\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"RENT\">Thuê</SelectItem>\n                <SelectItem value=\"SALE\">Bán</SelectItem>\n                <SelectItem value=\"RENT_TO_OWN\">Thuê để mua</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Cửa hàng *</label>\n            <Select\n              value={formData.outletId}\n              onValueChange={(value: string) => setFormData(prev => ({ ...prev, outletId: value }))}\n            >\n              <SelectTrigger variant=\"filled\">\n                <SelectValue placeholder=\"Chọn cửa hàng\" />\n              </SelectTrigger>\n              <SelectContent>\n                {outlets.map(outlet => (\n                  <SelectItem key={outlet.id} value={outlet.id}>\n                    {outlet.name}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Khách hàng</label>\n          <SearchableSelect\n            value={selectedCustomer?.id || undefined}\n            onChange={(val: number) => {\n              const customer = customers.find(c => c.id === val);\n              setSelectedCustomer(customer || null);\n            }}\n            options={customers.map((c) => ({\n              value: String(c.id),\n              label: `${c.firstName} ${c.lastName} - ${c.phone}`,\n            }))}\n            placeholder=\"Chọn khách hàng hoặc để trống cho khách vãng lai\"\n            searchPlaceholder=\"Tìm kiếm khách hàng...\"\n          />\n        </div>\n\n        {!selectedCustomer && (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tên khách hàng</label>\n              <Input variant=\"filled\" value={formData.customerName || ''} onChange={(e) => setFormData(prev => ({ ...prev, customerName: e.target.value }))} placeholder=\"Tên khách hàng\" />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Số điện thoại</label>\n              <Input variant=\"filled\" value={formData.customerPhone || ''} onChange={(e) => setFormData(prev => ({ ...prev, customerPhone: e.target.value }))} placeholder=\"Số điện thoại\" />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\n              <Input type=\"email\" variant=\"filled\" value={formData.customerEmail || ''} onChange={(e) => setFormData(prev => ({ ...prev, customerEmail: e.target.value }))} placeholder=\"Email\" />\n            </div>\n          </div>\n        )}\n\n        {formData.orderType === 'RENT' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ngày nhận dự kiến</label>\n              <Input\n                type=\"datetime-local\"\n                variant=\"filled\"\n                value={formData.pickupPlanAt?.toISOString().slice(0, 16) || ''}\n                onChange={(e) => setFormData(prev => ({ ...prev, pickupPlanAt: e.target.value ? new Date(e.target.value) : undefined }))}\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ngày trả dự kiến</label>\n              <Input\n                type=\"datetime-local\"\n                variant=\"filled\"\n                value={formData.returnPlanAt?.toISOString().slice(0, 16) || ''}\n                onChange={(e) => setFormData(prev => ({ ...prev, returnPlanAt: e.target.value ? new Date(e.target.value) : undefined }))}\n              />\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const ProductsCard = (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>Sản phẩm</CardTitle>\n          <Button type=\"button\" onClick={addOrderItem} variant=\"outline\" size=\"sm\">Thêm sản phẩm</Button>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {orderItems.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">Chưa có sản phẩm nào. Nhấn \"Thêm sản phẩm\" để bắt đầu.</div>\n        ) : (\n          <div className=\"space-y-4\">\n            {orderItems.map((item, index) => (\n              <div key={index} className=\"border rounded-lg p-4 space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <h4 className=\"font-medium\">Sản phẩm {index + 1}</h4>\n                  <Button type=\"button\" variant=\"destructive\" size=\"sm\" onClick={() => removeOrderItem(index)}>Xóa</Button>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sản phẩm *</label>\n                    <Select value={item.productId} onValueChange={(value: string) => updateOrderItem(index, 'productId', value)}>\n                      <SelectTrigger variant=\"filled\">\n                        <SelectValue placeholder=\"Chọn sản phẩm\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {products.map(product => (\n                          <SelectItem key={product.id} value={product.id}>\n                            {product.name} - {formatCurrency(product.rentPrice)}/ngày\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Số lượng</label>\n                    <Input variant=\"filled\" type=\"number\" min=\"1\" value={item.quantity} onChange={(e) => updateOrderItem(index, 'quantity', parseInt(e.target.value) || 1)} />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Đơn giá</label>\n                    <Input variant=\"filled\" type=\"number\" min=\"0\" step=\"0.01\" value={item.unitPrice} onChange={(e) => updateOrderItem(index, 'unitPrice', parseFloat(e.target.value) || 0)} />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tiền cọc</label>\n                    <Input variant=\"filled\" type=\"number\" min=\"0\" step=\"0.01\" value={item.deposit} onChange={(e) => updateOrderItem(index, 'deposit', parseFloat(e.target.value) || 0)} />\n                  </div>\n                </div>\n                {formData.orderType === 'RENT' && (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ngày bắt đầu thuê</label>\n                      <Input variant=\"filled\" type=\"date\" value={item.startDate || ''} onChange={(e) => updateOrderItem(index, 'startDate', e.target.value)} />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ngày kết thúc thuê</label>\n                      <Input variant=\"filled\" type=\"date\" value={item.endDate || ''} onChange={(e) => updateOrderItem(index, 'endDate', e.target.value)} />\n                    </div>\n                  </div>\n                )}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ghi chú</label>\n                  <Textarea value={item.notes} onChange={(e) => updateOrderItem(index, 'notes', e.target.value)} placeholder=\"Ghi chú cho sản phẩm này\" />\n                </div>\n                <div className=\"flex justify-end\">\n                  <Badge variant=\"outline\">Tổng: {formatCurrency(item.totalPrice)}</Badge>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const FinancialCard = (\n    <Card>\n      <CardHeader>\n        <CardTitle>Tóm tắt đơn hàng</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Giảm giá</label>\n              <Input\n                variant=\"filled\"\n                type=\"number\"\n                min=\"0\"\n                step=\"0.01\"\n                value={formData.discountAmount || 0}\n                onChange={(e) => setFormData(prev => ({ ...prev, discountAmount: parseFloat(e.target.value) || 0 }))}\n              />\n            </div>\n          </div>\n\n          <div className=\"border-t pt-4 space-y-2\">\n            <div className=\"flex justify-between\"><span>Tạm tính:</span><span>{formatCurrency(formData.subtotal || 0)}</span></div>\n            <div className=\"flex justify-between\"><span>Thuế (10%):</span><span>{formatCurrency(formData.taxAmount || 0)}</span></div>\n            <div className=\"flex justify-between\"><span>Giảm giá:</span><span>-{formatCurrency(formData.discountAmount || 0)}</span></div>\n            <div className=\"flex justify-between text-lg font-semibold border-t pt-2\"><span>Tổng cộng:</span><span className=\"text-green-600\">{formatCurrency(formData.totalAmount || 0)}</span></div>\n            <div className=\"flex justify-between text-lg font-semibold\"><span>Tiền cọc:</span><span className=\"text-blue-700\">{formatCurrency(formData.depositAmount || 0)}</span></div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const NotesCard = (\n    <Card>\n      <CardHeader>\n        <CardTitle>Ghi chú</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Textarea value={formData.notes || ''} onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))} placeholder=\"Ghi chú cho đơn hàng\" rows={3} />\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {layout === 'split' ? (\n        <>\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            <div className=\"lg:col-span-2 space-y-6\">\n              {ProductsCard}\n              {NotesCard}\n            </div>\n            <div className=\"lg:col-span-1 space-y-6 lg:sticky lg:top-24\">\n              {InfoCard}\n              {FinancialCard}\n            </div>\n          </div>\n          <div className=\"flex justify-end space-x-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={onCancel}>Hủy</Button>\n            <Button type=\"submit\" disabled={loading}>{loading ? 'Đang xử lý...' : 'Lưu đơn hàng'}</Button>\n          </div>\n        </>\n      ) : (\n        <>\n          {InfoCard}\n          {ProductsCard}\n          {FinancialCard}\n          {NotesCard}\n          <div className=\"flex justify-end space-x-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={onCancel}>Hủy</Button>\n            <Button type=\"submit\" disabled={loading}>{loading ? 'Đang xử lý...' : 'Lưu đơn hàng'}</Button>\n          </div>\n        </>\n      )}\n    </form>\n  );\n}; ","/**\n * CreateOrderForm - Main refactored component using smaller components and hooks\n * \n * This component has been broken down into smaller, more maintainable pieces:\n * - Custom hooks for state management and business logic\n * - Smaller UI components for different sections\n * - Better separation of concerns\n * \n * USAGE EXAMPLES:\n * \n * 1. CREATE MODE (default):\n * <CreateOrderForm\n *   customers={customers}\n *   products={products}\n *   outlets={outlets}\n *   onSubmit={handleCreateOrder}\n *   onCancel={handleCancel}\n * />\n * \n * 2. EDIT MODE:\n * <CreateOrderForm\n *   isEditMode={true}\n *   initialOrder={existingOrder}\n *   orderNumber={existingOrder.orderNumber}\n *   customers={customers}\n *   products={products}\n *   outlets={outlets}\n *   onSubmit={handleUpdateOrder}\n *   onCancel={handleCancel}\n * />\n */\n\n'use client'\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useToast, ToastContainer } from '@rentalshop/ui';\nimport { AddCustomerForm } from '../../features/Customers/components/AddCustomerForm';\n\nimport { customersApi, productsApi, handleApiError, formatCurrency, type ProductAvailabilityRequest } from '@rentalshop/utils';\nimport { useProductAvailability, useOrderTranslations } from '@rentalshop/hooks';\nimport { VALIDATION, BUSINESS } from '@rentalshop/constants';\n\n// Import our custom hooks and components\nimport { useCreateOrderForm } from './hooks/useCreateOrderForm';\nimport { useOrderValidation } from './hooks/useOrderValidation';\nimport { useProductSearch } from './hooks/useProductSearch';\nimport { useCustomerSearch } from './hooks/useCustomerSearch';\nimport { useAuth } from '@rentalshop/hooks';\nimport { ProductsSection } from './components/ProductsSection';\nimport { OrderInfoSection } from './components/OrderInfoSection';\nimport { OrderSummarySection } from './components/OrderSummarySection';\nimport { CustomerCreationDialog } from './components/CustomerCreationDialog';\nimport { OrderPreviewDialog } from './components/OrderPreviewDialog';\n\nimport type { \n  CreateOrderFormProps, \n  CustomerSearchResult,\n  ProductWithStock,\n  ProductAvailabilityStatus \n} from './types';\n\nexport const CreateOrderForm: React.FC<CreateOrderFormProps> = (props) => {\n  const {\n    customers = [],\n    products = [],\n    outlets = [],\n    categories = [],\n    onSubmit,\n    onCancel,\n    loading = false,\n    layout = 'split',\n    merchantId,\n    currency = 'USD', // Default to USD if not provided\n    isEditMode = false,\n    initialOrder,\n    orderNumber,\n    onFormReady,\n  } = props;\n\n  // Translation hook\n  const t = useOrderTranslations();\n\n  // Custom hooks for state management\n  const {\n    formData,\n    setFormData,\n    orderItems,\n    setOrderItems,\n    isSubmitting,\n    showOrderPreview,\n    setShowOrderPreview,\n    addProductToOrder,\n    removeProductFromOrder,\n    updateOrderItem,\n    updateRentalDates,\n    handlePreviewClick,\n    handleOrderConfirm,\n    handleSubmit,\n    resetForm,\n    calculateRentalDays,\n  } = useCreateOrderForm(props);\n\n  const { validationErrors, validateForm, isFormValid } = useOrderValidation();\n  const { isLoadingProducts, searchProductsForSelect, searchProducts } = useProductSearch(currency as any);\n  const { \n    isLoadingCustomers, \n    customerSearchResults, \n    searchCustomers, \n    clearCustomerSearchResults,\n    setCustomerResults \n  } = useCustomerSearch();\n\n  // Get merchant data from user context (no API call needed!)\n  const { user } = useAuth();\n  const merchantData = user?.merchant || null;\n  \n  // Debug merchant data\n  console.log('🔍 CreateOrderForm - Merchant Data:', {\n    hasUser: !!user,\n    hasMerchant: !!merchantData,\n    pricingType: merchantData?.pricingType,\n    businessType: merchantData?.businessType,\n    fullMerchant: merchantData\n  });\n\n  // Local state\n  const [selectedCustomer, setSelectedCustomer] = useState<CustomerSearchResult | null>(() => {\n    // Initialize with existing customer if in edit mode\n    if (isEditMode && initialOrder?.customer) {\n      return {\n        id: parseInt(initialOrder.customerId) || 0,\n        firstName: initialOrder.customer.firstName,\n        lastName: initialOrder.customer.lastName,\n        phone: initialOrder.customer.phone,\n        email: initialOrder.customer.email || '',\n        isActive: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        merchantId: parseInt(initialOrder.customer.merchantId) || 0,\n        merchant: { \n          id: parseInt(initialOrder.customer.merchantId) || 0, \n          name: initialOrder.customer.merchant?.name || '' \n        }\n      };\n    }\n    return null;\n  });\n\n  // Product search state - store searched products for selection\n  const [searchedProducts, setSearchedProducts] = useState<ProductWithStock[]>([]);\n\n  const [searchQuery, setSearchQuery] = useState(() => {\n    // Initialize with selected customer info if in edit mode\n    if (isEditMode && initialOrder?.customer) {\n      return `${initialOrder.customer.firstName} ${initialOrder.customer.lastName} - ${initialOrder.customer.phone}`;\n    }\n    return '';\n  });\n\n  // Expose resetForm function to parent component\n  useEffect(() => {\n    if (onFormReady) {\n      onFormReady(resetForm);\n    }\n  }, [onFormReady, resetForm]);\n\n  const [showAddCustomerDialog, setShowAddCustomerDialog] = useState(false);\n\n  // Product availability hook\n  const { calculateAvailability } = useProductAvailability();\n  \n  // Toast notifications\n  const { toastSuccess, toastError, removeToast } = useToast();\n\n  // Handle product search and store results\n  const handleProductSearch = useCallback(async (query: string) => {\n    try {\n      const searchResults = await searchProducts(query);\n      setSearchedProducts(searchResults);\n      return searchResults.map(product => ({\n        value: String(product.id),\n        label: product.name,\n        image: product.images?.[0],\n        subtitle: product.barcode ? `Barcode: ${product.barcode}` : t('messages.noBarcode'),\n        details: [\n          formatCurrency(product.rentPrice || 0, currency as any),\n          `Deposit: ${formatCurrency(product.deposit || 0, currency as any)}`,\n          `Available: ${product.outletStock?.[0]?.available || 0}`,\n          `Total Stock: ${product.outletStock?.[0]?.stock || 0}`,\n          product.category?.name || t('messages.noCategory')\n        ].filter(Boolean),\n        type: 'product' as const\n      }));\n    } catch (error) {\n      console.error('Error searching products:', error);\n      return [];\n    }\n  }, [searchProducts, currency]);\n\n  // Create a custom getProductAvailabilityStatus function using new API\n  const getProductAvailabilityStatus = useCallback(async (\n    product: ProductWithStock, \n    startDate?: string, \n    endDate?: string, \n    requestedQuantity: number = BUSINESS.DEFAULT_QUANTITY\n  ): Promise<ProductAvailabilityStatus> => {\n    try {\n      console.log('🔍 Checking availability for product:', {\n        productId: product.id,\n        productName: product.name,\n        startDate,\n        endDate,\n        requestedQuantity\n      });\n\n      // Prepare API request parameters\n      const requestParams: ProductAvailabilityRequest = {\n        quantity: requestedQuantity,\n        includeTimePrecision: true,\n        timeZone: 'UTC'\n      };\n\n      // Add rental dates if provided (for RENT mode)\n      if (startDate && endDate && formData.orderType === 'RENT') {\n        // Convert dates to ISO format for API\n        requestParams.startDate = new Date(startDate).toISOString();\n        requestParams.endDate = new Date(endDate).toISOString();\n      }\n\n      // Call the new availability API\n      const availabilityResponse = await productsApi.checkProductAvailability(product.id, requestParams);\n      \n      if (availabilityResponse.success && availabilityResponse.data) {\n        const availabilityData = availabilityResponse.data;\n        \n        console.log('🔍 Availability API response:', availabilityData);\n\n        // Determine status based on API response\n        if (!availabilityData.stockAvailable) {\n          return {\n            status: 'out-of-stock',\n            text: `Out of Stock (need ${requestedQuantity}, have ${availabilityData.totalAvailableStock})`,\n            color: 'bg-red-100 text-red-600'\n          };\n        }\n\n        if (startDate && endDate && formData.orderType === 'RENT') {\n          // For rental orders with dates, check if available considering conflicts\n          if (!availabilityData.isAvailable || !availabilityData.hasNoConflicts) {\n            const conflictCount = availabilityData.totalConflictsFound;\n            return {\n              status: 'unavailable',\n              text: conflictCount > 0 \n                ? `Conflicts detected (${conflictCount} orders)`\n                : 'Unavailable for selected dates',\n              color: 'bg-orange-100 text-orange-600'\n            };\n          }\n        }\n\n        // Check if any outlet can fulfill the request\n        const canFulfill = availabilityData.availabilityByOutlet?.some((outlet: any) => outlet.canFulfillRequest);\n        const effectivelyAvailable = availabilityData.availabilityByOutlet?.reduce((sum: number, outlet: any) => \n          sum + outlet.effectivelyAvailable, 0) || availabilityData.totalAvailableStock;\n\n        if (canFulfill) {\n          return {\n            status: 'available',\n            text: `Available (${effectivelyAvailable} units)`,\n            color: 'bg-green-100 text-green-600'\n          };\n        } else {\n          return {\n            status: 'low-stock',\n            text: `Low Stock (${effectivelyAvailable}/${requestedQuantity})`,\n            color: 'bg-orange-100 text-orange-600'\n          };\n        }\n      } else {\n        // API call failed, fallback to basic stock check\n        console.warn('Availability API failed, falling back to basic stock check');\n        throw new Error('API call failed');\n      }\n    } catch (error) {\n      console.error('Error checking availability via API:', error);\n      \n      // Fallback to basic stock availability check\n      try {\n        const outletStock = product.outletStock?.[0];\n        const available = outletStock?.available ?? 0;\n        const stock = outletStock?.stock ?? 0;\n\n        console.log('🔍 Fallback to basic stock check:', { available, stock, requestedQuantity });\n\n        if (available === 0) {\n          return { \n            status: 'out-of-stock', \n            text: t('messages.outOfStock'), \n            color: 'bg-red-100 text-red-600' \n          };\n        } else if (available < requestedQuantity) {\n          return { \n            status: 'low-stock', \n            text: `Low Stock (${available}/${requestedQuantity})`, \n            color: 'bg-orange-100 text-orange-600' \n          };\n        } else {\n          return { \n            status: 'available', \n            text: `Available (${available})`, \n            color: 'bg-green-100 text-green-600' \n          };\n        }\n      } catch (fallbackError) {\n        console.error('Fallback availability check also failed:', fallbackError);\n        return { \n          status: 'unknown', \n          text: 'Check unavailable', \n          color: 'bg-gray-100 text-gray-600' \n        };\n      }\n    }\n  }, [formData.orderType, t]);\n\n  // Handle adding new customer\n  const handleAddNewCustomer = useCallback(async (customerData: any) => {\n    try {\n      console.log('🔍 handleAddNewCustomer: Starting customer creation...');\n      \n      // Get merchant ID from props or fallback to first outlet's merchant ID\n      const currentMerchantId = merchantId || outlets[0]?.merchantId;\n      \n      if (!currentMerchantId) {\n        const errorMsg = 'Merchant ID is required to create a customer. Please ensure the form has access to merchant information.';\n        toastError(t('messages.error'), errorMsg);\n        throw new Error(errorMsg);\n      }\n      \n      console.log('🔍 handleAddNewCustomer: Merchant ID found:', currentMerchantId);\n      \n      // Check for duplicate phone number before creating\n      const normalizedPhone = customerData.phone.replace(/[\\s\\-\\(\\)\\+]/g, '');\n      \n      // First, check in the already loaded search results for immediate feedback\n      const localDuplicate = customerSearchResults.find(customer => {\n        if (customer.phone) {\n          const existingNormalizedPhone = customer.phone.replace(/[\\s\\-\\(\\)\\+]/g, '');\n          return normalizedPhone === existingNormalizedPhone;\n        }\n        return false;\n      });\n      \n      if (localDuplicate) {\n        const errorMsg = `A customer with phone number \"${customerData.phone}\" already exists (${localDuplicate.firstName} ${localDuplicate.lastName}). Please use a different phone number or search for the existing customer.`;\n        toastError(t('messages.duplicateCustomer'), errorMsg);\n        throw new Error(errorMsg);\n      }\n      \n      console.log('🔍 handleAddNewCustomer: No local duplicates found, checking API...');\n      \n      // Then check with the API for a more comprehensive check\n      const duplicateCheck = await customersApi.getCustomerByPhone(customerData.phone);\n      \n      if (duplicateCheck.success && duplicateCheck.data) {\n        const existingCustomers = duplicateCheck.data.customers || duplicateCheck.data.customer || [];\n        const customersArray = Array.isArray(existingCustomers) ? existingCustomers : [existingCustomers];\n        \n        for (const existingCustomer of customersArray) {\n          if (existingCustomer.phone) {\n            const existingNormalizedPhone = existingCustomer.phone.replace(/[\\s\\-\\(\\)\\+]/g, '');\n            if (normalizedPhone === existingNormalizedPhone) {\n              const errorMsg = `A customer with phone number \"${customerData.phone}\" already exists (${existingCustomer.firstName} ${existingCustomer.lastName}). Please use a different phone number or search for the existing customer.`;\n              toastError(t('messages.duplicateCustomer'), errorMsg);\n              throw new Error(errorMsg);\n            }\n          }\n        }\n      }\n      \n      console.log('🔍 handleAddNewCustomer: No API duplicates found, creating customer...');\n      \n      const result = await customersApi.createCustomer({\n        ...customerData,\n        merchantId: currentMerchantId,\n        isActive: true\n      });\n      \n      console.log('🔍 handleAddNewCustomer: API response:', result);\n      console.log('🔍 handleAddNewCustomer: result.success:', result.success);\n      console.log('🔍 handleAddNewCustomer: result.data:', result.data);\n      console.log('🔍 handleAddNewCustomer: result.data?.customer:', result.data?.customer);\n      \n      if (result.success && result.data && (result.data.customer || result.data.firstName)) {\n        // The customer data might be directly in result.data or nested under result.data.customer\n        const newCustomer = result.data.customer || result.data;\n        \n        console.log('🔍 handleAddNewCustomer: Customer created successfully:', newCustomer);\n        \n        // Add to search results\n        setCustomerResults([newCustomer, ...customerSearchResults]);\n        \n        // Auto-select the new customer\n        setFormData(prev => ({\n          ...prev,\n          customerId: Number(newCustomer.id),\n        }));\n        setSelectedCustomer(newCustomer);\n        \n        // Update search query to show the new customer\n        setSearchQuery(`${newCustomer.firstName} ${newCustomer.lastName} - ${newCustomer.phone}`);\n        \n        // Show success message\n        toastSuccess(t('messages.customerCreated'), `Customer \"${newCustomer.firstName} ${newCustomer.lastName}\" ${t('messages.customerCreatedMessage')}`);\n        \n        console.log('🔍 handleAddNewCustomer: Function completed successfully');\n      } else {\n        // Extract error message from API response\n        const errorMessage = result.message || result.error || t('messages.failedToCreateCustomer');\n        console.error('❌ handleAddNewCustomer: API error:', errorMessage);\n        console.error('❌ handleAddNewCustomer: Full result:', result);\n        toastError(t('messages.error'), errorMessage);\n        throw new Error(errorMessage);\n      }\n    } catch (error) {\n      console.error('❌ handleAddNewCustomer: Error occurred:', error);\n      // Re-throw the error so the dialog stays open\n      throw error;\n    }\n  }, [merchantId, outlets, customerSearchResults, setCustomerResults, setFormData, toastSuccess, toastError]);\n\n  // Handle customer selection\n  const handleCustomerSelect = useCallback((customer: CustomerSearchResult) => {\n    console.log('🔍 handleCustomerSelect: Customer selected:', customer);\n    console.log('🔍 handleCustomerSelect: Customer ID:', customer.id);\n    console.log('🔍 handleCustomerSelect: Customer ID type:', typeof customer.id);\n    console.log('🔍 handleCustomerSelect: Full customer object keys:', Object.keys(customer));\n    console.log('🔍 handleCustomerSelect: Customer id:', customer.id);\n    \n    // Use customer.id (number) - frontend always uses id\n    const customerId = customer.id;\n    console.log('🔍 handleCustomerSelect: Resolved customer ID:', customerId);\n    \n    setSelectedCustomer(customer);\n    // Update form data with the customer's numeric ID\n    setFormData(prev => {\n      console.log('🔍 handleCustomerSelect: Previous formData:', prev);\n      const newFormData = { ...prev, customerId: customerId };\n      console.log('🔍 handleCustomerSelect: New formData:', newFormData);\n      return newFormData;\n    });\n    setSearchQuery(`${customer.firstName} ${customer.lastName} - ${customer.phone}`);\n  }, []);\n\n  // Initialize form data when initialOrder changes (for edit mode)\n  useEffect(() => {\n    if (isEditMode && initialOrder) {\n      // Update selected customer and search query\n      if (initialOrder.customer) {\n        const customer = {\n          id: parseInt(initialOrder.customerId) || 0,\n          firstName: initialOrder.customer.firstName,\n          lastName: initialOrder.customer.lastName,\n          phone: initialOrder.customer.phone,\n          email: initialOrder.customer.email || '',\n          isActive: true,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          merchantId: parseInt(initialOrder.customer.merchantId) || 0,\n          merchant: { id: parseInt(initialOrder.customer.merchantId) || 0, name: '' }\n        };\n        setSelectedCustomer(customer);\n        setSearchQuery(`${customer.firstName} ${customer.lastName} - ${customer.phone}`);\n      }\n    }\n  }, [isEditMode, initialOrder]);\n\n  // Form validation\n  const validateFormAndSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (isSubmitting) return;\n    \n    // Validate form\n    if (!validateForm(formData, orderItems)) {\n      return;\n    }\n    \n    await handleSubmit(e);\n  }, [isSubmitting, validateForm, formData, orderItems, handleSubmit]);\n\n  // Check if form is valid for UI\n  const isFormValidForUI = isFormValid(formData, orderItems);\n\n  return (\n    <div className=\"w-full min-h-full bg-bg-secondary\">\n      <div className=\"w-full\">\n        <div className=\"flex flex-col lg:flex-row gap-4 px-4 py-4\">\n          {/* Column 1 - Products Section (40%) */}\n          <div className=\"lg:w-[40%] space-y-4\">\n            <ProductsSection\n              orderItems={orderItems}\n              products={[...products, ...searchedProducts]} // Combine initial products with searched products\n              onAddProduct={addProductToOrder}\n              onRemoveProduct={removeProductFromOrder}\n              onUpdateOrderItem={updateOrderItem}\n              onSearchProducts={handleProductSearch} // Use our custom search function\n              isLoadingProducts={isLoadingProducts}\n              orderType={formData.orderType}\n              pickupDate={formData.pickupPlanAt}\n              returnDate={formData.returnPlanAt}\n              getProductAvailabilityStatus={getProductAvailabilityStatus}\n              currency={currency}\n            />\n          </div>\n\n          {/* Column 2 - Order Information (30%) */}\n          <div className=\"lg:w-[30%] space-y-4\">\n            <OrderInfoSection\n              formData={formData}\n              outlets={outlets}\n              selectedCustomer={selectedCustomer}\n              searchQuery={searchQuery}\n              customerSearchResults={customerSearchResults}\n              isLoadingCustomers={isLoadingCustomers}\n              isEditMode={isEditMode}\n              merchantData={merchantData}\n              onFormDataChange={(field, value) => setFormData(prev => ({ ...prev, [field]: value }))}\n              onCustomerSelect={handleCustomerSelect}\n              onCustomerClear={() => {\n                setSelectedCustomer(null);\n                setSearchQuery('');\n                setFormData(prev => ({ ...prev, customerId: undefined }));\n              }}\n              onSearchQueryChange={setSearchQuery}\n              onCustomerSearch={searchCustomers}\n              onShowAddCustomerDialog={() => setShowAddCustomerDialog(true)}\n              onUpdateRentalDates={updateRentalDates}\n              currency={currency}\n            />\n          </div>\n\n          {/* Column 3 - Order Summary & Actions (30%) - Sticky positioning */}\n          <div className=\"lg:w-[30%] space-y-4\">\n            <div className=\"lg:sticky lg:top-4\">\n              <OrderSummarySection\n                formData={formData}\n                orderItems={orderItems}\n                isEditMode={isEditMode}\n                loading={loading || isSubmitting}\n                isFormValid={isFormValidForUI}\n                onPreviewClick={handlePreviewClick}\n                onCancel={onCancel}\n                currency={currency}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Customer Creation Dialog */}\n      <CustomerCreationDialog\n        open={showAddCustomerDialog}\n        onOpenChange={setShowAddCustomerDialog}\n        onCustomerCreated={handleAddNewCustomer}\n        merchantId={merchantId}\n      />\n\n      {/* Order Preview Dialog */}\n      <OrderPreviewDialog\n        open={showOrderPreview}\n        onOpenChange={setShowOrderPreview}\n        orderData={{\n          orderType: formData.orderType,\n          customerId: formData.customerId || 0,\n          customerName: selectedCustomer ? `${selectedCustomer.firstName} ${selectedCustomer.lastName}` : undefined,\n          customerPhone: selectedCustomer?.phone,\n          customerEmail: selectedCustomer?.email,\n          outletId: formData.outletId || 0,\n          outletName: outlets.find(o => o.id === formData.outletId)?.name,\n          pickupPlanAt: formData.pickupPlanAt,\n          returnPlanAt: formData.returnPlanAt,\n          subtotal: formData.subtotal,\n          taxAmount: formData.taxAmount,\n          discountAmount: formData.discountAmount,\n          totalAmount: formData.totalAmount,\n          depositAmount: formData.depositAmount,\n          securityDeposit: formData.securityDeposit,\n          lateFee: formData.lateFee,\n          damageFee: formData.damageFee,\n          notes: formData.notes,\n          orderItems: (() => {\n            console.log('🔍 Creating preview data - orderItems from state:', orderItems);\n            console.log('🔍 Creating preview data - orderItems length:', orderItems.length);\n            return orderItems.map(item => ({\n              productId: item.productId,\n              product: item.product, // Include the full product information\n              quantity: item.quantity,\n              unitPrice: item.unitPrice,\n              totalPrice: item.quantity * item.unitPrice,\n              deposit: item.deposit ?? 0, // Ensure deposit is always a number\n              notes: item.notes || ''\n            }));\n          })()\n        }}\n        products={products}\n        onConfirm={handleOrderConfirm}\n        onEdit={() => setShowOrderPreview(false)}\n        loading={loading || isSubmitting}\n        confirmText={isEditMode ? t('actions.updateOrder') : t('actions.confirmCreate')}\n        editText={t('actions.backToEdit')}\n        title={t('actions.orderPreview')}\n        subtitle={t('actions.reviewBeforeConfirm')}\n      />    </div>\n  );\n};\n","/**\n * Custom hook for managing CreateOrderForm state and logic\n */\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { useToast } from '@rentalshop/ui';\nimport { customersApi, handleApiError } from '@rentalshop/utils';\nimport { BUSINESS, VALIDATION } from '@rentalshop/constants';\nimport type { \n  OrderFormData, \n  OrderItemFormData, \n  ValidationErrors,\n  CreateOrderFormProps \n} from '../types';\n\nexport const useCreateOrderForm = (props: CreateOrderFormProps) => {\n  const {\n    outlets = [],\n    isEditMode = false,\n    initialOrder,\n    merchantId\n  } = props;\n\n  // Form state\n  const [formData, setFormData] = useState<OrderFormData>(() => {\n    // Initialize with existing order data if in edit mode\n    if (isEditMode && initialOrder) {\n      return {\n        orderType: initialOrder.orderType || 'RENT',\n        customerId: parseInt(initialOrder.customerId) || undefined,\n        outletId: initialOrder.outletId || outlets[0]?.id || undefined,\n        pickupPlanAt: initialOrder.pickupPlanAt ? new Date(initialOrder.pickupPlanAt).toISOString().split('T')[0] : '',\n        returnPlanAt: initialOrder.returnPlanAt ? new Date(initialOrder.returnPlanAt).toISOString().split('T')[0] : '',\n        subtotal: initialOrder.subtotal || 0,\n        taxAmount: initialOrder.taxAmount || 0,\n        discountType: initialOrder.discountType || 'amount',\n        discountValue: initialOrder.discountValue || BUSINESS.DEFAULT_DISCOUNT,\n        discountAmount: initialOrder.discountAmount || BUSINESS.DEFAULT_DISCOUNT,\n        depositAmount: initialOrder.depositAmount || BUSINESS.DEFAULT_DEPOSIT,\n        securityDeposit: initialOrder.securityDeposit || 0,\n        lateFee: initialOrder.lateFee || 0,\n        damageFee: initialOrder.damageFee || 0,\n        totalAmount: initialOrder.totalAmount || 0,\n        notes: initialOrder.notes || '',\n        orderItems: [],\n      };\n    }\n    \n    // Default values for create mode\n    return {\n      orderType: 'RENT',\n      customerId: undefined,\n      outletId: outlets[0]?.id || undefined,\n      pickupPlanAt: '',\n      returnPlanAt: '',\n      subtotal: 0,\n      taxAmount: 0,\n      discountType: 'amount',\n      discountValue: BUSINESS.DEFAULT_DISCOUNT,\n      discountAmount: BUSINESS.DEFAULT_DISCOUNT,\n      depositAmount: BUSINESS.DEFAULT_DEPOSIT,\n      securityDeposit: 0,\n      lateFee: 0,\n      damageFee: 0,\n      totalAmount: 0,\n      notes: '',\n      orderItems: [],\n    };\n  });\n\n  const [orderItems, setOrderItems] = useState<OrderItemFormData[]>(() => {\n    // Initialize with existing order items if in edit mode\n    if (isEditMode && initialOrder?.orderItems) {\n      return initialOrder.orderItems.map((item: any) => ({\n        id: item.id, // Keep database CUID for existing items\n        productId: item.product?.id || item.productId || 0, // Frontend uses id (number)\n        product: {\n          id: item.product?.id || item.productId || 0, // Frontend uses id (number)\n          name: item.product?.name || 'Unknown Product',\n          description: item.product?.description || '',\n          images: item.product?.images || null,\n          barcode: item.product?.barcode || '',\n          rentPrice: item.unitPrice || 0, // Use unitPrice as rentPrice\n          deposit: item.deposit ?? 0,\n        },\n        quantity: item.quantity || 1,\n        unitPrice: item.unitPrice || 0,\n        totalPrice: item.totalPrice || 0,\n        rentalDays: item.rentalDays || 0,\n        deposit: item.deposit ?? 0,\n        notes: item.notes || '',\n      }));\n    }\n    return [];\n  });\n\n  // Use a ref to track the current orderItems state to avoid stale closures\n  const orderItemsRef = useRef<OrderItemFormData[]>(orderItems);\n  \n  // Update the ref whenever orderItems state changes\n  useEffect(() => {\n    orderItemsRef.current = orderItems;\n  }, [orderItems]);\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showOrderPreview, setShowOrderPreview] = useState(false);\n\n  // Toast notifications\n  const { toastSuccess, toastError } = useToast();\n\n  // Calculate totals when order items change\n  useEffect(() => {\n    const subtotal = orderItems.reduce((sum, item) => sum + item.quantity * item.unitPrice, 0);\n    const discountAmount = formData.discountType === 'percentage' \n      ? (subtotal * formData.discountValue / 100)\n      : formData.discountValue;\n    const totalAmount = subtotal - discountAmount;\n    \n    setFormData(prev => ({\n      ...prev,\n      subtotal,\n      discountAmount,\n      totalAmount\n    }));\n  }, [orderItems, formData.discountType, formData.discountValue]);\n\n  // Calculate deposit amount for rent orders\n  useEffect(() => {\n    if (formData.orderType === 'RENT') {\n      const totalDeposit = orderItems.reduce((sum, item) => sum + (item.deposit ?? 0), 0);\n      setFormData(prev => ({\n        ...prev,\n        depositAmount: totalDeposit,\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        depositAmount: 0,\n      }));\n    }\n  }, [orderItems, formData.orderType]);\n\n  // Initialize form data when initialOrder changes (for edit mode)\n  useEffect(() => {\n    if (isEditMode && initialOrder) {\n      // Update form data with initial order values\n      setFormData(prev => ({\n        ...prev,\n        orderType: initialOrder.orderType || 'RENT',\n        customerId: initialOrder.customerId || undefined,\n        outletId: initialOrder.outletId || outlets[0]?.id || undefined,\n        pickupPlanAt: initialOrder.pickupPlanAt ? new Date(initialOrder.pickupPlanAt).toISOString().split('T')[0] : '',\n        returnPlanAt: initialOrder.returnPlanAt ? new Date(initialOrder.returnPlanAt).toISOString().split('T')[0] : '',\n        subtotal: initialOrder.subtotal || 0,\n        taxAmount: initialOrder.taxAmount || 0,\n        discountType: initialOrder.discountType || 'amount',\n        discountValue: initialOrder.discountValue || BUSINESS.DEFAULT_DISCOUNT,\n        discountAmount: initialOrder.discountAmount || BUSINESS.DEFAULT_DISCOUNT,\n        depositAmount: initialOrder.depositAmount || BUSINESS.DEFAULT_DEPOSIT,\n        securityDeposit: initialOrder.securityDeposit || 0,\n        lateFee: initialOrder.lateFee || 0,\n        damageFee: initialOrder.damageFee || 0,\n        totalAmount: initialOrder.totalAmount || 0,\n        notes: initialOrder.notes || '',\n      }));\n\n      // Update order items\n      if (initialOrder.orderItems) {\n        const initialOrderItems: OrderItemFormData[] = initialOrder.orderItems.map((item: any) => ({\n          id: item.id, // Keep database CUID for existing items\n          productId: item.product?.id || item.productId || 0, // Frontend uses id (number)\n          product: {\n            id: item.product?.id || item.productId || 0, // Frontend uses id (number)\n            name: item.product?.name || 'Unknown Product',\n            description: item.product?.description || '',\n            images: item.product?.images || null,\n            barcode: item.product?.barcode || '',\n            rentPrice: item.unitPrice || 0, // Use unitPrice as rentPrice\n            deposit: item.deposit ?? 0,\n          },\n          quantity: item.quantity || 1,\n          unitPrice: item.unitPrice || 0,\n          totalPrice: item.totalPrice || 0,\n          rentalDays: item.rentalDays || 0,\n          deposit: item.deposit ?? 0,\n          notes: item.notes || '',\n        }));\n        \n        setOrderItems(initialOrderItems);\n        \n        // Calculate deposit amount from order items after they're set\n        if (initialOrder.orderType === 'RENT') {\n          const totalDeposit = initialOrderItems.reduce((sum, item) => sum + (item.deposit ?? 0), 0);\n          setFormData(prev => ({\n            ...prev,\n            depositAmount: totalDeposit,\n          }));\n        }\n      }\n    }\n  }, [isEditMode, initialOrder, outlets]);\n\n  // Add product to order\n  const addProductToOrder = useCallback((product: any) => {\n    const productIdNumber = product.id;\n    const existingItem = orderItems.find(item => item.productId === productIdNumber);\n    \n    if (existingItem) {\n      // Update quantity if product already exists\n      const updatedItems = orderItems.map(item =>\n        item.productId === productIdNumber\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      );\n      setOrderItems(updatedItems);\n    } else {\n      // Add new product\n      const rentPrice = product.rentPrice ?? 0;\n      const deposit = product.deposit ?? 0;\n      \n      const newItem: OrderItemFormData = {\n        productId: productIdNumber,\n        product: {\n          id: productIdNumber,\n          name: product.name || 'Unknown Product',\n          description: product.description || '',\n          images: product.images || null,\n          barcode: product.barcode || '',\n          rentPrice: rentPrice,\n          deposit: deposit,\n        },\n        quantity: BUSINESS.DEFAULT_QUANTITY,\n        unitPrice: formData.orderType === 'RENT' ? rentPrice : rentPrice,\n        totalPrice: (formData.orderType === 'RENT' ? rentPrice : rentPrice) * BUSINESS.DEFAULT_QUANTITY,\n        deposit: deposit,\n        notes: '',\n      };\n      const newOrderItems = [...orderItems, newItem];\n      setOrderItems(newOrderItems);\n    }\n  }, [orderItems, formData.orderType]);\n\n  // Remove product from order\n  const removeProductFromOrder = useCallback((productId: number) => {\n    setOrderItems(orderItems.filter(item => item.productId !== productId));\n  }, [orderItems]);\n\n  // Update order item\n  const updateOrderItem = useCallback((productId: number, field: keyof OrderItemFormData, value: string | number) => {\n    const updatedItems = orderItems.map(item => {\n      if (item.productId === productId) {\n        return { ...item, [field]: value };\n      }\n      return item;\n    });\n    setOrderItems(updatedItems);\n  }, [orderItems]);\n\n  // Calculate rental days\n  const calculateRentalDays = useCallback((startDate: string, endDate: string): number => {\n    if (!startDate || !endDate) return 0;\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end.getTime() - start.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }, []);\n\n  // Update rental dates and recalculate prices\n  const updateRentalDates = useCallback((startDate: string, endDate: string) => {\n    setFormData(prev => ({\n      ...prev,\n      pickupPlanAt: startDate,\n      returnPlanAt: endDate,\n    }));\n\n    // Update order items with new dates and recalculate prices\n    const days = calculateRentalDays(startDate, endDate);\n    const updatedItems = orderItems.map(item => ({\n      ...item,\n      startDate,\n      endDate,\n      daysRented: days,\n      totalPrice: item.unitPrice * days * item.quantity,\n    }));\n    setOrderItems(updatedItems);\n  }, [orderItems, calculateRentalDays]);\n\n  // Handle preview button click\n  const handlePreviewClick = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('🔍 Preview clicked - Current orderItems:', orderItems);\n    console.log('🔍 Preview clicked - orderItems length:', orderItems.length);\n    console.log('🔍 Preview clicked - orderItems details:', orderItems.map(item => ({\n      productId: item.productId,\n      productName: item.product?.name,\n      quantity: item.quantity\n    })));\n    setShowOrderPreview(true);\n  }, [orderItems]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Use the ref to get the latest orderItems state to avoid stale closure issues\n    const currentOrderItems = orderItemsRef.current;\n    \n    if (isSubmitting) return;\n    \n    // Validate that we have order items\n    if (!currentOrderItems || currentOrderItems.length === 0) {\n      // This should be handled by the parent component with toast\n      throw new Error('Please add at least one product to the order before submitting.');\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Prepare API payload with proper types (send numeric IDs directly)\n      const apiPayload = {\n        orderType: formData.orderType,\n        customerId: formData.customerId, // Send as number\n        outletId: formData.outletId, // Send as number\n        pickupPlanAt: formData.pickupPlanAt ? new Date(formData.pickupPlanAt).toISOString() : undefined,\n        returnPlanAt: formData.returnPlanAt ? new Date(formData.returnPlanAt).toISOString() : undefined,\n        subtotal: formData.subtotal,\n        taxAmount: formData.taxAmount,\n        discountType: formData.discountType,\n        discountValue: formData.discountValue,\n        discountAmount: formData.discountAmount,\n        depositAmount: formData.depositAmount,\n        securityDeposit: formData.securityDeposit,\n        lateFee: formData.lateFee,\n        damageFee: formData.damageFee,\n        totalAmount: formData.totalAmount,\n        notes: formData.notes,\n        orderItems: currentOrderItems.map(item => ({\n          productId: item.productId, // Send as number\n          quantity: item.quantity,\n          unitPrice: item.unitPrice,\n          deposit: item.deposit ?? 0,\n          notes: item.notes || '',\n        }))\n      };\n      \n      // Add order ID for edit mode\n      if (isEditMode && initialOrder?.id) {\n        (apiPayload as any).id = initialOrder.id;\n      }\n      \n      props.onSubmit?.(apiPayload as any);\n    } catch (error) {\n      // Re-throw the error so the parent can handle it with toast\n      throw error;\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [formData, isEditMode, initialOrder, props, isSubmitting]);\n\n  // Handle order confirmation from preview\n  const handleOrderConfirm = useCallback(async () => {\n    setShowOrderPreview(false);\n    // Create a mock event for handleSubmit\n    const mockEvent = { preventDefault: () => {} } as React.FormEvent;\n    await handleSubmit(mockEvent);\n  }, [orderItems, handleSubmit]);\n\n  // Reset form to initial state\n  const resetForm = useCallback(() => {\n    if (isEditMode && initialOrder) {\n      // Reset to initial order data for edit mode\n      setFormData({\n        orderType: initialOrder.orderType || 'RENT',\n        customerId: parseInt(initialOrder.customerId) || undefined,\n        outletId: initialOrder.outletId || outlets[0]?.id || undefined,\n        pickupPlanAt: initialOrder.pickupPlanAt ? new Date(initialOrder.pickupPlanAt).toISOString().split('T')[0] : '',\n        returnPlanAt: initialOrder.returnPlanAt ? new Date(initialOrder.returnPlanAt).toISOString().split('T')[0] : '',\n        subtotal: initialOrder.subtotal || 0,\n        taxAmount: initialOrder.taxAmount || 0,\n        discountType: 'amount',\n        discountValue: BUSINESS.DEFAULT_DISCOUNT,\n        discountAmount: initialOrder.discountAmount || BUSINESS.DEFAULT_DISCOUNT,\n        depositAmount: initialOrder.depositAmount || BUSINESS.DEFAULT_DEPOSIT,\n        securityDeposit: initialOrder.securityDeposit || 0,\n        lateFee: initialOrder.lateFee || 0,\n        damageFee: initialOrder.damageFee || 0,\n        totalAmount: initialOrder.totalAmount || 0,\n        notes: initialOrder.notes || '',\n        orderItems: [],\n      });\n      \n      setOrderItems(initialOrder.orderItems.map((item: any) => ({\n        id: item.id,\n        productId: item.productId || 0,\n        product: {\n          id: item.product?.id || item.productId || 0,\n          name: item.product?.name || 'Unknown Product',\n          description: item.product?.description || '',\n          images: item.product?.images || null,\n          barcode: item.product?.barcode || '',\n          rentPrice: item.unitPrice || 0,\n          deposit: item.deposit ?? 0,\n        },\n        quantity: item.quantity || 1,\n        unitPrice: item.unitPrice || 0,\n        totalPrice: item.totalPrice || 0,\n        rentalDays: item.rentalDays || 0,\n        deposit: item.deposit ?? 0,\n        notes: item.notes || '',\n      })));\n    } else {\n      // Reset to default values for create mode\n      setFormData({\n        orderType: 'RENT',\n        customerId: undefined,\n        outletId: outlets[0]?.id || undefined,\n        pickupPlanAt: '',\n        returnPlanAt: '',\n        subtotal: 0,\n        taxAmount: 0,\n        discountType: 'amount',\n        discountValue: BUSINESS.DEFAULT_DISCOUNT,\n        discountAmount: BUSINESS.DEFAULT_DISCOUNT,\n        depositAmount: BUSINESS.DEFAULT_DEPOSIT,\n        securityDeposit: 0,\n        lateFee: 0,\n        damageFee: 0,\n        totalAmount: 0,\n        notes: '',\n        orderItems: [],\n      });\n      \n      setOrderItems([]);\n    }\n  }, [isEditMode, initialOrder, outlets]);\n\n  return {\n    // State\n    formData,\n    setFormData,\n    orderItems,\n    setOrderItems,\n    isSubmitting,\n    showOrderPreview,\n    setShowOrderPreview,\n    \n    // Actions\n    addProductToOrder,\n    removeProductFromOrder,\n    updateOrderItem,\n    updateRentalDates,\n    handlePreviewClick,\n    handleOrderConfirm,\n    handleSubmit,\n    resetForm,\n    \n    // Utilities\n    calculateRentalDays,\n  };\n};\n","/**\n * Custom hook for order form validation\n */\n\nimport { useState, useCallback } from 'react';\nimport { BUSINESS, VALIDATION } from '@rentalshop/constants';\nimport type { \n  OrderFormData, \n  OrderItemFormData, \n  ValidationErrors \n} from '../types';\n\nexport const useOrderValidation = () => {\n  const [validationErrors, setValidationErrors] = useState<ValidationErrors>({});\n\n  // Calculate rental days\n  const calculateRentalDays = useCallback((startDate: string, endDate: string): number => {\n    if (!startDate || !endDate) return 0;\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const diffTime = Math.abs(end.getTime() - start.getTime());\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  }, []);\n\n  // Validate form\n  const validateForm = useCallback((\n    formData: OrderFormData, \n    orderItems: OrderItemFormData[]\n  ): boolean => {\n    const errors: ValidationErrors = {};\n\n    if (!formData.customerId || formData.customerId <= 0) {\n      errors.customerId = 'Customer selection is required';\n    }\n\n    if (!formData.outletId || formData.outletId <= 0) {\n      errors.outletId = 'Outlet selection is required';\n    }\n\n    if (orderItems.length === 0) {\n      errors.orderItems = 'At least one product is required';\n    }\n\n    if (formData.orderType === 'RENT') {\n      if (!formData.pickupPlanAt) {\n        errors.pickupPlanAt = 'Pickup date is required for rentals';\n      }\n      if (!formData.returnPlanAt) {\n        errors.returnPlanAt = 'Return date is required for rentals';\n      }\n      if (formData.pickupPlanAt && formData.returnPlanAt) {\n        const days = calculateRentalDays(formData.pickupPlanAt, formData.returnPlanAt);\n        if (days < BUSINESS.MIN_RENTAL_DAYS) {\n          errors.returnPlanAt = `Rental must be at least ${BUSINESS.MIN_RENTAL_DAYS} day`;\n        } else if (days > BUSINESS.MAX_RENTAL_DAYS) {\n          errors.returnPlanAt = `Rental cannot exceed ${BUSINESS.MAX_RENTAL_DAYS} days`;\n        }\n      }\n    }\n\n    if (formData.orderType === 'RENT' && formData.depositAmount < VALIDATION.MIN_DEPOSIT_AMOUNT) {\n      errors.depositAmount = `Deposit amount cannot be less than ${VALIDATION.MIN_DEPOSIT_AMOUNT}`;\n    }\n\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  }, [calculateRentalDays]);\n\n  // Check if form is valid\n  const isFormValid = useCallback((\n    formData: OrderFormData, \n    orderItems: OrderItemFormData[]\n  ): boolean => {\n    const hasProducts = orderItems.length > 0;\n    const hasCustomer = Boolean(formData.customerId && formData.customerId > 0);\n    const hasOutlet = Boolean(formData.outletId && formData.outletId > 0);\n    \n    if (formData.orderType === 'RENT') {\n      return hasProducts && hasCustomer && hasOutlet && Boolean(formData.pickupPlanAt) && Boolean(formData.returnPlanAt);\n    } else {\n      return hasProducts && hasCustomer && hasOutlet;\n    }\n  }, []);\n\n  // Clear validation errors\n  const clearValidationErrors = useCallback(() => {\n    setValidationErrors({});\n  }, []);\n\n  // Set specific validation error\n  const setValidationError = useCallback((field: keyof ValidationErrors, message: string) => {\n    setValidationErrors(prev => ({\n      ...prev,\n      [field]: message\n    }));\n  }, []);\n\n  // Clear specific validation error\n  const clearValidationError = useCallback((field: keyof ValidationErrors) => {\n    setValidationErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[field];\n      return newErrors;\n    });\n  }, []);\n\n  return {\n    validationErrors,\n    validateForm,\n    isFormValid,\n    clearValidationErrors,\n    setValidationError,\n    clearValidationError,\n    calculateRentalDays,\n  };\n};\n","/**\n * Custom hook for product search functionality\n */\n\nimport { useState, useCallback } from 'react';\nimport { productsApi, formatCurrency } from '@rentalshop/utils';\nimport { PAGINATION } from '@rentalshop/constants';\nimport type { ProductWithStock, ProductSearchOption } from '../types';\nimport type { CurrencyCode } from '@rentalshop/types';\n\nexport const useProductSearch = (currency: CurrencyCode = 'USD') => {\n  const [isLoadingProducts, setIsLoadingProducts] = useState(false);\n\n  // Search products for SearchableSelect\n  const searchProductsForSelect = useCallback(async (query: string): Promise<ProductSearchOption[]> => {\n    if (!query.trim()) {\n      return [];\n    }\n    \n    try {\n      setIsLoadingProducts(true);\n      \n      const result = await productsApi.getProducts({ \n        search: query, \n        limit: PAGINATION.SEARCH_LIMIT\n      });\n      \n      if (result.success && result.data?.products) {\n        // Transform the products to match enhanced SearchableSelect format\n        return result.data.products.map((product: any) => {\n          // Get stock information from outletStock array\n          const outletStock = product.outletStock?.[0];\n          const available = outletStock?.available ?? 0;\n          const stock = outletStock?.stock ?? 0;\n          const totalStock = stock;\n          \n          return {\n            value: String(product.id), // Use id from server response\n            label: product.name,\n            image: product.image || product.imageUrl, // Support both image and imageUrl fields\n            subtitle: product.barcode ? `Barcode: ${product.barcode}` : 'No Barcode',\n            details: [\n              formatCurrency(product.rentPrice || 0, currency),\n              `Deposit: ${formatCurrency(product.deposit || 0, currency)}`,\n              `Available: ${available}`,\n              `Total Stock: ${totalStock}`,\n              product.category?.name || 'No Category'\n            ].filter(Boolean), // Remove empty values\n            type: 'product' as const\n          };\n        });\n      }\n      return [];\n    } catch (error) {\n      console.error('Error searching products:', error);\n      return [];\n    } finally {\n      setIsLoadingProducts(false);\n    }\n  }, [currency]);\n\n  // Search products for general use\n  const searchProducts = useCallback(async (query: string): Promise<ProductWithStock[]> => {\n    if (!query.trim()) return [];\n    \n    try {\n      setIsLoadingProducts(true);\n      \n      const result = await productsApi.getProducts({ \n        search: query, \n        limit: PAGINATION.SEARCH_LIMIT\n      });\n      \n      if (result.success && result.data?.products) {\n        // Return the products directly since they're already ProductWithStock\n        return result.data.products;\n      }\n      return [];\n    } catch (error) {\n      console.error('Error searching products:', error);\n      return [];\n    } finally {\n      setIsLoadingProducts(false);\n    }\n  }, []);\n\n  return {\n    isLoadingProducts,\n    searchProductsForSelect,\n    searchProducts,\n  };\n};\n","/**\n * Custom hook for customer search functionality\n */\n\nimport { useState, useCallback } from 'react';\nimport { customersApi } from '@rentalshop/utils';\nimport { PAGINATION } from '@rentalshop/constants';\nimport type { CustomerSearchResult, CustomerSearchOption } from '../types';\n\nexport const useCustomerSearch = () => {\n  const [isLoadingCustomers, setIsLoadingCustomers] = useState(false);\n  const [customerSearchResults, setCustomerSearchResults] = useState<CustomerSearchResult[]>([]);\n\n  // Customer search function for SearchableSelect\n  const searchCustomers = useCallback(async (query: string): Promise<CustomerSearchOption[]> => {\n    if (!query.trim()) {\n      setCustomerSearchResults([]);\n      return [];\n    }\n    \n    try {\n      setIsLoadingCustomers(true);\n      \n      const result = await customersApi.getCustomers({ \n        search: query, \n        limit: PAGINATION.SEARCH_LIMIT, \n        isActive: true \n      });\n      \n      if (result.success && result.data?.customers && result.data.customers.length > 0) {\n        // Store the full customer data for later use\n        setCustomerSearchResults(result.data.customers);\n        \n        // Return in SearchableSelect format\n        const searchOptions = result.data.customers.map((customer: CustomerSearchResult) => ({\n          value: customer.id,\n          label: `${customer.firstName} ${customer.lastName} - ${customer.phone}`,\n          type: 'customer' as const\n        }));\n        \n        return searchOptions;\n      } else {\n        setCustomerSearchResults([]);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error searching customers:', error);\n      setCustomerSearchResults([]);\n      return [];\n    } finally {\n      setIsLoadingCustomers(false);\n    }\n  }, []);\n\n  // Clear customer search results\n  const clearCustomerSearchResults = useCallback(() => {\n    setCustomerSearchResults([]);\n  }, []);\n\n  // Set customer search results\n  const setCustomerResults = useCallback((customers: CustomerSearchResult[]) => {\n    setCustomerSearchResults(customers);\n  }, []);\n\n  return {\n    isLoadingCustomers,\n    customerSearchResults,\n    searchCustomers,\n    clearCustomerSearchResults,\n    setCustomerResults,\n  };\n};\n","/**\n * ProductsSection - Component for product search and selected products\n */\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Input,\n  SearchableSelect,\n  Skeleton,\n  Button,\n  useFormatCurrency\n} from '@rentalshop/ui';\nimport { useOrderTranslations, useProductTranslations } from '@rentalshop/hooks';\nimport { \n  Search, \n  Package, \n  Trash2 \n} from 'lucide-react';\nimport { ProductAvailabilityAsyncDisplay } from '@rentalshop/ui';\nimport type { \n  OrderItemFormData, \n  ProductWithStock,\n  ProductAvailabilityStatus \n} from '../types';\n\n// ============================================================================\n// NUMBER INPUT WITH THOUSAND SEPARATOR\n// ============================================================================\n\ninterface NumberInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n  className?: string;\n  placeholder?: string;\n  decimals?: number;\n}\n\nconst NumberInput: React.FC<NumberInputProps> = ({\n  value,\n  onChange,\n  min = 0,\n  max,\n  step = 1,\n  className = '',\n  placeholder = '',\n  decimals = 0\n}) => {\n  const [displayValue, setDisplayValue] = React.useState('');\n  const [isFocused, setIsFocused] = React.useState(false);\n\n  // Format number with thousand separators when not focused\n  React.useEffect(() => {\n    if (!isFocused) {\n      if (value === 0 || value === null || value === undefined) {\n        setDisplayValue('');\n      } else {\n        // Format with thousand separators\n        const formatted = new Intl.NumberFormat('en-US', {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(value);\n        setDisplayValue(formatted);\n      }\n    }\n  }, [value, isFocused, decimals]);\n\n  const handleFocus = () => {\n    setIsFocused(true);\n    // Show raw number when focused (without commas for easier editing)\n    setDisplayValue(value ? value.toString() : '');\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n    // Parse and validate\n    const numValue = parseFloat(displayValue.replace(/,/g, '')) || 0;\n    const bounded = max !== undefined ? Math.min(max, numValue) : numValue;\n    const final = Math.max(min, bounded);\n    onChange(final);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const input = e.target.value;\n    // Allow only numbers, decimal point (for price inputs)\n    if (input === '' || /^[\\d\\.]*$/.test(input)) {\n      setDisplayValue(input);\n    }\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      value={displayValue}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      className={className}\n      placeholder={placeholder}\n    />\n  );\n};\n\n// ============================================================================\n// MAIN COMPONENT\n// ============================================================================\n\ninterface ProductsSectionProps {\n  orderItems: OrderItemFormData[];\n  products: ProductWithStock[];\n  onAddProduct: (product: ProductWithStock) => void;\n  onRemoveProduct: (productId: number) => void;\n  onUpdateOrderItem: (productId: number, field: keyof OrderItemFormData, value: string | number) => void;\n  onSearchProducts: (query: string) => Promise<any[]>;\n  isLoadingProducts: boolean;\n  orderType: 'RENT' | 'SALE';\n  pickupDate?: string;\n  returnDate?: string;\n  getProductAvailabilityStatus: (product: ProductWithStock, startDate?: string, endDate?: string, requestedQuantity?: number) => Promise<ProductAvailabilityStatus>;\n  currency?: 'USD' | 'VND';\n}\n\nexport const ProductsSection: React.FC<ProductsSectionProps> = ({\n  orderItems,\n  products,\n  onAddProduct,\n  onRemoveProduct,\n  onUpdateOrderItem,\n  onSearchProducts,\n  isLoadingProducts,\n  orderType,\n  pickupDate,\n  returnDate,\n  getProductAvailabilityStatus,\n  currency = 'USD',\n}) => {\n  const t = useOrderTranslations();\n  const tp = useProductTranslations();\n  return (\n    <Card>\n      <CardContent className=\"space-y-4 pt-6\">\n        {/* Search and Filter Bar */}\n        <div className=\"space-y-3\">\n          <div className=\"relative\">\n            <SearchableSelect\n              placeholder={t('messages.searchProducts')}\n              value={undefined}\n              onChange={(productId: number) => {\n                console.log('🔍 SearchableSelect onChange called with productId:', productId);\n                console.log('🔍 Available products:', products);\n                // Find the product and add it to order\n                const product = products.find(p => p.id === productId);\n                console.log('🔍 Found product:', product);\n                if (product) {\n                  console.log('🔍 Calling onAddProduct with product:', product);\n                  onAddProduct(product);\n                } else {\n                  console.error('❌ Product not found for ID:', productId);\n                }\n              }}\n              onSearch={onSearchProducts}\n              searchPlaceholder=\"Type to search products...\"\n              emptyText=\"No products found. Try a different search term.\"\n              showAddNew={false}\n            />\n            {isLoadingProducts && (\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                <Skeleton className=\"w-4 h-4 rounded-full\" />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Selected Products Section */}\n        <div className=\"space-y-4\">\n          <Card className=\"border border-gray-200\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-base flex items-center gap-2\">\n                <Package className=\"w-5 h-5\" />\n                {tp('selectedProducts')} <span className=\"text-red-500\">*</span>\n                <span className=\"text-sm font-normal text-gray-500\">({orderItems.length})</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {orderItems.length === 0 ? (\n                /* Empty State Placeholder */\n                <div className=\"p-8 text-center\">\n                  <div className=\"w-16 h-16 mx-auto mb-4 text-gray-400\">\n                    <Package className=\"w-16 h-16\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium text-gray-600 mb-2\">\n                    {tp('noProductsSelected')}\n                  </h3>\n                  <p className=\"text-sm text-gray-500 mb-4 max-w-sm mx-auto\">\n                    {t('messages.searchProductsAbove')}\n                  </p>\n                </div>\n              ) : (\n                /* Product List */\n                <div className=\"space-y-3\">\n                  {orderItems.map((item, index) => (\n                    <OrderItemCard\n                      key={index}\n                      item={item}\n                      product={products.find(p => p.id === item.productId)}\n                      onRemove={onRemoveProduct}\n                      onUpdate={onUpdateOrderItem}\n                      orderType={orderType}\n                      pickupDate={pickupDate}\n                      returnDate={returnDate}\n                      getProductAvailabilityStatus={getProductAvailabilityStatus}\n                    />\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// OrderItemCard sub-component\ninterface OrderItemCardProps {\n  item: OrderItemFormData;\n  product?: ProductWithStock;\n  onRemove: (productId: number) => void;\n  onUpdate: (productId: number, field: keyof OrderItemFormData, value: string | number) => void;\n  orderType: 'RENT' | 'SALE';\n  pickupDate?: string;\n  returnDate?: string;\n  getProductAvailabilityStatus: (product: ProductWithStock, startDate?: string, endDate?: string, requestedQuantity?: number) => Promise<ProductAvailabilityStatus>;\n}\n\nconst OrderItemCard: React.FC<OrderItemCardProps> = ({\n  item,\n  product,\n  onRemove,\n  onUpdate,\n  orderType,\n  pickupDate,\n  returnDate,\n  getProductAvailabilityStatus\n}) => {\n  // Use formatCurrency hook - automatically uses merchant's currency\n  const formatMoney = useFormatCurrency();\n  const t = useOrderTranslations();\n  const tp = useProductTranslations();\n  \n  // Use the product information stored in the item instead of the external product\n  // This ensures all order items are displayed even if the external products array is incomplete\n  const displayProduct = item.product || product;\n  \n  if (!displayProduct) {\n    // Fallback display when no product information is available\n    return (\n      <div className=\"p-4 bg-gray-50 rounded-lg border border-gray-100\">\n        <div className=\"flex items-start gap-4 mb-3\">\n          <div className=\"flex-shrink-0\">\n            <div className=\"w-16 h-16 rounded-lg overflow-hidden border border-gray-200 bg-gray-200 flex items-center justify-center\">\n              <Package className=\"w-8 h-8 text-gray-400\" />\n            </div>\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900\">\n                  {tp('productId')}: {item.productId}\n                </h4>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {tp('productInformationNotAvailable')}\n                </p>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => onRemove(item.productId)}\n                className=\"text-red-500 hover:text-red-700 p-1 h-auto w-auto\"\n                title={t('messages.removeProduct')}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n        \n        {/* Input Fields */}\n        <div className=\"grid grid-cols-2 gap-3 mb-3\">\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Quantity\n            </label>\n            <input\n              type=\"number\"\n              value={item.quantity}\n              onChange={(e) => onUpdate(item.productId, 'quantity', parseInt(e.target.value) || 1)}\n              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              min=\"1\"\n            />\n          </div>\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n              Unit Price\n            </label>\n            <input\n              type=\"number\"\n              value={item.unitPrice}\n              onChange={(e) => onUpdate(item.productId, 'unitPrice', parseFloat(e.target.value) || 0)}\n              className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              step=\"0.01\"\n              min=\"0\"\n            />\n          </div>\n        </div>\n        \n        {/* Notes */}\n        <div className=\"mb-3\">\n          <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n            Notes\n          </label>\n          <textarea\n            value={item.notes || ''}\n            onChange={(e) => onUpdate(item.productId, 'notes', e.target.value)}\n            className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            rows={2}\n            placeholder=\"Add notes about this product...\"\n          />\n        </div>\n        \n        {/* Summary */}\n        <div className=\"flex justify-between items-center text-sm\">\n          <span className=\"text-gray-600\">\n            Total: {item.quantity} × {item.unitPrice} ₫ = {item.quantity * item.unitPrice} ₫\n          </span>\n          {orderType === 'RENT' && (\n            <span className=\"text-gray-600\">\n              {t('messages.deposit')}: {item.deposit || 0} ₫\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  const imageUrl = displayProduct.images?.[0];\n\n  return (\n    <div className=\"p-4 bg-gray-50 rounded-lg border border-gray-100\">\n      {/* Product Header with Image */}\n      <div className=\"flex items-start gap-4 mb-3\">\n        {/* Product Image */}\n        <div className=\"flex-shrink-0\">\n          {imageUrl ? (\n            <div className=\"w-16 h-16 rounded-lg overflow-hidden border border-gray-200\">\n              <img \n                src={imageUrl} \n                alt={displayProduct.name || t('messages.product')}\n                className=\"w-full h-full object-cover\"\n                onError={(e) => {\n                  // Fallback to package icon if image fails to load\n                  e.currentTarget.style.display = 'none';\n                  e.currentTarget.nextElementSibling?.classList.remove('hidden');\n                }}\n              />\n              <div className=\"hidden w-full h-16 bg-gray-100 flex items-center justify-center\">\n                <Package className=\"w-8 h-8 text-gray-400\" />\n              </div>\n            </div>\n          ) : (\n            <div className=\"w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center border border-gray-200\">\n              <Package className=\"w-8 h-8 text-gray-400\" />\n            </div>\n          )}\n        </div>\n\n        {/* Product Info */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"font-medium text-gray-900\">\n                {displayProduct.name || t('messages.unknownProduct')}\n              </div>\n              <div className=\"text-sm text-gray-500\">\n                {displayProduct.barcode || t('messages.noBarcode')}\n              </div>\n              {/* Availability Warning */}\n              {orderType === 'RENT' && (\n                <div className=\"mt-2\">\n                  {product && (\n                    <ProductAvailabilityAsyncDisplay \n                      product={product}\n                      pickupDate={pickupDate}\n                      returnDate={returnDate}\n                      requestedQuantity={item.quantity || 1}\n                      getProductAvailabilityStatus={getProductAvailabilityStatus}\n                    />\n                  )}\n                  {!pickupDate || !returnDate ? (\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      Select rental dates to check availability\n                    </div>\n                  ) : null}\n                </div>\n              )}\n            </div>\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onRemove(item.productId)}\n              className=\"shrink-0 h-8 w-8 p-0 text-red-600 hover:bg-red-50 hover:text-red-700 transition-colors duration-150\"\n              title=\"Remove product\"\n            >\n              <Trash2 className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Editable Fields */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n        {/* Quantity */}\n        <div>\n          <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n            Quantity\n          </label>\n          <NumberInput\n            value={item.quantity}\n            onChange={(value) => onUpdate(item.productId, 'quantity', value)}\n            min={1}\n            decimals={0}\n            className=\"h-8 text-sm\"\n          />\n        </div>\n\n        {/* Unit Price */}\n        <div>\n          <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n            Unit Price\n          </label>\n          <NumberInput\n            value={item.unitPrice}\n            onChange={(value) => onUpdate(item.productId, 'unitPrice', value)}\n            min={0}\n            step={0.01}\n            decimals={0}\n            className=\"h-8 text-sm\"\n          />\n        </div>\n\n        {/* Deposit */}\n        <div>\n          <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n            Deposit\n          </label>\n          <NumberInput\n            value={item.deposit || 0}\n            onChange={(value) => onUpdate(item.productId, 'deposit', value)}\n            min={0}\n            step={0.01}\n            decimals={0}\n            className=\"h-8 text-sm\"\n          />\n        </div>\n      </div>\n\n      {/* Notes */}\n      <div className=\"mt-3\">\n        <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n          Notes\n        </label>\n        <Input\n          value={item.notes}\n          onChange={(e) => onUpdate(item.productId, 'notes', e.target.value)}\n          placeholder=\"Add notes for this item...\"\n          className=\"h-8 text-sm\"\n        />\n      </div>\n\n      {/* Summary */}\n      <div className=\"flex items-center justify-between mt-3 pt-3 border-t border-gray-200\">\n        <div className=\"text-sm text-gray-600\">\n          Total: {item.quantity} × {formatMoney(item.unitPrice)} = {formatMoney(item.quantity * item.unitPrice)}\n        </div>\n        <div className=\"text-sm text-gray-600\">\n          {t('messages.deposit')}: {formatMoney(item.deposit)}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/**\n * OrderInfoSection - Component for order information (customer, outlet, dates, etc.)\n */\n\nimport React, { useState } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  DateRangePicker,\n  RentalPeriodSelector,\n  Textarea,\n  Skeleton,\n  Button\n} from '@rentalshop/ui';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { \n  User, \n  Search, \n  X, \n  Plus, \n  ChevronDown, \n  Info \n} from 'lucide-react';\nimport type { \n  OrderFormData, \n  CustomerSearchResult \n} from '../types';\n\n// ============================================================================\n// NUMBER INPUT WITH THOUSAND SEPARATOR\n// ============================================================================\n\ninterface NumberInputProps {\n  value: number;\n  onChange: (value: number) => void;\n  min?: number;\n  max?: number;\n  step?: number;\n  className?: string;\n  placeholder?: string;\n  decimals?: number;\n}\n\nconst NumberInput: React.FC<NumberInputProps> = ({\n  value,\n  onChange,\n  min = 0,\n  max,\n  step = 1,\n  className = '',\n  placeholder = '',\n  decimals = 0\n}) => {\n  const [displayValue, setDisplayValue] = React.useState('');\n  const [isFocused, setIsFocused] = React.useState(false);\n\n  React.useEffect(() => {\n    if (!isFocused) {\n      if (value === 0 || value === null || value === undefined) {\n        setDisplayValue('');\n      } else {\n        const formatted = new Intl.NumberFormat('en-US', {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(value);\n        setDisplayValue(formatted);\n      }\n    }\n  }, [value, isFocused, decimals]);\n\n  const handleFocus = () => {\n    setIsFocused(true);\n    setDisplayValue(value ? value.toString() : '');\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n    const numValue = parseFloat(displayValue.replace(/,/g, '')) || 0;\n    const bounded = max !== undefined ? Math.min(max, numValue) : numValue;\n    const final = Math.max(min, bounded);\n    onChange(final);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const input = e.target.value;\n    if (input === '' || /^[\\d\\.]*$/.test(input)) {\n      setDisplayValue(input);\n    }\n  };\n\n  return (\n    <Input\n      type=\"text\"\n      value={displayValue}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      className={className}\n      placeholder={placeholder}\n    />\n  );\n};\n\n// ============================================================================\n// MAIN COMPONENT\n// ============================================================================\n\ninterface OrderInfoSectionProps {\n  formData: OrderFormData;\n  outlets: Array<{ id: number; name: string; merchantId?: number }>;\n  selectedCustomer: CustomerSearchResult | null;\n  searchQuery: string;\n  customerSearchResults: CustomerSearchResult[];\n  isLoadingCustomers: boolean;\n  isEditMode: boolean;\n  merchantData?: any;\n  onFormDataChange: (field: keyof OrderFormData, value: any) => void;\n  onCustomerSelect: (customer: CustomerSearchResult) => void;\n  onCustomerClear: () => void;\n  onSearchQueryChange: (query: string) => void;\n  onCustomerSearch: (query: string) => Promise<any[]>;\n  onShowAddCustomerDialog: () => void;\n  onUpdateRentalDates: (startDate: string, endDate: string) => void;\n}\n\nexport const OrderInfoSection: React.FC<OrderInfoSectionProps> = ({\n  formData,\n  outlets,\n  selectedCustomer,\n  searchQuery,\n  customerSearchResults,\n  isLoadingCustomers,\n  isEditMode,\n  merchantData,\n  onFormDataChange,\n  onCustomerSelect,\n  onCustomerClear,\n  onSearchQueryChange,\n  onCustomerSearch,\n  onShowAddCustomerDialog,\n  onUpdateRentalDates\n}) => {\n  const t = useOrderTranslations();\n  const [showManualCustomerInput, setShowManualCustomerInput] = useState(false);\n\n  return (\n    <Card>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-base flex items-center gap-2\">\n          {t('detail.orderInformation')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* 1. Order Type Toggle */}\n        <div className=\"space-y-2 w-full\">\n          <label className=\"text-sm font-medium text-text-primary\">\n            {t('messages.orderType')}\n            {isEditMode && (\n              <span className=\"ml-2 text-xs text-gray-500 font-normal\">\n                ({t('messages.cannotChangeWhenEditing')})\n              </span>\n            )}\n          </label>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <Button\n              type=\"button\"\n              variant={formData.orderType === 'RENT' ? 'default' : 'outline'}\n              disabled={isEditMode}\n              onClick={() => {\n                if (!isEditMode) {\n                  onFormDataChange('orderType', 'RENT');\n                }\n              }}\n              className={`h-10 px-4 py-2 ${isEditMode ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              {t('orderType.RENT')}\n            </Button>\n            <Button\n              type=\"button\"\n              variant={formData.orderType === 'SALE' ? 'default' : 'outline'}\n              disabled={isEditMode}\n              onClick={() => {\n                if (!isEditMode) {\n                  onFormDataChange('orderType', 'SALE');\n                  onFormDataChange('pickupPlanAt', '');\n                  onFormDataChange('returnPlanAt', '');\n                  onFormDataChange('depositAmount', 0);\n                }\n              }}\n              className={`h-10 px-4 py-2 ${isEditMode ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              {t('orderType.SALE')}\n            </Button>\n          </div>\n        </div>\n\n        {/* 2. Rental Period Selection - Smart pricing based on merchant configuration */}\n        {formData.orderType === 'RENT' && (\n          <div className=\"space-y-2 w-full\">\n            {/* Debug logs */}\n            {console.log('🔍 OrderInfoSection - Rental Period Check:', {\n              orderType: formData.orderType,\n              hasMerchantData: !!merchantData,\n              pricingType: merchantData?.pricingType,\n              businessType: merchantData?.businessType\n            })}\n            \n            {merchantData ? (\n              <RentalPeriodSelector\n                product={{\n                  id: 0, // Placeholder - will be updated when product is selected\n                  name: t('messages.rentalPeriod'),\n                  rentPrice: 0, // Will be calculated based on merchant pricing\n                  deposit: 0\n                }}\n                merchant={merchantData}\n                initialStartDate={formData.pickupPlanAt}\n                initialEndDate={formData.returnPlanAt}\n                onPeriodChange={(startAt, endAt) => {\n                  const startDate = startAt.toISOString().split('T')[0];\n                  const endDate = endAt.toISOString().split('T')[0];\n                  \n                  onFormDataChange('pickupPlanAt', startDate);\n                  onFormDataChange('returnPlanAt', endDate);\n                  \n                  onUpdateRentalDates(startDate, endDate);\n                }}\n                onPriceChange={(pricing) => {\n                  // Update pricing information when period changes\n                  console.log('Pricing updated:', pricing);\n                }}\n              />\n            ) : (\n              // Fallback to basic DateRangePicker if no merchant data\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-text-primary\">\n                  {t('messages.rentalPeriod')} <span className=\"text-red-500\">*</span>\n                </label>\n                <DateRangePicker\n                  value={{\n                    from: formData.pickupPlanAt ? new Date(formData.pickupPlanAt) : undefined,\n                    to: formData.returnPlanAt ? new Date(formData.returnPlanAt) : undefined\n                  }}\n                  onChange={(range) => {\n                    const startDate = range.from ? range.from.toISOString().split('T')[0] : '';\n                    const endDate = range.to ? range.to.toISOString().split('T')[0] : '';\n                    \n                    onFormDataChange('pickupPlanAt', startDate);\n                    onFormDataChange('returnPlanAt', endDate);\n                    \n                    if (startDate && endDate) {\n                      onUpdateRentalDates(startDate, endDate);\n                    }\n                  }}\n                  placeholder={t('messages.selectRentalPeriod')}\n                  minDate={new Date()}\n                  showPresets={false}\n                  format=\"long\"\n                />\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* 3. Outlet Selection */}\n        <div className=\"space-y-2 w-full\">\n          <label className=\"text-sm font-medium text-text-primary\">\n            {t('messages.outlet')} <span className=\"text-red-500\">*</span>\n          </label>\n          <Select\n            value={formData.outletId ? String(formData.outletId) : undefined}\n            onValueChange={(value: string) => {\n              console.log('🔍 Outlet selection changed:', { \n                previousValue: formData.outletId, \n                newValue: value,\n                convertedValue: value ? parseInt(value, 10) : undefined,\n                outlets: outlets\n              });\n              // Convert string back to number for form data\n              const outletId = value ? parseInt(value, 10) : undefined;\n              onFormDataChange('outletId', outletId);\n            }}\n          >\n            <SelectTrigger variant=\"filled\" className=\"w-full\">\n              <SelectValue placeholder=\"Select outlet...\" />\n            </SelectTrigger>\n            <SelectContent>\n              {outlets.map(outlet => (\n                <SelectItem key={outlet.id} value={String(outlet.id)}>\n                  {outlet.name}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 4. Customer Selection */}\n        <div className=\"space-y-2 w-full\">\n          <label className=\"text-sm font-medium text-text-primary\">\n            {t('messages.customer')} <span className=\"text-red-500\">*</span>\n          </label>\n          <div className=\"relative\">\n            <div className=\"relative\">\n              <input\n                type=\"text\"\n                placeholder={t('messages.searchCustomers')}\n                value={selectedCustomer ? `${selectedCustomer.firstName} ${selectedCustomer.lastName} - ${selectedCustomer.phone}` : searchQuery}\n                onFocus={() => {\n                  // Show search results when focused if there's a query\n                  if (searchQuery.trim()) {\n                    onCustomerSearch(searchQuery);\n                  }\n                }}\n                onChange={(e) => {\n                  const query = e.target.value;\n                  \n                  // If user is typing and there's a selected customer, clear the selection\n                  if (selectedCustomer && query !== `${selectedCustomer.firstName} ${selectedCustomer.lastName} - ${selectedCustomer.phone}`) {\n                    onCustomerClear();\n                  }\n                  \n                  onSearchQueryChange(query);\n                  \n                  if (query.trim()) {\n                    onCustomerSearch(query);\n                  }\n                }}\n                className={`h-11 w-full rounded-lg border pl-4 pr-12 text-sm transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-0 ${\n                  selectedCustomer \n                    ? 'border-green-500 bg-green-50 text-green-900 font-medium' \n                    : 'border-gray-300 bg-white text-gray-900 hover:border-gray-400 focus:border-blue-500 focus:ring-blue-100'\n                }`}\n              />\n              {selectedCustomer ? (\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  type=\"button\"\n                  onClick={onCustomerClear}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-red-500 hover:text-red-700 transition-colors duration-150 h-6 w-6 p-0\"\n                  title={t('messages.clearSelectedCustomer')}\n                >\n                  <X className=\"w-4 h-4\" />\n                </Button>\n              ) : (\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  type=\"button\"\n                  onClick={() => {\n                    if (searchQuery.trim()) {\n                      onCustomerSearch(searchQuery);\n                    }\n                  }}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-150 h-6 w-6 p-0\"\n                >\n                  <Search className=\"w-4 h-4\" />\n                </Button>\n              )}\n              \n              {/* Search Results Dropdown */}\n              {!selectedCustomer && (customerSearchResults.length > 0 || searchQuery.trim()) && (\n                <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto\">\n                  {/* Add New Customer Button - Always at Top */}\n                  <Button\n                    variant=\"ghost\"\n                    type=\"button\"\n                    onClick={onShowAddCustomerDialog}\n                    className=\"w-full px-4 py-3 text-left hover:bg-blue-50 border-b border-gray-200 bg-blue-50/50 text-blue-700 font-medium h-auto justify-start rounded-none\"\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <Plus className=\"w-4 h-4\" />\n                      <span>{t('messages.addNewCustomer')}</span>\n                    </div>\n                    {searchQuery.trim() && (\n                      <div className=\"text-xs text-blue-700 mt-1\">\n                        Create customer: \"{searchQuery}\"\n                      </div>\n                    )}\n                  </Button>\n\n                  {/* Customer Results */}\n                  {customerSearchResults.length > 0 ? (\n                    <>\n                      {customerSearchResults.map((customer) => (\n                        <Button\n                          variant=\"ghost\"\n                          key={customer.id}\n                          type=\"button\"\n                          onClick={() => {\n                            onCustomerSelect(customer);\n                            onSearchQueryChange(`${customer.firstName} ${customer.lastName} - ${customer.phone}`);\n                          }}\n                          className=\"w-full px-4 py-3 text-left hover:bg-gray-50 border-b border-gray-100 last:border-b-0 h-auto justify-start rounded-none\"\n                        >\n                          <div className=\"font-medium text-gray-900\">\n                            {customer.firstName} {customer.lastName}\n                          </div>\n                          <div className=\"text-sm text-gray-600\">{customer.phone}</div>\n                        </Button>\n                      ))}\n                    </>\n                  ) : (\n                    /* No Results - Show Message */\n                    <div className=\"p-4 text-center\">\n                      <div className=\"text-sm text-gray-500\">\n                        No customers found for \"{searchQuery}\"\n                      </div>\n                      <div className=\"text-xs text-gray-400 mt-1\">\n                        {t('messages.useAddNewCustomerButton')}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n            {isLoadingCustomers && (\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                <Skeleton className=\"w-4 h-4 rounded-full\" />\n              </div>\n            )}\n          </div>\n\n        </div>\n\n        {/* 5. Deposit Amount - Only for RENT orders */}\n        {formData.orderType === 'RENT' && (\n          <div className=\"space-y-2 w-full\">\n            <label className=\"text-sm font-medium text-text-primary\">{t('messages.deposit')}</label>\n            <NumberInput\n              value={formData.depositAmount || 0}\n              onChange={(value) => onFormDataChange('depositAmount', value)}\n              min={0}\n              decimals={0}\n              placeholder=\"Enter deposit amount...\"\n              className=\"w-full\"\n            />\n          </div>\n        )}\n\n        {/* 6. Discount Section */}\n        <div className=\"space-y-2 w-full\">\n          <label className=\"text-sm font-medium text-text-primary\">{t('messages.discount')}</label>\n          <div className=\"grid grid-cols-3 gap-2\">\n            <div className=\"col-span-2\">\n              <NumberInput\n                value={formData.discountValue || 0}\n                onChange={(value) => onFormDataChange('discountValue', value)}\n                min={0}\n                decimals={0}\n                placeholder={t('messages.discountAmount')}\n                className=\"w-full\"\n              />\n            </div>\n            <Select\n              value={formData.discountType}\n              onValueChange={(value: 'amount' | 'percentage') => {\n                onFormDataChange('discountType', value);\n              }}\n            >\n              <SelectTrigger variant=\"filled\" className=\"w-full\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"amount\">{t('messages.amount')}</SelectItem>\n                <SelectItem value=\"percentage\">{t('messages.percentage')}</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        {/* 7. Order Notes */}\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium text-text-primary\">{t('messages.orderNotes')}</label>\n          <Textarea\n            placeholder={t('messages.enterOrderNotes')}\n            value={formData.notes}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => \n              onFormDataChange('notes', e.target.value)\n            }\n            rows={3}\n          />\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","/**\n * OrderSummarySection - Component for order summary, validation, and actions\n */\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  useFormatCurrency\n} from '@rentalshop/ui';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { \n  CheckCircle, \n  XCircle \n} from 'lucide-react';\nimport type { \n  OrderFormData, \n  OrderItemFormData \n} from '../types';\n\ninterface OrderSummarySectionProps {\n  formData: OrderFormData;\n  orderItems: OrderItemFormData[];\n  isEditMode: boolean;\n  loading: boolean;\n  isFormValid: boolean;\n  onPreviewClick: (e: React.FormEvent) => void;\n  onCancel?: () => void;\n}\n\nexport const OrderSummarySection: React.FC<OrderSummarySectionProps> = ({\n  formData,\n  orderItems,\n  isEditMode,\n  loading,\n  isFormValid,\n  onPreviewClick,\n  onCancel,\n}) => {\n  // Use formatCurrency hook - automatically uses merchant's currency\n  const formatMoney = useFormatCurrency();\n  const t = useOrderTranslations();\n  \n  return (\n    <Card>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-base flex items-center gap-2\">\n          {t('detail.orderSummary')} & {t('detail.orderActions')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Order Summary */}\n        <div className=\"space-y-3 p-4 border border-border rounded-lg bg-bg-primary\">\n          <h4 className=\"text-sm font-semibold text-text-primary\">{t('detail.orderSummary')}</h4>\n          \n          {/* Rental Duration - Show for RENT orders with dates */}\n          {formData.orderType === 'RENT' && formData.pickupPlanAt && formData.returnPlanAt && (\n            <div className=\"pb-2 mb-2 border-b border-border\">\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span className=\"text-text-secondary\">{t('summary.rentalDuration')}:</span>\n                <span className=\"font-medium\">\n                  {(() => {\n                    const start = new Date(formData.pickupPlanAt);\n                    const end = new Date(formData.returnPlanAt);\n                    const days = Math.ceil((end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24));\n                    return `${days} ${days === 1 ? 'day' : 'days'}`;\n                  })()}\n                </span>\n              </div>\n              <div className=\"flex justify-between text-xs text-text-tertiary\">\n                <span>{t('summary.from')}: {new Date(formData.pickupPlanAt).toLocaleDateString('en-GB')}</span>\n                <span>{t('summary.to')}: {new Date(formData.returnPlanAt).toLocaleDateString('en-GB')}</span>\n              </div>\n            </div>\n          )}\n          \n          {/* Subtotal */}\n          <div className=\"flex justify-between text-sm\">\n            <span className=\"text-text-secondary\">{t('summary.subtotal')}:</span>\n            <span className=\"font-medium\">{formatMoney(formData.subtotal)}</span>\n          </div>\n\n          {/* Discount */}\n          {formData.discountAmount > 0 && (\n            <div className=\"flex justify-between text-sm text-action-success\">\n              <span>{t('summary.discount')}:</span>\n              <span className=\"font-medium\">-{formatMoney(formData.discountAmount)}</span>\n            </div>\n          )}\n\n          {/* Deposit */}\n          {formData.orderType === 'RENT' && formData.depositAmount > 0 && (\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-text-secondary\">{t('summary.deposit')}:</span>\n              <span className=\"font-medium\">{formatMoney(formData.depositAmount)}</span>\n            </div>\n          )}\n\n          {/* Grand Total */}\n          <div className=\"flex justify-between text-base font-bold text-action-primary pt-2 border-t border-border\">\n            <span>{t('summary.grandTotal')}:</span>\n            <span>{formatMoney(formData.totalAmount)}</span>\n          </div>\n        </div>\n\n        {/* Validation Summary */}\n        <div className=\"p-3 bg-gray-50 border border-gray-200 rounded-lg\">\n          <h4 className=\"text-sm font-semibold text-gray-700 mb-2\">{t('summary.orderRequirements')}:</h4>\n          <div className=\"space-y-2 text-sm\">\n            {/* Products Required */}\n            <div className=\"flex items-center gap-2\">\n              {orderItems.length > 0 ? (\n                <CheckCircle className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <XCircle className=\"w-4 h-4 text-red-500\" />\n              )}\n              <span className={orderItems.length > 0 ? 'text-green-700' : 'text-red-600'}>\n                {orderItems.length > 0 ? '✓' : '✗'} {t('requirements.selectAtLeastOneProduct')}\n                {orderItems.length > 0 && ` (${orderItems.length} ${t('requirements.selected')})`}\n              </span>\n            </div>\n\n            {/* Customer Required */}\n            <div className=\"flex items-center gap-2\">\n              {formData.customerId && formData.customerId > 0 ? (\n                <CheckCircle className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <XCircle className=\"w-4 h-4 text-red-500\" />\n              )}\n              <span className={formData.customerId && formData.customerId > 0 ? 'text-green-700' : 'text-red-600'}>\n                {formData.customerId && formData.customerId > 0 ? '✓' : '✗'} {t('requirements.customerInformationRequired')}\n              </span>\n            </div>\n\n            {/* Rental Period Required for RENT orders */}\n            {formData.orderType === 'RENT' && (\n              <div className=\"flex items-center gap-2\">\n                {formData.pickupPlanAt && formData.returnPlanAt ? (\n                  <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                ) : (\n                  <XCircle className=\"w-4 h-4 text-red-500\" />\n                )}\n                <span className={formData.pickupPlanAt && formData.returnPlanAt ? 'text-green-700' : 'text-red-600'}>\n                  {formData.pickupPlanAt && formData.returnPlanAt ? '✓' : '✗'} {t('requirements.rentalPeriodRequired')}\n                </span>\n              </div>\n            )}\n\n            {/* Outlet Required */}\n            <div className=\"flex items-center gap-2\">\n              {formData.outletId && formData.outletId > 0 ? (\n                <CheckCircle className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <XCircle className=\"w-4 h-4 text-red-500\" />\n              )}\n              <span className={formData.outletId && formData.outletId > 0 ? 'text-green-700' : 'text-red-600'}>\n                {formData.outletId && formData.outletId > 0 ? '✓' : '✗'} {t('requirements.outletSelectionRequired')}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"space-y-4 pt-2\">\n          <div className=\"flex gap-3\">\n            <Button\n              type=\"button\"\n              disabled={loading || !isFormValid}\n              onClick={onPreviewClick}\n              className=\"flex-1\"\n            >\n              {loading ? t('messages.processing') : isEditMode ? t('messages.updateOrder') : t('messages.preview')}\n            </Button>\n            {onCancel && (\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onCancel}\n                className=\"flex-1\"\n              >\n                {isEditMode ? t('messages.cancel') : t('messages.resetSelection')}\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","/**\n * CustomerCreationDialog - Dialog component for creating new customers\n */\n\nimport React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle \n} from '@rentalshop/ui';\nimport { AddCustomerForm } from '../../../features/Customers/components/AddCustomerForm';\nimport type { CustomerCreateInput, CustomerSearchResult } from '@rentalshop/types';\n\ninterface CustomerCreationDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onCustomerCreated: (customerData: CustomerCreateInput) => void;\n  merchantId?: number;\n}\n\nexport const CustomerCreationDialog: React.FC<CustomerCreationDialogProps> = ({\n  open,\n  onOpenChange,\n  onCustomerCreated,\n  merchantId\n}) => {\n  const [isCreatingCustomer, setIsCreatingCustomer] = useState(false);\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-5xl max-h-[95vh] overflow-y-auto p-0\">\n        <DialogHeader className=\"px-6 py-4 border-b border-gray-200\">\n          <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n            Add New Customer\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"p-6\">\n          <AddCustomerForm\n            onSave={async (customerData: CustomerCreateInput) => {\n              try {\n                console.log('🔍 CustomerCreationDialog: Starting customer creation...');\n                setIsCreatingCustomer(true);\n                \n                // Get merchant ID from props\n                if (!merchantId) {\n                  throw new Error('Merchant ID is required to create a customer. Please ensure the form has access to merchant information.');\n                }\n                \n                console.log('🔍 CustomerCreationDialog: Calling onCustomerCreated...');\n                // Call the parent callback to create the customer\n                // The parent will handle the API call and show toasts\n                await onCustomerCreated(customerData);\n                \n                console.log('🔍 CustomerCreationDialog: Customer created successfully, closing dialog...');\n                // If we reach here, the customer was created successfully\n                // Close dialog on success\n                onOpenChange(false);\n                \n              } catch (error) {\n                console.error('❌ CustomerCreationDialog: Error occurred:', error);\n                // Don't close the dialog on error - let the user fix the issue\n                // The error will be displayed in the AddCustomerForm\n                setIsCreatingCustomer(false);\n                // Re-throw the error so the AddCustomerForm can handle it\n                throw error;\n              } finally {\n                console.log('🔍 CustomerCreationDialog: Finally block executed');\n                setIsCreatingCustomer(false);\n              }\n            }}\n            onCancel={() => {\n              onOpenChange(false);\n            }}\n            isSubmitting={isCreatingCustomer}\n          />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Save, X } from \"lucide-react\";\nimport { Button } from \"../../../ui/button\";\nimport { Input } from \"../../../ui/input\";\nimport { Label } from \"../../../ui/label\";\nimport { Card, CardContent } from \"../../../ui/card\";\nimport type { CustomerCreateInput } from \"@rentalshop/types\";\nimport {\n  useCustomerTranslations,\n  useCommonTranslations,\n} from \"@rentalshop/hooks\";\n\ninterface AddCustomerFormProps {\n  onSave: (customerData: CustomerCreateInput) => Promise<void>;\n  onCancel?: () => void;\n  isSubmitting?: boolean;\n}\n\nexport const AddCustomerForm: React.FC<AddCustomerFormProps> = ({\n  onSave,\n  onCancel,\n  isSubmitting: externalIsSubmitting,\n}) => {\n  const t = useCustomerTranslations();\n  const tc = useCommonTranslations();\n\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    companyName: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    country: \"\", // Hidden in UI but sent to API\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [internalIsSubmitting, setInternalIsSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  // Use external isSubmitting if provided, otherwise use internal state\n  const isSubmitting =\n    externalIsSubmitting !== undefined\n      ? externalIsSubmitting\n      : internalIsSubmitting;\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }));\n\n    // Clear field-specific error when user starts typing\n    if (errors[field]) {\n      setErrors((prev) => ({ ...prev, [field]: \"\" }));\n    }\n\n    // Clear general error message when user starts typing\n    if (errorMessage) {\n      setErrorMessage(null);\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    // First name validation - required\n    if (!formData.firstName.trim()) {\n      newErrors.firstName = t(\"validation.firstNameRequired\");\n    } else if (formData.firstName.trim().length < 2) {\n      newErrors.firstName = t(\"validation.firstNameMinLength\");\n    }\n\n    // Last name validation - required\n    if (!formData.lastName.trim()) {\n      newErrors.lastName = t(\"validation.lastNameRequired\");\n    } else if (formData.lastName.trim().length < 2) {\n      newErrors.lastName = t(\"validation.lastNameMinLength\");\n    }\n\n    // Email validation - optional but validate format if provided\n    if (formData.email && formData.email.trim()) {\n      if (!/\\S+@\\S+\\.\\S+/.test(formData.email.trim())) {\n        newErrors.email = t(\"validation.emailInvalid\");\n      }\n    }\n\n    // Phone validation - required and validate format\n    if (!formData.phone.trim()) {\n      newErrors.phone = t(\"validation.phoneRequired\");\n    } else if (!/^[0-9+\\-\\s()]+$/.test(formData.phone.trim())) {\n      newErrors.phone = t(\"validation.phoneInvalid\");\n    } else if (formData.phone.trim().length < 8) {\n      newErrors.phone = t(\"validation.phoneMinLength\");\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      setInternalIsSubmitting(true);\n      setErrorMessage(null);\n\n      await onSave(formData);\n    } catch (error) {\n      let errorMsg = \"An unexpected error occurred\";\n\n      if (error instanceof Error) {\n        if (error.message.includes(\"DUPLICATE_PHONE\")) {\n          errorMsg = \"A customer with this phone number already exists\";\n        } else if (error.message.includes(\"DUPLICATE_EMAIL\")) {\n          errorMsg = \"A customer with this email address already exists\";\n        } else {\n          errorMsg = error.message;\n        }\n      }\n\n      setErrorMessage(errorMsg);\n    } finally {\n      setInternalIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card>\n        <CardContent className=\"p-6 space-y-4\">\n          {/* Error Message */}\n          {errorMessage && (\n            <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-sm text-red-800\">{errorMessage}</p>\n            </div>\n          )}\n\n          {/* First Name & Last Name */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"firstName\">{t(\"fields.firstName\")} *</Label>\n              <Input\n                id=\"firstName\"\n                type=\"text\"\n                value={formData.firstName}\n                onChange={(e) => handleInputChange(\"firstName\", e.target.value)}\n                placeholder={t(\"placeholders.enterFirstName\")}\n                className={errors.firstName ? \"border-red-500\" : \"\"}\n              />\n              {errors.firstName && (\n                <p className=\"text-sm text-red-600\">{errors.firstName}</p>\n              )}\n            </div>\n\n            <div>\n              <Label htmlFor=\"lastName\">{t(\"fields.lastName\")} *</Label>\n              <Input\n                id=\"lastName\"\n                type=\"text\"\n                value={formData.lastName}\n                onChange={(e) => handleInputChange(\"lastName\", e.target.value)}\n                placeholder={t(\"placeholders.enterLastName\")}\n                className={errors.lastName ? \"border-red-500\" : \"\"}\n              />\n              {errors.lastName && (\n                <p className=\"text-sm text-red-600\">{errors.lastName}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Email & Phone */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"email\">{t(\"fields.email\")}</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                placeholder={t(\"placeholders.enterEmail\")}\n                className={errors.email ? \"border-red-500\" : \"\"}\n              />\n              {errors.email && (\n                <p className=\"text-sm text-red-600\">{errors.email}</p>\n              )}\n            </div>\n\n            <div>\n              <Label htmlFor=\"phone\">{t(\"fields.phone\")} *</Label>\n              <Input\n                id=\"phone\"\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                placeholder={t(\"placeholders.enterPhone\")}\n                className={errors.phone ? \"border-red-500\" : \"\"}\n                required\n              />\n              {errors.phone && (\n                <p className=\"text-sm text-red-600\">{errors.phone}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Company Name */}\n          <div>\n            <Label htmlFor=\"companyName\">{t(\"fields.companyName\")}</Label>\n            <Input\n              id=\"companyName\"\n              type=\"text\"\n              value={formData.companyName}\n              onChange={(e) => handleInputChange(\"companyName\", e.target.value)}\n              placeholder={t(\"placeholders.enterCompanyName\")}\n            />\n          </div>\n\n          {/* Address */}\n          <div>\n            <Label htmlFor=\"address\">{t(\"fields.address\")}</Label>\n            <Input\n              id=\"address\"\n              type=\"text\"\n              value={formData.address}\n              onChange={(e) => handleInputChange(\"address\", e.target.value)}\n              placeholder={t(\"placeholders.enterStreetAddress\")}\n            />\n          </div>\n\n          {/* City, State, ZIP Code */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <Label htmlFor=\"city\">{t(\"fields.city\")}</Label>\n              <Input\n                id=\"city\"\n                type=\"text\"\n                value={formData.city}\n                onChange={(e) => handleInputChange(\"city\", e.target.value)}\n                placeholder={t(\"placeholders.enterCity\")}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"state\">{t(\"fields.state\")}</Label>\n              <Input\n                id=\"state\"\n                type=\"text\"\n                value={formData.state}\n                onChange={(e) => handleInputChange(\"state\", e.target.value)}\n                placeholder={t(\"placeholders.enterState\")}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"zipCode\">{t(\"fields.zipCode\")}</Label>\n              <Input\n                id=\"zipCode\"\n                type=\"text\"\n                value={formData.zipCode}\n                onChange={(e) => handleInputChange(\"zipCode\", e.target.value)}\n                placeholder={t(\"placeholders.enterZipCode\")}\n              />\n            </div>\n          </div>\n\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 border-t pt-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleCancel}\n              disabled={isSubmitting}\n            >\n              <X className=\"w-4 h-4 mr-2\" />\n              {tc(\"buttons.cancel\")}\n            </Button>\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              <Save className=\"w-4 h-4 mr-2\" />\n              {isSubmitting ? tc(\"buttons.creating\") : t(\"createCustomer\")}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </form>\n  );\n};\n","/**\n * OrderPreviewDialog - Dialog component for previewing orders before confirmation\n */\n\nimport React from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle \n} from '@rentalshop/ui';\nimport { OrderPreviewForm } from './OrderPreviewForm';\nimport { ShoppingCart } from 'lucide-react';\nimport type { \n  OrderFormData, \n  OrderItemFormData,\n  ProductWithStock \n} from '../types';\n\ninterface OrderPreviewDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  orderData: {\n    orderType: OrderFormData['orderType'];\n    customerId: number;\n    customerName?: string;\n    customerPhone?: string;\n    customerEmail?: string;\n    outletId: number;\n    outletName?: string;\n    pickupPlanAt?: string;\n    returnPlanAt?: string;\n    subtotal: number;\n    taxAmount: number;\n    discountAmount: number;\n    totalAmount: number;\n    depositAmount: number;\n    securityDeposit: number;\n    lateFee: number;\n    damageFee: number;\n    notes: string;\n    orderItems: Array<{\n      productId: number;\n      quantity: number;\n      unitPrice: number;\n      totalPrice: number;\n      deposit: number;\n      notes: string;\n    }>;\n  };\n  products: ProductWithStock[];\n  onConfirm: () => void;\n  onEdit: () => void;\n  loading: boolean;\n  confirmText: string;\n  editText: string;\n  title: string;\n  subtitle: string;\n}\n\nexport const OrderPreviewDialog: React.FC<OrderPreviewDialogProps> = ({\n  open,\n  onOpenChange,\n  orderData,\n  products,\n  onConfirm,\n  onEdit,\n  loading,\n  confirmText,\n  editText,\n  title,\n  subtitle\n}) => {\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"text-2xl font-bold flex items-center gap-2\">\n            <ShoppingCart className=\"w-6 h-6 text-blue-700\" />\n            {title}\n          </DialogTitle>\n        </DialogHeader>\n        \n        <OrderPreviewForm\n          orderData={orderData}\n          products={products}\n          onConfirm={onConfirm}\n          onEdit={onEdit}\n          loading={loading}\n          confirmText={confirmText}\n          editText={editText}\n          title={title}\n          subtitle={subtitle}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","/**\n * OrderPreviewForm - A reusable component for previewing order details before confirmation\n * \n * USAGE EXAMPLES:\n * \n * 1. Basic usage:\n * <OrderPreviewForm\n *   orderData={orderData}\n *   products={products}\n *   onConfirm={handleConfirm}\n *   onEdit={handleEdit}\n *   loading={false}\n * />\n * \n * 2. With custom actions:\n * <OrderPreviewForm\n *   orderData={orderData}\n *   products={products}\n *   onConfirm={handleConfirm}\n *   onEdit={handleEdit}\n *   onCancel={handleCancel}\n *   confirmText=\"Create Order\"\n *   editText=\"Go Back\"\n *   showValidation={true}\n * />\n */\n\n'use client'\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Badge,\n  Separator,\n  Table,\n  TableHeader,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  Button,\n  Skeleton\n} from '@rentalshop/ui';\nimport { formatCurrency } from '@rentalshop/utils';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { \n  ShoppingCart, \n  Info, \n  Package, \n  DollarSign, \n  MessageSquare, \n  Calendar, \n  Clock, \n  User, \n  Smartphone, \n  AlertTriangle, \n  CheckCircle, \n  X, \n  Edit,\n  ArrowLeft\n} from 'lucide-react';\n\nexport interface OrderPreviewData {\n  orderType: 'RENT' | 'SALE' | 'RENT_TO_OWN';\n  customerId?: number;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  outletId: number;\n  outletName?: string;\n  pickupPlanAt?: string;\n  returnPlanAt?: string;\n  subtotal: number;\n  taxAmount?: number;\n  discountAmount?: number;\n  totalAmount: number;\n  depositAmount?: number;\n  securityDeposit?: number;\n  damageFee?: number;\n  lateFee?: number;\n  notes?: string;\n  orderItems: Array<{\n    productId: number;\n    product?: {\n      id: number;\n      name: string;\n      description?: string;\n      images?: string[] | null;\n      barcode?: string;\n      rentPrice?: number;\n      deposit?: number;\n    };\n    quantity: number;\n    unitPrice: number;\n    totalPrice: number;\n    deposit?: number;\n    notes?: string;\n  }>;\n}\n\nexport interface ProductInfo {\n  id: number;\n  name: string;\n  barcode?: string;\n  description?: string;\n  image?: string;\n}\n\nexport interface OrderPreviewFormProps {\n  orderData: OrderPreviewData;\n  products: ProductInfo[];\n  onConfirm: () => void;\n  onEdit: () => void;\n  onCancel?: () => void;\n  loading?: boolean;\n  confirmText?: string;\n  editText?: string;\n  cancelText?: string;\n  showValidation?: boolean;\n  title?: string;\n  subtitle?: string;\n  className?: string;\n}\n\nexport const OrderPreviewForm: React.FC<OrderPreviewFormProps> = ({\n  orderData,\n  products,\n  onConfirm,\n  onEdit,\n  onCancel,\n  loading = false,\n  confirmText = 'Confirm Order',\n  editText = 'Edit Order',\n  cancelText = 'Cancel',\n  showValidation = true,\n  title = 'Order Preview',\n  subtitle = 'Review your order details before confirming',\n  className = ''\n}) => {\n  const t = useOrderTranslations();\n  // Calculate rental duration for rental orders\n  const getRentalDuration = () => {\n    if (orderData.orderType === 'RENT' && orderData.pickupPlanAt && orderData.returnPlanAt) {\n      const start = new Date(orderData.pickupPlanAt);\n      const end = new Date(orderData.returnPlanAt);\n      const durationMs = end.getTime() - start.getTime();\n      return Math.ceil(durationMs / (1000 * 60 * 60 * 24));\n    }\n    return 0;\n  };\n\n  // Get validation warnings\n  const getValidationWarnings = () => {\n    if (!showValidation) return [];\n    \n    const warnings = [];\n    \n    if (!orderData.customerId && !orderData.customerName) {\n      warnings.push(t('messages.customerInformationMissing'));\n    }\n    \n    if (orderData.orderItems.length === 0) {\n      warnings.push(t('messages.noOrderItemsAdded'));\n    }\n    \n    if (orderData.orderType === 'RENT' && (!orderData.pickupPlanAt || !orderData.returnPlanAt)) {\n      warnings.push(t('messages.rentalDatesNotSet'));\n    }\n    \n    if (orderData.totalAmount <= 0) {\n      warnings.push(t('messages.orderTotalAmountInvalid'));\n    }\n    \n    return warnings;\n  };\n\n  const warnings = getValidationWarnings();\n  const rentalDuration = getRentalDuration();\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"text-center space-y-2\">\n        <h2 className=\"text-2xl font-bold text-gray-900 flex items-center justify-center gap-2\">\n          <ShoppingCart className=\"w-6 h-6 text-blue-700\" />\n          {title}\n        </h2>\n        {subtitle && (\n          <p className=\"text-gray-600\">{subtitle}</p>\n        )}\n      </div>\n\n      {/* Order Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n            <Info className=\"w-5 h-5 text-blue-700\" />\n            Order Summary\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-2\">\n                <Badge variant={orderData.orderType === 'RENT' ? 'default' : 'secondary'}>\n                  {orderData.orderType}\n                </Badge>\n                <span className=\"text-sm text-gray-600\">Order Type</span>\n              </div>\n              \n              {orderData.outletName && (\n                <div className=\"flex items-center gap-2\">\n                  <Package className=\"w-4 h-4 text-gray-500\" />\n                  <span className=\"text-sm font-medium\">Outlet:</span>\n                  <span className=\"text-sm text-gray-600\">{orderData.outletName}</span>\n                </div>\n              )}\n              \n              {orderData.orderType === 'RENT' && (\n                <>\n                  <div className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4 text-gray-500\" />\n                    <span className=\"text-sm font-medium\">Pickup:</span>\n                    <span className=\"text-sm text-gray-600\">\n                      {orderData.pickupPlanAt ? new Date(orderData.pickupPlanAt).toLocaleDateString() : t('messages.notSet')}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4 text-gray-500\" />\n                    <span className=\"text-sm font-medium\">Return:</span>\n                    <span className=\"text-sm text-gray-600\">\n                      {orderData.returnPlanAt ? new Date(orderData.returnPlanAt).toLocaleDateString() : t('messages.notSet')}\n                    </span>\n                  </div>\n                  {rentalDuration > 0 && (\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"w-4 h-4 text-gray-500\" />\n                      <span className=\"text-sm font-medium\">Duration:</span>\n                      <span className=\"text-sm text-gray-600\">{rentalDuration} days</span>\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-2\">\n                <User className=\"w-4 h-4 text-gray-500\" />\n                <span className=\"text-sm font-medium\">Customer:</span>\n                <span className=\"text-sm text-gray-600\">\n                  {orderData.customerName || t('messages.notSelected')}\n                </span>\n              </div>\n              \n              {orderData.customerPhone && (\n                <div className=\"flex items-center gap-2\">\n                  <Smartphone className=\"w-4 h-4 text-gray-500\" />\n                  <span className=\"text-sm font-medium\">Phone:</span>\n                  <span className=\"text-sm text-gray-600\">{orderData.customerPhone}</span>\n                </div>\n              )}\n              \n              {orderData.customerEmail && (\n                <div className=\"flex items-center gap-2\">\n                  <MessageSquare className=\"w-4 h-4 text-gray-500\" />\n                  <span className=\"text-sm font-medium\">Email:</span>\n                  <span className=\"text-sm text-gray-600\">{orderData.customerEmail}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Order Items */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n            <Package className=\"w-5 h-5 text-green-600\" />\n            Order Items ({orderData.orderItems.length})\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {orderData.orderItems.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Package className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n              <p>No items added to this order</p>\n            </div>\n          ) : (\n            <>\n              {console.log('🔍 OrderPreviewForm received orderItems:', orderData.orderItems)}\n              {console.log('🔍 OrderPreviewForm orderItems length:', orderData.orderItems.length)}\n              <div className=\"border rounded-lg overflow-hidden\">\n                <div className=\"bg-gray-50 px-4 py-2 text-sm text-gray-600\">\n                  Debug: Showing {orderData.orderItems.length} order items\n                </div>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Product</TableHead>\n                      <TableHead>Quantity</TableHead>\n                      <TableHead>Unit Price</TableHead>\n                      <TableHead>{t('messages.totalPrice')}</TableHead>\n                      {orderData.orderType === 'RENT' && <TableHead>Deposit</TableHead>}\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {orderData.orderItems.map((item, index) => {\n                      console.log(`🔍 Rendering order item ${index}:`, item);\n                      // Use the product information that's already stored in the orderItems\n                      // This ensures consistency between the cart and preview\n                      return (\n                        <TableRow key={index} className=\"border-b\">\n                          <TableCell>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center\">\n                                {item.product?.images && item.product.images.length > 0 ? (\n                                  <img \n                                    src={item.product.images[0]} \n                                    alt={item.product.name}\n                                    className=\"w-8 h-8 rounded object-cover\"\n                                  />\n                                ) : (\n                                  <Package className=\"w-5 h-5 text-gray-600\" />\n                                )}\n                              </div>\n                              <div>\n                                <div className=\"font-medium\">\n                                  {item.product?.name || `Product ID: ${item.productId}`}\n                                  <span className=\"text-xs text-blue-500 ml-2\">(Item #{index + 1})</span>\n                                </div>\n                                <div className=\"text-sm text-gray-500\">\n                                  {item.product?.barcode || `Order item #${index + 1}`}\n                                </div>\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant=\"outline\">{item.quantity}</Badge>\n                          </TableCell>\n                          <TableCell className=\"font-mono\">\n                            {formatCurrency(item.unitPrice)}\n                          </TableCell>\n                          <TableCell className=\"font-mono font-medium\">\n                            {formatCurrency(item.totalPrice)}\n                          </TableCell>\n                          {orderData.orderType === 'RENT' && (\n                            <TableCell className=\"font-mono\">\n                              {formatCurrency(item.deposit || 0)}\n                            </TableCell>\n                          )}\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Financial Summary */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n            <DollarSign className=\"w-5 h-5 text-green-600\" />\n            Financial Summary\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-600\">Subtotal:</span>\n              <span className=\"font-mono\">{formatCurrency(orderData.subtotal)}</span>\n            </div>\n            \n            {orderData.taxAmount && orderData.taxAmount > 0 && (\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-600\">Tax:</span>\n                <span className=\"font-mono\">{formatCurrency(orderData.taxAmount)}</span>\n              </div>\n            )}\n            \n            {orderData.discountAmount && orderData.discountAmount > 0 && (\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-gray-600\">Discount:</span>\n                <span className=\"font-mono text-green-600\">-{formatCurrency(orderData.discountAmount)}</span>\n              </div>\n            )}\n            \n            <Separator />\n            \n            <div className=\"flex justify-between items-center text-lg font-bold\">\n              <span>Total Amount:</span>\n              <span className=\"font-mono text-blue-700\">{formatCurrency(orderData.totalAmount)}</span>\n            </div>\n            \n            {orderData.depositAmount && orderData.depositAmount > 0 && (\n              <>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">Deposit Required:</span>\n                  <span className=\"font-mono text-orange-600\">{formatCurrency(orderData.depositAmount)}</span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">Remaining Balance:</span>\n                  <span className=\"font-mono font-medium\">\n                    {formatCurrency(orderData.totalAmount - orderData.depositAmount)}\n                  </span>\n                </div>\n              </>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Additional Information */}\n      {(orderData.notes || orderData.orderType === 'RENT') && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg font-semibold flex items-center gap-2\">\n              <MessageSquare className=\"w-5 h-5 text-purple-600\" />\n              {t('messages.additionalInformation')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {orderData.notes && (\n                <div>\n                  <span className=\"text-sm font-medium text-gray-700\">Notes:</span>\n                  <p className=\"text-sm text-gray-600 mt-1\">{orderData.notes}</p>\n                </div>\n              )}\n              \n              {orderData.orderType === 'RENT' && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {orderData.securityDeposit && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-700\">Security Deposit:</span>\n                      <p className=\"text-sm text-gray-600 mt-1\">\n                        {formatCurrency(orderData.securityDeposit)}\n                      </p>\n                    </div>\n                  )}\n                  {orderData.damageFee && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-700\">Damage Fee:</span>\n                      <p className=\"text-sm text-gray-600 mt-1\">\n                        {formatCurrency(orderData.damageFee)}\n                      </p>\n                    </div>\n                  )}\n                  {orderData.lateFee && (\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-700\">Late Fee:</span>\n                      <p className=\"text-sm text-gray-600 mt-1\">\n                        {formatCurrency(orderData.lateFee)}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Validation Warnings */}\n      {warnings.length > 0 && (\n        <Card className=\"border-orange-200 bg-orange-50\">\n          <CardHeader>\n            <CardTitle className=\"text-lg font-semibold flex items-center gap-2 text-orange-700\">\n              <AlertTriangle className=\"w-5 h-5\" />\n              Validation Warnings\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ul className=\"list-disc list-inside space-y-1 text-sm text-orange-700\">\n              {warnings.map((warning, index) => (\n                <li key={index}>{warning}</li>\n              ))}\n            </ul>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end gap-3 pt-6 border-t\">\n        {onCancel && (\n          <Button\n            variant=\"outline\"\n            onClick={onCancel}\n            className=\"flex items-center gap-2\"\n          >\n            <X className=\"w-4 h-4\" />\n            {cancelText}\n          </Button>\n        )}\n        \n        <Button\n          variant=\"outline\"\n          onClick={onEdit}\n          className=\"flex items-center gap-2\"\n        >\n          <ArrowLeft className=\"w-4 h-4\" />\n          {editText}\n        </Button>\n        \n        <Button\n          onClick={onConfirm}\n          disabled={loading || warnings.length > 0}\n          className=\"flex items-center gap-2 bg-blue-700 hover:bg-blue-700\"\n        >\n          {loading ? (\n            <>\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n              Processing...\n            </>\n          ) : (\n            <>\n              <CheckCircle className=\"w-4 h-4\" />\n              {confirmText}\n            </>\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderPreviewForm;\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent, \n  Button, \n  Input, \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue, \n  Textarea, \n  Badge,\n  Switch,\n  Label,\n  LimitInput\n} from '../ui';\nimport { \n  Package, \n  DollarSign, \n  Users, \n  CreditCard,\n  Plus,\n  Trash2,\n  CheckCircle,\n  XCircle,\n  Star,\n  Settings\n} from 'lucide-react';\nimport type { \n  PlanCreateInput, \n  PlanUpdateInput,\n  Plan,\n  BillingCycle\n} from '@rentalshop/types';\nimport { BILLING_CYCLES } from '@rentalshop/constants';\nimport { \n  calculateDiscountedPrice,\n  getBillingCycleDiscount,\n  formatBillingCycle\n} from '@rentalshop/utils';\n\ninterface PlanFormData {\n  name: string;\n  description: string;\n  basePrice: number;  // ✅ Updated: Use basePrice instead of price\n  currency: string;\n  billingCycle: BillingCycle;\n  billingCycleMonths: number;\n  trialDays: number;\n  maxOutlets: number;\n  maxUsers: number;\n  maxProducts: number;\n  maxCustomers: number;\n  features: string[];\n  isActive: boolean;\n  isPopular: boolean;\n  mobileOnly: boolean;  // ✅ NEW: Mobile-only plan flag\n  sortOrder: number;\n}\n\ninterface PlanFormProps {\n  initialData?: Partial<PlanFormData>;\n  onSubmit: (data: PlanCreateInput | PlanUpdateInput) => void;\n  onCancel?: () => void;\n  loading?: boolean;\n  title?: string;\n  submitText?: string | React.ReactNode;\n  mode?: 'create' | 'edit';\n  hideHeader?: boolean;\n  hideSubmitButton?: boolean;\n  formId?: string;\n}\n\nexport const PlanForm: React.FC<PlanFormProps> = ({\n  initialData = {},\n  onSubmit,\n  onCancel,\n  loading = false,\n  title = 'Plan Information',\n  submitText = 'Save Plan',\n  mode = 'create',\n  hideHeader = false,\n  hideSubmitButton = false,\n  formId\n}) => {\n  const [formData, setFormData] = useState<PlanFormData>({\n    name: '',\n    description: '',\n    basePrice: 0,  // ✅ Updated: Use basePrice instead of price\n    currency: 'USD',\n    billingCycle: 'monthly',\n    billingCycleMonths: 1,\n    trialDays: 0,\n    maxOutlets: 1,\n    maxUsers: 1,\n    maxProducts: 10,\n    maxCustomers: 50,\n    features: [],\n    isActive: true,\n    isPopular: false,\n    mobileOnly: false,  // ✅ NEW: Default to false\n    sortOrder: 0,\n    ...initialData\n  });\n\n  const [errors, setErrors] = useState<Partial<Record<keyof PlanFormData, string>>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [newFeature, setNewFeature] = useState('');\n\n  const handleInputChange = (field: keyof PlanFormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const handleBillingCycleChange = (cycle: BillingCycle) => {\n    const cycleOption = BILLING_CYCLES.find(option => option.value === cycle);\n    setFormData(prev => ({ \n      ...prev, \n      billingCycle: cycle,\n      billingCycleMonths: cycleOption?.months || 1\n    }));\n    if (errors.billingCycle) {\n      setErrors(prev => ({ ...prev, billingCycle: '' }));\n    }\n  };\n\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<Record<keyof PlanFormData, string>> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Plan name is required';\n    }\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Plan description is required';\n    }\n\n    if (formData.basePrice < 0) {\n      newErrors.basePrice = 'Price must be non-negative';\n    }\n\n    if (formData.trialDays < 0) {\n      newErrors.trialDays = 'Trial days must be non-negative';\n    }\n\n    if (formData.maxOutlets < -1) {\n      newErrors.maxOutlets = 'Max outlets must be -1 (unlimited) or positive';\n    }\n\n    if (formData.maxUsers < -1) {\n      newErrors.maxUsers = 'Max users must be -1 (unlimited) or positive';\n    }\n\n    if (formData.maxProducts < -1) {\n      newErrors.maxProducts = 'Max products must be -1 (unlimited) or positive';\n    }\n\n    if (formData.maxCustomers < -1) {\n      newErrors.maxCustomers = 'Max customers must be -1 (unlimited) or positive';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      await onSubmit(formData);\n    } catch (error) {\n      console.error('Error submitting plan:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const addFeature = () => {\n    if (newFeature.trim() && !formData.features.includes(newFeature.trim())) {\n      handleInputChange('features', [...formData.features, newFeature.trim()]);\n      setNewFeature('');\n    }\n  };\n\n  const removeFeature = (index: number) => {\n    handleInputChange('features', formData.features.filter((_, i) => i !== index));\n  };\n\n  const getLimitText = (limit: number) => {\n    return limit === -1 ? 'Unlimited' : limit.toString();\n  };\n\n  const formatCurrency = (price: number, currency: string) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency || 'USD'\n    }).format(price);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {!hideHeader && (\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-text-primary\">{title}</h2>\n            <p className=\"text-text-secondary mt-1\">\n              {mode === 'create' ? 'Create a new subscription plan' : 'Update plan information'}\n            </p>\n          </div>\n          {mode === 'edit' && (\n            <Badge variant={formData.isActive ? 'default' : 'secondary'}>\n              {formData.isActive ? 'Active' : 'Inactive'}\n            </Badge>\n          )}\n        </div>\n      )}\n\n      <form id={formId} onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Basic Information */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Package className=\"w-5 h-5\" />\n              Basic Information\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Plan Name *</Label>\n                <Input\n                  id=\"name\"\n                  value={formData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  placeholder=\"Enter plan name\"\n                  className={errors.name ? 'border-red-500' : ''}\n                />\n                {errors.name && <p className=\"text-sm text-red-500\">{errors.name}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"sortOrder\">Sort Order</Label>\n                <Input\n                  id=\"sortOrder\"\n                  type=\"number\"\n                  value={formData.sortOrder}\n                  onChange={(e) => handleInputChange('sortOrder', parseInt(e.target.value) || 0)}\n                  placeholder=\"0\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"description\">Description *</Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                placeholder=\"Describe what this plan offers\"\n                rows={3}\n                className={errors.description ? 'border-red-500' : ''}\n              />\n              {errors.description && <p className=\"text-sm text-red-500\">{errors.description}</p>}\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"isActive\"\n                  checked={formData.isActive}\n                  onCheckedChange={(checked) => handleInputChange('isActive', checked)}\n                />\n                <Label htmlFor=\"isActive\">Active Plan</Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"isPopular\"\n                  checked={formData.isPopular}\n                  onCheckedChange={(checked) => handleInputChange('isPopular', checked)}\n                />\n                <Label htmlFor=\"isPopular\" className=\"flex items-center gap-1\">\n                  <Star className=\"w-4 h-4\" />\n                  Popular Plan\n                </Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"mobileOnly\"\n                  checked={formData.mobileOnly}\n                  onCheckedChange={(checked) => handleInputChange('mobileOnly', checked)}\n                />\n                <Label htmlFor=\"mobileOnly\" className=\"flex items-center gap-1\">\n                  <Settings className=\"w-4 h-4\" />\n                  Mobile Only\n                </Label>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Pricing Information */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <DollarSign className=\"w-5 h-5\" />\n              Pricing Information\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"basePrice\">Base Price *</Label>\n                <Input\n                  id=\"basePrice\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.basePrice}\n                  onChange={(e) => handleInputChange('basePrice', parseFloat(e.target.value) || 0)}\n                  placeholder=\"0.00\"\n                  min=\"0\"\n                  className={errors.basePrice ? 'border-red-500' : ''}\n                />\n                {errors.basePrice && <p className=\"text-sm text-red-500\">{errors.basePrice}</p>}\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"currency\">Currency</Label>\n                <Select value={formData.currency} onValueChange={(value) => handleInputChange('currency', value)}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"USD\">USD ($)</SelectItem>\n                    <SelectItem value=\"VND\">VND (₫)</SelectItem>\n                    <SelectItem value=\"EUR\">EUR (€)</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"billingCycle\">Billing Cycle</Label>\n                <Select value={formData.billingCycle} onValueChange={handleBillingCycleChange}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {BILLING_CYCLES.map((cycle) => (\n                      <SelectItem key={cycle.value} value={cycle.value}>\n                        <div className=\"flex flex-col\">\n                          <span className=\"font-medium\">{cycle.label}</span>\n                          <span className=\"text-xs text-text-tertiary\">{cycle.description}</span>\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"trialDays\">Trial Days</Label>\n              <Input\n                id=\"trialDays\"\n                type=\"number\"\n                value={formData.trialDays}\n                onChange={(e) => handleInputChange('trialDays', parseInt(e.target.value) || 0)}\n                placeholder=\"0\"\n                min=\"0\"\n                className={errors.trialDays ? 'border-red-500' : ''}\n              />\n              {errors.trialDays && <p className=\"text-sm text-red-500\">{errors.trialDays}</p>}\n            </div>\n\n            {/* Price Preview */}\n            <div className=\"bg-bg-secondary p-4 rounded-lg\">\n              <div className=\"text-sm text-text-secondary mb-2\">Price Preview:</div>\n              <div className=\"text-2xl font-bold text-text-primary\">\n                {formatCurrency(formData.basePrice, formData.currency)}\n                <span className=\"text-lg text-text-secondary font-normal ml-2\">\n                  /{formatBillingCycle(formData.billingCycle).toLowerCase()}\n                </span>\n              </div>\n              \n              {/* Show discount if applicable */}\n              {getBillingCycleDiscount(formData.billingCycle) > 0 && (\n                <div className=\"text-sm text-action-success mt-1\">\n                  {getBillingCycleDiscount(formData.billingCycle)}% discount applied\n                </div>\n              )}\n              \n              {/* Show total price for longer cycles */}\n              {formData.billingCycleMonths > 1 && (\n                <div className=\"text-sm text-text-secondary mt-1\">\n                  Total: {formatCurrency(calculateDiscountedPrice(formData.basePrice, formData.billingCycle), formData.currency)} for {formData.billingCycleMonths} months\n                </div>\n              )}\n              \n              {formData.trialDays > 0 && (\n                <div className=\"text-sm text-action-primary mt-1\">\n                  {formData.trialDays}-day free trial\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Usage Limits */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Settings className=\"w-5 h-5\" />\n              Usage Limits\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <LimitInput\n                id=\"maxOutlets\"\n                label=\"Max Outlets\"\n                value={formData.maxOutlets}\n                onChange={(value) => handleInputChange('maxOutlets', value)}\n                placeholder=\"-1 (unlimited)\"\n                helpText=\"Use -1 for unlimited\"\n                error={!!errors.maxOutlets}\n              />\n              {errors.maxOutlets && <p className=\"text-sm text-red-500\">{errors.maxOutlets}</p>}\n\n              <LimitInput\n                id=\"maxUsers\"\n                label=\"Max Users\"\n                value={formData.maxUsers}\n                onChange={(value) => handleInputChange('maxUsers', value)}\n                placeholder=\"-1 (unlimited)\"\n                helpText=\"Use -1 for unlimited\"\n                error={!!errors.maxUsers}\n              />\n              {errors.maxUsers && <p className=\"text-sm text-red-500\">{errors.maxUsers}</p>}\n\n              <LimitInput\n                id=\"maxProducts\"\n                label=\"Max Products\"\n                value={formData.maxProducts}\n                onChange={(value) => handleInputChange('maxProducts', value)}\n                placeholder=\"-1 (unlimited)\"\n                helpText=\"Use -1 for unlimited\"\n                error={!!errors.maxProducts}\n              />\n              {errors.maxProducts && <p className=\"text-sm text-red-500\">{errors.maxProducts}</p>}\n\n              <LimitInput\n                id=\"maxCustomers\"\n                label=\"Max Customers\"\n                value={formData.maxCustomers}\n                onChange={(value) => handleInputChange('maxCustomers', value)}\n                placeholder=\"-1 (unlimited)\"\n                helpText=\"Use -1 for unlimited\"\n                error={!!errors.maxCustomers}\n              />\n              {errors.maxCustomers && <p className=\"text-sm text-red-500\">{errors.maxCustomers}</p>}\n            </div>\n\n            {/* Limits Preview */}\n            <div className=\"bg-bg-secondary p-4 rounded-lg\">\n              <div className=\"text-sm text-text-secondary mb-2\">Limits Preview:</div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <Package className=\"w-4 h-4 text-text-tertiary\" />\n                    <span className=\"text-text-secondary\">Outlets:</span>\n                  </div>\n                  <div className=\"font-medium text-text-primary\">{getLimitText(formData.maxOutlets)}</div>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"w-4 h-4 text-text-tertiary\" />\n                    <span className=\"text-text-secondary\">Users:</span>\n                  </div>\n                  <div className=\"font-medium text-text-primary\">{getLimitText(formData.maxUsers)}</div>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <CreditCard className=\"w-4 h-4 text-text-tertiary\" />\n                    <span className=\"text-text-secondary\">Products:</span>\n                  </div>\n                  <div className=\"font-medium text-text-primary\">{getLimitText(formData.maxProducts)}</div>\n                </div>\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"w-4 h-4 text-text-tertiary\" />\n                    <span className=\"text-text-secondary\">Customers:</span>\n                  </div>\n                  <div className=\"font-medium text-text-primary\">{getLimitText(formData.maxCustomers)}</div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Features */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <CheckCircle className=\"w-5 h-5\" />\n              Features\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex gap-2\">\n              <Input\n                value={newFeature}\n                onChange={(e) => setNewFeature(e.target.value)}\n                placeholder=\"Add a feature...\"\n                onKeyPress={(e) => e.key === 'Enter' && (e.preventDefault(), addFeature())}\n              />\n              <Button type=\"button\" onClick={addFeature} disabled={!newFeature.trim()}>\n                <Plus className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            {formData.features.length > 0 && (\n              <div className=\"space-y-2\">\n                <div className=\"text-sm font-medium text-text-primary\">Plan Features:</div>\n                <div className=\"space-y-2\">\n                  {formData.features.map((feature, index) => (\n                    <div key={index} className=\"flex items-center justify-between bg-bg-secondary p-3 rounded-lg\">\n                      <div className=\"flex items-center gap-2\">\n                        <CheckCircle className=\"w-4 h-4 text-action-success\" />\n                        <span className=\"text-sm text-text-primary\">{feature}</span>\n                      </div>\n                      <Button\n                        type=\"button\"\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => removeFeature(index)}\n                        className=\"h-8 w-8 p-0\"\n                      >\n                        <Trash2 className=\"w-4 h-4 text-text-tertiary\" />\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Action Buttons */}\n        {!hideSubmitButton && (\n          <div className=\"flex items-center justify-end space-x-4\">\n            {onCancel && (\n              <Button type=\"button\" variant=\"outline\" onClick={onCancel} disabled={isSubmitting}>\n                Cancel\n              </Button>\n            )}\n            <Button type=\"submit\" disabled={isSubmitting || loading}>\n              {isSubmitting ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Saving...\n                </>\n              ) : (\n                submitText\n              )}\n            </Button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n","'use client'\n\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Eye, EyeOff, Mail, Lock } from \"lucide-react\";\nimport { Button, Card, CardHeader, CardTitle, CardDescription, CardContent, Input } from \"@rentalshop/ui\";\nimport { useAuthTranslations } from \"@rentalshop/hooks\";\nimport { LanguageSwitcher } from \"../layout/LanguageSwitcher\";\n\n// Types for the login form\ninterface LoginFormData {\n  email: string;\n  password: string;\n}\n\ninterface LoginFormProps {\n  onLogin?: (data: LoginFormData) => Promise<void>;\n  onNavigate?: (path: string) => void;\n  error?: string | null;\n  loading?: boolean;\n  isAdmin?: boolean;\n  onInputChange?: () => void;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({\n  onLogin,\n  onNavigate,\n  error,\n  loading = false,\n  isAdmin = false,\n  onInputChange,\n}) => {\n  const [viewPass, setViewPass] = useState(false);\n  const t = useAuthTranslations();\n\n  // Validation schema\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(t('login.invalidEmail'))\n      .required(t('login.invalidEmail')),\n    password: Yup.string()\n      .min(6, t('login.invalidPassword'))\n      .required(t('login.invalidPassword')),\n  });\n\n  const validation = useFormik<LoginFormData>({\n    enableReinitialize: true,\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values: LoginFormData) => {\n      try {\n        if (onLogin) {\n          await onLogin(values);\n        } else {\n          // Fallback: log the data\n          console.log(\"Login data:\", values);\n        }\n      } catch (error) {\n        console.error(\"Login failed:\", error);\n      }\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    validation.handleSubmit();\n  };\n\n  const togglePasswordVisibility = () => {\n    setViewPass(!viewPass);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4 relative overflow-hidden\">\n      <style jsx>{`\n        @keyframes float {\n          0%, 100% { transform: translateY(0px) translateX(0px); }\n          25% { transform: translateY(-20px) translateX(10px); }\n          50% { transform: translateY(-10px) translateX(-10px); }\n          75% { transform: translateY(-15px) translateX(5px); }\n        }\n        \n        @keyframes float-slow {\n          0%, 100% { transform: translateY(0px) translateX(0px) scale(1); }\n          50% { transform: translateY(-30px) translateX(-20px) scale(1.1); }\n        }\n        \n        @keyframes rotate-move {\n          0% { transform: rotate(0deg) translate(-50%, -50%); }\n          25% { transform: rotate(90deg) translate(-30%, -70%); }\n          50% { transform: rotate(180deg) translate(-50%, -50%); }\n          75% { transform: rotate(270deg) translate(-70%, -30%); }\n          100% { transform: rotate(360deg) translate(-50%, -50%); }\n        }\n        \n        @keyframes pulse-glow {\n          0%, 100% { opacity: 0.3; }\n          50% { opacity: 0.5; }\n        }\n        \n        .float-1 { animation: float 8s ease-in-out infinite; }\n        .float-2 { animation: float 10s ease-in-out infinite 1s; }\n        .float-3 { animation: float 12s ease-in-out infinite 2s; }\n        .float-4 { animation: float-slow 15s ease-in-out infinite 0.5s; }\n        .pulse-glow { animation: pulse-glow 3s ease-in-out infinite; }\n      `}</style>\n      \n      {/* Background Pattern - Grid */}\n      <div className=\"absolute inset-0 pointer-events-none\" style={{\n        backgroundImage: `radial-gradient(circle, #c7d2fe 1.5px, transparent 1.5px)`,\n        backgroundSize: '50px 50px',\n        opacity: 0.4\n      }}></div>\n      \n      {/* Floating Elements - Giữ như cũ */}\n      <div className=\"absolute top-20 left-10 w-32 h-32 bg-blue-400 rounded-full opacity-30 blur-2xl pointer-events-none float-1 pulse-glow\"></div>\n      <div className=\"absolute top-40 right-20 w-24 h-24 bg-indigo-400 rounded-full opacity-40 blur-2xl pointer-events-none float-2 pulse-glow\"></div>\n      <div className=\"absolute bottom-32 left-20 w-20 h-20 bg-purple-400 rounded-full opacity-35 blur-2xl pointer-events-none float-3 pulse-glow\"></div>\n      <div className=\"absolute bottom-20 right-32 w-36 h-36 bg-blue-500 rounded-full opacity-30 blur-2xl pointer-events-none float-4 pulse-glow\"></div>\n      \n      {/* Decorative Shapes - Di chuyển xa hơn */}\n      <div className=\"absolute top-0 right-0 w-[500px] h-[500px] bg-gradient-to-br from-blue-200 to-transparent rounded-full opacity-40 blur-3xl pointer-events-none\" style={{\n        animation: 'rotate-move 30s ease-in-out infinite',\n        transformOrigin: 'center'\n      }}></div>\n      <div className=\"absolute bottom-0 left-0 w-[400px] h-[400px] bg-gradient-to-tr from-indigo-200 to-transparent rounded-full opacity-35 blur-3xl pointer-events-none\" style={{\n        animation: 'rotate-move 25s ease-in-out infinite reverse',\n        transformOrigin: 'center'\n      }}></div>\n      \n      {/* Language Switcher - Top Right */}\n      <div className=\"absolute top-4 right-4 z-10\">\n        <LanguageSwitcher variant=\"compact\" />\n      </div>\n\n      <div className=\"w-full max-w-md relative z-10\">\n        {/* Logo & Welcome */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-block\">\n            <div className=\"h-16 w-16 mx-auto bg-blue-700 rounded-xl flex items-center justify-center shadow-lg\">\n              <span className=\"text-white font-bold text-2xl\">R</span>\n            </div>\n          </div>\n          <h1 className=\"mt-6 text-3xl font-bold text-gray-900\">\n            {isAdmin ? \"Admin Portal\" : t('login.title')}\n          </h1>\n          <p className=\"mt-3 text-base text-gray-600 max-w-sm mx-auto\">\n            {isAdmin ? \"Access your admin dashboard\" : t('login.subtitle')}\n          </p>\n        </div>\n\n        {/* Login Card */}\n        <Card className=\"shadow-2xl border-0 bg-white/80 backdrop-blur-sm relative z-10\">\n          <CardContent className=\"p-8\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {error && (\n                <div className=\"mb-4 p-3 text-sm text-red-700 bg-red-50 border border-red-200 rounded-lg flex items-center\">\n                  <div className=\"w-4 h-4 mr-2\">⚠️</div>\n                  {error}\n                </div>\n              )}\n\n              <div className=\"space-y-4\">\n                {/* Email Field */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    {t('login.email')}\n                  </label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      type=\"email\"\n                      placeholder={t('login.email')}\n                      className=\"pl-10\"\n                      onChange={(e) => {\n                        validation.handleChange(e);\n                        onInputChange?.();\n                      }}\n                      onBlur={validation.handleBlur}\n                      value={validation.values.email || \"\"}\n                      name=\"email\"\n                    />\n                  </div>\n                  {validation.touched.email && validation.errors.email && (\n                    <p className=\"mt-2 text-sm text-red-600\">\n                      {validation.errors.email}\n                    </p>\n                  )}\n                </div>\n\n                {/* Password Field */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    {t('login.password')}\n                  </label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      type={viewPass ? \"text\" : \"password\"}\n                      placeholder={t('login.password')}\n                      className=\"pl-10 pr-10\"\n                      onChange={(e) => {\n                        validation.handleChange(e);\n                        onInputChange?.();\n                      }}\n                      onBlur={validation.handleBlur}\n                      value={validation.values.password || \"\"}\n                      name=\"password\"\n                    />\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      type=\"button\"\n                      onClick={togglePasswordVisibility}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 h-auto w-auto p-0\"\n                    >\n                      {viewPass ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                    </Button>\n                  </div>\n                  {validation.touched.password && validation.errors.password && (\n                    <p className=\"mt-2 text-sm text-red-600\">\n                      {validation.errors.password}\n                    </p>\n                  )}\n                </div>\n\n                {/* Remember Me */}\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"remember\"\n                      className=\"h-4 w-4 text-blue-700 focus:ring-blue-500 border-gray-300 rounded\"\n                    />\n                    <label htmlFor=\"remember\" className=\"ml-3 text-sm font-medium text-gray-700\">\n                      {t('login.rememberMe')}\n                    </label>\n                  </div>\n                  <Button\n                    variant=\"link\"\n                    onClick={() => onNavigate?.(\"/forget-password\")}\n                    className=\"text-sm text-blue-700 hover:text-blue-800 p-0 h-auto font-medium\"\n                  >\n                    {t('login.forgotPassword')}\n                  </Button>\n                </div>\n\n                {/* Submit Button */}\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-blue-700 hover:bg-blue-800 text-white font-medium py-2 px-4 rounded-lg transition duration-200\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <div className=\"flex items-center justify-center\">\n                      <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                      {t('login.loginButton')}...\n                    </div>\n                  ) : (\n                    t('login.loginButton')\n                  )}\n                </Button>\n              </div>\n            </form>\n          </CardContent>\n        </Card>\n\n        {/* Links */}\n        <div className=\"mt-8 text-center\">\n          {!isAdmin && (\n            <p className=\"text-base text-gray-600\">\n              {t('login.noAccount')}{\" \"}\n              <Button\n                variant=\"link\"\n                onClick={() => onNavigate?.(\"/register\")}\n                className=\"font-semibold text-blue-700 hover:text-blue-800 hover:underline p-0 h-auto text-base\"\n              >\n                {t('login.signUp')}\n              </Button>\n            </p>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            © {new Date().getFullYear()} {isAdmin ? \"RentalShop Admin\" : \"RentalShop\"}. Crafted with{\" \"}\n            <span className=\"text-red-500\">❤</span> by RentalShop\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm; ","import { getter, forEach, split, normalizePath, join } from 'property-expr';\nimport { camelCase, snakeCase } from 'tiny-case';\nimport toposort from 'toposort';\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet _Symbol$toStringTag, _Symbol$hasInstance, _Symbol$toStringTag2;\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\n_Symbol$toStringTag = Symbol.toStringTag;\nclass ValidationErrorNoStack {\n  constructor(errorOrErrors, value, field, type) {\n    this.name = void 0;\n    this.message = void 0;\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = void 0;\n    this.inner = void 0;\n    this[_Symbol$toStringTag] = 'Error';\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        const innerErrors = err.inner.length ? err.inner : [err];\n        this.inner.push(...innerErrors);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n  }\n}\n_Symbol$hasInstance = Symbol.hasInstance;\n_Symbol$toStringTag2 = Symbol.toStringTag;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    // Attempt to make the path more friendly for error message interpolation.\n    const path = params.label || params.path || 'this';\n    // Store the original path under `originalPath` so it isn't lost to custom\n    // message functions; e.g., ones provided in `setLocale()` calls.\n    params = Object.assign({}, params, {\n      path,\n      originalPath: params.path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type, disableStack) {\n    const errorNoStack = new ValidationErrorNoStack(errorOrErrors, value, field, type);\n    if (disableStack) {\n      return errorNoStack;\n    }\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = [];\n    this.inner = [];\n    this[_Symbol$toStringTag2] = 'Error';\n    this.name = errorNoStack.name;\n    this.message = errorNoStack.message;\n    this.type = errorNoStack.type;\n    this.value = errorNoStack.value;\n    this.path = errorNoStack.path;\n    this.errors = errorNoStack.errors;\n    this.inner = errorNoStack.inner;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n  }\n  static [_Symbol$hasInstance](inst) {\n    return ValidationErrorNoStack[Symbol.hasInstance](inst) || super[Symbol.hasInstance](inst);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  datetime: '${path} must be a valid ISO date-time',\n  datetime_precision: '${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits',\n  datetime_offset: '${path} must be a valid ISO date-time with UTC \"Z\" timezone',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}',\n  exact: '${path} object contains unknown properties: ${properties}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean,\n  tuple\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && getter(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly,\n      disableStackTrace = schema.spec.disableStackTrace\n    } = options;\n    const resolveOptions = {\n      value,\n      parent,\n      context\n    };\n    function createError(overrides = {}) {\n      const nextParams = resolveParams(Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec,\n        disableStackTrace: overrides.disableStackTrace || disableStackTrace\n      }, params, overrides.params), resolveOptions);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name, nextParams.disableStackTrace);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve(item) {\n        return resolveMaybeRef(item, resolveOptions);\n      },\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (shouldSkip) {\n      return handleResult(true);\n    }\n    let result;\n    try {\n      var _result;\n      result = test.call(ctx, value, ctx);\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        if (options.sync) {\n          throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n        }\n        return Promise.resolve(result).then(handleResult, handleError);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\n// Warning: mutates the input\nfunction resolveParams(params, options) {\n  if (!params) return params;\n  for (const key of Object.keys(params)) {\n    params[key] = resolveMaybeRef(params[key], options);\n  }\n  return params;\n}\nfunction resolveMaybeRef(item, options) {\n  return Reference.isRef(item) ? item.getValue(options.value, options.parent, options.context) : item;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  forEach(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\n/**\n * Copied from @standard-schema/spec to avoid having a dependency on it.\n * https://github.com/standard-schema/standard-schema/blob/main/packages/spec/src/index.ts\n */\n\nfunction createStandardPath(path) {\n  if (!(path != null && path.length)) {\n    return undefined;\n  }\n\n  // Array to store the final path segments\n  const segments = [];\n  // Buffer for building the current segment\n  let currentSegment = '';\n  // Track if we're inside square brackets (array/property access)\n  let inBrackets = false;\n  // Track if we're inside quotes (for property names with special chars)\n  let inQuotes = false;\n  for (let i = 0; i < path.length; i++) {\n    const char = path[i];\n    if (char === '[' && !inQuotes) {\n      // When entering brackets, push any accumulated segment after splitting on dots\n      if (currentSegment) {\n        segments.push(...currentSegment.split('.').filter(Boolean));\n        currentSegment = '';\n      }\n      inBrackets = true;\n      continue;\n    }\n    if (char === ']' && !inQuotes) {\n      if (currentSegment) {\n        // Handle numeric indices (e.g. arr[0])\n        if (/^\\d+$/.test(currentSegment)) {\n          segments.push(currentSegment);\n        } else {\n          // Handle quoted property names (e.g. obj[\"foo.bar\"])\n          segments.push(currentSegment.replace(/^\"|\"$/g, ''));\n        }\n        currentSegment = '';\n      }\n      inBrackets = false;\n      continue;\n    }\n    if (char === '\"') {\n      // Toggle quote state for handling quoted property names\n      inQuotes = !inQuotes;\n      continue;\n    }\n    if (char === '.' && !inBrackets && !inQuotes) {\n      // On dots outside brackets/quotes, push current segment\n      if (currentSegment) {\n        segments.push(currentSegment);\n        currentSegment = '';\n      }\n      continue;\n    }\n    currentSegment += char;\n  }\n\n  // Push any remaining segment after splitting on dots\n  if (currentSegment) {\n    segments.push(...currentSegment.split('.').filter(Boolean));\n  }\n  return segments;\n}\nfunction createStandardIssues(error, parentPath) {\n  const path = parentPath ? `${parentPath}.${error.path}` : error.path;\n  return error.errors.map(err => ({\n    message: err,\n    path: createStandardPath(path)\n  }));\n}\nfunction issuesFromValidationError(error, parentPath) {\n  var _error$inner;\n  if (!((_error$inner = error.inner) != null && _error$inner.length) && error.errors.length) {\n    return createStandardIssues(error, parentPath);\n  }\n  const path = parentPath ? `${parentPath}.${error.path}` : error.path;\n  return error.inner.flatMap(err => issuesFromValidationError(err, path));\n}\n\n// If `CustomSchemaMeta` isn't extended with any keys, we'll fall back to a\n// loose Record definition allowing free form usage.\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      disableStackTrace: false,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive, _options$disableStack;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive,\n      disableStackTrace: (_options$disableStack = options.disableStackTrace) != null ? _options$disableStack : this.spec.disableStackTrace\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({}, options, {\n      value\n      // parent: options.parent,\n      // context: options.context,\n    }));\n\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this, options), rawValue);\n    if (value === undefined) {\n      value = this.getDefault(options);\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          Array.isArray(err) ? nestedErrors.push(...err) : nestedErrors.push(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${isIndex ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    var _options$disableStack2;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let disableStackTrace = (_options$disableStack2 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack2 : schema.spec.disableStackTrace;\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated, undefined, undefined, disableStackTrace));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    var _options$disableStack3;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    let disableStackTrace = (_options$disableStack3 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack3 : schema.spec.disableStackTrace;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value, undefined, undefined, disableStackTrace);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault(options) {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this, options) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault(options);\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      skipAbsent: true,\n      test(value) {\n        if (!this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.filter((n, idx, list) => list.findIndex(c => c.OPTIONS.name === n.OPTIONS.name) === idx).map(fn => {\n        const params = fn.OPTIONS.params && options ? resolveParams(Object.assign({}, fn.OPTIONS.params), options) : fn.OPTIONS.params;\n        return {\n          name: fn.OPTIONS.name,\n          params\n        };\n      })\n    };\n    return description;\n  }\n  get ['~standard']() {\n    const schema = this;\n    const standard = {\n      version: 1,\n      vendor: 'yup',\n      async validate(value) {\n        try {\n          const result = await schema.validate(value, {\n            abortEarly: false\n          });\n          return {\n            value: result\n          };\n        } catch (err) {\n          if (err instanceof ValidationError) {\n            return {\n              issues: issuesFromValidationError(err)\n            };\n          }\n          throw err;\n        }\n      }\n    };\n    return standard;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        if (this.spec.coerce && !this.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n/**\n * This file is a modified version of the file from the following repository:\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n// prettier-ignore\n//                1 YYYY                2 MM        3 DD              4 HH     5 mm        6 ss           7 msec         8 Z 9 ±   10 tzHH    11 tzmm\nconst isoReg = /^(\\d{4}|[+-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,.](\\d{1,}))?)?(?:(Z)|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction parseIsoDate(date) {\n  const struct = parseDateStruct(date);\n  if (!struct) return Date.parse ? Date.parse(date) : Number.NaN;\n\n  // timestamps without timezone identifiers should be considered local time\n  if (struct.z === undefined && struct.plusMinus === undefined) {\n    return new Date(struct.year, struct.month, struct.day, struct.hour, struct.minute, struct.second, struct.millisecond).valueOf();\n  }\n  let totalMinutesOffset = 0;\n  if (struct.z !== 'Z' && struct.plusMinus !== undefined) {\n    totalMinutesOffset = struct.hourOffset * 60 + struct.minuteOffset;\n    if (struct.plusMinus === '+') totalMinutesOffset = 0 - totalMinutesOffset;\n  }\n  return Date.UTC(struct.year, struct.month, struct.day, struct.hour, struct.minute + totalMinutesOffset, struct.second, struct.millisecond);\n}\nfunction parseDateStruct(date) {\n  var _regexResult$7$length, _regexResult$;\n  const regexResult = isoReg.exec(date);\n  if (!regexResult) return null;\n\n  // use of toNumber() avoids NaN timestamps caused by “undefined”\n  // values being passed to Date constructor\n  return {\n    year: toNumber(regexResult[1]),\n    month: toNumber(regexResult[2], 1) - 1,\n    day: toNumber(regexResult[3], 1),\n    hour: toNumber(regexResult[4]),\n    minute: toNumber(regexResult[5]),\n    second: toNumber(regexResult[6]),\n    millisecond: regexResult[7] ?\n    // allow arbitrary sub-second precision beyond milliseconds\n    toNumber(regexResult[7].substring(0, 3)) : 0,\n    precision: (_regexResult$7$length = (_regexResult$ = regexResult[7]) == null ? void 0 : _regexResult$.length) != null ? _regexResult$7$length : undefined,\n    z: regexResult[8] || undefined,\n    plusMinus: regexResult[9] || undefined,\n    hourOffset: toNumber(regexResult[10]),\n    minuteOffset: toNumber(regexResult[11])\n  };\n}\nfunction toNumber(str, defaultValue = 0) {\n  return Number(str) || defaultValue;\n}\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet yearMonthDay = '^\\\\d{4}-\\\\d{2}-\\\\d{2}';\nlet hourMinuteSecond = '\\\\d{2}:\\\\d{2}:\\\\d{2}';\nlet zOrOffset = '(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)';\nlet rIsoDateTime = new RegExp(`${yearMonthDay}T${hourMinuteSecond}(\\\\.\\\\d+)?${zOrOffset}$`);\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        if (!this.spec.coerce || this.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n  datetime(options) {\n    let message = '';\n    let allowOffset;\n    let precision;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          message = '',\n          allowOffset = false,\n          precision = undefined\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.matches(rIsoDateTime, {\n      name: 'datetime',\n      message: message || string.datetime,\n      excludeEmptyString: true\n    }).test({\n      name: 'datetime_offset',\n      message: message || string.datetime_offset,\n      params: {\n        allowOffset\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || allowOffset) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return !!struct.z;\n      }\n    }).test({\n      name: 'datetime_precision',\n      message: message || string.datetime_precision,\n      params: {\n        precision\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || precision == undefined) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return struct.precision === precision;\n      }\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        if (!this.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n\n        // null -> NaN isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (this.isType(parsed) || parsed === null) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        // null -> InvalidDate isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (!this.spec.coerce || this.isType(value) || value === null) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = split(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort.array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, schema) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return schema.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...normalizePath(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = getter(join(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault(options);\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      let inputValue = value[prop];\n      if (field) {\n        let fieldValue;\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ? field.cast(inputValue, innerOptions) : inputValue;\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = inputValue;\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== inputValue) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s =>\n    // XXX: excludes here is wrong\n    s.setFields(nextFields, [...this._excludedEdges, ...schema._excludedEdges]));\n  }\n  _getDefault(options) {\n    if ('default' in this.spec) {\n      return super._getDefault(options);\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      var _innerOptions;\n      const field = this.fields[key];\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      dft[key] = field && 'getDefault' in field ? field.getDefault(innerOptions) : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked, this._excludedEdges.filter(([a, b]) => keys.includes(a) && keys.includes(b)));\n  }\n  omit(keys) {\n    const remaining = [];\n    for (const key of Object.keys(this.fields)) {\n      if (keys.includes(key)) continue;\n      remaining.push(key);\n    }\n    return this.pick(remaining);\n  }\n  from(from, to, alias) {\n    let fromGetter = getter(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n\n  /**\n   * Similar to `noUnknown` but only validates that an object is the right shape without stripping the unknown keys\n   */\n  exact(message) {\n    return this.test({\n      name: 'exact',\n      exclusive: true,\n      message: message || object.exact,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return unknownKeys.length === 0 || this.createError({\n          params: {\n            properties: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n  }\n  stripUnknown() {\n    return this.clone({\n      noUnknown: true\n    });\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => snakeCase(key).toUpperCase());\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(next.fields)) {\n      var _innerOptions2;\n      let innerOptions = options;\n      if ((_innerOptions2 = innerOptions) != null && _innerOptions2.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      spec: {\n        types: type\n      },\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`,\n        parent: value,\n        originalValue: v,\n        value: v,\n        index: idx\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    next.spec = Object.assign({}, next.spec, {\n      types: schema\n    });\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    if (next.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = next.innerType.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`,\n        parent: value,\n        originalValue: value[idx],\n        value: value[idx],\n        index: idx\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.innerType = next.spec.types.map((schema, index) => {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[index]\n        });\n      }\n      return schema.describe(innerOptions);\n    });\n    return base;\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nfunction catchValidationError(fn) {\n  try {\n    return fn();\n  } catch (err) {\n    if (ValidationError.isError(err)) return Promise.reject(err);\n    throw err;\n  }\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return catchValidationError(() => this._resolve(value, options).validate(value, options));\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return catchValidationError(() => this._resolve(value, options).validateAt(path, value, options));\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    try {\n      return this._resolve(value, options).isValid(value, options);\n    } catch (err) {\n      if (ValidationError.isError(err)) {\n        return Promise.resolve(false);\n      }\n      throw err;\n    }\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  get ['~standard']() {\n    const schema = this;\n    const standard = {\n      version: 1,\n      vendor: 'yup',\n      async validate(value) {\n        try {\n          const result = await schema.validate(value, {\n            abortEarly: false\n          });\n          return {\n            value: result\n          };\n        } catch (err) {\n          if (ValidationError.isError(err)) {\n            return {\n              issues: issuesFromValidationError(err)\n            };\n          }\n          throw err;\n        }\n      }\n    };\n    return standard;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\nexport { ArraySchema, BooleanSchema, DateSchema, Lazy as LazySchema, MixedSchema, NumberSchema, ObjectSchema, Schema, StringSchema, TupleSchema, ValidationError, addMethod, create$2 as array, create$7 as bool, create$7 as boolean, create$4 as date, locale as defaultLocale, getIn, isSchema, create as lazy, create$8 as mixed, create$5 as number, create$3 as object, printValue, reach, create$9 as ref, setLocale, create$6 as string, create$1 as tuple };\n","var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nFormikContext.displayName = 'FormikContext';\n\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n\n  // check if path is not in the end\n  if (p !== path.length && !obj) {\n    return def;\n  }\n\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport cloneDeep from 'lodash/cloneDeep';\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport invariant from 'tiny-warning';\nimport { FieldConfig } from './Field';\nimport { FormikProvider } from './FormikContext';\nimport {\n  FieldHelperProps,\n  FieldInputProps,\n  FieldMetaProps,\n  FormikConfig,\n  FormikErrors,\n  FormikHandlers,\n  FormikHelpers,\n  FormikProps,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n} from './types';\nimport {\n  getActiveElement,\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  isObject,\n  isPromise,\n  isString,\n  setIn,\n  setNestedObjectValues,\n} from './utils';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [, setIteration] = React.useState(0);\n  const stateRef = React.useRef<FormikState<Values>>({\n    values: cloneDeep(props.initialValues),\n    errors: cloneDeep(props.initialErrors) || emptyErrors,\n    touched: cloneDeep(props.initialTouched) || emptyTouched,\n    status: cloneDeep(props.initialStatus),\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const state = stateRef.current;\n\n  const dispatch = React.useCallback((action: FormikMessage<Values>) => {\n    const prev = stateRef.current;\n\n    stateRef.current = formikReducer(prev, action);\n\n    // force rerender\n    if (prev !== stateRef.current) setIteration(x => x + 1);\n  }, []);\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched, props.onReset]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n        if (validateOnMount) {\n          validateFormWithHighPriority(initialValues.current);\n        }\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: getIn(error, name) },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : options && multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions: string | FieldConfig<any>): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject\n        ? (nameOrOptions as FieldConfig<any>).name\n        : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions as FieldConfig<any>;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context?: any\n): Promise<Partial<T>> {\n  const normalizedValues: FormikValues = prepareDataForValidation(values);\n\n  return schema[sync ? 'validateSync' : 'validate'](normalizedValues, {\n    abortEarly: false,\n    context: context || normalizedValues,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n  | string\n  | React.ComponentType<FieldProps<V>>\n  | React.ComponentType\n  | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n  | React.ComponentType<FieldProps<V>['field']>\n  | string\n  | React.ComponentType\n  | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Used for 'select' and related input types.\n   */\n  multiple?: boolean;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = { className?: string; } & GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & {\n    name: string,\n  };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  const fieldHelpers = React.useMemo(() => getFieldHelpers(fieldName), [\n    getFieldHelpers,\n    fieldName,\n  ]);\n\n  return [getFieldProps(props), getFieldMeta(fieldName), fieldHelpers];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  className,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest, className },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props, className },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest, className },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props, className }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action ?? '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik helpers + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form status\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form errors state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.FunctionComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = props => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: typeof Comp;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  );\n}\n","import cloneDeep from 'lodash/cloneDeep';\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikProps,\n  FormikState,\n  SharedRenderProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyArray,\n  isEmptyChildren,\n  isFunction,\n  isObject,\n  setIn,\n} from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers<T extends any[] = any[]> {\n  /** Imperatively add a value to the end of an array */\n  push<X = T[number]>(obj: X): void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush<X = T[number]>(obj: X): () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert<X = T[number]>(index: number, value: X): void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert<X = T[number]>(index: number, value: X): () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace<X = T[number]>(index: number, value: X): void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace<X = T[number]>(index: number, value: X): () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift<X = T[number]>(value: X): number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift<X = T[number]>(value: X): () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<X = T[number]>(index: number): X | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<X = T[number]>(): X | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = <T,>(array: T[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = <T,>(\n  arrayLike: ArrayLike<T>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = <T,>(\n  arrayLike: ArrayLike<T>,\n  index: number,\n  value: T\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = <T,>(\n  arrayLike: ArrayLike<T>,\n  index: number,\n  value: T\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nconst createAlterationHandler = (\n  alteration: boolean | Function,\n  defaultFunction: Function\n) => {\n  const fn = typeof alteration === 'function' ? alteration : defaultFunction;\n\n  return (data: any | any[]) => {\n    if (Array.isArray(data) || isObject(data)) {\n      const clone = copyArrayLike(data);\n      return fn(clone);\n    }\n\n    // This can be assumed to be a primitive, which\n    // is a case for top level validation errors\n    return data;\n  };\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = createAlterationHandler(alterErrors, fn);\n      let updateTouched = createAlterationHandler(alterTouched, fn);\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n\n        length = arr.length;\n\n        return arr;\n      },\n      (array: any[]) => {\n        return array ? [null, ...array] : [null];\n      },\n      (array: any[]) => {\n        return array ? [null, ...array] : [null];\n      }\n    );\n\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        // if the array only includes undefined values we have to return an empty array\n        return isFunction(copy.every)\n          ? copy.every(v => v === undefined)\n            ? []\n            : copy\n          : copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array.slice();\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  id?: string;\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n","'use client'\n\n/**\n * Language Switcher Component\n * \n * Provides a simple UI to switch between English and Vietnamese.\n * \n * HOW IT WORKS:\n * 1. User clicks EN or VI button\n * 2. Component sets cookie: NEXT_LOCALE=en or NEXT_LOCALE=vi\n * 3. Component sets localStorage for client-side persistence\n * 4. Page refreshes to apply new locale\n * 5. Server reads cookie and renders with correct locale\n * \n * WHY USE COOKIE + LOCALSTORAGE?\n * - Cookie: Server can read it for SSR\n * - LocalStorage: Client-side fallback\n * - Both: Ensures consistency\n */\n\nimport React, { useTransition } from 'react';\nimport { useLocale } from 'next-intl';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@rentalshop/ui';\nimport { Globe } from 'lucide-react';\n\ntype SupportedLocale = 'en' | 'vi';\n\ninterface LanguageSwitcherProps {\n  variant?: 'default' | 'compact';\n}\n\nexport const LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ \n  variant = 'default' \n}) => {\n  const currentLocale = useLocale() as SupportedLocale;\n  const router = useRouter();\n  const [isPending, startTransition] = useTransition();\n\n  const handleLanguageChange = (newLocale: SupportedLocale) => {\n    if (newLocale === currentLocale) return; // Already selected\n\n    startTransition(() => {\n      // Set cookie for server-side access\n      document.cookie = `NEXT_LOCALE=${newLocale};path=/;max-age=31536000;SameSite=Lax`;\n      \n      // Set localStorage for client-side persistence\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('user_language_preference', newLocale);\n      }\n      \n      // Refresh the page to apply new locale\n      router.refresh();\n    });\n  };\n\n  if (variant === 'compact') {\n    return (\n      <div className=\"flex items-center gap-1\">\n        <Button\n          variant={currentLocale === 'en' ? 'default' : 'ghost'}\n          size=\"sm\"\n          onClick={() => handleLanguageChange('en')}\n          disabled={isPending}\n          className=\"text-xs px-2 py-1 min-w-[40px]\"\n        >\n          EN\n        </Button>\n        <Button\n          variant={currentLocale === 'vi' ? 'default' : 'ghost'}\n          size=\"sm\"\n          onClick={() => handleLanguageChange('vi')}\n          disabled={isPending}\n          className=\"text-xs px-2 py-1 min-w-[40px]\"\n        >\n          VI\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Globe className=\"w-4 h-4 text-text-tertiary\" />\n      <Button\n        variant={currentLocale === 'en' ? 'default' : 'ghost'}\n        size=\"sm\"\n        onClick={() => handleLanguageChange('en')}\n        disabled={isPending}\n        className=\"min-w-[50px]\"\n      >\n        EN\n      </Button>\n      <Button\n        variant={currentLocale === 'vi' ? 'default' : 'ghost'}\n        size=\"sm\"\n        onClick={() => handleLanguageChange('vi')}\n        disabled={isPending}\n        className=\"min-w-[50px]\"\n      >\n        VI\n      </Button>\n      {isPending && (\n        <div className=\"h-4 w-4 border-2 border-action-primary border-t-transparent rounded-full animate-spin\" />\n      )}\n    </div>\n  );\n}; ","import{createContext as e,useContext as r,useMemo as o,useState as t,useEffect as n}from\"react\";import{d as a,b as s,i as c,r as i,I as m,a as f,e as l,c as u}from\"./initializeConfig-JxT5lzW-.js\";import{jsx as g}from\"react/jsx-runtime\";const d=e(void 0);function w({children:e,formats:t,getMessageFallback:n,locale:i,messages:m,now:f,onError:l,timeZone:u}){const w=r(d),v=o((()=>w?.cache||a()),[i,w?.cache]),E=o((()=>w?.formatters||s(v)),[v,w?.formatters]),h=o((()=>({...c({locale:i,formats:void 0===t?w?.formats:t,getMessageFallback:n||w?.getMessageFallback,messages:void 0===m?w?.messages:m,now:f||w?.now,onError:l||w?.onError,timeZone:u||w?.timeZone}),formatters:E,cache:v})),[v,t,E,n,i,m,f,l,w,u]);return g(d.Provider,{value:h,children:e})}function v(){const e=r(d);if(!e)throw new Error(void 0);return e}let E=!1;const h=\"undefined\"==typeof window;function p(e){return function(e,r,t){const{cache:n,formats:a,formatters:s,getMessageFallback:c,locale:u,onError:g,timeZone:d}=v(),w=e[t],p=i(r,t);return d||E||!h||(E=!0,g(new m(f.ENVIRONMENT_FALLBACK,void 0))),o((()=>l({cache:n,formatters:s,getMessageFallback:c,messages:w,namespace:p,onError:g,formats:a,locale:u,timeZone:d})),[n,s,c,w,p,g,a,u,d])}({\"!\":v().messages},e?`!.${e}`:\"!\",\"!\")}function Z(){return v().locale}function b(){return new Date}function F(e){const r=e?.updateInterval,{now:o}=v(),[a,s]=t(o||b());return n((()=>{if(!r)return;const e=setInterval((()=>{s(b())}),r);return()=>{clearInterval(e)}}),[o,r]),null==r&&o?o:a}function M(){return v().timeZone}function k(){const e=v();if(!e.messages)throw new Error(void 0);return e.messages}function I(){const{formats:e,formatters:r,locale:t,now:n,onError:a,timeZone:s}=v();return o((()=>u({formats:e,locale:t,now:n,onError:a,timeZone:s,_formatters:r})),[e,r,n,t,a,s])}export{w as IntlProvider,I as useFormatter,Z as useLocale,k as useMessages,F as useNow,M as useTimeZone,p as useTranslations};\n","'use client';\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Eye, EyeOff, Mail, Lock, User, Store, Phone, CheckCircle, MapPin } from \"lucide-react\";\nimport { authApi } from \"@rentalshop/utils\";\nimport { \n  BUSINESS_TYPE_OPTIONS,\n  PRICING_TYPE_OPTIONS,\n  COUNTRIES,\n  getDefaultCountry,\n  formatCountryDisplay\n} from \"@rentalshop/constants\";\nimport { \n  Button, \n  Card, \n  CardHeader, \n  CardTitle, \n  CardDescription, \n  CardContent, \n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  useToast\n} from \"@rentalshop/ui\";\nimport { useAuthTranslations } from \"@rentalshop/hooks\";\n\n// Types for the registration form\ninterface RegisterFormData {\n  login: string;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  businessName: string;\n  // Business configuration (locked after registration)\n  businessType: 'CLOTHING' | 'VEHICLE' | 'EQUIPMENT' | 'GENERAL';\n  pricingType: 'FIXED' | 'HOURLY' | 'DAILY';\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  country: string;\n  acceptTermsAndPrivacy: boolean;\n  // Role is always MERCHANT for public registration\n  role: 'MERCHANT';\n}\n\ninterface RegisterFormProps {\n  onRegister?: (data: RegisterFormData) => Promise<void>;\n  onNavigate?: (path: string) => void;\n  user?: any;\n  registrationError?: string | null;\n}\n\nconst RegisterForm: React.FC<RegisterFormProps> = ({\n  onRegister,\n  onNavigate,\n  user,\n  registrationError\n}) => {\n  const router = useRouter();\n  const [viewPass, setViewPass] = useState(false);\n  const [viewConfirmPass, setViewConfirmPass] = useState(false);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [accountData, setAccountData] = useState<Partial<RegisterFormData>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toastSuccess, toastError, removeToast } = useToast();\n  const t = useAuthTranslations();\n\n  // Step 1 validation schema (Account Information)\n  const step1ValidationSchema = Yup.object({\n    login: Yup.string()\n      .email(t('login.invalidEmail'))\n      .required(t('register.emailRequired')),\n    password: Yup.string()\n      .min(6, t('register.passwordMinLength'))\n      .max(25, t('register.passwordMaxLength'))\n      .required(t('register.passwordRequired')),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\")], t('register.passwordMismatch'))\n      .required(t('register.confirmPasswordRequired')),\n    firstName: Yup.string()\n      .min(1, t('register.firstNameRequired'))\n      .required(t('register.firstNameRequired')),\n    lastName: Yup.string()\n      .min(1, t('register.lastNameRequired'))\n      .required(t('register.lastNameRequired')),\n    phone: Yup.string()\n      .matches(/^[0-9+\\-\\s()]+$/, t('register.phoneInvalid'))\n      .min(10, t('register.phoneMinLength'))\n      .required(t('register.phoneRequired')),\n  });\n\n  // Step 2 validation schema (Business Information)\n  const step2ValidationSchema = Yup.object({\n    businessName: Yup.string()\n      .min(2, t('register.businessNameMinLength'))\n      .required(t('register.businessNameRequired')),\n    businessType: Yup.string()\n      .oneOf(['CLOTHING', 'VEHICLE', 'EQUIPMENT', 'GENERAL'], t('register.businessTypeRequired'))\n      .required(t('register.businessTypeRequired')),\n    pricingType: Yup.string()\n      .oneOf(['FIXED', 'HOURLY', 'DAILY'], t('register.pricingTypeRequired'))\n      .required(t('register.pricingTypeRequired')),\n    address: Yup.string()\n      .min(5, t('register.addressMinLength'))\n      .required(t('register.addressRequired')),\n    city: Yup.string()\n      .min(2, t('register.cityMinLength'))\n      .required(t('register.cityRequired')),\n    state: Yup.string()\n      .min(2, t('register.stateMinLength'))\n      .required(t('register.stateRequired')),\n    zipCode: Yup.string()\n      .matches(/^[0-9]{5}(-[0-9]{4})?$/, t('register.zipCodeInvalid'))\n      .required(t('register.zipCodeRequired')),\n    country: Yup.string()\n      .min(2, t('register.countryMinLength'))\n      .required(t('register.countryRequired')),\n    acceptTermsAndPrivacy: Yup.boolean()\n      .oneOf([true], t('register.agreeToTerms'))\n      .required(t('register.agreeToTerms')),\n  });\n\n  const formik = useFormik<RegisterFormData>({\n    initialValues: {\n      login: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      businessName: \"\",\n      businessType: \"GENERAL\",\n      pricingType: \"FIXED\",\n      address: \"\",\n      city: \"\",\n      state: \"\",\n      zipCode: \"\",\n      country: getDefaultCountry().name,\n      acceptTermsAndPrivacy: false,\n      role: 'MERCHANT',\n    },\n    validationSchema: currentStep === 1 ? step1ValidationSchema : step2ValidationSchema,\n    onSubmit: async (values: RegisterFormData) => {\n      // Prevent double submission\n      if (isSubmitting) {\n        return;\n      }\n      \n      setIsSubmitting(true);\n      \n      // Add timeout to prevent stuck button\n      const timeoutId = setTimeout(() => {\n        setIsSubmitting(false);\n      }, 10000); // 10 second timeout\n      \n      if (currentStep === 1) {\n        // Step 1: Save account data and move to step 2\n        setAccountData({\n          login: values.login,\n          password: values.password,\n          confirmPassword: values.confirmPassword,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          phone: values.phone,\n          role: values.role,\n        });\n        setCurrentStep(2);\n        return;\n      }\n\n      // Step 2: Complete registration with all data\n      const completeData = { ...accountData, ...values };\n      \n      try {\n        // Use centralized API directly\n        \n        const registrationData = {\n          name: `${completeData.firstName} ${completeData.lastName}`,\n          email: completeData.login!,\n          password: completeData.password!,\n          firstName: completeData.firstName!,\n          lastName: completeData.lastName!,\n          phone: completeData.phone!,\n          role: completeData.role!,\n          businessName: values.businessName,\n          businessType: values.businessType,\n          pricingType: values.pricingType,\n          address: values.address,\n          city: values.city,\n          state: values.state,\n          zipCode: values.zipCode,\n          country: values.country,\n        };\n        \n        const result = await authApi.register(registrationData);\n        \n        if (!result.success) {\n          // Prioritize message over error field\n          throw new Error(result.message || result.error || 'Registration failed');\n        }\n        \n        // Store token in localStorage using consolidated function\n        if (result.data?.token) {\n          const { storeAuthData } = await import('@rentalshop/utils');\n          storeAuthData(result.data.token, result.data.user);\n        }\n        \n        toastSuccess(t('register.registrationComplete'), t('register.accountCreatedSuccessfully'));\n        \n        // Reset form\n        formik.resetForm();\n        setCurrentStep(1);\n        setAccountData({});\n        \n        // Navigate to login after a short delay\n        setTimeout(() => {\n          // Use router.push instead of window.location for proper SPA navigation\n          if (onNavigate) {\n            onNavigate('/login');\n          } else {\n            router.push('/login');\n          }\n        }, 2000);\n      } catch (error: any) {\n        toastError(\n          t('register.registrationFailed'),\n          error.message || t('register.somethingWentWrong')\n        );\n      } finally {\n        clearTimeout(timeoutId);\n        setIsSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <div className=\"w-full max-w-md mx-auto relative z-10\">\n      <Card className=\"shadow-2xl border-0 bg-white/80 backdrop-blur-sm\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold text-gray-900\">\n            {t('register.createMerchantAccount')}\n          </CardTitle>\n          <CardDescription className=\"text-gray-600\">\n            {currentStep === 1 \n              ? t('register.step1')\n              : t('register.step2')\n            }\n          </CardDescription>\n          \n          {/* Step Progress Indicator */}\n          <div className=\"flex items-center justify-center space-x-4 mt-4\">\n            <div className={`flex items-center ${currentStep >= 1 ? 'text-blue-700' : 'text-gray-400'}`}>\n              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                currentStep >= 1 ? 'bg-blue-700 text-white' : 'bg-gray-200 text-gray-500'\n              }`}>\n                1\n              </div>\n              <span className=\"ml-2 text-sm font-medium\">{t('register.account')}</span>\n            </div>\n            <div className={`w-8 h-0.5 ${currentStep >= 2 ? 'bg-blue-700' : 'bg-gray-200'}`}></div>\n            <div className={`flex items-center ${currentStep >= 2 ? 'text-blue-700' : 'text-gray-400'}`}>\n              <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                currentStep >= 2 ? 'bg-blue-700 text-white' : 'bg-gray-200 text-gray-500'\n              }`}>\n                2\n              </div>\n              <span className=\"ml-2 text-sm font-medium\">{t('register.business')}</span>\n            </div>\n          </div>\n        </CardHeader>\n        \n        <CardContent>\n          <form onSubmit={(e) => {\n            e.preventDefault();\n            formik.handleSubmit(e);\n          }} className=\"space-y-6\">\n            {/* Step 1: Account Information */}\n            {currentStep === 1 && (\n              <>\n                {/* Email Field */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"login\" className=\"text-sm font-medium text-gray-700\">\n                    {t('register.email')}\n                  </label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      id=\"login\"\n                      name=\"login\"\n                      type=\"email\"\n                      placeholder={t('register.enterYourEmail')}\n                      value={formik.values.login}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={`pl-10 ${formik.errors.login && formik.touched.login ? 'border-red-500' : ''}`}\n                    />\n                  </div>\n                  {formik.errors.login && formik.touched.login && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.login}</p>\n                  )}\n                </div>\n\n                {/* Password Field */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">\n                    {t('register.password')}\n                  </label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      id=\"password\"\n                      name=\"password\"\n                      type={viewPass ? \"text\" : \"password\"}\n                      placeholder={t('register.createPassword')}\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={`pl-10 pr-10 ${formik.errors.password && formik.touched.password ? 'border-red-500' : ''}`}\n                    />\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      type=\"button\"\n                      onClick={() => setViewPass(!viewPass)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 h-auto w-auto p-0\"\n                    >\n                      {viewPass ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                    </Button>\n                  </div>\n                  {formik.errors.password && formik.touched.password && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.password}</p>\n                  )}\n                </div>\n\n                {/* Confirm Password Field */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"confirmPassword\" className=\"text-sm font-medium text-gray-700\">\n                    {t('register.confirmPassword')}\n                  </label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      id=\"confirmPassword\"\n                      name=\"confirmPassword\"\n                      type={viewConfirmPass ? \"text\" : \"password\"}\n                      placeholder={t('register.confirmYourPassword')}\n                      value={formik.values.confirmPassword}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={`pl-10 pr-10 ${formik.errors.confirmPassword && formik.touched.confirmPassword ? 'border-red-500' : ''}`}\n                    />\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      type=\"button\"\n                      onClick={() => setViewConfirmPass(!viewConfirmPass)}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 h-auto w-auto p-0\"\n                    >\n                      {viewConfirmPass ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                    </Button>\n                  </div>\n                  {formik.errors.confirmPassword && formik.touched.confirmPassword && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.confirmPassword}</p>\n                  )}\n                </div>\n\n                {/* First Name and Last Name Fields */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* First Name Field */}\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"firstName\" className=\"text-sm font-medium text-gray-700\">\n                      {t('register.firstName')}\n                    </label>\n                    <div className=\"relative\">\n                      <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                      <Input\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        type=\"text\"\n                        placeholder={t('register.enterFirstName')}\n                        value={formik.values.firstName}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className={`pl-10 ${formik.errors.firstName && formik.touched.firstName ? 'border-red-500' : ''}`}\n                      />\n                    </div>\n                    {formik.errors.firstName && formik.touched.firstName && (\n                      <p className=\"text-red-500 text-sm\">{formik.errors.firstName}</p>\n                    )}\n                  </div>\n\n                  {/* Last Name Field */}\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"lastName\" className=\"text-sm font-medium text-gray-700\">\n                      {t('register.lastName')}\n                    </label>\n                    <div className=\"relative\">\n                      <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                      <Input\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        type=\"text\"\n                        placeholder={t('register.enterLastName')}\n                        value={formik.values.lastName}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className={`pl-10 ${formik.errors.lastName && formik.touched.lastName ? 'border-red-500' : ''}`}\n                      />\n                    </div>\n                    {formik.errors.lastName && formik.touched.lastName && (\n                      <p className=\"text-red-500 text-sm\">{formik.errors.lastName}</p>\n                    )}\n                  </div>\n                </div>\n\n                {/* Phone Field */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"phone\" className=\"text-sm font-medium text-gray-700\">\n                    {t('register.phone')}\n                  </label>\n                  <div className=\"relative\">\n                    <Phone className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      id=\"phone\"\n                      name=\"phone\"\n                      type=\"tel\"\n                      placeholder={t('register.enterPhoneNumber')}\n                      value={formik.values.phone}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={`pl-10 ${formik.errors.phone && formik.touched.phone ? 'border-red-500' : ''}`}\n                    />\n                  </div>\n                  {formik.errors.phone && formik.touched.phone && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.phone}</p>\n                  )}\n                </div>\n\n                {/* Submit Button for Step 1 */}\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-blue-700 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition duration-200\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? t('register.validating') : t('register.continueToBusinessInfo')}\n                </Button>\n              </>\n            )}\n\n            {/* Step 2: Business Information */}\n            {currentStep === 2 && (\n              <>\n                {/* Business Name Field */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"businessName\" className=\"text-sm font-medium text-gray-700\">\n                    {t('register.businessName')}\n                  </label>\n                  <div className=\"relative\">\n                    <Store className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      id=\"businessName\"\n                      name=\"businessName\"\n                      type=\"text\"\n                      placeholder={t('register.enterBusinessName')}\n                      value={formik.values.businessName}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={`pl-10 ${formik.errors.businessName && formik.touched.businessName ? 'border-red-500' : ''}`}\n                    />\n                  </div>\n                  {formik.errors.businessName && formik.touched.businessName && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.businessName}</p>\n                  )}\n                </div>\n\n\n                {/* Business Type and Pricing Type */}\n                <div className=\"space-y-4\">\n                  {/* Warning Note */}\n                  <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-3\">\n                    <div className=\"flex items-start\">\n                      <div className=\"flex-shrink-0\">\n                        <svg className=\"h-5 w-5 text-amber-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </div>\n                      <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-amber-800\">\n                          {t('register.importantNotice')}\n                        </h3>\n                        <div className=\"mt-1 text-sm text-amber-700\">\n                          <p>{t('register.cannotBeChanged')}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    {/* Business Type Field */}\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"businessType\" className=\"text-sm font-medium text-gray-700\">\n                        {t('register.businessType')} *\n                      </label>\n                      <Select\n                        value={formik.values.businessType}\n                        onValueChange={(value) => formik.setFieldValue('businessType', value)}\n                      >\n                        <SelectTrigger className={`w-full ${formik.errors.businessType && formik.touched.businessType ? 'border-red-500' : ''}`}>\n                          <SelectValue placeholder={t('register.selectBusinessType')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {BUSINESS_TYPE_OPTIONS.map((option) => (\n                            <SelectItem key={option.value} value={option.value}>\n                              <div className=\"flex flex-col items-start\">\n                                <span className=\"font-medium\">\n                                  {t(`register.businessTypes.${option.value.toLowerCase()}.label`)}\n                                </span>\n                                <span className=\"text-xs text-gray-500\">\n                                  {t(`register.businessTypes.${option.value.toLowerCase()}.description`)}\n                                </span>\n                              </div>\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      {formik.errors.businessType && formik.touched.businessType && (\n                        <p className=\"text-red-500 text-sm\">{formik.errors.businessType}</p>\n                      )}\n                    </div>\n\n                    {/* Pricing Type Field */}\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"pricingType\" className=\"text-sm font-medium text-gray-700\">\n                        {t('register.pricingType')} *\n                      </label>\n                      <Select\n                        value={formik.values.pricingType}\n                        onValueChange={(value) => formik.setFieldValue('pricingType', value)}\n                      >\n                        <SelectTrigger className={`w-full ${formik.errors.pricingType && formik.touched.pricingType ? 'border-red-500' : ''}`}>\n                          <SelectValue placeholder={t('register.selectPricingType')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {PRICING_TYPE_OPTIONS.map((option) => (\n                            <SelectItem key={option.value} value={option.value}>\n                              <div className=\"flex flex-col items-start\">\n                                <span className=\"font-medium\">\n                                  {t(`register.pricingTypes.${option.value.toLowerCase()}.label`)}\n                                </span>\n                                <span className=\"text-xs text-gray-500\">\n                                  {t(`register.pricingTypes.${option.value.toLowerCase()}.description`)}\n                                </span>\n                              </div>\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                      {formik.errors.pricingType && formik.touched.pricingType && (\n                        <p className=\"text-red-500 text-sm\">{formik.errors.pricingType}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Address Field */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"address\" className=\"text-sm font-medium text-gray-700\">\n                    {t('register.address')}\n                  </label>\n                  <div className=\"relative\">\n                    <MapPin className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5\" />\n                    <Input\n                      id=\"address\"\n                      name=\"address\"\n                      type=\"text\"\n                      placeholder={t('register.enterBusinessAddress')}\n                      value={formik.values.address}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={`pl-10 ${formik.errors.address && formik.touched.address ? 'border-red-500' : ''}`}\n                    />\n                  </div>\n                  {formik.errors.address && formik.touched.address && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.address}</p>\n                  )}\n                </div>\n\n                {/* City and State Row */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"city\" className=\"text-sm font-medium text-gray-700\">\n                      {t('register.city')}\n                    </label>\n                    <Input\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      placeholder={t('register.city')}\n                      value={formik.values.city}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={formik.errors.city && formik.touched.city ? 'border-red-500' : ''}\n                    />\n                    {formik.errors.city && formik.touched.city && (\n                      <p className=\"text-red-500 text-sm\">{formik.errors.city}</p>\n                    )}\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"state\" className=\"text-sm font-medium text-gray-700\">\n                      {t('register.state')}\n                    </label>\n                    <Input\n                      id=\"state\"\n                      name=\"state\"\n                      type=\"text\"\n                      placeholder={t('register.state')}\n                      value={formik.values.state}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={formik.errors.state && formik.touched.state ? 'border-red-500' : ''}\n                    />\n                    {formik.errors.state && formik.touched.state && (\n                      <p className=\"text-red-500 text-sm\">{formik.errors.state}</p>\n                    )}\n                  </div>\n                </div>\n\n                {/* ZIP Code and Country Row */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"zipCode\" className=\"text-sm font-medium text-gray-700\">\n                      {t('register.zipCode')}\n                    </label>\n                    <Input\n                      id=\"zipCode\"\n                      name=\"zipCode\"\n                      type=\"text\"\n                      placeholder={t('register.zipCode')}\n                      value={formik.values.zipCode}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className={formik.errors.zipCode && formik.touched.zipCode ? 'border-red-500' : ''}\n                    />\n                    {formik.errors.zipCode && formik.touched.zipCode && (\n                      <p className=\"text-red-500 text-sm\">{formik.errors.zipCode}</p>\n                    )}\n                  </div>\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"country\" className=\"text-sm font-medium text-gray-700\">\n                      {t('register.country')} *\n                    </label>\n                    <Select\n                      value={formik.values.country}\n                      onValueChange={(value) => formik.setFieldValue('country', value)}\n                    >\n                      <SelectTrigger className={`w-full ${formik.errors.country && formik.touched.country ? 'border-red-500' : ''}`}>\n                        <SelectValue placeholder={t('register.selectCountry')} />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {COUNTRIES.map((country: any) => (\n                          <SelectItem key={country.code} value={country.name}>\n                            <div className=\"flex items-center gap-2\">\n                              <span>{country.flag}</span>\n                              <span>{country.name}</span>\n                            </div>\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    {formik.errors.country && formik.touched.country && (\n                      <p className=\"text-red-500 text-sm\">{formik.errors.country}</p>\n                    )}\n                  </div>\n                </div>\n\n                {/* Terms and Privacy Checkbox */}\n                <div className=\"space-y-2\">\n                  <label className=\"flex items-start space-x-3\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"acceptTermsAndPrivacy\"\n                      checked={formik.values.acceptTermsAndPrivacy}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      className=\"mt-1 h-4 w-4 text-blue-700 focus:ring-blue-500 border-gray-300 rounded\"\n                    />\n                    <span className=\"text-sm text-gray-700\">\n                      {t('register.iAgreeToThe')}{' '}\n                      <a href=\"/terms\" className=\"text-blue-700 hover:text-blue-500 underline\">\n                        {t('register.termsOfService')}\n                      </a>{' '}\n                      {t('register.and')}{' '}\n                      <a href=\"/privacy\" className=\"text-blue-700 hover:text-blue-500 underline\">\n                        {t('register.privacyPolicy')}\n                      </a>\n                    </span>\n                  </label>\n                  {formik.errors.acceptTermsAndPrivacy && formik.touched.acceptTermsAndPrivacy && (\n                    <p className=\"text-red-500 text-sm\">{formik.errors.acceptTermsAndPrivacy}</p>\n                  )}\n                </div>\n\n                {/* Trial Benefits */}\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <h3 className=\"text-sm font-medium text-blue-900 mb-2\">{t('register.freeTrialIncludes')}</h3>\n                  <ul className=\"text-sm text-blue-800 space-y-1\">\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 text-blue-700 mr-2\" />\n                      {t('register.fullAccessToAllFeatures')}\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 text-blue-700 mr-2\" />\n                      {t('register.defaultOutlet')}: \"{formik.values.businessName || 'Your Business'}\"\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 text-blue-700 mr-2\" />\n                      {t('register.mobileAppAccess')}\n                    </li>\n                    <li className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 text-blue-700 mr-2\" />\n                      {t('register.noCreditCardRequired')}\n                    </li>\n                  </ul>\n                </div>\n\n                {/* Navigation Buttons for Step 2 */}\n                <div className=\"flex space-x-3\">\n                  <Button\n                    type=\"button\"\n                    onClick={() => setCurrentStep(1)}\n                    className=\"flex-1 bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded-lg transition duration-200\"\n                  >\n                    {t('register.back')}\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    className=\"flex-1 bg-blue-700 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition duration-200\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? t('register.creatingAccount') : t('register.registerButton')}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            {/* Error Display */}\n            {registrationError && (\n              <div className=\"text-red-500 text-sm text-center bg-red-50 border border-red-200 rounded-lg p-3\">\n                {registrationError}\n              </div>\n            )}\n\n            {/* Login Link */}\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                {t('register.hasAccount')}{' '}\n                <Button\n                  variant=\"link\"\n                  type=\"button\"\n                  onClick={() => onNavigate?.('/login')}\n                  className=\"text-blue-700 hover:text-blue-500 font-medium p-0 h-auto\"\n                >\n                  {t('register.signIn')}\n                </Button>\n              </p>\n            </div>\n          </form>\n        </CardContent>\n      </Card>    </div>\n  );\n};\n\nexport default RegisterForm;","'use client'\n\nimport React, { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Mail, ArrowLeft, CheckCircle } from \"lucide-react\";\nimport { Button, Card, CardHeader, CardTitle, CardDescription, CardContent, Input } from \"@rentalshop/ui\";\nimport { useAuthTranslations } from \"@rentalshop/hooks\";\n\n// Types for the forget password form\ninterface ForgetPasswordFormData {\n  email: string;\n}\n\ninterface ForgetPasswordFormProps {\n  onResetPassword?: (data: ForgetPasswordFormData) => Promise<void>;\n  onNavigate?: (path: string) => void;\n  error?: string | null;\n  loading?: boolean;\n  success?: boolean;\n}\n\nconst ForgetPasswordForm: React.FC<ForgetPasswordFormProps> = ({\n  onResetPassword,\n  onNavigate,\n  error,\n  loading = false,\n  success = false,\n}) => {\n  const [emailSent, setEmailSent] = useState(false);\n  const t = useAuthTranslations();\n\n  // Validation schema\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(t('login.invalidEmail'))\n      .required(t('login.invalidEmail')),\n  });\n\n  const validation = useFormik<ForgetPasswordFormData>({\n    enableReinitialize: true,\n    initialValues: {\n      email: \"\",\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values: ForgetPasswordFormData) => {\n      try {\n        if (onResetPassword) {\n          await onResetPassword(values);\n          setEmailSent(true);\n        } else {\n          // Fallback: log the data\n          console.log(\"Reset password data:\", values);\n          setEmailSent(true);\n        }\n      } catch (error) {\n        console.error(\"Password reset failed:\", error);\n      }\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    validation.handleSubmit();\n  };\n\n  if (emailSent || success) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n        <div className=\"w-full max-w-md\">\n          {/* Logo */}\n          <div className=\"text-center mb-6\">\n            <div className=\"inline-block\">\n              <div className=\"h-12 w-12 mx-auto bg-blue-700 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-xl\">R</span>\n              </div>\n            </div>\n            <h1 className=\"mt-4 text-2xl font-bold text-gray-800\">\n              {t('forgotPassword.checkEmail')}\n            </h1>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              {t('forgotPassword.checkEmail')}\n            </p>\n          </div>\n\n          {/* Success Card */}\n          <Card className=\"shadow-lg\">\n            <CardContent className=\"p-6 text-center\">\n              <div className=\"mx-auto w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mb-4\">\n                <CheckCircle className=\"h-6 w-6 text-green-600\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                {t('forgotPassword.success')}\n              </h3>\n              <p className=\"text-sm text-gray-600 mb-6\">\n                {t('forgotPassword.checkEmail')}{\" \"}\n                <span className=\"font-medium\">{validation.values.email}</span>\n              </p>\n              <p className=\"text-xs text-gray-500 mb-6\">\n                {t('forgotPassword.checkEmail')}\n              </p>\n              \n              <div className=\"space-y-3\">\n                <Button\n                  onClick={() => {\n                    setEmailSent(false);\n                    validation.resetForm();\n                  }}\n                  className=\"w-full\"\n                >\n                  {t('forgotPassword.sendButton')}\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => onNavigate?.(\"/login\")}\n                  className=\"w-full\"\n                >\n                  {t('forgotPassword.backToLogin')}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Footer */}\n          <div className=\"mt-8 text-center\">\n            <p className=\"text-xs text-gray-500\">\n              © {new Date().getFullYear()} RentalShop. Crafted with{\" \"}\n              <span className=\"text-red-500\">❤</span> by RentalShop\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* Logo */}\n        <div className=\"text-center mb-6\">\n          <div className=\"inline-block\">\n            <div className=\"h-12 w-12 mx-auto bg-blue-700 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-xl\">R</span>\n            </div>\n          </div>\n          <h1 className=\"mt-4 text-2xl font-bold text-gray-800\">\n            {t('forgotPassword.title')}\n          </h1>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            {t('forgotPassword.subtitle')}\n          </p>\n        </div>\n\n        {/* Reset Password Card */}\n        <Card className=\"shadow-lg\">\n          <CardHeader className=\"text-center border-b border-gray-200 bg-gray-50 rounded-t-lg\">\n            <CardTitle className=\"text-xl font-semibold text-gray-800\">\n              {t('forgotPassword.title')}\n            </CardTitle>\n            <CardDescription className=\"text-sm text-gray-600 mt-1\">\n              {t('forgotPassword.subtitle')}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"p-6\">\n            <form onSubmit={handleSubmit}>\n              {error && (\n                <div className=\"mb-4 p-3 text-sm text-red-700 bg-red-100 border border-red-200 rounded-lg flex items-center\">\n                  <div className=\"w-4 h-4 mr-2\">⚠️</div>\n                  {error}\n                </div>\n              )}\n\n              <div className=\"space-y-4\">\n                {/* Email Field */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    {t('forgotPassword.email')}\n                  </label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      type=\"email\"\n                      placeholder={t('forgotPassword.email')}\n                      className=\"pl-10\"\n                      onChange={validation.handleChange}\n                      onBlur={validation.handleBlur}\n                      value={validation.values.email || \"\"}\n                      name=\"email\"\n                    />\n                  </div>\n                  {validation.touched.email && validation.errors.email && (\n                    <p className=\"mt-1 text-sm text-red-600\">\n                      {validation.errors.email}\n                    </p>\n                  )}\n                </div>\n\n                {/* Submit Button */}\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <div className=\"flex items-center justify-center\">\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      {t('forgotPassword.sendButton')}...\n                    </div>\n                  ) : (\n                    t('forgotPassword.sendButton')\n                  )}\n                </Button>\n              </div>\n            </form>\n          </CardContent>\n        </Card>\n\n        {/* Links */}\n        <div className=\"mt-6 text-center\">\n          <Button\n            variant=\"link\"\n            onClick={() => onNavigate?.(\"/login\")}\n            className=\"inline-flex items-center text-sm\"\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            {t('forgotPassword.backToLogin')}\n          </Button>\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            © {new Date().getFullYear()} RentalShop. Crafted with{\" \"}\n            <span className=\"text-red-500\">❤</span> by RentalShop\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgetPasswordForm; ","import React from 'react';\nimport { Button } from '../ui/button';\nimport { DashboardPeriod } from '@rentalshop/types';\n\ninterface TimePeriodSelectorProps {\n  currentPeriod: DashboardPeriod;\n  onPeriodChange: (period: DashboardPeriod) => void;\n}\n\nexport const TimePeriodSelector: React.FC<TimePeriodSelectorProps> = ({\n  currentPeriod,\n  onPeriodChange\n}) => {\n  const periods = [\n    { key: 'today', label: 'Today', icon: '📅' },\n    { key: 'week', label: 'This Week', icon: '📅' },\n    { key: 'month', label: 'This Month', icon: '📊' },\n    { key: 'quarter', label: 'This Quarter', icon: '📈' },\n    { key: 'year', label: 'This Year', icon: '📈' }\n  ] as const;\n\n  return (\n    <div className=\"mb-6\">\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-lg font-semibold text-gray-900\">Business Overview</h2>\n        <div className=\"flex space-x-2\">\n          {periods.map((period) => (\n            <Button\n              key={period.key}\n              variant={currentPeriod === period.key ? 'default' : 'outline'}\n              size=\"sm\"\n              onClick={() => onPeriodChange(period.key)}\n              className=\"flex items-center space-x-2\"\n            >\n              <span>{period.icon}</span>\n              <span>{period.label}</span>\n            </Button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React from 'react';\nimport { TimePeriodSelector } from '../../../layout/TimePeriodSelector';\nimport { DashboardPeriod } from '@rentalshop/types';\n\ninterface DashboardHeaderProps {\n  period: DashboardPeriod;\n  onPeriodChange: (period: DashboardPeriod) => void;\n}\n\nexport function DashboardHeader({ period, onPeriodChange }: DashboardHeaderProps) {\n  return (\n    <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight text-gray-900 dark:text-white\">\n          Dashboard\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Overview of your rental business performance\n        </p>\n      </div>\n      \n      <TimePeriodSelector\n        currentPeriod={period}\n        onPeriodChange={onPeriodChange}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { DashboardStats as DashboardStatsType } from '@rentalshop/types';\n\ninterface DashboardStatsProps {\n  stats: DashboardStatsType;\n}\n\nexport function DashboardStats({ stats }: DashboardStatsProps) {\n  const statCards = [\n    {\n      title: 'Total Orders',\n      value: stats.totalOrders,\n      change: '+12%',\n      changeType: 'positive' as const,\n      description: 'Total orders this period'\n    },\n    {\n      title: 'Total Revenue',\n      value: `$${stats.totalRevenue.toLocaleString()}`,\n      change: '+8%',\n      changeType: 'positive' as const,\n      description: 'Total revenue this period'\n    },\n    {\n      title: 'Total Customers',\n      value: stats.totalCustomers,\n      change: '+5%',\n      changeType: 'positive' as const,\n      description: 'Active customers'\n    },\n    {\n      title: 'Total Products',\n      value: stats.totalProducts,\n      change: '+2%',\n      changeType: 'positive' as const,\n      description: 'Available products'\n    },\n    {\n      title: 'Pending Orders',\n      value: stats.pendingOrders,\n      change: '-3%',\n      changeType: 'negative' as const,\n      description: 'Orders awaiting processing'\n    },\n    {\n      title: 'Completed Orders',\n      value: stats.completedOrders,\n      change: '+15%',\n      changeType: 'positive' as const,\n      description: 'Successfully completed orders'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {statCards.map((card, index) => (\n        <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              {card.title}\n            </CardTitle>\n            <span className={`text-xs font-medium ${\n              card.changeType === 'positive' \n                ? 'text-green-600 dark:text-green-400' \n                : 'text-red-600 dark:text-red-400'\n            }`}>\n              {card.change}\n            </span>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {card.value}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n              {card.description}\n            </p>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\nimport { useCommonTranslations } from '@rentalshop/hooks';\nimport { useFormattedDaily, useFormattedMonthOnly } from '@rentalshop/utils';\nimport { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  ResponsiveContainer \n} from 'recharts';\n\ninterface RevenueData {\n  period: string;\n  actual: number;\n  projected: number;\n}\n\ninterface IncomeChartProps {\n  data: RevenueData[];\n  loading?: boolean;\n  actualLabel?: string;\n  projectedLabel?: string;\n  noDataText?: string;\n  loadingText?: string;\n  timePeriod?: 'month' | 'year';\n}\n\nexport const IncomeChart: React.FC<IncomeChartProps> = ({ \n  data, \n  loading = false,\n  actualLabel = \"Actual Revenue\",\n  projectedLabel = \"Projected Revenue\",\n  noDataText = \"No data available\",\n  loadingText = \"Loading chart data...\",\n  timePeriod = 'month'\n}) => {\n  const tc = useCommonTranslations();\n  if (loading) {\n    return (\n      <div className=\"h-64 flex items-center justify-center\">\n        <div className=\"text-gray-500\">{loadingText}</div>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"h-64 flex items-center justify-center\">\n        <div className=\"text-gray-500\">{noDataText}</div>\n      </div>\n    );\n  }\n\n  // Transform data for Recharts with localized formatting based on time period\n  const chartData = data.map(item => {\n    // Use different formatting based on time period\n    const formattedPeriod = timePeriod === 'year' \n      ? useFormattedMonthOnly(item.period)  // For yearly: 01/25, 02/25, etc.\n      : useFormattedDaily(item.period);     // For monthly: 01/10, 02/10, etc.\n    \n    return {\n      period: formattedPeriod,\n      [actualLabel]: item.actual,\n      [projectedLabel]: item.projected,\n    };\n  });\n\n  // Custom tooltip formatter\n  const formatTooltip = (value: number, name: string) => [\n    `$${value.toLocaleString()}`,\n    name\n  ];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis \n          dataKey=\"period\" \n          tick={{ fontSize: 12 }}\n          angle={-45}\n          textAnchor=\"end\"\n          height={80}\n        />\n        <YAxis \n          tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`}\n          tick={{ fontSize: 12 }}\n        />\n        <Tooltip \n          formatter={formatTooltip}\n          labelStyle={{ color: '#374151' }}\n        />\n        <Legend />\n        <Bar \n          dataKey={actualLabel} \n          fill=\"#3B82F6\" \n          radius={[4, 4, 0, 0]}\n          name={actualLabel}\n        />\n        <Bar \n          dataKey={projectedLabel} \n          fill=\"#10B981\" \n          radius={[4, 4, 0, 0]}\n          name={projectedLabel}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}; ","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\nimport { useCommonTranslations } from '@rentalshop/hooks';\nimport { useFormattedDaily, useFormattedMonthOnly } from '@rentalshop/utils';\nimport { \n  LineChart, \n  Line, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  ResponsiveContainer \n} from 'recharts';\n\ninterface RevenueData {\n  period: string;\n  actual: number;\n  projected: number;\n}\n\ninterface OrderChartProps {\n  data: RevenueData[];\n  loading?: boolean;\n  legendLabel?: string;\n  tooltipLabel?: string;\n  timePeriod?: 'month' | 'year';\n}\n\nexport const OrderChart: React.FC<OrderChartProps> = ({ \n  data, \n  loading = false, \n  legendLabel = \"Rental Orders\",\n  tooltipLabel = \"orders\",\n  timePeriod = 'month'\n}) => {\n  const tc = useCommonTranslations();\n  if (loading) {\n    return (\n      <div className=\"h-64 flex items-center justify-center\">\n        <div className=\"text-gray-500\">Loading chart data...</div>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"h-64 flex items-center justify-center\">\n        <div className=\"text-gray-500\">No data available</div>\n      </div>\n    );\n  }\n\n  // Transform data for Recharts with localized formatting based on time period\n  const chartData = data.map(item => {\n    // Use different formatting based on time period\n    const formattedPeriod = timePeriod === 'year' \n      ? useFormattedMonthOnly(item.period)  // For yearly: 01/25, 02/25, etc.\n      : useFormattedDaily(item.period);     // For monthly: 01/10, 02/10, etc.\n    \n    return {\n      period: formattedPeriod,\n      [legendLabel]: item.actual,\n    };\n  });\n\n  // Custom tooltip formatter\n  const formatTooltip = (value: number, name: string) => {\n    return [`${value.toLocaleString()} ${tooltipLabel}`, legendLabel];\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis \n          dataKey=\"period\" \n          tick={{ fontSize: 12 }}\n          angle={-45}\n          textAnchor=\"end\"\n          height={80}\n        />\n        <YAxis \n          tickFormatter={(value) => `${value}`}\n          tick={{ fontSize: 12 }}\n          domain={[0, 'dataMax']}\n          allowDecimals={false}\n          tickCount={6}\n        />\n        <Tooltip \n          formatter={formatTooltip}\n          labelStyle={{ color: '#374151' }}\n        />\n        <Legend />\n        <Line \n          type=\"monotone\" \n          dataKey={legendLabel} \n          stroke=\"#3B82F6\" \n          strokeWidth={2}\n          dot={{ fill: '#3B82F6', strokeWidth: 2, r: 4 }}\n          activeDot={{ r: 6 }}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}; ","import React from 'react';\nimport { \n  PieChart as RechartsPieChart, \n  Pie, \n  Cell, \n  ResponsiveContainer, \n  Tooltip, \n  Legend \n} from 'recharts';\n\ninterface PieChartData {\n  name: string;\n  value: number;\n  color: string;\n}\n\ninterface PieChartProps {\n  data: PieChartData[];\n  title?: string;\n  loading?: boolean;\n}\n\nexport const PieChart: React.FC<PieChartProps> = ({ data, title, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"h-64 flex items-center justify-center\">\n        <div className=\"text-gray-500\">Loading chart data...</div>\n      </div>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"h-64 flex items-center justify-center\">\n        <div className=\"text-gray-500\">No data available</div>\n      </div>\n    );\n  }\n\n  // Custom tooltip formatter\n  const formatTooltip = (value: number, name: string) => [\n    `${value} (${((value / data.reduce((sum, item) => sum + item.value, 0)) * 100).toFixed(1)}%)`,\n    name\n  ];\n\n  return (\n    <div className=\"w-full h-full\">\n      {title && (\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg font-semibold text-gray-800\">{title}</h3>\n        </div>\n      )}\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <RechartsPieChart>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.color} />\n            ))}\n          </Pie>\n          <Tooltip formatter={formatTooltip} />\n          <Legend />\n        </RechartsPieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\n\ninterface ListItem {\n  id: number;\n  title: string;\n  subtitle?: string;\n  value?: string | number;\n  status?: string;\n  color?: string;\n}\n\ninterface ColorfulListProps {\n  title: string;\n  subtitle?: string;\n  data: ListItem[];\n  loading?: boolean;\n  maxItems?: number;\n}\n\nconst getColorScheme = (index: number) => {\n  const colors = [\n    'from-blue-500 to-blue-700',\n    'from-purple-500 to-purple-600', \n    'from-blue-600 to-blue-700',\n    'from-orange-500 to-orange-600',\n    'from-pink-500 to-pink-600',\n    'from-indigo-500 to-indigo-600',\n    'from-teal-500 to-teal-600',\n    'from-red-500 to-red-600'\n  ];\n  return colors[index % colors.length];\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'active':\n      return 'bg-emerald-100 text-emerald-800 border-emerald-200';\n    case 'overdue':\n      return 'bg-red-100 text-red-800 border-red-200';\n    case 'completed':\n      return 'bg-blue-100 text-blue-800 border-blue-200';\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n    default:\n      return 'bg-gray-100 text-gray-800 border-gray-200';\n  }\n};\n\nexport const ColorfulList: React.FC<ColorfulListProps> = ({ \n  title, \n  subtitle, \n  data, \n  loading = false,\n  maxItems = 5 \n}) => {\n  if (loading) {\n    return (\n      <Card className=\"border-0 shadow-lg bg-gradient-to-br from-white to-gray-50\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-800\">{title}</CardTitle>\n          {subtitle && <p className=\"text-sm text-gray-600\">{subtitle}</p>}\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: maxItems }).map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-4 animate-pulse\">\n                <div className=\"w-12 h-12 bg-gray-200 rounded-xl\"></div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-5 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card className=\"border-0 shadow-lg bg-gradient-to-br from-white to-gray-50\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-800\">{title}</CardTitle>\n          {subtitle && <p className=\"text-sm text-gray-600\">{subtitle}</p>}\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-12 text-gray-500\">\n            <div className=\"text-4xl mb-4\">📊</div>\n            <p className=\"text-lg\">No data available</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"border-0 shadow-lg bg-gradient-to-br from-white to-gray-50\">\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-xl font-bold text-gray-800\">{title}</CardTitle>\n        {subtitle && <p className=\"text-sm text-gray-600\">{subtitle}</p>}\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {data.slice(0, maxItems).map((item, index) => (\n            <div key={item.id} className=\"group relative overflow-hidden bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:scale-105 border border-gray-100\">\n              <div className=\"absolute top-0 left-0 w-1 h-full bg-gradient-to-b from-blue-400 to-purple-500\"></div>\n              <div className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className={`w-12 h-12 rounded-xl bg-gradient-to-br ${getColorScheme(index)} flex items-center justify-center text-white font-bold text-lg shadow-lg`}>\n                      {index + 1}\n                    </div>\n                    <div>\n                      <p className=\"font-bold text-gray-900 text-lg group-hover:text-blue-700 transition-colors\">\n                        {item.title}\n                      </p>\n                      {item.subtitle && (\n                        <p className=\"text-gray-600 font-medium\">{item.subtitle}</p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    {item.value && (\n                      <p className=\"font-bold text-gray-900 text-lg\">{item.value}</p>\n                    )}\n                    {item.status && (\n                      <span className={`inline-block px-3 py-1 rounded-full text-sm font-semibold border ${getStatusColor(item.status)}`}>\n                        {item.status}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}; ","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\n\ninterface ListItem {\n  id: number;\n  title: string;\n  subtitle?: string;\n  value?: string | number;\n  status?: string;\n}\n\ninterface SimpleListProps {\n  title: string;\n  subtitle?: string;\n  data: ListItem[];\n  loading?: boolean;\n  maxItems?: number;\n}\n\nexport const SimpleList: React.FC<SimpleListProps> = ({ \n  title, \n  subtitle, \n  data, \n  loading = false,\n  maxItems = 5 \n}) => {\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{title}</CardTitle>\n          {subtitle && <p className=\"text-sm text-gray-600\">{subtitle}</p>}\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {Array.from({ length: maxItems }).map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-3 animate-pulse\">\n                <div className=\"w-8 h-8 bg-gray-200 rounded\"></div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{title}</CardTitle>\n          {subtitle && <p className=\"text-sm text-gray-600\">{subtitle}</p>}\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8 text-gray-500\">\n            No data available\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"border-0 shadow-sm\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-lg font-semibold\">{title}</CardTitle>\n        {subtitle && <p className=\"text-sm text-gray-500\">{subtitle}</p>}\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"space-y-2\">\n          {data.slice(0, maxItems).map((item, index) => (\n            <div key={item.id} className=\"flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0 hover:bg-gray-25 transition-colors\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"w-6 h-6 bg-gray-50 rounded flex items-center justify-center text-xs font-medium text-gray-400\">\n                  {index + 1}\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900 text-sm\">{item.title}</p>\n                  {item.subtitle && (\n                    <p className=\"text-xs text-gray-400\">{item.subtitle}</p>\n                  )}\n                </div>\n              </div>\n              <div className=\"text-right\">\n                {item.value && (\n                  <p className=\"font-medium text-gray-900 text-sm\">{item.value}</p>\n                )}\n                {item.status && (\n                  <span className={`text-xs px-1.5 py-0.5 rounded ${\n                    item.status === 'active' ? 'bg-blue-50 text-blue-700' :\n                    item.status === 'overdue' ? 'bg-red-50 text-red-600' :\n                    'bg-gray-50 text-gray-600'\n                  }`}>\n                    {item.status}\n                  </span>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}; ","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\nimport { Badge } from '../ui/badge';\n\ninterface TopCustomer {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n  location: string;\n  orderCount: number;\n  totalSpent: number;\n}\n\ninterface TopCustomersProps {\n  data: TopCustomer[];\n  loading?: boolean;\n}\n\nexport const TopCustomers: React.FC<TopCustomersProps> = ({ data, loading = false }) => {\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Top Customers</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-3 animate-pulse\">\n                <div className=\"w-10 h-10 bg-gray-200 rounded-full\"></div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Top Customers</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8 text-gray-500\">\n            No customer data available\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Top Customers</CardTitle>\n        <p className=\"text-sm text-gray-600\">\n          Highest spending customers in the last 30 days\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {data.slice(0, 10).map((customer, index) => (\n            <div key={customer.id} className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors\">\n              {/* Rank */}\n              <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-r from-blue-400 to-blue-700 flex items-center justify-center text-white font-bold text-sm\">\n                {index + 1}\n              </div>\n              \n              {/* Customer Avatar */}\n              <div className=\"flex-shrink-0 w-12 h-12 rounded-full bg-gradient-to-r from-purple-400 to-purple-600 flex items-center justify-center text-white font-medium\">\n                {customer.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n              </div>\n              \n              {/* Customer Info */}\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center space-x-2\">\n                  <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                    {customer.name}\n                  </h4>\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {customer.orderCount} orders\n                  </Badge>\n                </div>\n                <div className=\"flex items-center space-x-4 mt-1 text-xs text-gray-500\">\n                  <span className=\"truncate\">{customer.email}</span>\n                  <span className=\"truncate\">{customer.phone}</span>\n                  <span className=\"font-medium text-blue-700\">\n                    ${customer.totalSpent.toLocaleString()}\n                  </span>\n                </div>\n                {customer.location && (\n                  <div className=\"text-xs text-gray-400 mt-1 truncate\">\n                    📍 {customer.location}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}; ","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\nimport { Badge } from '../ui/badge';\n\ninterface ProductData {\n  id: number;\n  name: string;\n  rentPrice: number;\n  category: string;\n  rentalCount: number;\n  totalRevenue: number;\n  image?: string | null;\n}\n\ninterface TopProductsProps {\n  data: ProductData[];\n  loading?: boolean;\n}\n\nexport const TopProducts: React.FC<TopProductsProps> = ({ data, loading = false }) => {\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Top Products</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-3 animate-pulse\">\n                <div className=\"w-10 h-10 bg-gray-200 rounded\"></div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Top Products</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8 text-gray-500\">\n            No product data available\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Top Products</CardTitle>\n        <p className=\"text-sm text-gray-600\">\n          Most popular products in the last 30 days\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {data.slice(0, 10).map((product, index) => (\n            <div key={product.id} className=\"flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors\">\n              {/* Rank */}\n              <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-r from-orange-400 to-orange-600 flex items-center justify-center text-white font-bold text-sm\">\n                {index + 1}\n              </div>\n              \n              {/* Product Image */}\n              <div className=\"flex-shrink-0 w-12 h-12 rounded-lg bg-gray-200 flex items-center justify-center overflow-hidden\">\n                {product.image ? (\n                  <img \n                    src={product.image} \n                    alt={product.name}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n                  </svg>\n                )}\n              </div>\n              \n              {/* Product Info */}\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center space-x-2\">\n                  <h4 className=\"text-sm font-medium text-gray-900 truncate\">\n                    {product.name}\n                  </h4>\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {product.category}\n                  </Badge>\n                </div>\n                <div className=\"flex items-center space-x-4 mt-1 text-xs text-gray-500\">\n                  <span>${product.rentPrice}/day</span>\n                  <span>{product.rentalCount} rentals</span>\n                  <span className=\"font-medium text-green-600\">\n                    ${product.totalRevenue.toLocaleString()}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}; ","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { ORDER_STATUS_COLORS } from '@rentalshop/constants';\n\ninterface RecentOrder {\n  id: number;\n  orderNumber: string;\n  customerName: string;\n  customerPhone: string;\n  productNames: string;\n  productImage?: string | null;\n  totalAmount: number;\n  status: string;\n  orderType: string;\n  createdAt: string;\n  createdBy: string;\n  pickupPlanAt?: string;\n  returnPlanAt?: string;\n}\n\ninterface RecentOrdersProps {\n  data: RecentOrder[];\n  loading?: boolean;\n}\n\nconst getStatusColor = (status: string) => {\n  return ORDER_STATUS_COLORS[status as keyof typeof ORDER_STATUS_COLORS] || 'bg-gray-100 text-gray-800';\n};\n\nconst getOrderTypeColor = (orderType: string) => {\n  switch (orderType.toLowerCase()) {\n    case 'rent':\n      return 'bg-orange-100 text-orange-800 border-orange-200';\n    case 'sale':\n      return 'bg-green-100 text-green-800 border-green-200';\n    case 'rent_to_own':\n      return 'bg-purple-100 text-purple-800 border-purple-200';\n    default:\n      return 'bg-gray-100 text-gray-800 border-gray-200';\n  }\n};\n\nexport const RecentOrders: React.FC<RecentOrdersProps> = ({ data, loading = false }) => {\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Orders</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-3 animate-pulse\">\n                <div className=\"w-12 h-12 bg-gray-200 rounded\"></div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Orders</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8 text-gray-500\">\n            No recent orders\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Recent Orders</CardTitle>\n        <p className=\"text-sm text-gray-600\">\n          Latest order activity\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {data.slice(0, 10).map((order) => (\n            <div key={order.id} className=\"flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors\">\n              {/* Product Image */}\n              <div className=\"flex-shrink-0 w-12 h-12 rounded-lg bg-gray-200 flex items-center justify-center overflow-hidden\">\n                {order.productImage ? (\n                  <img \n                    src={order.productImage} \n                    alt={order.productNames}\n                    className=\"w-full h-full object-cover\"\n                  />\n                ) : (\n                  <svg className=\"w-6 h-6 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n                  </svg>\n                )}\n              </div>\n              \n              {/* Order Info */}\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center space-x-2 mb-1\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">\n                    {order.orderNumber}\n                  </h4>\n                  <Badge variant=\"outline\" className={`text-xs ${getOrderTypeColor(order.orderType)}`}>\n                    {order.orderType.toUpperCase()}\n                  </Badge>\n                  <Badge variant=\"outline\" className={`text-xs ${getStatusColor(order.status)}`}>\n                    {order.status.toUpperCase()}\n                  </Badge>\n                </div>\n                \n                <div className=\"text-sm text-gray-600 mb-1\">\n                  <span className=\"font-medium\">{order.customerName}</span>\n                  <span className=\"mx-2\">•</span>\n                  <span>{order.productNames}</span>\n                </div>\n                \n                <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                  <div className=\"flex items-center space-x-4\">\n                    <span>${order.totalAmount.toLocaleString()}</span>\n                    <span>by {order.createdBy}</span>\n                    <span>{formatDate(order.createdAt)}</span>\n                  </div>\n                  \n                  {order.pickupPlanAt && (\n                    <div className=\"text-xs text-blue-700\">\n                      Pickup: {formatDate(order.pickupPlanAt)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}; ","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { OrderChart, IncomeChart } from '../../../charts';\nimport { OrderDataPoint, IncomeData } from '@rentalshop/types';\n\n// Transform data to match chart component expectations\ninterface RevenueData {\n  period: string;\n  actual: number;\n  projected: number;\n}\n\ninterface DashboardChartsProps {\n  orderData: OrderDataPoint[];\n  incomeData: IncomeData[];\n}\n\nexport function DashboardCharts({ orderData, incomeData }: DashboardChartsProps) {\n  // Transform order data to match chart expectations\n  const transformedOrderData: RevenueData[] = orderData.map((order, index) => ({\n    period: order.date,\n    actual: order.revenue,\n    projected: order.revenue * 1.1 // Simple projection\n  }));\n\n  // Transform income data to match chart expectations\n  const transformedIncomeData: RevenueData[] = incomeData.map((income, index) => ({\n    period: income.date,\n    actual: income.income,\n    projected: income.income * 1.1 // Simple projection\n  }));\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Order Trends</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <OrderChart data={transformedOrderData} />\n        </CardContent>\n      </Card>\n      \n      <Card>\n        <CardHeader>\n          <CardTitle>Income vs Expenses</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <IncomeChart data={transformedIncomeData} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { TodaysFocus } from '@rentalshop/types';\n\ninterface DashboardFocusProps {\n  focus: TodaysFocus[];\n}\n\nexport function DashboardFocus({ focus }: DashboardFocusProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'in-progress':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Today's Focus</CardTitle>\n        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n          Priority tasks and key focus areas\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {focus.map((item, index) => (\n            <div key={index} className=\"flex items-start space-x-3 p-3 rounded-lg border border-gray-200 dark:border-gray-700\">\n              <div className=\"flex-shrink-0\">\n                <div className={`w-2 h-2 rounded-full ${\n                  item.status === 'completed' ? 'bg-green-500' :\n                  item.status === 'in-progress' ? 'bg-blue-500' : 'bg-yellow-500'\n                }`} />\n              </div>\n              \n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {item.priority}\n                  </p>\n                  <Badge \n                    variant=\"outline\" \n                    className={getStatusColor(item.status)}\n                  >\n                    {item.status.replace('-', ' ')}\n                  </Badge>\n                </div>\n                \n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                  {item.description}\n                </p>\n                \n                {item.deadline && (\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\n                    Deadline: {item.deadline}\n                  </p>\n                )}\n              </div>\n            </div>\n          ))}\n          \n          {focus.length === 0 && (\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n              <p>No focus items for today</p>\n              <p className=\"text-sm\">Great job staying on top of everything!</p>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\n\ninterface DashboardActionsProps {\n  onActionClick: (action: string) => void;\n}\n\nexport function DashboardActions({ onActionClick }: DashboardActionsProps) {\n  const actions = [\n    {\n      id: 'create-order',\n      label: 'Create Order',\n      description: 'Start a new rental or sale order',\n      icon: '📋',\n      variant: 'default' as const\n    },\n    {\n      id: 'add-product',\n      label: 'Add Product',\n      description: 'Add new product to inventory',\n      icon: '📦',\n      variant: 'secondary' as const\n    },\n    {\n      id: 'add-customer',\n      label: 'Add Customer',\n      description: 'Register new customer',\n      icon: '👤',\n      variant: 'outline' as const\n    },\n    {\n      id: 'view-reports',\n      label: 'View Reports',\n      description: 'Generate business reports',\n      icon: '📊',\n      variant: 'outline' as const\n    },\n    {\n      id: 'manage-inventory',\n      label: 'Manage Inventory',\n      description: 'Check stock levels and availability',\n      icon: '🏪',\n      variant: 'outline' as const\n    },\n    {\n      id: 'customer-support',\n      label: 'Customer Support',\n      description: 'Handle customer inquiries',\n      icon: '💬',\n      variant: 'outline' as const\n    }\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Quick Actions</CardTitle>\n        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n          Common tasks and shortcuts\n        </p>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {actions.map((action) => (\n            <Button\n              key={action.id}\n              variant={action.variant}\n              className=\"h-auto p-4 flex flex-col items-start space-y-2 text-left\"\n              onClick={() => onActionClick(action.id)}\n            >\n              <div className=\"flex items-center space-x-2 w-full\">\n                <span className=\"text-xl\">{action.icon}</span>\n                <div className=\"flex-1\">\n                  <div className=\"font-medium\">{action.label}</div>\n                  <div className=\"text-xs opacity-80\">{action.description}</div>\n                </div>\n              </div>\n            </Button>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent } from '../../../ui/card';\n\ninterface DashboardNavigationProps {\n  activeTab: string;\n}\n\nexport function DashboardNavigation({ activeTab }: DashboardNavigationProps) {\n  const tabs = [\n    { id: 'overview', label: 'Overview', description: 'General business metrics' },\n    { id: 'orders', label: 'Orders', description: 'Order management and tracking' },\n    { id: 'customers', label: 'Customers', description: 'Customer insights and data' },\n    { id: 'products', label: 'Products', description: 'Inventory and product analytics' },\n    { id: 'financial', label: 'Financial', description: 'Revenue and expense tracking' },\n    { id: 'reports', label: 'Reports', description: 'Detailed business reports' }\n  ];\n\n  return (\n    <Card>\n      <CardContent className=\"p-0\">\n        <div className=\"flex flex-wrap border-b border-gray-200 dark:border-gray-700\">\n          {tabs.map((tab) => (\n            <Button\n              key={tab.id}\n              variant={activeTab === tab.id ? 'default' : 'ghost'}\n              className={`flex-1 min-w-0 px-4 py-3 rounded-none border-b-2 ${\n                activeTab === tab.id\n                  ? 'border-primary bg-primary/5 text-primary'\n                  : 'border-transparent hover:bg-gray-50 dark:hover:bg-gray-800'\n              }`}\n            >\n              <div className=\"text-left\">\n                <div className=\"font-medium\">{tab.label}</div>\n                <div className=\"text-xs opacity-70\">{tab.description}</div>\n              </div>\n            </Button>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { \n  StatsSkeleton, \n  CardSkeleton,\n  GridSkeleton \n} from '../../../ui/skeleton';\n\nexport function DashboardLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-48 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-4 w-64 bg-gray-200 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* Stats Cards */}\n      <StatsSkeleton />\n      \n      {/* Charts Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-64 w-full bg-gray-200 rounded-lg animate-pulse\" />\n        </div>\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-64 w-full bg-gray-200 rounded-lg animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* Recent Activity */}\n      <div className=\"space-y-4\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <div className=\"space-y-3\">\n          {Array.from({ length: 5 }).map((_, i) => (\n            <div key={i} className=\"flex items-center gap-3 p-3 border rounded-lg\">\n              <div className=\"h-8 w-8 bg-gray-200 rounded-full animate-pulse\" />\n              <div className=\"flex-1 space-y-2\">\n                <div className=\"h-4 w-48 bg-gray-200 rounded animate-pulse\" />\n                <div className=\"h-3 w-32 bg-gray-200 rounded animate-pulse\" />\n              </div>\n              <div className=\"h-4 w-20 bg-gray-200 rounded animate-pulse\" />\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      {/* Quick Actions */}\n      <div className=\"space-y-4\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <GridSkeleton items={4} />\n      </div>\n    </div>\n  );\n}\n\nexport function DashboardFocusLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"space-y-2\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <div className=\"h-4 w-48 bg-gray-200 rounded animate-pulse\" />\n      </div>\n      \n      {/* Focus Items */}\n      <div className=\"space-y-4\">\n        {Array.from({ length: 3 }).map((_, i) => (\n          <div key={i} className=\"p-4 border rounded-lg\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <div className=\"h-5 w-32 bg-gray-200 rounded animate-pulse\" />\n              <div className=\"h-6 w-16 bg-gray-200 rounded animate-pulse\" />\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n              <div className=\"h-4 w-3/4 bg-gray-200 rounded animate-pulse\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport React, { useState } from 'react';\nimport { Sidebar } from './sidebar';\n\ninterface DashboardWrapperProps {\n  children: React.ReactNode;\n  user?: any;\n  onLogout?: () => void;\n  currentPath?: string;\n  hideSidebar?: boolean;\n  allowCollapse?: boolean;\n}\n\nexport default function DashboardWrapper({ \n  children, \n  user, \n  onLogout = () => {}, \n  currentPath = '',\n  hideSidebar = false,\n  allowCollapse = true\n}: DashboardWrapperProps) {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  const handleCollapseToggle = () => {\n    setSidebarCollapsed(!sidebarCollapsed);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      {!hideSidebar && (\n        <Sidebar \n          user={user}\n          onLogout={onLogout}\n          currentPath={currentPath}\n          isCollapsed={sidebarCollapsed}\n          onCollapseToggle={allowCollapse ? handleCollapseToggle : undefined}\n        />\n      )}\n      <main className={`flex-1 overflow-y-auto ${!hideSidebar ? 'transition-all duration-300 ease-in-out' : ''}`}>\n        <div className=\"p-6\">\n          {children}\n        </div>\n      </main>\n    </div>\n  );\n} ","'use client';\n\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { cn } from '@rentalshop/ui';\nimport { Button, Card } from '@rentalshop/ui';\nimport { ChevronLeft, ChevronRight, Home, Users, Package, ShoppingCart, Building2, Settings } from 'lucide-react';\n// @ts-ignore - hooks package doesn't have type declarations yet\nimport { useOptimisticNavigation } from '@rentalshop/hooks';\n\nexport interface SidebarProps {\n  user?: any;\n  isOpen?: boolean;\n  onToggle?: () => void;\n  onLogout?: () => void;\n  currentPath?: string;\n  isCollapsed?: boolean;\n  onCollapseToggle?: () => void;\n}\n\ninterface MenuItem {\n  label: string;\n  href: string;\n  icon: React.ReactNode;\n  badge?: string;\n}\n\nconst menuItems: MenuItem[] = [\n  {\n    label: 'Dashboard',\n    href: '/dashboard',\n    icon: (\n      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\" />\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z\" />\n      </svg>\n    ),\n  },\n  {\n    label: 'Customers',\n    href: '/customers',\n    icon: (\n      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n      </svg>\n    ),\n  },\n  {\n    label: 'Products',\n    href: '/products',\n    icon: (\n      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\" />\n      </svg>\n    ),\n  },\n  {\n    label: 'Orders',\n    href: '/orders',\n    icon: (\n      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\" />\n      </svg>\n    ),\n    badge: '3',\n  },\n  {\n    label: 'Outlets',\n    href: '/outlets',\n    icon: (\n      <Building2 className=\"w-5 h-5\" />\n    ),\n  },\n  {\n    label: 'Users',\n    href: '/users',\n    icon: (\n      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n      </svg>\n    ),\n  },\n  {\n    label: 'Settings',\n    href: '/settings',\n    icon: (\n      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n      </svg>\n    ),\n  },\n];\n\nexport const Sidebar: React.FC<SidebarProps> = ({\n  user,\n  isOpen = false,\n  onToggle,\n  onLogout,\n  currentPath = '',\n  isCollapsed = false,\n  onCollapseToggle,\n}) => {\n  const router = useRouter();\n  const { navigate, navigatingTo } = useOptimisticNavigation();\n\n  // Prefetch all pages on mount for instant navigation\n  useEffect(() => {\n    menuItems.forEach(item => {\n      router.prefetch(item.href);\n    });\n  }, [router]);\n\n  return (\n    <>\n      {/* Mobile overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\n          onClick={onToggle}\n        />\n      )}\n\n      {/* Navigation Loading Overlay - REMOVED for instant transitions */}\n      {/* Let Next.js loading.tsx handle skeleton loading instead */}\n\n      {/* Sidebar */}\n      <aside\n        className={cn(\n          'fixed inset-y-0 left-0 z-50 bg-white border-r border-gray-200 transform transition-all duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0',\n          isOpen ? 'translate-x-0' : '-translate-x-full',\n          isCollapsed ? 'w-16' : 'w-64'\n        )}\n      >\n        <div className=\"flex flex-col h-full\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between h-16 px-6 border-b border-gray-200\">\n            <button \n              onClick={() => navigate('/dashboard')}\n              className=\"flex items-center space-x-2 hover:opacity-80 transition-opacity\"\n            >\n              <div className=\"w-8 h-8 bg-green-600 rounded-lg flex items-center justify-center flex-shrink-0\">\n                <span className=\"text-white font-bold text-sm\">R</span>\n              </div>\n              {!isCollapsed && (\n                <span className=\"font-bold text-2xl text-gray-900 leading-none\">RentalShop</span>\n              )}\n            </button>\n            \n            <div className=\"flex items-center space-x-2\">\n              {/* Collapse Toggle Button */}\n              {onCollapseToggle && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={onCollapseToggle}\n                  className=\"h-8 w-8 p-0 hover:bg-gray-100\"\n                  title={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n                >\n                  {isCollapsed ? (\n                    <ChevronRight className=\"w-4 h-4\" />\n                  ) : (\n                    <ChevronLeft className=\"w-4 h-4\" />\n                  )}\n                </Button>\n              )}\n              \n              {/* Close button for mobile */}\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={onToggle}\n                className=\"lg:hidden text-gray-500 hover:text-gray-700 focus:outline-none h-8 w-8 p-0\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </Button>\n            </div>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"flex-1 px-4 py-6 space-y-2 overflow-y-auto\">\n            {/* Hidden Links for Next.js prefetching */}\n            <div className=\"hidden\">\n              {menuItems.map((item) => (\n                <Link key={`prefetch-${item.href}`} href={item.href} prefetch={true}>\n                  {item.label}\n                </Link>\n              ))}\n            </div>\n\n            {menuItems.map((item) => {\n              const isActive = currentPath === item.href;\n              const isNavigating = navigatingTo === item.href;\n              const shouldHighlight = isActive || isNavigating;\n              \n              return (\n                <button\n                  key={item.href}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    navigate(item.href);\n                  }}\n                  onMouseEnter={() => {\n                    // Aggressive prefetch on hover\n                    router.prefetch(item.href);\n                  }}\n                  className={cn(\n                    'w-full flex items-center justify-between px-3 py-2 text-sm font-medium rounded-lg transition-all duration-150 group',\n                    shouldHighlight\n                      ? 'bg-green-100 text-green-700 border-r-2 border-green-600'\n                      : 'text-slate-700 hover:bg-slate-100 hover:text-slate-900',\n                    // Add click feedback\n                    navigatingTo === item.href && 'bg-green-50 text-green-700 border-r-2 border-green-600'\n                  )}\n                  title={isCollapsed ? item.label : undefined}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <span className={cn(\n                      'flex-shrink-0 transition-colors duration-150',\n                      shouldHighlight ? 'text-green-600' : 'text-slate-500'\n                    )}>\n                      {item.icon}\n                    </span>\n                    {!isCollapsed && (\n                      <span className={cn(\n                        'text-base transition-all duration-150',\n                        shouldHighlight ? 'font-medium' : 'font-normal'\n                      )}>{item.label}</span>\n                    )}\n                  </div>\n                  \n                  {!isCollapsed && item.badge && (\n                    <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-500 rounded-full\">\n                      {item.badge}\n                    </span>\n                  )}\n                </button>\n              );\n            })}\n          </nav>\n\n          {/* User Profile */}\n          {user && (\n            <div className=\"p-4 border-t border-gray-200\">\n              <Card className=\"p-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 bg-green-600 rounded-full flex items-center justify-center flex-shrink-0\">\n                    <span className=\"text-white font-bold text-sm\">\n                      {user.firstName?.[0] || user.email?.[0] || 'U'}\n                    </span>\n                  </div>\n                  {!isCollapsed && (\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium text-gray-900 truncate\">\n                        {user.firstName && user.lastName \n                          ? `${user.firstName} ${user.lastName}`\n                          : user.email || 'User'\n                        }\n                      </p>\n                      <p className=\"text-xs text-gray-500 truncate\">\n                        {user.role || 'User'}\n                      </p>\n                    </div>\n                  )}\n                </div>\n                \n                {!isCollapsed && (\n                  <div className=\"mt-4 space-y-2\">\n                    <button\n                      onClick={() => navigate('/profile')}\n                      className=\"block w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-lg transition-colors duration-200\"\n                    >\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                        </svg>\n                        <span>Profile</span>\n                      </div>\n                    </button>\n                    \n                    <Button\n                      onClick={onLogout}\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"w-full justify-start\"\n                    >\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                      </svg>\n                      Logout\n                    </Button>\n                  </div>\n                )}\n              </Card>\n            </div>\n          )}\n        </div>\n      </aside>\n    </>\n  );\n}; ","import React from 'react';\nimport { \n  DashboardHeader,\n  DashboardStats,\n  DashboardCharts,\n  DashboardActions,\n  DashboardFocus,\n  DashboardNavigation\n} from './components';\nimport DashboardWrapper from '../../layout/DashboardWrapper';\nimport { DashboardData } from '@rentalshop/types';\n\ninterface DashboardProps {\n  data: DashboardData;\n  onPeriodChange: (period: string) => void;\n  onActionClick: (action: string) => void;\n}\n\nexport function Dashboard({ data, onPeriodChange, onActionClick }: DashboardProps) {\n  return (\n    <DashboardWrapper>\n      <div className=\"space-y-6\">\n        <DashboardHeader \n          period={data.period}\n          onPeriodChange={onPeriodChange}\n        />\n        \n        <DashboardStats stats={data.stats} />\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <DashboardCharts \n            orderData={data.orderData}\n            incomeData={data.incomeData}\n          />\n          <DashboardFocus focus={data.todaysFocus} />\n        </div>\n        \n        <DashboardActions onActionClick={onActionClick} />\n        <DashboardNavigation activeTab={data.activeTab} />\n      </div>\n    </DashboardWrapper>\n  );\n}\n\nexport default Dashboard;\n","'use client';\n\nimport React from 'react';\nimport { \n  ProductPageHeader,\n  ProductFilters, \n  ProductTable\n} from './components';\nimport { \n  PageWrapper,\n  PageContent,\n  Pagination,\n  EmptyState,\n  Button,\n  Card,\n  CardContent\n} from '@rentalshop/ui';\nimport { \n  ProductSearchResult as ProductData, \n  ProductFilters as ProductFiltersType\n} from '@rentalshop/types';\nimport { useUserRole, useProductTranslations } from '@rentalshop/hooks';\nimport { \n  Package as PackageIcon, \n  Download\n} from 'lucide-react';\n\ninterface ProductsProps {\n  // Data props (required for external data mode - URL state pattern)\n  data?: ProductData;\n  filters?: ProductFiltersType;\n  onFiltersChange?: (filters: ProductFiltersType) => void;\n  onSearchChange?: (searchValue: string) => void;\n  onClearFilters?: () => void;\n  onProductAction?: (action: string, productId: number) => void;\n  onPageChange?: (page: number) => void;\n  onSort?: (column: string) => void;\n  \n  // Display props\n  title?: string;\n  subtitle?: string;\n  showExportButton?: boolean;\n  showAddButton?: boolean;\n  addButtonText?: string;\n  exportButtonText?: string;\n  showStats?: boolean;\n  currentUser?: any;\n  onExport?: () => void;\n  className?: string;\n}\n\n/**\n * ✅ SIMPLIFIED PRODUCTS COMPONENT (Modern Pattern)\n * \n * - Clean presentation component (like Orders.tsx)\n * - No internal state management\n * - Works with external data (URL state pattern)\n * - Single responsibility: render products UI\n * - ~100 lines (was 561 lines before cleanup)\n */\nexport function Products({ \n  // Data props\n  data, \n  filters = {}, \n  onFiltersChange = () => {}, \n  onSearchChange = () => {},\n  onClearFilters = () => {},\n  onProductAction = () => {}, \n  onPageChange = () => {},\n  onSort = () => {},\n  \n  // Display props\n  title = \"Products\",\n  subtitle = \"Manage your product catalog\",\n  showExportButton = false,\n  showAddButton = false,\n  addButtonText = \"Add Product\",\n  exportButtonText = \"Export Products\",\n  showStats = false,\n  currentUser,\n  onExport,\n  className = \"\"\n}: ProductsProps) {\n  \n  // User role check for permissions\n  const { canManageProducts } = useUserRole(currentUser);\n  \n  // Get translations\n  const t = useProductTranslations();\n  \n  // Handler for export button\n  const handleExport = () => {\n    if (onExport) {\n      onExport();\n    } else {\n      console.log('Export functionality not implemented');\n    }\n  };\n\n  // Handler for add product button  \n  const handleAddProduct = () => {\n    console.log('Add product functionality should be implemented in page');\n  };\n\n  // Default empty data\n  const products = data?.products || [];\n  const totalProducts = data?.total || 0;\n  const currentPage = data?.page || 1;\n  const totalPages = data?.totalPages || 1;\n  const limit = data?.limit || 25;\n\n  // Memoize handlers to prevent child re-renders\n  const memoizedOnFiltersChange = React.useCallback(onFiltersChange, [onFiltersChange]);\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnClearFilters = React.useCallback(onClearFilters, [onClearFilters]);\n  const memoizedOnProductAction = React.useCallback(onProductAction, [onProductAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort, [onSort]);\n\n  return (\n    <div className={`flex flex-col h-full ${className}`}>\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 space-y-4\">\n        <ProductPageHeader\n          title={title}\n          subtitle={subtitle}\n        >\n          {showAddButton && canManageProducts && (\n            <Button\n              onClick={handleAddProduct}\n              className=\"flex items-center space-x-2\"\n            >\n              <PackageIcon className=\"w-4 h-4\" />\n              <span>{addButtonText}</span>\n            </Button>\n          )}\n          {showExportButton && (\n            <Button\n              variant=\"outline\"\n              onClick={handleExport}\n              className=\"flex items-center space-x-2\"\n            >\n              <Download className=\"w-4 h-4\" />\n              <span>{exportButtonText}</span>\n            </Button>\n          )}\n        </ProductPageHeader>\n\n        {/* Compact Filters - All in one row */}\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <ProductFilters\n                filters={filters}\n                onFiltersChange={memoizedOnFiltersChange}\n                onSearchChange={memoizedOnSearchChange}\n                onClearFilters={memoizedOnClearFilters}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0 mt-4\">\n        {products.length > 0 ? (\n          <ProductTable\n            products={products}\n            onProductAction={memoizedOnProductAction}\n            sortBy={filters.sortBy || \"name\"}\n            sortOrder={filters.sortOrder || \"asc\"}\n            onSort={memoizedOnSort}\n          />\n        ) : (\n          <EmptyState\n            icon={PackageIcon}\n            title={t('messages.noProducts')}\n            description={\n              filters.search || filters.categoryId || filters.outletId\n                ? t('messages.tryAdjustingSearch')\n                : t('messages.getStarted')\n            }\n          />\n        )}\n      </div>\n\n      {/* Fixed Pagination Section - Always at Bottom */}\n      {products.length > 0 && totalProducts > limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            total={totalProducts}\n            limit={limit}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"products\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Products;\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { ProductViewMode } from '@rentalshop/types';\n\ninterface ProductHeaderProps {\n  totalProducts: number;\n  viewMode: 'grid' | 'table';\n  onViewModeChange: (mode: 'grid' | 'table') => void;\n}\n\nexport function ProductHeader({ totalProducts, viewMode, onViewModeChange }: ProductHeaderProps) {\n  const viewModes: ProductViewMode[] = [\n    { value: 'grid', label: 'Grid View', icon: '⊞' },\n    { value: 'table', label: 'Table View', icon: '⊟' }\n  ];\n\n  return (\n    <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-4 sm:space-y-0\">\n      <div className=\"flex items-center space-x-2\">\n        {viewModes.map((mode) => (\n          <Button\n            key={mode.value}\n            variant={viewMode === mode.value ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => onViewModeChange(mode.value)}\n            className=\"flex items-center space-x-2\"\n          >\n            <span className=\"text-lg\">{mode.icon}</span>\n            <span className=\"hidden sm:inline\">{mode.label}</span>\n          </Button>\n        ))}\n      </div>\n    </div>\n  );\n}\n","'use client'\n\nimport React from 'react';\nimport { Button } from '../../../ui/button';\n\ninterface ProductPageHeaderProps {\n  title: string;\n  subtitle?: string;\n  onBack?: () => void;\n  backText?: string;\n  backUrl?: string;\n  children?: React.ReactNode;\n}\n\nexport const ProductPageHeader: React.FC<ProductPageHeaderProps> = ({\n  title,\n  subtitle,\n  onBack,\n  backText = 'Back to Products',\n  backUrl,\n  children\n}) => {\n  const handleBack = () => {\n    if (onBack) {\n      onBack();\n    } else if (backUrl) {\n      window.location.href = backUrl;\n    }\n  };\n\n  return (\n    <div className=\"mb-6\">\n      {/* Back Button */}\n      {(onBack || backUrl) && (\n        <Button \n          onClick={handleBack} \n          variant=\"outline\" \n          className=\"mb-4\"\n        >\n          ←{backText}\n        </Button>\n      )}\n    </div>\n  );\n};\n","'use client';\n\nimport React, { useCallback } from 'react';\nimport { Input, Button } from '@rentalshop/ui';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@rentalshop/ui';\nimport { Card, CardHeader, CardTitle, CardContent } from '@rentalshop/ui';\nimport { ProductFilters as ProductFiltersType } from '@rentalshop/types';\nimport { useOutletsData, useCategoriesData, useProductTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { Search } from 'lucide-react';\n\ninterface ProductFiltersProps {\n  filters: ProductFiltersType;\n  onFiltersChange: (filters: ProductFiltersType) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n}\n\n/**\n * ✅ SIMPLIFIED PRODUCT FILTERS COMPONENT\n * \n * Only 3 essential filters:\n * 1. Search input\n * 2. Outlet filter\n * 3. Category filter\n * \n * Features:\n * - Uses deduplicated hooks for filter data (no duplicate API calls)\n * - Clean and minimal UI\n * - Responsive grid layout\n */\nexport function ProductFilters({ filters, onFiltersChange, onSearchChange, onClearFilters }: ProductFiltersProps) {\n  // Get translations\n  const t = useProductTranslations();\n  const tc = useCommonTranslations();\n  \n  // ✅ MODERN: Use deduplicated hooks for filter data\n  const { outlets, loading: loadingOutlets } = useOutletsData();\n  const { categories, loading: loadingCategories } = useCategoriesData();\n\n  // Debug logging\n  console.log('🔍 ProductFilters: Categories data:', {\n    categories,\n    isArray: Array.isArray(categories),\n    count: categories?.length || 0,\n    loading: loadingCategories,\n    firstCategory: categories?.[0]?.name || 'none'\n  });\n\n  // ============================================================================\n  // FILTER HANDLERS\n  // ============================================================================\n\n  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    onSearchChange(value);\n  }, [onSearchChange]);\n\n  const handleOutletChange = useCallback((value: string) => {\n    const outletId = value === 'all' ? undefined : parseInt(value);\n    onFiltersChange({ outletId });\n  }, [onFiltersChange]);\n\n  const handleCategoryChange = useCallback((value: string) => {\n    const categoryId = value === 'all' ? undefined : parseInt(value);\n    onFiltersChange({ categoryId });\n  }, [onFiltersChange]);\n\n  // Check if any filters are active\n  const hasActiveFilters = !!(filters.search || filters.outletId || filters.categoryId);\n\n  // ============================================================================\n  // RENDER - Compact inline filters (Following Orders pattern)\n  // ============================================================================\n\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            type=\"text\"\n            placeholder={t('search.placeholder')}\n            value={filters.search || ''}\n            onChange={handleSearchChange}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Outlet Filter */}\n      <Select\n        value={filters.outletId?.toString() || 'all'}\n        onValueChange={handleOutletChange}\n        disabled={loadingOutlets}\n      >\n        <SelectTrigger className=\"w-[160px] h-10\">\n          <SelectValue placeholder={t('filters.outletLabel')} />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">{t('filters.allOutlets')}</SelectItem>\n          {outlets.map((outlet) => (\n            <SelectItem key={outlet.id} value={outlet.id.toString()}>\n              {outlet.name}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n\n      {/* Category Filter */}\n      <Select\n        value={filters.categoryId?.toString() || 'all'}\n        onValueChange={handleCategoryChange}\n        disabled={loadingCategories}\n      >\n        <SelectTrigger className=\"w-[160px] h-10\">\n          <SelectValue placeholder={t('filters.categoryLabel')} />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">{t('filters.allCategories')}</SelectItem>\n          {categories.map((category) => (\n            <SelectItem key={category.id} value={category.id.toString()}>\n              {category.name}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n\n      {/* Clear Filters */}\n      {hasActiveFilters && onClearFilters && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          {t('filters.clear')}\n        </Button>\n      )}\n    </>\n  );\n}\n","'use client';\n\nimport React, { useState } from 'react';\nimport { ProductCard } from './ProductCard';\nimport { Product } from '@rentalshop/types';\nimport { Button } from '../../../ui/button';\n\nimport type { ProductWithDetails, Category, Outlet } from '@rentalshop/types';\n\ninterface ProductGridProps {\n  products: Product[];\n  onProductAction: (action: string, productId: number) => void;\n  // New props for enhanced functionality\n  categories?: Category[];\n  outlets?: Outlet[];\n  merchantId?: number;\n  onProductCreated?: (product: ProductWithDetails) => void;\n  onProductUpdated?: (product: ProductWithDetails) => void;\n  onError?: (error: string) => void;\n  showAddButton?: boolean;\n}\n\nexport function ProductGrid({ \n  products, \n  onProductAction,\n  categories = [],\n  outlets = [],\n  merchantId = '',\n  onProductCreated,\n  onProductUpdated,\n  onError,\n  showAddButton = false\n}: ProductGridProps) {\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n\n  const handleAddProduct = () => {\n    setIsAddDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsAddDialogOpen(false);\n  };\n\n  const handleSuccess = (product: ProductWithDetails) => {\n    if (onProductCreated) {\n      onProductCreated(product);\n    }\n    setIsAddDialogOpen(false);\n  };\n\n  const handleError = (error: string) => {\n    if (onError) {\n      onError(error);\n    }\n  };\n\n  if (products.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"text-gray-500 dark:text-gray-400\">\n          <div className=\"text-4xl mb-4\">📦</div>\n          <h3 className=\"text-lg font-medium mb-2\">No products found</h3>\n          <p className=\"text-sm mb-4\">\n            Try adjusting your filters or add some products to get started.\n          </p>\n          {showAddButton && categories.length > 0 && outlets.length > 0 && merchantId && (\n            <Button\n              onClick={handleAddProduct}\n              className=\"px-4 py-2\"\n            >\n              Add Your First Product\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {products.map((product) => (\n          <ProductCard\n            key={product.id}\n            id={product.id}\n            name={product.name}\n            description={product.description}\n            stock={product.stock}\n            renting={product.renting}\n            available={product.available}\n            rentPrice={product.rentPrice}\n            deposit={product.deposit}\n            images={product.images || []}\n            category={{ name: product.category }}\n            outlet={{ name: product.outletName }}\n            onView={(productId) => onProductAction('view', productId)}\n            onEdit={(productId) => onProductAction('edit', productId)}\n            onDelete={(productId) => onProductAction('delete', productId)}\n            variant=\"admin\"\n            // Enhanced props for edit functionality\n            categories={categories}\n            outlets={outlets}\n            merchantId={merchantId}\n            onProductUpdated={onProductUpdated}\n            onError={onError}\n          />\n        ))}\n      </div>\n\n\n    </>\n  );\n}\n","'use client';\n\nimport React, { useState } from 'react';\nimport { Card } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { cn } from '../../../../lib/cn';\nimport { Eye, Edit, Package } from 'lucide-react';\nimport { getProductImageUrl } from '@rentalshop/utils';\n\nimport type { ProductWithDetails, Category, Outlet } from '@rentalshop/types';\n\nexport interface ProductCardProps {\n  id: number;\n  name: string;\n  description?: string;\n  stock: number;\n  renting: number;\n  available: number;\n  rentPrice: number;\n  salePrice?: number;\n  deposit: number;\n  images: string[] | string;\n  category: {\n    name: string;\n  };\n  outlet: {\n    name: string;\n  };\n  onRent?: (productId: number) => void;\n  onView?: (productId: number) => void;\n  onEdit?: (productId: number) => void;\n  onDelete?: (productId: number) => void;\n  variant?: 'client' | 'admin' | 'mobile';\n  className?: string;\n  // New props for enhanced functionality\n  categories?: Category[];\n  outlets?: Outlet[];\n  merchantId?: number;\n  onProductUpdated?: (product: ProductWithDetails) => void;\n  onError?: (error: string) => void;\n}\n\nexport const ProductCard: React.FC<ProductCardProps> = ({\n  id,\n  name,\n  description,\n  stock,\n  renting,\n  available,\n  rentPrice,\n  salePrice,\n  deposit,\n  images,\n  category,\n  outlet,\n  onRent,\n  onView,\n  onEdit,\n  onDelete,\n  variant = 'client',\n  className,\n  // New props\n  categories = [],\n  outlets = [],\n  merchantId = '',\n  onProductUpdated,\n  onError\n}) => {\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  \n  // Normalize images to check if we have any\n  const normalizeImages = (images: string[] | string | null | undefined): string[] => {\n    if (!images) return [];\n    if (Array.isArray(images)) return images.filter(Boolean);\n    if (typeof images === 'string') {\n      try {\n        const parsed = JSON.parse(images);\n        return Array.isArray(parsed) ? parsed.filter(Boolean) : images.split(',').filter(Boolean);\n      } catch {\n        return images.split(',').filter(Boolean);\n      }\n    }\n    return [];\n  };\n\n  const imageArray = normalizeImages(images);\n  \n  // Use utility function to get proper image URL from S3 or placeholder\n  const productData = {\n    id,\n    name,\n    images: images\n  };\n  const mainImage = getProductImageUrl(productData as any);\n  const hasImages = imageArray.length > 0 && mainImage && mainImage.trim() !== '';\n  const isAvailable = available > 0;\n\n  // Enhanced edit handler that opens the dialog\n  const handleEdit = () => {\n    if (categories.length > 0 && outlets.length > 0 && merchantId) {\n      setIsEditDialogOpen(true);\n    } else if (onEdit) {\n      // Fallback to original onEdit if enhanced props not provided\n      onEdit(id);\n    }\n  };\n\n  // Transform current product data to ProductWithDetails format for editing\n  const getProductForEdit = (): ProductWithDetails => ({\n    id,\n    name,\n    description: description || '',\n    barcode: '',\n    categoryId: 0, // This would need to be passed from parent\n    rentPrice,\n    salePrice,\n    deposit,\n    totalStock: stock,\n    images: Array.isArray(images) ? images.join(',') : (typeof images === 'string' ? images : ''),\n    isActive: true,\n    outletStock: [{\n      id: 0, // This would need to be passed from parent\n      outletId: 0, // This would need to be passed from parent\n      stock,\n      available,\n      renting,\n      outlet: { id: 0, name: outlet.name, merchantId: merchantId || 0 }\n    }],\n    category: { id: 0, name: category.name },\n    merchant: { id: typeof merchantId === 'number' ? merchantId : 0, name: '' },\n    createdAt: new Date(),\n    updatedAt: new Date()\n  });\n\n  const handleSuccess = (updatedProduct: ProductWithDetails) => {\n    onProductUpdated?.(updatedProduct);\n    setIsEditDialogOpen(false);\n  };\n\n  const handleError = (error: string) => {\n    onError?.(error);\n  };\n\n  return (\n    <>\n      <Card className={cn('overflow-hidden transition-all hover:shadow-lg', className)}>\n        {/* Product Image */}\n        <div className=\"relative aspect-square overflow-hidden bg-gray-100\">\n          {hasImages ? (\n            <img\n              src={mainImage}\n              alt={name}\n              className=\"h-full w-full object-cover transition-transform hover:scale-105\"\n              onError={(e) => {\n                const target = e.target as HTMLImageElement;\n                target.style.display = 'none';\n                target.nextElementSibling?.classList.remove('hidden');\n              }}\n            />\n          ) : null}\n          {/* Placeholder - shown when no images or image fails */}\n          <div className={`${hasImages ? 'hidden' : ''} h-full w-full flex items-center justify-center bg-gray-100`}>\n            <Package className=\"w-16 h-16 text-gray-400\" />\n          </div>\n          {!isAvailable && (\n            <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center\">\n              <span className=\"text-white font-semibold text-lg\">Out of Stock</span>\n            </div>\n          )}\n          <div className=\"absolute top-2 left-2\">\n            <span className=\"bg-blue-500 text-white px-2 py-1 rounded-full text-xs font-medium\">\n              {category.name}\n            </span>\n          </div>\n          {variant === 'admin' && (\n            <div className=\"absolute top-2 right-2 flex gap-1\">\n              {onEdit && (\n                <Button\n                  size=\"sm\"\n                  variant=\"secondary\"\n                  onClick={handleEdit}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  ✏️\n                </Button>\n              )}\n              {onDelete && (\n                <Button\n                  size=\"sm\"\n                  variant=\"destructive\"\n                  onClick={() => onDelete(id)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  🗑️\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Product Info */}\n        <div className=\"p-4\">\n          <div className=\"mb-2\">\n            <h3 className=\"font-semibold text-lg text-gray-900 line-clamp-1\">{name}</h3>\n            <p className=\"text-sm text-gray-500\">{outlet.name}</p>\n          </div>\n\n          {description && (\n            <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">{description}</p>\n          )}\n\n          {/* Stock Information */}\n          <div className=\"mb-3 space-y-1\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Total Stock:</span>\n              <span className=\"font-medium\">{stock}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Currently Rented:</span>\n              <span className=\"font-medium text-orange-600\">{renting}</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-gray-600\">Available:</span>\n              <span className={cn('font-medium', isAvailable ? 'text-green-600' : 'text-red-600')}>\n                {available}\n              </span>\n            </div>\n          </div>\n\n          {/* Pricing */}\n          <div className=\"mb-4 space-y-1\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Rent Price:</span>\n              <span className=\"font-semibold text-lg text-blue-700\">\n                ${rentPrice.toFixed(2)}/day\n              </span>\n            </div>\n            {salePrice && (\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-gray-600\">Sale Price:</span>\n                <span className=\"font-semibold text-green-600\">\n                  ${salePrice.toFixed(2)}\n                </span>\n              </div>\n            )}\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Deposit:</span>\n              <span className=\"font-medium text-gray-700\">\n                ${deposit.toFixed(2)}\n              </span>\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-2\">\n            {variant === 'client' && (\n              <>\n                {onView && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => onView(id)}\n                    className=\"flex-1\"\n                  >\n                    View Details\n                  </Button>\n                )}\n                {onRent && isAvailable && (\n                  <Button\n                    size=\"sm\"\n                    onClick={() => onRent(id)}\n                    className=\"flex-1\"\n                    disabled={!isAvailable}\n                  >\n                    Rent Now\n                  </Button>\n                )}\n              </>\n            )}\n\n            {variant === 'mobile' && (\n              <>\n                {onView && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => onView(id)}\n                    className=\"flex-1\"\n                  >\n                    Details\n                  </Button>\n                )}\n                {onRent && isAvailable && (\n                  <Button\n                    size=\"sm\"\n                    onClick={() => onRent(id)}\n                    className=\"flex-1\"\n                    disabled={!isAvailable}\n                  >\n                    Rent\n                  </Button>\n                )}\n              </>\n            )}\n\n            {variant === 'admin' && (\n              <>\n                {onView && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => onView(id)}\n                    className=\"flex-1\"\n                  >\n                    View\n                  </Button>\n                )}\n                {onEdit && (\n                  <Button\n                    size=\"sm\"\n                    onClick={handleEdit}\n                    className=\"flex-1\"\n                  >\n                    Edit\n                  </Button>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </Card>\n\n\n    </>\n  );\n}; ","'use client'\n\nimport React, { useState } from 'react';\nimport { Button } from '../../../ui/button';\nimport { Badge } from '../../../ui/badge';\nimport { Card, CardContent } from '../../../ui/card';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '../../../ui/dropdown-menu';\nimport { useFormatCurrency } from '@rentalshop/ui';\nimport { useProductTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { Product } from '@rentalshop/types';\nimport { getProductImageUrl } from '@rentalshop/utils';\nimport { Eye, Edit, ShoppingCart, Trash2, MoreVertical, Package } from 'lucide-react';\n\ninterface ProductTableProps {\n  products: Product[];\n  onProductAction: (action: string, productId: number) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\nexport function ProductTable({ \n  products, \n  onProductAction, \n  sortBy = 'name', \n  sortOrder = 'asc',\n  onSort \n}: ProductTableProps) {\n  const [openDropdownId, setOpenDropdownId] = useState<number | null>(null);\n  \n  // Use formatCurrency hook - automatically uses merchant's currency\n  const formatMoney = useFormatCurrency();\n  const t = useProductTranslations();\n  const tc = useCommonTranslations();\n  \n  // Debug: Log products received\n  console.log('🔍 ProductTable: Received products:', {\n    isArray: Array.isArray(products),\n    length: products?.length,\n    firstProduct: products?.[0]?.name\n  });\n  \n  if (products.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <div className=\"text-4xl mb-4\">📦</div>\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noProducts')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.noProductsDescription')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const getStatusBadge = (isActive: boolean) => {\n    return isActive ? (\n      <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n        {t('status.active')}\n      </Badge>\n    ) : (\n      <Badge className=\"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\">\n        {t('status.inactive')}\n      </Badge>\n    );\n  };\n\n  const getAvailabilityBadge = (available: number, stock: number) => {\n    if (available === 0) {\n      return <Badge className=\"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">{t('status.outOfStock')}</Badge>;\n    }\n    if (available < 5) {\n      return <Badge className=\"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\">{t('status.lowStock')}</Badge>;\n    }\n    return <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">{t('status.inStock')}</Badge>;\n  };\n\n  const handleSort = (column: string) => {\n    if (onSort) {\n      onSort(column);\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 dark:border-gray-700 h-full flex flex-col\">\n      <div className=\"overflow-auto flex-1\">\n        <table className=\"w-full min-w-[1000px]\">\n          {/* Table Header with Sorting - Sticky */}\n          <thead className=\"bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10\">\n            <tr>\n              {/* Product Name - Sortable */}\n              <th \n                onClick={() => handleSort('name')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('productName')}\n                  {sortBy === 'name' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              \n              {/* Category */}\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.category')}\n              </th>\n              \n              {/* Price */}\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.price')}\n              </th>\n              \n              {/* Stock - Hidden as requested */}\n              {/* <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('stock.label')}\n              </th> */}\n              \n              {/* Status column hidden as requested */}\n              {/* <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.status')}\n              </th> */}\n              \n              {/* Created Date - Sortable */}\n              <th \n                onClick={() => handleSort('createdAt')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {tc('labels.createdAt')}\n                  {sortBy === 'createdAt' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              \n              {/* Actions */}\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.actions')}\n              </th>\n            </tr>\n          </thead>\n          \n          {/* Table Body */}\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {products.map((product) => (\n              <tr key={product.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                {/* Product Name with Image */}\n                <td className=\"px-6 py-4\">\n                  <div className=\"flex items-center gap-3\">\n                    {/* Product Thumbnail with fallback placeholder */}\n                    <div className=\"flex-shrink-0 relative\">\n                      {(() => {\n                        const imageUrl = getProductImageUrl(product);\n                        const hasValidImage = imageUrl && imageUrl.trim() !== '' && product.images && product.images.length > 0;\n                        \n                        return hasValidImage ? (\n                          <img\n                            src={imageUrl}\n                            alt={product.name}\n                            className=\"w-10 h-10 object-cover rounded border border-gray-200\"\n                            onError={(e) => {\n                              const target = e.target as HTMLImageElement;\n                              target.style.display = 'none';\n                              target.nextElementSibling?.classList.remove('hidden');\n                            }}\n                          />\n                        ) : null;\n                      })()}\n                      {/* Placeholder - hidden by default if image loads, shown if image fails or no image */}\n                      <div className={`${(() => {\n                        const imageUrl = getProductImageUrl(product);\n                        const hasValidImage = imageUrl && imageUrl.trim() !== '' && product.images && product.images.length > 0;\n                        return hasValidImage ? 'hidden' : '';\n                      })()} w-10 h-10 bg-gray-100 dark:bg-gray-800 rounded border border-gray-200 dark:border-gray-700 flex items-center justify-center`}>\n                        <Package className=\"w-5 h-5 text-gray-400\" />\n                      </div>\n                    </div>\n                    <div className=\"text-sm\">\n                      <div className=\"font-medium text-gray-900 dark:text-white\">\n                        {product.name}\n                      </div>\n                      {product.barcode && (\n                        <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                          SKU: {product.barcode}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </td>\n                \n                {/* Category */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {(product as any).category?.name || 'N/A'}\n                  </div>\n                </td>\n                \n                {/* Price */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900 dark:text-white\">\n                      {formatMoney(product.rentPrice || 0)}\n                    </div>\n                    {product.salePrice && product.salePrice > 0 && (\n                      <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                        {t('price.sale')}: {formatMoney(product.salePrice)}\n                      </div>\n                    )}\n                  </div>\n                </td>\n                \n                {/* Stock - Hidden as requested */}\n                {/* <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900 dark:text-white\">\n                      {product.available} / {product.stock}\n                    </div>\n                    {product.renting > 0 && (\n                      <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                        {t('stock.renting')}: {product.renting}\n                      </div>\n                    )}\n                    <div className=\"mt-1\">\n                      {getAvailabilityBadge(product.available, product.stock)}\n                    </div>\n                  </div>\n                </td> */}\n                \n                {/* Status cell hidden as requested */}\n                {/* <td className=\"px-6 py-4 whitespace-nowrap\">\n                  {getStatusBadge(product.isActive)}\n                </td> */}\n                \n                {/* Created Date */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {product.createdAt ? new Date(product.createdAt).toLocaleDateString('en-US', {\n                      year: 'numeric',\n                      month: 'short',\n                      day: 'numeric'\n                    }) : 'N/A'}\n                  </div>\n                </td>\n                \n                {/* Actions - Dropdown Menu */}\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-8 w-8 p-0\"\n                        onClick={() => setOpenDropdownId(product.id)}\n                      >\n                        <MoreVertical className=\"h-4 w-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent \n                      align=\"end\"\n                      open={openDropdownId === product.id}\n                      onOpenChange={(open: boolean) => setOpenDropdownId(open ? product.id : null)}\n                    >\n                      <DropdownMenuItem onClick={() => {\n                        onProductAction('view', product.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        {t('actions.viewDetails')}\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => {\n                        onProductAction('edit', product.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Edit className=\"h-4 w-4 mr-2\" />\n                        {t('actions.edit')}\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => {\n                        onProductAction('view-orders', product.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <ShoppingCart className=\"h-4 w-4 mr-2\" />\n                        {t('actions.viewOrders')}\n                      </DropdownMenuItem>\n                      {/* Activate/Deactivate hidden as requested */}\n                      {/* <DropdownMenuItem onClick={() => {\n                        onProductAction('toggle-status', product.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Package className=\"h-4 w-4 mr-2\" />\n                        {product.isActive ? t('actions.deactivate') : t('actions.activate')}\n                      </DropdownMenuItem> */}\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem \n                        onClick={() => {\n                          onProductAction('delete', product.id);\n                          setOpenDropdownId(null);\n                        }}\n                        className=\"text-red-600 dark:text-red-400 focus:text-red-700 dark:focus:text-red-300\"\n                      >\n                        <Trash2 className=\"h-4 w-4 mr-2\" />\n                        {t('actions.delete')}\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n","'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent } from '../../../ui/card';\nimport { useUserRole } from '@rentalshop/hooks';\nimport { ProductAddDialog } from './ProductAddDialog';\n\nimport type { ProductWithDetails, Category, Outlet } from '@rentalshop/types';\n\ninterface ProductActionsProps {\n  onAction: (action: string, productId?: number) => void;\n  categories: Category[];\n  outlets: Outlet[];\n  merchantId: number;\n  onProductCreated?: (product: ProductWithDetails) => void;\n  onProductUpdated?: (product: ProductWithDetails) => void;\n  onError?: (error: string) => void;\n}\n\nexport function ProductActions({ \n  onAction, \n  categories, \n  outlets, \n  merchantId,\n  onProductCreated,\n  onProductUpdated,\n  onError\n}: ProductActionsProps) {\n  // Use hook instead of prop\n  const { role: currentUserRole, canManageProducts, canManageCategories } = useUserRole();\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState<ProductWithDetails | null>(null);\n\n  const handleAddProduct = () => {\n    console.log('🔵 ProductActions: handleAddProduct called');\n    setEditingProduct(null);\n    setIsAddDialogOpen(true);\n    console.log('🔵 ProductActions: Dialog state set to true');\n  };\n\n  const handleEditProduct = (product: ProductWithDetails) => {\n    setEditingProduct(product);\n    setIsAddDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setIsAddDialogOpen(false);\n    setEditingProduct(null);\n  };\n\n  const handleSuccess = (product: ProductWithDetails) => {\n    if (editingProduct) {\n      onProductUpdated?.(product);\n    } else {\n      onProductCreated?.(product);\n    }\n    setIsAddDialogOpen(false);\n  };\n\n  const handleError = (error: string) => {\n    onError?.(error);\n  };\n\n  // Filter actions based on user role - OUTLET_STAFF cannot create/update products or manage categories\n  const allActions = [\n    {\n      id: 'add-product',\n      label: 'Add Product',\n      description: 'Create a new product',\n      icon: '➕',\n      variant: 'default' as const,\n      onClick: handleAddProduct,\n      roles: canManageProducts ? ['ALL'] : [] // Use permission check\n    },\n    {\n      id: 'import-products',\n      label: 'Import Products',\n      description: 'Import from CSV/Excel',\n      icon: '📥',\n      variant: 'secondary' as const,\n      onClick: () => onAction('import-products'),\n      roles: canManageProducts ? ['ALL'] : [] // Use permission check\n    },\n    {\n      id: 'export-products',\n      label: 'Export Products',\n      description: 'Export to CSV/Excel',\n      icon: '📤',\n      variant: 'outline' as const,\n      onClick: () => onAction('export-products'),\n      roles: ['ALL'] // All roles can export\n    },\n    {\n      id: 'bulk-edit',\n      label: 'Bulk Edit',\n      description: 'Edit multiple products',\n      icon: '✏️',\n      variant: 'outline' as const,\n      onClick: () => onAction('bulk-edit'),\n      roles: canManageProducts ? ['ALL'] : [] // Use permission check\n    },\n    {\n      id: 'manage-categories',\n      label: 'Manage Categories',\n      description: 'Organize product categories',\n      icon: '🏷️',\n      variant: 'outline' as const,\n      onClick: () => onAction('manage-categories'),\n      roles: canManageCategories ? ['ALL'] : [] // Use permission check\n    },\n    {\n      id: 'inventory-check',\n      label: 'Inventory Check',\n      description: 'Perform stock count',\n      icon: '🔍',\n      variant: 'outline' as const,\n      onClick: () => onAction('inventory-check'),\n      roles: ['ADMIN', 'MERCHANT', 'OUTLET_ADMIN', 'OUTLET_STAFF'] // All roles can do inventory check\n    }\n  ];\n\n  // Filter actions based on current user role\n  const actions = allActions.filter(action => \n    !action.roles || action.roles.length > 0\n  ).map(({ roles, ...action }) => action); // Remove roles property from final actions\n\n  return (\n    <>\n      <Card>\n        <CardContent className=\"p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n            {actions.map((action) => (\n              <Button\n                key={action.id}\n                variant={action.variant}\n                className=\"h-auto p-3 flex flex-col items-start space-y-2 text-left\"\n                onClick={action.onClick}\n              >\n                <div className=\"flex items-center space-x-2 w-full\">\n                  <span className=\"text-lg\">{action.icon}</span>\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-sm\">{action.label}</div>\n                    <div className=\"text-xs opacity-80\">{action.description}</div>\n                  </div>\n                </div>\n              </Button>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Product Add Dialog */}\n      <ProductAddDialog\n        open={isAddDialogOpen}\n        onOpenChange={setIsAddDialogOpen}\n        categories={categories}\n        outlets={outlets}\n        merchantId={String(merchantId)}\n        onProductCreated={onProductCreated}\n        onError={onError}\n      />\n\n    </>\n  );\n}\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle,\n  DialogDescription,\n  Button\n} from '../../../ui';\nimport { ProductAddForm } from './ProductAddForm';\nimport type { Category, Outlet, ProductWithDetails } from '@rentalshop/types';\n\ninterface ProductAddDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  categories: Category[];\n  outlets: Outlet[];\n  merchantId: string;\n  onProductCreated?: (product: ProductWithDetails) => void;\n  onError?: (error: string) => void;\n}\n\nexport const ProductAddDialog: React.FC<ProductAddDialogProps> = ({\n  open,\n  onOpenChange,\n  categories,\n  outlets,\n  merchantId,\n  onProductCreated,\n  onError\n}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  console.log('🟢 ProductAddDialog: Rendered with open =', open);\n\n  const handleSave = async (productData: any) => {\n    try {\n      setIsSubmitting(true);\n      \n      // Call the parent callback to create the product\n      // The parent will handle the API call and show toasts\n      if (onProductCreated) {\n        await onProductCreated(productData);\n      }\n      \n      // Close dialog on success\n      onOpenChange(false);\n      \n    } catch (error) {\n      console.error('❌ ProductAddDialog: Error occurred:', error);\n      if (onError) {\n        onError(error instanceof Error ? error.message : 'Failed to create product');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[95vh] overflow-y-auto p-0\">\n        <DialogHeader className=\"px-6 py-4 border-b border-gray-200\">\n          <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n            Add New Product\n          </DialogTitle>\n          <DialogDescription>\n            Create a new product for your rental shop inventory.\n          </DialogDescription>\n        </DialogHeader>\n        \n        <div className=\"p-6\">\n          <ProductAddForm\n            categories={categories}\n            outlets={outlets}\n            merchantId={merchantId}\n            onSave={handleSave}\n            onCancel={handleCancel}\n          />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button\n} from '../../../ui';\nimport { ArrowLeft, Plus, Loader2, AlertCircle } from 'lucide-react';\nimport { ProductForm } from '../../../forms/ProductForm';\nimport { useToast } from '@rentalshop/ui';\nimport { useProductTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport type { Category, Outlet, ProductCreateInput } from '@rentalshop/types';\n\ninterface ProductAddFormProps {\n  categories: Category[];\n  outlets: Outlet[];\n  merchantId: string;\n  onSave: (data: ProductCreateInput, files?: File[]) => Promise<void>; // Updated to support files\n  onCancel: () => void;\n  onBack?: () => void;\n  useMultipartUpload?: boolean; // New prop to enable multipart upload\n}\n\nexport const ProductAddForm: React.FC<ProductAddFormProps> = ({\n  categories,\n  outlets,\n  merchantId,\n  onSave,\n  onCancel,\n  onBack,\n  useMultipartUpload = false\n}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toastSuccess, toastError } = useToast();\n  const t = useProductTranslations();\n  const tc = useCommonTranslations();\n\n  const handleSubmit = async (data: any, files?: File[]) => {\n    setIsSubmitting(true);\n\n    try {\n      // Transform ProductInput to ProductCreateInput format\n      const transformedData: ProductCreateInput = {\n        name: data.name,\n        description: data.description,\n        barcode: data.barcode,\n        categoryId: data.categoryId,\n        rentPrice: data.rentPrice,\n        salePrice: data.salePrice,\n        deposit: data.deposit,\n        totalStock: data.totalStock,\n        images: useMultipartUpload ? [] : (Array.isArray(data.images) ? data.images.join(',') : (data.images || '')),\n        outletStock: data.outletStock,\n      };\n      \n      if (useMultipartUpload && files) {\n        await onSave(transformedData, files);\n      } else {\n        await onSave(transformedData);\n      }\n      \n      // Parent component will handle success toast\n      \n      // Reset form after successful creation\n      // The form will be reset by the parent component\n    } catch (err) {\n      console.error('❌ ProductAddForm: Error in handleSubmit:', err);\n      toastError(t('messages.createFailed'), err instanceof Error ? err.message : t('messages.createFailed'));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onCancel();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Product Form */}\n          <ProductForm\n            categories={categories}\n            outlets={outlets}\n            onSubmit={handleSubmit}\n            onCancel={handleCancel}\n            loading={isSubmitting}\n            mode=\"create\"\n            merchantId={merchantId}\n            hideHeader={true}\n            hideSubmitButton={true}\n            formId=\"product-form\"\n            useMultipartUpload={useMultipartUpload}\n            submitText={isSubmitting ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Creating...\n              </>\n            ) : (\n              <>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Create Product\n              </>\n            )}\n          />\n      {/* Action Buttons */}\n      <div className=\"space-y-4\">\n        {/* Warning message when no outlets */}\n        {outlets.length === 0 && (\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"h-5 w-5 text-yellow-600 mr-2\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-yellow-800\">{t('messages.noOutletsAvailable')}</h4>\n                <p className=\"text-sm text-yellow-700 mt-1\">\n                  {t('messages.needOutletFirst')}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div className=\"flex justify-end space-x-2\">\n          <Button variant=\"outline\" onClick={handleCancel} disabled={isSubmitting}>\n            {tc('buttons.cancel')}\n          </Button>\n          <Button \n            type=\"submit\" \n            form=\"product-form\" \n            disabled={isSubmitting || outlets.length === 0}\n            className=\"min-w-[120px]\"\n            title={outlets.length === 0 ? t('messages.needOutletFirst') : undefined}\n          >\n            {isSubmitting ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                {tc('buttons.creating')}\n              </>\n            ) : (\n              <>\n                <Plus className=\"h-4 w-4 mr-2\" />\n                {t('createProduct')}\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { \n  GridSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '../../../ui/skeleton';\n\nexport function ProductsLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Products Grid */}\n      <GridSkeleton items={9} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function ProductDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-48 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* Product Info */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Image Placeholder */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"aspect-square w-full bg-gray-200 rounded-lg animate-pulse\" />\n        </div>\n        \n        {/* Details */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          <div className=\"space-y-4\">\n            <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"space-y-2\">\n              {Array.from({ length: 6 }).map((_, i) => (\n                <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"grid grid-cols-2 gap-4\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","'use client'\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent, \n  Button, \n  Badge \n} from '../../../ui';\nimport { useProductTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { getProductImageUrl } from '@rentalshop/utils';\nimport { \n  Package, \n  DollarSign, \n  Edit, \n  Eye, \n  Image,\n  Info,\n  Store,\n  Zap,\n  Copy,\n  Share,\n  Clock,\n  User,\n  Tag,\n  Calendar,\n  MapPin,\n  BarChart3,\n  TrendingUp,\n  AlertCircle,\n  ArrowRight,\n  ArrowLeft\n} from 'lucide-react';\nimport type { ProductWithStock } from '@rentalshop/types';\nimport { formatCurrency, formatDate } from '../../../../lib';\n\ninterface ProductDetailListProps {\n  product: ProductWithStock;\n  onEdit?: () => void;\n  onViewOrders?: () => void;\n  showActions?: boolean;\n  isMerchantAccount?: boolean;\n  className?: string;\n}\n\nexport const ProductDetailList: React.FC<ProductDetailListProps> = ({\n  product,\n  onEdit,\n  onViewOrders,\n  showActions = true,\n  isMerchantAccount = false,\n  className = ''\n}) => {\n  const router = useRouter();\n  const t = useProductTranslations();\n  const tc = useCommonTranslations();\n\n  // Helper function to normalize images array\n  const normalizeImages = (images: string | string[] | null | undefined): string[] => {\n    if (!images) return [];\n    \n    try {\n      if (Array.isArray(images)) {\n        return images.filter(Boolean);\n      } else if (typeof images === 'string') {\n        // Try to parse as JSON first, then fallback to comma-separated\n        try {\n          const parsed = JSON.parse(images);\n          return Array.isArray(parsed) ? parsed.filter(Boolean) : images.split(',').filter(Boolean);\n        } catch {\n          return images.split(',').filter(Boolean);\n        }\n      }\n      return [];\n    } catch {\n      return [];\n    }\n  };\n\n  const imageArray = normalizeImages(product.images);\n\n\n  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement>) => {\n    e.currentTarget.style.display = 'none';\n  };\n\n  const totalAvailable = product.outletStock.reduce((sum, os) => sum + os.available, 0);\n  const totalRenting = product.outletStock.reduce((sum, os) => sum + os.renting, 0);\n  const totalStock = product.outletStock.reduce((sum, os) => sum + os.stock, 0);\n\n\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Product Header */}\n      <div className=\"bg-white border border-gray-200 rounded-lg p-8\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1\">\n            {/* Product Title */}\n            <h1 className=\"text-3xl font-semibold text-gray-900 mb-2\">{product.name}</h1>\n            \n            {/* Basic Info */}\n            <div className=\"flex items-center space-x-4 text-sm text-gray-600 mb-4\">\n              <span>ID: {product.id}</span>\n              {product.barcode && <span>{t('fields.barcode')}: {product.barcode}</span>}\n              <span>{tc('labels.category')}: {product.category?.name || 'Uncategorized'}</span>\n            </div>\n            \n            {/* Description */}\n            {product.description && (\n              <div className=\"mb-6\">\n                <p className=\"text-gray-700\">{product.description}</p>\n              </div>\n            )}\n            \n            {/* Additional Info */}\n            <div className=\"grid grid-cols-1 gap-4 text-sm mb-4\">\n              <div>\n                <span className=\"text-gray-500\">{tc('labels.merchant')}:</span>\n                <span className=\"ml-2 text-gray-900\">{product.merchant?.name || 'Unknown'}</span>\n              </div>\n            </div>\n            \n            {/* Product Details */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm mb-4\">\n              <div>\n                <span className=\"text-gray-500\">{tc('labels.createdAt')}:</span>\n                <span className=\"ml-2 text-gray-900\">{formatDate(product.createdAt)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">{tc('labels.updatedAt')}:</span>\n                <span className=\"ml-2 text-gray-900\">{formatDate(product.updatedAt)}</span>\n              </div>\n            </div>\n            \n            {/* Stock Information */}\n            <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-700 mb-3\">{t('inventory.stockSummary')}</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-gray-900\">{totalStock}</div>\n                  <div className=\"text-sm text-gray-600\">{t('inventory.totalStock')}</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">{totalAvailable}</div>\n                  <div className=\"text-sm text-gray-600\">{t('inventory.availableStock')}</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">{totalRenting}</div>\n                  <div className=\"text-sm text-gray-600\">{t('fields.renting')}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Pricing */}\n          <div className=\"ml-8 text-right\">\n            <div className=\"text-3xl font-bold text-gray-900 mb-2\">\n              {formatCurrency(product.rentPrice)}\n            </div>\n            <div className=\"text-sm text-gray-600 mb-1\">{t('fields.rentPrice')}</div>\n            \n            {product.salePrice && product.salePrice > 0 && (\n              <div className=\"mt-3\">\n                <div className=\"text-base font-medium text-green-600\">\n                  {formatCurrency(product.salePrice)}\n                </div>\n                <div className=\"text-sm text-gray-600\">{t('fields.salePrice')}</div>\n              </div>\n            )}\n            \n            <div className=\"mt-3\">\n              <div className=\"text-lg font-medium text-gray-900\">\n                {formatCurrency(product.deposit)}\n              </div>\n              <div className=\"text-sm text-gray-600\">{t('fields.deposit')}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Outlet Stock Details (Merchant Only) */}\n      {isMerchantAccount && (\n        <div className=\"bg-white border border-gray-200 rounded-lg\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">{t('inventory.outletStockDistribution')}</h2>\n            <p className=\"text-sm text-gray-600 mt-1\">{t('inventory.stockAllocation')}</p>\n          </div>\n          \n          <div className=\"p-6\">\n            {product.outletStock && product.outletStock.length > 0 ? (\n              product.outletStock.map((outletStock, index) => (\n              <div key={outletStock.outlet?.id || outletStock.id || index} className={`${index > 0 ? 'border-t border-gray-100 pt-6 mt-6' : ''}`}>\n                <div className=\"mb-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-lg font-medium text-gray-900\">\n                        {outletStock.outlet?.name || 'Unknown Outlet'}\n                      </h3>\n                      {outletStock.outlet?.address ? (\n                        <p className=\"text-sm text-gray-600 mt-1\">{outletStock.outlet.address}</p>\n                      ) : (\n                        <p className=\"text-sm text-gray-400 mt-1 italic\">No address available</p>\n                      )}\n                    </div>\n                    \n                    {/* Stock metrics on the same line */}\n                    <div className=\"flex items-center space-x-10\">\n                      <div className=\"text-center min-w-[60px]\">\n                        <div className=\"text-lg font-bold text-gray-900\">{outletStock.stock}</div>\n                        <div className=\"text-xs text-gray-600\">{tc('labels.total')}</div>\n                      </div>\n                      \n                      <div className=\"text-center min-w-[60px]\">\n                        <div className=\"text-lg font-bold text-blue-700\">{outletStock.available}</div>\n                        <div className=\"text-xs text-blue-700\">{t('fields.available')}</div>\n                      </div>\n                      \n                      <div className=\"text-center min-w-[60px]\">\n                        <div className=\"text-lg font-bold text-green-600\">{outletStock.renting}</div>\n                        <div className=\"text-xs text-green-600\">{t('fields.renting')}</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )))\n            : (\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-500 mb-2\">{t('inventory.noOutletStock')}</div>\n                <div className=\"text-sm text-gray-400\">{t('inventory.notAssignedToOutlets')}</div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Product Images - Show all images in detail view */}\n      {imageArray.length > 0 && (\n        <div className=\"bg-white border border-gray-200 rounded-lg\">\n          <div className=\"px-4 py-2 border-b border-gray-200\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">{t('fields.images')}</h2>\n          </div>\n          \n          <div className=\"p-3\">\n            {/* Image Grid - Responsive grid layout */}\n            <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n              {imageArray.length > 0 ? (\n                imageArray.map((image: string, index: number) => (\n                  <div\n                    key={index}\n                    className=\"aspect-square rounded-lg overflow-hidden border-2 border-gray-200 hover:border-gray-300 transition-all hover:scale-105\"\n                  >\n                    <div className=\"relative w-full h-full\">\n                      <img\n                        src={image}\n                        alt={`${product.name} ${index + 1}`}\n                        className=\"w-full h-full object-cover\"\n                        onError={(e) => {\n                          const target = e.target as HTMLImageElement;\n                          target.style.display = 'none';\n                          target.nextElementSibling?.classList.remove('hidden');\n                        }}\n                      />\n                      {/* Fallback placeholder for this image */}\n                      <div className=\"hidden absolute inset-0 w-full h-full bg-gray-100 flex items-center justify-center\">\n                        <Package className=\"w-8 h-8 text-gray-400\" />\n                      </div>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"col-span-full flex items-center justify-center h-32 text-gray-500\">\n                  <span>No images available</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n\n    </div>\n  );\n};\n","// ============================================================================\n// UTILITIES\n// ============================================================================\nexport { cn } from './cn';\nexport { formatDate } from './utils';\nexport { formatCurrency } from '@rentalshop/utils';\n","'use client'\n\nimport React from 'react';\nimport { ProductDetailList } from './ProductDetailList';\nimport type { ProductWithDetails } from '@rentalshop/types';\n\ninterface ProductDetailMultiLayoutProps {\n  product: ProductWithDetails;\n  onEdit?: () => void;\n  onViewOrders?: () => void;\n  showActions?: boolean;\n  isMerchantAccount?: boolean;\n  className?: string;\n}\n\nexport const ProductDetailMultiLayout: React.FC<ProductDetailMultiLayoutProps> = ({\n  product,\n  onEdit,\n  onViewOrders,\n  showActions = true,\n  isMerchantAccount = false,\n  className = ''\n}) => {\n  return (\n    <ProductDetailList\n      product={product}\n      onEdit={onEdit}\n      onViewOrders={onViewOrders}\n      showActions={showActions}\n      isMerchantAccount={isMerchantAccount}\n      className={className}\n    />\n  );\n};\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button\n} from '@rentalshop/ui';\nimport { useToast } from '@rentalshop/ui';\nimport { useProductTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { ArrowLeft, Save, Loader2 } from 'lucide-react';\nimport { ProductForm } from '../../../forms/ProductForm';\nimport type { ProductInput, ProductWithStock, Outlet, Category } from '@rentalshop/types';\n\ninterface ProductEditFormProps {\n  product: ProductWithStock;\n  categories: Category[];\n  outlets: Outlet[];\n  merchantId: number;\n  onSave: (data: ProductInput) => Promise<void>;\n  onCancel: () => void;\n  onBack?: () => void;\n}\n\nexport const ProductEdit: React.FC<ProductEditFormProps> = ({\n  product,\n  categories,\n  outlets,\n  merchantId,\n  onSave,\n  onCancel,\n  onBack\n}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toastSuccess, toastError } = useToast();\n  const t = useProductTranslations();\n  const tc = useCommonTranslations();\n\n  // Debug: Log product data structure and props\n  useEffect(() => {\n    console.log('🔍 ProductEdit - product data:', product);\n    console.log('🔍 ProductEdit - product.category:', product.category);\n    console.log('🔍 ProductEdit - product.outletStock:', product.outletStock);\n    console.log('🔍 ProductEdit - outlets:', outlets);\n    console.log('🔍 ProductEdit - onSave type:', typeof onSave);\n    console.log('🔍 ProductEdit - onSave:', onSave);\n    console.log('🔍 ProductEdit - onCancel type:', typeof onCancel);\n    console.log('🔍 ProductEdit - merchantId:', merchantId);\n  }, [product, outlets, onSave, onCancel, merchantId]);\n\n  // Transform product data to form format\n  const initialFormData = {\n    name: product.name,\n    description: product.description || '',\n    barcode: product.barcode || '',\n    categoryId: product.category?.id || product.categoryId,\n    rentPrice: product.rentPrice,\n    salePrice: (product as any).salePrice || 0, // Use actual salePrice if available, default to 0\n    deposit: product.deposit,\n    totalStock: (() => {\n      // Calculate total stock from all outlets (including those with 0 stock)\n      const total = outlets.reduce((sum, outlet) => {\n        const existingStock = product.outletStock.find(os => os.outlet?.id === outlet.id)?.stock || 0;\n        return sum + existingStock;\n      }, 0);\n      console.log('🔍 ProductEdit - calculated totalStock:', total, 'from all outlets:', outlets.length);\n      return total;\n    })(),\n    images: (() => {\n      console.log('🔍 ProductEdit - product.images:', product.images);\n      console.log('🔍 ProductEdit - typeof product.images:', typeof product.images);\n      console.log('🔍 ProductEdit - Array.isArray(product.images):', Array.isArray(product.images));\n      return Array.isArray(product.images) ? product.images : []; // Ensure images is always an array\n    })(),\n    isActive: product.isActive,\n    outletStock: (() => {\n      console.log('🔍 ProductEdit - product.outletStock:', product.outletStock);\n      console.log('🔍 ProductEdit - available outlets:', outlets);\n      \n      // Create a map of existing outlet stock for quick lookup\n      const existingStockMap = new Map();\n      product.outletStock.forEach(os => {\n        const outletId = os.outlet?.id || 0;\n        if (outletId > 0) {\n          existingStockMap.set(outletId, os.stock || 0);\n        }\n      });\n      \n      // Create outlet stock entries for ALL outlets\n      const allOutletStock = outlets.map(outlet => {\n        const existingStock = existingStockMap.get(outlet.id) || 0;\n        const mapped = {\n          outletId: outlet.id,\n          stock: existingStock\n        };\n        console.log(`🔍 ProductEdit - outlet ${outlet.name} (ID: ${outlet.id}): existing stock = ${existingStock}`);\n        return mapped;\n      });\n      \n      console.log('🔍 ProductEdit - final mapped outletStock (all outlets):', allOutletStock);\n      return allOutletStock;\n    })(),\n    sku: product.barcode || ''\n  };\n\n  const handleSubmit = async (data: ProductInput) => {\n    setIsSubmitting(true);\n\n    try {\n      if (typeof onSave !== 'function') {\n        throw new Error('onSave function is not provided or invalid');\n      }\n      await onSave(data);\n      // Parent component will handle success toast\n    } catch (err) {\n      console.error('❌ ProductEdit: Error in handleSubmit:', err);\n      toastError(t('messages.updateFailed'), err instanceof Error ? err.message : 'Failed to update product');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onCancel();\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Product Form */}\n      <ProductForm\n        initialData={initialFormData}\n        categories={categories}\n        outlets={outlets}\n        onSubmit={handleSubmit}\n        onCancel={handleCancel}\n        loading={isSubmitting}\n        mode=\"edit\"\n        merchantId={merchantId}\n        hideHeader={true}\n        hideSubmitButton={true}\n        formId=\"product-form\"\n      />\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end space-x-2\">\n        <Button variant=\"outline\" onClick={handleCancel} disabled={isSubmitting}>\n          {tc('buttons.cancel')}\n        </Button>\n        <Button \n          type=\"submit\" \n          form=\"product-form\" \n          disabled={isSubmitting}\n          className=\"min-w-[120px]\"\n        >\n          {isSubmitting ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              {t('messages.updating')}\n            </>\n          ) : (\n            <>\n              <Save className=\"h-4 w-4 mr-2\" />\n              {t('messages.updateProduct')}\n            </>\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent, \n  Button, \n  Badge,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '../../../ui';\nimport { \n  Package, \n  DollarSign, \n  ShoppingCart, \n  TrendingUp, \n  Calendar,\n  Search,\n  Filter,\n  Eye,\n  Download,\n  RefreshCw,\n  ArrowUpDown,\n  Clock,\n  User,\n  MapPin,\n  BarChart3,\n  ArrowLeft\n} from 'lucide-react';\nimport { formatCurrency, formatDate } from '../../../../lib';\nimport { useOrderTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { ProductsLoading } from './ProductsLoading';\nimport { \n  OrderFilters as OrderFiltersComponent,\n  OrderTable\n} from '../../Orders/components';\nimport { Pagination } from '@rentalshop/ui';\nimport { ordersApi } from '@rentalshop/utils';\nimport type { \n  OrderWithDetails, \n  OrderFilters,\n  OrderStats\n} from '@rentalshop/types';\n\ninterface ProductOrdersViewProps {\n  productId: string;\n  productName: string;\n  onClose?: () => void;\n  className?: string;\n  showHeader?: boolean;\n  inventoryData?: {\n    totalStock: number;\n    totalRenting: number;\n    totalAvailable: number;\n  };\n}\n\nexport const ProductOrdersView: React.FC<ProductOrdersViewProps> = ({\n  productId,\n  productName,\n  onClose,\n  className = '',\n  showHeader = true,\n  inventoryData\n}) => {\n  const t = useOrderTranslations();\n  const tc = useCommonTranslations();\n  \n  const [orders, setOrders] = useState<OrderWithDetails[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  \n  // Initialize filters\n  const [filters, setFilters] = useState<OrderFilters>({\n    search: '',\n    status: undefined,\n    orderType: undefined,\n    outletId: undefined,\n    customerId: undefined,\n    startDate: undefined,\n    endDate: undefined,\n    limit: 20,\n    offset: 0,\n    sortBy: 'createdAt',\n    sortOrder: 'desc'\n  });\n\n  // Fetch orders for this specific product\n  useEffect(() => {\n    const fetchProductOrders = async () => {\n      try {\n        setLoading(true);\n        // Use the dedicated method to get orders for this specific product\n        const response = await ordersApi.getOrdersByProduct(parseInt(productId));\n        \n        console.log('🔍 ProductOrdersView: API Response:', response);\n        \n        if (response.success && response.data) {\n          // Handle both array and paginated response structures\n          const ordersData = Array.isArray(response.data) \n            ? response.data \n            : (response.data as any).orders || [];\n          const totalPages = Array.isArray(response.data) \n            ? 1 \n            : (response.data as any).totalPages || 1;\n          console.log('🔍 ProductOrdersView: Setting orders:', ordersData);\n          console.log('🔍 ProductOrdersView: Total pages:', totalPages);\n          setOrders(ordersData as OrderWithDetails[]);\n          setTotalPages(totalPages);\n        } else {\n          console.log('🔍 ProductOrdersView: No data or unsuccessful response');\n          setOrders([]);\n          setTotalPages(1);\n        }\n      } catch (err) {\n        console.error('❌ ProductOrdersView: Error fetching product orders:', err);\n        setError('Failed to fetch product orders');\n        setOrders([]); // Ensure orders is always an array\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProductOrders();\n  }, [productId]);\n\n  // Calculate overview statistics with safety checks\n  const overview = {\n    totalOrders: Array.isArray(orders) ? orders.length : 0,\n    totalQuantity: Array.isArray(orders) ? orders.reduce((sum, order) => \n      sum + (order.orderItems?.reduce((itemSum, item) => itemSum + (item.quantity || 0), 0) || 0), 0\n    ) : 0,\n    totalSales: Array.isArray(orders) ? orders.reduce((sum, order) => sum + (order.totalAmount || 0), 0) : 0,\n    totalDeposits: Array.isArray(orders) ? orders.reduce((sum, order) => sum + (order.depositAmount || 0), 0) : 0,\n    activeRentals: Array.isArray(orders) ? orders.filter(order => order.status === 'PICKUPED').length : 0,\n    completedOrders: Array.isArray(orders) ? orders.filter(order => order.status === 'COMPLETED').length : 0,\n    pendingOrders: Array.isArray(orders) ? orders.filter(order => order.status === 'RESERVED').length : 0\n  };\n\n  // Transform OrderWithDetails to the format expected by OrderTable\n  console.log('🔍 ProductOrdersView: Transforming orders:', orders);\n  const orderData = {\n    orders: Array.isArray(orders) ? orders.map(order => ({\n      id: typeof order.id === 'string' ? parseInt(order.id) : order.id, // Handle both string and number IDs\n      orderNumber: order.orderNumber,\n      orderType: order.orderType,\n      status: order.status,\n      customerName: order.customer ? `${order.customer.firstName} ${order.customer.lastName}` : 'Guest',\n      customerPhone: order.customer?.phone || 'No phone',\n      outletName: order.outlet.name,\n      merchantName: order.outlet.merchant?.name || 'N/A',\n      totalAmount: order.totalAmount,\n      depositAmount: order.depositAmount,\n      createdAt: new Date(order.createdAt),\n      pickupPlanAt: order.pickupPlanAt ? new Date(order.pickupPlanAt) : undefined,\n      returnPlanAt: order.returnPlanAt ? new Date(order.returnPlanAt) : undefined,\n      pickedUpAt: order.pickedUpAt ? new Date(order.pickedUpAt) : undefined,\n      returnedAt: order.returnedAt ? new Date(order.returnedAt) : undefined,\n      isReadyToDeliver: (order as any).isReadyToDeliver || false\n    })) : [],\n    total: Array.isArray(orders) ? orders.length : 0,\n    currentPage,\n    totalPages,\n    limit: filters.limit || 20,\n    stats: {\n      totalOrders: overview.totalOrders,\n      totalRevenue: overview.totalSales,\n      totalDeposits: overview.totalDeposits,\n      activeRentals: overview.activeRentals,\n      overdueRentals: 0, // Not calculated in this context\n      completedOrders: overview.completedOrders,\n      cancelledOrders: 0, // Not calculated in this context\n      averageOrderValue: overview.totalOrders > 0 ? overview.totalSales / overview.totalOrders : 0\n    } as OrderStats\n  };\n\n  console.log('🔍 ProductOrdersView: Final orderData:', orderData);\n\n  const handleFiltersChange = (newFilters: OrderFilters) => {\n    setFilters(newFilters);\n    setCurrentPage(1);\n  };\n\n  const handleSearchChange = (searchValue: string) => {\n    setFilters((prev: OrderFilters) => ({ ...prev, search: searchValue }));\n    setCurrentPage(1);\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      search: '',\n      status: undefined,\n      orderType: undefined,\n      outletId: undefined,\n      customerId: undefined,\n      startDate: undefined,\n      endDate: undefined,\n      limit: 20,\n      offset: 0,\n      sortBy: 'createdAt',\n      sortOrder: 'desc'\n    });\n    setCurrentPage(1);\n  };\n\n  const handleOrderAction = (action: string, orderId: string) => {\n    console.log('Order action:', action, orderId);\n    // TODO: Implement order actions here\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleSort = (column: string) => {\n    const newSortOrder = filters.sortBy === column && filters.sortOrder === 'asc' ? 'desc' : 'asc';\n    setFilters((prev: OrderFilters) => ({\n      ...prev,\n      sortBy: column,\n      sortOrder: newSortOrder\n    }));\n  };\n\n  const handleRefresh = () => {\n    setCurrentPage(1);\n    setError(null);\n    // Trigger a new fetch\n    const fetchProductOrders = async () => {\n      try {\n        setLoading(true);\n        const response = await ordersApi.getOrdersByProduct(parseInt(productId));\n        \n        if (response.success && response.data) {\n          setOrders(response.data as OrderWithDetails[]);\n          setTotalPages(1);\n        } else {\n          setOrders([]);\n          setTotalPages(1);\n        }\n      } catch (err) {\n        setError('Failed to fetch product orders');\n        console.error('Error refreshing product orders:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProductOrders();\n  };\n\n  const handleExport = () => {\n    // TODO: Implement export functionality\n    console.log('Export orders for product:', productId);\n    // This could export to CSV, PDF, or other formats\n  };\n\n  if (loading) {\n    return (\n      <div className={`space-y-6 ${className}`}>\n        <ProductsLoading />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`space-y-6 ${className}`}>\n        <Card>\n          <CardContent className=\"p-6 text-center\">\n            <div className=\"text-red-500 mb-4\">\n              <BarChart3 className=\"h-12 w-12 mx-auto\" />\n            </div>\n            <h3 className=\"text-lg font-semibold mb-2\">{t('messages.errorLoadingOrders')}</h3>\n            <p className=\"text-gray-600 mb-4\">{error}</p>\n            <Button onClick={() => window.location.reload()}>\n              <RefreshCw className=\"h-4 w-4 mr-2\" />\n              {tc('buttons.tryAgain')}\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {showHeader && (\n        <>\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">{t('productOrders.title')}</h1>\n              <p className=\"text-gray-600\">{t('productOrders.description')}</p>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <Button variant=\"outline\" onClick={handleExport}>\n                <Download className=\"h-4 w-4 mr-2\" />\n                {tc('buttons.export')}\n              </Button>\n              <Button onClick={handleRefresh}>\n                <RefreshCw className=\"h-4 w-4 mr-2\" />\n                {tc('buttons.refresh')}\n              </Button>\n              {onClose && (\n                <Button variant=\"outline\" onClick={onClose}>\n                  <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                  {t('productOrders.backToProducts')}\n                </Button>\n              )}\n            </div>\n          </div>\n\n          {/* Overview Section */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"p-2 bg-blue-100 rounded-lg\">\n                    <ShoppingCart className=\"h-5 w-5 text-blue-700\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">{t('stats.totalOrders')}</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{overview.totalOrders}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"p-2 bg-green-100 rounded-lg\">\n                    <Package className=\"h-5 w-5 text-green-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">{t('productOrders.totalQuantity')}</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{overview.totalQuantity}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"p-2 bg-purple-100 rounded-lg\">\n                    <DollarSign className=\"h-5 w-5 text-purple-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">{t('productOrders.totalSales')}</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{formatCurrency(overview.totalSales)}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"p-2 bg-orange-100 rounded-lg\">\n                    <TrendingUp className=\"h-5 w-5 text-orange-600\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">{t('stats.activeRentals')}</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{overview.activeRentals}</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Additional Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">{t('stats.totalDeposits')}</p>\n                  <p className=\"text-xl font-bold text-green-600\">{formatCurrency(overview.totalDeposits)}</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 mb-1\">{t('stats.completedOrders')}</p>\n                  <p className=\"text-xl font-bold text-blue-700\">{overview.completedOrders}</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-4\">\n                <div className=\"text-center\">\n                                  <p className=\"text-sm text-gray-600 mb-1\">{t('productOrders.reservedOrders')}</p>\n                <p className=\"text-xl font-bold text-red-600\">{overview.pendingOrders}</p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </>\n      )}\n\n      {/* Inventory Summary */}\n      {inventoryData && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"p-2 bg-gray-100 rounded-lg\">\n                  <Package className=\"h-5 w-5 text-gray-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">{t('productOrders.totalStock')}</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{inventoryData.totalStock}</p>\n                  <p className=\"text-xs text-gray-500\">{t('productOrders.availableInventory')}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"p-2 bg-blue-100 rounded-lg\">\n                  <Package className=\"h-5 w-5 text-blue-700\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">{t('productOrders.currentlyRented')}</p>\n                  <p className=\"text-2xl font-bold text-blue-700\">{inventoryData.totalRenting}</p>\n                  <p className=\"text-xs text-gray-500\">{t('productOrders.outOnRental')}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"p-2 bg-green-100 rounded-lg\">\n                  <Package className=\"h-5 w-5 text-green-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">{t('productOrders.availableNow')}</p>\n                  <p className=\"text-2xl font-bold text-green-600\">{inventoryData.totalAvailable}</p>\n                  <p className=\"text-xs text-gray-500\">{t('productOrders.readyToRent')}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"p-2 bg-orange-100 rounded-lg\">\n                  <DollarSign className=\"h-5 w-5 text-orange-600\" />\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-600\">{t('stats.totalRevenue')}</p>\n                  <p className=\"text-2xl font-bold text-orange-600\">{formatCurrency(overview.totalSales)}</p>\n                  <p className=\"text-xs text-gray-500\">{t('productOrders.allTimeEarnings')}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Orders List using the same UI components as main orders page */}\n      <div className=\"space-y-6\">\n        {/* OrderListHeader hidden as requested */}\n        \n        {/* Filter Card */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <OrderFiltersComponent \n                filters={filters}\n                onFiltersChange={handleFiltersChange}\n                onSearchChange={handleSearchChange}\n                onClearFilters={handleClearFilters}\n              />\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Order Table Card with Scroll */}\n        <Card>\n          <CardContent className=\"p-0\">\n            <div className=\"overflow-x-auto\">\n              <OrderTable \n                orders={orderData.orders}\n                onOrderAction={handleOrderAction}\n                sortBy={filters.sortBy}\n                sortOrder={filters.sortOrder}\n                onSort={handleSort}\n              />\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Pagination */}\n        {orderData.total > orderData.limit && (\n          <Pagination \n            currentPage={orderData.currentPage}\n            totalPages={orderData.totalPages}\n            total={orderData.total}\n            limit={orderData.limit}\n            onPageChange={handlePageChange}\n            itemName=\"orders\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { OrderStats } from '@rentalshop/types';\nimport { useOrderTranslations } from '@rentalshop/hooks';\n\ninterface OrderHeaderProps {\n  totalOrders: number;\n  stats?: OrderStats;\n  showStats?: boolean;\n}\n\nexport const OrderHeader = React.memo(function OrderHeader({ totalOrders, stats, showStats = true }: OrderHeaderProps) {\n  const t = useOrderTranslations();\n  \n  console.log('OrderHeader received stats:', stats);\n  console.log('OrderHeader received totalOrders:', totalOrders);\n  \n  const formatCurrency = (amount: number | undefined): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount ?? 0);\n  };\n\n  // Safety checks for stats with proper null coalescing\n  const safeStats = {\n    totalOrders: stats?.totalOrders ?? 0,\n    totalRevenue: stats?.totalRevenue ?? 0,\n    totalDeposits: stats?.totalDeposits ?? 0,\n    activeRentals: stats?.activeRentals ?? 0,\n    overdueRentals: stats?.overdueRentals ?? 0,\n    completedOrders: stats?.completedOrders ?? 0,\n    cancelledOrders: stats?.cancelledOrders ?? 0,\n    averageOrderValue: stats?.averageOrderValue ?? 0\n  };\n\n  // Don't render anything if showStats is false\n  if (!showStats) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              {t('stats.totalOrders')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {(safeStats.totalOrders || 0).toLocaleString()}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {t('stats.allTimeOrders')}\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              {t('stats.activeRentals')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-blue-700 dark:text-blue-400\">\n              {(safeStats.activeRentals || 0).toLocaleString()}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {t('stats.currentlyPickuped')}\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              {t('stats.totalRevenue')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n              {formatCurrency(safeStats.totalRevenue || 0)}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {t('stats.lifetimeRevenue')}\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              {t('stats.completedOrders')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n              {(safeStats.completedOrders || 0).toLocaleString()}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {formatCurrency(safeStats.averageOrderValue || 0)} {t('stats.avgOrder')}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n});\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Input, Button } from '@rentalshop/ui';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@rentalshop/ui';\nimport { Card, CardContent } from '@rentalshop/ui';\nimport { OrderFilters as OrderFiltersType } from '@rentalshop/types';\nimport { outletsApi } from '@rentalshop/utils';\nimport { ORDER_STATUS, ORDER_TYPE } from '@rentalshop/constants';\nimport { useOrderTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface OrderFiltersProps {\n  filters: OrderFiltersType;\n  onFiltersChange: (filters: OrderFiltersType) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n}\n\ninterface Outlet {\n  id: number;\n  name: string;\n}\n\n/**\n * ✅ CLEAN CONTROLLED COMPONENT\n * - No internal state for filters (fully controlled)\n * - Local state only for search input (immediate feedback)\n * - Parent handles all filter logic\n * - Simple and predictable\n */\nexport const OrderFilters = React.memo(function OrderFilters({ \n  filters, \n  onFiltersChange, \n  onSearchChange, \n  onClearFilters \n}: OrderFiltersProps) {\n  // Get translations\n  const t = useOrderTranslations();\n  const tc = useCommonTranslations();\n  \n  // ============================================================================\n  // LOCAL STATE - Only for UI optimization\n  // ============================================================================\n  \n  // Local search state for immediate input feedback (debounced by parent)\n  const [localSearch, setLocalSearch] = useState(filters.search || '');\n  \n  // Outlets for dropdown\n  const [outlets, setOutlets] = useState<Outlet[]>([]);\n  const [loadingOutlets, setLoadingOutlets] = useState(false);\n  const [outletError, setOutletError] = useState<string | null>(null);\n\n  // ============================================================================\n  // SYNC LOCAL SEARCH WITH FILTERS (for clear button, etc)\n  // ============================================================================\n  \n  useEffect(() => {\n    // Only sync if external change (not from user typing)\n    const externalSearch = filters.search || '';\n    if (externalSearch !== localSearch) {\n      console.log('🔄 OrderFilters: Syncing search from external:', externalSearch);\n      setLocalSearch(externalSearch);\n    }\n  }, [filters.search]); // Only watch filters.search, not localSearch\n\n  // ============================================================================\n  // FETCH OUTLETS (one-time)\n  // ============================================================================\n  \n  useEffect(() => {\n    const fetchOutlets = async () => {\n      try {\n        setLoadingOutlets(true);\n        setOutletError(null);\n        const result = await outletsApi.getOutlets();\n        if (result.success && result.data?.outlets) {\n          setOutlets(result.data.outlets);\n        } else {\n          setOutletError('Failed to load outlets');\n          setOutlets([]);\n        }\n      } catch (error) {\n        console.error('Error fetching outlets:', error);\n        setOutletError('Failed to load outlets');\n        setOutlets([]);\n      } finally {\n        setLoadingOutlets(false);\n      }\n    };\n\n    fetchOutlets();\n  }, []); // Only run once\n\n  // ============================================================================\n  // HANDLERS - Simple passthrough to parent\n  // ============================================================================\n  \n  const handleSearchInput = (value: string) => {\n    console.log('⌨️ OrderFilters: Search input changed:', value);\n    // Update local state for immediate UI feedback\n    setLocalSearch(value);\n    // Notify parent (parent handles debouncing via URL update)\n    onSearchChange(value);\n  };\n\n  const handleFilterChange = (key: keyof OrderFiltersType, value: any) => {\n    onFiltersChange({\n      ...filters,\n      [key]: value\n    });\n  };\n\n  // ============================================================================\n  // RENDER - Compact inline filters (no card wrapper)\n  // ============================================================================\n  \n  return (\n    <>\n      {/* Compact single-line filters */}\n          {/* Search Field - Larger width */}\n          <div className=\"flex-1 min-w-[280px]\">\n            <div className=\"relative\">\n              <Input\n                placeholder={t('search.placeholder')}\n                value={localSearch}\n                onChange={(e) => handleSearchInput(e.target.value)}\n                className=\"pl-9 h-10\"\n              />\n              <svg \n                className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n                />\n              </svg>\n            </div>\n          </div>\n          \n          {/* Status Filter */}\n          <Select \n            value={(filters.status as string) || 'all'} \n            onValueChange={(value) => handleFilterChange('status', value === 'all' ? undefined : value)}\n          >\n            <SelectTrigger className=\"w-[160px] h-10\">\n              <SelectValue placeholder={t('filters.statusLabel')} />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">{t('filters.allStatus')}</SelectItem>\n              <SelectItem value={ORDER_STATUS.RESERVED}>{t('status.RESERVED')}</SelectItem>\n              <SelectItem value={ORDER_STATUS.PICKUPED}>{t('status.PICKUPED')}</SelectItem>\n              <SelectItem value={ORDER_STATUS.RETURNED}>{t('status.RETURNED')}</SelectItem>\n              <SelectItem value={ORDER_STATUS.COMPLETED}>{t('status.COMPLETED')}</SelectItem>\n              <SelectItem value={ORDER_STATUS.CANCELLED}>{t('status.CANCELLED')}</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          {/* Order Type Filter */}\n          <Select \n            value={filters.orderType || 'all'} \n            onValueChange={(value) => handleFilterChange('orderType', value === 'all' ? undefined : value)}\n          >\n            <SelectTrigger className=\"w-[130px] h-10\">\n              <SelectValue placeholder={t('filters.typeLabel')} />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">{t('filters.allTypes')}</SelectItem>\n              <SelectItem value={ORDER_TYPE.RENT}>{t('orderType.RENT')}</SelectItem>\n              <SelectItem value={ORDER_TYPE.SALE}>{t('orderType.SALE')}</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          {/* Outlet Filter */}\n          <Select \n            value={filters.outletId ? filters.outletId.toString() : 'all'} \n            onValueChange={(value) => {\n              const newValue = value === 'all' ? undefined : parseInt(value);\n              handleFilterChange('outletId', newValue);\n            }}\n          >\n            <SelectTrigger className=\"w-[160px] h-10\">\n              <SelectValue placeholder={t('filters.outletLabel')} />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">{t('filters.allOutlets')}</SelectItem>\n              {loadingOutlets ? (\n                <SelectItem value=\"loading\" disabled>{t('filters.loading')}</SelectItem>\n              ) : outletError ? (\n                <SelectItem value=\"error\" disabled>{t('filters.error')}</SelectItem>\n              ) : outlets.length === 0 ? (\n                <SelectItem value=\"empty\" disabled>{t('filters.noOutlets')}</SelectItem>\n              ) : (\n                outlets.map((outlet) => (\n                  <SelectItem key={outlet.id} value={outlet.id.toString()}>\n                    {outlet.name}\n                  </SelectItem>\n                ))\n              )}\n            </SelectContent>\n          </Select>\n          \n      {/* Clear Filters Button */}\n      {onClearFilters && (filters.status || filters.orderType || filters.outletId || localSearch) && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          {t('filters.clear')}\n        </Button>\n      )}\n    </>\n  );\n});\n","import React from 'react';\nimport { Button, Badge } from '../../../ui';\nimport { Calendar, Clock, TrendingUp, AlertCircle } from 'lucide-react';\n\nexport interface QuickFilterOption {\n  id: string;\n  label: string;\n  icon?: React.ReactNode;\n  startDate: Date;\n  endDate: Date;\n  description?: string;\n}\n\ninterface OrderQuickFiltersProps {\n  activeFilter?: string;\n  totalOrders: number;\n  filteredCount?: number;\n  onFilterChange: (filter: QuickFilterOption | null) => void;\n  showWarning?: boolean;\n}\n\n/**\n * Quick filter buttons for common time ranges\n * Following Shopify, Stripe pattern - encourage time-based filtering\n */\nexport function OrderQuickFilters({\n  activeFilter,\n  totalOrders,\n  filteredCount,\n  onFilterChange,\n  showWarning = false\n}: OrderQuickFiltersProps) {\n  const now = new Date();\n  \n  // Calculate date ranges\n  const getDateRange = (days: number): { start: Date; end: Date } => {\n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    \n    const start = new Date();\n    start.setDate(start.getDate() - days);\n    start.setHours(0, 0, 0, 0);\n    \n    return { start, end };\n  };\n  \n  const getTodayRange = (): { start: Date; end: Date } => {\n    const start = new Date();\n    start.setHours(0, 0, 0, 0);\n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    return { start, end };\n  };\n  \n  const getThisWeekRange = (): { start: Date; end: Date } => {\n    const start = new Date();\n    const day = start.getDay();\n    const diff = start.getDate() - day + (day === 0 ? -6 : 1); // Monday\n    start.setDate(diff);\n    start.setHours(0, 0, 0, 0);\n    \n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    return { start, end };\n  };\n  \n  const getThisMonthRange = (): { start: Date; end: Date } => {\n    const start = new Date(now.getFullYear(), now.getMonth(), 1);\n    start.setHours(0, 0, 0, 0);\n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    return { start, end };\n  };\n  \n  const getThisQuarterRange = (): { start: Date; end: Date } => {\n    const quarter = Math.floor(now.getMonth() / 3);\n    const start = new Date(now.getFullYear(), quarter * 3, 1);\n    start.setHours(0, 0, 0, 0);\n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    return { start, end };\n  };\n  \n  // Quick filter options\n  const todayRange = getTodayRange();\n  const weekRange = getThisWeekRange();\n  const monthRange = getDateRange(30);\n  const quarterRange = getThisQuarterRange();\n  \n  const quickFilters: QuickFilterOption[] = [\n    {\n      id: 'today',\n      label: 'Today',\n      icon: <Clock className=\"w-3.5 h-3.5\" />,\n      startDate: todayRange.start,\n      endDate: todayRange.end,\n      description: 'Orders created today'\n    },\n    {\n      id: 'week',\n      label: 'This Week',\n      icon: <Calendar className=\"w-3.5 h-3.5\" />,\n      startDate: weekRange.start,\n      endDate: weekRange.end,\n      description: 'Orders from this week'\n    },\n    {\n      id: 'month',\n      label: 'Last 30 Days',\n      icon: <TrendingUp className=\"w-3.5 h-3.5\" />,\n      startDate: monthRange.start,\n      endDate: monthRange.end,\n      description: 'Most commonly used filter'\n    },\n    {\n      id: 'quarter',\n      label: 'This Quarter',\n      icon: <Calendar className=\"w-3.5 h-3.5\" />,\n      startDate: quarterRange.start,\n      endDate: quarterRange.end,\n      description: 'Orders from current quarter'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-3\">\n      {/* Quick Filter Buttons */}\n      <div className=\"flex items-center gap-2 flex-wrap\">\n        <span className=\"text-sm font-medium text-text-secondary\">Quick filters:</span>\n        \n        {quickFilters.map((filter) => (\n          <Button\n            key={filter.id}\n            variant={activeFilter === filter.id ? 'default' : 'outline'}\n            size=\"sm\"\n            onClick={() => onFilterChange(filter)}\n            className=\"gap-1.5\"\n          >\n            {filter.icon}\n            {filter.label}\n          </Button>\n        ))}\n        \n        {activeFilter && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => onFilterChange(null)}\n            className=\"text-text-tertiary hover:text-text-primary\"\n          >\n            Clear\n          </Button>\n        )}\n      </div>\n      \n      {/* Info Banner */}\n      {filteredCount !== undefined && totalOrders > 0 && (\n        <div className={`flex items-center gap-2 px-4 py-2.5 rounded-lg ${\n          showWarning \n            ? 'bg-warning-bg border border-warning-border' \n            : 'bg-bg-secondary border border-border'\n        }`}>\n          {showWarning && <AlertCircle className=\"w-4 h-4 text-warning-text flex-shrink-0\" />}\n          \n          <div className=\"flex-1 flex items-center gap-2 text-sm\">\n            {activeFilter ? (\n              <>\n                <span className=\"text-text-secondary\">Showing</span>\n                <Badge variant=\"outline\" className=\"font-semibold\">\n                  {filteredCount.toLocaleString()}\n                </Badge>\n                <span className=\"text-text-secondary\">of</span>\n                <Badge variant=\"outline\">\n                  {totalOrders.toLocaleString()}\n                </Badge>\n                <span className=\"text-text-secondary\">total orders</span>\n              </>\n            ) : (\n              <>\n                {showWarning ? (\n                  <>\n                    <span className=\"text-warning-text font-medium\">\n                      ⚠️ Viewing all {totalOrders.toLocaleString()} orders\n                    </span>\n                    <span className=\"text-text-tertiary\">\n                      - Use quick filters for better performance\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <span className=\"text-text-secondary\">Total orders:</span>\n                    <Badge variant=\"outline\" className=\"font-semibold\">\n                      {totalOrders.toLocaleString()}\n                    </Badge>\n                  </>\n                )}\n              </>\n            )}\n          </div>\n          \n          {activeFilter && (\n            <span className=\"text-xs text-text-tertiary\">\n              {quickFilters.find(f => f.id === activeFilter)?.description}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n","'use client';\n\nimport React, { useState } from 'react';\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  Label,\n  Input,\n  Badge\n} from '../../../ui';\nimport { Calendar, AlertCircle } from 'lucide-react';\n\nexport interface DateRangeOption {\n  id: string;\n  label: string;\n  getRange: () => { start: Date; end: Date };\n  description?: string;\n}\n\ninterface OrderDateRangeFilterProps {\n  activeRange?: string;\n  totalOrders: number;\n  filteredCount?: number;\n  onRangeChange: (rangeId: string, start: Date, end: Date) => void;\n  showWarning?: boolean;\n}\n\n/**\n * Modern date range filter following Shopify/Stripe patterns\n * Provides dropdown with predefined ranges + custom date picker\n */\nexport function OrderDateRangeFilter({\n  activeRange = 'week',\n  totalOrders,\n  filteredCount,\n  onRangeChange,\n  showWarning = false\n}: OrderDateRangeFilterProps) {\n  const [showCustomDialog, setShowCustomDialog] = useState(false);\n  const [customStart, setCustomStart] = useState('');\n  const [customEnd, setCustomEnd] = useState('');\n\n  // ============================================================================\n  // DATE RANGE CALCULATIONS - Simplified to 3 main options\n  // ============================================================================\n\n  const getLastNDays = (days: number) => {\n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    const start = new Date();\n    start.setDate(start.getDate() - days);\n    start.setHours(0, 0, 0, 0);\n    return { start, end };\n  };\n\n  const getAllTime = () => {\n    const start = new Date(2020, 0, 1); // System start date\n    start.setHours(0, 0, 0, 0);\n    const end = new Date();\n    end.setHours(23, 59, 59, 999);\n    return { start, end };\n  };\n\n  // ============================================================================\n  // DATE RANGE OPTIONS - Simplified (3 main + others)\n  // ============================================================================\n\n  const dateRangeOptions: DateRangeOption[] = [\n    {\n      id: 'month',\n      label: 'Last 30 days',\n      getRange: () => getLastNDays(30),\n      description: 'Default - Most relevant orders'\n    },\n    {\n      id: '90days',\n      label: 'Last 90 days',\n      getRange: () => getLastNDays(90),\n      description: 'Quarterly view'\n    },\n    {\n      id: 'year',\n      label: 'Last 12 months',\n      getRange: () => getLastNDays(365),\n      description: 'Annual view'\n    },\n    {\n      id: 'all',\n      label: 'All time',\n      getRange: getAllTime,\n      description: 'May be slow with large datasets'\n    },\n    {\n      id: 'custom',\n      label: 'Custom range...',\n      getRange: () => ({ start: new Date(), end: new Date() }),\n      description: 'Select custom date range'\n    }\n  ];\n\n  // ============================================================================\n  // HANDLERS\n  // ============================================================================\n\n  const handleRangeChange = (rangeId: string) => {\n    if (rangeId === 'custom') {\n      setShowCustomDialog(true);\n      return;\n    }\n\n    const option = dateRangeOptions.find(opt => opt.id === rangeId);\n    if (option) {\n      const { start, end } = option.getRange();\n      onRangeChange(rangeId, start, end);\n    }\n  };\n\n  const handleCustomApply = () => {\n    if (!customStart || !customEnd) return;\n    \n    const start = new Date(customStart);\n    start.setHours(0, 0, 0, 0);\n    const end = new Date(customEnd);\n    end.setHours(23, 59, 59, 999);\n    \n    onRangeChange('custom', start, end);\n    setShowCustomDialog(false);\n    setCustomStart('');\n    setCustomEnd('');\n  };\n\n  const currentOption = dateRangeOptions.find(opt => opt.id === activeRange);\n\n  return (\n    <>\n      {/* Compact Date Range Dropdown - Inline with other filters */}\n      <Select value={activeRange} onValueChange={handleRangeChange}>\n        <SelectTrigger className=\"w-[180px]\">\n          <SelectValue placeholder=\"Date range\">\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"w-3.5 h-3.5\" />\n              {currentOption?.label || 'Date range'}\n            </div>\n          </SelectValue>\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"month\">\n            <div className=\"flex items-center gap-2\">\n              <span>Last 30 days</span>\n              <Badge variant=\"outline\" className=\"text-[10px] px-1 py-0\">Default</Badge>\n            </div>\n          </SelectItem>\n          <SelectItem value=\"90days\">Last 90 days</SelectItem>\n          <SelectItem value=\"year\">Last 12 months</SelectItem>\n          \n          {/* Separator */}\n          <div className=\"h-px bg-border my-1\"></div>\n          \n          {/* Others */}\n          <SelectItem value=\"all\">\n            <div className=\"flex items-center gap-2\">\n              <span>All time</span>\n              {totalOrders > 10000 && (\n                <AlertCircle className=\"w-3 h-3 text-warning-text\" />\n              )}\n            </div>\n          </SelectItem>\n          <SelectItem value=\"custom\">\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"w-3 h-3\" />\n              <span>Custom range...</span>\n            </div>\n          </SelectItem>\n        </SelectContent>\n      </Select>\n      \n      {/* Only show warning for large datasets */}\n      {showWarning && activeRange === 'all' && (\n        <div className=\"flex items-center gap-2 px-3 py-2 rounded-lg bg-warning-bg border border-warning-border\">\n          <AlertCircle className=\"w-4 h-4 text-warning-text flex-shrink-0\" />\n          <span className=\"text-sm text-warning-text font-medium\">\n            Viewing all {totalOrders.toLocaleString()} orders may be slow\n          </span>\n        </div>\n      )}\n\n      {/* Custom Date Range Dialog */}\n      <Dialog open={showCustomDialog} onOpenChange={setShowCustomDialog}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Calendar className=\"w-5 h-5\" />\n              Custom Date Range\n            </DialogTitle>\n          </DialogHeader>\n          \n          <div className=\"space-y-4 py-4\">\n            <div>\n              <Label htmlFor=\"start-date\">Start Date</Label>\n              <Input\n                id=\"start-date\"\n                type=\"date\"\n                value={customStart}\n                onChange={(e) => setCustomStart(e.target.value)}\n                max={customEnd || new Date().toISOString().split('T')[0]}\n              />\n            </div>\n            \n            <div>\n              <Label htmlFor=\"end-date\">End Date</Label>\n              <Input\n                id=\"end-date\"\n                type=\"date\"\n                value={customEnd}\n                onChange={(e) => setCustomEnd(e.target.value)}\n                min={customStart}\n                max={new Date().toISOString().split('T')[0]}\n              />\n            </div>\n\n            <div className=\"text-xs text-text-tertiary bg-bg-secondary p-3 rounded-lg\">\n              💡 <strong>Tip:</strong> For large date ranges, consider using the export feature instead of viewing all data in the table.\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setShowCustomDialog(false);\n                setCustomStart('');\n                setCustomEnd('');\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"default\"\n              onClick={handleCustomApply}\n              disabled={!customStart || !customEnd}\n            >\n              Apply Range\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Badge } from '../../../ui/badge';\nimport { Card, CardContent } from '../../../ui/card';\nimport { useFormatCurrency } from '@rentalshop/ui';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { useFormattedFullDate } from '@rentalshop/utils';\nimport { ORDER_STATUS_COLORS, ORDER_TYPE_COLORS } from '@rentalshop/constants';\nimport { Eye, Edit } from 'lucide-react';\nimport type { OrderListItem, OrderItemFlattened } from '@rentalshop/types';\n\ninterface OrderTableProps {\n  orders: OrderListItem[];\n  onOrderAction: (action: string, orderId: string) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\nexport const OrderTable = React.memo(function OrderTable({ \n  orders, \n  onOrderAction,\n  sortBy = 'createdAt',\n  sortOrder = 'desc',\n  onSort\n}: OrderTableProps) {\n  // Use formatCurrency hook - automatically uses merchant's currency\n  const formatMoney = useFormatCurrency();\n  const t = useOrderTranslations();\n  \n  // Debug: Log order statuses\n  React.useEffect(() => {\n    if (orders.length > 0) {\n      console.log('📋 OrderTable - Order statuses:', orders.map(o => ({ \n        orderNumber: o.orderNumber, \n        status: o.status,\n        canEdit: o.status === 'RESERVED'\n      })));\n    }\n  }, [orders]);\n\n  if (orders.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <div className=\"text-4xl mb-4\">📋</div>\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noOrders')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.tryAdjustingFilters')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const getStatusBadge = (status: string) => {\n    return (\n      <Badge variant=\"outline\" className={ORDER_STATUS_COLORS[status as keyof typeof ORDER_STATUS_COLORS]}>\n        {t(`status.${status}`)}\n      </Badge>\n    );\n  };\n\n  const getOrderTypeBadge = (type: string) => {\n    return (\n      <Badge variant=\"outline\" className={ORDER_TYPE_COLORS[type as keyof typeof ORDER_TYPE_COLORS]}>\n        {t(`orderType.${type}`)}\n      </Badge>\n    );\n  };\n\n  const formatDate = (dateString: string | Date | undefined) => {\n    if (!dateString) return 'N/A';\n    // Use the new date utility for consistent formatting\n    return useFormattedFullDate(dateString);\n  };\n\n  const getOrderIcon = () => {\n    return (\n      <div className=\"w-16 h-16 bg-blue-100 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800 flex items-center justify-center shadow-sm\">\n        <svg className=\"w-8 h-8 text-blue-700 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n      </div>\n    );\n  };\n\n  const handleSort = (column: string) => {\n    if (onSort) {\n      onSort(column);\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 dark:border-gray-700 h-full flex flex-col\">\n      <div className=\"overflow-auto flex-1\">\n        <table className=\"w-full min-w-[1000px]\">\n          {/* Table Header with Sorting - Sticky */}\n          <thead className=\"bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10\">\n            <tr>\n              <th \n                onClick={() => handleSort('orderNumber')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('orderNumber')}\n                  {sortBy === 'orderNumber' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('orderType.label')}\n              </th>\n              <th \n                onClick={() => handleSort('status')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('status.label')}\n                  {sortBy === 'status' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('customer.label')}\n              </th>\n              <th \n                onClick={() => handleSort('totalAmount')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('amount.total')}\n                  {sortBy === 'totalAmount' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th \n                onClick={() => handleSort('pickupPlanAt')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('dates.pickupDate')}\n                  {sortBy === 'pickupPlanAt' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th \n                onClick={() => handleSort('createdAt')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('dates.createdDate')}\n                  {sortBy === 'createdAt' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('actions.label')}\n              </th>\n            </tr>\n          </thead>\n          \n          {/* Table Body */}\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {orders.map((order) => (\n              <tr key={order.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                {/* Order Number */}\n                <td className=\"px-6 py-3 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {order.orderNumber}\n                  </div>\n                </td>\n                \n                {/* Order Type */}\n                <td className=\"px-6 py-3 whitespace-nowrap\">\n                  {getOrderTypeBadge(order.orderType)}\n                </td>\n                \n                {/* Status */}\n                <td className=\"px-6 py-3 whitespace-nowrap\">\n                  {getStatusBadge(order.status)}\n                </td>\n                \n                {/* Customer */}\n                <td className=\"px-6 py-3\">\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900 dark:text-white\">\n                      {order.customerName || 'N/A'}\n                    </div>\n                    <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                      {order.customerPhone || 'N/A'}\n                    </div>\n                  </div>\n                </td>\n                \n                {/* Amount */}\n                <td className=\"px-6 py-3 whitespace-nowrap\">\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900 dark:text-white\">{formatMoney(order.totalAmount)}</div>\n                    {order.depositAmount > 0 && (\n                      <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                        {t('amount.deposit')}: {formatMoney(order.depositAmount)}\n                      </div>\n                    )}\n                  </div>\n                </td>\n                \n                {/* Pickup Date */}\n                <td className=\"px-6 py-3 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {formatDate(order.pickupPlanAt)}\n                  </div>\n                  {order.returnPlanAt && (\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {t('dates.returnLabel')}: {formatDate(order.returnPlanAt)}\n                    </div>\n                  )}\n                </td>\n                \n                {/* Created Date */}\n                <td className=\"px-6 py-3 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                  {formatDate(order.createdAt)}\n                </td>\n                \n                {/* Actions */}\n                <td className=\"px-6 py-3 whitespace-nowrap text-right text-sm\">\n                  <div className=\"flex items-center justify-end gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => onOrderAction('view', order.orderNumber)}\n                      className=\"h-8 px-3\"\n                    >\n                      <Eye className=\"h-4 w-4 mr-1\" />\n                      {t('actions.view')}\n                    </Button>\n                    \n                    {/* Always show Edit button, but disable if not RESERVED */}\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => onOrderAction('edit', order.orderNumber)}\n                      disabled={order.status !== 'RESERVED'}\n                      className=\"h-8 px-3\"\n                      title={order.status !== 'RESERVED' ? t('messages.cannotEditOrder') : undefined}\n                    >\n                      <Edit className=\"h-4 w-4 mr-1\" />\n                      {t('actions.edit')}\n                    </Button>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n});\n","import React from 'react';\nimport { Button } from '@rentalshop/ui';\nimport { Card, CardContent } from '@rentalshop/ui';\n\ninterface OrderActionsProps {\n  onAction: (action: string, orderId?: string) => void;\n}\n\nexport function OrderActions({ onAction }: OrderActionsProps) {\n  const actions = [\n    {\n      id: 'create-order',\n      label: 'Create Order',\n      description: 'Start a new rental or sale order',\n      icon: '📋',\n      variant: 'default' as const\n    },\n    {\n      id: 'import-orders',\n      label: 'Import Orders',\n      description: 'Import from CSV/Excel',\n      icon: '📥',\n      variant: 'secondary' as const\n    },\n    {\n      id: 'export-orders',\n      label: 'Export Orders',\n      description: 'Export to CSV/Excel',\n      icon: '📤',\n      variant: 'outline' as const\n    },\n    {\n      id: 'bulk-actions',\n      label: 'Bulk Actions',\n      description: 'Manage multiple orders',\n      icon: '⚡',\n      variant: 'outline' as const\n    },\n    {\n      id: 'order-templates',\n      label: 'Order Templates',\n      description: 'Use predefined order templates',\n      icon: '📝',\n      variant: 'outline' as const\n    },\n    {\n      id: 'schedule-pickups',\n      label: 'Schedule Pickups',\n      description: 'Manage pickup schedules',\n      icon: '🚚',\n      variant: 'outline' as const\n    }\n  ];\n\n  return (\n    <Card>\n      <CardContent className=\"p-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n          {actions.map((action) => (\n            <Button\n              key={action.id}\n              variant={action.variant}\n              className=\"h-auto p-3 flex flex-col items-start space-y-2 text-left\"\n              onClick={() => onAction(action.id)}\n            >\n              <div className=\"flex items-center space-x-2 w-full\">\n                <span className=\"text-lg\">{action.icon}</span>\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-sm\">{action.label}</div>\n                  <div className=\"text-xs opacity-80\">{action.description}</div>\n                </div>\n              </div>\n            </Button>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { Badge } from '@rentalshop/ui';\nimport { OrderStats as OrderStatsType } from '@rentalshop/types';\n\ninterface OrderStatsProps {\n  stats: OrderStatsType;\n}\n\nexport function OrderStats({ stats }: OrderStatsProps) {\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const getStatusDistribution = () => {\n    const total = stats.totalOrders;\n    if (total === 0) return [];\n    \n    // Calculate reserved orders (total - active - completed - cancelled)\n    const reservedOrders = Math.max(0, total - stats.activeRentals - stats.completedOrders - stats.cancelledOrders);\n    \n    return [\n      { label: 'Reserved', count: reservedOrders, percentage: (reservedOrders / total) * 100, color: 'bg-red-500' },\n      { label: 'Pickuped', count: stats.activeRentals, percentage: (stats.activeRentals / total) * 100, color: 'bg-orange-500' },\n      { label: 'Completed', count: stats.completedOrders, percentage: (stats.completedOrders / total) * 100, color: 'bg-green-500' },\n      { label: 'Cancelled', count: stats.cancelledOrders, percentage: (stats.cancelledOrders / total) * 100, color: 'bg-red-700' }\n    ];\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Order Status Distribution */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Order Status Distribution</CardTitle>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Breakdown of orders by current status\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {getStatusDistribution().map((status) => (\n              <div key={status.label} className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    {status.label}\n                  </span>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {status.count} orders\n                    </span>\n                    <span className=\"text-sm font-medium\">\n                      {status.percentage.toFixed(1)}%\n                    </span>\n                  </div>\n                </div>\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                  <div \n                    className={`h-2 rounded-full ${status.color}`}\n                    style={{ width: `${status.percentage}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Financial Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Revenue Metrics</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Total Revenue</span>\n                <span className=\"font-medium text-lg text-green-600 dark:text-green-400\">\n                  {formatCurrency(stats.totalRevenue)}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Total Deposits</span>\n                <span className=\"font-medium text-blue-700 dark:text-blue-400\">\n                  {formatCurrency(stats.totalDeposits)}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Average Order Value</span>\n                <span className=\"font-medium\">\n                  {formatCurrency(stats.averageOrderValue)}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Overdue Rentals</span>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\n                    {stats.overdueRentals} orders\n                  </Badge>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle>Order Volume</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Total Orders</span>\n                <span className=\"font-medium text-lg\">\n                  {stats.totalOrders.toLocaleString()}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Active Rentals</span>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                    {stats.activeRentals} orders\n                  </Badge>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Completed Orders</span>\n                <span className=\"font-medium text-green-600 dark:text-green-400\">\n                  {stats.completedOrders}\n                </span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Cancelled Orders</span>\n                <span className=\"font-medium text-red-600 dark:text-red-400\">\n                  {stats.cancelledOrders}\n                </span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* Performance Insights */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Performance Insights</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 rounded-lg bg-gray-50 dark:bg-gray-800\">\n              <div className=\"text-2xl font-bold text-orange-600 dark:text-orange-400\">\n                {stats.totalOrders > 0 ? ((stats.activeRentals / stats.totalOrders) * 100).toFixed(1) : 0}%\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Active Rental Rate\n              </div>\n            </div>\n            \n            <div className=\"text-center p-4 rounded-lg bg-gray-50 dark:bg-gray-800\">\n              <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n                {stats.totalOrders > 0 ? ((stats.completedOrders / stats.totalOrders) * 100).toFixed(1) : 0}%\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Completion Rate\n              </div>\n            </div>\n            \n            <div className=\"text-center p-4 rounded-lg bg-gray-50 dark:bg-gray-800\">\n              <div className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n                {stats.totalOrders > 0 ? ((stats.cancelledOrders / stats.totalOrders) * 100).toFixed(1) : 0}%\n              </div>\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Cancellation Rate\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Pagination } from '@rentalshop/ui';\n\ninterface OrderPaginationProps {\n  currentPage: number;\n  totalPages: number;\n  total: number;\n  onPageChange: (page: number) => void;\n}\n\nexport function OrderPagination({ \n  currentPage, \n  totalPages, \n  total, \n  onPageChange \n}: OrderPaginationProps) {\n  return (\n    <Pagination\n      currentPage={currentPage}\n      totalPages={totalPages}\n      total={total}\n      limit={20}\n      onPageChange={onPageChange}\n      itemName=\"orders\"\n    />\n  );\n}\n","import { \n  TableSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '@rentalshop/ui';\n\nexport function OrdersLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Orders Table */}\n      <TableSkeleton rows={8} columns={6} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function OrderDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-48 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* Order Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </div>\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Order Items */}\n      <div className=\"space-y-4\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <TableSkeleton rows={3} columns={4} />\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Badge,\n  EmptyState\n} from '@rentalshop/ui';\nimport { \n  ShoppingCart, \n  Calendar, \n  User, \n  DollarSign, \n  Package,\n  X\n} from 'lucide-react';\nimport type { Product, OrderWithDetails } from '@rentalshop/types';\nimport { ordersApi } from '@rentalshop/utils';\nimport { useOrderTranslations } from '@rentalshop/hooks';\n\ninterface ProductOrdersDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  product: Product | null;\n}\n\nexport function ProductOrdersDialog({ open, onOpenChange, product }: ProductOrdersDialogProps) {\n  const t = useOrderTranslations();\n  const [orders, setOrders] = useState<OrderWithDetails[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (open && product) {\n      fetchProductOrders();\n    }\n  }, [open, product]);\n\n  const fetchProductOrders = async () => {\n    if (!product) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Fetch orders for this product\n      const response = await ordersApi.searchOrders({\n        productId: product.id,\n        limit: 50\n      });\n      \n      if (response.success && response.data) {\n        setOrders(response.data.orders || []);\n      } else {\n        setError('Failed to fetch orders');\n      }\n    } catch (error) {\n      console.error('Error fetching product orders:', error);\n      setError('Failed to fetch orders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatDate = (date: Date | string) => {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      'RESERVED': { color: 'bg-blue-100 text-blue-800', text: 'Reserved' },\n      'PICKUPED': { color: 'bg-green-100 text-green-800', text: 'Picked Up' },\n      'RETURNED': { color: 'bg-gray-100 text-gray-800', text: 'Returned' },\n      'COMPLETED': { color: 'bg-green-100 text-green-800', text: 'Completed' },\n      'CANCELLED': { color: 'bg-red-100 text-red-800', text: 'Cancelled' }\n    };\n    \n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig['RESERVED'];\n    \n    return (\n      <Badge className={config.color}>\n        {config.text}\n      </Badge>\n    );\n  };\n\n  const getOrderTypeBadge = (orderType: string) => {\n    const typeConfig = {\n      'RENT': { color: 'bg-purple-100 text-purple-800', text: 'Rental' },\n      'SALE': { color: 'bg-green-100 text-green-800', text: 'Sale' }\n    };\n    \n    const config = typeConfig[orderType as keyof typeof typeConfig] || typeConfig['RENT'];\n    \n    return (\n      <Badge className={config.color}>\n        {config.text}\n      </Badge>\n    );\n  };\n\n  if (!product) return null;\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-hidden flex flex-col\">\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <ShoppingCart className=\"w-5 h-5\" />\n                Orders for {product.name}\n              </DialogTitle>\n              <DialogDescription>\n                View all orders containing this product\n              </DialogDescription>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onOpenChange(false)}\n              className=\"h-8 w-8 p-0\"\n            >\n              <X className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </DialogHeader>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-action-primary\"></div>\n              <span className=\"ml-2 text-text-secondary\">Loading orders...</span>\n            </div>\n          ) : error ? (\n            <div className=\"text-center py-12\">\n              <div className=\"text-red-500 mb-4\">❌</div>\n              <h3 className=\"text-lg font-medium text-text-primary mb-2\">Error Loading Orders</h3>\n              <p className=\"text-text-secondary mb-4\">{error}</p>\n              <Button onClick={fetchProductOrders} variant=\"outline\">\n                Try Again\n              </Button>\n            </div>\n          ) : orders.length === 0 ? (\n            <EmptyState\n              icon={ShoppingCart}\n              title={t('messages.noOrdersForProduct')}\n              description={t('messages.noOrdersForProductDescription')}\n            />\n          ) : (\n            <div className=\"space-y-4\">\n              {orders.map((order) => (\n                <Card key={order.id} className=\"border border-border\">\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle className=\"text-lg\">\n                        Order #{order.orderNumber}\n                      </CardTitle>\n                      <div className=\"flex items-center gap-2\">\n                        {getOrderTypeBadge(order.orderType)}\n                        {getStatusBadge(order.status)}\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      {/* Customer Info */}\n                      <div className=\"flex items-center gap-3\">\n                        <User className=\"w-4 h-4 text-text-tertiary\" />\n                        <div>\n                          <p className=\"text-sm font-medium text-text-primary\">\n                            {order.customer?.firstName} {order.customer?.lastName}\n                          </p>\n                          <p className=\"text-xs text-text-secondary\">\n                            {order.customer?.phone}\n                          </p>\n                        </div>\n                      </div>\n\n                      {/* Order Date */}\n                      <div className=\"flex items-center gap-3\">\n                        <Calendar className=\"w-4 h-4 text-text-tertiary\" />\n                        <div>\n                          <p className=\"text-sm font-medium text-text-primary\">\n                            {formatDate(order.createdAt)}\n                          </p>\n                          <p className=\"text-xs text-text-secondary\">\n                            Created\n                          </p>\n                        </div>\n                      </div>\n\n                      {/* Total Amount */}\n                      <div className=\"flex items-center gap-3\">\n                        <DollarSign className=\"w-4 h-4 text-text-tertiary\" />\n                        <div>\n                          <p className=\"text-sm font-medium text-text-primary\">\n                            {formatCurrency(order.totalAmount)}\n                          </p>\n                          <p className=\"text-xs text-text-secondary\">\n                            Total Amount\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Order Items */}\n                    {(order as any).orderItems && (order as any).orderItems.length > 0 && (\n                      <div className=\"mt-4 pt-4 border-t border-border\">\n                        <h4 className=\"text-sm font-medium text-text-primary mb-2\">Order Items:</h4>\n                        <div className=\"space-y-2\">\n                          {(order as any).orderItems.map((item: any, index: number) => (\n                            <div key={index} className=\"flex items-center justify-between text-sm\">\n                              <div className=\"flex items-center gap-2\">\n                                <Package className=\"w-3 h-3 text-text-tertiary\" />\n                                <span className=\"text-text-primary\">\n                                  {item.product?.name || 'Unknown Product'}\n                                </span>\n                                <span className=\"text-text-secondary\">\n                                  (Qty: {item.quantity})\n                                </span>\n                              </div>\n                              <span className=\"text-text-primary font-medium\">\n                                {formatCurrency(item.totalPrice)}\n                              </span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Rental Dates (for rental orders) */}\n                    {order.orderType === 'RENT' && (\n                      <div className=\"mt-4 pt-4 border-t border-border\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                          {order.pickupPlanAt && (\n                            <div>\n                              <p className=\"text-text-secondary\">Pickup Date:</p>\n                              <p className=\"text-text-primary font-medium\">\n                                {formatDate(order.pickupPlanAt)}\n                              </p>\n                            </div>\n                          )}\n                          {order.returnPlanAt && (\n                            <div>\n                              <p className=\"text-text-secondary\">Return Date:</p>\n                              <p className=\"text-text-primary font-medium\">\n                                {formatDate(order.returnPlanAt)}\n                              </p>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex justify-end pt-4 border-t border-border\">\n          <Button onClick={() => onOpenChange(false)} variant=\"outline\">\n            Close\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { \n  PageWrapper,\n  PageContent,\n  Pagination,\n  EmptyState,\n  Button,\n  Card,\n  CardContent\n} from '@rentalshop/ui';\nimport { CustomerPageHeader, CustomerSearch, CustomerTable } from './components';\nimport { \n  User as UserIcon, \n  Download\n} from 'lucide-react';\nimport type { Customer, CustomerFilters } from '@rentalshop/types';\nimport { useUserRole, useCustomerTranslations } from '@rentalshop/hooks';\n\n// Data interface for customers list\nexport interface CustomersData {\n  customers: Customer[];\n  items?: Customer[]; // Alias for compatibility\n  total: number;\n  page: number;\n  totalPages: number;\n  limit: number;\n  hasMore: boolean;\n}\n\nexport interface CustomersProps {\n  // Data props (required for external data mode - URL state pattern)\n  data?: CustomersData;\n  filters?: CustomerFilters;\n  onFiltersChange?: (filters: CustomerFilters) => void;\n  onSearchChange?: (searchValue: string) => void;\n  onClearFilters?: () => void;\n  onCustomerAction?: (action: string, customerId: number) => void;\n  onPageChange?: (page: number) => void;\n  onSort?: (column: string) => void;\n  \n  // Display props\n  title?: string;\n  subtitle?: string;\n  showExportButton?: boolean;\n  showAddButton?: boolean;\n  addButtonText?: string;\n  exportButtonText?: string;\n  showStats?: boolean;\n  currentUser?: any;\n  onExport?: () => void;\n  className?: string;\n}\n\n/**\n * ✅ SIMPLIFIED CUSTOMERS COMPONENT (Modern Pattern)\n * \n * - Clean presentation component (like Orders.tsx, Products.tsx)\n * - No internal state management\n * - Works with external data (URL state pattern)\n * - Single responsibility: render customers UI\n * - ~120 lines (was 333 lines before cleanup)\n */\nexport const Customers: React.FC<CustomersProps> = ({\n  // Data props\n  data,\n  filters = {},\n  onFiltersChange = () => {},\n  onSearchChange = () => {},\n  onClearFilters = () => {},\n  onCustomerAction = () => {},\n  onPageChange = () => {},\n  onSort = () => {},\n  \n  // Display props\n  title = \"Customer Management\",\n  subtitle = \"Manage customers in the system\",\n  showExportButton = false,\n  showAddButton = false,\n  addButtonText = \"Add Customer\",\n  exportButtonText = \"Export Customers\",\n  showStats = false,\n  currentUser,\n  onExport,\n  className = \"\"\n}) => {\n  \n  // User role check for permissions\n  const { canManageUsers } = useUserRole(currentUser);\n  \n  // Get translations\n  const t = useCustomerTranslations();\n  \n  // Handler for export button\n  const handleExport = () => {\n    if (onExport) {\n      onExport();\n    } else {\n      console.log('Export functionality not implemented');\n    }\n  };\n\n  // Handler for add customer button\n  const handleAddCustomer = () => {\n    console.log('Add customer functionality should be implemented in page');\n  };\n\n  // Default empty data\n  const customers = data?.customers || [];\n  const totalCustomers = data?.total || 0;\n  const currentPage = data?.page || 1;\n  const totalPages = data?.totalPages || 1;\n  const limit = data?.limit || 25;\n\n  // Memoize handlers to prevent child re-renders\n  const memoizedOnFiltersChange = React.useCallback(onFiltersChange, [onFiltersChange]);\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnClearFilters = React.useCallback(onClearFilters, [onClearFilters]);\n  const memoizedOnCustomerAction = React.useCallback(onCustomerAction, [onCustomerAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort, [onSort]);\n\n  return (\n    <div className={`flex flex-col h-full ${className}`}>\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 space-y-4\">\n        <CustomerPageHeader\n          title={title}\n          subtitle={subtitle}\n        >\n          {showAddButton && canManageUsers && (\n            <Button\n              onClick={handleAddCustomer}\n              className=\"flex items-center space-x-2\"\n            >\n              <UserIcon className=\"w-4 h-4\" />\n              <span>{addButtonText}</span>\n            </Button>\n          )}\n          {showExportButton && (\n            <Button\n              variant=\"outline\"\n              onClick={handleExport}\n              className=\"flex items-center space-x-2\"\n            >\n              <Download className=\"w-4 h-4\" />\n              <span>{exportButtonText}</span>\n            </Button>\n          )}\n        </CustomerPageHeader>\n\n        {/* Compact Search - All in one row */}\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <CustomerSearch\n                filters={filters}\n                onFiltersChange={memoizedOnFiltersChange}\n                onSearchChange={memoizedOnSearchChange}\n                onClearFilters={memoizedOnClearFilters}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0 mt-4\">\n        {customers.length > 0 ? (\n          <CustomerTable\n            customers={customers}\n            onCustomerAction={memoizedOnCustomerAction}\n            sortBy={filters.sortBy || \"createdAt\"}\n            sortOrder={filters.sortOrder || \"desc\"}\n            onSort={memoizedOnSort}\n          />\n        ) : (\n          <EmptyState\n            icon={UserIcon}\n            title={t('messages.noCustomers')}\n            description={\n              filters.search || filters.q\n                ? t('messages.tryAdjustingSearch')\n                : t('messages.getStarted')\n            }\n          />\n        )}\n      </div>\n\n      {/* Fixed Pagination Section - Always at Bottom */}\n      {customers.length > 0 && totalCustomers > limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            total={totalCustomers}\n            limit={limit}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"customers\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from 'react';\nimport { Button } from '@rentalshop/ui';\nimport { Card, CardContent } from '@rentalshop/ui';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@rentalshop/ui';\nimport { Customer } from '@rentalshop/types';\nimport { Eye, Edit, Trash2, ShoppingBag, MoreVertical } from 'lucide-react';\nimport { useCustomerTranslations } from '@rentalshop/hooks';\n\ninterface CustomerTableProps {\n  customers: Customer[];\n  onCustomerAction: (action: string, customerId: number) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\nexport function CustomerTable({ \n  customers, \n  onCustomerAction, \n  sortBy = 'createdAt', \n  sortOrder = 'desc',\n  onSort\n}: CustomerTableProps) {\n  const t = useCustomerTranslations();\n  const [openDropdownId, setOpenDropdownId] = React.useState<number | null>(null);\n  \n  if (customers.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <div className=\"text-4xl mb-4\">👥</div>\n            <h3 className=\"text-lg font-medium mb-2\">\n              {t('messages.noCustomers')}\n            </h3>\n            <p className=\"text-sm\">\n              {t('messages.noCustomersDescription')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatDate = (dateString: string | Date | undefined) => {\n    if (!dateString) return t('messages.na');\n    const date = typeof dateString === 'string' ? new Date(dateString) : dateString;\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const handleSort = (column: string) => {\n    if (onSort) {\n      onSort(column);\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 dark:border-gray-700 h-full flex flex-col\">\n      <div className=\"overflow-auto flex-1\">\n        <table className=\"w-full min-w-[900px]\">\n          {/* Table Header with Sorting - Sticky */}\n          <thead className=\"bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10\">\n            <tr>\n              <th \n                onClick={() => handleSort('id')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('fields.id')}\n                  {sortBy === 'id' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th \n                onClick={() => handleSort('name')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('fields.name')}\n                  {sortBy === 'name' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('fields.contact')}\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('fields.location')}\n              </th>\n              <th \n                onClick={() => handleSort('createdAt')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {t('fields.createdAt')}\n                  {sortBy === 'createdAt' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('actions.title')}\n              </th>\n            </tr>\n          </thead>\n          \n          {/* Table Body */}\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {customers.map((customer) => (\n              <tr key={customer.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                {/* ID */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    #{customer.id}\n                  </div>\n                </td>\n                \n                {/* Name */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900 dark:text-white\">\n                      {customer.firstName} {customer.lastName}\n                    </div>\n                  </div>\n                </td>\n                \n                {/* Contact */}\n                <td className=\"px-6 py-4\">\n                  <div className=\"text-sm\">\n                    <div className=\"font-medium text-gray-900 dark:text-white\">{customer.email}</div>\n                    <div className=\"text-gray-500 dark:text-gray-400 text-xs\">{customer.phone}</div>\n                  </div>\n                </td>\n                \n                {/* Location */}\n                <td className=\"px-6 py-4\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {customer.city && customer.state ? (\n                      <div>\n                        <div>{customer.city}, {customer.state}</div>\n                        {customer.country && (\n                          <div className=\"text-gray-500 dark:text-gray-400 text-xs\">{customer.country}</div>\n                        )}\n                      </div>\n                    ) : (\n                      <span className=\"text-gray-500 dark:text-gray-400\">N/A</span>\n                    )}\n                  </div>\n                </td>\n                \n                {/* Created Date */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {formatDate(customer.createdAt)}\n                  </div>\n                </td>\n                \n                {/* Actions - Dropdown Menu */}\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                  <DropdownMenu>\n                    <DropdownMenuTrigger>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-8 w-8 p-0\"\n                        onClick={() => setOpenDropdownId(customer.id)}\n                      >\n                        <MoreVertical className=\"h-4 w-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent \n                      align=\"end\"\n                      open={openDropdownId === customer.id}\n                      onOpenChange={(open: boolean) => setOpenDropdownId(open ? customer.id : null)}\n                    >\n                      <DropdownMenuItem onClick={() => {\n                        onCustomerAction('view', customer.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        {t('actions.view')}\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => {\n                        onCustomerAction('edit', customer.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Edit className=\"h-4 w-4 mr-2\" />\n                        {t('actions.editCustomer')}\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => {\n                        onCustomerAction('viewOrders', customer.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <ShoppingBag className=\"h-4 w-4 mr-2\" />\n                        {t('actions.viewOrders')}\n                      </DropdownMenuItem>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem \n                        onClick={() => {\n                          onCustomerAction('delete', customer.id);\n                          setOpenDropdownId(null);\n                        }}\n                        className=\"text-red-600 dark:text-red-400 focus:text-red-700 dark:focus:text-red-300\"\n                      >\n                        <Trash2 className=\"h-4 w-4 mr-2\" />\n                        {t('actions.deleteCustomer')}\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from '../../../ui/dialog';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent } from '../../../ui/card';\nimport { Trash2 } from 'lucide-react';\nimport type { Customer, Merchant } from '@rentalshop/types';\nimport { useCustomerTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface CustomerDetailDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  customer?: Customer | null;\n  onDelete?: (customerId: number) => Promise<void>;\n}\n\nexport const CustomerDetailDialog: React.FC<CustomerDetailDialogProps> = ({\n  open,\n  onOpenChange,\n  customer,\n  onDelete\n}) => {\n  const t = useCustomerTranslations();\n  const tc = useCommonTranslations();\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [merchant, setMerchant] = useState<Merchant | null>(null);\n  const [isLoadingMerchant, setIsLoadingMerchant] = useState(false);\n\n  // Fetch merchant information when customer changes\n  useEffect(() => {\n    const fetchMerchant = async () => {\n      if (!customer?.merchantId) {\n        console.log('🔍 CustomerDetailDialog: No merchantId found for customer:', customer);\n        setMerchant(null);\n        return;\n      }\n\n      try {\n        setIsLoadingMerchant(true);\n        console.log('🔍 CustomerDetailDialog: Fetching merchant with ID:', customer.merchantId);\n        \n        const { merchantsApi } = await import('@rentalshop/utils');\n        const response = await merchantsApi.getMerchantById(customer.merchantId);\n        \n        console.log('🔍 CustomerDetailDialog: Merchant API response:', response);\n        \n        if (response.success && response.data) {\n          console.log('✅ CustomerDetailDialog: Merchant fetched successfully:', response.data);\n          setMerchant(response.data as any); // TODO: Fix Merchant type compatibility between utils and types packages\n        } else {\n          console.error('❌ CustomerDetailDialog: Merchant API error:', response.error);\n          setMerchant(null);\n        }\n      } catch (error) {\n        console.error('❌ CustomerDetailDialog: Error fetching merchant:', error);\n        setMerchant(null);\n      } finally {\n        setIsLoadingMerchant(false);\n      }\n    };\n\n    fetchMerchant();\n  }, [customer?.merchantId]);\n\n  if (!customer) return null;\n\n  const formatDate = (date: Date | string) => {\n    if (!date) return t('messages.na');\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const getStatusBadgeStyle = (isActive: boolean) => {\n    if (isActive) {\n      return 'bg-emerald-100 text-emerald-800 border-emerald-200 dark:bg-emerald-900/20 dark:text-emerald-400 dark:border-emerald-800';\n    } else {\n      return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n    }\n  };\n\n  const getStatusDisplayName = (isActive: boolean) => {\n    return isActive ? t('status.active') : t('status.inactive');\n  };\n\n  const handleDelete = async () => {\n    if (!customer || !onDelete) return;\n    \n    try {\n      setIsDeleting(true);\n      await onDelete(customer.id);\n      setShowDeleteConfirm(false);\n      onOpenChange(false);\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n      // Error handling will be done by the parent component\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={open} onOpenChange={onOpenChange}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <div>\n              <DialogTitle className=\"text-xl font-semibold\">\n                {t('customerDetails')}\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n                {t('viewCustomerInfo')}\n              </DialogDescription>\n            </div>\n          </DialogHeader>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              {/* Basic Information */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.fullName')}</label>\n                <p className=\"text-gray-900 font-medium\">{`${customer.firstName} ${customer.lastName}`}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.email')}</label>\n                <p className=\"text-gray-900\">{customer.email}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.phone')}</label>\n                <p className=\"text-gray-900\">{customer.phone}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.dateOfBirth')}</label>\n                <p className=\"text-gray-900\">\n                  {customer.dateOfBirth ? formatDate(customer.dateOfBirth) : t('fields.notProvided')}\n                </p>\n              </div>\n              {/* Hidden: Status field */}\n              {/* <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.status')}</label>\n                <div className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getStatusBadgeStyle(customer.isActive)}`}>\n                  {getStatusDisplayName(customer.isActive)}\n                </div>\n              </div> */}\n              {/* Hidden: Customer ID field */}\n              {/* <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.customerId')}</label>\n                <p className=\"text-gray-500 text-sm font-mono\">{customer.id}</p>\n              </div> */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('stats.memberSince')}</label>\n                <p className=\"text-gray-900\">{formatDate(customer.createdAt)}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.lastUpdated')}</label>\n                <p className=\"text-gray-900\">{formatDate(customer.updatedAt)}</p>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.merchant')}</label>\n                <p className=\"text-gray-900\">\n                  {isLoadingMerchant ? (\n                    <span className=\"text-gray-500\">{t('fields.loading')}</span>\n                  ) : merchant ? (\n                    merchant.name\n                  ) : (\n                    <span className=\"text-gray-500\">\n                      {t('fields.notAvailable')} {customer.merchantId ? `(ID: ${customer.merchantId})` : '(No merchant ID)'}\n                    </span>\n                  )}\n                </p>\n              </div>\n            </div>\n\n            {/* Address Information */}\n            <div className=\"border-t mt-6 pt-4\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">{t('addressInformation')}</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.streetAddress')}</label>\n                  <p className=\"text-gray-900\">\n                    {customer.address || t('fields.noAddress')}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.city')}</label>\n                  <p className=\"text-gray-900\">\n                    {customer.city || t('fields.notSpecified')}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.state')}</label>\n                  <p className=\"text-gray-900\">\n                    {customer.state || t('fields.notSpecified')}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.zipCode')}</label>\n                  <p className=\"text-gray-900\">\n                    {customer.zipCode || t('fields.notSpecified')}\n                  </p>\n                </div>\n              </div>\n            </div>\n            </CardContent>\n          </Card>\n\n          <DialogFooter className=\"flex justify-between\">\n            <div>\n              {onDelete && (\n                <Button\n                  variant=\"destructive\"\n                  onClick={() => setShowDeleteConfirm(true)}\n                  disabled={isDeleting}\n                  className=\"flex items-center space-x-2\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  <span>{t('actions.deleteCustomer')}</span>\n                </Button>\n              )}\n            </div>\n            <div className=\"flex space-x-2\">\n              <Button\n                variant=\"outline\"\n                onClick={() => onOpenChange(false)}\n              >\n                {tc('buttons.close')}\n              </Button>\n            </div>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={showDeleteConfirm} onOpenChange={setShowDeleteConfirm}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"text-lg font-semibold text-red-600\">\n              {t('actions.deleteCustomer')}\n            </DialogTitle>\n            <DialogDescription className=\"text-sm text-gray-600\">\n              {t('messages.confirmDeleteDetails').replace('{name}', `${customer?.firstName} ${customer?.lastName}`)}\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter className=\"flex justify-end space-x-2\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowDeleteConfirm(false)}\n              disabled={isDeleting}\n            >\n              {tc('buttons.cancel')}\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleDelete}\n              disabled={isDeleting}\n              className=\"flex items-center space-x-2\"\n            >\n              <Trash2 className=\"w-4 h-4\" />\n              <span>{isDeleting ? t('deleting') : t('actions.deleteCustomer')}</span>\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { Button } from '@rentalshop/ui';\nimport { \n  User, \n  Mail, \n  Phone, \n  MapPin, \n  Calendar,\n  Edit,\n  ShoppingBag,\n  Trash2\n} from 'lucide-react';\nimport type { CustomerWithMerchant } from '@rentalshop/types';\nimport type { Customer } from '@rentalshop/types';\nimport { useCustomerTranslations } from '@rentalshop/hooks';\n\n// Union type to handle both local and database customer types\ntype CustomerData = Customer | CustomerWithMerchant;\n\ninterface CustomerInfoCardProps {\n  customer?: CustomerData | null;\n  onEdit?: () => void;\n  onViewOrders?: () => void;\n  onDelete?: () => void;\n  showActions?: boolean;\n  isLoading?: boolean;\n}\n\nexport const CustomerInfoCard: React.FC<CustomerInfoCardProps> = ({ \n  customer,\n  onEdit,\n  onViewOrders,\n  onDelete,\n  showActions = true,\n  isLoading = false\n}) => {\n  const t = useCustomerTranslations();\n  \n  const formatDate = (date: Date | string) => {\n    if (!date) return t('messages.na');\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatAddress = () => {\n    if (!customer) return t('fields.noAddress');\n    \n    const parts = [\n      customer.address,\n      customer.city,\n      customer.state,\n      customer.zipCode,\n      customer.country\n    ].filter(Boolean);\n    \n    return parts.length > 0 ? parts.join(', ') : t('fields.noAddress');\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold text-gray-900\">\n            {t('customerInformation')}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-2/3 mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Show error state if no customer data\n  if (!customer) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold text-gray-900\">\n            {t('customerInformation')}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">{t('noDataAvailable')}</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-semibold text-gray-900\">\n            {t('customerInformation')}\n          </CardTitle>\n          \n          {/* Action Buttons */}\n          {showActions && (\n            <div className=\"flex items-center space-x-2\">\n              {onEdit && (\n                <Button\n                  onClick={onEdit}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"flex items-center space-x-2\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                  <span>{t('actions.edit')}</span>\n                </Button>\n              )}\n              \n              {onViewOrders && (\n                <Button\n                  onClick={onViewOrders}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className=\"flex items-center space-x-2\"\n                >\n                  <ShoppingBag className=\"w-4 h-4\" />\n                  <span>{t('actions.orders')}</span>\n                </Button>\n              )}\n              \n              {onDelete && (\n                <Button\n                  onClick={onDelete}\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  className=\"flex items-center space-x-2\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  <span>{t('actions.delete')}</span>\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"border-b border-gray-200 mt-4\"></div>\n      </CardHeader>\n      \n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Personal Information */}\n          <div className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-normal text-gray-500 mb-2\">{t('fields.fullName')}</label>\n                <p className=\"text-gray-900 text-base font-medium\">{customer.firstName} {customer.lastName}</p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-normal text-gray-500 mb-2\">{t('fields.email')}</label>\n                <p className=\"text-gray-900 text-base\">{customer.email}</p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-normal text-gray-500 mb-2\">{t('fields.phone')}</label>\n                <p className=\"text-gray-900 text-base\">{customer.phone}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Address and Account Information */}\n          <div className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-normal text-gray-500 mb-2\">{t('fields.address')}</label>\n                <p className=\"text-gray-900 text-base\">{formatAddress()}</p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-normal text-gray-500 mb-2\">{t('stats.memberSince')}</label>\n                <p className=\"text-gray-900 text-base\">{formatDate(customer.createdAt)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { \n  ShoppingBag, \n  DollarSign, \n  Calendar,\n  TrendingUp\n} from 'lucide-react';\nimport type { CustomerWithMerchant } from '@rentalshop/types';\nimport type { Customer } from '@rentalshop/types';\n\n// Union type to handle both local and database customer types\ntype CustomerData = Customer | CustomerWithMerchant;\n\ninterface CustomerOrdersSummaryCardProps {\n  customer?: CustomerData | null;\n  orderStats?: {\n    totalOrders: number;\n    totalRevenue: number;\n    averageOrderValue: number;\n    lastOrderDate?: Date | string;\n  };\n  isLoading?: boolean;\n}\n\nexport const CustomerOrdersSummaryCard: React.FC<CustomerOrdersSummaryCardProps> = ({ \n  customer,\n  orderStats,\n  isLoading = false\n}) => {\n  const formatDate = (date: Date | string) => {\n    if (!date) return 'N/A';\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold text-gray-900\">\n            Customer Orders Summary\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-2/3 mb-2\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Show error state if no customer data\n  if (!customer) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold text-gray-900\">\n            Customer Orders Summary\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">No customer data available</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n            Total Orders\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {(orderStats?.totalOrders || 0).toLocaleString()}\n          </div>\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n            All time orders\n          </p>\n        </CardContent>\n      </Card>\n      \n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n          <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n            Total Revenue\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n            {formatCurrency(orderStats?.totalRevenue || 0)}\n          </div>\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n            Lifetime revenue\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { Button } from '@rentalshop/ui';\n\ninterface CustomerPageHeaderProps {\n  title: string;\n  subtitle?: string;\n  onBack?: () => void;\n  backText?: string;\n  backUrl?: string;\n  children?: React.ReactNode;\n}\n\nexport const CustomerPageHeader: React.FC<CustomerPageHeaderProps> = ({\n  title,\n  subtitle,\n  onBack,\n  backText = 'Back to Customers',\n  backUrl,\n  children\n}) => {\n  const handleBack = () => {\n    if (onBack) {\n      onBack();\n    } else if (backUrl) {\n      window.location.href = backUrl;\n    }\n  };\n\n  return (\n    <div className=\"mb-6\">\n      {/* Back Button */}\n      {(onBack || backUrl) && (\n        <Button \n          onClick={handleBack} \n          variant=\"outline\" \n          className=\"mb-4\"\n        >\n          ← {backText}\n        </Button>\n      )}\n    </div>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle\n} from '../../../ui';\nimport { AddCustomerForm } from './AddCustomerForm';\nimport type { Customer, CustomerCreateInput } from '@rentalshop/types';\nimport { useCustomerTranslations } from '@rentalshop/hooks';\n\ninterface AddCustomerDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onCustomerCreated?: (customer: Customer) => void;\n  onError?: (error: string) => void;\n}\n\nexport const AddCustomerDialog: React.FC<AddCustomerDialogProps> = ({\n  open,\n  onOpenChange,\n  onCustomerCreated,\n  onError\n}) => {\n  const t = useCustomerTranslations();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSave = async (customerData: CustomerCreateInput) => {\n    try {\n      setIsSubmitting(true);\n      \n      // Call the parent callback to create the customer\n      // The parent will handle the API call and show toasts\n      if (onCustomerCreated) {\n        await onCustomerCreated(customerData);\n      }\n      \n      // Close dialog on success\n      onOpenChange(false);\n      \n    } catch (error) {\n      console.error('❌ AddCustomerDialog: Error occurred:', error);\n      if (onError) {\n        onError(error instanceof Error ? error.message : 'Failed to create customer');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[95vh] overflow-y-auto p-0\">\n        <DialogHeader className=\"px-6 py-4 border-b border-gray-200\">\n          <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n            {t('createCustomer')}\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"p-6\">\n          <AddCustomerForm\n            onSave={handleSave}\n            onCancel={handleCancel}\n            isSubmitting={isSubmitting}\n          />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","\"use client\";\n\nimport React, {\n  useState,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Save, X } from \"lucide-react\";\nimport { Button } from \"@rentalshop/ui\";\nimport { Input } from \"@rentalshop/ui\";\nimport { Label } from \"@rentalshop/ui\";\nimport { Card, CardContent } from \"@rentalshop/ui\";\nimport type { Customer, CustomerUpdateInput } from \"@rentalshop/types\";\nimport {\n  useCustomerTranslations,\n  useCommonTranslations,\n} from \"@rentalshop/hooks\";\n\ninterface EditCustomerFormProps {\n  customer: Customer;\n  onSave: (customerData: CustomerUpdateInput) => Promise<void>;\n  onCancel?: () => void;\n  isSubmitting?: boolean;\n  showActions?: boolean;\n}\n\nexport interface EditCustomerFormRef {\n  submitForm: () => void;\n}\n\nexport const EditCustomerForm = forwardRef<\n  EditCustomerFormRef,\n  EditCustomerFormProps\n>(\n  (\n    {\n      customer,\n      onSave,\n      onCancel,\n      isSubmitting: externalIsSubmitting,\n      showActions = true,\n    },\n    ref\n  ) => {\n    const t = useCustomerTranslations();\n    const tc = useCommonTranslations();\n\n    const [formData, setFormData] = useState({\n      firstName: customer.firstName,\n      lastName: customer.lastName,\n      email: customer.email,\n      phone: customer.phone,\n      companyName: (customer as any).companyName || \"\",\n      address: customer.address || \"\",\n      city: customer.city || \"\",\n      state: customer.state || \"\",\n      zipCode: customer.zipCode || \"\",\n      country: customer.country || \"\", // Hidden in UI but sent to API\n      status: (customer as any).status,\n      membershipLevel: (customer as any).membershipLevel,\n    });\n\n    const [errors, setErrors] = useState<Record<string, string>>({});\n    const [internalIsSubmitting, setInternalIsSubmitting] = useState(false);\n    const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n    // Use external isSubmitting if provided, otherwise use internal state\n    const isSubmitting =\n      externalIsSubmitting !== undefined\n        ? externalIsSubmitting\n        : internalIsSubmitting;\n\n    // Update form data when customer changes\n    useEffect(() => {\n      setFormData({\n        firstName: customer.firstName,\n        lastName: customer.lastName,\n        email: customer.email,\n        phone: customer.phone,\n        companyName: (customer as any).companyName || \"\",\n        address: customer.address || \"\",\n        city: customer.city || \"\",\n        state: customer.state || \"\",\n        zipCode: customer.zipCode || \"\",\n        country: customer.country || \"\", // Hidden in UI but sent to API\n        status: (customer as any).status,\n        membershipLevel: (customer as any).membershipLevel,\n      });\n    }, [customer]);\n\n    console.log(\n      \"🔍 EditCustomerForm: Component rendered with customer:\",\n      customer\n    );\n\n    const handleInputChange = (field: string, value: string) => {\n      console.log(\"🔍 EditCustomerForm: Input changed:\", { field, value });\n      setFormData((prev) => ({ ...prev, [field]: value }));\n\n      // Clear field-specific error when user starts typing\n      if (errors[field]) {\n        setErrors((prev) => ({ ...prev, [field]: \"\" }));\n      }\n\n      // Clear general error message when user starts typing\n      if (errorMessage) {\n        setErrorMessage(null);\n      }\n    };\n\n    const validateForm = (): boolean => {\n      const newErrors: Record<string, string> = {};\n\n      // First name validation - required\n      if (!formData.firstName.trim()) {\n        newErrors.firstName = t(\"validation.firstNameRequired\");\n      } else if (formData.firstName.trim().length < 2) {\n        newErrors.firstName = t(\"validation.firstNameMinLength\");\n      }\n\n      // Last name validation - required\n      if (!formData.lastName.trim()) {\n        newErrors.lastName = t(\"validation.lastNameRequired\");\n      } else if (formData.lastName.trim().length < 2) {\n        newErrors.lastName = t(\"validation.lastNameMinLength\");\n      }\n\n      // Email validation - optional but validate format if provided\n      if (\n        formData.email &&\n        formData.email.trim() &&\n        !/\\S+@\\S+\\.\\S+/.test(formData.email)\n      ) {\n        newErrors.email = t(\"validation.emailInvalid\");\n      }\n\n      // Phone validation - required and validate format\n      if (!formData.phone || !formData.phone.trim()) {\n        newErrors.phone = t(\"validation.phoneRequired\");\n      } else if (!/^[0-9+\\-\\s()]+$/.test(formData.phone.trim())) {\n        newErrors.phone = t(\"validation.phoneInvalid\");\n      } else if (formData.phone.trim().length < 8) {\n        newErrors.phone = t(\"validation.phoneMinLength\");\n      }\n\n      setErrors(newErrors);\n      return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      console.log(\"🔍 EditCustomerForm: Form submitted\");\n\n      if (!validateForm()) {\n        console.log(\"❌ EditCustomerForm: Validation failed\");\n        return;\n      }\n\n      try {\n        setInternalIsSubmitting(true);\n        setErrorMessage(null);\n\n        // Only send changed fields\n        const changedFields: CustomerUpdateInput = { id: customer.id };\n        Object.keys(formData).forEach((key) => {\n          const field = key as keyof typeof formData;\n          if (formData[field] !== customer[field as keyof Customer]) {\n            (changedFields as any)[field] = formData[field];\n          }\n        });\n\n        // If no changes, just return\n        if (Object.keys(changedFields).length === 0) {\n          console.log(\"🔍 EditCustomerForm: No changes detected\");\n          return;\n        }\n\n        console.log(\n          \"🔍 EditCustomerForm: Calling onSave with changed fields:\",\n          changedFields\n        );\n\n        await onSave(changedFields);\n\n        console.log(\"✅ EditCustomerForm: Customer updated successfully\");\n      } catch (error) {\n        console.error(\"❌ EditCustomerForm: Error updating customer:\", error);\n        const errorMessage =\n          error instanceof Error\n            ? error.message\n            : \"An unexpected error occurred\";\n        setErrorMessage(errorMessage);\n      } finally {\n        setInternalIsSubmitting(false);\n      }\n    };\n\n    const handleCancel = () => {\n      if (onCancel) {\n        onCancel();\n      }\n    };\n\n    useImperativeHandle(ref, () => ({\n      submitForm: () => {\n        // Create a synthetic form submission\n        const syntheticEvent = {\n          preventDefault: () => {},\n        } as React.FormEvent;\n        handleSubmit(syntheticEvent);\n      },\n    }));\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <Card>\n          <CardContent className=\"p-6 space-y-4\">\n            {/* Error Message */}\n            {errorMessage && (\n              <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n                <p className=\"text-sm text-red-800\">{errorMessage}</p>\n              </div>\n            )}\n\n            {/* First Name & Last Name */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"firstName\">{t(\"fields.firstName\")} *</Label>\n                <Input\n                  id=\"firstName\"\n                  type=\"text\"\n                  value={formData.firstName}\n                  onChange={(e) =>\n                    handleInputChange(\"firstName\", e.target.value)\n                  }\n                  placeholder={t(\"placeholders.enterFirstName\")}\n                  className={errors.firstName ? \"border-red-500\" : \"\"}\n                />\n                {errors.firstName && (\n                  <p className=\"text-sm text-red-600\">{errors.firstName}</p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"lastName\">{t(\"fields.lastName\")} *</Label>\n                <Input\n                  id=\"lastName\"\n                  type=\"text\"\n                  value={formData.lastName}\n                  onChange={(e) =>\n                    handleInputChange(\"lastName\", e.target.value)\n                  }\n                  placeholder={t(\"placeholders.enterLastName\")}\n                  className={errors.lastName ? \"border-red-500\" : \"\"}\n                />\n                {errors.lastName && (\n                  <p className=\"text-sm text-red-600\">{errors.lastName}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Email & Phone */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"email\">{t(\"fields.email\")}</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={formData.email || \"\"}\n                  onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                  placeholder={t(\"placeholders.enterEmail\")}\n                  className={errors.email ? \"border-red-500\" : \"\"}\n                />\n                {errors.email && (\n                  <p className=\"text-sm text-red-600\">{errors.email}</p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"phone\">{t(\"fields.phone\")}</Label>\n                <Input\n                  id=\"phone\"\n                  type=\"tel\"\n                  value={formData.phone || \"\"}\n                  onChange={(e) => handleInputChange(\"phone\", e.target.value)}\n                  placeholder={t(\"placeholders.enterPhone\")}\n                  className={errors.phone ? \"border-red-500\" : \"\"}\n                />\n                {errors.phone && (\n                  <p className=\"text-sm text-red-600\">{errors.phone}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Company Name */}\n            <div>\n              <Label htmlFor=\"companyName\">{t(\"fields.companyName\")}</Label>\n              <Input\n                id=\"companyName\"\n                type=\"text\"\n                value={formData.companyName}\n                onChange={(e) =>\n                  handleInputChange(\"companyName\", e.target.value)\n                }\n                placeholder={t(\"placeholders.enterCompanyName\")}\n              />\n            </div>\n\n            {/* Address */}\n            <div>\n              <Label htmlFor=\"address\">{t(\"fields.streetAddress\")}</Label>\n              <Input\n                id=\"address\"\n                type=\"text\"\n                value={formData.address}\n                onChange={(e) => handleInputChange(\"address\", e.target.value)}\n                placeholder={t(\"placeholders.enterStreetAddress\")}\n              />\n            </div>\n\n            {/* City, State, ZIP Code */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <Label htmlFor=\"city\">{t(\"fields.city\")}</Label>\n                <Input\n                  id=\"city\"\n                  type=\"text\"\n                  value={formData.city}\n                  onChange={(e) => handleInputChange(\"city\", e.target.value)}\n                  placeholder={t(\"placeholders.enterCity\")}\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"state\">{t(\"fields.state\")}</Label>\n                <Input\n                  id=\"state\"\n                  type=\"text\"\n                  value={formData.state}\n                  onChange={(e) => handleInputChange(\"state\", e.target.value)}\n                  placeholder={t(\"placeholders.enterState\")}\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"zipCode\">{t(\"fields.zipCode\")}</Label>\n                <Input\n                  id=\"zipCode\"\n                  type=\"text\"\n                  value={formData.zipCode}\n                  onChange={(e) => handleInputChange(\"zipCode\", e.target.value)}\n                  placeholder={t(\"placeholders.enterZipCode\")}\n                />\n              </div>\n            </div>\n\n            {/* Form Actions */}\n            <div className=\"flex justify-end space-x-3 border-t pt-4\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onCancel}\n                disabled={isSubmitting}\n              >\n                <X className=\"w-4 h-4 mr-2\" />\n                {tc(\"buttons.cancel\")}\n              </Button>\n\n              <Button type=\"submit\" disabled={isSubmitting}>\n                <Save className=\"w-4 h-4 mr-2\" />\n                {isSubmitting ? t(\"updating\") : t(\"updateCustomer\")}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </form>\n    );\n  }\n);\n\nEditCustomerForm.displayName = \"EditCustomerForm\";\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { Save, X } from 'lucide-react';\nimport { Button } from '@rentalshop/ui';\nimport { Input } from '@rentalshop/ui';\nimport { Label } from '@rentalshop/ui';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@rentalshop/ui';\nimport { Card, CardContent } from '@rentalshop/ui';\nimport type { Customer, CustomerCreateInput, CustomerUpdateInput } from '@rentalshop/types';\n\ninterface CustomerFormProps {\n  mode?: 'create' | 'edit';\n  customer?: Customer;\n  onSave: (customerData: CustomerCreateInput | CustomerUpdateInput) => Promise<void>;\n  onCancel?: () => void;\n  isSubmitting?: boolean;\n  currentUser?: any;\n}\n\nexport const CustomerForm: React.FC<CustomerFormProps> = ({\n  mode = 'create',\n  customer,\n  onSave,\n  onCancel,\n  isSubmitting: externalIsSubmitting,\n  currentUser\n}) => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    companyName: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    country: '',\n    dateOfBirth: '',\n    idNumber: '',\n    idType: 'other' as 'passport' | 'drivers_license' | 'national_id' | 'other',\n    notes: ''\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Initialize form data when customer prop changes (for edit mode)\n  useEffect(() => {\n    if (mode === 'edit' && customer) {\n      setFormData({\n        firstName: customer.firstName || '',\n        lastName: customer.lastName || '',\n        email: customer.email || '',\n        phone: customer.phone || '',\n        companyName: (customer as any).companyName || '',\n        address: customer.address || '',\n        city: customer.city || '',\n        state: customer.state || '',\n        zipCode: customer.zipCode || '',\n        country: customer.country || '',\n        dateOfBirth: customer.dateOfBirth ? new Date(customer.dateOfBirth).toISOString().split('T')[0] : '',\n        idNumber: customer.idNumber || '',\n        idType: customer.idType || 'other',\n        notes: customer.notes || ''\n      });\n    }\n  }, [mode, customer]);\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.firstName.trim()) {\n      newErrors.firstName = 'First name is required';\n    }\n\n    if (!formData.lastName.trim()) {\n      newErrors.lastName = 'Last name is required';\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Phone number is required';\n    }\n\n    if (formData.email && formData.email.trim()) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(formData.email)) {\n        newErrors.email = 'Invalid email format';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      const customerData = {\n        ...(mode === 'edit' && customer ? { id: customer.id } : {}),\n        firstName: formData.firstName.trim(),\n        lastName: formData.lastName.trim(),\n        email: formData.email.trim() || undefined,\n        phone: formData.phone.trim(),\n        companyName: formData.companyName.trim() || undefined,\n        address: formData.address.trim() || undefined,\n        city: formData.city.trim() || undefined,\n        state: formData.state.trim() || undefined,\n        zipCode: formData.zipCode.trim() || undefined,\n        country: formData.country.trim() || undefined,\n        dateOfBirth: formData.dateOfBirth ? new Date(formData.dateOfBirth) : undefined,\n        idNumber: formData.idNumber.trim() || undefined,\n        idType: formData.idType,\n        notes: formData.notes.trim() || undefined,\n        // merchantId will be automatically determined from JWT token\n        // Only ADMIN users need to send merchantId in request\n      };\n\n      await onSave(customerData);\n    } catch (error) {\n      console.error('Error saving customer:', error);\n      // Error handling is done by the parent component\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  const isFormSubmitting = isSubmitting || externalIsSubmitting;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* First Name */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"firstName\">First Name *</Label>\n              <Input\n                id=\"firstName\"\n                value={formData.firstName}\n                onChange={(e) => handleInputChange('firstName', e.target.value)}\n                placeholder=\"Enter first name\"\n                className={errors.firstName ? 'border-red-500' : ''}\n                disabled={isFormSubmitting}\n              />\n              {errors.firstName && (\n                <p className=\"text-sm text-red-500\">{errors.firstName}</p>\n              )}\n            </div>\n\n            {/* Last Name */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"lastName\">Last Name *</Label>\n              <Input\n                id=\"lastName\"\n                value={formData.lastName}\n                onChange={(e) => handleInputChange('lastName', e.target.value)}\n                placeholder=\"Enter last name\"\n                className={errors.lastName ? 'border-red-500' : ''}\n                disabled={isFormSubmitting}\n              />\n              {errors.lastName && (\n                <p className=\"text-sm text-red-500\">{errors.lastName}</p>\n              )}\n            </div>\n\n            {/* Email */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                placeholder=\"Enter email address\"\n                className={errors.email ? 'border-red-500' : ''}\n                disabled={isFormSubmitting}\n              />\n              {errors.email && (\n                <p className=\"text-sm text-red-500\">{errors.email}</p>\n              )}\n            </div>\n\n            {/* Phone */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"phone\">Phone *</Label>\n              <Input\n                id=\"phone\"\n                value={formData.phone}\n                onChange={(e) => handleInputChange('phone', e.target.value)}\n                placeholder=\"Enter phone number\"\n                className={errors.phone ? 'border-red-500' : ''}\n                disabled={isFormSubmitting}\n              />\n              {errors.phone && (\n                <p className=\"text-sm text-red-500\">{errors.phone}</p>\n              )}\n            </div>\n\n            {/* Company Name */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"companyName\">Company Name</Label>\n              <Input\n                id=\"companyName\"\n                value={formData.companyName}\n                onChange={(e) => handleInputChange('companyName', e.target.value)}\n                placeholder=\"Enter company name\"\n                disabled={isFormSubmitting}\n              />\n            </div>\n\n            {/* Date of Birth */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dateOfBirth\">Date of Birth</Label>\n              <Input\n                id=\"dateOfBirth\"\n                type=\"date\"\n                value={formData.dateOfBirth}\n                onChange={(e) => handleInputChange('dateOfBirth', e.target.value)}\n                disabled={isFormSubmitting}\n              />\n            </div>\n\n            {/* ID Type */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"idType\">ID Type</Label>\n              <Select\n                value={formData.idType}\n                onValueChange={(value) => handleInputChange('idType', value)}\n                disabled={isFormSubmitting}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select ID type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"passport\">Passport</SelectItem>\n                  <SelectItem value=\"drivers_license\">Driver's License</SelectItem>\n                  <SelectItem value=\"national_id\">National ID</SelectItem>\n                  <SelectItem value=\"other\">Other</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* ID Number */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"idNumber\">ID Number</Label>\n              <Input\n                id=\"idNumber\"\n                value={formData.idNumber}\n                onChange={(e) => handleInputChange('idNumber', e.target.value)}\n                placeholder=\"Enter ID number\"\n                disabled={isFormSubmitting}\n              />\n            </div>\n          </div>\n\n          {/* Address */}\n          <div className=\"mt-4 space-y-2\">\n            <Label htmlFor=\"address\">Address</Label>\n            <Input\n              id=\"address\"\n              value={formData.address}\n              onChange={(e) => handleInputChange('address', e.target.value)}\n              placeholder=\"Enter street address\"\n              disabled={isFormSubmitting}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-4\">\n            {/* City */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"city\">City</Label>\n              <Input\n                id=\"city\"\n                value={formData.city}\n                onChange={(e) => handleInputChange('city', e.target.value)}\n                placeholder=\"Enter city\"\n                disabled={isFormSubmitting}\n              />\n            </div>\n\n            {/* State */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"state\">State</Label>\n              <Input\n                id=\"state\"\n                value={formData.state}\n                onChange={(e) => handleInputChange('state', e.target.value)}\n                placeholder=\"Enter state\"\n                disabled={isFormSubmitting}\n              />\n            </div>\n\n            {/* Zip Code */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"zipCode\">Zip Code</Label>\n              <Input\n                id=\"zipCode\"\n                value={formData.zipCode}\n                onChange={(e) => handleInputChange('zipCode', e.target.value)}\n                placeholder=\"Enter zip code\"\n                disabled={isFormSubmitting}\n              />\n            </div>\n          </div>\n\n          {/* Country */}\n          <div className=\"mt-4 space-y-2\">\n            <Label htmlFor=\"country\">Country</Label>\n            <Input\n              id=\"country\"\n              value={formData.country}\n              onChange={(e) => handleInputChange('country', e.target.value)}\n              placeholder=\"Enter country\"\n              disabled={isFormSubmitting}\n            />\n          </div>\n\n          {/* Notes */}\n          <div className=\"mt-4 space-y-2\">\n            <Label htmlFor=\"notes\">Notes</Label>\n            <textarea\n              id=\"notes\"\n              value={formData.notes}\n              onChange={(e) => handleInputChange('notes', e.target.value)}\n              placeholder=\"Enter any additional notes\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n              rows={3}\n              disabled={isFormSubmitting}\n            />\n          </div>\n\n        </CardContent>\n      </Card>\n\n      {/* Form Actions */}\n      <div className=\"flex justify-end space-x-3\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={handleCancel}\n          disabled={isFormSubmitting}\n        >\n          <X className=\"w-4 h-4 mr-2\" />\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={isFormSubmitting}\n        >\n          <Save className=\"w-4 h-4 mr-2\" />\n          {isFormSubmitting ? 'Saving...' : mode === 'create' ? 'Create Customer' : 'Update Customer'}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default CustomerForm;\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Plus, Users, Filter } from 'lucide-react';\nimport { AddCustomerDialog } from './AddCustomerDialog';\n\ninterface CustomerActionsProps {\n  onAction: (action: string, customerId: number) => void;\n  merchantId: number;\n  onCustomerCreated?: (customer: any) => void;\n  onCustomerUpdated?: (customer: any) => void;\n  onError?: (error: string) => void;\n  onViewOrders?: (customerId: number) => void;\n}\n\nexport function CustomerActions({ \n  onAction, \n  merchantId,\n  onCustomerCreated,\n  onCustomerUpdated,\n  onError,\n  onViewOrders\n}: CustomerActionsProps) {\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const router = useRouter();\n\n  // Listen for actions from the table and handle navigation\n  useEffect(() => {\n    const handleCustomerAction = (event: CustomEvent) => {\n      const { action, customer } = event.detail;\n      \n      if (!customer) return;\n      \n      switch (action) {\n        case 'view':\n          // Navigate to customer detail page\n          if (customer.id) {\n            router.push(`/customers/${customer.id}`);\n          } else {\n            console.error('Customer missing id for navigation:', customer);\n          }\n          break;\n          \n        case 'edit':\n          // Navigate to customer edit page\n          if (customer.id) {\n            router.push(`/customers/${customer.id}/edit`);\n          } else {\n            console.error('Customer missing id for navigation:', customer);\n          }\n          break;\n          \n        default:\n          console.log('Unknown customer action:', action);\n      }\n    };\n\n    const handleViewOrdersAction = (event: CustomEvent) => {\n      const { customerId, customer } = event.detail;\n      \n      if (customer && customer.id) {\n        // Navigate to customer orders page\n        router.push(`/customers/${customer.id}/orders`);\n      } else if (onViewOrders) {\n        // Fallback to callback if no id\n        onViewOrders(customerId);\n      }\n    };\n\n    window.addEventListener('customer-action', handleCustomerAction as EventListener);\n    window.addEventListener('customer-view-orders', handleViewOrdersAction as EventListener);\n    \n    return () => {\n      window.removeEventListener('customer-action', handleCustomerAction as EventListener);\n      window.removeEventListener('customer-view-orders', handleViewOrdersAction as EventListener);\n    };\n  }, [router, onViewOrders]);\n\n  const handleAddCustomer = () => {\n    setIsAddDialogOpen(true);\n  };\n\n  const actions = [\n    {\n      id: 'add-customer',\n      label: 'Add Customer',\n      icon: Plus,\n      onClick: handleAddCustomer,\n      variant: 'default' as const\n    },\n    {\n      id: 'bulk-actions',\n      label: 'Bulk Actions',\n      icon: Filter,\n      onClick: () => onAction('bulk-actions', 0),\n      variant: 'outline' as const\n    }\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex flex-wrap gap-3\">\n        {actions.map((action) => (\n          <Button\n            key={action.id}\n            onClick={action.onClick}\n            variant={action.variant}\n            className=\"flex items-center space-x-2\"\n          >\n            <action.icon className=\"w-4 h-4\" />\n            <span>{action.label}</span>\n          </Button>\n        ))}\n      </div>\n      \n      {/* Customer Add Dialog */}\n      <AddCustomerDialog\n        open={isAddDialogOpen}\n        onOpenChange={setIsAddDialogOpen}\n        onCustomerCreated={onCustomerCreated}\n        onError={onError}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { CustomerStats } from '@rentalshop/types';\n\ninterface CustomerHeaderProps {\n  totalCustomers: number;\n  stats: CustomerStats;\n}\n\nexport function CustomerHeader({ totalCustomers, stats }: CustomerHeaderProps) {\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  // Calculate derived stats from available data\n  const activeCustomers = stats.topCustomers.length; // Customers with orders\n  const totalRevenue = stats.topCustomers.reduce((sum, customer) => sum + customer.totalSpent, 0);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Total Customers\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {stats.totalCustomers.toLocaleString()}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              All time customers\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Active Customers\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n              {activeCustomers.toLocaleString()}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              {((activeCustomers / stats.totalCustomers) * 100).toFixed(1)}% of total\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              New This Month\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-blue-700 dark:text-blue-400\">\n              {stats.newCustomersThisMonth.toLocaleString()}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              Recent signups\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Total Revenue\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {formatCurrency(totalRevenue)}\n            </div>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              From all customers\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { Input, Button } from '@rentalshop/ui';\nimport { CustomerFilters } from '@rentalshop/types';\nimport { useCustomerTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface CustomerSearchProps {\n  filters: CustomerFilters;\n  onFiltersChange: (filters: CustomerFilters) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n}\n\n/**\n * ✅ COMPACT CUSTOMER SEARCH (Following Orders pattern)\n * - No card wrapper (parent wraps)\n * - h-10 height\n * - No labels, clean inline\n */\nexport function CustomerSearch({ filters, onFiltersChange, onSearchChange, onClearFilters }: CustomerSearchProps) {\n  const t = useCustomerTranslations();\n  const tc = useCommonTranslations();\n  \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.target.value);\n  };\n\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            placeholder={t('search.placeholder')}\n            value={filters.search || ''}\n            onChange={handleInputChange}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Clear Search */}\n      {filters.search && onClearFilters && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          {tc('buttons.clear')}\n        </Button>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { Badge } from '@rentalshop/ui';\nimport { CustomerStats as CustomerStatsType, TopCustomer } from '@rentalshop/types';\n\ninterface CustomerStatsProps {\n  stats: CustomerStatsType;\n}\n\nexport function CustomerStats({ stats }: CustomerStatsProps) {\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  // Calculate derived stats from available data\n  const activeCustomers = stats.topCustomers.length; // Customers with orders\n  const totalRevenue = stats.topCustomers.reduce((sum, customer) => sum + customer.totalSpent, 0);\n  const averageOrderValue = activeCustomers > 0 ? totalRevenue / activeCustomers : 0;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Top Customers */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Top Customers</CardTitle>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Customers with highest lifetime value\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {stats.topCustomers.map((customer, index) => (\n              <div key={customer.id} className=\"flex items-center justify-between p-3 rounded-lg border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${\n                    index === 0 ? 'bg-yellow-100 text-yellow-800' :\n                    index === 1 ? 'bg-gray-100 text-gray-800' :\n                    index === 2 ? 'bg-orange-100 text-orange-800' :\n                    'bg-blue-100 text-blue-800'\n                  }`}>\n                    #{index + 1}\n                  </div>\n                  <div>\n                    <div className=\"font-medium text-gray-900 dark:text-white\">\n                      {customer.name}\n                    </div>\n                    <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {customer.orderCount} orders\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"text-right\">\n                  <div className=\"font-medium text-gray-900 dark:text-white\">\n                    {formatCurrency(customer.totalSpent)}\n                  </div>\n                  <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Customer ID: {customer.id}\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            {stats.topCustomers.length === 0 && (\n              <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                <p>No customer data available</p>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Customer Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Customer Distribution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Active</span>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-green-600 h-2 rounded-full\" \n                      style={{ width: `${(activeCustomers / stats.totalCustomers) * 100}%` }}\n                    />\n                  </div>\n                  <span className=\"text-sm font-medium\">{activeCustomers}</span>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Inactive</span>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-20 bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-gray-600 h-2 rounded-full\" \n                      style={{ width: `${((stats.totalCustomers - activeCustomers) / stats.totalCustomers) * 100}%` }}\n                    />\n                  </div>\n                  <span className=\"text-sm font-medium\">{stats.totalCustomers - activeCustomers}</span>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">New This Month</span>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-20 bg-blue-200 dark:bg-blue-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-700 h-2 rounded-full\" \n                      style={{ width: `${(stats.newCustomersThisMonth / stats.totalCustomers) * 100}%` }}\n                    />\n                  </div>\n                  <span className=\"text-sm font-medium\">{stats.newCustomersThisMonth}</span>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle>Performance Metrics</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Average Order Value</span>\n                <span className=\"font-medium\">{formatCurrency(averageOrderValue)}</span>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">New This Month</span>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                    +{stats.newCustomersThisMonth}\n                  </Badge>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">Total Revenue</span>\n                <span className=\"font-medium text-lg\">{formatCurrency(totalRevenue)}</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@rentalshop/ui';\nimport { Card, CardContent, CardHeader, CardTitle } from '@rentalshop/ui';\nimport { Badge } from '@rentalshop/ui';\nimport type { CustomerWithMerchant } from '@rentalshop/types';\nimport { Package, Calendar, DollarSign, User, MapPin, Clock } from 'lucide-react';\nimport { ORDER_STATUS_COLORS } from '@rentalshop/constants';\nimport { useOrderTranslations } from '@rentalshop/hooks';\n\ninterface CustomerOrdersDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  customer: CustomerWithMerchant | null;\n}\n\ninterface CustomerOrder {\n  id: number;\n  orderNumber: string;\n  orderType: 'RENT' | 'SALE' | 'RENT_TO_OWN';\n  status: string;\n  totalAmount: number;\n  depositAmount: number;\n  pickupPlanAt?: Date;\n  returnPlanAt?: Date;\n  pickedUpAt?: Date;\n  returnedAt?: Date;\n  createdAt: Date;\n  outletName: string;\n}\n\nexport const CustomerOrdersDialog: React.FC<CustomerOrdersDialogProps> = ({\n  open,\n  onOpenChange,\n  customer\n}) => {\n  const t = useOrderTranslations();\n  const [orders, setOrders] = useState<CustomerOrder[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (open && customer) {\n      fetchCustomerOrders(customer.id);\n    }\n  }, [open, customer]);\n\n  const fetchCustomerOrders = async (customerId: number) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Mock data for now - replace with actual API call\n      const mockOrders: CustomerOrder[] = [\n        {\n          id: 1,\n          orderNumber: '1',\n          orderType: 'RENT',\n          status: 'PICKUPED',\n          totalAmount: 150.00,\n          depositAmount: 50.00,\n          pickupPlanAt: new Date('2024-01-15'),\n          returnPlanAt: new Date('2024-01-20'),\n          pickedUpAt: new Date('2024-01-15'),\n          returnedAt: undefined,\n          createdAt: new Date('2024-01-10'),\n          outletName: 'Downtown Store'\n        },\n        {\n          id: 2,\n          orderNumber: '2',\n          orderType: 'SALE',\n          status: 'COMPLETED',\n          totalAmount: 299.99,\n          depositAmount: 0,\n          pickupPlanAt: undefined,\n          returnPlanAt: undefined,\n          pickedUpAt: new Date('2024-01-05'),\n          returnedAt: undefined,\n          createdAt: new Date('2024-01-01'),\n          outletName: 'Downtown Store'\n        },\n        {\n          id: 3,\n          orderNumber: '3',\n          orderType: 'RENT',\n          status: 'PICKUPED',\n          totalAmount: 200.00,\n          depositAmount: 75.00,\n          pickupPlanAt: new Date('2024-01-08'),\n          returnPlanAt: new Date('2024-01-12'),\n          pickedUpAt: new Date('2024-01-08'),\n          returnedAt: undefined,\n          createdAt: new Date('2024-01-05'),\n          outletName: 'Downtown Store'\n        }\n      ];\n      \n      setOrders(mockOrders);\n    } catch (err) {\n      setError('Failed to fetch customer orders');\n      console.error('Error fetching customer orders:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const colors = ORDER_STATUS_COLORS[status as keyof typeof ORDER_STATUS_COLORS] || 'bg-gray-100 text-gray-800';\n    return (\n      <Badge variant=\"outline\" className={colors}>\n        {status}\n      </Badge>\n    );\n  };\n\n  const getOrderTypeBadge = (orderType: string) => {\n    const variants = {\n      RENT: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n      SALE: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200',\n      RENT_TO_OWN: 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200'\n    };\n    \n    return (\n      <Badge variant=\"outline\" className={variants[orderType as keyof typeof variants] || variants.RENT}>\n        {orderType}\n      </Badge>\n    );\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatDate = (date: Date | undefined) => {\n    if (!date) return 'N/A';\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getDaysOverdue = (returnDate: Date | undefined) => {\n    if (!returnDate) return 0;\n    const today = new Date();\n    const diffTime = today.getTime() - returnDate.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays > 0 ? diffDays : 0;\n  };\n\n  if (!customer) return null;\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <div>\n            <DialogTitle className=\"text-xl font-semibold\">\n              Customer Orders\n            </DialogTitle>\n            <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n              View all orders for {customer.firstName} {customer.lastName}\n            </DialogDescription>\n          </div>\n        </DialogHeader>\n\n        <div className=\"mt-6\">\n          {/* Customer Summary */}\n          <Card className=\"mb-6\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-lg\">Customer Information</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"flex items-center gap-3\">\n                  <User className=\"w-5 h-5 text-gray-500\" />\n                  <div>\n                    <p className=\"font-medium\">{customer.firstName} {customer.lastName}</p>\n                    <p className=\"text-sm text-gray-500\">{customer.email}</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <Package className=\"w-5 h-5 text-gray-500\" />\n                  <div>\n                    <p className=\"font-medium\">{orders.length} Orders</p>\n                    <p className=\"text-sm text-gray-500\">Total Orders</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <DollarSign className=\"w-5 h-5 text-gray-500\" />\n                  <div>\n                    <p className=\"font-medium\">\n                      {formatCurrency(orders.reduce((sum, order) => sum + order.totalAmount, 0))}\n                    </p>\n                    <p className=\"text-sm text-gray-500\">Total Spent</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Orders List */}\n          {loading ? (\n            <Card>\n              <CardContent className=\"text-center py-12\">\n                <div className=\"text-gray-500\">\n                  <Package className=\"w-8 h-8 mx-auto mb-2 animate-spin\" />\n                  <p>Loading orders...</p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : error ? (\n            <Card>\n              <CardContent className=\"text-center py-12\">\n                <div className=\"text-red-500\">\n                  <Package className=\"w-8 h-8 mx-auto mb-2\" />\n                  <p>{error}</p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : orders.length === 0 ? (\n            <Card>\n              <CardContent className=\"text-center py-12\">\n                <div className=\"text-gray-500\">\n                  <Package className=\"w-8 h-8 mx-auto mb-2\" />\n                  <p>{t('messages.noOrdersForCustomer')}</p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"space-y-4\">\n              {orders.map((order) => (\n                <Card key={order.id} className=\"hover:shadow-md transition-shadow\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-3 mb-3\">\n                          <h3 className=\"font-semibold text-lg\">#{order.orderNumber}</h3>\n                          {getStatusBadge(order.status)}\n                          {getOrderTypeBadge(order.orderType)}\n                          {order.status === 'PICKUPED' && order.returnPlanAt && new Date() > order.returnPlanAt && (\n                            <Badge variant=\"outline\" className=\"bg-red-50 text-red-700 border-red-200\">\n                              {getDaysOverdue(order.returnPlanAt)} days overdue\n                            </Badge>\n                          )}\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 text-sm\">\n                          <div className=\"flex items-center gap-2\">\n                            <MapPin className=\"w-4 h-4 text-gray-500\" />\n                            <span className=\"text-gray-600\">{order.outletName}</span>\n                          </div>\n                          \n                          <div className=\"flex items-center gap-2\">\n                            <Calendar className=\"w-4 h-4 text-gray-500\" />\n                            <span className=\"text-gray-600\">\n                              Created: {formatDate(order.createdAt)}\n                            </span>\n                          </div>\n                          \n                          {order.pickupPlanAt && (\n                            <div className=\"flex items-center gap-2\">\n                              <Package className=\"w-4 h-4 text-gray-500\" />\n                              <span className=\"text-gray-600\">\n                                Pickup: {formatDate(order.pickupPlanAt)}\n                              </span>\n                            </div>\n                          )}\n                          \n                          {order.returnPlanAt && (\n                            <div className=\"flex items-center gap-2\">\n                              <Clock className=\"w-4 h-4 text-gray-500\" />\n                              <span className=\"text-gray-600\">\n                                Return: {formatDate(order.returnPlanAt)}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-right ml-4\">\n                        <div className=\"text-lg font-semibold text-gray-900\">\n                          {formatCurrency(order.totalAmount)}\n                        </div>\n                        {order.depositAmount > 0 && (\n                          <div className=\"text-sm text-gray-500\">\n                            Deposit: {formatCurrency(order.depositAmount)}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { \n  TableSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '@rentalshop/ui';\n\nexport function CustomersLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Customers Table */}\n      <TableSkeleton rows={8} columns={5} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function CustomerDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-48 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* Customer Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </div>\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Recent Orders */}\n      <div className=\"space-y-4\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <TableSkeleton rows={3} columns={4} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { \n  OrderHeader,\n  OrderFilters as OrderFiltersComponent,\n  OrderQuickFilters,\n  OrderDateRangeFilter,\n  type QuickFilterOption,\n  type DateRangeOption,\n  OrderTable,\n  OrderStats\n} from './components';\nimport { Pagination, Card, CardContent } from '@rentalshop/ui';\nimport { AlertCircle } from 'lucide-react';\nimport type { OrdersData, OrderFilters } from '@rentalshop/types';\nimport { useOrderTranslations } from '@rentalshop/hooks';\n\ninterface OrdersProps {\n  data: OrdersData;\n  filters: OrderFilters;\n  onFiltersChange: (filters: OrderFilters) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n  onOrderAction: (action: string, orderNumber: string) => void;\n  onPageChange: (page: number) => void;\n  onSort?: (column: string) => void;\n  onQuickFilterChange?: (filter: QuickFilterOption | null) => void;\n  onDateRangeChange?: (rangeId: string, start: Date, end: Date) => void;\n  activeQuickFilter?: string;\n  showStats?: boolean;\n  showQuickFilters?: boolean;\n  filterStyle?: 'buttons' | 'dropdown'; // ⭐ Choose UI style\n}\n\nexport const Orders = React.memo(function Orders({ \n  data, \n  filters, \n  onFiltersChange, \n  onSearchChange,\n  onClearFilters,\n  onOrderAction, \n  onPageChange,\n  onSort,\n  onQuickFilterChange,\n  onDateRangeChange,\n  activeQuickFilter,\n  showStats = true,\n  showQuickFilters = true,\n  filterStyle = 'dropdown' // ⭐ Default to dropdown (modern pattern)\n}: OrdersProps) {\n  const t = useOrderTranslations();\n  \n  // Debug: Log when Orders component receives new data\n  React.useEffect(() => {\n    console.log('📊 Orders Component: received new data', {\n      ordersCount: data.orders.length,\n      searchTerm: filters.search,\n      statusFilter: filters.status,\n      firstOrder: data.orders[0]?.orderNumber\n    });\n  }, [data.orders, filters.search, filters.status]);\n  \n  // Memoize handlers to prevent child re-renders\n  // ✅ FIXED: Include actual dependencies to prevent stale closures\n  const memoizedOnFiltersChange = React.useCallback(onFiltersChange, [onFiltersChange]);\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnClearFilters = React.useCallback(onClearFilters || (() => {}), [onClearFilters]);\n  const memoizedOnOrderAction = React.useCallback(onOrderAction, [onOrderAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort || (() => {}), [onSort]);\n  const memoizedOnQuickFilterChange = React.useCallback(onQuickFilterChange || (() => {}), [onQuickFilterChange]);\n  const memoizedOnDateRangeChange = React.useCallback(onDateRangeChange || (() => {}), [onDateRangeChange]);\n  \n  // Show warning if viewing all orders without time filter and total > 10K\n  const showLargeDatasetWarning = activeQuickFilter === 'all' && data.total > 10000;\n  \n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 space-y-4\">\n        <OrderHeader\n          totalOrders={data.total}\n          stats={data.stats}\n          showStats={showStats}\n        />\n        \n        {/* Compact Filters - All in one row */}\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              {/* Date Range Dropdown */}\n              {showQuickFilters && filterStyle === 'dropdown' && (\n                <OrderDateRangeFilter\n                  activeRange={activeQuickFilter}\n                  totalOrders={data.total}\n                  filteredCount={filters.startDate || filters.endDate ? data.total : undefined}\n                  onRangeChange={memoizedOnDateRangeChange}\n                  showWarning={showLargeDatasetWarning}\n                />\n              )}\n              \n              {/* Search + Status + Type + Outlet (from OrderFilters) */}\n              <OrderFiltersComponent \n                filters={filters}\n                onFiltersChange={memoizedOnFiltersChange}\n                onSearchChange={memoizedOnSearchChange}\n                onClearFilters={memoizedOnClearFilters}\n              />\n            </div>\n          </CardContent>\n        </Card>\n        \n        {/* Warning banner when needed */}\n        {showLargeDatasetWarning && (\n          <div className=\"flex items-center gap-2 px-3 py-2 rounded-lg bg-warning-bg border border-warning-border\">\n            <AlertCircle className=\"w-4 h-4 text-warning-text flex-shrink-0\" />\n            <span className=\"text-sm text-warning-text font-medium\">\n              {t('messages.viewingAllOrders')} {data.total.toLocaleString()} {t('messages.mayBeSlow')}\n            </span>\n          </div>\n        )}\n      </div>\n      \n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0 mt-4\">\n        <OrderTable \n          orders={data.orders}\n          onOrderAction={memoizedOnOrderAction}\n          sortBy={filters.sortBy}\n          sortOrder={filters.sortOrder}\n          onSort={memoizedOnSort}\n        />\n      </div>\n      \n      {/* Fixed Pagination Section - Always at Bottom */}\n      {data.total > 0 && data.total > (data.limit || 20) && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination \n            currentPage={data.currentPage}\n            totalPages={data.totalPages}\n            total={data.total}\n            limit={data.limit || 20}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"orders\"\n          />\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default Orders;\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, Button, Input, Label, Badge, Alert, AlertDescription, DateRangePicker } from '@rentalshop/ui';\nimport { PricingResolver, PricingValidator, formatCurrency } from '@rentalshop/utils';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport type { Product, Merchant } from '@rentalshop/types';\nimport type { PricingType } from '@rentalshop/constants';\n\ninterface RentalPeriodSelectorProps {\n  product: Product;\n  merchant: Merchant;\n  onPeriodChange: (startAt: Date, endAt: Date) => void;\n  onPriceChange?: (pricing: any) => void;\n  initialStartDate?: string; // ISO date string from formData\n  initialEndDate?: string; // ISO date string from formData\n}\n\nexport const RentalPeriodSelector: React.FC<RentalPeriodSelectorProps> = ({\n  product,\n  merchant,\n  onPeriodChange,\n  onPriceChange,\n  initialStartDate,\n  initialEndDate\n}) => {\n  const t = useOrderTranslations();\n  // Initialize with formData values if available\n  const [rentalStartAt, setRentalStartAt] = useState<Date | null>(() => \n    initialStartDate ? new Date(initialStartDate) : null\n  );\n  const [rentalEndAt, setRentalEndAt] = useState<Date | null>(() => \n    initialEndDate ? new Date(initialEndDate) : null\n  );\n  const [validationResult, setValidationResult] = useState<any>(null);\n  const [lastNotifiedDates, setLastNotifiedDates] = useState<string>('');\n  \n  const config = PricingResolver.getEffectivePricingConfig(product, merchant);\n  \n  // Hourly-specific state (must be at component level, not inside render function)\n  const [pickupHour, setPickupHour] = useState<number>(() => {\n    if (initialStartDate) {\n      return new Date(initialStartDate).getHours();\n    }\n    return 9;\n  });\n  const [returnHour, setReturnHour] = useState<number>(() => {\n    if (initialEndDate) {\n      return new Date(initialEndDate).getHours();\n    }\n    return 17;\n  });\n  \n  // Debug logs\n  console.log('🔍 RentalPeriodSelector rendered:', {\n    pricingType: config.pricingType,\n    productName: product.name,\n    merchantBusinessType: merchant.businessType\n  });\n  \n  useEffect(() => {\n    if (rentalStartAt && rentalEndAt) {\n      // Create a unique key for current dates\n      const currentDatesKey = `${rentalStartAt.toISOString()}_${rentalEndAt.toISOString()}`;\n      \n      // Only notify if dates actually changed\n      if (currentDatesKey !== lastNotifiedDates) {\n        console.log('🔍 RentalPeriodSelector dates changed:', {\n          rentalStartAt,\n          rentalEndAt,\n          currentDatesKey,\n          lastNotifiedDates\n        });\n        \n        // Update last notified dates FIRST to prevent re-trigger\n        setLastNotifiedDates(currentDatesKey);\n        \n        // ALWAYS call onPeriodChange when dates are selected, even before validation\n        onPeriodChange(rentalStartAt, rentalEndAt);\n        \n        // Validate rental period\n        const validation = PricingValidator.validateRentalPeriod(\n          product, merchant, rentalStartAt, rentalEndAt, 1\n        );\n        setValidationResult(validation);\n        \n        console.log('🔍 Validation result:', validation);\n        \n        // Calculate and notify price change if validation passes\n        if (validation.isValid && onPriceChange) {\n          try {\n            const pricing = PricingResolver.calculatePrice(\n              product, merchant, rentalStartAt, rentalEndAt, 1\n            );\n            onPriceChange(pricing);\n          } catch (error) {\n            console.error('Price calculation error:', error);\n          }\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rentalStartAt, rentalEndAt]);\n\n  const setQuickDuration = (duration: number, unit: 'hour' | 'day' | 'week') => {\n    const now = new Date();\n    let endTime: Date;\n    \n    switch (unit) {\n      case 'hour':\n        endTime = new Date(now.getTime() + (duration * 60 * 60 * 1000));\n        break;\n      case 'day':\n        endTime = new Date(now.getTime() + (duration * 24 * 60 * 60 * 1000));\n        break;\n      case 'week':\n        endTime = new Date(now.getTime() + (duration * 7 * 24 * 60 * 60 * 1000));\n        break;\n      default:\n        endTime = now;\n    }\n    \n    setRentalStartAt(now);\n    setRentalEndAt(endTime);\n  };\n\n  const calculateDuration = (start: Date, end: Date, pricingType: PricingType): string => {\n    const durationMs = end.getTime() - start.getTime();\n    \n    switch (pricingType) {\n      case 'HOURLY':\n        const hours = Math.ceil(durationMs / (1000 * 60 * 60));\n        return `${hours} hour${hours > 1 ? 's' : ''}`;\n      case 'DAILY':\n        const days = Math.ceil(durationMs / (1000 * 60 * 60 * 24));\n        return `${days} day${days > 1 ? 's' : ''}`;\n      case 'WEEKLY':\n        const weeks = Math.ceil(durationMs / (1000 * 60 * 60 * 24 * 7));\n        return `${weeks} week${weeks > 1 ? 's' : ''}`;\n      default:\n        return 'N/A';\n    }\n  };\n\n  const calculateTotalPrice = (): number => {\n    if (!rentalStartAt || !rentalEndAt) return 0;\n    \n    try {\n      const pricing = PricingResolver.calculatePrice(\n        product, merchant, rentalStartAt, rentalEndAt, 1\n      );\n      return pricing.totalPrice;\n    } catch (error) {\n      return 0;\n    }\n  };\n\n  // Render UI based on merchant's pricing type (no manual override)\n  const renderPricingUI = () => {\n    switch (config.pricingType) {\n      case 'HOURLY':\n        return renderHourlyPricing();\n      case 'DAILY':\n        return renderDailyPricing();\n      case 'WEEKLY':\n        return renderWeeklyPricing();\n      case 'FIXED':\n      default:\n        return renderFixedPricing();\n    }\n  };\n\n  // Shared Calendar UI for FIXED, DAILY, WEEKLY\n  const renderCalendarUI = (label: string, quickButtons?: { value: number; unit: 'day' | 'week'; label: string }[]) => (\n    <div className=\"space-y-3\">\n      <Label className=\"text-sm font-medium\">\n        {label} <span className=\"text-red-500\">*</span>\n      </Label>\n      <DateRangePicker\n        value={{\n          from: rentalStartAt || undefined,\n          to: rentalEndAt || undefined\n        }}\n        onChange={(range) => {\n          if (range?.from) setRentalStartAt(range.from);\n          if (range?.to) setRentalEndAt(range.to);\n        }}\n        placeholder=\"Select pickup and return dates\"\n        minDate={new Date()}\n        showPresets={true}\n      />\n      \n      {/* Quick Duration Buttons (optional) */}\n      {quickButtons && quickButtons.length > 0 && (\n        <div className=\"flex gap-2 flex-wrap\">\n          {quickButtons.map((btn) => (\n            <Button\n              key={btn.value}\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setQuickDuration(btn.value, btn.unit)}\n            >\n              {btn.label}\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n  // Fixed pricing - calendar with fixed price\n  const renderFixedPricing = () => renderCalendarUI('Rental Period');\n\n  // Hourly pricing - Single date picker + Pickup/Return hour selectors\n  const renderHourlyPricing = () => {\n    // Update dates when hours change\n    const updateHourlyDates = (pickup: number, returnH: number) => {\n      if (rentalStartAt) {\n        const newStart = new Date(rentalStartAt);\n        newStart.setHours(pickup, 0, 0, 0);\n        setRentalStartAt(newStart);\n        \n        const newEnd = new Date(rentalStartAt);\n        newEnd.setHours(returnH, 0, 0, 0);\n        setRentalEndAt(newEnd);\n      }\n    };\n\n    return (\n      <div className=\"space-y-3\">\n        <Label className=\"text-sm font-medium\">\n          Rental Period (Hourly) <span className=\"text-red-500\">*</span>\n        </Label>\n        \n        {/* Single Date Picker - Same day rental using DateRangePicker */}\n        <div className=\"space-y-2\">\n          <DateRangePicker\n            value={{\n              from: rentalStartAt || undefined,\n              to: rentalStartAt || undefined // Same day for hourly\n            }}\n            onChange={(range) => {\n              if (range?.from) {\n                const selectedDate = new Date(range.from);\n                const newStart = new Date(selectedDate);\n                newStart.setHours(pickupHour, 0, 0, 0);\n                setRentalStartAt(newStart);\n                \n                const newEnd = new Date(selectedDate);\n                newEnd.setHours(returnHour, 0, 0, 0);\n                setRentalEndAt(newEnd);\n              }\n            }}\n            placeholder=\"Select rental date\"\n            minDate={new Date()}\n            showPresets={false}\n          />\n        </div>\n        \n        {/* Pickup Hour Selector */}\n        <div className=\"space-y-2\">\n          <Label className=\"text-sm font-medium text-gray-600\">Pickup Hour</Label>\n          <div className=\"grid grid-cols-8 gap-1\">\n            {Array.from({ length: 24 }, (_, i) => i).map((hour) => (\n              <Button\n                key={hour}\n                type=\"button\"\n                variant={pickupHour === hour ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => {\n                  setPickupHour(hour);\n                  updateHourlyDates(hour, returnHour);\n                }}\n                disabled={!rentalStartAt}\n                className=\"text-xs px-1\"\n              >\n                {hour.toString().padStart(2, '0')}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Return Hour Selector */}\n        <div className=\"space-y-2\">\n          <Label className=\"text-sm font-medium text-gray-600\">Return Hour</Label>\n          <div className=\"grid grid-cols-8 gap-1\">\n            {Array.from({ length: 24 }, (_, i) => i).map((hour) => (\n              <Button\n                key={hour}\n                type=\"button\"\n                variant={returnHour === hour ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => {\n                  setReturnHour(hour);\n                  updateHourlyDates(pickupHour, hour);\n                }}\n                disabled={!rentalStartAt || hour <= pickupHour}\n                className=\"text-xs px-1\"\n              >\n                {hour.toString().padStart(2, '0')}\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Duration Display */}\n        {rentalStartAt && rentalEndAt && (\n          <div className=\"p-3 bg-blue-50 rounded-lg border border-blue-200 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Duration:</span>\n              <span className=\"font-medium text-blue-700\">\n                {Math.ceil((rentalEndAt.getTime() - rentalStartAt.getTime()) / (1000 * 60 * 60))} hours\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Daily pricing - calendar with daily quick buttons\n  const renderDailyPricing = () => renderCalendarUI(\n    t('messages.rentalPeriodDaily'),\n    [] // Bỏ suggest dates theo yêu cầu\n  );\n\n  // Weekly pricing - calendar with weekly quick buttons\n  const renderWeeklyPricing = () => renderCalendarUI(\n    t('messages.rentalPeriodWeekly'),\n    [] // Bỏ suggest dates theo yêu cầu\n  );\n\n  // Render pricing UI directly based on merchant's pricing type\n  return renderPricingUI();\n};\n","import React from 'react';\nimport { \n  MerchantListHeader,\n  MerchantFilters,\n  MerchantTable\n} from './components';\nimport { Pagination, Card, CardContent } from '../../ui';\nimport type { Merchant } from '@rentalshop/types';\n\ninterface MerchantFiltersData {\n  search: string;\n  status: string;\n  plan: string;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\ninterface MerchantsData {\n  merchants: Merchant[];\n  total: number;\n  currentPage: number;\n  page?: number; // Alias for compatibility\n  totalPages: number;\n  limit: number;\n  hasMore: boolean;\n  stats: {\n    totalMerchants: number;\n    activeMerchants: number;\n    trialAccounts: number;\n    totalRevenue: number;\n  };\n}\n\ninterface MerchantsProps {\n  data: MerchantsData;\n  filters: MerchantFiltersData;\n  onFiltersChange: (filters: MerchantFiltersData) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n  onMerchantAction: (action: string, merchantId: number) => void;\n  onPageChange: (page: number) => void;\n  onSort?: (column: string) => void;\n}\n\n/**\n * ✅ MODERN MERCHANTS COMPONENT (Standard Pattern)\n * \n * - Clean presentation component (like Orders, Products, Users)\n * - No internal state management\n * - Works with external data\n * - Single responsibility: render merchants UI\n * - Proper flex layout with pagination at bottom\n */\nexport function Merchants({ \n  data, \n  filters, \n  onFiltersChange, \n  onSearchChange,\n  onClearFilters,\n  onMerchantAction, \n  onPageChange,\n  onSort\n}: MerchantsProps) {\n  \n  // Debug: Log data to check pagination condition\n  console.log('🏢 Merchants Component - Data check:', {\n    total: data.total,\n    currentPage: data.currentPage,\n    totalPages: data.totalPages,\n    merchantsCount: data.merchants?.length,\n    shouldShowPagination: data.total > 0,\n    paginationCondition: `data.total > 0 = ${data.total} > 0 = ${data.total > 0}`\n  });\n  \n  // Memoize handlers to prevent child re-renders\n  const memoizedOnFiltersChange = React.useCallback(onFiltersChange, [onFiltersChange]);\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnClearFilters = React.useCallback(onClearFilters || (() => {}), [onClearFilters]);\n  const memoizedOnMerchantAction = React.useCallback(onMerchantAction, [onMerchantAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort || (() => {}), [onSort]);\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 space-y-4\">\n        <MerchantListHeader stats={data.stats} />\n        \n        {/* Compact Filters - All in one row */}\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <MerchantFilters \n                filters={filters}\n                onFiltersChange={memoizedOnFiltersChange}\n                onSearchChange={memoizedOnSearchChange}\n                onClearFilters={memoizedOnClearFilters}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n      \n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0 mt-4\">\n        <MerchantTable \n          merchants={data.merchants}\n          onMerchantAction={memoizedOnMerchantAction}\n          sortBy={filters.sortBy || 'createdAt'}\n          sortOrder={filters.sortOrder || 'desc'}\n          onSort={memoizedOnSort}\n        />\n      </div>\n      \n      {/* Fixed Pagination Section - Always at Bottom */}\n      {data.merchants.length > 0 && data.total > data.limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination \n            currentPage={data.currentPage || data.page || 1}\n            totalPages={data.totalPages || 1}\n            total={data.total || data.merchants.length}\n            limit={data.limit || 10}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"merchants\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Merchants;\n","import React from 'react';\nimport { Card, CardContent } from '../../../ui';\nimport { Users, Building2, CreditCard, TrendingUp } from 'lucide-react';\nimport type { Merchant, MerchantDetailStats } from '@rentalshop/types';\n\ninterface MerchantHeaderProps {\n  merchant: Merchant;\n  stats: MerchantDetailStats;\n}\n\nexport function MerchantHeader({ merchant, stats }: MerchantHeaderProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      {/* Merchant Info */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Merchant</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-white\">{merchant.name}</p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">{merchant.email}</p>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Total Outlets */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <Building2 className=\"w-6 h-6 text-blue-700 mx-auto mb-2\" />\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Outlets</p>\n            <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.totalOutlets}</p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Business locations</p>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Total Users */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <Users className=\"w-6 h-6 text-purple-600 mx-auto mb-2\" />\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Users</p>\n            <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">{stats.totalUsers}</p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Staff accounts</p>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Total Revenue */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <TrendingUp className=\"w-6 h-6 text-green-600 mx-auto mb-2\" />\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">Total Revenue</p>\n            <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              ${(stats.totalRevenue || 0).toLocaleString()}\n            </p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Lifetime earnings</p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default MerchantHeader;\n","import React from 'react';\nimport { Card, CardContent } from '../../../ui';\nimport { Users, Building2, CreditCard, TrendingUp } from 'lucide-react';\n\ninterface MerchantListStats {\n  totalMerchants: number;\n  activeMerchants: number;\n  trialAccounts: number;\n  totalRevenue: number;\n}\n\ninterface MerchantListHeaderProps {\n  stats: MerchantListStats;\n}\n\nexport function MerchantListHeader({ stats }: MerchantListHeaderProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      {/* Total Merchants */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Merchants</p>\n            <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">{stats.totalMerchants}</p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">All registered merchants</p>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Active Merchants */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Active Merchants</p>\n            <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">{stats.activeMerchants}</p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Currently active accounts</p>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Trial Accounts */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Trial Accounts</p>\n            <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">{stats.trialAccounts}</p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Free trial users</p>\n          </div>\n        </CardContent>\n      </Card>\n      \n      {/* Total Revenue */}\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-2\">\n            <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Revenue</p>\n            <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              ${(stats.totalRevenue || 0).toLocaleString()}\n            </p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">Lifetime earnings</p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default MerchantListHeader;\n","import React from 'react';\nimport { Button, Input, Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../../ui';\n\ninterface MerchantFiltersData {\n  search: string;\n  status: string;\n  plan: string;\n  sortBy: string;\n  sortOrder: 'asc' | 'desc';\n}\n\ninterface MerchantFiltersProps {\n  filters: MerchantFiltersData;\n  onFiltersChange: (filters: MerchantFiltersData) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n}\n\n/**\n * ✅ COMPACT MERCHANT FILTERS (Following Orders pattern)\n * - No card wrapper (parent wraps)\n * - h-10 height for all inputs\n * - No labels, clean inline layout\n * - Responsive flex-wrap\n */\nexport function MerchantFilters({ \n  filters, \n  onFiltersChange, \n  onSearchChange,\n  onClearFilters \n}: MerchantFiltersProps) {\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.target.value);\n  };\n\n  const handleStatusChange = (value: string) => {\n    onFiltersChange({ ...filters, status: value });\n  };\n\n  const handlePlanChange = (value: string) => {\n    onFiltersChange({ ...filters, plan: value });\n  };\n\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            type=\"text\"\n            placeholder=\"Search merchants...\"\n            value={filters.search}\n            onChange={handleSearchChange}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Status Filter */}\n      <Select value={filters.status} onValueChange={handleStatusChange}>\n        <SelectTrigger className=\"w-[150px] h-10\">\n          <SelectValue placeholder=\"Status\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All Status</SelectItem>\n          <SelectItem value=\"active\">Active</SelectItem>\n          <SelectItem value=\"inactive\">Inactive</SelectItem>\n          <SelectItem value=\"trial\">Trial</SelectItem>\n          <SelectItem value=\"expired\">Expired</SelectItem>\n        </SelectContent>\n      </Select>\n\n      {/* Plan Filter */}\n      <Select value={filters.plan} onValueChange={handlePlanChange}>\n        <SelectTrigger className=\"w-[160px] h-10\">\n          <SelectValue placeholder=\"Plan\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All Plans</SelectItem>\n          <SelectItem value=\"Basic\">Basic</SelectItem>\n          <SelectItem value=\"Professional\">Professional</SelectItem>\n          <SelectItem value=\"Enterprise\">Enterprise</SelectItem>\n        </SelectContent>\n      </Select>\n\n      {/* Clear Filters */}\n      {onClearFilters && (filters.search || filters.status !== 'all' || filters.plan !== 'all') && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          Clear\n        </Button>\n      )}\n    </>\n  );\n}\n\nexport default MerchantFilters;\n","import React, { useState } from 'react';\nimport { \n  Card, \n  CardContent,\n  Button,\n  StatusBadge,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger\n} from '../../../ui';\nimport { \n  Eye, \n  Edit,\n  MoreVertical\n} from 'lucide-react';\nimport type { Merchant } from '@rentalshop/types';\n\ninterface MerchantTableProps {\n  merchants: Merchant[];\n  onMerchantAction: (action: string, merchantId: number) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\n\n\nexport function MerchantTable({ \n  merchants, \n  onMerchantAction,\n  sortBy = 'name',\n  sortOrder = 'asc',\n  onSort\n}: MerchantTableProps) {\n  const [openMenuId, setOpenMenuId] = useState<number | null>(null);\n\n  const getStatusBadge = (merchant: Merchant) => {\n    if (!merchant.isActive) {\n      return <StatusBadge status=\"inactive\" type=\"entity\" size=\"sm\" />;\n    }\n    // Get status from subscription (single source of truth - always exists)\n    const status = merchant.subscription?.status;\n    return <StatusBadge status={status} type=\"subscription\" size=\"sm\" />;\n  };\n\n  if (merchants.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-text-tertiary\">\n            <div className=\"text-4xl mb-4\">🏪</div>\n            <h3 className=\"text-lg font-medium mb-2\">No merchants found</h3>\n            <p className=\"text-sm\">\n              Try adjusting your filters or create some merchants to get started.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border-border flex flex-col h-full\">\n      <CardContent className=\"p-0 flex-1 overflow-hidden\">\n        {/* Table with scroll - flex layout */}\n        <div className=\"flex-1 overflow-auto h-full\">\n          <table className=\"w-full\">\n            <thead className=\"bg-bg-secondary border-b border-border sticky top-0 z-10\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Merchant Name\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Plan & Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Created At\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Start Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  End Date\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-border bg-bg-card\">\n              {merchants.map((merchant) => (\n                <tr \n                  key={merchant.id} \n                  className=\"hover:bg-bg-secondary transition-colors\"\n                >\n                  {/* Merchant Name */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-br from-action-primary to-brand-primary flex items-center justify-center\">\n                        <span className=\"text-white font-semibold text-sm\">\n                          {merchant.name.substring(0, 2).toUpperCase()}\n                        </span>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-text-primary\">\n                          {merchant.name}\n                        </div>\n                        <div className=\"text-sm text-text-tertiary\">\n                          {merchant.email || 'No email'}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n\n                  {/* Plan & Status */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex flex-col gap-1\">\n                      <div className=\"text-sm font-medium text-text-primary\">\n                        {merchant.subscription?.plan?.name || 'No Plan'}\n                      </div>\n                      {getStatusBadge(merchant)}\n                    </div>\n                  </td>\n\n                  {/* Created At */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {merchant.createdAt \n                        ? new Date(merchant.createdAt).toLocaleDateString('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                          })\n                        : 'N/A'}\n                    </div>\n                  </td>\n\n                  {/* Start Date */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {merchant.subscription?.currentPeriodStart \n                        ? new Date(merchant.subscription.currentPeriodStart).toLocaleDateString('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                          })\n                        : merchant.createdAt\n                        ? new Date(merchant.createdAt).toLocaleDateString('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                          })\n                        : 'N/A'}\n                    </div>\n                  </td>\n\n                  {/* End Date */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {merchant.subscription?.currentPeriodEnd \n                        ? new Date(merchant.subscription.currentPeriodEnd).toLocaleDateString('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                          })\n                        : merchant.lastActiveAt\n                        ? new Date(merchant.lastActiveAt).toLocaleDateString('en-US', {\n                            month: 'short',\n                            day: 'numeric',\n                            year: 'numeric'\n                          })\n                        : 'No end date'}\n                    </div>\n                  </td>\n\n                  {/* Actions */}\n                  <td className=\"px-6 py-4 text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          onClick={() => setOpenMenuId(openMenuId === merchant.id ? null : merchant.id)}\n                        >\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent \n                        align=\"end\"\n                        open={openMenuId === merchant.id}\n                        onOpenChange={(open: boolean) => setOpenMenuId(open ? merchant.id : null)}\n                      >\n                        <DropdownMenuItem \n                          onClick={() => {\n                            onMerchantAction('view', merchant.id);\n                            setOpenMenuId(null);\n                          }}\n                        >\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          View Details\n                        </DropdownMenuItem>\n                        <DropdownMenuItem \n                          onClick={() => {\n                            onMerchantAction('edit', merchant.id);\n                            setOpenMenuId(null);\n                          }}\n                        >\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          Edit Merchant\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default MerchantTable;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button,\n  Badge,\n  StatusBadge,\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Label,\n  Textarea,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '../../../ui';\nimport { ManualRenewalModal } from '../../Subscriptions';\nimport { SubscriptionHistoryDialog } from '../../Subscriptions/components/SubscriptionHistoryDialog';\nimport { \n  CreditCard, \n  Clock, \n  ArrowRight,\n  Pause,\n  Play,\n  Plus,\n  X,\n  History\n} from 'lucide-react';\nimport { formatSubscriptionPeriod, formatDateTimeLong } from '@rentalshop/utils';\n// Billing configuration (following Stripe's modern practices)\nconst BILLING_INTERVALS = [\n  {\n    id: 'month',\n    name: 'Monthly',\n    months: 1,\n    discountPercentage: 0,\n    description: 'No discount for monthly billing',\n    isActive: true\n  },\n  {\n    id: 'quarter',\n    name: 'Quarterly',\n    months: 3,\n    discountPercentage: 5,\n    description: '5% discount for quarterly billing',\n    isActive: true\n  },\n  {\n    id: 'semiAnnual',\n    name: '6 Months',\n    months: 6,\n    discountPercentage: 10,\n    description: '10% discount for 6-month billing',\n    isActive: true\n  },\n  {\n    id: 'year',\n    name: 'Yearly',\n    months: 12,\n    discountPercentage: 20,\n    description: '20% discount for yearly billing',\n    isActive: true\n  }\n];\n\n// Helper functions for billing\nconst getActiveBillingIntervals = () => BILLING_INTERVALS.filter(interval => interval.isActive);\nconst getDiscountPercentage = (intervalId: string) => {\n  const interval = BILLING_INTERVALS.find(i => i.id === intervalId);\n  return interval?.discountPercentage || 0;\n};\nconst calculateDiscountedPrice = (basePrice: number, intervalId: string, duration: number = 1) => {\n  const interval = BILLING_INTERVALS.find(i => i.id === intervalId);\n  if (!interval) return basePrice * duration;\n  \n  const discount = interval.discountPercentage / 100;\n  const discountedPrice = basePrice * (1 - discount);\n  return discountedPrice * duration;\n};\nconst formatBillingInterval = (intervalId: string) => {\n  const interval = BILLING_INTERVALS.find(i => i.id === intervalId);\n  if (!interval) return intervalId;\n  \n  const discount = interval.discountPercentage > 0 \n    ? ` (${interval.discountPercentage}% discount)`\n    : '';\n  \n  return `${interval.name}${discount}`;\n};\nimport type { Plan, Subscription } from '@rentalshop/types';\n\ninterface MerchantPlanManagementProps {\n  merchant: {\n    id: number;\n    name: string;\n    email: string;\n    currentPlan?: {\n      id: number;\n      name: string;\n      price: number;\n      currency: string;\n    } | null;\n    subscriptionStatus: string;\n  };\n  subscriptions?: Subscription[];\n  plans?: Plan[];\n  onPlanChange: (planData: {\n    planId: number;\n    planVariantId?: number;\n    reason?: string;\n    effectiveDate?: string;\n    notifyMerchant?: boolean;\n    billingInterval?: string;\n    duration?: number;\n    discount?: number;\n    totalPrice?: number;\n  }) => Promise<void>;\n  onExtend?: (extendData: {\n    subscription: Subscription;\n    duration: number;\n    billingInterval: string;\n    discount: number;\n    totalPrice: number;\n  }) => Promise<void>;\n  onCancel?: (subscription: Subscription, reason: string, cancelType: 'immediate' | 'end_of_period') => Promise<void>;\n  onSuspend?: (subscription: Subscription, reason: string) => Promise<void>;\n  onReactivate?: (subscription: Subscription) => Promise<void>;\n  loading?: boolean;\n  currentUserRole?: string;\n}\n\nexport function MerchantPlanManagement({\n  merchant,\n  subscriptions = [],\n  plans = [],\n  onPlanChange,\n  onExtend,\n  onCancel,\n  onSuspend,\n  onReactivate,\n  loading = false,\n  currentUserRole\n}: MerchantPlanManagementProps) {\n  // Get current subscription from merchant.subscription (single source of truth - always exists)\n  const currentSubscription = merchant.subscription || subscriptions[0];\n\n  // Debug: Log subscription status values\n  console.log('🔍 MerchantPlanManagement Debug:', {\n    merchantId: merchant.id,\n    merchantName: merchant.name,\n    subscription: currentSubscription,\n    subscriptionStatus: currentSubscription?.status\n  });\n\n  // Normalize subscription status to lowercase for consistent comparison\n  const subscriptionStatus = currentSubscription.status.toLowerCase();\n  const isActiveStatus = subscriptionStatus === 'trial' || subscriptionStatus === 'active';\n  const isPausedStatus = subscriptionStatus === 'paused' || subscriptionStatus === 'cancelled' || subscriptionStatus === 'expired';\n  const isTrialStatus = subscriptionStatus === 'trial';\n  const isActivePaidStatus = subscriptionStatus === 'active';\n  const isPaused = subscriptionStatus === 'paused';\n  \n  // Check if current plan is Trial plan (free)\n  const isTrialPlan = currentSubscription.plan?.name?.toLowerCase() === 'trial' || \n                      currentSubscription.plan?.basePrice === 0;\n  \n  const [showChangeDialog, setShowChangeDialog] = useState(false);\n  const [showRenewalModal, setShowRenewalModal] = useState(false);\n  const [showCancelDialog, setShowCancelDialog] = useState(false);\n  const [showSuspendDialog, setShowSuspendDialog] = useState(false);\n  const [showResumeDialog, setShowResumeDialog] = useState(false);\n  const [showHistoryDialog, setShowHistoryDialog] = useState(false);\n  const [cancelReason, setCancelReason] = useState('');\n  const [cancelType, setCancelType] = useState<'immediate' | 'end_of_period'>('end_of_period');\n  const [suspendReason, setSuspendReason] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [renewalLoading, setRenewalLoading] = useState(false);\n  \n  // Change plan form state\n  const [selectedPlanId, setSelectedPlanId] = useState<string>('');\n  const [changeReason, setChangeReason] = useState('');\n  const [notifyMerchant, setNotifyMerchant] = useState(true);\n  const [changeBillingInterval, setChangeBillingInterval] = useState<string>('month');\n\n  // Reset form when dialog opens\n  const handleOpenChangeDialog = () => {\n    setShowChangeDialog(true);\n    setSelectedPlanId('');\n    setChangeReason('');\n    setChangeBillingInterval('month');\n    setNotifyMerchant(true);\n  };\n\n  // Ensure billing interval is always set when dialog opens\n  useEffect(() => {\n    if (showChangeDialog && !changeBillingInterval) {\n      setChangeBillingInterval('month');\n    }\n  }, [showChangeDialog, changeBillingInterval]);\n\n  const formatPrice = (price: number, currency: string) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(price);\n  };\n\n  const formatDate = (date: Date | string) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  };\n\n  // Get billing intervals from configuration\n  const billingIntervals = getActiveBillingIntervals();\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'active': return 'success';\n      case 'trial': return 'warning';\n      case 'expired': return 'danger';\n      case 'cancelled': return 'danger';\n      case 'paused': return 'warning';\n      case 'suspended': return 'warning';\n      case 'disabled': return 'danger';\n      default: return 'secondary';\n    }\n  };\n\n\n  const handleRenewal = async (paymentData: any) => {\n    if (!currentSubscription || !onExtend) return;\n    \n    try {\n      setRenewalLoading(true);\n      \n      // Pass the renewal data to parent handler\n      await onExtend({\n        subscription: currentSubscription,\n        duration: 1,\n        billingInterval: 'month',\n        discount: 0,\n        totalPrice: currentSubscription.amount,\n        paymentData: paymentData // Include payment info\n      } as any);\n      \n      setShowRenewalModal(false);\n    } catch (error) {\n      console.error('Failed to renew subscription:', error);\n      throw error; // Re-throw for modal to handle\n    } finally {\n      setRenewalLoading(false);\n    }\n  };\n\n  const handleCancel = async () => {\n    if (!currentSubscription || !cancelReason.trim()) return;\n\n    setIsSubmitting(true);\n    try {\n      await onCancel?.(currentSubscription, cancelReason.trim(), cancelType);\n      setShowCancelDialog(false);\n      setCancelReason('');\n      setCancelType('end_of_period');\n    } catch (error) {\n      console.error('Error canceling subscription:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleChangePlan = async () => {\n    if (!selectedPlanId || !changeBillingInterval) return;\n\n    setIsSubmitting(true);\n    try {\n      const selectedPlan = plans.find(p => p.id.toString() === selectedPlanId);\n      const discount = getDiscountPercentage(changeBillingInterval);\n      \n      const planChangeData = {\n        planId: Number(selectedPlanId),\n        reason: changeReason.trim() || 'Plan changed by admin',\n        notifyMerchant,\n        billingInterval: changeBillingInterval,\n        duration: 1, // Always 1 period\n        discount: discount,\n        totalPrice: selectedPlan ? calculateDiscountedPrice(selectedPlan.basePrice, changeBillingInterval, 1) : 0\n      };\n      \n      await onPlanChange?.(planChangeData);\n      setShowChangeDialog(false);\n      // Reset form\n      setSelectedPlanId('');\n      setChangeReason('');\n      setNotifyMerchant(true);\n      setChangeBillingInterval('month');\n    } catch (error) {\n      console.error('Error changing plan:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n\n  const handleSuspend = async () => {\n    if (!currentSubscription || !suspendReason.trim()) return;\n\n    setIsSubmitting(true);\n    try {\n      await onSuspend?.(currentSubscription, suspendReason.trim());\n      setShowSuspendDialog(false);\n      setSuspendReason('');\n    } catch (error) {\n      console.error('Error suspending subscription:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleReactivate = async () => {\n    if (!currentSubscription) return;\n\n    setIsSubmitting(true);\n    try {\n      await onReactivate?.(currentSubscription);\n      setShowResumeDialog(false);\n    } catch (error) {\n      console.error('Error reactivating subscription:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <CreditCard className=\"h-5 w-5\" />\n            Plan Management\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n            <div className=\"h-8 bg-gray-200 rounded w-1/4\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Current Plan Overview */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <CreditCard className=\"h-5 w-5\" />\n              Current Subscription\n            </CardTitle>\n            \n            {/* View History Button - Top Right Corner */}\n            {currentSubscription && (currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setShowHistoryDialog(true)}\n                className=\"flex items-center gap-2\"\n              >\n                <History className=\"h-4 w-4\" />\n                View History\n              </Button>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent>\n          {currentSubscription ? (\n            <div className=\"space-y-4\">\n              {/* Plan Name, Price & Status */}\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"text-lg font-semibold\">\n                    {currentSubscription?.plan?.name || 'No plan assigned'}\n                  </h3>\n                  <p className=\"text-sm text-gray-500\">\n                    {currentSubscription ? \n                        formatPrice(currentSubscription.amount, currentSubscription.currency) + '/month' :\n                        'No pricing available'\n                    }\n                  </p>\n                </div>\n                <div className=\"flex flex-col items-end gap-2\">\n                  {/* Subscription Status - Highlighted */}\n                  <div className={`px-3 py-1.5 rounded-lg font-semibold text-sm ${\n                    currentSubscription?.status === 'ACTIVE' ? 'bg-green-100 text-green-800' :\n                    currentSubscription?.status === 'TRIAL' ? 'bg-blue-100 text-blue-800' :\n                    currentSubscription?.status === 'PAUSED' ? 'bg-orange-100 text-orange-800' :\n                    currentSubscription?.status === 'CANCELLED' ? 'bg-red-100 text-red-800' :\n                    currentSubscription?.status === 'EXPIRED' ? 'bg-gray-100 text-gray-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {currentSubscription?.status || 'Unknown'}\n                  </div>\n                </div>\n              </div>\n\n              {/* Subscription Period - Simplified */}\n              {currentSubscription && (\n                <div className=\"p-4 bg-gray-50 border rounded-lg space-y-2\">\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-gray-600\">Period:</span>\n                    <span className=\"font-medium\">\n                      {formatDateTimeLong(currentSubscription.currentPeriodStart)} - {formatDateTimeLong(currentSubscription.currentPeriodEnd)}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-gray-600\">Billing Interval:</span>\n                    <span className=\"font-medium capitalize\">\n                      {currentSubscription.interval || 'month'}\n                    </span>\n                  </div>\n                  \n                  {(currentSubscription as any).subscriptionPeriod?.daysRemaining !== undefined && (\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-600\">\n                        {(currentSubscription as any).status === 'trial' ? 'Trial ends in:' : 'Renews in:'}\n                      </span>\n                      <span className={`font-medium ${\n                        (currentSubscription as any).subscriptionPeriod?.daysRemaining <= 7 \n                          ? 'text-orange-600' \n                          : 'text-gray-900'\n                      }`}>\n                        {(currentSubscription as any).subscriptionPeriod?.daysRemaining} days\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Only show action buttons for ADMIN and MERCHANT roles */}\n              {(currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && (\n                <div className=\"flex flex-wrap items-center gap-3 pt-4\">\n                  {/* Trial Users: Show Upgrade Button */}\n                  {isTrialPlan && (\n                    <Button\n                      variant=\"default\"\n                      size=\"sm\"\n                      onClick={handleOpenChangeDialog}\n                      className=\"flex items-center gap-2 bg-blue-700 hover:bg-blue-700\"\n                    >\n                      <ArrowRight className=\"h-4 w-4\" />\n                      Upgrade to Paid Plan\n                    </Button>\n                  )}\n                  \n                  {/* Paid Users: Show Change Plan */}\n                  {!isTrialPlan && (\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={handleOpenChangeDialog}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <ArrowRight className=\"h-4 w-4\" />\n                      Change Plan\n                    </Button>\n                  )}\n                \n                {/* Renew/Extend - Only for PAID active subscriptions (NOT trial) */}\n                {currentSubscription && isActiveStatus && !isTrialPlan && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setShowRenewalModal(true)}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                    Renew/Extend\n                  </Button>\n                )}\n                \n                {/* Pause - Only for ACTIVE PAID subscriptions (not trial) */}\n                {currentSubscription && isActivePaidStatus && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setShowSuspendDialog(true)}\n                    className=\"flex items-center gap-2 text-orange-600 hover:text-orange-700\"\n                  >\n                    <Pause className=\"h-4 w-4\" />\n                    Pause Plan\n                  </Button>\n                )}\n                \n                {/* Resume - Only for PAUSED subscriptions */}\n                {currentSubscription && isPaused && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setShowResumeDialog(true)}\n                    disabled={isSubmitting}\n                    className=\"flex items-center gap-2 text-green-600 hover:text-green-700\"\n                  >\n                    <Play className=\"h-4 w-4\" />\n                    Resume Plan\n                  </Button>\n                )}\n                \n                {/* Cancel/End Trial - Different text based on status */}\n                {currentSubscription && (isActiveStatus || isPausedStatus) && (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setShowCancelDialog(true)}\n                    className=\"flex items-center gap-2 text-red-600 hover:text-red-700\"\n                  >\n                    <X className=\"h-4 w-4\" />\n                    {isTrialStatus ? 'End Trial' : 'Cancel Plan'}\n                  </Button>\n                )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <CreditCard className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Subscription</h3>\n              <p className=\"text-gray-500 mb-4\">This merchant doesn't have an active subscription.</p>\n              {/* Only show action buttons for ADMIN and MERCHANT roles */}\n              {(currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && (\n                <div className=\"flex flex-wrap items-center justify-center gap-3\">\n                  <Button onClick={handleOpenChangeDialog}>\n                    <CreditCard className=\"h-4 w-4 mr-2\" />\n                    Create Subscription\n                  </Button>\n                    \n                  {/* Always show Change Plan button */}\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={handleOpenChangeDialog}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <ArrowRight className=\"h-4 w-4\" />\n                    Change Plan\n                  </Button>\n                </div>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n\n      {/* Subscription History */}\n      {subscriptions.length > 1 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Clock className=\"h-5 w-5\" />\n              Plan History\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {subscriptions.slice(1).map((subscription) => (\n                <div key={subscription.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                  <div>\n                    <p className=\"font-medium\">{(subscription as any).planName || 'Unknown Plan'}</p>\n                    <p className=\"text-sm text-gray-500\">\n                      {formatDate(subscription.currentPeriodStart)} - {subscription.currentPeriodEnd ? formatDate(subscription.currentPeriodEnd) : 'N/A'}\n                    </p>\n                    {(subscription as any).changeReason && (\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        Reason: {(subscription as any).changeReason}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium\">\n                      {formatPrice(subscription.amount, (subscription as any).currency || 'USD')}\n                    </p>\n                    <StatusBadge \n                      status={getStatusColor(subscription.status)} \n                      size=\"sm\"\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n\n      {/* Manual Renewal Modal - Only for PAID plans */}\n      {currentSubscription && !isTrialPlan && (\n        <ManualRenewalModal\n          isOpen={showRenewalModal}\n          onClose={() => setShowRenewalModal(false)}\n          subscription={{\n            id: currentSubscription.id,\n            merchantName: merchant.name,\n            planName: currentSubscription.plan?.name || 'Unknown Plan',\n            amount: currentSubscription.plan?.basePrice || currentSubscription.amount || 0,\n            currency: currentSubscription.currency || 'USD',\n            currentPeriodEnd: currentSubscription.currentPeriodEnd \n              ? new Date(currentSubscription.currentPeriodEnd)\n              : new Date()\n          }}\n          onRenew={handleRenewal}\n          loading={renewalLoading}\n        />\n      )}\n\n      {/* Change Plan Dialog - Simplified */}\n      <Dialog open={showChangeDialog} onOpenChange={setShowChangeDialog}>\n        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <ArrowRight className=\"h-5 w-5 text-blue-500\" />\n              Change Subscription Plan\n            </DialogTitle>\n            <DialogDescription>\n              Change the subscription plan for {merchant.name}\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-6\">\n            {/* Current Plan Display */}\n            {currentSubscription?.plan && (\n              <div className=\"p-4 bg-gray-50 border rounded-lg\">\n                <p className=\"text-sm text-gray-600 mb-1\">Current Plan</p>\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"font-semibold text-lg\">{currentSubscription.plan.name}</p>\n                  <p className=\"font-semibold text-lg\">{formatPrice(currentSubscription.plan.basePrice, currentSubscription.plan.currency)}/month</p>\n                </div>\n              </div>\n            )}\n\n            {/* Select New Plan */}\n            <div>\n              <Label htmlFor=\"planSelect\">New Plan *</Label>\n              <Select value={selectedPlanId} onValueChange={setSelectedPlanId}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Choose a plan...\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {plans.map((plan) => (\n                    <SelectItem key={plan.id} value={plan.id.toString()}>\n                      {plan.name} - ${plan.basePrice}/month\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Billing Cycle */}\n            <div>\n              <Label htmlFor=\"changeBillingInterval\">Billing Cycle *</Label>\n              <Select value={changeBillingInterval} onValueChange={setChangeBillingInterval}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {billingIntervals.map((interval: any) => (\n                    <SelectItem key={interval.id} value={interval.id}>\n                      {formatBillingInterval(interval.id)}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Longer billing cycles offer better discounts\n              </p>\n            </div>\n\n            {/* Pricing Summary */}\n            {selectedPlanId && changeBillingInterval && (\n              <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <p className=\"font-medium text-blue-900 mb-2\">Pricing Summary</p>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>New Plan:</span>\n                    <span className=\"font-medium\">\n                      {plans.find(p => p.id.toString() === selectedPlanId)?.name}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Billing:</span>\n                    <span className=\"font-medium\">{formatBillingInterval(changeBillingInterval)}</span>\n                  </div>\n                  {getDiscountPercentage(changeBillingInterval) > 0 && (\n                    <div className=\"flex justify-between text-green-700\">\n                      <span>Discount:</span>\n                      <span className=\"font-medium\">{getDiscountPercentage(changeBillingInterval)}% off</span>\n                    </div>\n                  )}\n                  <div className=\"flex justify-between pt-2 border-t text-base\">\n                    <span className=\"font-semibold\">Total:</span>\n                    <span className=\"font-bold text-blue-900\">\n                      {(() => {\n                        const selectedPlan = plans.find(p => p.id.toString() === selectedPlanId);\n                        if (!selectedPlan) return '$0.00';\n                        const discount = getDiscountPercentage(changeBillingInterval);\n                        const discountedPrice = selectedPlan.basePrice * (1 - discount / 100);\n                        return formatPrice(discountedPrice, selectedPlan.currency);\n                      })()}\n                      /{changeBillingInterval}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Reason (Optional) */}\n            <div>\n              <Label htmlFor=\"changeReason\">Reason for Change (Optional)</Label>\n              <Textarea\n                id=\"changeReason\"\n                value={changeReason}\n                onChange={(e) => setChangeReason(e.target.value)}\n                placeholder=\"e.g., Customer requested upgrade, Business growth, etc.\"\n                rows={2}\n              />\n            </div>\n\n            {/* Notify Merchant */}\n            <div className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                id=\"notifyMerchant\"\n                checked={notifyMerchant}\n                onChange={(e) => setNotifyMerchant(e.target.checked)}\n                className=\"rounded border-gray-300\"\n              />\n              <Label htmlFor=\"notifyMerchant\" className=\"text-sm\">\n                Send email notification to merchant\n              </Label>\n            </div>\n          </div>\n\n          <DialogFooter className=\"border-t pt-4\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowChangeDialog(false)}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleChangePlan}\n              disabled={!selectedPlanId || !changeBillingInterval || isSubmitting}\n            >\n              {isSubmitting ? 'Changing...' : 'Change Plan'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n\n      {/* Cancel Plan Dialog */}\n      <Dialog open={showCancelDialog} onOpenChange={setShowCancelDialog}>\n        <DialogContent className=\"max-w-md max-h-[90vh] overflow-y-auto flex flex-col\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <X className=\"h-5 w-5 text-red-500\" />\n              Cancel Plan\n            </DialogTitle>\n            <DialogDescription>\n              Permanently cancel the current plan for {merchant.name}. This action cannot be undone.\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center gap-2\">\n                <X className=\"h-5 w-5 text-red-500\" />\n                <p className=\"text-sm text-red-700 font-medium\">\n                  Warning: This will permanently cancel the subscription\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"cancelType\">Cancellation Type</Label>\n              <Select value={cancelType} onValueChange={(value: 'immediate' | 'end_of_period') => setCancelType(value)}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"end_of_period\">End of Current Period (Recommended)</SelectItem>\n                  <SelectItem value=\"immediate\">Immediate Cancellation</SelectItem>\n                </SelectContent>\n              </Select>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {cancelType === 'end_of_period' \n                  ? 'Customer keeps access until current billing period ends'\n                  : 'Customer loses access immediately'\n                }\n              </p>\n            </div>\n\n            <div>\n              <Label htmlFor=\"cancelReason\">Reason for Cancellation</Label>\n              <Textarea\n                id=\"cancelReason\"\n                value={cancelReason}\n                onChange={(e) => setCancelReason(e.target.value)}\n                placeholder=\"Enter reason for canceling this plan...\"\n                rows={3}\n              />\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowCancelDialog(false)}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleCancel}\n              disabled={!cancelReason.trim() || isSubmitting}\n            >\n              {isSubmitting ? 'Canceling...' : 'Cancel Plan'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Pause Plan Dialog */}\n      <Dialog open={showSuspendDialog} onOpenChange={setShowSuspendDialog}>\n        <DialogContent className=\"max-w-md max-h-[90vh] overflow-y-auto flex flex-col\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Pause className=\"h-5 w-5 text-orange-500\" />\n              Pause Plan\n            </DialogTitle>\n            <DialogDescription>\n              Pause the current plan for {merchant.name}. The plan can be resumed later without losing subscription history.\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"h-5 w-5 text-orange-500\" />\n                <p className=\"text-sm text-orange-700 font-medium\">\n                  Pausing preserves subscription history and makes reactivation easier\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"suspendReason\">Reason for Pausing</Label>\n              <Textarea\n                id=\"suspendReason\"\n                value={suspendReason}\n                onChange={(e) => setSuspendReason(e.target.value)}\n                placeholder=\"Enter reason for pausing this plan...\"\n                rows={3}\n              />\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowSuspendDialog(false)}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleSuspend}\n              disabled={!suspendReason.trim() || isSubmitting}\n            >\n              {isSubmitting ? 'Pausing...' : 'Pause Plan'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Resume Plan Dialog */}\n      <Dialog open={showResumeDialog} onOpenChange={setShowResumeDialog}>\n        <DialogContent className=\"max-w-md max-h-[90vh] overflow-y-auto flex flex-col\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Play className=\"h-5 w-5 text-green-500\" />\n              Resume Subscription\n            </DialogTitle>\n            <DialogDescription>\n              Are you sure you want to resume this subscription?\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4 flex-1 overflow-y-auto\">\n            <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n              <h4 className=\"font-semibold text-green-900 mb-2\">Resuming Subscription</h4>\n              <ul className=\"text-sm text-green-800 space-y-1\">\n                <li>✓ Your subscription will be reactivated immediately</li>\n                <li>✓ You will regain full access to all features</li>\n                <li>✓ Billing will resume according to your current plan</li>\n                <li>✓ All services will be restored</li>\n              </ul>\n            </div>\n\n            {currentSubscription && (\n              <div className=\"p-4 bg-gray-50 border rounded-lg space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Plan:</span>\n                  <span className=\"font-medium\">{currentSubscription.plan?.name}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Amount:</span>\n                  <span className=\"font-medium\">{formatPrice(currentSubscription.amount, currentSubscription.currency)}/month</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <DialogFooter className=\"flex-shrink-0\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowResumeDialog(false)}\n              disabled={isSubmitting}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"default\"\n              onClick={handleReactivate}\n              disabled={isSubmitting}\n              className=\"bg-green-600 hover:bg-green-700\"\n            >\n              {isSubmitting ? 'Resuming...' : 'Resume Subscription'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Subscription History Dialog */}\n      <Dialog open={showHistoryDialog} onOpenChange={setShowHistoryDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <History className=\"h-5 w-5 text-blue-500\" />\n              Subscription Activity & Payment History\n            </DialogTitle>\n            <DialogDescription>\n              View detailed activity and payment history for this subscription\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"mt-4\">\n            <SubscriptionHistoryDialog \n              subscriptionId={currentSubscription?.id}\n              merchantId={merchant.id}\n            />\n          </div>\n\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowHistoryDialog(false)}\n            >\n              Close\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default MerchantPlanManagement;\n","'use client'\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button,\n  Badge,\n  StatusBadge,\n  Pagination,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '../../../ui';\nimport { \n  Eye, \n  Edit, \n  Building,\n  MoreVertical,\n  Ban\n} from 'lucide-react';\nimport type { Subscription, Plan, Merchant, BillingPeriod } from '@rentalshop/types';\nimport { SubscriptionViewDialog } from './SubscriptionViewDialog';\nimport { SubscriptionExtendDialog } from './SubscriptionExtendDialog';\nimport { SubscriptionChangePlanDialog } from './SubscriptionChangePlanDialog';\nimport { SubscriptionEditDialog } from './SubscriptionEditDialog';\n\ninterface SubscriptionListProps {\n  subscriptions?: Subscription[];\n  plans?: Plan[];\n  merchants?: Merchant[];\n  onView?: (subscription: Subscription) => void;\n  onEdit?: (subscription: Subscription) => void;\n  onDelete?: (subscription: Subscription) => void;\n  onExtend?: (subscription: Subscription) => void;\n  onCancel?: (subscription: Subscription, reason: string) => void;\n  onSuspend?: (subscription: Subscription, reason: string) => void;\n  onReactivate?: (subscription: Subscription) => void;\n  onChangePlan?: (subscription: Subscription, newPlanId: number, period: BillingPeriod) => void;\n  loading?: boolean;\n  pagination?: {\n    page: number;\n    limit: number;\n    total: number;\n    onPageChange: (page: number) => void;\n  };\n}\n\nexport function SubscriptionList({\n  subscriptions = [],\n  plans = [],\n  merchants = [],\n  onView,\n  onEdit,\n  onDelete,\n  onExtend,\n  onCancel,\n  onSuspend,\n  onReactivate,\n  onChangePlan,\n  loading = false,\n  pagination\n}: SubscriptionListProps) {\n  const [openMenuId, setOpenMenuId] = useState<number | null>(null);\n  \n  // Dialog states\n  const [showViewDialog, setShowViewDialog] = useState(false);\n  const [showEditDialog, setShowEditDialog] = useState(false);\n  const [showExtendDialog, setShowExtendDialog] = useState(false);\n  const [showChangePlanDialog, setShowChangePlanDialog] = useState(false);\n  const [selectedSubscription, setSelectedSubscription] = useState<Subscription | null>(null);\n  \n  // Use subscriptions directly (filtering handled by page)\n  const filteredSubscriptions = subscriptions;\n\n  const getStatusBadge = (status: string) => {\n    const statusMap = {\n      'trial': 'trial',\n      'active': 'active',\n      'past_due': 'warning',\n      'cancelled': 'cancelled',\n      'paused': 'warning'\n    };\n\n    const mappedStatus = statusMap[status as keyof typeof statusMap] || status.toLowerCase();\n    return <StatusBadge status={mappedStatus} />;\n  };\n\n  const formatDate = (date: string | Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  const isExpiringSoon = (endDate: string | Date | null) => {\n    if (!endDate) return false;\n    const end = new Date(endDate);\n    const now = new Date();\n    const daysUntilExpiry = Math.ceil((end.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));\n    return daysUntilExpiry <= 7 && daysUntilExpiry > 0;\n  };\n\n  const isExpired = (endDate: string | Date | null) => {\n    if (!endDate) return false;\n    return new Date(endDate) < new Date();\n  };\n\n  // Dialog handlers\n  const handleView = (subscription: Subscription) => {\n    setSelectedSubscription(subscription);\n    setShowViewDialog(true);\n  };\n\n  const handleEdit = (subscription: Subscription) => {\n    setSelectedSubscription(subscription);\n    setShowEditDialog(true);\n    setShowViewDialog(false); // Close the view dialog\n  };\n\n  const handleEditSave = async (data: any) => {\n    if (onEdit) {\n      await onEdit(data);\n    }\n    setShowEditDialog(false);\n  };\n\n  const handleCancel = (subscription: Subscription) => {\n    onCancel?.(subscription, ''); // Reason will be collected in the confirmation dialog\n    setShowViewDialog(false); // Close the view dialog\n  };\n\n  const handleExtend = (subscription: Subscription) => {\n    setSelectedSubscription(subscription);\n    setShowExtendDialog(true);\n    setShowViewDialog(false); // Close the view dialog\n  };\n\n  const handleChangePlan = (subscription: Subscription) => {\n    setSelectedSubscription(subscription);\n    setShowChangePlanDialog(true);\n    setShowViewDialog(false); // Close the view dialog\n  };\n\n\n\n  const handleExtendConfirm = (subscription: Subscription, data: any) => {\n    onExtend?.(subscription);\n    setShowExtendDialog(false);\n    setShowViewDialog(false); // Close the view dialog\n    setSelectedSubscription(null);\n  };\n\n  const handleChangePlanConfirm = (subscription: Subscription, newPlanId: number, period: BillingPeriod) => {\n    onChangePlan?.(subscription, newPlanId, period);\n    setShowChangePlanDialog(false);\n    setShowViewDialog(false); // Close the view dialog\n    setSelectedSubscription(null);\n  };\n\n  const canCancel = (subscription: Subscription) => ['active', 'trial'].includes(subscription.status);\n  const canExtend = (subscription: Subscription) => ['active', 'trial', 'past_due'].includes(subscription.status);\n  const canChangePlan = (subscription: Subscription) => ['active', 'trial'].includes(subscription.status);\n\n  return (\n    <>\n      <Card className=\"shadow-sm border-border flex flex-col h-full\">\n        <CardHeader className=\"flex-shrink-0\">\n          <CardTitle>Subscriptions</CardTitle>\n        </CardHeader>\n        \n        {loading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-700\"></div>\n              <span>Loading subscriptions...</span>\n            </div>\n          </div>\n        ) : filteredSubscriptions.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <div className=\"text-text-tertiary\">\n              <div className=\"text-4xl mb-4\">💳</div>\n              <h3 className=\"text-lg font-medium mb-2\">No subscriptions found</h3>\n              <p className=\"text-sm\">\n                Try adjusting your search or filter criteria.\n              </p>\n            </div>\n          </div>\n        ) : (\n          /* Table with scroll - same structure as ProductTable */\n          <div className=\"flex-1 overflow-auto\">\n            <table className=\"w-full\">\n                {/* Table Header - Sticky */}\n                <thead className=\"bg-bg-secondary border-b border-border sticky top-0 z-10\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Merchant\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Plan\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Amount\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Period\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Next Billing\n                    </th>\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                {/* Table Body */}\n                <tbody className=\"bg-bg-card divide-y divide-border\">\n                  {filteredSubscriptions.map((subscription) => (\n                    <tr key={subscription.id} className=\"hover:bg-bg-secondary transition-colors\">\n                      {/* Merchant with Icon */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-br from-action-primary to-brand-primary flex items-center justify-center\">\n                            <Building className=\"w-5 h-5 text-white\" />\n                          </div>\n                          <div>\n                            <div className=\"text-sm font-medium text-text-primary\">\n                              {subscription.merchant?.name || 'Unknown Merchant'}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      \n                      {/* Plan */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm text-text-primary\">\n                          {subscription.plan?.name || 'Unknown Plan'}\n                        </div>\n                      </td>\n                      \n                      {/* Amount */}\n                      <td className=\"px-6 py-4\">\n                        <div>\n                          <div className=\"text-sm font-medium text-text-primary\">\n                            {formatCurrency(subscription.amount, 'USD')}\n                          </div>\n                        </div>\n                      </td>\n                      \n                      {/* Period */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm text-text-primary\">\n                          {subscription.billingInterval === 'month' ? 'Monthly' : \n                           subscription.billingInterval === 'quarter' ? 'Quarterly' : \n                           subscription.billingInterval === 'year' ? 'Yearly' : \n                           subscription.billingInterval === 'semiAnnual' ? 'Semi-Annual' : 'Custom'}\n                        </div>\n                      </td>\n                      \n                      {/* Status */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"flex items-center gap-2\">\n                          {getStatusBadge(subscription.status)}\n                          {isExpiringSoon(subscription.currentPeriodEnd) && (\n                            <Badge className=\"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200 text-xs\">\n                              Expiring\n                            </Badge>\n                          )}\n                        </div>\n                      </td>\n                      \n                      {/* Next Billing */}\n                      <td className=\"px-6 py-4\">\n                        <div className=\"text-sm text-text-primary\">\n                          {formatDate(subscription.currentPeriodEnd)}\n                        </div>\n                      </td>\n                      \n                      {/* Actions - Dropdown Menu */}\n                      <td className=\"px-6 py-4 text-right\">\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button \n                              variant=\"ghost\" \n                              size=\"sm\"\n                              onClick={() => setOpenMenuId(openMenuId === subscription.id ? null : subscription.id)}\n                            >\n                              <MoreVertical className=\"h-4 w-4\" />\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent \n                            align=\"end\"\n                            open={openMenuId === subscription.id}\n                            onOpenChange={(open: boolean) => setOpenMenuId(open ? subscription.id : null)}\n                            className=\"z-50\"\n                          >\n                            <DropdownMenuItem \n                              onClick={() => {\n                                handleView(subscription);\n                                setOpenMenuId(null);\n                              }}\n                            >\n                              <Eye className=\"h-4 w-4 mr-2\" />\n                              View Details\n                            </DropdownMenuItem>\n                            <DropdownMenuItem \n                              onClick={() => {\n                                onEdit?.(subscription);\n                                setOpenMenuId(null);\n                              }}\n                            >\n                              <Edit className=\"h-4 w-4 mr-2\" />\n                              Edit\n                            </DropdownMenuItem>\n                            {canCancel(subscription) && (\n                              <>\n                                <DropdownMenuSeparator />\n                                <DropdownMenuItem \n                                  onClick={() => {\n                                    handleCancel(subscription);\n                                    setOpenMenuId(null);\n                                  }}\n                                  className=\"text-action-danger focus:text-action-danger\"\n                                >\n                                  <Ban className=\"h-4 w-4 mr-2\" />\n                                  Cancel Subscription\n                                </DropdownMenuItem>\n                              </>\n                            )}\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </Card>\n\n      {/* Pagination Section - Same pattern as Merchants component */}\n      {pagination && filteredSubscriptions.length > 0 && pagination.total > pagination.limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination\n            currentPage={pagination.page}\n            totalPages={Math.ceil(pagination.total / pagination.limit)}\n            total={pagination.total}\n            limit={pagination.limit}\n            onPageChange={pagination.onPageChange}\n          />\n        </div>\n      )}\n\n      {/* Dialogs */}\n      <SubscriptionViewDialog\n        subscription={selectedSubscription}\n        isOpen={showViewDialog}\n        onClose={() => setShowViewDialog(false)}\n        onEdit={handleEdit}\n        onCancel={handleCancel}\n        onExtend={handleExtend}\n        onSuspend={onSuspend}\n        onReactivate={onReactivate}\n        onChangePlan={handleChangePlan}\n      />\n\n      <SubscriptionEditDialog\n        subscription={selectedSubscription}\n        plans={plans}\n        merchants={merchants}\n        isOpen={showEditDialog}\n        onClose={() => setShowEditDialog(false)}\n        onSave={handleEditSave}\n        loading={loading}\n      />\n\n\n      <SubscriptionExtendDialog\n        subscription={selectedSubscription}\n        isOpen={showExtendDialog}\n        onClose={() => setShowExtendDialog(false)}\n        onConfirm={handleExtendConfirm}\n        loading={loading}\n      />\n\n      <SubscriptionChangePlanDialog\n        subscription={selectedSubscription}\n        plans={plans}\n        isOpen={showChangePlanDialog}\n        onClose={() => setShowChangePlanDialog(false)}\n        onConfirm={handleChangePlanConfirm}\n        loading={loading}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Button,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Badge,\n  Separator\n} from '@rentalshop/ui';\nimport { formatDate, formatCurrency } from '@rentalshop/ui';\nimport { \n  Edit, \n  Trash2, \n  Pause, \n  Play, \n  Clock, \n  ArrowRight,\n  X\n} from 'lucide-react';\nimport type { Subscription, Plan, Merchant } from '@rentalshop/types';\n\ninterface SubscriptionViewDialogProps {\n  subscription: Subscription | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onEdit?: (subscription: Subscription) => void;\n  onCancel?: (subscription: Subscription) => void;\n  onExtend?: (subscription: Subscription) => void;\n  onSuspend?: (subscription: Subscription, reason: string) => void;\n  onReactivate?: (subscription: Subscription) => void;\n  onChangePlan?: (subscription: Subscription) => void;\n}\n\nexport function SubscriptionViewDialog({\n  subscription,\n  isOpen,\n  onClose,\n  onEdit,\n  onCancel,\n  onExtend,\n  onSuspend,\n  onReactivate,\n  onChangePlan\n}: SubscriptionViewDialogProps) {\n  if (!subscription) return null;\n\n  const getStatusColor = (status: string) => {\n    const normalizedStatus = status.toLowerCase();\n    switch (normalizedStatus) {\n      case 'active': return 'default';\n      case 'trial': return 'secondary';\n      case 'past_due': return 'destructive';\n      case 'cancelled': return 'destructive';\n      case 'paused': return 'destructive';\n      case 'expired': return 'destructive';\n      default: return 'secondary';\n    }\n  };\n\n  // More robust status checking - handle both uppercase and lowercase\n  const normalizedStatus = subscription.status.toLowerCase();\n  const isActive = ['active', 'trial', 'past_due'].includes(normalizedStatus);\n  const isInactive = ['cancelled', 'paused', 'expired'].includes(normalizedStatus);\n  \n  // Handle edge cases where status might be different\n  const isExpired = normalizedStatus === 'expired' || (subscription.status as string) === 'EXPIRED';\n  const isActiveStatus = normalizedStatus === 'active' || (subscription.status as string) === 'ACTIVE';\n  \n  // For debugging - show all actions if handlers exist\n  const debugMode = false; // Set to false in production\n  \n  const canCancel = debugMode ? !!onCancel : (isActive && !!onCancel);\n  const canExtend = debugMode ? !!onExtend : (isActive && !!onExtend);\n  const canChangePlan = debugMode ? !!onChangePlan : (isActive && !!onChangePlan);\n  \n\n  // Debug logging\n  console.log('SubscriptionViewDialog Debug:', {\n    subscription: subscription,\n    originalStatus: subscription.status,\n    normalizedStatus,\n    isActive,\n    isInactive,\n    isExpired,\n    isActiveStatus,\n    canCancel,\n    canExtend,\n    canChangePlan,\n    hasHandlers: {\n      onCancel: !!onCancel,\n      onExtend: !!onExtend,\n      onChangePlan: !!onChangePlan\n    }\n  });\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-3\">\n            <span>Subscription Details</span>\n            <Badge variant={getStatusColor(subscription.status)}>\n              {subscription.status}\n            </Badge>\n          </DialogTitle>\n          <DialogDescription>\n            View and manage subscription information for {subscription.merchant?.name || 'Unknown Merchant'}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Basic Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Basic Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Subscription ID</label>\n                  <p className=\"text-sm\">{subscription.id}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Status</label>\n                  <div className=\"flex items-center gap-2\">\n                    <Badge variant={getStatusColor(subscription.status)}>\n                      {subscription.status}\n                    </Badge>\n                  </div>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Plan</label>\n                  <p className=\"text-sm font-medium\">{subscription.plan?.name || 'Unknown Plan'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Amount</label>\n                  <p className=\"text-sm font-medium\">\n                    {formatCurrency(subscription.amount, (subscription.plan?.currency || 'USD') as any)}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Billing Interval</label>\n                  <p className=\"text-sm\">{subscription.billingInterval || 'month'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Currency</label>\n                  <p className=\"text-sm\">{subscription.plan?.currency || 'USD'}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Merchant Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Merchant Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Merchant ID</label>\n                  <p className=\"text-sm\">{subscription.merchantId}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Merchant Name</label>\n                  <p className=\"text-sm font-medium\">{subscription.merchant?.name || 'Unknown'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Email</label>\n                  <p className=\"text-sm\">{subscription.merchant?.email || 'Unknown'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Subscription Status</label>\n                  <p className=\"text-sm\">{subscription.status || 'Unknown'}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Plan Details */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Plan Details</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Plan ID</label>\n                  <p className=\"text-sm\">{subscription.planId}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Plan Name</label>\n                  <p className=\"text-sm font-medium\">{subscription.plan?.name || 'Unknown'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Plan Price</label>\n                  <p className=\"text-sm font-medium\">\n                    {subscription.plan ? formatCurrency(subscription.plan.basePrice, subscription.plan.currency as any) : 'Unknown'}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Billing Interval</label>\n                  <p className=\"text-sm\">{subscription.billingInterval || 'month'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Status</label>\n                  <p className=\"text-sm\">{subscription.status || 'Unknown'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Plan ID</label>\n                  <p className=\"text-sm\">{subscription.planId || 'Unknown'}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Dates */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Important Dates</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Current Period Start</label>\n                  <p className=\"text-sm\">{formatDate(subscription.currentPeriodStart)}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Current Period End</label>\n                  <p className=\"text-sm\">{subscription.currentPeriodEnd ? formatDate(subscription.currentPeriodEnd) : 'No end date'}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Trial Start</label>\n                  <p className=\"text-sm\">No trial data available</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Trial End</label>\n                  <p className=\"text-sm\">No trial data available</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Created At</label>\n                  <p className=\"text-sm\">{formatDate(subscription.createdAt)}</p>\n                </div>\n                <div>\n                  <label className=\"text-sm font-medium text-gray-500\">Updated At</label>\n                  <p className=\"text-sm\">{formatDate(subscription.updatedAt)}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Cancellation Information */}\n          {subscription.status === 'cancelled' && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Cancellation Information</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Cancelled At</label>\n                    <p className=\"text-sm\">{formatDate(subscription.updatedAt)}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Cancellation Reason</label>\n                    <p className=\"text-sm\">No reason provided</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        <Separator />\n\n        <DialogFooter className=\"flex justify-between\">\n          <div className=\"flex gap-2 flex-wrap\">\n            {canExtend && onExtend && (\n              <Button \n                variant=\"outline\" \n                onClick={() => onExtend(subscription)}\n                className=\"flex items-center gap-2\"\n              >\n                <Clock className=\"h-4 w-4\" />\n                Extend Subscription\n              </Button>\n            )}\n            {canChangePlan && onChangePlan && (\n              <Button \n                variant=\"outline\" \n                onClick={() => onChangePlan(subscription)}\n                className=\"flex items-center gap-2\"\n              >\n                <ArrowRight className=\"h-4 w-4\" />\n                Change Plan\n              </Button>\n            )}\n            {isActiveStatus && onSuspend && (\n              <Button \n                variant=\"outline\" \n                onClick={() => onSuspend(subscription, 'Paused from subscription view')}\n                className=\"flex items-center gap-2 text-orange-600 hover:text-orange-700\"\n              >\n                <Pause className=\"h-4 w-4\" />\n                Pause Subscription\n              </Button>\n            )}\n            {subscription.status === 'paused' && onReactivate && (\n              <Button \n                variant=\"outline\" \n                onClick={() => onReactivate(subscription)}\n                className=\"flex items-center gap-2 text-green-600 hover:text-green-700\"\n              >\n                <Play className=\"h-4 w-4\" />\n                Resume Subscription\n              </Button>\n            )}\n            {canCancel && onCancel && (\n              <Button \n                variant=\"destructive\" \n                onClick={() => onCancel(subscription)}\n                className=\"flex items-center gap-2\"\n              >\n                <X className=\"h-4 w-4\" />\n                Cancel Subscription\n              </Button>\n            )}\n          </div>\n          <div className=\"flex gap-2\">\n            {onEdit && (\n              <Button \n                variant=\"outline\" \n                onClick={() => onEdit(subscription)}\n                className=\"flex items-center gap-2\"\n              >\n                <Edit className=\"h-4 w-4\" />\n                Edit\n              </Button>\n            )}\n            <Button variant=\"outline\" onClick={onClose}>\n              Close\n            </Button>\n          </div>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Button,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Input,\n  Label,\n  Alert,\n  AlertDescription\n} from '@rentalshop/ui';\nimport { formatDate, formatCurrency } from '@rentalshop/ui';\nimport { Calendar, DollarSign, Clock } from 'lucide-react';\nimport type { Subscription } from '@rentalshop/types';\n\ninterface SubscriptionExtendDialogProps {\n  subscription: Subscription | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: (subscription: Subscription, data: {\n    newEndDate: Date;\n    amount: number;\n    method: string;\n    description?: string;\n  }) => void;\n  loading?: boolean;\n}\n\nconst EXTENSION_METHODS = [\n  'MANUAL_EXTENSION',\n  'PAYMENT_RECEIVED',\n  'ADMIN_EXTENSION',\n  'COMPENSATION',\n  'OTHER'\n];\n\nexport function SubscriptionExtendDialog({\n  subscription,\n  isOpen,\n  onClose,\n  onConfirm,\n  loading = false\n}: SubscriptionExtendDialogProps) {\n  const [newEndDate, setNewEndDate] = useState('');\n  const [amount, setAmount] = useState('');\n  const [method, setMethod] = useState('MANUAL_EXTENSION');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = () => {\n    if (!subscription || !newEndDate || !amount) return;\n    \n    const extensionData = {\n      newEndDate: new Date(newEndDate),\n      amount: parseFloat(amount),\n      method,\n      description: description.trim() || undefined\n    };\n    \n    onConfirm(subscription, extensionData);\n  };\n\n  const handleClose = () => {\n    setNewEndDate('');\n    setAmount('');\n    setMethod('MANUAL_EXTENSION');\n    setDescription('');\n    onClose();\n  };\n\n  if (!subscription) return null;\n\n  const currentEndDate = subscription.endDate ? new Date(subscription.endDate) : new Date();\n  const minDate = new Date().toISOString().split('T')[0];\n  const suggestedEndDate = new Date(currentEndDate.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Calendar className=\"h-5 w-5 text-blue-700\" />\n            Extend Subscription\n          </DialogTitle>\n          <DialogDescription>\n            Extend subscription for {subscription.merchant?.name || 'Unknown Merchant'}. \n            This will update the end date and create a payment record.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Current Subscription Info */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Current Subscription</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500\">Plan</Label>\n                  <p className=\"text-sm font-medium\">{subscription.plan?.name || 'Unknown Plan'}</p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500\">Current Amount</Label>\n                  <p className=\"text-sm font-medium\">\n                    {formatCurrency(subscription.amount, subscription.currency)}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500\">Current End Date</Label>\n                  <p className=\"text-sm\">{formatDate(subscription.endDate!)}</p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-500\">Status</Label>\n                  <p className=\"text-sm\">{subscription.status}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Extension Details */}\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"newEndDate\">New End Date *</Label>\n                <Input\n                  id=\"newEndDate\"\n                  type=\"date\"\n                  value={newEndDate}\n                  onChange={(e) => setNewEndDate(e.target.value)}\n                  min={minDate}\n                  placeholder={suggestedEndDate}\n                  className=\"mt-1\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Suggested: {suggestedEndDate} (30 days from current end date)\n                </p>\n              </div>\n              <div>\n                <Label htmlFor=\"amount\">Extension Amount *</Label>\n                <div className=\"relative mt-1\">\n                  <DollarSign className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <Input\n                    id=\"amount\"\n                    type=\"number\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    placeholder={subscription.amount.toString()}\n                    className=\"pl-10\"\n                    step=\"0.01\"\n                    min=\"0\"\n                  />\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Current amount: {formatCurrency(subscription.amount, subscription.currency)}\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"method\">Extension Method *</Label>\n              <select\n                id=\"method\"\n                value={method}\n                onChange={(e) => setMethod(e.target.value)}\n                className=\"w-full mt-1 p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                {EXTENSION_METHODS.map((m) => (\n                  <option key={m} value={m}>\n                    {m.replace('_', ' ')}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <Label htmlFor=\"description\">Description (Optional)</Label>\n              <Input\n                id=\"description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder=\"Reason for extension...\"\n                className=\"mt-1\"\n              />\n            </div>\n          </div>\n\n          {/* Extension Preview */}\n          {newEndDate && amount && (\n            <Alert>\n              <Clock className=\"h-4 w-4\" />\n              <AlertDescription>\n                <div className=\"space-y-2\">\n                  <p className=\"font-medium\">Extension Preview:</p>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"font-medium\">Current End:</span> {formatDate(subscription.endDate!)}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">New End:</span> {formatDate(new Date(newEndDate))}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Extension Amount:</span> {formatCurrency(parseFloat(amount) || 0, subscription.currency)}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Method:</span> {method.replace('_', ' ')}\n                    </div>\n                  </div>\n                </div>\n              </AlertDescription>\n            </Alert>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={handleClose} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={handleSubmit}\n            disabled={loading || !newEndDate || !amount}\n          >\n            {loading ? 'Extending...' : 'Extend Subscription'}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Button,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Label,\n  Alert,\n  AlertDescription,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Badge\n} from '@rentalshop/ui';\nimport { formatDate, formatCurrency } from '@rentalshop/ui';\nimport { ArrowRight, Check, X, Clock, DollarSign } from 'lucide-react';\nimport type { Subscription, Plan, BillingPeriod } from '@rentalshop/types';\n\ninterface SubscriptionChangePlanDialogProps {\n  subscription: Subscription | null;\n  plans: Plan[];\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: (subscription: Subscription, newPlanId: number, period: BillingPeriod) => void;\n  loading?: boolean;\n}\n\nexport function SubscriptionChangePlanDialog({\n  subscription,\n  plans,\n  isOpen,\n  onClose,\n  onConfirm,\n  loading = false\n}: SubscriptionChangePlanDialogProps) {\n  const [selectedPlanId, setSelectedPlanId] = useState<number | null>(null);\n  const [selectedPeriod, setSelectedPeriod] = useState<BillingPeriod>(1);\n\n  const handleSubmit = () => {\n    if (!subscription || !selectedPlanId) return;\n    onConfirm(subscription, selectedPlanId, selectedPeriod);\n  };\n\n  const handleClose = () => {\n    setSelectedPlanId(null);\n    onClose();\n  };\n\n  if (!subscription) return null;\n\n  const currentPlan = subscription.plan;\n  const selectedPlan = plans.find(p => p.id === selectedPlanId);\n\n  const getFeatureComparison = (current: any, selected: any) => {\n    const features = [\n      { key: 'outlets', label: 'Max Outlets', current: current?.limits?.outlets, selected: selected?.limits?.outlets },\n      { key: 'users', label: 'Max Users', current: current?.limits?.users, selected: selected?.limits?.users },\n      { key: 'products', label: 'Max Products', current: current?.limits?.products, selected: selected?.limits?.products },\n      { key: 'customers', label: 'Max Customers', current: current?.limits?.customers, selected: selected?.limits?.customers }\n    ];\n\n    return features.map(feature => ({\n      ...feature,\n      change: feature.selected > feature.current ? 'upgrade' : \n              feature.selected < feature.current ? 'downgrade' : 'same'\n    }));\n  };\n\n  const features = getFeatureComparison(currentPlan, selectedPlan);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-4xl\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <ArrowRight className=\"h-5 w-5 text-blue-700\" />\n            Change Subscription Plan\n          </DialogTitle>\n          <DialogDescription>\n            Change subscription plan for {subscription.merchant?.name || 'Unknown Merchant'}. \n            This will update the plan and pricing immediately.\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Current Plan */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Current Plan</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"text-lg font-semibold\">{currentPlan?.name || 'Unknown Plan'}</h3>\n                  <p className=\"text-sm text-gray-600\">{currentPlan?.description || 'No description'}</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-2xl font-bold\">\n                    {currentPlan ? formatCurrency(currentPlan.basePrice, currentPlan.currency) : 'Unknown'}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">per month</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Billing Period Selection */}\n          <div className=\"space-y-4\">\n            <Label className=\"text-lg font-semibold\">Billing Period</Label>\n            <Select value={selectedPeriod.toString()} onValueChange={(value) => setSelectedPeriod(parseInt(value) as BillingPeriod)}>\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select billing period\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"1\">Monthly (0% discount)</SelectItem>\n                <SelectItem value=\"3\">Quarterly (10% discount)</SelectItem>\n                <SelectItem value=\"12\">Yearly (20% discount)</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Available Plans */}\n          <div className=\"space-y-4\">\n            <Label className=\"text-lg font-semibold\">Select New Plan</Label>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {plans.map((plan) => {\n                const pricing = plan.pricing || {};\n                const periodKey = selectedPeriod === 1 ? 'monthly' : selectedPeriod === 3 ? 'quarterly' : 'yearly';\n                const periodPricing = pricing[periodKey] || { price: plan.basePrice, discount: 0, discountedPrice: plan.basePrice, savings: 0 };\n                \n                return (\n                  <Card \n                    key={plan.id} \n                    className={`cursor-pointer transition-all ${\n                      selectedPlanId === plan.id \n                        ? 'ring-2 ring-blue-500 border-blue-500' \n                        : 'hover:border-gray-300'\n                    }`}\n                    onClick={() => setSelectedPlanId(plan.id)}\n                  >\n                    <CardHeader>\n                      <div className=\"flex items-center justify-between\">\n                        <CardTitle className=\"text-lg\">{plan.name}</CardTitle>\n                        {selectedPlanId === plan.id && (\n                          <Check className=\"h-5 w-5 text-blue-700\" />\n                        )}\n                      </div>\n                      <p className=\"text-sm text-gray-600\">{plan.description}</p>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold\">\n                            {formatCurrency(periodPricing.price, plan.currency)}\n                          </div>\n                          <div className=\"text-sm text-gray-600\">\n                            {selectedPeriod === 1 ? 'per month' : \n                             selectedPeriod === 3 ? 'per quarter' : 'per year'}\n                          </div>\n                          {periodPricing.discount > 0 && (\n                            <div className=\"flex items-center justify-center gap-2 mt-1\">\n                              <Badge variant=\"outline\" className=\"text-green-600 border-green-200\">\n                                {periodPricing.discount}% off\n                              </Badge>\n                              <span className=\"text-xs text-green-600\">\n                                Save {formatCurrency(periodPricing.savings, plan.currency)}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"space-y-1 text-sm\">\n                          <div>Outlets: {plan.limits.outlets === -1 ? 'Unlimited' : plan.limits.outlets}</div>\n                          <div>Users: {plan.limits.users === -1 ? 'Unlimited' : plan.limits.users}</div>\n                          <div>Products: {plan.limits.products === -1 ? 'Unlimited' : plan.limits.products}</div>\n                          <div>Customers: {plan.limits.customers === -1 ? 'Unlimited' : plan.limits.customers}</div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Plan Comparison */}\n          {selectedPlan && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Plan Comparison</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                    <div className=\"font-medium\">Feature</div>\n                    <div className=\"font-medium text-center\">Current</div>\n                    <div className=\"font-medium text-center\">New Plan</div>\n                  </div>\n                  {features.map((feature) => (\n                    <div key={feature.key} className=\"grid grid-cols-3 gap-4 text-sm\">\n                      <div>{feature.label}</div>\n                      <div className=\"text-center\">\n                        {feature.current === -1 ? 'Unlimited' : feature.current}\n                      </div>\n                      <div className=\"text-center flex items-center justify-center gap-1\">\n                        {feature.selected === -1 ? 'Unlimited' : feature.selected}\n                        {feature.change === 'upgrade' && (\n                          <ArrowRight className=\"h-4 w-4 text-green-600\" />\n                        )}\n                        {feature.change === 'downgrade' && (\n                          <X className=\"h-4 w-4 text-red-600\" />\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Pricing Change Alert */}\n          {selectedPlan && currentPlan && (\n            <Alert>\n              <AlertDescription>\n                <div className=\"space-y-2\">\n                  <p className=\"font-medium\">Pricing Change:</p>\n                  <div className=\"flex items-center gap-4\">\n                    <span className=\"text-sm\">\n                      From: {formatCurrency(currentPlan.basePrice, currentPlan.currency)}/month\n                    </span>\n                    <ArrowRight className=\"h-4 w-4\" />\n                    <span className=\"text-sm font-medium\">\n                      To: {formatCurrency(selectedPlan.basePrice, selectedPlan.currency)}/month\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    The plan change will take effect immediately and billing will be updated accordingly.\n                  </p>\n                </div>\n              </AlertDescription>\n            </Alert>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={handleClose} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={handleSubmit}\n            disabled={loading || !selectedPlanId}\n          >\n            {loading ? 'Changing Plan...' : 'Change Plan'}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Button,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Badge,\n  cn\n} from '@rentalshop/ui';\nimport { SubscriptionFormSimple } from './SubscriptionFormSimple';\nimport { formatCurrency } from '@rentalshop/utils';\nimport { DollarSign, TrendingUp, Calendar, Percent } from 'lucide-react';\nimport type { Subscription, Plan, Merchant, SubscriptionUpdateInput, CurrencyCode } from '@rentalshop/types';\n\ninterface SubscriptionFormData {\n  merchantId: number;\n  planId: number;\n  status: 'trial' | 'active' | 'past_due' | 'cancelled' | 'paused';\n  currentPeriodStart: Date;\n  currentPeriodEnd: Date;\n  trialStart?: Date;\n  trialEnd?: Date;\n  amount: number;\n  currency: string;\n  interval: 'month' | 'quarter' | 'year';\n  intervalCount: number;\n  period: 1 | 3 | 6 | 12;\n  discount: number;\n  savings: number;\n  platform: 'web-only' | 'mobile-only' | 'web-mobile' | 'desktop-only' | 'all-platforms';\n  cancelAtPeriodEnd: boolean;\n  canceledAt?: Date;\n  cancelReason?: string;\n  autoRenew: boolean;\n  changeReason?: string;\n}\n\ninterface SubscriptionEditDialogProps {\n  subscription: Subscription | null;\n  plans: Plan[];\n  merchants: Merchant[];\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (data: SubscriptionUpdateInput) => Promise<void>;\n  loading?: boolean;\n}\n\nexport function SubscriptionEditDialog({\n  subscription,\n  plans,\n  merchants,\n  isOpen,\n  onClose,\n  onSave,\n  loading = false\n}: SubscriptionEditDialogProps) {\n  const [formData, setFormData] = useState<Partial<SubscriptionFormData>>({});\n\n  // Initialize form data when subscription changes\n  useEffect(() => {\n    if (subscription) {\n      setFormData({\n        planId: parseInt(subscription.planId),\n        merchantId: parseInt(subscription.merchantId),\n        status: subscription.status,\n        amount: subscription.amount,\n        currency: subscription.currency,\n        interval: subscription.interval,\n        intervalCount: subscription.intervalCount,\n        period: subscription.period,\n        discount: subscription.discount,\n        savings: subscription.savings,\n        platform: (subscription as any).platform || 'web-mobile',\n        currentPeriodStart: subscription.currentPeriodStart,\n        currentPeriodEnd: subscription.currentPeriodEnd,\n        trialStart: subscription.trialStart,\n        trialEnd: subscription.trialEnd,\n        cancelAtPeriodEnd: subscription.cancelAtPeriodEnd,\n        canceledAt: subscription.canceledAt,\n        cancelReason: subscription.cancelReason,\n        autoRenew: !subscription.cancelAtPeriodEnd,\n        changeReason: ''\n      });\n    }\n  }, [subscription]);\n\n  const handleSubmit = async (data: SubscriptionUpdateInput) => {\n    try {\n      await onSave(data);\n      onClose();\n    } catch (error) {\n      console.error('Failed to update subscription:', error);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData({});\n    onClose();\n  };\n\n  // Calculate discount breakdown for each period\n  const calculateDiscountBreakdown = (basePrice: number, currency: string) => {\n    const periods = [\n      { duration: 1, label: 'Monthly', discount: 0 },\n      { duration: 3, label: 'Quarterly', discount: 10 },\n      { duration: 6, label: '6 Months', discount: 15 },\n      { duration: 12, label: 'Yearly', discount: 20 }\n    ];\n\n    return periods.map(period => {\n      const discountedPrice = basePrice * (1 - period.discount / 100);\n      const totalSavings = (basePrice * period.duration) - (discountedPrice * period.duration);\n      \n      return {\n        ...period,\n        originalPrice: basePrice * period.duration,\n        discountedPrice: discountedPrice * period.duration,\n        monthlyPrice: discountedPrice,\n        totalSavings,\n        savingsPercentage: period.discount\n      };\n    });\n  };\n\n  // Get selected plan for discount calculations\n  const selectedPlan = plans.find(plan => plan.id === formData.planId);\n\n  if (!subscription) return null;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleCancel}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Edit Subscription</DialogTitle>\n          <DialogDescription>\n            Update subscription details for {subscription.merchant?.name || 'Merchant'}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Subscription Form */}\n          <div className=\"w-full\">\n            <SubscriptionFormSimple\n              initialData={formData}\n              plans={plans}\n              merchants={merchants}\n              onSubmit={handleSubmit}\n              onCancel={handleCancel}\n              loading={loading}\n              mode=\"edit\"\n              title=\"\"\n              submitText=\"\"\n              showCard={false}\n              showActions={false}\n            />\n          </div>\n\n          {/* Discount Breakdown */}\n          {selectedPlan && (\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Percent className=\"h-5 w-5\" />\n                    Discount Breakdown by Period\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {calculateDiscountBreakdown(selectedPlan.basePrice, formData.currency || 'USD').map((period) => (\n                      <div\n                        key={period.duration}\n                        className={cn(\n                          \"p-4 rounded-lg border-2 transition-all\",\n                          formData.period === period.duration\n                            ? \"border-blue-500 bg-blue-50\"\n                            : \"border-gray-200 hover:border-gray-300\"\n                        )}\n                      >\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <div className=\"flex items-center gap-2\">\n                            <Calendar className=\"h-4 w-4 text-gray-600\" />\n                            <span className=\"font-semibold text-gray-900\">{period.label}</span>\n                            {period.savingsPercentage > 0 && (\n                              <Badge className=\"bg-green-100 text-green-800 border-green-200\">\n                                {period.savingsPercentage}% OFF\n                              </Badge>\n                            )}\n                          </div>\n                          {formData.period === period.duration && (\n                            <Badge className=\"bg-blue-100 text-blue-800 border-blue-200\">\n                              Current\n                            </Badge>\n                          )}\n                        </div>\n                        \n                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                          <div>\n                            <div className=\"text-gray-600\">Monthly Price</div>\n                            <div className=\"font-semibold\">\n                              {formatCurrency(period.monthlyPrice, formData.currency as CurrencyCode)}\n                            </div>\n                          </div>\n                          <div>\n                            <div className=\"text-gray-600\">Total Price</div>\n                            <div className=\"font-semibold\">\n                              {formatCurrency(period.discountedPrice, formData.currency as CurrencyCode)}\n                            </div>\n                          </div>\n                        </div>\n\n                        {period.savingsPercentage > 0 && (\n                          <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                            <div className=\"flex items-center justify-between text-sm\">\n                              <div className=\"flex items-center gap-2\">\n                                <TrendingUp className=\"h-4 w-4 text-green-600\" />\n                                <span className=\"text-gray-600\">Total Savings</span>\n                              </div>\n                              <div className=\"font-semibold text-green-600\">\n                                {formatCurrency(period.totalSavings, formData.currency as CurrencyCode)}\n                              </div>\n                            </div>\n                            <div className=\"text-xs text-gray-500 mt-1\">\n                              vs {formatCurrency(period.originalPrice, formData.currency as CurrencyCode)} at regular price\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n              </div>\n\n              {/* Current Subscription Summary */}\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <DollarSign className=\"h-5 w-5\" />\n                      Current Subscription Summary\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Plan</span>\n                        <span className=\"font-semibold\">{selectedPlan.name}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Billing Period</span>\n                        <span className=\"font-semibold\">\n                          {formData.period === 1 ? 'Monthly' : \n                           formData.period === 3 ? 'Quarterly' : \n                           formData.period === 6 ? '6 Months' : \n                           formData.period === 12 ? 'Yearly' : \n                           `${formData.period || 1} months`}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Current Amount</span>\n                        <span className=\"font-semibold\">\n                          {formatCurrency(formData.amount || 0, formData.currency as CurrencyCode)}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Discount Applied</span>\n                        <span className=\"font-semibold text-green-600\">\n                          {formData.discount || 0}%\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Platform</span>\n                        <span className=\"font-semibold\">\n                          {formData.platform === 'web-only' ? 'Web Only' :\n                           formData.platform === 'mobile-only' ? 'Mobile Only' :\n                           formData.platform === 'web-mobile' ? 'Web & Mobile' :\n                           formData.platform === 'desktop-only' ? 'Desktop Only' :\n                           formData.platform === 'all-platforms' ? 'All Platforms' :\n                           'Web & Mobile'}\n                        </span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <DialogFooter className=\"flex justify-end gap-2\">\n          <Button variant=\"outline\" onClick={handleCancel} disabled={loading}>\n            Cancel\n          </Button>\n          <Button onClick={() => handleSubmit(formData as SubscriptionUpdateInput)} disabled={loading}>\n            {loading ? 'Saving...' : 'Save Changes'}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea,\n  Label,\n  Switch,\n  Badge,\n  StatusBadge,\n  SearchableSelect\n} from '../../../ui';\nimport { \n  Calendar, \n  DollarSign, \n  Users, \n  Building,\n  CreditCard,\n  AlertCircle,\n  CheckCircle\n} from 'lucide-react';\nimport type { \n  SubscriptionCreateInput,\n  SubscriptionUpdateInput,\n  Subscription,\n  Plan,\n  Merchant\n} from '@rentalshop/types';\n\ninterface SubscriptionFormData {\n  merchantId: number;\n  planId: number;\n  status: 'trial' | 'active' | 'past_due' | 'cancelled' | 'paused';\n  currentPeriodStart: Date;\n  currentPeriodEnd: Date;\n  trialStart?: Date;\n  trialEnd?: Date;\n  amount: number;\n  currency: string;\n  interval: 'month' | 'quarter' | '6months' | 'year';\n  intervalCount: number;\n  period: 1 | 3 | 6 | 12;\n  discount: number;\n  savings: number;\n  platform: 'web-only' | 'mobile-only' | 'web-mobile' | 'desktop-only' | 'all-platforms';\n  cancelAtPeriodEnd: boolean;\n  canceledAt?: Date;\n  cancelReason?: string;\n  autoRenew: boolean;\n  changeReason?: string;\n}\n\ninterface SubscriptionFormProps {\n  initialData?: Partial<SubscriptionFormData>;\n  plans: Plan[];\n  merchants: Merchant[];\n  onSubmit: (data: SubscriptionCreateInput | SubscriptionUpdateInput) => Promise<void>;\n  onCancel: () => void;\n  loading?: boolean;\n  mode?: 'create' | 'edit' | 'view';\n  title?: string;\n  submitText?: string;\n  showCard?: boolean;\n  showActions?: boolean;\n}\n\nexport function SubscriptionFormSimple({\n  initialData,\n  plans,\n  merchants,\n  onSubmit,\n  onCancel,\n  loading = false,\n  mode = 'create',\n  title,\n  submitText,\n  showCard = true,\n  showActions = true\n}: SubscriptionFormProps) {\n  const [formData, setFormData] = useState<SubscriptionFormData>({\n    merchantId: initialData?.merchantId || 0,\n    planId: initialData?.planId || 0,\n    status: initialData?.status || 'trial',\n    currentPeriodStart: initialData?.currentPeriodStart || new Date(),\n    currentPeriodEnd: initialData?.currentPeriodEnd || new Date(),\n    trialStart: initialData?.trialStart,\n    trialEnd: initialData?.trialEnd,\n    amount: initialData?.amount || 0,\n    currency: initialData?.currency || 'USD',\n    interval: initialData?.interval || 'month',\n    intervalCount: initialData?.intervalCount || 1,\n    period: initialData?.period || 1,\n    discount: initialData?.discount || 0,\n    savings: initialData?.savings || 0,\n    platform: initialData?.platform || 'web-mobile',\n    cancelAtPeriodEnd: initialData?.cancelAtPeriodEnd || false,\n    canceledAt: initialData?.canceledAt,\n    cancelReason: initialData?.cancelReason,\n    autoRenew: initialData?.autoRenew ?? true,\n    changeReason: initialData?.changeReason || ''\n  });\n\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [merchantOptions, setMerchantOptions] = useState<any[]>([]);\n\n  // Initialize merchant options\n  useEffect(() => {\n    const options = merchants.map(merchant => ({\n      value: merchant.id.toString(),\n      label: merchant.name,\n      subtitle: merchant.email,\n      description: `${merchant.city}, ${merchant.state}`,\n      type: 'merchant' as const\n    }));\n    setMerchantOptions(options);\n  }, [merchants]);\n\n  // Merchant search function\n  const handleMerchantSearch = async (query: string) => {\n    if (!query.trim()) {\n      return merchantOptions;\n    }\n    \n    const filtered = merchantOptions.filter(option =>\n      option.label.toLowerCase().includes(query.toLowerCase()) ||\n      option.subtitle?.toLowerCase().includes(query.toLowerCase()) ||\n      option.description?.toLowerCase().includes(query.toLowerCase())\n    );\n    \n    return filtered;\n  };\n\n  // Update selected plan when planId changes\n  useEffect(() => {\n    const plan = plans.find(p => p.id === formData.planId);\n    setSelectedPlan(plan || null);\n  }, [formData.planId, plans]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.merchantId) {\n      newErrors.merchantId = 'Merchant is required';\n    }\n\n    if (!formData.planId) {\n      newErrors.planId = 'Plan is required';\n    }\n\n    if (!formData.amount || formData.amount <= 0) {\n      newErrors.amount = 'Amount must be greater than 0';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const submitData = {\n        merchantId: formData.merchantId,\n        planId: formData.planId,\n        status: formData.status,\n        currentPeriodStart: formData.currentPeriodStart,\n        currentPeriodEnd: formData.currentPeriodEnd,\n        trialStart: formData.trialStart,\n        trialEnd: formData.trialEnd,\n        amount: formData.amount,\n        currency: formData.currency,\n        interval: formData.interval,\n        intervalCount: formData.intervalCount,\n        period: formData.period,\n        discount: formData.discount,\n        savings: formData.savings,\n        platform: formData.platform,\n        cancelAtPeriodEnd: formData.cancelAtPeriodEnd,\n        canceledAt: formData.canceledAt,\n        cancelReason: formData.cancelReason,\n        autoRenew: formData.autoRenew,\n        changeReason: formData.changeReason\n      };\n\n      await onSubmit(submitData);\n    } catch (error) {\n      console.error('Error submitting subscription:', error);\n    }\n  };\n\n  // Helper function to get discount percentage based on period\n  const getDiscountPercentage = (period: number): number => {\n    const discountMap: Record<number, number> = {\n      1: 0,    // Monthly: 0% discount\n      3: 10,   // Quarterly: 10% discount\n      6: 15,   // 6 Months: 15% discount\n      12: 20   // Yearly: 20% discount\n    };\n    return discountMap[period] || 0;\n  };\n\n  // Helper function to calculate pricing with discount\n  const calculatePricingWithDiscount = (basePrice: number, period: number) => {\n    const discount = getDiscountPercentage(period);\n    const totalMonths = period;\n    const totalBasePrice = basePrice * totalMonths;\n    const discountAmount = (totalBasePrice * discount) / 100;\n    const finalPrice = totalBasePrice - discountAmount;\n    const monthlyEquivalent = finalPrice / totalMonths;\n    \n    return {\n      basePrice: totalBasePrice,\n      discount,\n      finalPrice,\n      savings: discountAmount,\n      monthlyEquivalent\n    };\n  };\n\n  const handleInputChange = (field: keyof SubscriptionFormData, value: any) => {\n    setFormData(prev => {\n      const newData = { ...prev, [field]: value };\n      \n      // Map interval to period when interval changes\n      if (field === 'interval') {\n        const intervalToPeriodMap: Record<string, 1 | 3 | 6 | 12> = {\n          'month': 1,\n          'quarter': 3,\n          '6months': 6,\n          'year': 12\n        };\n        newData.period = intervalToPeriodMap[value] || 1;\n        \n        // Calculate new pricing with discount\n        if (selectedPlan) {\n          const pricing = calculatePricingWithDiscount(selectedPlan.basePrice, newData.period);\n          newData.amount = pricing.finalPrice;\n          newData.discount = pricing.discount;\n          newData.savings = pricing.savings;\n        }\n      }\n      \n      return newData;\n    });\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  const formContent = (\n    <div className=\"space-y-6\">\n          {/* Merchant Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"merchantId\" className=\"flex items-center space-x-2\">\n              <Building className=\"h-4 w-4\" />\n              <span>Merchant *</span>\n            </Label>\n            <SearchableSelect\n              value={formData.merchantId}\n              onChange={(value) => handleInputChange('merchantId', value)}\n              options={merchantOptions}\n              onSearch={handleMerchantSearch}\n              placeholder=\"Search for a merchant...\"\n              searchPlaceholder=\"Type merchant name, email, or location...\"\n              emptyText=\"No merchants found\"\n              displayMode=\"input\"\n              className={`w-full ${errors.merchantId ? 'border-red-500' : ''}`}\n            />\n            {errors.merchantId && (\n              <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span>{errors.merchantId}</span>\n              </p>\n            )}\n          </div>\n\n          {/* Plan Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"planId\" className=\"flex items-center space-x-2\">\n              <CreditCard className=\"h-4 w-4\" />\n              <span>Plan *</span>\n            </Label>\n            <Select\n              value={formData.planId.toString()}\n              onValueChange={(value) => handleInputChange('planId', parseInt(value))}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger className={`w-full ${errors.planId ? 'border-red-500' : ''}`}>\n                <SelectValue placeholder=\"Select a plan\" />\n              </SelectTrigger>\n              <SelectContent>\n                {plans.length > 0 ? (\n                  plans.map(plan => (\n                    <SelectItem key={plan.id} value={plan.id.toString()}>\n                      <div className=\"flex flex-col\">\n                        <span className=\"font-medium\">{plan.name}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {formatCurrency(plan.basePrice, plan.currency)}/{plan.currency}\n                        </span>\n                      </div>\n                    </SelectItem>\n                  ))\n                ) : (\n                  <SelectItem value=\"no-plans\" disabled>\n                    No plans available\n                  </SelectItem>\n                )}\n              </SelectContent>\n            </Select>\n            {errors.planId && (\n              <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span>{errors.planId}</span>\n              </p>\n            )}\n          </div>\n\n          {/* Status */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"status\" className=\"flex items-center space-x-2\">\n              <StatusBadge status={formData.status} />\n              <span>Status</span>\n            </Label>\n            <Select\n              value={formData.status}\n              onValueChange={(value) => handleInputChange('status', value)}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"trial\">Trial</SelectItem>\n                <SelectItem value=\"active\">Active</SelectItem>\n                <SelectItem value=\"past_due\">Past Due</SelectItem>\n                <SelectItem value=\"cancelled\">Cancelled</SelectItem>\n                <SelectItem value=\"paused\">Paused</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Amount */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"amount\" className=\"flex items-center space-x-2\">\n              <DollarSign className=\"h-4 w-4\" />\n              <span>Amount *</span>\n            </Label>\n            <Input\n              type=\"number\"\n              step=\"0.01\"\n              value={formData.amount}\n              onChange={(e) => handleInputChange('amount', parseFloat(e.target.value) || 0)}\n              placeholder=\"0.00\"\n              disabled={mode === 'view'}\n              className={`w-full ${errors.amount ? 'border-red-500' : ''}`}\n            />\n            {errors.amount && (\n              <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span>{errors.amount}</span>\n              </p>\n            )}\n          </div>\n\n          {/* Currency */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"currency\">Currency</Label>\n            <Select\n              value={formData.currency}\n              onValueChange={(value) => handleInputChange('currency', value)}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select currency\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"USD\">USD</SelectItem>\n                <SelectItem value=\"EUR\">EUR</SelectItem>\n                <SelectItem value=\"GBP\">GBP</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n\n          {/* Platform Support */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"platform\" className=\"flex items-center space-x-2\">\n              <Users className=\"h-4 w-4\" />\n              <span>Platform Support</span>\n            </Label>\n            <Select\n              value={formData.platform}\n              onValueChange={(value) => handleInputChange('platform', value)}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select platform support\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"web-only\">Web Only</SelectItem>\n                <SelectItem value=\"mobile-only\">Mobile Only</SelectItem>\n                <SelectItem value=\"web-mobile\">Web & Mobile</SelectItem>\n                <SelectItem value=\"desktop-only\">Desktop Only</SelectItem>\n                <SelectItem value=\"all-platforms\">All Platforms</SelectItem>\n              </SelectContent>\n            </Select>\n            <p className=\"text-xs text-gray-500\">\n              Select which platforms this subscription supports\n            </p>\n          </div>\n\n          {/* Billing Interval */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"interval\">Billing Interval</Label>\n            <Select\n              value={formData.interval}\n              onValueChange={(value) => handleInputChange('interval', value)}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select interval\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"month\">\n                  <div className=\"flex items-center justify-between w-full\">\n                    <span>Monthly</span>\n                    <span className=\"text-gray-500 text-sm\">(0% discount)</span>\n                  </div>\n                </SelectItem>\n                <SelectItem value=\"quarter\">\n                  <div className=\"flex items-center justify-between w-full\">\n                    <span>Quarterly</span>\n                    <span className=\"text-green-600 text-sm font-medium\">(10% discount)</span>\n                  </div>\n                </SelectItem>\n                <SelectItem value=\"6months\">\n                  <div className=\"flex items-center justify-between w-full\">\n                    <span>6 Months</span>\n                    <span className=\"text-green-600 text-sm font-medium\">(15% discount)</span>\n                  </div>\n                </SelectItem>\n                <SelectItem value=\"year\">\n                  <div className=\"flex items-center justify-between w-full\">\n                    <span>Yearly</span>\n                    <span className=\"text-green-600 text-sm font-medium\">(20% discount)</span>\n                  </div>\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Auto Renew */}\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"autoRenew\"\n              checked={formData.autoRenew}\n              onCheckedChange={(checked) => handleInputChange('autoRenew', checked)}\n              disabled={mode === 'view'}\n            />\n            <Label htmlFor=\"autoRenew\">Auto Renew</Label>\n          </div>\n\n          {/* Change Reason */}\n          {mode !== 'view' && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"changeReason\">Change Reason</Label>\n              <Textarea\n                value={formData.changeReason || ''}\n                onChange={(e) => handleInputChange('changeReason', e.target.value)}\n                placeholder=\"Reason for this change...\"\n                rows={3}\n              />\n            </div>\n          )}\n    </div>\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {showCard ? (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <CreditCard className=\"h-5 w-5\" />\n              <span>{title || (mode === 'create' ? 'Create Subscription' : 'Edit Subscription')}</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {formContent}\n          </CardContent>\n        </Card>\n      ) : (\n        formContent\n      )}\n\n      {/* Form Actions */}\n      {showActions && mode !== 'view' && (\n        <div className=\"flex justify-end space-x-2\">\n          <Button type=\"button\" variant=\"outline\" onClick={onCancel} disabled={loading}>\n            Cancel\n          </Button>\n          <Button type=\"submit\" disabled={loading}>\n            {loading ? 'Saving...' : (submitText || 'Save')}\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n}\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea,\n  Label,\n  Switch,\n  Badge,\n  StatusBadge,\n  SearchableSelect\n} from '../../../ui';\nimport { \n  Calendar, \n  DollarSign, \n  Users, \n  Building,\n  CreditCard,\n  AlertCircle,\n  CheckCircle\n} from 'lucide-react';\nimport type { \n  SubscriptionCreateInput, \n  SubscriptionUpdateInput,\n  Subscription,\n  Plan,\n  Merchant\n} from '@rentalshop/types';\n\ninterface SubscriptionFormData {\n  merchantId: number;\n  planId: number;\n  status: 'trial' | 'active' | 'past_due' | 'cancelled' | 'paused';\n  currentPeriodStart: Date;\n  currentPeriodEnd: Date;\n  trialStart?: Date;\n  trialEnd?: Date;\n  amount: number;\n  currency: string;\n  interval: 'month' | 'quarter' | 'year';\n  intervalCount: number;\n  period: 1 | 3 | 12;\n  discount: number;\n  savings: number;\n  platform: 'web-only' | 'mobile-only' | 'web-mobile' | 'desktop-only' | 'all-platforms';\n  cancelAtPeriodEnd: boolean;\n  canceledAt?: Date;\n  cancelReason?: string;\n  autoRenew: boolean;\n  changeReason?: string;\n  // Additional fields for form handling\n  startDate?: Date;\n  endDate?: Date;\n  nextBillingDate?: Date;\n}\n\ninterface SubscriptionFormProps {\n  initialData?: Partial<SubscriptionFormData>;\n  plans: Plan[];\n  merchants: Merchant[];\n  onSubmit: (data: SubscriptionCreateInput | SubscriptionUpdateInput) => Promise<void>;\n  onCancel: () => void;\n  loading?: boolean;\n  mode?: 'create' | 'edit' | 'view';\n  title?: string;\n  submitText?: string;\n}\n\nexport function SubscriptionForm({\n  initialData,\n  plans,\n  merchants,\n  onSubmit,\n  onCancel,\n  loading = false,\n  mode = 'create',\n  title,\n  submitText\n}: SubscriptionFormProps) {\n  const [formData, setFormData] = useState<SubscriptionFormData>({\n    merchantId: initialData?.merchantId || 0,\n    planId: initialData?.planId || 0,\n    status: initialData?.status || 'trial',\n    currentPeriodStart: initialData?.currentPeriodStart || new Date(),\n    currentPeriodEnd: initialData?.currentPeriodEnd || new Date(),\n    trialStart: initialData?.trialStart,\n    trialEnd: initialData?.trialEnd,\n    amount: initialData?.amount || 0,\n    currency: initialData?.currency || 'USD',\n    interval: initialData?.interval || 'month',\n    intervalCount: initialData?.intervalCount || 1,\n    period: initialData?.period || 1,\n    discount: initialData?.discount || 0,\n    savings: initialData?.savings || 0,\n    platform: initialData?.platform || 'web-mobile',\n    cancelAtPeriodEnd: initialData?.cancelAtPeriodEnd || false,\n    canceledAt: initialData?.canceledAt,\n    cancelReason: initialData?.cancelReason,\n    autoRenew: initialData?.autoRenew ?? true,\n    changeReason: initialData?.changeReason || '',\n    // Initialize additional fields\n    startDate: initialData?.currentPeriodStart || new Date(),\n    endDate: initialData?.currentPeriodEnd || new Date(),\n    nextBillingDate: initialData?.currentPeriodEnd || new Date()\n  });\n\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [planVariants, setPlanVariants] = useState<any[]>([]);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [merchantOptions, setMerchantOptions] = useState<any[]>([]);\n  const [selectedMerchant, setSelectedMerchant] = useState<any>(null);\n\n  // Debug logging\n  console.log('SubscriptionForm - merchants:', merchants);\n  console.log('SubscriptionForm - plans:', plans);\n\n  // Initialize merchant options\n  useEffect(() => {\n    const options = merchants.map(merchant => ({\n      value: merchant.id.toString(),\n      label: merchant.name,\n      subtitle: merchant.email,\n      description: `${merchant.city}, ${merchant.state}`,\n      type: 'merchant' as const\n    }));\n    setMerchantOptions(options);\n\n    // Set selected merchant if editing\n    if (formData.merchantId && merchants.length > 0) {\n      const merchant = merchants.find(m => m.id === formData.merchantId.toString());\n      if (merchant) {\n        setSelectedMerchant({\n          value: merchant.id.toString(),\n          label: merchant.name,\n          subtitle: merchant.email,\n          description: `${merchant.city}, ${merchant.state}`,\n          type: 'merchant' as const\n        });\n      }\n    }\n  }, [merchants, formData.merchantId]);\n\n  // Merchant search function\n  const handleMerchantSearch = async (query: string) => {\n    if (!query.trim()) {\n      return merchantOptions;\n    }\n    \n    const filtered = merchantOptions.filter(option =>\n      option.label.toLowerCase().includes(query.toLowerCase()) ||\n      option.subtitle?.toLowerCase().includes(query.toLowerCase()) ||\n      option.description?.toLowerCase().includes(query.toLowerCase())\n    );\n    \n    return filtered;\n  };\n\n  // Update selected plan when planId changes\n  useEffect(() => {\n    const plan = plans.find(p => p.id === formData.planId);\n    setSelectedPlan(plan || null);\n    \n    if (plan) {\n      // Load plan variants for this plan\n      // This would typically come from an API call\n      setPlanVariants([]); // Placeholder - you'd fetch actual variants\n      \n      // Update amount based on plan\n      setFormData(prev => ({\n        ...prev,\n        amount: plan.basePrice,\n        currency: plan.currency\n      }));\n    }\n  }, [formData.planId, plans]);\n\n  // Calculate trial end date when start date or plan changes\n  useEffect(() => {\n    if (selectedPlan && formData.status === 'trial' && selectedPlan.trialDays > 0) {\n      const endDate = new Date(formData.startDate || formData.currentPeriodStart);\n      endDate.setDate(endDate.getDate() + selectedPlan.trialDays);\n      \n      setFormData(prev => ({\n        ...prev,\n        endDate,\n        nextBillingDate: endDate,\n        amount: 0 // Trial is free\n      }));\n    }\n  }, [selectedPlan, formData.startDate, formData.status]);\n\n  // Calculate end date for active subscriptions\n  useEffect(() => {\n    if (formData.status === 'ACTIVE' && selectedPlan) {\n      const endDate = new Date(formData.startDate || formData.currentPeriodStart);\n      endDate.setMonth(endDate.getMonth() + 1); // Default to 1 month\n      \n      setFormData(prev => ({\n        ...prev,\n        endDate,\n        nextBillingDate: endDate\n      }));\n    }\n  }, [formData.startDate, formData.status, selectedPlan]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.merchantId) {\n      newErrors.merchantId = 'Merchant is required';\n    }\n\n    if (!formData.planId) {\n      newErrors.planId = 'Plan is required';\n    }\n\n    if (!formData.startDate) {\n      newErrors.startDate = 'Start date is required';\n    }\n\n    if (!formData.nextBillingDate) {\n      newErrors.nextBillingDate = 'Next billing date is required';\n    }\n\n    if (formData.amount < 0) {\n      newErrors.amount = 'Amount cannot be negative';\n    }\n\n    if (formData.status === 'TRIAL' && !formData.endDate) {\n      newErrors.endDate = 'End date is required for trial subscriptions';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const submitData = {\n        ...formData,\n        startDate: formData.startDate,\n        endDate: formData.endDate,\n        nextBillingDate: formData.nextBillingDate\n      };\n\n      await onSubmit(submitData);\n    } catch (error) {\n      console.error('Error submitting subscription:', error);\n    }\n  };\n\n  const handleInputChange = (field: keyof SubscriptionFormData, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusMap = {\n      'TRIAL': 'trial',\n      'ACTIVE': 'active',\n      'CANCELLED': 'cancelled',\n      'SUSPENDED': 'warning'\n    };\n\n    const mappedStatus = statusMap[status as keyof typeof statusMap] || status.toLowerCase();\n    return <StatusBadge status={mappedStatus} />;\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <CreditCard className=\"h-5 w-5\" />\n            <span>{title || (mode === 'create' ? 'Create Subscription' : 'Edit Subscription')}</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Merchant Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"merchantId\" className=\"flex items-center space-x-2\">\n              <Building className=\"h-4 w-4\" />\n              <span>Merchant *</span>\n            </Label>\n            <SearchableSelect\n              value={formData.merchantId}\n              onChange={(value) => handleInputChange('merchantId', value)}\n              options={merchantOptions}\n              onSearch={handleMerchantSearch}\n              placeholder=\"Search for a merchant...\"\n              searchPlaceholder=\"Type merchant name, email, or location...\"\n              emptyText=\"No merchants found\"\n              displayMode=\"input\"\n              className={errors.merchantId ? 'border-red-500' : ''}\n            />\n            {errors.merchantId && (\n              <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span>{errors.merchantId}</span>\n              </p>\n            )}\n          </div>\n\n          {/* Plan Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"planId\" className=\"flex items-center space-x-2\">\n              <CreditCard className=\"h-4 w-4\" />\n              <span>Plan *</span>\n            </Label>\n            <Select\n              value={formData.planId.toString()}\n              onValueChange={(value) => handleInputChange('planId', parseInt(value))}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger className={errors.planId ? 'border-red-500' : ''}>\n                <SelectValue placeholder=\"Select a plan\" />\n              </SelectTrigger>\n              <SelectContent>\n                {plans.map(plan => (\n                  <SelectItem key={plan.id} value={plan.id.toString()}>\n                    <div className=\"flex items-center justify-between w-full\">\n                      <span>{plan.name}</span>\n                      <span className=\"text-sm text-gray-500 ml-2\">\n                        {formatCurrency(plan.basePrice, plan.currency)}\n                      </span>\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            {errors.planId && (\n              <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span>{errors.planId}</span>\n              </p>\n            )}\n          </div>\n\n          {/* Plan Variant Selection */}\n          {planVariants.length > 0 && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"planVariantId\">Plan Variant</Label>\n              <Select\n                value={formData.planVariantId?.toString() || ''}\n                onValueChange={(value) => handleInputChange('planVariantId', value ? parseInt(value) : undefined)}\n                disabled={mode === 'view'}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select a plan variant\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {planVariants.map(variant => (\n                    <SelectItem key={variant.id} value={variant.id.toString()}>\n                      {variant.name} - {formatCurrency(variant.price, formData.currency)}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n\n          {/* Status */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"status\" className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-4 w-4\" />\n              <span>Status</span>\n            </Label>\n            <Select\n              value={formData.status}\n              onValueChange={(value) => handleInputChange('status', value)}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"TRIAL\">Trial</SelectItem>\n                <SelectItem value=\"ACTIVE\">Active</SelectItem>\n                <SelectItem value=\"CANCELLED\">Cancelled</SelectItem>\n                <SelectItem value=\"SUSPENDED\">Suspended</SelectItem>\n              </SelectContent>\n            </Select>\n            <div className=\"flex items-center space-x-2\">\n              {getStatusBadge(formData.status)}\n            </div>\n          </div>\n\n          {/* Dates */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"currentPeriodStart\" className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-4 w-4\" />\n                <span>Start Date *</span>\n              </Label>\n              <Input\n                type=\"datetime-local\"\n                value={formData.startDate?.toISOString().slice(0, 16) || ''}\n                onChange={(e) => handleInputChange('startDate', new Date(e.target.value))}\n                disabled={mode === 'view'}\n                className={errors.startDate ? 'border-red-500' : ''}\n              />\n              {errors.startDate && (\n                <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <span>{errors.startDate}</span>\n                </p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"nextBillingDate\" className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-4 w-4\" />\n                <span>Next Billing Date *</span>\n              </Label>\n              <Input\n                type=\"datetime-local\"\n                value={formData.nextBillingDate.toISOString().slice(0, 16)}\n                onChange={(e) => handleInputChange('nextBillingDate', new Date(e.target.value))}\n                disabled={mode === 'view'}\n                className={errors.nextBillingDate ? 'border-red-500' : ''}\n              />\n              {errors.nextBillingDate && (\n                <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <span>{errors.nextBillingDate}</span>\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Trial End Date (for trial subscriptions) */}\n          {formData.status === 'TRIAL' && formData.endDate && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"endDate\" className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-4 w-4\" />\n                <span>Trial End Date</span>\n              </Label>\n              <Input\n                type=\"datetime-local\"\n                value={formData.endDate.toISOString().slice(0, 16)}\n                onChange={(e) => handleInputChange('endDate', new Date(e.target.value))}\n                disabled={mode === 'view'}\n                className={errors.endDate ? 'border-red-500' : ''}\n              />\n              {errors.endDate && (\n                <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <span>{errors.endDate}</span>\n                </p>\n              )}\n            </div>\n          )}\n\n          {/* End Date (for active subscriptions) */}\n          {formData.status === 'ACTIVE' && formData.endDate && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"endDate\" className=\"flex items-center space-x-2\">\n                <Calendar className=\"h-4 w-4\" />\n                <span>End Date</span>\n              </Label>\n              <Input\n                type=\"datetime-local\"\n                value={formData.endDate.toISOString().slice(0, 16)}\n                onChange={(e) => handleInputChange('endDate', new Date(e.target.value))}\n                disabled={mode === 'view'}\n              />\n            </div>\n          )}\n\n          {/* Amount and Currency */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"amount\" className=\"flex items-center space-x-2\">\n                <DollarSign className=\"h-4 w-4\" />\n                <span>Amount *</span>\n              </Label>\n              <Input\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0\"\n                value={formData.amount}\n                onChange={(e) => handleInputChange('amount', parseFloat(e.target.value) || 0)}\n                disabled={mode === 'view' || formData.status === 'TRIAL'}\n                className={errors.amount ? 'border-red-500' : ''}\n              />\n              {errors.amount && (\n                <p className=\"text-sm text-red-500 flex items-center space-x-1\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <span>{errors.amount}</span>\n                </p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"currency\">Currency</Label>\n              <Select\n                value={formData.currency}\n                onValueChange={(value) => handleInputChange('currency', value)}\n                disabled={mode === 'view'}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"USD\">USD</SelectItem>\n                  <SelectItem value=\"EUR\">EUR</SelectItem>\n                  <SelectItem value=\"GBP\">GBP</SelectItem>\n                  <SelectItem value=\"CAD\">CAD</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          {/* Discount Percentage */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"discount\" className=\"flex items-center space-x-2\">\n              <DollarSign className=\"h-4 w-4\" />\n              <span>Discount %</span>\n            </Label>\n            <Input\n              type=\"number\"\n              min=\"0\"\n              max=\"100\"\n              step=\"0.1\"\n              value={formData.discount}\n              onChange={(e) => handleInputChange('discount', parseFloat(e.target.value) || 0)}\n              placeholder=\"0.0\"\n              disabled={mode === 'view'}\n              className=\"w-32\"\n            />\n            <p className=\"text-xs text-gray-500\">\n              Enter discount percentage (0-100%)\n            </p>\n          </div>\n\n          {/* Platform Support */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"platform\" className=\"flex items-center space-x-2\">\n              <Users className=\"h-4 w-4\" />\n              <span>Platform Support</span>\n            </Label>\n            <Select\n              value={formData.platform}\n              onValueChange={(value) => handleInputChange('platform', value)}\n              disabled={mode === 'view'}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select platform support\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"web-only\">Web Only</SelectItem>\n                <SelectItem value=\"mobile-only\">Mobile Only</SelectItem>\n                <SelectItem value=\"web-mobile\">Web & Mobile</SelectItem>\n                <SelectItem value=\"desktop-only\">Desktop Only</SelectItem>\n                <SelectItem value=\"all-platforms\">All Platforms</SelectItem>\n              </SelectContent>\n            </Select>\n            <p className=\"text-xs text-gray-500\">\n              Select which platforms this subscription supports\n            </p>\n          </div>\n\n          {/* Auto Renew */}\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"autoRenew\"\n              checked={formData.autoRenew}\n              onCheckedChange={(checked) => handleInputChange('autoRenew', checked)}\n              disabled={mode === 'view'}\n            />\n            <Label htmlFor=\"autoRenew\">Auto-renew subscription</Label>\n          </div>\n\n          {/* Change Reason */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"changeReason\">Change Reason</Label>\n            <Textarea\n              id=\"changeReason\"\n              placeholder=\"Reason for this subscription change...\"\n              value={formData.changeReason || ''}\n              onChange={(e) => handleInputChange('changeReason', e.target.value)}\n              disabled={mode === 'view'}\n              rows={3}\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Actions */}\n      <div className=\"flex items-center justify-end space-x-2\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onCancel}\n          disabled={loading}\n        >\n          Cancel\n        </Button>\n        {mode !== 'view' && (\n          <Button\n            type=\"submit\"\n            disabled={loading}\n          >\n            {loading ? 'Saving...' : (submitText || 'Save Subscription')}\n          </Button>\n        )}\n      </div>\n    </form>\n  );\n}\n","// ============================================================================\n// SUBSCRIPTION PREVIEW PAGE COMPONENT\n// ============================================================================\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  Badge,\n  cn\n} from '@rentalshop/ui';\nimport { publicPlansApi, formatCurrency } from '@rentalshop/utils';\nimport type { Plan, CurrencyCode } from '@rentalshop/types';\nimport { \n  Check, \n  Star, \n  Clock, \n  Users, \n  Store, \n  Package, \n  UserCheck,\n  Zap,\n  Shield,\n  TrendingUp,\n  XCircle\n} from 'lucide-react';\n\ninterface SubscriptionPreviewPageProps {\n  onSelectPlan?: (plan: Plan, duration: number) => void;\n  showSelectButton?: boolean;\n  className?: string;\n}\n\nexport const SubscriptionPreviewPage: React.FC<SubscriptionPreviewPageProps> = ({\n  onSelectPlan,\n  showSelectButton = true,\n  className\n}) => {\n  const [plans, setPlans] = useState<Plan[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [selectedDuration, setSelectedDuration] = useState<number>(1);\n\n  useEffect(() => {\n    fetchPlans();\n  }, []);\n\n  const fetchPlans = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await publicPlansApi.getPublicPlansWithVariants();\n      \n      if (response.success && response.data) {\n        setPlans(response.data);\n      } else {\n        setError(response.error || 'Failed to fetch plans');\n      }\n    } catch (err) {\n      console.error('Error fetching plans:', err);\n      setError('Failed to fetch plans');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePlanSelect = (plan: Plan, duration: number) => {\n    setSelectedPlan(plan);\n    setSelectedDuration(duration);\n    \n    if (onSelectPlan) {\n      onSelectPlan(plan, duration);\n    }\n  };\n\n  const getFeatureIcon = (feature: string) => {\n    const featureLower = feature.toLowerCase();\n    \n    if (featureLower.includes('outlet') || featureLower.includes('store')) {\n      return <Store className=\"w-4 h-4\" />;\n    }\n    if (featureLower.includes('user') || featureLower.includes('staff')) {\n      return <Users className=\"w-4 h-4\" />;\n    }\n    if (featureLower.includes('product') || featureLower.includes('inventory')) {\n      return <Package className=\"w-4 h-4\" />;\n    }\n    if (featureLower.includes('customer')) {\n      return <UserCheck className=\"w-4 h-4\" />;\n    }\n    if (featureLower.includes('analytics') || featureLower.includes('report')) {\n      return <TrendingUp className=\"w-4 h-4\" />;\n    }\n    if (featureLower.includes('security') || featureLower.includes('secure')) {\n      return <Shield className=\"w-4 h-4\" />;\n    }\n    if (featureLower.includes('performance') || featureLower.includes('speed')) {\n      return <Zap className=\"w-4 h-4\" />;\n    }\n    \n    return <Check className=\"w-4 h-4\" />;\n  };\n\n  const getDurationText = (duration: number) => {\n    if (duration === 1) return '1 Month';\n    if (duration === 3) return '3 Months';\n    if (duration === 6) return '6 Months';\n    if (duration === 12) return '1 Year';\n    return `${duration} Months`;\n  };\n\n  const getDiscountBadgeColor = (discount: number) => {\n    if (discount >= 20) return 'bg-red-100 text-red-800 border-red-200';\n    if (discount >= 10) return 'bg-orange-100 text-orange-800 border-orange-200';\n    if (discount > 0) return 'bg-green-100 text-green-800 border-green-200';\n    return 'bg-gray-100 text-gray-800 border-gray-200';\n  };\n\n  const getPlatformDisplayText = (platform: string) => {\n    switch (platform) {\n      case 'web-only': return 'Web Only';\n      case 'mobile-only': return 'Mobile Only';\n      case 'web-mobile': return 'Web & Mobile';\n      case 'desktop-only': return 'Desktop Only';\n      case 'all-platforms': return 'All Platforms';\n      default: return 'Web & Mobile';\n    }\n  };\n\n  const getPlatformIcon = (platform: string) => {\n    switch (platform) {\n      case 'web-only': return <Package className=\"w-4 h-4\" />;\n      case 'mobile-only': return <Zap className=\"w-4 h-4\" />;\n      case 'web-mobile': return <Shield className=\"w-4 h-4\" />;\n      case 'desktop-only': return <TrendingUp className=\"w-4 h-4\" />;\n      case 'all-platforms': return <Check className=\"w-4 h-4\" />;\n      default: return <Shield className=\"w-4 h-4\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-700 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Loading subscription plans...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n              <p className=\"text-red-800\">{error}</p>\n              <Button \n                onClick={fetchPlans}\n                className=\"mt-4\"\n                variant=\"outline\"\n              >\n                Try Again\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Define available durations\n  const durations = [1, 3, 6, 12]; // Monthly, Quarterly, 6 months, Yearly\n\n  // Get discount for selected duration\n  const getDiscountForDuration = (duration: number) => {\n    if (duration === 1) return 0;   // Monthly: 0% discount\n    if (duration === 3) return 10;  // Quarterly: 10% discount\n    if (duration === 6) return 15;  // 6 months: 15% discount\n    if (duration === 12) return 20; // Yearly: 20% discount\n    return 0;\n  };\n\n  // Calculate pricing for each plan and duration\n  const calculatePlanPricing = (plan: Plan, duration: number) => {\n    const basePrice = plan.basePrice;\n    const discount = getDiscountForDuration(duration);\n    const discountedPrice = basePrice * (1 - discount / 100);\n    const totalSavings = (basePrice * duration) - (discountedPrice * duration);\n    \n    return {\n      basePrice,\n      discount,\n      discountedPrice,\n      totalSavings,\n      monthlyPrice: discountedPrice,\n      totalPrice: discountedPrice * duration\n    };\n  };\n\n  return (\n    <div className={cn(\"min-h-screen bg-white py-12\", className)}>\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Choose Your Subscription Plan\n          </h1>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Start with our free trial plan or choose a paid plan that fits your business needs.\n          </p>\n        </div>\n\n        {/* Duration Selector - Only show if there are durations */}\n        {durations.length > 0 && (\n          <div className=\"flex justify-center mb-12\">\n            <div className=\"flex bg-gray-100 rounded-lg p-1\">\n              {durations.map((duration) => {\n              const discount = getDiscountForDuration(duration);\n              const isSelected = selectedDuration === duration;\n              return (\n                <Button\n                  variant={isSelected ? \"default\" : \"ghost\"}\n                  key={duration}\n                  onClick={() => setSelectedDuration(duration)}\n                  className={cn(\n                    \"px-6 py-3 rounded-md text-sm font-medium transition-all duration-200 relative\",\n                    isSelected\n                      ? \"bg-blue-700 text-white shadow-sm\"\n                      : \"text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n                  )}\n                >\n                  <div className=\"text-center\">\n                    <div className=\"font-semibold\">\n                      {duration === 1 ? 'Monthly' : \n                       duration === 3 ? 'Quarterly' : \n                       duration === 6 ? '6 Months' : \n                       duration === 12 ? 'Yearly' : \n                       `${duration} months`}\n                    </div>\n                    {discount > 0 ? (\n                      <div className=\"text-xs opacity-90 font-medium\">\n                        Save {discount}%\n                      </div>\n                    ) : (\n                      <div className=\"text-xs opacity-90\">\n                        Standard\n                      </div>\n                    )}\n                  </div>\n                  {discount > 0 && (\n                    <div className=\"absolute -top-1 -right-1\">\n                      <div className=\"bg-green-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-bold\">\n                        {discount}%\n                      </div>\n                    </div>\n                  )}\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n        )}\n        {/* Plans Grid */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-12\">\n          {plans.map((plan) => {\n            // Calculate pricing for this plan and selected duration\n            const pricing = calculatePlanPricing(plan, selectedDuration);\n            \n            return (\n              <Card \n                key={plan.id} \n                className={cn(\n                  \"relative transition-all duration-200 hover:shadow-lg bg-white border-2\",\n                  plan.isPopular \n                    ? \"border-blue-500 shadow-lg\" \n                    : \"border-gray-200 hover:border-gray-300\"\n                )}\n              >\n                {plan.isPopular && (\n                  <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                    <Badge className=\"bg-blue-700 text-white px-4 py-1 rounded-full text-sm font-medium\">\n                      Most Popular\n                    </Badge>\n                  </div>\n                )}\n\n                <CardHeader className=\"text-center pb-4 pt-8\">\n                  <CardTitle className=\"text-2xl font-bold text-gray-900 mb-2\">\n                    {plan.name}\n                  </CardTitle>\n                  <p className=\"text-gray-600 text-sm mb-4\">\n                    {plan.description}\n                  </p>\n                  \n                  {/* Price */}\n                  <div className=\"mb-4\">\n                    {plan.name === 'Trial' ? (\n                      <div>\n                        <span className=\"text-3xl font-bold text-green-600\">Free</span>\n                        <div className=\"text-sm text-gray-600 mt-1\">14-day trial</div>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-2\">\n                        {/* Main Price Display */}\n                        <div className=\"flex items-baseline justify-center\">\n                          <span className=\"text-3xl font-bold text-gray-900\">\n                            {formatCurrency(pricing.monthlyPrice, plan.currency as CurrencyCode)}\n                          </span>\n                          <span className=\"text-gray-600 ml-1 text-sm\">/month</span>\n                        </div>\n                        \n                        {/* Discount Information */}\n                        {pricing.discount > 0 && (\n                          <div className=\"text-center space-y-1\">\n                            <div className=\"flex items-center justify-center gap-2\">\n                              <span className=\"text-sm text-gray-500 line-through\">\n                                {formatCurrency(pricing.basePrice, plan.currency as CurrencyCode)}/month\n                              </span>\n                              <Badge className={cn(\"text-xs font-medium\", getDiscountBadgeColor(pricing.discount))}>\n                                {pricing.discount}% OFF\n                              </Badge>\n                            </div>\n                            <div className=\"text-sm text-green-600 font-medium\">\n                              Save {formatCurrency(pricing.totalSavings, plan.currency as CurrencyCode)} total\n                            </div>\n                          </div>\n                        )}\n                        \n                        {/* Total Price for Duration */}\n                        {selectedDuration > 1 && (\n                          <div className=\"text-center\">\n                            <div className=\"text-sm text-gray-600\">\n                              Total for {selectedDuration} month{selectedDuration > 1 ? 's' : ''}:\n                            </div>\n                            <div className=\"text-lg font-semibold text-gray-900\">\n                              {formatCurrency(pricing.totalPrice, plan.currency as CurrencyCode)}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </CardHeader>\n\n                <CardContent className=\"pt-0\">\n                  {/* Plan Limits */}\n                  <div className=\"space-y-3 mb-6\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Outlets</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {plan.limits.outlets === -1 ? 'Unlimited' : plan.limits.outlets}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Users</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {plan.limits.users === -1 ? 'Unlimited' : plan.limits.users}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Products</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {plan.limits.products === -1 ? 'Unlimited' : plan.limits.products.toLocaleString()}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Customers</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {plan.limits.customers === -1 ? 'Unlimited' : plan.limits.customers.toLocaleString()}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Trial Period</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {plan.trialDays} days\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Platform</span>\n                      <span className=\"font-medium text-gray-900\">\n                        <span className=\"inline-flex items-center gap-1 text-green-600\">\n                          {getPlatformIcon('web-mobile')}\n                          {getPlatformDisplayText('web-mobile')}\n                        </span>\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Plan Features */}\n                  {plan.features && plan.features.length > 0 && (\n                    <div className=\"space-y-3 mb-6\">\n                      <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Features</h4>\n                      {plan.features.map((feature, index) => (\n                        <div key={index} className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">{feature}</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Core Features */}\n                  <div className=\"space-y-3 mb-6\">\n                    <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Core Features</h4>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Order Management</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Product Management</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Customer Management</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Revenue Reports</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Web Portal</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Mobile App</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Free Updates</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-700\">Email Support</span>\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    {plan.name === 'Professional' && (\n                      <>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">Priority Support</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">API Access</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">Team Collaboration</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                      </>\n                    )}\n                    {plan.name === 'Enterprise' && (\n                      <>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">24/7 Priority Support</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">Full API Access</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">White-label Solution</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">Dedicated Account Manager</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                        <div className=\"flex items-center justify-between text-sm\">\n                          <span className=\"text-gray-700\">SLA Guarantee</span>\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                        </div>\n                      </>\n                    )}\n                  </div>\n\n                  {/* Select Button */}\n                  {showSelectButton && (\n                    <Button\n                      className=\"w-full\"\n                      variant={plan.isPopular ? \"default\" : plan.name === 'Trial' ? \"default\" : \"outline\"}\n                      onClick={() => {\n                        handlePlanSelect(plan, selectedDuration);\n                      }}\n                    >\n                      {selectedPlan?.id === plan.id ? 'Selected' : \n                       plan.name === 'Trial' ? 'Start Free Trial' : 'Select Plan'}\n                    </Button>\n                  )}\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Selected Plan Summary */}\n        {selectedPlan && (\n          <div className=\"bg-white rounded-lg shadow-lg p-6 border border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              Selected Plan Summary\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Plan</p>\n                <p className=\"font-medium text-gray-900\">{selectedPlan.name}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Billing Period</p>\n                <p className=\"font-medium text-gray-900\">\n                  {selectedDuration === 1 ? 'Monthly' : \n                   selectedDuration === 3 ? 'Quarterly' : \n                   selectedDuration === 6 ? '6 Months' : \n                   selectedDuration === 12 ? 'Yearly' : \n                   `${selectedDuration} months`}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Monthly Price</p>\n                <p className=\"font-medium text-gray-900\">\n                  {formatCurrency(calculatePlanPricing(selectedPlan, selectedDuration).monthlyPrice, selectedPlan.currency as CurrencyCode)}\n                  {calculatePlanPricing(selectedPlan, selectedDuration).discount > 0 && (\n                    <span className=\"text-green-600 ml-2 text-sm\">\n                      ({calculatePlanPricing(selectedPlan, selectedDuration).discount}% OFF)\n                    </span>\n                  )}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Price</p>\n                <p className=\"font-medium text-gray-900\">\n                  {formatCurrency(calculatePlanPricing(selectedPlan, selectedDuration).totalPrice, selectedPlan.currency as CurrencyCode)}\n                  {calculatePlanPricing(selectedPlan, selectedDuration).discount > 0 && (\n                    <div className=\"text-xs text-green-600\">\n                      Save {formatCurrency(calculatePlanPricing(selectedPlan, selectedDuration).totalSavings, selectedPlan.currency as CurrencyCode)}\n                    </div>\n                  )}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Footer Info */}\n        <div className=\"text-center mt-12 text-gray-600\">\n          <p className=\"text-sm\">\n            All plans include 24/7 support and can be upgraded or downgraded at any time.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SubscriptionPreviewPage;\n","// ============================================================================\n// PLAN SELECTION MODAL - For expired subscriptions\n// ============================================================================\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Separator\n} from '@rentalshop/ui';\nimport { \n  Check, \n  CreditCard, \n  Calendar, \n  DollarSign,\n  AlertTriangle,\n  Clock,\n  Shield,\n  Zap\n} from 'lucide-react';\nimport { Plan, BillingCycle } from '@rentalshop/types';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface PlanSelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSelectPlan: (planId: number, billingCycle: BillingCycle) => void;\n  plans: Plan[];\n  currentPlan?: Plan;\n  loading?: boolean;\n}\n\nexport interface BillingCycleOption {\n  value: BillingCycle;\n  label: string;\n  months: number;\n  discount: number;\n  description: string;\n}\n\n// ============================================================================\n// BILLING CYCLE OPTIONS\n// ============================================================================\n\nconst BILLING_CYCLES: BillingCycleOption[] = [\n  {\n    value: 'monthly',\n    label: 'Monthly',\n    months: 1,\n    discount: 0,\n    description: 'Pay monthly, cancel anytime'\n  },\n  {\n    value: 'quarterly',\n    label: 'Quarterly',\n    months: 3,\n    discount: 10,\n    description: 'Save 10% with quarterly billing'\n  },\n  {\n    value: 'semi_annual',\n    label: 'Semi-Annual',\n    months: 6,\n    discount: 15,\n    description: 'Save 15% with semi-annual billing'\n  },\n  {\n    value: 'annual',\n    label: 'Annual',\n    months: 12,\n    discount: 25,\n    description: 'Save 25% with annual billing'\n  }\n];\n\n// ============================================================================\n// PAYMENT METHODS\n// ============================================================================\n\nconst PAYMENT_METHODS = [\n  { value: 'STRIPE', label: 'Credit Card (Stripe)', icon: CreditCard },\n  { value: 'PAYPAL', label: 'PayPal', icon: CreditCard },\n  { value: 'BANK_TRANSFER', label: 'Bank Transfer', icon: CreditCard },\n  { value: 'MANUAL', label: 'Manual Payment', icon: CreditCard }\n];\n\n// ============================================================================\n// COMPONENT\n// ============================================================================\n\nexport const PlanSelectionModal: React.FC<PlanSelectionModalProps> = ({\n  isOpen,\n  onClose,\n  onSelectPlan,\n  plans,\n  currentPlan,\n  loading = false\n}) => {\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [selectedBillingCycle, setSelectedBillingCycle] = useState<BillingCycle>('monthly');\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<string>('STRIPE');\n  const [calculatedPrice, setCalculatedPrice] = useState<number>(0);\n\n  // Calculate price when plan or billing cycle changes\n  useEffect(() => {\n    if (selectedPlan) {\n      const billingCycle = BILLING_CYCLES.find(bc => bc.value === selectedBillingCycle);\n      if (billingCycle) {\n        const basePrice = selectedPlan.price;\n        const discount = billingCycle.discount / 100;\n        const discountedPrice = basePrice * (1 - discount);\n        const totalPrice = discountedPrice * billingCycle.months;\n        setCalculatedPrice(Math.round(totalPrice * 100) / 100);\n      }\n    }\n  }, [selectedPlan, selectedBillingCycle]);\n\n  const handlePlanSelect = (plan: Plan) => {\n    setSelectedPlan(plan);\n  };\n\n  const handleBillingCycleChange = (value: string) => {\n    setSelectedBillingCycle(value as BillingCycle);\n  };\n\n  const handlePaymentMethodChange = (value: string) => {\n    setSelectedPaymentMethod(value);\n  };\n\n  const handleConfirm = () => {\n    if (selectedPlan) {\n      onSelectPlan(selectedPlan.id, selectedBillingCycle);\n    }\n  };\n\n  const getFeatureIcon = (feature: string) => {\n    if (feature.toLowerCase().includes('unlimited')) return Zap;\n    if (feature.toLowerCase().includes('security') || feature.toLowerCase().includes('secure')) return Shield;\n    if (feature.toLowerCase().includes('support')) return Shield;\n    return Check;\n  };\n\n  const formatPrice = (price: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(price);\n  };\n\n  const getBillingCycleInfo = () => {\n    return BILLING_CYCLES.find(bc => bc.value === selectedBillingCycle);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n            Subscription Expired - Select a Plan\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Current Status */}\n          {currentPlan && (\n            <Card className=\"border-orange-200 bg-orange-50\">\n              <CardContent className=\"pt-6\">\n                <div className=\"flex items-center gap-2 text-orange-700\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span className=\"font-medium\">Current Plan: {currentPlan.name}</span>\n                  <Badge variant=\"destructive\">Expired</Badge>\n                </div>\n                <p className=\"text-sm text-orange-600 mt-1\">\n                  Your subscription has expired. Please select a new plan to continue using the service.\n                </p>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Plan Selection */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Choose Your Plan</h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {plans.map((plan) => (\n                <Card \n                  key={plan.id}\n                  className={`cursor-pointer transition-all hover:shadow-md ${\n                    selectedPlan?.id === plan.id \n                      ? 'ring-2 ring-blue-500 border-blue-500' \n                      : 'hover:border-gray-300'\n                  } ${plan.isPopular ? 'border-blue-500 bg-blue-50' : ''}`}\n                  onClick={() => handlePlanSelect(plan)}\n                >\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle className=\"text-lg\">{plan.name}</CardTitle>\n                      {plan.isPopular && (\n                        <Badge className=\"bg-blue-500\">Most Popular</Badge>\n                      )}\n                    </div>\n                    <div className=\"text-2xl font-bold text-blue-700\">\n                      {formatPrice(plan.price, plan.currency)}\n                      <span className=\"text-sm font-normal text-gray-500\">\n                        /{plan.billingCycle}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600\">{plan.description}</p>\n                  </CardHeader>\n                  <CardContent className=\"pt-0\">\n                    <div className=\"space-y-2\">\n                      {(typeof plan.features === 'string' ? JSON.parse(plan.features) : plan.features || []).map((feature: string, index: number) => {\n                        const Icon = getFeatureIcon(feature);\n                        return (\n                          <div key={index} className=\"flex items-center gap-2 text-sm\">\n                            <Icon className=\"h-4 w-4 text-green-500\" />\n                            <span>{feature}</span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Billing Cycle Selection */}\n          {selectedPlan && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold\">Choose Billing Cycle</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\n                {BILLING_CYCLES.map((cycle) => (\n                  <Card \n                    key={cycle.value}\n                    className={`cursor-pointer transition-all hover:shadow-md ${\n                      selectedBillingCycle === cycle.value \n                        ? 'ring-2 ring-blue-500 border-blue-500' \n                        : 'hover:border-gray-300'\n                    }`}\n                    onClick={() => handleBillingCycleChange(cycle.value)}\n                  >\n                    <CardContent className=\"pt-4\">\n                      <div className=\"text-center\">\n                        <h4 className=\"font-semibold\">{cycle.label}</h4>\n                        {cycle.discount > 0 && (\n                          <Badge className=\"mt-1 bg-green-500\">\n                            Save {cycle.discount}%\n                          </Badge>\n                        )}\n                        <p className=\"text-xs text-gray-600 mt-2\">\n                          {cycle.description}\n                        </p>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Payment Method Selection */}\n          {selectedPlan && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-semibold\">Payment Method</h3>\n              <Select value={selectedPaymentMethod} onValueChange={handlePaymentMethodChange}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select payment method\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {PAYMENT_METHODS.map((method) => {\n                    const Icon = method.icon;\n                    return (\n                      <SelectItem key={method.value} value={method.value}>\n                        <div className=\"flex items-center gap-2\">\n                          <Icon className=\"h-4 w-4\" />\n                          {method.label}\n                        </div>\n                      </SelectItem>\n                    );\n                  })}\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n\n          {/* Price Summary */}\n          {selectedPlan && (\n            <Card className=\"bg-gray-50\">\n              <CardContent className=\"pt-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-medium\">Plan:</span>\n                    <span>{selectedPlan.name}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-medium\">Billing Cycle:</span>\n                    <span>{getBillingCycleInfo()?.label}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"font-medium\">Base Price:</span>\n                    <span>{formatPrice(selectedPlan.price, selectedPlan.currency)}</span>\n                  </div>\n                  {getBillingCycleInfo()?.discount > 0 && (\n                    <div className=\"flex justify-between items-center text-green-600\">\n                      <span className=\"font-medium\">Discount ({getBillingCycleInfo()?.discount}%):</span>\n                      <span>-{formatPrice(selectedPlan.price * getBillingCycleInfo()!.discount / 100, selectedPlan.currency)}</span>\n                    </div>\n                  )}\n                  <Separator />\n                  <div className=\"flex justify-between items-center text-lg font-bold\">\n                    <span>Total:</span>\n                    <span className=\"text-blue-700\">\n                      {formatPrice(calculatedPrice, selectedPlan.currency)}\n                    </span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-end gap-3\">\n            <Button variant=\"outline\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button \n              onClick={handleConfirm}\n              disabled={!selectedPlan || loading}\n              className=\"bg-blue-700 hover:bg-blue-700\"\n            >\n              {loading ? 'Processing...' : 'Continue with Payment'}\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","// ============================================================================\n// SUBSCRIPTION STATUS BANNER COMPONENT\n// ============================================================================\n\nimport React from 'react';\nimport { Alert, AlertDescription, AlertTitle } from '../../../ui/alert';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { \n  AlertTriangle, \n  CreditCard, \n  Download, \n  Clock, \n  Shield, \n  XCircle,\n  CheckCircle,\n  Info\n} from 'lucide-react';\nimport { useSubscriptionStatusInfo } from '@rentalshop/hooks';\n\ninterface SubscriptionStatusBannerProps {\n  className?: string;\n  showActions?: boolean;\n  onUpgrade?: () => void;\n  onPayment?: () => void;\n  onExport?: () => void;\n}\n\nexport function SubscriptionStatusBanner({\n  className = '',\n  showActions = true,\n  onUpgrade,\n  onPayment,\n  onExport\n}: SubscriptionStatusBannerProps) {\n  const {\n    statusMessage,\n    statusColor,\n    hasAccess,\n    accessLevel,\n    requiresPayment,\n    upgradeRequired,\n    gracePeriodEnds,\n    canExportData,\n    isRestricted,\n    isReadOnly,\n    isLimited,\n    isDenied\n  } = useSubscriptionStatusInfo();\n\n  // Don't show banner if user has full access\n  if (!isRestricted) {\n    return null;\n  }\n\n  const getStatusIcon = () => {\n    if (isDenied) return <XCircle className=\"w-5 h-5\" />;\n    if (isReadOnly) return <Shield className=\"w-5 h-5\" />;\n    if (isLimited) return <Clock className=\"w-5 h-5\" />;\n    if (requiresPayment) return <CreditCard className=\"w-5 h-5\" />;\n    if (upgradeRequired) return <AlertTriangle className=\"w-5 h-5\" />;\n    return <Info className=\"w-5 h-5\" />;\n  };\n\n  const getStatusVariant = () => {\n    switch (statusColor) {\n      case 'red': return 'destructive';\n      case 'orange': return 'default';\n      case 'yellow': return 'default';\n      case 'green': return 'default';\n      default: return 'default';\n    }\n  };\n\n  const getStatusBadgeVariant = () => {\n    switch (accessLevel) {\n      case 'denied': return 'destructive';\n      case 'limited': return 'secondary';\n      case 'readonly': return 'outline';\n      default: return 'default';\n    }\n  };\n\n  return (\n    <Alert className={`${className} ${getStatusVariant()}`}>\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3\">\n          {getStatusIcon()}\n          <div className=\"flex-1\">\n            <AlertTitle className=\"flex items-center gap-2\">\n              Subscription Status\n              <Badge variant={getStatusBadgeVariant()}>\n                {accessLevel.toUpperCase()}\n              </Badge>\n            </AlertTitle>\n            <AlertDescription className=\"mt-1\">\n              {statusMessage}\n            </AlertDescription>\n            \n            {gracePeriodEnds && (\n              <div className=\"mt-2 text-sm text-muted-foreground\">\n                <Clock className=\"w-4 h-4 inline mr-1\" />\n                Grace period ends: {gracePeriodEnds.toLocaleDateString()}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {showActions && (\n          <div className=\"flex items-center space-x-2 ml-4\">\n            {upgradeRequired && onUpgrade && (\n              <Button size=\"sm\" onClick={onUpgrade}>\n                <CheckCircle className=\"w-4 h-4 mr-1\" />\n                Upgrade Now\n              </Button>\n            )}\n            \n            {requiresPayment && onPayment && (\n              <Button size=\"sm\" variant=\"outline\" onClick={onPayment}>\n                <CreditCard className=\"w-4 h-4 mr-1\" />\n                Make Payment\n              </Button>\n            )}\n            \n            {canExportData && onExport && (\n              <Button size=\"sm\" variant=\"outline\" onClick={onExport}>\n                <Download className=\"w-4 h-4 mr-1\" />\n                Export Data\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    </Alert>\n  );\n}\n\ninterface SubscriptionStatusCardProps {\n  className?: string;\n  showActions?: boolean;\n  onUpgrade?: () => void;\n  onPayment?: () => void;\n  onExport?: () => void;\n}\n\nexport function SubscriptionStatusCard({\n  className = '',\n  showActions = true,\n  onUpgrade,\n  onPayment,\n  onExport\n}: SubscriptionStatusCardProps) {\n  const {\n    statusMessage,\n    statusColor,\n    hasAccess,\n    accessLevel,\n    requiresPayment,\n    upgradeRequired,\n    gracePeriodEnds,\n    canExportData,\n    isRestricted,\n    isReadOnly,\n    isLimited,\n    isDenied\n  } = useSubscriptionStatusInfo();\n\n  // Don't show card if user has full access\n  if (!isRestricted) {\n    return null;\n  }\n\n  const getStatusIcon = () => {\n    if (isDenied) return <XCircle className=\"w-6 h-6 text-red-500\" />;\n    if (isReadOnly) return <Shield className=\"w-6 h-6 text-yellow-500\" />;\n    if (isLimited) return <Clock className=\"w-6 h-6 text-orange-500\" />;\n    if (requiresPayment) return <CreditCard className=\"w-6 h-6 text-orange-500\" />;\n    if (upgradeRequired) return <AlertTriangle className=\"w-6 h-6 text-red-500\" />;\n    return <Info className=\"w-6 h-6 text-blue-500\" />;\n  };\n\n  const getStatusColor = () => {\n    switch (statusColor) {\n      case 'red': return 'border-red-200 bg-red-50';\n      case 'orange': return 'border-orange-200 bg-orange-50';\n      case 'yellow': return 'border-yellow-200 bg-yellow-50';\n      case 'green': return 'border-green-200 bg-green-50';\n      default: return 'border-gray-200 bg-gray-50';\n    }\n  };\n\n  return (\n    <Card className={`${className} ${getStatusColor()}`}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-start space-x-4\">\n            {getStatusIcon()}\n            <div className=\"flex-1\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Subscription Status: {accessLevel.toUpperCase()}\n              </h3>\n              <p className=\"text-gray-700 mb-3\">\n                {statusMessage}\n              </p>\n              \n              {gracePeriodEnds && (\n                <div className=\"text-sm text-gray-600 mb-3\">\n                  <Clock className=\"w-4 h-4 inline mr-1\" />\n                  Grace period ends: {gracePeriodEnds.toLocaleDateString()}\n                </div>\n              )}\n\n              {showActions && (\n                <div className=\"flex items-center space-x-3\">\n                  {upgradeRequired && onUpgrade && (\n                    <Button size=\"sm\" onClick={onUpgrade}>\n                      <CheckCircle className=\"w-4 h-4 mr-1\" />\n                      Upgrade Now\n                    </Button>\n                  )}\n                  \n                  {requiresPayment && onPayment && (\n                    <Button size=\"sm\" variant=\"outline\" onClick={onPayment}>\n                      <CreditCard className=\"w-4 h-4 mr-1\" />\n                      Make Payment\n                    </Button>\n                  )}\n                  \n                  {canExportData && onExport && (\n                    <Button size=\"sm\" variant=\"outline\" onClick={onExport}>\n                      <Download className=\"w-4 h-4 mr-1\" />\n                      Export Data\n                    </Button>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../ui/card';\nimport { Badge } from '../../ui/badge';\nimport { \n  Calendar, \n  Clock, \n  CreditCard, \n  AlertTriangle,\n  CheckCircle,\n  Pause,\n  XCircle,\n  MinusCircle\n} from 'lucide-react';\nimport { formatSubscriptionPeriod, getSubscriptionStatusBadge, type SubscriptionPeriod } from '@rentalshop/utils';\n\ninterface SubscriptionPeriodCardProps {\n  period: SubscriptionPeriod;\n  planName?: string;\n  amount?: number;\n  currency?: string;\n  className?: string;\n}\n\nexport function SubscriptionPeriodCard({\n  period,\n  planName,\n  amount,\n  currency = 'USD',\n  className = ''\n}: SubscriptionPeriodCardProps) {\n  const formatted = formatSubscriptionPeriod(period);\n  const statusBadge = getSubscriptionStatusBadge(period.isActive ? 'active' : 'inactive', period.daysRemaining);\n  \n  const getStatusIcon = () => {\n    switch (statusBadge.icon) {\n      case 'clock': return <Clock className=\"w-4 h-4\" />;\n      case 'alert-triangle': return <AlertTriangle className=\"w-4 h-4\" />;\n      case 'check-circle': return <CheckCircle className=\"w-4 h-4\" />;\n      case 'pause': return <Pause className=\"w-4 h-4\" />;\n      case 'x-circle': return <XCircle className=\"w-4 h-4\" />;\n      default: return <MinusCircle className=\"w-4 h-4\" />;\n    }\n  };\n\n  return (\n    <Card className={`${className}`}>\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-semibold\">\n            Subscription Period\n          </CardTitle>\n          <Badge className={`${statusBadge.color} flex items-center gap-1`}>\n            {getStatusIcon()}\n            {statusBadge.text}\n          </Badge>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        {/* Plan Information */}\n        {planName && (\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium text-gray-600\">Plan</span>\n            <span className=\"text-sm font-semibold\">{planName}</span>\n          </div>\n        )}\n        \n        {/* Amount */}\n        {amount !== undefined && (\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium text-gray-600\">Amount</span>\n            <span className=\"text-sm font-semibold\">\n              {currency} {amount.toFixed(2)}\n            </span>\n          </div>\n        )}\n        \n        {/* Period Dates */}\n        <div className=\"flex items-center gap-2\">\n          <Calendar className=\"w-4 h-4 text-gray-500\" />\n          <div className=\"flex-1\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {formatted.period}\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              {period.duration} billing cycle\n            </div>\n          </div>\n        </div>\n        \n        {/* Time Remaining */}\n        <div className=\"flex items-center gap-2\">\n          <Clock className=\"w-4 h-4 text-gray-500\" />\n          <div className=\"flex-1\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {formatted.timeRemaining}\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              Next billing: {formatted.nextBilling}\n            </div>\n          </div>\n        </div>\n        \n        {/* Trial Information */}\n        {period.isTrial && period.endDate && (\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"w-4 h-4 text-blue-700\" />\n              <div>\n                <div className=\"text-sm font-medium text-blue-900\">\n                  Trial Period\n                </div>\n                <div className=\"text-xs text-blue-700\">\n                  Trial ends: {formatted.trialEnd}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","// ============================================================================\n// RESTRICTED BUTTON COMPONENT\n// ============================================================================\n\nimport React from 'react';\nimport { Button, ButtonProps } from '../../../ui/button';\nimport { useCanPerform } from '@rentalshop/hooks';\nimport { Lock, AlertTriangle, CreditCard, Clock } from 'lucide-react';\n\ninterface RestrictedButtonProps extends ButtonProps {\n  action: 'canCreate' | 'canEdit' | 'canDelete' | 'canManageUsers' | 'canManageOutlets' | 'canManageProducts' | 'canProcessOrders';\n  reason?: string;\n  showTooltip?: boolean;\n  fallbackText?: string;\n  fallbackIcon?: React.ReactNode;\n}\n\nexport function RestrictedButton({\n  action,\n  reason,\n  showTooltip = true,\n  fallbackText,\n  fallbackIcon,\n  children,\n  disabled,\n  ...props\n}: RestrictedButtonProps) {\n  const canPerform = useCanPerform(action);\n  const isDisabled = disabled || !canPerform;\n\n  const getRestrictionIcon = () => {\n    if (fallbackIcon) return fallbackIcon;\n    \n    // Default icons based on action type\n    if (action.includes('Manage') || action.includes('Process')) {\n      return <Lock className=\"w-4 h-4\" />;\n    }\n    return <AlertTriangle className=\"w-4 h-4\" />;\n  };\n\n  const getRestrictionText = () => {\n    if (fallbackText) return fallbackText;\n    if (reason) return reason;\n    \n    // Default messages based on action type\n    switch (action) {\n      case 'canCreate':\n        return 'Cannot create with current subscription';\n      case 'canEdit':\n        return 'Cannot edit with current subscription';\n      case 'canDelete':\n        return 'Cannot delete with current subscription';\n      case 'canManageUsers':\n        return 'User management not available with current subscription';\n      case 'canManageOutlets':\n        return 'Outlet management not available with current subscription';\n      case 'canManageProducts':\n        return 'Product management not available with current subscription';\n      case 'canProcessOrders':\n        return 'Order processing not available with current subscription';\n      default:\n        return 'Action not available with current subscription';\n    }\n  };\n\n  return (\n    <Button\n      {...props}\n      disabled={isDisabled}\n      variant={isDisabled ? 'outline' : props.variant}\n      className={`${props.className} ${isDisabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n      title={isDisabled && showTooltip ? getRestrictionText() : undefined}\n    >\n      {isDisabled && getRestrictionIcon()}\n      {children}\n    </Button>\n  );\n}\n\ninterface RestrictedActionProps {\n  action: 'canCreate' | 'canEdit' | 'canDelete' | 'canManageUsers' | 'canManageOutlets' | 'canManageProducts' | 'canProcessOrders';\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  reason?: string;\n}\n\nexport function RestrictedAction({\n  action,\n  children,\n  fallback,\n  reason\n}: RestrictedActionProps) {\n  const canPerform = useCanPerform(action);\n\n  if (!canPerform) {\n    return fallback ? <>{fallback}</> : null;\n  }\n\n  return <>{children}</>;\n}\n\ninterface RestrictedSectionProps {\n  action: 'canCreate' | 'canEdit' | 'canDelete' | 'canManageUsers' | 'canManageOutlets' | 'canManageProducts' | 'canProcessOrders';\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  reason?: string;\n  className?: string;\n}\n\nexport function RestrictedSection({\n  action,\n  children,\n  fallback,\n  reason,\n  className = ''\n}: RestrictedSectionProps) {\n  const canPerform = useCanPerform(action);\n\n  if (!canPerform) {\n    return fallback ? <div className={className}>{fallback}</div> : null;\n  }\n\n  return <div className={className}>{children}</div>;\n}\n","'use client'\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button,\n  Badge,\n  Pagination\n} from '@rentalshop/ui';\nimport { formatDate, formatCurrency } from '@rentalshop/utils';\nimport { Download, FileText, Eye, Filter } from 'lucide-react';\n\ninterface Payment {\n  id: number;\n  amount: number;\n  currency: string;\n  method: string;\n  status: string;\n  transactionId: string;\n  description?: string;\n  createdAt: Date;\n  invoiceNumber?: string;\n}\n\ninterface PaymentHistoryTableProps {\n  subscriptionId: number;\n  payments: Payment[];\n  loading?: boolean;\n  onViewPayment?: (payment: Payment) => void;\n  onDownloadInvoice?: (payment: Payment) => void;\n  pagination?: {\n    page: number;\n    limit: number;\n    total: number;\n    onPageChange: (page: number) => void;\n  };\n}\n\nexport function PaymentHistoryTable({\n  subscriptionId,\n  payments,\n  loading = false,\n  onViewPayment,\n  onDownloadInvoice,\n  pagination\n}: PaymentHistoryTableProps) {\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [methodFilter, setMethodFilter] = useState<string>('all');\n\n  const getStatusBadge = (status: string) => {\n    const statusMap: Record<string, { variant: any; label: string }> = {\n      COMPLETED: { variant: 'success', label: 'Paid' },\n      PENDING: { variant: 'warning', label: 'Pending' },\n      FAILED: { variant: 'danger', label: 'Failed' },\n      REFUNDED: { variant: 'secondary', label: 'Refunded' }\n    };\n\n    const config = statusMap[status] || { variant: 'default', label: status };\n    return <Badge variant={config.variant}>{config.label}</Badge>;\n  };\n\n  const getMethodIcon = (method: string) => {\n    switch (method.toUpperCase()) {\n      case 'STRIPE':\n        return '💳';\n      case 'TRANSFER':\n        return '🏦';\n      case 'MANUAL':\n        return '✏️';\n      default:\n        return '💰';\n    }\n  };\n\n  const exportToCSV = () => {\n    const csv = [\n      ['Date', 'Amount', 'Method', 'Status', 'Transaction ID'].join(','),\n      ...payments.map(p => [\n        formatDate(p.createdAt, 'MMM dd, yyyy'),\n        p.amount,\n        p.method,\n        p.status,\n        p.transactionId\n      ].join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `payment-history-${subscriptionId}-${Date.now()}.csv`;\n    a.click();\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto\" />\n          <p className=\"mt-4 text-gray-600\">Loading payment history...</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>💳 Payment History</CardTitle>\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" size=\"sm\" onClick={exportToCSV}>\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export CSV\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {payments.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <FileText className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n            <p className=\"text-gray-600\">No payment history yet</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"border-b\">\n                  <tr className=\"text-left text-sm text-gray-600\">\n                    <th className=\"pb-3 font-medium\">Date</th>\n                    <th className=\"pb-3 font-medium\">Amount</th>\n                    <th className=\"pb-3 font-medium\">Method</th>\n                    <th className=\"pb-3 font-medium\">Status</th>\n                    <th className=\"pb-3 font-medium\">Transaction ID</th>\n                    <th className=\"pb-3 font-medium\">Invoice</th>\n                    <th className=\"pb-3 font-medium text-right\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {payments.map((payment) => (\n                    <tr key={payment.id} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"py-4 text-sm\">\n                        {formatDate(new Date(payment.createdAt), 'MMM dd, yyyy')}\n                      </td>\n                      <td className=\"py-4 text-sm font-semibold\">\n                        {formatCurrency(payment.amount, payment.currency)}\n                      </td>\n                      <td className=\"py-4 text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <span>{getMethodIcon(payment.method)}</span>\n                          <span className=\"capitalize\">\n                            {payment.method.toLowerCase()}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"py-4 text-sm\">\n                        {getStatusBadge(payment.status)}\n                      </td>\n                      <td className=\"py-4 text-sm font-mono\">\n                        {payment.transactionId}\n                      </td>\n                      <td className=\"py-4 text-sm\">\n                        {payment.invoiceNumber ? (\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => onDownloadInvoice?.(payment)}\n                          >\n                            <FileText className=\"w-4 h-4 mr-1\" />\n                            {payment.invoiceNumber}\n                          </Button>\n                        ) : (\n                          <span className=\"text-gray-400\">N/A</span>\n                        )}\n                      </td>\n                      <td className=\"py-4 text-sm text-right\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => onViewPayment?.(payment)}\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                        </Button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            {pagination && pagination.total > pagination.limit && (\n              <div className=\"mt-6\">\n                <Pagination\n                  currentPage={pagination.page}\n                  totalPages={Math.ceil(pagination.total / pagination.limit)}\n                  onPageChange={pagination.onPageChange}\n                />\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\n","'use client'\n\nimport React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Button,\n  Input,\n  Label,\n  Textarea,\n  Badge,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@rentalshop/ui';\nimport { formatDate, formatCurrency } from '@rentalshop/utils';\nimport { \n  RENEWAL_DURATIONS,\n  type RenewalMonths \n} from '@rentalshop/constants';\nimport { \n  calculateRenewalPrice, \n  calculateSavings,\n  getDiscountPercentage\n} from '@rentalshop/utils';\nimport { CreditCard, Building2, AlertCircle } from 'lucide-react';\n\ninterface ManualRenewalModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  subscription: {\n    id: number;\n    merchantName: string;\n    planName: string;\n    amount: number;\n    currency: string;\n    currentPeriodEnd: Date;\n  };\n  onRenew: (data: RenewalData) => Promise<void>;\n  loading?: boolean;\n}\n\ninterface RenewalData {\n  method: 'STRIPE' | 'TRANSFER';\n  transactionId: string;\n  reference?: string;\n  description?: string;\n}\n\nexport function ManualRenewalModal({\n  isOpen,\n  onClose,\n  subscription,\n  onRenew,\n  loading = false\n}: ManualRenewalModalProps) {\n  const [method, setMethod] = useState<'STRIPE' | 'TRANSFER'>('TRANSFER');\n  const [duration, setDuration] = useState<RenewalMonths>(1);\n  const [transactionId, setTransactionId] = useState('');\n  const [reference, setReference] = useState('');\n  const [description, setDescription] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Use centralized pricing functions\n  const calculateTotal = () => calculateRenewalPrice(subscription.amount, duration);\n  const getSavings = () => calculateSavings(subscription.amount, duration);\n\n  const nextPeriodStart = new Date(subscription.currentPeriodEnd);\n  const nextPeriodEnd = new Date(nextPeriodStart);\n  nextPeriodEnd.setMonth(nextPeriodEnd.getMonth() + duration);\n\n  const validate = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!transactionId.trim()) {\n      newErrors.transactionId = 'Transaction ID is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validate()) return;\n\n    try {\n      await onRenew({\n        method,\n        transactionId,\n        reference: reference || undefined,\n        description: description || `${duration} month${duration > 1 ? 's' : ''} subscription renewal - ${formatDate(new Date(), 'MMMM yyyy')}`\n      });\n\n      // Reset form\n      setTransactionId('');\n      setReference('');\n      setDescription('');\n      onClose();\n    } catch (error) {\n      console.error('Renewal failed:', error);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-hidden flex flex-col\">\n        <DialogHeader className=\"flex-shrink-0\">\n          <DialogTitle className=\"flex items-center gap-2\">\n            <CreditCard className=\"h-5 w-5 text-green-500\" />\n            Renew Subscription\n          </DialogTitle>\n          <DialogDescription>\n            Extend subscription for {subscription.merchantName}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6 overflow-y-auto flex-1 pr-2\">\n          {/* Current Plan Display */}\n          <div className=\"p-4 bg-gray-50 border rounded-lg\">\n            <p className=\"text-sm text-gray-600 mb-1\">Current Plan</p>\n            <div className=\"flex items-center justify-between\">\n              <p className=\"font-semibold text-lg\">{subscription.planName}</p>\n              <p className=\"font-semibold text-lg\">{formatCurrency(subscription.amount, subscription.currency)}/month</p>\n            </div>\n            <p className=\"text-sm text-gray-500 mt-2\">\n              Expires: {formatDate(subscription.currentPeriodEnd, 'MMM dd, yyyy')}\n            </p>\n          </div>\n\n          {/* Renewal Duration Selection */}\n          <div>\n            <Label htmlFor=\"duration\">Renewal Period *</Label>\n            <Select \n              value={duration.toString()} \n              onValueChange={(value) => setDuration(parseInt(value) as RenewalMonths)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Choose renewal period...\" />\n              </SelectTrigger>\n              <SelectContent>\n                {RENEWAL_DURATIONS.map((option) => {\n                  const discount = getDiscountPercentage(option.months);\n                  const price = calculateRenewalPrice(subscription.amount, option.months);\n                  const endDate = new Date(nextPeriodStart);\n                  endDate.setMonth(endDate.getMonth() + option.months);\n                  \n                  return (\n                    <SelectItem key={option.months} value={option.months.toString()}>\n                      <div className=\"flex flex-col py-1\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"font-medium\">{option.name} ({option.label})</span>\n                          <span className=\"font-semibold\">{formatCurrency(price, subscription.currency)}</span>\n                          {discount > 0 && (\n                            <span className=\"text-xs bg-green-100 text-green-700 px-1.5 py-0.5 rounded\">\n                              Save {discount}%\n                            </span>\n                          )}\n                        </div>\n                        <span className=\"text-xs text-gray-500 mt-0.5\">\n                          Period: {formatDate(nextPeriodStart, 'MMM dd')} - {formatDate(endDate, 'MMM dd, yyyy')}\n                        </span>\n                      </div>\n                    </SelectItem>\n                  );\n                })}\n              </SelectContent>\n            </Select>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Longer renewal periods offer better discounts\n            </p>\n          </div>\n\n          {/* Pricing Summary */}\n          <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <p className=\"font-medium text-blue-900 mb-2\">Pricing Summary</p>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Duration:</span>\n                <span className=\"font-medium\">\n                  {RENEWAL_DURATIONS.find(d => d.months === duration)?.name}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Period:</span>\n                <span className=\"font-medium\">\n                  {formatDate(nextPeriodStart, 'MMM dd')} - {formatDate(nextPeriodEnd, 'MMM dd, yyyy')}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Base Price:</span>\n                <span className=\"font-medium\">{formatCurrency(subscription.amount * duration, subscription.currency)}</span>\n              </div>\n              {getSavings() > 0 && (\n                <div className=\"flex justify-between text-green-700\">\n                  <span>Discount ({getDiscountPercentage(duration)}%):</span>\n                  <span className=\"font-medium\">-{formatCurrency(getSavings(), subscription.currency)}</span>\n                </div>\n              )}\n              <div className=\"flex justify-between pt-2 border-t text-base\">\n                <span className=\"font-semibold\">Total:</span>\n                <span className=\"font-bold text-blue-900\">{formatCurrency(calculateTotal(), subscription.currency)}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Payment Method */}\n          <div>\n            <Label>Payment Method *</Label>\n            <div className=\"grid grid-cols-2 gap-3 mt-2\">\n              <Button\n                variant=\"outline\"\n                type=\"button\"\n                onClick={() => setMethod('TRANSFER')}\n                className={`p-3 border-2 rounded-lg text-left transition-all justify-start h-auto ${\n                  method === 'TRANSFER' \n                    ? 'border-blue-500 bg-blue-50' \n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Building2 className=\"w-5 h-5 text-gray-600\" />\n                  <span className=\"font-medium\">Bank Transfer</span>\n                </div>\n              </Button>\n              <Button\n                variant=\"outline\"\n                type=\"button\"\n                onClick={() => setMethod('STRIPE')}\n                className={`p-3 border-2 rounded-lg text-left transition-all justify-start h-auto ${\n                  method === 'STRIPE' \n                    ? 'border-blue-500 bg-blue-50' \n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <CreditCard className=\"w-5 h-5 text-gray-600\" />\n                  <span className=\"font-medium\">Stripe</span>\n                </div>\n              </Button>\n            </div>\n          </div>\n\n          {/* Transaction ID */}\n          <div>\n            <Label htmlFor=\"transactionId\">\n              Transaction ID *\n              <span className=\"text-gray-500 text-sm font-normal ml-2\">\n                {method === 'STRIPE' ? '(e.g., txn_1234567890)' : '(Bank reference number)'}\n              </span>\n            </Label>\n            <Input\n              id=\"transactionId\"\n              value={transactionId}\n              onChange={(e) => setTransactionId(e.target.value)}\n              placeholder={method === 'STRIPE' ? 'txn_1234567890' : 'BANK-REF-123'}\n              className={errors.transactionId ? 'border-red-500' : ''}\n            />\n            {errors.transactionId && (\n              <p className=\"text-sm text-red-600 flex items-center gap-1 mt-1\">\n                <AlertCircle className=\"w-4 h-4\" />\n                {errors.transactionId}\n              </p>\n            )}\n          </div>\n\n          {/* Reference Number */}\n          <div>\n            <Label htmlFor=\"reference\">Reference Number (Optional)</Label>\n            <Input\n              id=\"reference\"\n              value={reference}\n              onChange={(e) => setReference(e.target.value)}\n              placeholder=\"REF-2025-001\"\n            />\n          </div>\n\n          {/* Description */}\n          <div>\n            <Label htmlFor=\"description\">Description (Optional)</Label>\n            <Textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              placeholder={`${duration} month${duration > 1 ? 's' : ''} subscription renewal - ${formatDate(new Date(), 'MMMM yyyy')}`}\n              rows={2}\n            />\n          </div>\n        </div>\n\n        <DialogFooter className=\"flex-shrink-0 border-t pt-4 mt-4\">\n          <Button variant=\"outline\" onClick={onClose} disabled={loading}>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} disabled={loading}>\n            {loading ? 'Processing...' : 'Process Renewal'}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  Button,\n  Label,\n  Card\n} from '@rentalshop/ui';\nimport { formatDate, formatCurrency } from '@rentalshop/utils';\nimport { Check, CreditCard, Building2, Sparkles } from 'lucide-react';\n\ninterface Plan {\n  id: number;\n  name: string;\n  description: string;\n  basePrice: number;\n  limits?: any;\n  features?: string[];\n  isPopular?: boolean;\n}\n\ninterface UpgradeTrialModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  subscription: {\n    id: number;\n    merchantName: string;\n  };\n  plans: Plan[];\n  onUpgrade: (planId: number, billingCycle: string, paymentMethod: string) => Promise<void>;\n  loading?: boolean;\n}\n\nexport function UpgradeTrialModal({\n  isOpen,\n  onClose,\n  subscription,\n  plans,\n  onUpgrade,\n  loading = false\n}: UpgradeTrialModalProps) {\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [billingCycle, setBillingCycle] = useState<'month' | 'quarter' | 'year'>('month');\n  const [paymentMethod, setPaymentMethod] = useState<'STRIPE' | 'TRANSFER'>('STRIPE');\n\n  // Select first non-trial plan by default\n  useEffect(() => {\n    if (plans.length > 0 && !selectedPlan) {\n      const firstPaidPlan = plans.find(p => p.name !== 'Trial' && p.basePrice > 0);\n      if (firstPaidPlan) {\n        setSelectedPlan(firstPaidPlan);\n      }\n    }\n  }, [plans, selectedPlan]);\n\n  const calculatePrice = (basePrice: number, cycle: string) => {\n    switch (cycle) {\n      case 'quarter':\n        return basePrice * 3 * 0.9; // 10% discount\n      case 'year':\n        return basePrice * 12 * 0.8; // 20% discount\n      default:\n        return basePrice;\n    }\n  };\n\n  const getSavings = (basePrice: number, cycle: string) => {\n    const fullPrice = cycle === 'quarter' ? basePrice * 3 : cycle === 'year' ? basePrice * 12 : basePrice;\n    const discountedPrice = calculatePrice(basePrice, cycle);\n    return fullPrice - discountedPrice;\n  };\n\n  const getNextBillingDate = () => {\n    const now = new Date();\n    const next = new Date(now);\n    switch (billingCycle) {\n      case 'quarter':\n        next.setMonth(next.getMonth() + 3);\n        break;\n      case 'year':\n        next.setFullYear(next.getFullYear() + 1);\n        break;\n      default:\n        next.setMonth(next.getMonth() + 1);\n    }\n    return next;\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedPlan) return;\n\n    try {\n      await onUpgrade(selectedPlan.id, billingCycle, paymentMethod);\n      onClose();\n    } catch (error) {\n      console.error('Upgrade failed:', error);\n    }\n  };\n\n  const paidPlans = plans.filter(p => p.name !== 'Trial' && p.basePrice > 0);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>📈 Upgrade Subscription</DialogTitle>\n          <DialogDescription>\n            Upgrade from Trial to a paid plan to unlock all features\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Current Status */}\n          <div className=\"bg-yellow-50 border border-yellow-200 p-4 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <Sparkles className=\"w-5 h-5 text-yellow-600\" />\n              <div>\n                <p className=\"font-medium text-yellow-900\">Currently on Trial</p>\n                <p className=\"text-sm text-yellow-700\">Upgrade now to continue using {subscription.merchantName}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Plan Selection */}\n          <div className=\"space-y-4\">\n            <Label className=\"text-lg font-semibold\">Choose a Plan *</Label>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {paidPlans.map((plan) => (\n                <Card\n                  key={plan.id}\n                  className={`cursor-pointer transition-all ${\n                    selectedPlan?.id === plan.id \n                      ? 'border-blue-500 bg-blue-50 shadow-lg' \n                      : 'hover:border-gray-400'\n                  } ${plan.isPopular ? 'ring-2 ring-blue-500' : ''}`}\n                  onClick={() => setSelectedPlan(plan)}\n                >\n                  <div className=\"p-4 space-y-3\">\n                    {plan.isPopular && (\n                      <div className=\"bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded inline-block\">\n                        POPULAR\n                      </div>\n                    )}\n                    <div>\n                      <h3 className=\"font-bold text-lg\">{plan.name}</h3>\n                      <p className=\"text-sm text-gray-600\">{plan.description}</p>\n                    </div>\n                    <div className=\"text-2xl font-bold\">\n                      {formatCurrency(plan.basePrice, 'USD')}\n                      <span className=\"text-sm text-gray-600 font-normal\">/month</span>\n                    </div>\n                    {plan.limits && (\n                      <ul className=\"text-sm space-y-1\">\n                        <li>• {plan.limits.outlets || 0} outlets</li>\n                        <li>• {plan.limits.users || 0} users</li>\n                        <li>• {plan.limits.products === 999999 ? 'Unlimited' : plan.limits.products} products</li>\n                      </ul>\n                    )}\n                    {selectedPlan?.id === plan.id && (\n                      <div className=\"flex items-center gap-1 text-blue-700 font-medium\">\n                        <Check className=\"w-4 h-4\" />\n                        Selected\n                      </div>\n                    )}\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Billing Cycle */}\n          {selectedPlan && (\n            <div className=\"space-y-4\">\n              <Label className=\"text-lg font-semibold\">Billing Cycle *</Label>\n              <div className=\"space-y-2\">\n                <div \n                  className={`flex items-center justify-between p-4 border rounded-lg cursor-pointer hover:bg-gray-50 ${\n                    billingCycle === 'month' ? 'border-blue-500 bg-blue-50' : ''\n                  }`}\n                  onClick={() => setBillingCycle('month')}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <input\n                      type=\"radio\"\n                      checked={billingCycle === 'month'}\n                      onChange={() => setBillingCycle('month')}\n                      className=\"cursor-pointer\"\n                    />\n                    <div>\n                      <p className=\"font-medium\">Monthly</p>\n                      <p className=\"text-sm text-gray-600\">{formatCurrency(selectedPlan.basePrice, 'USD')}/month</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div \n                  className={`flex items-center justify-between p-4 border rounded-lg cursor-pointer hover:bg-gray-50 ${\n                    billingCycle === 'quarter' ? 'border-blue-500 bg-blue-50' : ''\n                  }`}\n                  onClick={() => setBillingCycle('quarter')}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <input\n                      type=\"radio\"\n                      checked={billingCycle === 'quarter'}\n                      onChange={() => setBillingCycle('quarter')}\n                      className=\"cursor-pointer\"\n                    />\n                    <div>\n                      <p className=\"font-medium\">Quarterly</p>\n                      <p className=\"text-sm text-gray-600\">{formatCurrency(calculatePrice(selectedPlan.basePrice, 'quarter'), 'USD')}/quarter</p>\n                    </div>\n                  </div>\n                  <div className=\"bg-green-100 text-green-700 text-xs font-bold px-2 py-1 rounded\">\n                    Save 10%\n                  </div>\n                </div>\n\n                <div \n                  className={`flex items-center justify-between p-4 border rounded-lg cursor-pointer hover:bg-gray-50 ${\n                    billingCycle === 'year' ? 'border-blue-500 bg-blue-50' : ''\n                  }`}\n                  onClick={() => setBillingCycle('year')}\n                >\n                  <div className=\"flex items-center gap-3\">\n                    <input\n                      type=\"radio\"\n                      checked={billingCycle === 'year'}\n                      onChange={() => setBillingCycle('year')}\n                      className=\"cursor-pointer\"\n                    />\n                    <div>\n                      <p className=\"font-medium\">Yearly</p>\n                      <p className=\"text-sm text-gray-600\">{formatCurrency(calculatePrice(selectedPlan.basePrice, 'year'), 'USD')}/year</p>\n                    </div>\n                  </div>\n                  <div className=\"bg-green-100 text-green-700 text-xs font-bold px-2 py-1 rounded\">\n                    Save 20%\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Payment Method */}\n          {selectedPlan && (\n            <div className=\"space-y-4\">\n              <Label className=\"text-lg font-semibold\">Payment Method *</Label>\n              <div className=\"space-y-2\">\n                <div \n                  className={`flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer ${\n                    paymentMethod === 'STRIPE' ? 'border-blue-500 bg-blue-50' : ''\n                  }`}\n                  onClick={() => setPaymentMethod('STRIPE')}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === 'STRIPE'}\n                    onChange={() => setPaymentMethod('STRIPE')}\n                    className=\"cursor-pointer\"\n                  />\n                  <Label className=\"flex items-center gap-2 cursor-pointer flex-1\">\n                    <CreditCard className=\"w-4 h-4\" />\n                    <span>Stripe (Card Payment)</span>\n                  </Label>\n                </div>\n                <div \n                  className={`flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer ${\n                    paymentMethod === 'TRANSFER' ? 'border-blue-500 bg-blue-50' : ''\n                  }`}\n                  onClick={() => setPaymentMethod('TRANSFER')}\n                >\n                  <input\n                    type=\"radio\"\n                    checked={paymentMethod === 'TRANSFER'}\n                    onChange={() => setPaymentMethod('TRANSFER')}\n                    className=\"cursor-pointer\"\n                  />\n                  <Label className=\"flex items-center gap-2 cursor-pointer flex-1\">\n                    <Building2 className=\"w-4 h-4\" />\n                    <span>Bank Transfer</span>\n                  </Label>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Payment Summary */}\n          {selectedPlan && (\n            <Card className=\"bg-gray-50 border-gray-200\">\n              <div className=\"p-4 space-y-2\">\n                <h3 className=\"font-semibold\">Payment Summary</h3>\n                <div className=\"space-y-1 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>First payment:</span>\n                    <span className=\"font-semibold\">\n                      {formatCurrency(calculatePrice(selectedPlan.basePrice, billingCycle), 'USD')}\n                      {billingCycle === 'quarter' && ' (3 months)'}\n                      {billingCycle === 'year' && ' (12 months)'}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Next billing:</span>\n                    <span>{formatDate(getNextBillingDate(), 'MMM dd, yyyy')}</span>\n                  </div>\n                  {getSavings(selectedPlan.basePrice, billingCycle) > 0 && (\n                    <div className=\"flex justify-between text-green-600 font-medium\">\n                      <span>You save:</span>\n                      <span>{formatCurrency(getSavings(selectedPlan.basePrice, billingCycle), 'USD')}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </Card>\n          )}\n        </div>\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={onClose} disabled={loading}>\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} disabled={loading || !selectedPlan}>\n            {loading ? (\n              <>\n                <div className=\"animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\" />\n                Processing...\n              </>\n            ) : (\n              <>🚀 Upgrade Now</>\n            )}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n","'use client'\n\nimport React from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Badge,\n  Button\n} from '../../../ui';\nimport { formatDate, formatCurrency } from '@rentalshop/utils';\nimport { \n  Clock,\n  TrendingUp,\n  TrendingDown,\n  RefreshCw,\n  XCircle,\n  Pause,\n  Play,\n  CreditCard,\n  User,\n  Download,\n  DollarSign,\n  AlertCircle,\n  AlertTriangle,\n  Percent,\n  RotateCcw,\n  FileText,\n  Bell\n} from 'lucide-react';\n\ninterface SubscriptionActivity {\n  id: number;\n  type: string; // 'subscription_created' | 'plan_changed' | 'subscription_paused' | etc.\n  description: string;\n  timestamp: string;\n  metadata?: {\n    planId?: number;\n    planName?: string;\n    status?: string;\n    amount?: number;\n    currency?: string;\n    performedBy?: {\n      userId: number;\n      email: string;\n      role: string;\n      name?: string;\n    };\n    previousPlan?: {\n      id: number;\n      name: string;\n      amount: number;\n    };\n    newPlan?: {\n      id: number;\n      name: string;\n      amount: number;\n    };\n    paymentMethod?: string;\n    transactionId?: string;\n    invoiceNumber?: string;\n    effectiveDate?: string;\n    nextBillingDate?: string;\n    trialEndDate?: string;\n    reason?: string;\n    source?: string;\n    severity?: 'info' | 'warning' | 'error' | 'success';\n    category?: 'billing' | 'plan' | 'payment' | 'system' | 'user';\n  };\n}\n\ninterface Payment {\n  id: number;\n  amount: number;\n  currency: string;\n  method: string;\n  status: string;\n  transactionId: string;\n  description?: string;\n  createdAt: Date;\n}\n\ninterface SubscriptionActivityTimelineProps {\n  activities: SubscriptionActivity[];\n  payments: Payment[];\n  loading?: boolean;\n  onExport?: () => void;\n}\n\nexport function SubscriptionActivityTimeline({\n  activities,\n  payments,\n  loading = false,\n  onExport\n}: SubscriptionActivityTimelineProps) {\n  \n  // Merge activities and payments into timeline\n  const timeline = React.useMemo(() => {\n    const items: any[] = [];\n\n    // Add activities (already have timestamp as string)\n    activities.forEach(activity => {\n      items.push({\n        itemType: 'activity',\n        ...activity,\n        timestamp: new Date(activity.timestamp)\n      });\n    });\n\n    // Add payments\n    payments.forEach(payment => {\n      items.push({\n        itemType: 'payment',\n        ...payment,\n        type: payment.type, // Keep payment type from API\n        timestamp: new Date(payment.createdAt)\n      });\n    });\n\n    // Sort by timestamp (newest first)\n    return items.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n  }, [activities, payments]);\n\n  const getActivityIcon = (action: string) => {\n    switch (action.toUpperCase()) {\n      case 'PLAN_CHANGED':\n      case 'PLAN_UPGRADED':\n      case 'PLAN_DOWNGRADED':\n        return TrendingUp;\n      case 'SUBSCRIPTION_ACTIVATED':\n      case 'BILLING_CYCLE_RENEWED':\n        return RefreshCw;\n      case 'SUBSCRIPTION_CANCELLED':\n      case 'CANCEL':\n      case 'CANCELLATION':\n        return XCircle;\n      case 'SUBSCRIPTION_PAUSED':\n      case 'PAUSE':\n        return Pause;\n      case 'SUBSCRIPTION_RESUMED':\n      case 'RESUME':\n        return Play;\n      case 'SUBSCRIPTION_CREATED':\n      case 'CREATE':\n        return CreditCard;\n      case 'PAYMENT_RECEIVED':\n        return DollarSign;\n      case 'PAYMENT_FAILED':\n        return AlertCircle;\n      case 'TRIAL_STARTED':\n        return Clock;\n      case 'TRIAL_ENDED':\n        return AlertTriangle;\n      case 'DISCOUNT_APPLIED':\n        return Percent;\n      case 'REFUND_PROCESSED':\n        return RotateCcw;\n      case 'INVOICE_GENERATED':\n        return FileText;\n      case 'REMINDER_SENT':\n        return Bell;\n      case 'DUNNING_STARTED':\n        return AlertTriangle;\n      case 'SUBSCRIPTION_EXPIRED':\n        return AlertCircle;\n      case 'SUBSCRIPTION_REACTIVATED':\n        return Play;\n      default:\n        return Clock;\n    }\n  };\n\n  const getActivityColor = (action: string) => {\n    switch (action.toUpperCase()) {\n      case 'PLAN_CHANGED':\n      case 'PLAN_UPGRADED':\n      case 'PLAN_DOWNGRADED':\n        return 'text-blue-700 bg-blue-100';\n      case 'SUBSCRIPTION_ACTIVATED':\n      case 'BILLING_CYCLE_RENEWED':\n      case 'RENEWAL':\n      case 'RENEW':\n        return 'text-green-600 bg-green-100';\n      case 'SUBSCRIPTION_CANCELLED':\n      case 'CANCEL':\n      case 'CANCELLATION':\n        return 'text-red-600 bg-red-100';\n      case 'SUBSCRIPTION_PAUSED':\n      case 'PAUSE':\n        return 'text-orange-600 bg-orange-100';\n      case 'SUBSCRIPTION_RESUMED':\n      case 'RESUME':\n        return 'text-purple-600 bg-purple-100';\n      case 'SUBSCRIPTION_CREATED':\n      case 'CREATE':\n        return 'text-indigo-600 bg-indigo-100';\n      case 'PAYMENT_RECEIVED':\n        return 'text-green-600 bg-green-100';\n      case 'PAYMENT_FAILED':\n        return 'text-red-600 bg-red-100';\n      case 'TRIAL_STARTED':\n        return 'text-blue-700 bg-blue-100';\n      case 'TRIAL_ENDED':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'DISCOUNT_APPLIED':\n        return 'text-green-600 bg-green-100';\n      case 'REFUND_PROCESSED':\n        return 'text-orange-600 bg-orange-100';\n      case 'INVOICE_GENERATED':\n        return 'text-indigo-600 bg-indigo-100';\n      case 'REMINDER_SENT':\n        return 'text-blue-700 bg-blue-100';\n      case 'DUNNING_STARTED':\n        return 'text-red-600 bg-red-100';\n      case 'SUBSCRIPTION_EXPIRED':\n        return 'text-red-600 bg-red-100';\n      case 'SUBSCRIPTION_REACTIVATED':\n        return 'text-green-600 bg-green-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getPaymentStatusBadge = (status: string) => {\n    const statusMap: Record<string, { variant: any; label: string }> = {\n      COMPLETED: { variant: 'success', label: 'Paid' },\n      PENDING: { variant: 'warning', label: 'Pending' },\n      FAILED: { variant: 'danger', label: 'Failed' }\n    };\n\n    const config = statusMap[status] || { variant: 'default', label: status };\n    return <Badge variant={config.variant}>{config.label}</Badge>;\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-8 text-center\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto\" />\n          <p className=\"mt-4 text-gray-600\">Loading activity history...</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>📊 Subscription Activity & Payment History</CardTitle>\n          {onExport && (\n            <Button variant=\"outline\" size=\"sm\" onClick={onExport}>\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {timeline.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <Clock className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n            <p className=\"text-gray-600\">No activity yet</p>\n          </div>\n        ) : (\n          <div className=\"relative\">\n            {/* Timeline line */}\n            <div className=\"absolute left-6 top-0 bottom-0 w-0.5 bg-gray-200\" />\n\n            <div className=\"space-y-6\">\n              {timeline.map((item, index) => {\n                if (item.itemType === 'activity') {\n                  const Icon = getActivityIcon(item.type);\n                  const colorClass = getActivityColor(item.type);\n\n                  return (\n                    <div key={`activity-${item.id}-${index}`} className=\"relative pl-14\">\n                      {/* Icon */}\n                      <div className={`absolute left-3 w-6 h-6 rounded-full ${colorClass} flex items-center justify-center`}>\n                        <Icon className=\"w-3 h-3\" />\n                      </div>\n\n                      {/* Content */}\n                      <div className=\"bg-white border rounded-lg p-4 shadow-sm\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <h4 className=\"font-semibold text-gray-900\">\n                                {item.description}\n                              </h4>\n                              {/* Activity type badge */}\n                              <Badge \n                                variant={\n                                  item.metadata?.severity === 'error' ? 'destructive' :\n                                  item.metadata?.severity === 'warning' ? 'warning' :\n                                  item.metadata?.severity === 'success' ? 'success' :\n                                  'secondary'\n                                }\n                              >\n                                {item.type?.replace(/_/g, ' ').toUpperCase()}\n                              </Badge>\n                            </div>\n                            \n                            {/* User info from metadata */}\n                            {item.metadata?.performedBy && (\n                              <p className=\"text-sm text-gray-600 mb-2\">\n                                <User className=\"w-3 h-3 inline mr-1\" />\n                                By: {item.metadata.performedBy.name} ({item.metadata.performedBy.email})\n                                <span className=\"ml-2 text-xs bg-gray-100 px-2 py-0.5 rounded\">\n                                  {item.metadata.performedBy.role}\n                                </span>\n                              </p>\n                            )}\n\n                            {/* Enhanced metadata details */}\n                            {item.metadata && (\n                              <div className=\"text-sm text-gray-700 space-y-1 mt-2\">\n                                {/* Plan information */}\n                                {item.metadata.planName && (\n                                  <div>• Plan: <span className=\"font-medium\">{item.metadata.planName}</span></div>\n                                )}\n                                \n                                {/* Amount information */}\n                                {item.metadata.amount !== undefined && (\n                                  <div>• Amount: <span className=\"font-semibold\">{formatCurrency(item.metadata.amount, item.metadata.currency || 'USD')}</span></div>\n                                )}\n                                \n                                {/* Status information */}\n                                {item.metadata.status && (\n                                  <div>• Status: <span className=\"font-medium capitalize\">{item.metadata.status.toLowerCase()}</span></div>\n                                )}\n                                \n                                {/* Payment method */}\n                                {item.metadata.paymentMethod && (\n                                  <div>• Method: <span className=\"capitalize\">{item.metadata.paymentMethod.toLowerCase()}</span></div>\n                                )}\n                                \n                                {/* Transaction ID */}\n                                {item.metadata.transactionId && (\n                                  <div>• Transaction: <span className=\"font-mono text-xs\">{item.metadata.transactionId}</span></div>\n                                )}\n                                \n                                {/* Invoice number */}\n                                {item.metadata.invoiceNumber && (\n                                  <div>• Invoice: <span className=\"font-mono text-xs\">{item.metadata.invoiceNumber}</span></div>\n                                )}\n                                \n                                {/* Plan changes */}\n                                {item.metadata.newPlan && (\n                                  <div>• New Plan: <span className=\"font-medium\">{item.metadata.newPlan.name} ({formatCurrency(item.metadata.newPlan.amount, item.metadata.currency || 'USD')})</span></div>\n                                )}\n                                \n                                {/* Previous plan */}\n                                {item.metadata.previousPlan && (\n                                  <div>• Previous: <span className=\"text-gray-500\">{item.metadata.previousPlan.name} ({formatCurrency(item.metadata.previousPlan.amount, item.metadata.currency || 'USD')})</span></div>\n                                )}\n                                \n                                {/* Effective date */}\n                                {item.metadata.effectiveDate && (\n                                  <div>• Effective: <span className=\"font-medium\">{formatDate(item.metadata.effectiveDate, 'MMM dd, yyyy')}</span></div>\n                                )}\n                                \n                                {/* Next billing date */}\n                                {item.metadata.nextBillingDate && (\n                                  <div>• Next Billing: <span className=\"font-medium\">{formatDate(item.metadata.nextBillingDate, 'MMM dd, yyyy')}</span></div>\n                                )}\n                                \n                                {/* Trial end date */}\n                                {item.metadata.trialEndDate && (\n                                  <div>• Trial Ends: <span className=\"font-medium\">{formatDate(item.metadata.trialEndDate, 'MMM dd, yyyy')}</span></div>\n                                )}\n                                \n                                {/* Reason */}\n                                {item.metadata.reason && (\n                                  <div>• Reason: <span className=\"italic text-gray-600\">{item.metadata.reason}</span></div>\n                                )}\n                                \n                                {/* Source */}\n                                {item.metadata.source && (\n                                  <div>• Source: <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-0.5 rounded\">{item.metadata.source.replace(/_/g, ' ').toUpperCase()}</span></div>\n                                )}\n                              </div>\n                            )}\n                          </div>\n\n                          <div className=\"text-right text-sm text-gray-500 ml-4\">\n                            {formatDate(item.timestamp, 'MMM dd, yyyy')}\n                            <br />\n                            {formatDate(item.timestamp, 'HH:mm')}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                } else {\n                  // Payment item\n                  return (\n                    <div key={`payment-${item.id}-${index}`} className=\"relative pl-14\">\n                      {/* Icon */}\n                      <div className=\"absolute left-3 w-6 h-6 rounded-full bg-green-100 text-green-600 flex items-center justify-center\">\n                        <CreditCard className=\"w-3 h-3\" />\n                      </div>\n\n                      {/* Content */}\n                      <div className=\"bg-white border rounded-lg p-4 shadow-sm\">\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center gap-2 mb-1\">\n                              <h4 className=\"font-semibold text-gray-900\">\n                                💰 Payment Received\n                              </h4>\n                              {getPaymentStatusBadge(item.status)}\n                            </div>\n                            \n                            <div className=\"text-sm text-gray-700 space-y-1\">\n                              <div>• Amount: <span className=\"font-semibold\">{formatCurrency(item.amount, item.currency)}</span></div>\n                              {item.method && <div>• Method: <span className=\"capitalize\">{item.method.toLowerCase()}</span></div>}\n                              {item.transactionId && <div>• Transaction: <span className=\"font-mono text-xs\">{item.transactionId}</span></div>}\n                              {item.description && (\n                                <div className=\"text-gray-600 mt-2\">{item.description}</div>\n                              )}\n                            </div>\n                          </div>\n\n                          <div className=\"text-right text-sm text-gray-500 ml-4\">\n                            {formatDate(item.timestamp, 'MMM dd, yyyy')}\n                            <br />\n                            {formatDate(item.timestamp, 'HH:mm')}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { SubscriptionActivityTimeline } from './SubscriptionActivityTimeline';\nimport { subscriptionsApi } from '@rentalshop/utils';\n\ninterface SubscriptionHistoryDialogProps {\n  subscriptionId?: number;\n  merchantId: number;\n}\n\nexport function SubscriptionHistoryDialog({ \n  subscriptionId, \n  merchantId \n}: SubscriptionHistoryDialogProps) {\n  const [activities, setActivities] = useState<any[]>([]);\n  const [payments, setPayments] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchHistory = async () => {\n    if (!subscriptionId) return;\n    \n    setLoading(true);\n    try {\n      const [activitiesResponse, paymentsResponse] = await Promise.all([\n        subscriptionsApi.getActivities(subscriptionId, 50),\n        subscriptionsApi.getPayments(subscriptionId, 50)\n      ]);\n\n      if (activitiesResponse.success && activitiesResponse.data) {\n        setActivities(activitiesResponse.data);\n      }\n\n      if (paymentsResponse.success && paymentsResponse.data) {\n        setPayments(paymentsResponse.data);\n      }\n    } catch (error) {\n      console.error('Error fetching subscription history:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (subscriptionId) {\n      fetchHistory();\n    }\n  }, [subscriptionId]);\n\n  if (!subscriptionId) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        No subscription found\n      </div>\n    );\n  }\n\n  return (\n    <SubscriptionActivityTimeline\n      activities={activities}\n      payments={payments}\n      loading={loading}\n      onExport={() => {\n        console.log('Export subscription history');\n      }}\n    />\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { useRouter } from 'next/navigation';\nimport { MerchantHeader } from './MerchantHeader';\nimport { MerchantPlanManagement } from './MerchantPlanManagement';\nimport { MerchantSubscriptionSection } from './MerchantSubscriptionSection';\nimport { Button, Card, CardContent, CardHeader, CardTitle } from '../../../ui';\nimport { Building2, Users, Package, ShoppingCart } from 'lucide-react';\nimport type { MerchantDetailData, Plan, Subscription } from '@rentalshop/types';\n\ninterface MerchantDetailProps {\n  data: MerchantDetailData;\n  plans?: Plan[];\n  currentUserRole?: string;\n  onMerchantAction: (action: string, merchantId: number) => void;\n  onOutletAction: (action: string, outletId: number) => void;\n  onUserAction: (action: string, userId: number) => void;\n  onProductAction: (action: string, productId: number) => void;\n  onOrderAction: (action: string, orderId: number) => void;\n  onPlanChange?: (planData: {\n    planId: number;\n    planVariantId?: number;\n    reason?: string;\n    effectiveDate?: string;\n    notifyMerchant?: boolean;\n    billingInterval?: string;\n    duration?: number;\n    discount?: number;\n    totalPrice?: number;\n  }) => Promise<void>;\n  onExtend?: (extendData: { subscription: Subscription; duration: number; billingInterval: string; discount: number; totalPrice: number; }) => Promise<void>;\n  onCancel?: (subscription: Subscription, reason: string, cancelType: 'immediate' | 'end_of_period') => Promise<void>;\n  onSuspend?: (subscription: Subscription, reason: string) => Promise<void>;\n  onReactivate?: (subscription: Subscription) => Promise<void>;\n}\n\nexport function MerchantDetail({\n  data,\n  plans = [],\n  currentUserRole,\n  onMerchantAction,\n  onOutletAction,\n  onUserAction,\n  onProductAction,\n  onOrderAction,\n  onPlanChange,\n  onExtend,\n  onCancel,\n  onSuspend,\n  onReactivate\n}: MerchantDetailProps) {\n  const router = useRouter();\n\n  const navigateToPage = (page: string, id?: number) => {\n    // Navigate within the admin app\n    const url = id ? `/${page}/${id}` : `/${page}`;\n    router.push(url);\n  };\n\n  const handleNavigateToAdmin = (page: string, id?: number) => {\n    navigateToPage(page, id);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Merchant Header with Statistics */}\n      <MerchantHeader \n        merchant={data.merchant}\n        stats={data.stats}\n      />\n\n      {/* Merchant Information */}\n      <div className=\"grid grid-cols-1 gap-6\">\n        {/* Basic Info */}\n        <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n          <CardHeader>\n            <CardTitle>Basic Information</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">Name</label>\n                <p className=\"text-sm text-gray-900 dark:text-white\">{data.merchant.name}</p>\n              </div>\n              <div>\n                <label className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">Email</label>\n                <p className=\"text-sm text-gray-900 dark:text-white\">{data.merchant.email}</p>\n              </div>\n              <div>\n                <label className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">Phone</label>\n                <p className=\"text-sm text-gray-900 dark:text-white\">{data.merchant.phone || 'Not provided'}</p>\n              </div>\n              <div>\n                <label className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">Address</label>\n                <p className=\"text-sm text-gray-900 dark:text-white\">{data.merchant.address || 'Not provided'}</p>\n              </div>\n              <div>\n                <label className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">Description</label>\n                <p className=\"text-sm text-gray-900 dark:text-white\">{data.merchant.description || 'No description'}</p>\n              </div>\n              <div>\n                <label className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">Status</label>\n                <p className={`text-sm ${data.merchant.isActive ? 'text-green-600' : 'text-red-600'}`}>\n                  {data.merchant.isActive ? 'Active' : 'Inactive'}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n      </div>\n\n      {/* Plan Management - Original Component (Keep existing UI) */}\n      {onPlanChange && (\n        <MerchantPlanManagement\n          merchant={{\n            id: data.merchant.id,\n            name: data.merchant.name,\n            email: data.merchant.email,\n            currentPlan: data.merchant.plan ? {\n              id: data.merchant.plan.id,\n              name: data.merchant.plan.name,\n              price: data.merchant.plan.basePrice,\n              currency: data.merchant.plan.currency\n            } : null,\n            subscriptionStatus: data.merchant.subscription?.status || 'unknown'\n          }}\n          subscriptions={data.merchant.subscription ? [data.merchant.subscription] : []}\n          plans={plans}\n          currentUserRole={currentUserRole}\n          onPlanChange={onPlanChange}\n          onExtend={onExtend}\n          onCancel={onCancel}\n          onSuspend={onSuspend}\n          onReactivate={onReactivate}\n        />\n      )}\n\n      {/* Activity Timeline - Add below plan management */}\n      {data.merchant.subscription && (\n        <MerchantSubscriptionSection\n          merchantId={data.merchant.id}\n          subscription={data.merchant.subscription}\n        />\n      )}\n\n      {/* Actions */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Manage Outlets</CardTitle>\n            <Building2 className=\"w-5 h-5 text-blue-700\" />\n          </CardHeader>\n          <CardContent>\n            <Button \n              variant=\"outline\" \n              className=\"w-full\"\n              onClick={() => handleNavigateToAdmin('merchants/' + data.merchant.id + '/outlets')}\n            >\n              Go to Outlets\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Manage Products</CardTitle>\n            <Package className=\"w-5 h-5 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <Button \n              variant=\"outline\" \n              className=\"w-full\"\n              onClick={() => handleNavigateToAdmin('merchants/' + data.merchant.id + '/products')}\n            >\n              Go to Products\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Manage Users</CardTitle>\n            <Users className=\"w-5 h-5 text-purple-600\" />\n          </CardHeader>\n          <CardContent>\n            <Button \n              variant=\"outline\" \n              className=\"w-full\"\n              onClick={() => handleNavigateToAdmin('merchants/' + data.merchant.id + '/users')}\n            >\n              Go to Users\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Manage Orders</CardTitle>\n            <ShoppingCart className=\"w-5 h-5 text-orange-600\" />\n          </CardHeader>\n          <CardContent>\n            <Button \n              variant=\"outline\" \n              className=\"w-full\"\n              onClick={() => handleNavigateToAdmin('merchants/' + data.merchant.id + '/orders')}\n            >\n              Go to Orders\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n     </div>\n  );\n}\n\nexport default MerchantDetail;\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Button,\n  Badge,\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from '../../../ui';\nimport { SubscriptionActivityTimeline } from '../../Subscriptions';\nimport { formatDate, formatCurrency } from '@rentalshop/utils';\nimport { \n  CreditCard,\n  Calendar,\n  TrendingUp,\n  RefreshCw,\n  Pause,\n  Play,\n  XCircle,\n  AlertCircle,\n  CheckCircle,\n  Clock,\n  History\n} from 'lucide-react';\n\ninterface Subscription {\n  id: number;\n  planId: number;\n  status: string;\n  amount: number;\n  currency: string;\n  interval: string;\n  currentPeriodStart: Date;\n  currentPeriodEnd: Date;\n  plan?: {\n    id: number;\n    name: string;\n    description: string;\n  };\n}\n\ninterface MerchantSubscriptionSectionProps {\n  merchantId: number;\n  subscription: Subscription | null;\n  loading?: boolean;\n}\n\nexport function MerchantSubscriptionSection({\n  merchantId,\n  subscription,\n  loading = false\n}: MerchantSubscriptionSectionProps) {\n  const [activities, setActivities] = useState<any[]>([]);\n  const [payments, setPayments] = useState<any[]>([]);\n  const [loadingHistory, setLoadingHistory] = useState(false);\n  const [showHistoryDialog, setShowHistoryDialog] = useState(false);\n\n  useEffect(() => {\n    if (subscription && showHistoryDialog) {\n      fetchHistory();\n    }\n  }, [subscription, showHistoryDialog]);\n\n  const fetchHistory = async () => {\n    if (!subscription) return;\n\n    try {\n      setLoadingHistory(true);\n\n      // Use standardized subscriptionsApi\n      const { subscriptionsApi } = await import('@rentalshop/utils');\n\n      // Fetch activities using standardized API\n      try {\n        const activitiesResult = await subscriptionsApi.getActivities(subscription.id, 20);\n        if (activitiesResult.success && activitiesResult.data) {\n          setActivities(activitiesResult.data || []);\n        }\n      } catch (err) {\n        console.log('Activities not yet implemented or error:', err);\n        setActivities([]);\n      }\n\n      // Fetch payments using standardized API\n      try {\n        const paymentsResult = await subscriptionsApi.getPayments(subscription.id, 20);\n        if (paymentsResult.success && paymentsResult.data) {\n          setPayments(paymentsResult.data || []);\n        }\n      } catch (err) {\n        console.log('Payments not yet implemented or error:', err);\n        setPayments([]);\n      }\n    } catch (error) {\n      console.error('Error fetching history:', error);\n    } finally {\n      setLoadingHistory(false);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusMap: Record<string, { variant: any; label: string; icon: any }> = {\n      active: { variant: 'success', label: 'Active', icon: CheckCircle },\n      trial: { variant: 'warning', label: 'Trial', icon: Clock },\n      past_due: { variant: 'danger', label: 'Past Due', icon: AlertCircle },\n      paused: { variant: 'secondary', label: 'Paused', icon: Pause },\n      cancelled: { variant: 'danger', label: 'Cancelled', icon: XCircle }\n    };\n\n    const config = statusMap[status] || { variant: 'default', label: status, icon: Clock };\n    const Icon = config.icon;\n\n    return (\n      <Badge variant={config.variant} className=\"flex items-center gap-1\">\n        <Icon className=\"w-3 h-3\" />\n        {config.label}\n      </Badge>\n    );\n  };\n\n  const getDaysRemaining = () => {\n    if (!subscription || !subscription.currentPeriodEnd) return 0;\n    \n    try {\n      const now = new Date();\n      const end = new Date(subscription.currentPeriodEnd);\n      \n      // Check if date is valid\n      if (isNaN(end.getTime())) return 0;\n      \n      const diff = end.getTime() - now.getTime();\n      return Math.ceil(diff / (1000 * 60 * 60 * 24));\n    } catch (error) {\n      console.error('Error calculating days remaining:', error);\n      return 0;\n    }\n  };\n\n  if (!subscription) {\n    return null; // Don't show anything if no subscription\n  }\n\n  return (\n    <>\n      {/* History Dialog */}\n      <Dialog open={showHistoryDialog} onOpenChange={setShowHistoryDialog}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <History className=\"h-5 w-5 text-blue-500\" />\n              Subscription Activity & Payment History\n            </DialogTitle>\n            <DialogDescription>\n              View detailed activity and payment history for this subscription\n            </DialogDescription>\n          </DialogHeader>\n          \n          <div className=\"mt-4\">\n            <SubscriptionActivityTimeline\n              activities={activities}\n              payments={payments}\n              loading={loadingHistory}\n              onExport={() => {\n                console.log('Export subscription history');\n              }}\n            />\n          </div>\n\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowHistoryDialog(false)}\n            >\n              Close\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\n","'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CalendarHeader } from './components/CalendarHeader';\nimport { CalendarNavigation } from './components/CalendarNavigation';\nimport { CalendarStats } from './components/CalendarStats';\nimport { CalendarGrid } from './components/CalendarGrid';\nimport { CalendarLoading } from './components/CalendarLoading';\n\nimport type { \n  PickupOrder, \n  CalendarFilters as CalendarFiltersType\n} from '@rentalshop/types';\n\ninterface CalendarsProps {\n  orders?: PickupOrder[];\n  loading?: boolean;\n  error?: string | null;\n  authenticated?: boolean;\n  onFiltersChange?: (filters: CalendarFiltersType) => void;\n  onOrderClick?: (order: PickupOrder) => void;\n  onDateSelect?: (date: Date) => void;\n  onLoginClick?: () => void;\n  onDevLogin?: () => void;\n  onRetry?: () => void;\n  initialDate?: Date; // Allow parent to control the displayed month\n  onMonthChange?: (date: Date) => void; // Notify parent when month changes\n  className?: string;\n}\n\nexport function Calendars({\n  orders = [],\n  loading = false,\n  error = null,\n  authenticated = false,\n  onFiltersChange,\n  onOrderClick,\n  onDateSelect,\n  onLoginClick,\n  onDevLogin,\n  onRetry,\n  initialDate,\n  onMonthChange,\n  className = ''\n}: CalendarsProps) {\n  const [currentDate, setCurrentDate] = useState(initialDate || new Date());\n  \n  // Sync with parent's initialDate changes\n  useEffect(() => {\n    if (initialDate) {\n      setCurrentDate(initialDate);\n    }\n  }, [initialDate]);\n  \n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n  // Notify parent when currentDate changes\n  useEffect(() => {\n    onMonthChange?.(currentDate);\n  }, [currentDate, onMonthChange]);\n\n  // Navigation functions\n  const goToPreviousMonth = useCallback(() => {\n    setCurrentDate(prev => new Date(prev.getFullYear(), prev.getMonth() - 1, 1));\n  }, []);\n\n  const goToNextMonth = useCallback(() => {\n    setCurrentDate(prev => new Date(prev.getFullYear(), prev.getMonth() + 1, 1));\n  }, []);\n\n  const goToToday = useCallback(() => {\n    const today = new Date();\n    setCurrentDate(today);\n    setSelectedDate(today);\n  }, []);\n\n  // Handle date selection\n  const handleDateClick = useCallback((date: Date) => {\n    setSelectedDate(date);\n    onDateSelect?.(date);\n  }, [onDateSelect]);\n\n  // Calculate stats for current month\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  \n  const monthOrders = orders.filter(order => {\n    const orderDate = new Date((order as any).pickupPlanAt || order.pickupDate);\n    return orderDate.getMonth() === currentMonth && orderDate.getFullYear() === currentYear;\n  });\n\n  // All orders are pickup orders (RESERVED and PICKUPED status only)\n  // Backend API only returns active pickup orders\n  const totalPickups = monthOrders.length;\n  const totalReturns = 0; // No return orders displayed\n  const totalOrders = monthOrders.length;\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className={className}>\n        <CalendarHeader />\n        <CalendarLoading />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Calendar Header */}\n      <CalendarHeader>\n        <CalendarNavigation\n          currentDate={currentDate}\n          onPreviousMonth={goToPreviousMonth}\n          onNextMonth={goToNextMonth}\n          onToday={goToToday}\n        />\n      </CalendarHeader>\n\n      {/* Calendar Stats */}\n      <CalendarStats\n        totalPickups={totalPickups}\n        totalReturns={totalReturns}\n        totalOrders={totalOrders}\n        currentMonth={currentMonth}\n        currentYear={currentYear}\n      />\n\n      {/* Calendar Grid */}\n      <CalendarGrid\n        currentDate={currentDate}\n        selectedDate={selectedDate}\n        orders={orders}\n        onDateClick={handleDateClick}\n      />\n    </div>\n  );\n}\n\nexport default Calendars;","import React from 'react';\nimport { Calendar } from 'lucide-react';\nimport { useCalendarTranslations } from '@rentalshop/hooks';\n\ninterface CalendarHeaderProps {\n  title?: string;\n  subtitle?: string;\n  children?: React.ReactNode;\n}\n\nexport function CalendarHeader({ \n  title, \n  subtitle,\n  children \n}: CalendarHeaderProps) {\n  const t = useCalendarTranslations();\n  return (\n    <div className=\"flex items-center justify-between mb-6\">\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n          <Calendar className=\"w-6 h-6 text-blue-700\" />\n        </div>\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{title || t('title')}</h1>\n          {subtitle && (\n            <p className=\"text-sm text-gray-600\">{subtitle}</p>\n          )}\n        </div>\n      </div>\n      {children && (\n        <div className=\"flex items-center space-x-3\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { ChevronLeft, ChevronRight, Calendar as CalendarIcon } from 'lucide-react';\nimport { Button } from '../../../ui/button';\nimport { useCalendarTranslations } from '@rentalshop/hooks';\n\ninterface CalendarNavigationProps {\n  currentDate: Date;\n  onPreviousMonth: () => void;\n  onNextMonth: () => void;\n  onToday: () => void;\n  className?: string;\n}\n\nexport function CalendarNavigation({\n  currentDate,\n  onPreviousMonth,\n  onNextMonth,\n  onToday,\n  className = ''\n}: CalendarNavigationProps) {\n  const t = useCalendarTranslations();\n  \n  const monthNames = [\n    t('months.january'), t('months.february'), t('months.march'), t('months.april'), \n    t('months.may'), t('months.june'), t('months.july'), t('months.august'), \n    t('months.september'), t('months.october'), t('months.november'), t('months.december')\n  ];\n\n  const currentMonth = monthNames[currentDate.getMonth()];\n  const currentYear = currentDate.getFullYear();\n\n  return (\n    <div className={`flex items-center justify-between ${className}`}>\n      {/* Month/Year Display */}\n      <div className=\"flex items-center space-x-3\">\n        <CalendarIcon className=\"w-5 h-5 text-blue-700\" />\n        <h2 className=\"text-xl font-semibold text-gray-900\">\n          {currentMonth} {currentYear}\n        </h2>\n      </div>\n\n      {/* Navigation Controls */}\n      <div className=\"flex items-center space-x-2\">\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={onPreviousMonth}\n          aria-label=\"Previous month\"\n        >\n          <ChevronLeft className=\"w-5 h-5 text-gray-600\" />\n        </Button>\n\n        <Button\n          variant=\"outline\"\n          onClick={onToday}\n          className=\"px-4 py-2 text-sm font-medium text-blue-700 bg-blue-50 hover:bg-blue-100\"\n        >\n          {t('navigation.today')}\n        </Button>\n\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={onNextMonth}\n          aria-label=\"Next month\"\n        >\n          <ChevronRight className=\"w-5 h-5 text-gray-600\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Clock, CheckCircle, Package } from 'lucide-react';\nimport { useCalendarTranslations } from '@rentalshop/hooks';\n\ninterface CalendarStatsProps {\n  totalPickups: number;\n  totalReturns: number;\n  totalOrders: number;\n  currentMonth: number;\n  currentYear: number;\n  className?: string;\n}\n\nexport function CalendarStats({\n  totalPickups,\n  totalReturns,\n  totalOrders,\n  currentMonth,\n  currentYear,\n  className = ''\n}: CalendarStatsProps) {\n  const t = useCalendarTranslations();\n  \n  return (\n    <div className={`grid grid-cols-1 md:grid-cols-3 gap-4 ${className}`}>\n      {/* Pickup Orders */}\n      <div className=\"bg-blue-50 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <Clock className=\"w-6 h-6 text-blue-700\" />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-blue-700\">{t('labels.pickupOrders')}</p>\n            <p className=\"text-2xl font-bold text-blue-900\">{totalPickups}</p>\n          </div>\n        </div>\n      </div>\n      \n      {/* Return Orders */}\n      <div className=\"bg-green-50 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <CheckCircle className=\"w-6 h-6 text-green-600\" />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-green-600\">{t('labels.returnOrders')}</p>\n            <p className=\"text-2xl font-bold text-green-900\">{totalReturns}</p>\n          </div>\n        </div>\n      </div>\n      \n      {/* Total Orders */}\n      <div className=\"bg-purple-50 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <Package className=\"w-6 h-6 text-purple-600\" />\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-purple-600\">{t('labels.totalOrders')}</p>\n            <p className=\"text-2xl font-bold text-purple-900\">{totalOrders}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { CalendarDay, PickupOrder } from '@rentalshop/types';\nimport { useCalendarTranslations } from '@rentalshop/hooks';\nimport { getUTCDateKey } from '@rentalshop/utils';\n\ninterface CalendarGridProps {\n  currentDate: Date;\n  selectedDate: Date | null;\n  orders: PickupOrder[];\n  onDateClick: (date: Date) => void;\n  className?: string;\n}\n\nexport function CalendarGrid({\n  currentDate,\n  selectedDate,\n  orders,\n  onDateClick,\n  className = ''\n}: CalendarGridProps) {\n  const t = useCalendarTranslations();\n  // Generate calendar days for the current month\n  const calendarDays = React.useMemo(() => {\n    \n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    \n    // Get first day of month and last day of month\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    \n    // Get start date (including previous month's days to fill first week)\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    \n    // Get end date (including next month's days to fill last week)\n    const endDate = new Date(lastDay);\n    endDate.setDate(endDate.getDate() + (6 - lastDay.getDay()));\n    \n    const days: CalendarDay[] = [];\n    const tempDate = new Date(startDate);\n    \n    while (tempDate <= endDate) {\n      const dayOfMonth = tempDate.getDate();\n      const isCurrentMonth = tempDate.getMonth() === month;\n      const isToday = tempDate.toDateString() === new Date().toDateString();\n      const isSelected = selectedDate?.toDateString() === tempDate.toDateString();\n      \n      // Get orders for this date using date without time for comparison\n      // Use UTC date key to match backend data (which uses UTC dates)\n      const currentDateKey = getUTCDateKey(tempDate);\n      \n      const dateOrders = orders.filter(order => {\n        const pickupDate = new Date((order as any).pickupPlanAt || order.pickupDate);\n        const returnDate = new Date((order as any).returnPlanAt || order.returnDate);\n        \n        // Use getUTCDateKey to get UTC date (YYYY-MM-DD) to match backend\n        // Backend returns \"date\": \"2025-10-27\" (UTC, no timezone conversion)\n        const pickupDateKey = getUTCDateKey(pickupDate);\n        const returnDateKey = getUTCDateKey(returnDate);\n        \n        const matches = (\n          pickupDateKey === currentDateKey ||\n          returnDateKey === currentDateKey\n        );\n        \n        // Debug logging for first week only\n        if (tempDate.getDate() <= 7) {\n          console.log('📅 CalendarGrid date matching:', {\n            currentDateKey,\n            pickupDateKey,\n            returnDateKey,\n            matches,\n            orderNumber: order.orderNumber\n          });\n        }\n        \n        return matches;\n      });\n      \n      // All orders are pickup orders (RESERVED and PICKUPED status only)\n      // Backend only adds orders to pickup date, so all orders here are pickup\n      const pickupOrders = dateOrders; // All orders are pickup orders\n      const returnOrders: any[] = []; // No return orders displayed in calendar\n      \n      days.push({\n        date: new Date(tempDate),\n        events: [], // Required by CalendarDay interface\n        isCurrentMonth,\n        isToday,\n        isSelected,\n        // Additional properties for this component\n        dayOfMonth,\n        pickupOrders,\n        returnOrders,\n        hasEvents: dateOrders.length > 0,\n        orders: dateOrders,\n        pickupCount: pickupOrders.length,\n        returnCount: returnOrders.length\n      } as any);\n      \n      tempDate.setDate(tempDate.getDate() + 1);\n    }\n    \n    return days;\n  }, [currentDate, orders, selectedDate]);\n\n  // Weekday headers\n  const weekdays = [\n    t('days.sunday'), t('days.monday'), t('days.tuesday'), t('days.wednesday'), \n    t('days.thursday'), t('days.friday'), t('days.saturday')\n  ];\n\n  return (\n    <div className={`bg-white rounded-xl border border-gray-200 shadow-sm overflow-hidden ${className}`}>\n      {/* Weekday Headers */}\n      <div className=\"grid grid-cols-7 bg-gray-50 border-b border-gray-200\">\n        {weekdays.map(day => (\n          <div\n            key={day}\n            className=\"px-3 py-3 text-center text-sm font-medium text-gray-700\"\n          >\n            {day}\n          </div>\n        ))}\n      </div>\n\n      {/* Calendar Grid */}\n      <div className=\"grid grid-cols-7\">\n        {calendarDays.map((day, index) => (\n          <div\n            key={index}\n            onClick={() => onDateClick(day.date)}\n            className={`\n              min-h-[120px] p-2 border-r border-b border-gray-200 cursor-pointer transition-colors\n              ${day.isCurrentMonth ? 'bg-white' : 'bg-gray-50'}\n              ${day.isToday ? 'bg-blue-50' : ''}\n              ${day.isSelected ? 'bg-blue-100 ring-2 ring-blue-500' : ''}\n              ${day.isCurrentMonth ? 'hover:bg-gray-50' : ''}\n            `}\n          >\n            {/* Date Number */}\n            <div className=\"mb-2\">\n              <span\n                className={`\n                  text-sm font-medium\n                  ${day.isCurrentMonth ? 'text-gray-900' : 'text-gray-400'}\n                  ${day.isToday ? 'text-blue-700 font-bold' : ''}\n                `}\n              >\n                {(day as any).dayOfMonth}\n              </span>\n            </div>\n\n            {/* 🎯 NEW: Order Count Display (User's Requested Strategy) */}\n            <div className=\"space-y-1\">\n              {/* Show order counts instead of individual orders */}\n              {(day as any).hasEvents && (\n                <div className=\"space-y-1\">\n                  {/* Pickup Count */}\n                  {(day as any).pickupCount > 0 && (\n                    <div className=\"flex items-center justify-between px-2 py-1 bg-green-50 border border-green-200 rounded text-xs\">\n                      <span className=\"text-green-700 font-medium\">{t('labels.pickup')}</span>\n                      <span className=\"text-green-800 font-bold\">{(day as any).pickupCount}</span>\n                    </div>\n                  )}\n                  \n                  {/* Return Count */}\n                  {(day as any).returnCount > 0 && (\n                    <div className=\"flex items-center justify-between px-2 py-1 bg-blue-50 border border-blue-200 rounded text-xs\">\n                      <span className=\"text-blue-700 font-medium\">{t('labels.return')}</span>\n                      <span className=\"text-blue-800 font-bold\">{(day as any).returnCount}</span>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {/* No events message */}\n              {!(day as any).hasEvents && day.isCurrentMonth && (\n                <div className=\"text-xs text-gray-400 text-center py-2\">\n                  {t('labels.noOrders')}\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport function CalendarLoading() {\n  return (\n    <div className=\"space-y-6 animate-pulse\">\n      {/* Header Loading */}\n      <div className=\"bg-white rounded-xl border border-gray-200 p-6 shadow-sm\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"space-y-3\">\n            <div className=\"h-8 w-64 bg-gray-200 rounded\"></div>\n            <div className=\"flex items-center gap-6\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-gray-200 rounded-full\"></div>\n                <div className=\"h-4 w-32 bg-gray-200 rounded\"></div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-gray-200 rounded-full\"></div>\n                <div className=\"h-4 w-32 bg-gray-200 rounded\"></div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-12 h-12 bg-gray-200 rounded-lg\"></div>\n            <div className=\"w-12 h-12 bg-gray-200 rounded-lg\"></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Calendar Grid Loading */}\n      <div className=\"bg-white rounded-xl border border-gray-200 shadow-sm overflow-hidden\">\n        {/* Weekday headers loading */}\n        <div className=\"grid grid-cols-7 bg-gray-50 border-b border-gray-200\">\n          {Array.from({ length: 7 }).map((_, i) => (\n            <div key={i} className=\"px-3 py-3\">\n              <div className=\"h-4 bg-gray-200 rounded mx-auto w-8\"></div>\n            </div>\n          ))}\n        </div>\n        \n        {/* Calendar days loading */}\n        <div className=\"grid grid-cols-7\">\n          {Array.from({ length: 35 }).map((_, i) => (\n            <div\n              key={i}\n              className=\"min-h-[120px] p-2 border-r border-b border-gray-200\"\n            >\n              <div className=\"space-y-2\">\n                <div className=\"h-4 w-6 bg-gray-200 rounded\"></div>\n                <div className=\"h-3 w-16 bg-gray-200 rounded\"></div>\n                <div className=\"h-3 w-12 bg-gray-200 rounded\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function CalendarEventLoading() {\n  return (\n    <div className=\"space-y-4 animate-pulse\">\n      {/* Event Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-6 w-32 bg-gray-200 rounded\"></div>\n          <div className=\"h-4 w-24 bg-gray-200 rounded\"></div>\n        </div>\n        <div className=\"h-8 w-20 bg-gray-200 rounded\"></div>\n      </div>\n      \n      {/* Event Details */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div className=\"h-5 w-20 bg-gray-200 rounded\"></div>\n          <div className=\"space-y-2\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n        <div className=\"space-y-4\">\n          <div className=\"h-5 w-20 bg-gray-200 rounded\"></div>\n          <div className=\"space-y-2\">\n            {Array.from({ length: 3 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Event Items */}\n      <div className=\"space-y-4\">\n        <div className=\"h-5 w-28 bg-gray-200 rounded\"></div>\n        <div className=\"space-y-3\">\n          {Array.from({ length: 3 }).map((_, i) => (\n            <div key={i} className=\"flex items-center gap-3 p-3 border rounded-lg\">\n              <div className=\"h-4 w-4 bg-gray-200 rounded\"></div>\n              <div className=\"h-4 w-32 bg-gray-200 rounded\"></div>\n              <div className=\"h-4 w-24 bg-gray-200 rounded\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Package, User, Mail, Clock } from 'lucide-react';\nimport { format } from 'date-fns';\nimport type { PickupOrder } from '@rentalshop/types';\nimport { useOrderTranslations } from '@rentalshop/hooks';\n\ninterface OrdersListProps {\n  orders: PickupOrder[];\n  selectedDate?: Date | null;\n  onOrderClick?: (order: PickupOrder) => void;\n  className?: string;\n}\n\nexport function OrdersList({ \n  orders, \n  selectedDate, \n  onOrderClick,\n  className = '' \n}: OrdersListProps) {\n  const t = useOrderTranslations();\n  \n  if (orders.length === 0) {\n    return (\n      <div className={`text-center py-8 text-gray-500 ${className}`}>\n        <Package className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n        <p className=\"text-lg font-medium\">{t('messages.noOrders')}</p>\n        {selectedDate && (\n          <p className=\"text-sm\">for {selectedDate.toLocaleDateString()}</p>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <h3 className=\"text-lg font-semibold text-gray-900\">\n        Orders {selectedDate && `for ${selectedDate.toLocaleDateString()}`}\n      </h3>\n      \n      <div className=\"space-y-3\">\n        {orders.map(order => (\n          <div\n            key={order.id}\n            onClick={() => onOrderClick?.(order)}\n            className=\"bg-white border border-gray-200 rounded-lg p-4 hover:border-blue-300 hover:shadow-sm transition-all duration-200 cursor-pointer\"\n          >\n            {/* Order Header */}\n            <div className=\"flex items-center justify-between mb-3\">\n              <h4 className=\"font-semibold text-gray-900\">\n                #{order.orderNumber}\n              </h4>\n              <span className={`px-2 py-1 text-xs rounded-full font-medium ${\n                order.status === 'RESERVED' ? 'bg-red-100 text-red-800' :\n                order.status === 'PICKUPED' ? 'bg-green-100 text-green-800' :\n                'bg-gray-100 text-gray-800'\n              }`}>\n                {order.status}\n              </span>\n            </div>\n\n            {/* Customer Information */}\n            <div className=\"flex items-center space-x-3 mb-3\">\n              <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                <User className=\"w-4 h-4 text-blue-700\" />\n              </div>\n              <div>\n                <p className=\"font-medium text-gray-900\">\n                  {order.customerName || (order.customer ? \n                    `${order.customer.firstName} ${order.customer.lastName}` : \n                    'Unknown Customer'\n                  )}\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  {order.customerPhone || order.customer?.phone || 'No phone'}\n                </p>\n              </div>\n            </div>\n\n            {/* Product Information */}\n            <div className=\"flex items-center space-x-2 mb-3\">\n              <Package className=\"w-4 h-4 text-gray-500\" />\n              <span className=\"text-sm text-gray-700\">\n                {order.productName}\n              </span>\n            </div>\n\n            {/* Order Status */}\n            <div className=\"flex items-center text-sm text-gray-600\">\n              <Clock className=\"w-4 h-4 mr-2\" />\n              <span className=\"capitalize\">{order.status}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { \n  PageWrapper,\n  PageContent,\n  Pagination,\n  EmptyState,\n  Button,\n  Card,\n  CardContent\n} from '@rentalshop/ui';\nimport { UserPageHeader, UserFilters as UserFiltersComponent, UserTable } from './components';\nimport { \n  User as UserIcon, \n  Download\n} from 'lucide-react';\nimport type { User, UserFilters } from '@rentalshop/types';\nimport { useUserRole, useUsersTranslations } from '@rentalshop/hooks';\n\n// Data interface for users list\nexport interface UsersData {\n  users: User[];\n  items?: User[]; // Alias for compatibility\n  total: number;\n  page: number;\n  totalPages: number;\n  limit: number;\n  hasMore: boolean;\n}\n\nexport interface UsersProps {\n  // Data props (required for external data mode - URL state pattern)\n  data?: UsersData;\n  filters?: UserFilters;\n  onFiltersChange?: (filters: UserFilters) => void;\n  onSearchChange?: (searchValue: string) => void;\n  onClearFilters?: () => void;\n  onUserAction?: (action: string, userId: number) => void;\n  onPageChange?: (page: number) => void;\n  onSort?: (column: string) => void;\n  \n  // Display props\n  title?: string;\n  subtitle?: string;\n  showExportButton?: boolean;\n  showAddButton?: boolean;\n  addButtonText?: string;\n  exportButtonText?: string;\n  showStats?: boolean;\n  currentUser?: any;\n  onExport?: () => void;\n  className?: string;\n}\n\n/**\n * ✅ SIMPLIFIED USERS COMPONENT (Modern Pattern)\n * \n * - Clean presentation component (like Orders, Products, Customers)\n * - No internal state management\n * - Works with external data (URL state pattern)\n * - Single responsibility: render users UI\n */\nexport const Users: React.FC<UsersProps> = ({\n  // Data props\n  data,\n  filters = {},\n  onFiltersChange = () => {},\n  onSearchChange = () => {},\n  onClearFilters = () => {},\n  onUserAction = () => {},\n  onPageChange = () => {},\n  onSort = () => {},\n  \n  // Display props\n  title = \"User Management\",\n  subtitle = \"Manage users in the system\",\n  showExportButton = false,\n  showAddButton = false,\n  addButtonText = \"Add User\",\n  exportButtonText = \"Export Users\",\n  showStats = false,\n  currentUser,\n  onExport,\n  className = \"\"\n}) => {\n  \n  // User role check for permissions\n  const { canManageUsers } = useUserRole(currentUser);\n  \n  // Get translations\n  const t = useUsersTranslations();\n  \n  // Debug: Log received data\n  console.log('👥 Users Component - Received data:', {\n    hasData: !!data,\n    usersCount: data?.users?.length || 0,\n    total: data?.total,\n    page: data?.page,\n    filters\n  });\n  \n  // Handler for export button\n  const handleExport = () => {\n    if (onExport) {\n      onExport();\n    } else {\n      console.log('Export functionality not implemented');\n    }\n  };\n\n  // Handler for add user button\n  const handleAddUser = () => {\n    console.log('Add user functionality should be implemented in page');\n  };\n\n  // Default empty data\n  const users = data?.users || [];\n  const totalUsers = data?.total || 0;\n  const currentPage = data?.page || 1;\n  const totalPages = data?.totalPages || 1;\n  const limit = data?.limit || 25;\n  \n  console.log('👥 Users Component - Processed data:', {\n    usersCount: users.length,\n    totalUsers,\n    currentPage,\n    totalPages,\n    limit\n  });\n\n  // Memoize handlers to prevent child re-renders\n  const memoizedOnFiltersChange = React.useCallback(onFiltersChange, [onFiltersChange]);\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnClearFilters = React.useCallback(onClearFilters, [onClearFilters]);\n  const memoizedOnUserAction = React.useCallback(onUserAction, [onUserAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort, [onSort]);\n\n  return (\n    <div className={`flex flex-col h-full ${className}`}>\n      {/* Fixed Header Section */}\n      <div className=\"flex-shrink-0 space-y-4\">\n        <UserPageHeader\n          title={title}\n          subtitle={subtitle}\n          showExportButton={showExportButton}\n          showAddButton={showAddButton && canManageUsers}\n          onExport={handleExport}\n          onAdd={handleAddUser}\n          addButtonText={addButtonText}\n          exportButtonText={exportButtonText}\n        />\n\n        {/* Compact Filters - All in one row */}\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <UserFiltersComponent\n                filters={filters}\n                onFiltersChange={memoizedOnFiltersChange}\n                onSearchChange={memoizedOnSearchChange}\n                onClearFilters={memoizedOnClearFilters}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0 mt-4\">\n        {users.length > 0 ? (\n          <UserTable\n            users={users}\n            onUserAction={memoizedOnUserAction}\n            sortBy={filters.sortBy || \"createdAt\"}\n            sortOrder={filters.sortOrder || \"desc\"}\n            onSort={memoizedOnSort}\n          />\n        ) : (\n          <EmptyState\n            icon={UserIcon}\n            title={t('messages.noUsers')}\n            description={\n              filters.search || filters.q || filters.role\n                ? t('messages.tryAdjustingSearch')\n                : t('messages.getStarted')\n            }\n          />\n        )}\n      </div>\n\n      {/* Fixed Pagination Section - Always at Bottom */}\n      {users.length > 0 && totalUsers > limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            total={totalUsers}\n            limit={limit}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"users\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Grid, List, Plus } from 'lucide-react';\n\ninterface UserHeaderProps {\n  viewMode: 'grid' | 'table';\n  onViewModeChange: (mode: 'grid' | 'table') => void;\n  onAddUser: () => void;\n}\n\nexport function UserHeader({ viewMode, onViewModeChange, onAddUser }: UserHeaderProps) {\n  return (\n    <div className=\"flex justify-between items-center gap-4\">\n      <div className=\"flex items-center gap-2\">\n        <Button\n          onClick={onAddUser}\n          className=\"bg-blue-700 hover:bg-blue-700 text-white\"\n        >\n          <Plus className=\"w-4 h-4 mr-2\" />\n          Add User\n        </Button>\n      </div>\n      \n      <div className=\"flex items-center gap-2\">\n        <Button\n          variant={viewMode === 'table' ? 'default' : 'outline'}\n          size=\"sm\"\n          onClick={() => onViewModeChange('table')}\n          className=\"flex items-center gap-2\"\n        >\n          <List className=\"w-4 h-4\" />\n          Table\n        </Button>\n        <Button\n          variant={viewMode === 'grid' ? 'default' : 'outline'}\n          size=\"sm\"\n          onClick={() => onViewModeChange('grid')}\n          className=\"flex items-center gap-2\"\n        >\n          <Grid className=\"w-4 h-4\" />\n          Grid\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { \n  Input,\n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue,\n  Button\n} from '@rentalshop/ui';\nimport type { UserFilters } from '@rentalshop/types';\n\ninterface UserFiltersProps {\n  filters: UserFilters;\n  onFiltersChange: (filters: UserFilters) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n}\n\n/**\n * ✅ COMPACT USER FILTERS (Following Orders pattern)\n */\nexport function UserFilters({ filters, onFiltersChange, onSearchChange, onClearFilters }: UserFiltersProps) {\n  const handleFilterChange = (key: keyof UserFilters, value: string) => {\n    onFiltersChange({\n      ...filters,\n      [key]: value,\n    });\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.target.value);\n  };\n\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            placeholder=\"Search users...\"\n            value={filters.search || ''}\n            onChange={handleInputChange}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Role Filter */}\n      <Select value={filters.role || 'all'} onValueChange={(value) => handleFilterChange('role', value === 'all' ? '' : value)}>\n        <SelectTrigger className=\"w-[160px] h-10\">\n          <SelectValue placeholder=\"Role\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All Roles</SelectItem>\n          <SelectItem value=\"ADMIN\">Admin</SelectItem>\n          <SelectItem value=\"MERCHANT\">Merchant</SelectItem>\n          <SelectItem value=\"OUTLET_ADMIN\">Outlet Admin</SelectItem>\n          <SelectItem value=\"OUTLET_STAFF\">Outlet Staff</SelectItem>\n        </SelectContent>\n      </Select>\n\n      {/* Clear Filters */}\n      {(filters.search || filters.role) && onClearFilters && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          Clear\n        </Button>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, Badge, Button } from '@rentalshop/ui';\nimport { Mail, Phone, Calendar, Building, User as UserIcon } from 'lucide-react';\nimport type { User } from '@rentalshop/types';\n\ninterface UserCardProps {\n  user: User;\n  onUserAction: (action: string, userId: number) => void;\n}\n\nexport function UserCard({ user, onUserAction }: UserCardProps) {\n  const getRoleBadgeVariant = (role: string) => {\n    switch (role) {\n      case 'ADMIN':\n        return 'destructive';\n      case 'MERCHANT':\n        return 'default';\n      case 'OUTLET_STAFF':\n        return 'secondary';\n      case 'CLIENT':\n        return 'outline';\n      default:\n        return 'outline';\n    }\n  };\n\n  const getRoleDisplayName = (role: string) => {\n    switch (role) {\n      case 'ADMIN':\n        return 'Admin';\n      case 'MERCHANT':\n        return 'Merchant';\n      case 'OUTLET_STAFF':\n        return 'Staff';\n      case 'CLIENT':\n        return 'Client';\n      default:\n        return role;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  return (\n    <Card className=\"overflow-hidden hover:shadow-lg transition-shadow\">\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n              <UserIcon className=\"w-6 h-6 text-blue-700\" />\n            </div>\n            <div>\n              <h3 className=\"font-semibold text-lg text-gray-900\">{user.name}</h3>\n              <Badge variant={getRoleBadgeVariant(user.role)}>\n                {getRoleDisplayName(user.role)}\n              </Badge>\n            </div>\n          </div>\n          \n          <Badge variant={user.isActive ? 'default' : 'secondary'}>\n            {user.isActive ? 'Active' : 'Inactive'}\n          </Badge>\n        </div>\n\n        {/* Contact Info */}\n        <div className=\"space-y-2 mb-4\">\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <Mail className=\"w-4 h-4\" />\n            <span>{user.email}</span>\n          </div>\n          \n          {user.phone && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <Phone className=\"w-4 h-4\" />\n              <span>{user.phone}</span>\n            </div>\n          )}\n          \n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <Calendar className=\"w-4 h-4\" />\n            <span>Joined {formatDate(user.createdAt.toString())}</span>\n          </div>\n        </div>\n\n        {/* Organization Info */}\n        {user.merchant && (\n          <div className=\"flex items-center gap-2 text-sm text-gray-600 mb-4\">\n            <Building className=\"w-4 h-4\" />\n            <span>{user.merchant.name}</span>\n          </div>\n        )}\n\n        {/* Outlet Info */}\n        {user.outlet && (\n          <div className=\"flex items-center gap-2 text-sm text-gray-600 mb-4\">\n            <Building className=\"w-4 h-4\" />\n            <span>{user.outlet.name}</span>\n            {user.outlet.merchant && (\n              <span className=\"text-gray-500\"> - {user.outlet.merchant.name}</span>\n            )}\n          </div>\n        )}\n\n        {/* Actions */}\n        <div className=\"flex gap-2 pt-4 border-t\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => onUserAction('view', user.id)}\n            className=\"flex-1\"\n          >\n            View\n          </Button>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { UserCard } from './UserCard';\nimport { Card, CardContent } from '@rentalshop/ui';\nimport type { User } from '@rentalshop/types';\nimport { useUsersTranslations } from '@rentalshop/hooks';\n\ninterface UserGridProps {\n  users: User[];\n  onUserAction: (action: string, userId: number) => void;\n}\n\nexport function UserGrid({ users, onUserAction }: UserGridProps) {\n  const t = useUsersTranslations();\n  \n  if (users.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <div className=\"text-4xl mb-4\">👥</div>\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noUsers')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.tryAdjustingSearch')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n      {users.map((user) => (\n        <UserCard\n          key={user.id}\n          user={user}\n          onUserAction={onUserAction}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Badge } from '../../../ui/badge';\nimport { Card, CardContent } from '../../../ui/card';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '../../../ui/dropdown-menu';\nimport { User } from '@rentalshop/types';\nimport { Eye, Edit, Trash2, MoreVertical, UserCheck, UserX } from 'lucide-react';\nimport { useUsersTranslations } from '@rentalshop/hooks';\n\ninterface UserTableProps {\n  users: User[];\n  onUserAction: (action: string, userId: number) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\nexport function UserTable({ \n  users, \n  onUserAction, \n  sortBy = 'createdAt', \n  sortOrder = 'desc',\n  onSort \n}: UserTableProps) {\n  const t = useUsersTranslations();\n  const [openDropdownId, setOpenDropdownId] = React.useState<number | null>(null);\n  \n  if (users.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-text-tertiary\">\n            <div className=\"text-4xl mb-4\">👥</div>\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noUsers')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.loadingUsers')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatDate = (dateString: string | Date | undefined) => {\n    if (!dateString) return t('messages.na');\n    const date = typeof dateString === 'string' ? new Date(dateString) : dateString;\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getRoleBadge = (role: string) => {\n    const variants: Record<string, string> = {\n      ADMIN: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n      MERCHANT: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',\n      OUTLET_ADMIN: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',\n      OUTLET_STAFF: 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n    };\n    \n    const roleKey = role as keyof typeof t.roles;\n    return (\n      <Badge className={variants[role] || variants.OUTLET_STAFF}>\n        {t(`roles.${roleKey}` as any) || role.replace('_', ' ')}\n      </Badge>\n    );\n  };\n\n  const getStatusBadge = (isActive: boolean) => {\n    return isActive ? (\n      <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n        {t('fields.active')}\n      </Badge>\n    ) : (\n      <Badge className=\"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\">\n        {t('fields.inactive')}\n      </Badge>\n    );\n  };\n\n  const handleSort = (column: string) => {\n    if (onSort) {\n      onSort(column);\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm border-border flex flex-col h-full\">\n      <CardContent className=\"p-0 flex-1 overflow-hidden\">\n        {/* Table with scroll - flex layout */}\n        <div className=\"flex-1 overflow-auto h-full\">\n          <table className=\"w-full\">\n            {/* Table Header with Sorting - Sticky */}\n            <thead className=\"bg-bg-secondary border-b border-border sticky top-0 z-10\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  {t('fields.name')}\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  {t('fields.role')}\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  {t('fields.outlet')} / {t('fields.merchant')}\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  {t('fields.status')}\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  {t('fields.createdAt')}\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  {t('fields.actions')}\n                </th>\n              </tr>\n            </thead>\n            \n            {/* Table Body */}\n            <tbody className=\"bg-bg-card divide-y divide-border\">\n              {users.map((user) => (\n                <tr key={user.id} className=\"hover:bg-bg-secondary transition-colors\">\n                  {/* User Info (Name + Email) */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-br from-action-primary to-brand-primary flex items-center justify-center\">\n                        <span className=\"text-white font-semibold text-sm\">\n                          {user.firstName?.substring(0, 1)}{user.lastName?.substring(0, 1)}\n                        </span>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-text-primary\">\n                          {user.firstName} {user.lastName}\n                        </div>\n                        <div className=\"text-sm text-text-tertiary\">{user.email}</div>\n                      </div>\n                    </div>\n                  </td>\n                  \n                  {/* Role */}\n                  <td className=\"px-6 py-4\">\n                    {getRoleBadge(user.role)}\n                  </td>\n                  \n                  {/* Outlet / Merchant */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {user.outlet?.name || user.merchant?.name || t('messages.na')}\n                    </div>\n                  </td>\n                  \n                  {/* Status */}\n                  <td className=\"px-6 py-4\">\n                    {getStatusBadge(user.isActive)}\n                  </td>\n                  \n                  {/* Created Date */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {formatDate(user.createdAt)}\n                    </div>\n                  </td>\n                \n                  \n                  {/* Actions - Dropdown Menu */}\n                  <td className=\"px-6 py-4 text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setOpenDropdownId(openDropdownId === user.id ? null : user.id)}\n                        >\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent \n                        align=\"end\"\n                        open={openDropdownId === user.id}\n                        onOpenChange={(open: boolean) => setOpenDropdownId(open ? user.id : null)}\n                      >\n                        <DropdownMenuItem onClick={() => {\n                          onUserAction('view', user.id);\n                          setOpenDropdownId(null);\n                        }}>\n                          <Eye className=\"h-4 w-4 mr-2\" />\n                          {t('actions.viewDetails')}\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => {\n                          onUserAction('edit', user.id);\n                          setOpenDropdownId(null);\n                        }}>\n                          <Edit className=\"h-4 w-4 mr-2\" />\n                          {t('actions.editUser')}\n                        </DropdownMenuItem>\n                        <DropdownMenuItem onClick={() => {\n                          onUserAction(user.isActive ? 'deactivate' : 'activate', user.id);\n                          setOpenDropdownId(null);\n                        }}>\n                          {user.isActive ? <UserX className=\"h-4 w-4 mr-2\" /> : <UserCheck className=\"h-4 w-4 mr-2\" />}\n                          {user.isActive ? t('actions.deactivate') : t('actions.activate')}\n                        </DropdownMenuItem>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem \n                          onClick={() => {\n                            onUserAction('delete', user.id);\n                            setOpenDropdownId(null);\n                          }}\n                          className=\"text-action-danger focus:text-action-danger\"\n                        >\n                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                          {t('actions.delete')}\n                        </DropdownMenuItem>\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { \n  TableSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '../../../ui/skeleton';\n\nexport function UsersLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Users Table */}\n      <TableSkeleton rows={8} columns={6} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function UserDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-48 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* User Info */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 6 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </div>\n        <div className=\"space-y-4\">\n          <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </div>\n      </div>\n      \n      {/* Permissions */}\n      <div className=\"space-y-4\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {Array.from({ length: 8 }).map((_, i) => (\n            <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '../../../ui/button';\nimport { ConfirmationDialog } from '@rentalshop/ui';\nimport { UserDetailDialog } from './UserDetailDialog';\nimport type { User, UserCreateInput, UserUpdateInput } from '@rentalshop/types';\n// formatPublicId removed - using single id system\n\ninterface UserActionsProps {\n  onAction: (action: string, userId: number) => void;\n  onUserCreated?: (user: UserCreateInput | UserUpdateInput) => void;\n  onUserUpdated?: (user: User) => void;\n  onError?: (error: string) => void;\n  onSuccess?: (message: string) => void; // New callback for success messages\n}\n\nexport function UserActions({ \n  onAction, \n  onUserCreated, \n  onUserUpdated, \n  onError,\n  onSuccess\n}: UserActionsProps) {\n  const router = useRouter();\n  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);\n  const [isDeactivateDialogOpen, setIsDeactivateDialogOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [userToDeactivate, setUserToDeactivate] = useState<User | null>(null);\n\n  // Listen for user action events from UserTable\n  useEffect(() => {\n    const handleUserAction = (event: CustomEvent) => {\n      const { action, userId, user } = event.detail;\n      console.log('🔍 UserActions: Event received:', { action, userId, user });\n      \n      if (action === 'view' && user) {\n        console.log('🔍 UserActions: Handling view action for user:', user);\n        setSelectedUser(user);\n        setIsViewDialogOpen(true);\n      } else if (action === 'edit' && user) {\n        console.log('🔍 UserActions: Handling edit action for user:', user);\n        console.log('🔍 User id:', user.id, 'type:', typeof user.id);\n        console.log('🔍 Full user object:', user);\n        // Handle edit action by navigating to edit page\n        handleAction('edit', user);\n      } else if (action === 'deactivate' && user) {\n        console.log('🔍 UserActions: Handling deactivate action for user:', user);\n        setUserToDeactivate(user);\n        setIsDeactivateDialogOpen(true);\n      }\n    };\n\n    window.addEventListener('user-action', handleUserAction as EventListener);\n    return () => window.removeEventListener('user-action', handleUserAction as EventListener);\n  }, [router]);\n\n  const handleViewDialogClose = () => {\n    setIsViewDialogOpen(false);\n    setSelectedUser(null);\n  };\n\n  const handleDeactivateDialogClose = () => {\n    setIsDeactivateDialogOpen(false);\n    setUserToDeactivate(null);\n  };\n\n  const handleConfirmDeactivate = () => {\n    if (userToDeactivate) {\n      onAction('deactivate', userToDeactivate.id);\n      handleDeactivateDialogClose();\n    }\n  };\n\n  // Note: User creation and editing are now handled by separate pages\n  // These functions are kept for backward compatibility but are no longer used\n  const handleSaveUser = async (userData: Partial<User>) => {\n    console.log('🔍 UserActions: handleSaveUser called but no longer used');\n  };\n\n  const handleCreateUser = async (userData: UserCreateInput | UserUpdateInput) => {\n    console.log('🔍 UserActions: handleCreateUser called but no longer used');\n  };\n\n  const handleAction = (action: string, user: User) => {\n    console.log('🔍 UserActions: Action triggered:', { action, userId: user.id });\n    \n    switch (action) {\n      case 'edit':\n        // Navigate to user page where editing can be done inline\n        console.log('🔍 UserActions: Edit action - checking id:', { \n          id: user.id, \n          type: typeof user.id, \n          isValid: user.id && typeof user.id === 'number' \n        });\n        \n        if (user.id && typeof user.id === 'number') {\n          const formattedId = `USER-${user.id.toString().padStart(4, '0')}`;\n          console.log('🔍 UserActions: Navigating to user page:', formattedId);\n          console.log('🔍 Full URL:', `/users/${formattedId}`);\n          router.push(`/users/${formattedId}`);\n        } else {\n          console.error('❌ UserActions: No valid id available for user:', user);\n          console.error('❌ User data:', user);\n          // Show error message to user\n          onError?.('Cannot edit user: Missing or invalid id');\n        }\n        break;\n        \n      case 'add':\n        console.log('🔍 UserActions: Navigating to add user');\n        router.push('/users/add');\n        break;\n        \n      default:\n        console.warn('⚠️ UserActions: Unknown action:', action);\n    }\n  };\n\n  return (\n    <>\n      {/* User Detail Dialog */}\n      <UserDetailDialog\n        open={isViewDialogOpen}\n        onOpenChange={setIsViewDialogOpen}\n        user={selectedUser}\n        onUserUpdated={onUserUpdated}\n        onError={onError}\n      />\n\n      {/* Deactivate Confirmation Dialog */}\n      <ConfirmationDialog\n        open={isDeactivateDialogOpen}\n        onOpenChange={setIsDeactivateDialogOpen}\n        type=\"warning\"\n        title=\"Deactivate User\"\n        description={`Are you sure you want to deactivate ${userToDeactivate?.name}? This action will prevent them from accessing the system.`}\n        confirmText=\"Deactivate\"\n        cancelText=\"Cancel\"\n        onConfirm={handleConfirmDeactivate}\n      />\n    </>\n  );\n}\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from '@rentalshop/ui';\nimport { Button } from '@rentalshop/ui';\nimport { ConfirmationDialog } from '@rentalshop/ui';\nimport { ChangePasswordDialog } from './ChangePasswordDialog';\nimport { UserDisplayInfo } from './UserDisplayInfo';\nimport { usersApi } from '@rentalshop/utils';\nimport type { User } from '@rentalshop/types';\nimport { useUsersTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface UserDetailDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  user?: User | null;\n  onUserUpdated?: (user: User) => void;\n  onError?: (error: string) => void;\n}\n\nexport const UserDetailDialog: React.FC<UserDetailDialogProps> = ({\n  open,\n  onOpenChange,\n  user,\n  onUserUpdated,\n  onError\n}) => {\n  const t = useUsersTranslations();\n  const tc = useCommonTranslations();\n  const [isChangePasswordOpen, setIsChangePasswordOpen] = useState(false);\n  const [isDeactivateConfirmOpen, setIsDeactivateConfirmOpen] = useState(false);\n  const [isActivateConfirmOpen, setIsActivateConfirmOpen] = useState(false);\n  const [isDeleteConfirmOpen, setIsDeleteConfirmOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  if (!user) return null;\n\n\n\n  const handleDeactivateUser = async () => {\n    setIsLoading(true);\n    try {\n      const response = await usersApi.updateUserStatus(user.id, 'inactive');\n      \n      if (response.success) {\n        // Update local user state\n        const updatedUser = { ...user, isActive: false };\n        onUserUpdated?.(updatedUser);\n        \n        // Close dialog\n        onOpenChange(false);\n      } else {\n        onError?.(response.error || 'Failed to deactivate user');\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred';\n      onError?.(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleActivateUser = async () => {\n    setIsLoading(true);\n    try {\n      const response = await usersApi.updateUserStatus(user.id, 'active');\n      \n      if (response.success) {\n        // Update local user state\n        const updatedUser = { ...user, isActive: true };\n        onUserUpdated?.(updatedUser);\n        \n        // Close dialog\n        onOpenChange(false);\n      } else {\n        onError?.(response.error || 'Failed to activate user');\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred';\n      onError?.(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePasswordChangeSuccess = () => {\n    // Show success message or handle as needed\n    console.log('Password changed successfully');\n  };\n\n  const handlePasswordChangeError = (error: string) => {\n    onError?.(error);\n  };\n\n  const handleDeleteUser = async () => {\n    setIsLoading(true);\n    try {\n      const response = await usersApi.deleteUserByPublicId(user.id);\n      \n      if (response.success) {\n        // Close dialog and notify parent\n        onOpenChange(false);\n        onUserUpdated?.(user); // This will trigger a refresh in the parent\n      } else {\n        onError?.(response.error || 'Failed to delete user');\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred';\n      onError?.(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={open} onOpenChange={onOpenChange}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <div>\n              <DialogTitle className=\"text-xl font-semibold\">\n                {t('userDetails')}\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n                {t('viewUserInfo')}\n              </DialogDescription>\n            </div>\n          </DialogHeader>\n\n          <div className=\"mt-6\">\n            <UserDisplayInfo\n              user={user}\n              showActions={true}\n              onChangePassword={() => setIsChangePasswordOpen(true)}\n              onActivate={() => setIsActivateConfirmOpen(true)}\n              onDeactivate={() => setIsDeactivateConfirmOpen(true)}\n              onDelete={() => setIsDeleteConfirmOpen(true)}\n              isLoading={isLoading}\n            />\n          </div>\n\n          <DialogFooter className=\"flex justify-end space-x-2\">\n            <Button\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n            >\n              {tc('buttons.close')}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Change Password Dialog */}\n      <ChangePasswordDialog\n        open={isChangePasswordOpen}\n        onOpenChange={setIsChangePasswordOpen}\n        userId={user.id}\n        userName={`${user.firstName || ''} ${user.lastName || ''}`.trim()}\n        onSuccess={handlePasswordChangeSuccess}\n        onError={handlePasswordChangeError}\n      />\n\n      {/* Deactivate User Confirmation Dialog */}\n      <ConfirmationDialog\n        open={isDeactivateConfirmOpen}\n        onOpenChange={setIsDeactivateConfirmOpen}\n        type=\"warning\"\n        title={t('messages.confirmDeactivateAccount')}\n        description={`${t('messages.confirmDeactivate')} ${`${user.firstName || ''} ${user.lastName || ''}`.trim()}? ${t('messages.confirmDeactivateDetails')}`}\n        confirmText={t('actions.deactivateAccount')}\n        cancelText={tc('buttons.cancel')}\n        onConfirm={handleDeactivateUser}\n      />\n\n      {/* Activate User Confirmation Dialog */}\n      <ConfirmationDialog\n        open={isActivateConfirmOpen}\n        onOpenChange={setIsActivateConfirmOpen}\n        type=\"info\"\n        title={t('messages.confirmActivateAccount')}\n        description={`${t('messages.confirmActivate')} ${`${user.firstName || ''} ${user.lastName || ''}`.trim()}? ${t('messages.confirmActivateDetails')}`}\n        confirmText={t('actions.activateAccount')}\n        cancelText={tc('buttons.cancel')}\n        onConfirm={handleActivateUser}\n      />\n\n      {/* Delete User Confirmation Dialog */}\n      <ConfirmationDialog\n        open={isDeleteConfirmOpen}\n        onOpenChange={setIsDeleteConfirmOpen}\n        type=\"danger\"\n        title={t('messages.confirmDeleteAccount')}\n        description={`${t('messages.confirmDelete')} ${`${user.firstName || ''} ${user.lastName || ''}`.trim()}? ${t('messages.confirmDeleteDetails')}`}\n        confirmText={t('actions.deleteAccount')}\n        cancelText={tc('buttons.cancel')}\n        onConfirm={handleDeleteUser}\n      />\n    </>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from '../../../ui/dialog';\nimport { Button } from '../../../ui/button';\nimport { Input } from '../../../ui/input';\nimport { Label } from '../../../ui/label';\nimport { userApiClient } from '../lib/UserApiClient';\nimport { Eye, EyeOff } from 'lucide-react';\n\ninterface ChangePasswordDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  userId: number;\n  userName: string;\n  onSuccess?: () => void;\n  onError?: (error: string) => void;\n}\n\nexport const ChangePasswordDialog: React.FC<ChangePasswordDialogProps> = ({\n  open,\n  onOpenChange,\n  userId,\n  userName,\n  onSuccess,\n  onError\n}) => {\n  const [formData, setFormData] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPasswords, setShowPasswords] = useState({\n    new: false,\n    confirm: false\n  });\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const togglePasswordVisibility = (field: 'new' | 'confirm') => {\n    setShowPasswords(prev => ({ ...prev, [field]: !prev[field] }));\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.newPassword.trim()) {\n      newErrors.newPassword = 'New password is required';\n    } else if (formData.newPassword.length < 8) {\n      newErrors.newPassword = 'New password must be at least 8 characters long';\n    }\n\n    if (!formData.confirmPassword.trim()) {\n      newErrors.confirmPassword = 'Please confirm your new password';\n    } else if (formData.newPassword !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await userApiClient.changePassword(\n        userId,\n        formData.newPassword\n      );\n\n      if (response.success) {\n        onSuccess?.();\n        onOpenChange(false);\n        // Reset form\n        setFormData({\n          newPassword: '',\n          confirmPassword: ''\n        });\n        setErrors({});\n      } else {\n        onError?.(response.error || 'Failed to change password');\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'An error occurred';\n      onError?.(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    onOpenChange(false);\n    // Reset form\n    setFormData({\n      newPassword: '',\n      confirmPassword: ''\n    });\n    setErrors({});\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"text-xl font-semibold\">\n            Change Password\n          </DialogTitle>\n          <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n            Change password for user: <span className=\"font-medium\">{userName}</span>\n          </DialogDescription>\n        </DialogHeader>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"mt-6 space-y-4\">\n            {/* New Password */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"newPassword\">New Password *</Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"newPassword\"\n                  type={showPasswords.new ? 'text' : 'password'}\n                  value={formData.newPassword}\n                  onChange={(e) => handleInputChange('newPassword', e.target.value)}\n                  placeholder=\"Enter new password\"\n                  className={errors.newPassword ? 'border-red-500 pr-10' : 'pr-10'}\n                />\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  type=\"button\"\n                  onClick={() => togglePasswordVisibility('new')}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 h-6 w-6 p-0\"\n                >\n                  {showPasswords.new ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </Button>\n              </div>\n              {errors.newPassword && (\n                <p className=\"text-sm text-red-600\">{errors.newPassword}</p>\n              )}\n              <p className=\"text-xs text-gray-500\">Password must be at least 8 characters long</p>\n            </div>\n\n            {/* Confirm New Password */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"confirmPassword\">Confirm New Password *</Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"confirmPassword\"\n                  type={showPasswords.confirm ? 'text' : 'password'}\n                  value={formData.confirmPassword}\n                  onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                  placeholder=\"Confirm new password\"\n                  className={errors.confirmPassword ? 'border-red-500 pr-10' : 'pr-10'}\n                />\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  type=\"button\"\n                  onClick={() => togglePasswordVisibility('confirm')}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 h-6 w-6 p-0\"\n                >\n                  {showPasswords.confirm ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </Button>\n              </div>\n              {errors.confirmPassword && (\n                <p className=\"text-sm text-red-600\">{errors.confirmPassword}</p>\n              )}\n            </div>\n          </div>\n\n          <DialogFooter className=\"flex justify-end space-x-2 mt-6\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleCancel}\n              disabled={isLoading}\n            >\n              Cancel\n            </Button>\n            <Button \n              type=\"submit\" \n              disabled={isLoading}\n              className=\"bg-blue-700 hover:bg-blue-700\"\n            >\n              {isLoading ? 'Changing...' : 'Change Password'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { User } from '@rentalshop/types';\nimport { getAuthToken } from '@rentalshop/utils';\n\nexport interface UserApiResponse {\n  success: boolean;\n  data?: any;\n  message?: string;\n  error?: string;\n}\n\nexport class UserApiClient {\n  private baseUrl: string;\n\n  constructor(baseUrl: string = '/api') {\n    this.baseUrl = baseUrl;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    const url = `${this.baseUrl}${endpoint}`;\n    \n    // Get auth token from localStorage or wherever it's stored\n    const token = getAuthToken() || '';\n    \n    const config: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(`API request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  async getUsers(filters: any = {}, options: any = {}): Promise<UserApiResponse> {\n    const params = new URLSearchParams();\n    \n    // Add filters\n    if (filters.search) params.append('search', filters.search);\n    if (filters.role) params.append('role', filters.role);\n    if (filters.isActive !== undefined) params.append('isActive', filters.isActive.toString());\n    \n    // Add options\n    if (options.page) params.append('page', options.page.toString());\n    if (options.limit) params.append('limit', options.limit.toString());\n    if (options.sortBy) params.append('sortBy', options.sortBy);\n    if (options.sortOrder) params.append('sortOrder', options.sortOrder);\n\n    const queryString = params.toString();\n    const endpoint = `/users${queryString ? `?${queryString}` : ''}`;\n    \n    return this.request<UserApiResponse>(endpoint);\n  }\n\n  async getUserById(userId: number): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>(`/users/${userId}`);\n  }\n\n  async createUser(userData: Partial<User>): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(userId: number, userData: Partial<User>): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>(`/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deactivateUser(userId: number): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>(`/users/${userId}/deactivate`, {\n      method: 'PATCH',\n      body: JSON.stringify({ isActive: false }),\n    });\n  }\n\n  async activateUser(userId: number): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>(`/users/${userId}/activate`, {\n      method: 'PATCH',\n      body: JSON.stringify({ isActive: true }),\n    });\n  }\n\n  async changePassword(userId: number, newPassword: string): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>(`/users/${userId}/change-password`, {\n      method: 'PATCH',\n      body: JSON.stringify({ newPassword }),\n    });\n  }\n\n  async deleteUser(userId: number): Promise<UserApiResponse> {\n    return this.request<UserApiResponse>(`/users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n}\n\n// Export a default instance\nexport const userApiClient = new UserApiClient();\n","'use client'\n\nimport React from 'react';\nimport { Card, CardContent, Button } from '@rentalshop/ui';\nimport type { User } from '@rentalshop/types';\nimport { useUsersTranslations } from '@rentalshop/hooks';\n\ninterface UserDisplayInfoProps {\n  user: User;\n  showActions?: boolean;\n  onEdit?: () => void;\n  onView?: () => void;\n  onDelete?: () => void;\n  onActivate?: () => void;\n  onDeactivate?: () => void;\n  onChangePassword?: () => void;\n  isLoading?: boolean;\n}\n\nexport const UserDisplayInfo: React.FC<UserDisplayInfoProps> = ({\n  user,\n  showActions = false,\n  onEdit,\n  onView,\n  onDelete,\n  onActivate,\n  onDeactivate,\n  onChangePassword,\n  isLoading = false\n}) => {\n  const t = useUsersTranslations();\n  \n  const getRoleBadgeStyle = (role: string) => {\n    switch (role) {\n      case 'ADMIN':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'MERCHANT':\n        return 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:border-blue-800';\n      case 'OUTLET_ADMIN':\n        return 'bg-purple-100 text-purple-800 border-purple-200 dark:bg-purple-900/20 dark:text-purple-400 dark:border-purple-800';\n      case 'OUTLET_STAFF':\n        return 'bg-purple-100 text-purple-800 border-purple-200 dark:bg-purple-900/20 dark:text-purple-400 dark:border-purple-800';\n      case 'CLIENT':\n        return 'bg-green-100 text-green-800 border-green-200 dark:bg-green-900/20 dark:text-green-400 dark:border-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n    }\n  };\n\n  const getStatusBadgeStyle = (isActive: boolean) => {\n    if (isActive) {\n      return 'bg-emerald-100 text-emerald-800 border-emerald-200 dark:bg-emerald-900/20 dark:text-emerald-400 dark:border-emerald-800';\n    } else {\n      return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n    }\n  };\n\n  const getRoleDisplayName = (role: string) => {\n    const roleKey = role as 'ADMIN' | 'MERCHANT' | 'OUTLET_ADMIN' | 'OUTLET_STAFF';\n    return t(`roles.${roleKey}` as any) || role;\n  };\n\n  const getStatusDisplayName = (isActive: boolean) => {\n    return isActive ? t('fields.active') : t('fields.inactive');\n  };\n\n  return (\n    <Card>\n      <CardContent className=\"p-6 space-y-6\">\n        {/* Personal Information */}\n        <div>\n          <h3 className=\"text-sm font-medium text-gray-900 mb-4\">{t('userInformation')}</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.name')}</label>\n              <p className=\"text-gray-900 font-medium\">\n                {`${user.firstName || ''} ${user.lastName || ''}`.trim() || t('messages.na')}\n              </p>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.email')}</label>\n              <p className=\"text-gray-900\">{user.email}</p>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.phone')}</label>\n              <p className=\"text-gray-900\">{user.phone || t('messages.na')}</p>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.role')}</label>\n              <div className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getRoleBadgeStyle(user.role)}`}>\n                {getRoleDisplayName(user.role)}\n              </div>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.status')}</label>\n              <div className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getStatusBadgeStyle(user.isActive)}`}>\n                {getStatusDisplayName(user.isActive)}\n              </div>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.id')}</label>\n              <p className=\"text-gray-500 text-sm font-mono\">{user.id}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Outlet Information */}\n        {user.outlet && (\n          <div className=\"border-t pt-6\">\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">{t('outletInformation')}</h3>\n            <div className=\"border rounded-lg p-4 bg-gray-50\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.outletName')}</label>\n                  <p className=\"text-gray-900 text-base\">{user.outlet.name}</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.outletId')}</label>\n                  <p className=\"text-gray-500 text-sm font-mono\">{user.outlet.id}</p>\n                </div>\n                {user.outlet.merchant && (\n                  <>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.merchantName')}</label>\n                      <p className=\"text-gray-900 text-base\">{user.outlet.merchant.name}</p>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">{t('fields.merchantId')}</label>\n                      <p className=\"text-gray-500 text-sm font-mono\">{user.outlet.merchant.id}</p>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Account Actions - Only show if actions are enabled */}\n        {showActions && (\n          <div className=\"border-t pt-6\">\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">{t('accountActions')}</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              {onChangePassword && (\n                <div className=\"space-y-3\">\n                  <h4 className=\"font-medium text-gray-900\">{t('passwordManagement')}</h4>\n                  <Button\n                    variant=\"outline\"\n                    onClick={onChangePassword}\n                    className=\"w-full flex items-center justify-start px-3 py-2 text-sm h-auto\"\n                    disabled={isLoading}\n                  >\n                    🔑 {t('actions.changePassword')}\n                  </Button>\n                  <p className=\"text-xs text-gray-500\">\n                    {t('messages.allowChangePassword')}\n                  </p>\n                </div>\n              )}\n              \n              <div className=\"space-y-3\">\n                <h4 className=\"font-medium text-gray-900\">{t('accountStatus')}</h4>\n                {user.isActive ? (\n                  onDeactivate && (\n                    <Button\n                      variant=\"outline\"\n                      onClick={onDeactivate}\n                      className=\"w-full flex items-center justify-start px-3 py-2 text-sm text-orange-600 border-orange-200 hover:bg-orange-50 h-auto\"\n                      disabled={isLoading || user.role === 'ADMIN'}\n                    >\n                      {isLoading ? `⏳ ${t('actions.deactivating')}` : `❌ ${t('actions.deactivateAccount')}`}\n                    </Button>\n                  )\n                ) : (\n                  onActivate && (\n                    <Button\n                      variant=\"outline\"\n                      onClick={onActivate}\n                      className=\"w-full flex items-center justify-start px-3 py-2 text-sm text-green-600 border-green-200 hover:bg-green-50 h-auto\"\n                      disabled={isLoading}\n                    >\n                      {isLoading ? `⏳ ${t('actions.activating')}` : `✅ ${t('actions.activateAccount')}`}\n                    </Button>\n                  )\n                )}\n                <p className=\"text-xs text-gray-500\">\n                  {user.isActive \n                    ? t('messages.deactivateToPrevent')\n                    : t('messages.activateToRestore')\n                  }\n                </p>\n                {user.role === 'ADMIN' && (\n                  <div className=\"flex items-center gap-2 text-xs text-amber-600 bg-amber-50 p-2 rounded\">\n                    ⚠️ {t('messages.cannotDeactivateAdminShort')}\n                  </div>\n                )}\n              </div>\n              \n              {onDelete && (\n                <div className=\"space-y-3\">\n                  <h4 className=\"font-medium text-gray-900\">{t('dangerZone')}</h4>\n                  <Button\n                    variant=\"outline\"\n                    onClick={onDelete}\n                    className=\"w-full flex items-center justify-start px-3 py-2 text-sm text-red-600 border-red-200 hover:bg-red-50 h-auto\"\n                    disabled={isLoading || user.role === 'ADMIN'}\n                  >\n                    {isLoading ? `⏳ ${t('actions.deleting')}` : `🗑️ ${t('actions.deleteAccount')}`}\n                  </Button>\n                  <p className=\"text-xs text-gray-500\">\n                    {t('messages.permanentlyDeleteShort')}\n                  </p>\n                  {user.role === 'ADMIN' && (\n                    <div className=\"flex items-center gap-2 text-xs text-amber-600 bg-amber-50 p-2 rounded\">\n                      ⚠️ {t('messages.cannotDeleteAdmin')}\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle\n} from '../../../ui';\nimport { UserForm } from './UserForm';\nimport type { User, UserCreateInput } from '@rentalshop/types';\nimport { useUsersTranslations } from '@rentalshop/hooks';\n\ninterface AddUserDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onUserCreated?: (user: UserCreateInput) => void;\n  onError?: (error: string) => void;\n  currentUser?: User | null;\n}\n\nexport const AddUserDialog: React.FC<AddUserDialogProps> = ({\n  open,\n  onOpenChange,\n  onUserCreated,\n  onError,\n  currentUser\n}) => {\n  const t = useUsersTranslations();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSave = async (userData: UserCreateInput | any) => {\n    try {\n      setIsSubmitting(true);\n      \n      // Call the parent callback to create the user\n      // The parent will handle the API call and show toasts\n      if (onUserCreated) {\n        await onUserCreated(userData as UserCreateInput);\n      }\n      \n      // Close dialog on success\n      onOpenChange(false);\n      \n    } catch (error) {\n      console.error('❌ AddUserDialog: Error occurred:', error);\n      if (onError) {\n        onError(error instanceof Error ? error.message : 'Failed to create user');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto p-0\">\n        <DialogHeader className=\"px-6 py-4 border-b border-gray-200\">\n          <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n            {t('addNewUser')}\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"p-6\">\n          <UserForm\n            mode=\"create\"\n            user={undefined}\n            onSave={handleSave}\n            onCancel={handleCancel}\n            isSubmitting={isSubmitting}\n            currentUser={currentUser}\n          />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { Save, X, Eye, EyeOff, Building2, Store } from 'lucide-react';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent } from '../../../ui/card';\nimport { FormField, RoleSelect, MerchantSelect, OutletSelect } from './UserFormFields';\nimport { validateUserCreateInput, validateUserUpdateInput } from './UserFormValidation';\nimport type { User, UserCreateInput, UserUpdateInput, UserRole } from '@rentalshop/types';\nimport { merchantsApi, outletsApi } from '@rentalshop/utils';\nimport { useUsersTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPE-SAFE FORM DATA INTERFACES\n// ============================================================================\n\ninterface UserCreateFormData {\n  name: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  isActive: boolean;\n  password: string;\n  confirmPassword: string;\n  merchantId: string;\n  outletId: string;\n}\n\ninterface UserUpdateFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  merchantId: string;\n  outletId: string;\n}\n\ntype UserFormData = UserCreateFormData | UserUpdateFormData;\n\ninterface UserFormProps {\n  mode: 'create' | 'edit';\n  user?: User; // Required for edit mode\n  onSave: (userData: UserCreateInput | UserUpdateInput) => Promise<void>;\n  onCancel?: () => void;\n  isSubmitting?: boolean;\n  currentUser?: User | null;\n}\n\nexport const UserForm: React.FC<UserFormProps> = ({\n  mode,\n  user,\n  onSave,\n  onCancel,\n  isSubmitting: externalIsSubmitting,\n  currentUser\n}) => {\n  const t = useUsersTranslations();\n  const tc = useCommonTranslations();\n  const isEditMode = mode === 'edit';\n  \n  // Form data - different structure for create vs edit\n  const [formData, setFormData] = useState<UserFormData>(() => {\n    console.log('🔍 UserForm: Initial state setup - isEditMode:', isEditMode, 'user:', user);\n    if (isEditMode && user) {\n      const initialData = {\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n        email: user.email || '',\n        phone: user.phone || '',\n        // ✅ ADD MISSING FIELDS\n        role: user.role as UserRole || 'OUTLET_STAFF',\n        merchantId: user.merchantId?.toString() || '',\n        outletId: user.outletId?.toString() || ''\n      } as UserUpdateFormData;\n      console.log('🔍 UserForm: Initial formData (edit mode):', initialData);\n      return initialData;\n    } else {\n      const initialData = {\n        name: '',\n        email: '',\n        phone: '',\n        role: 'OUTLET_STAFF' as UserRole, // Default to OUTLET_STAFF for safety\n        isActive: true,\n        password: '',\n        confirmPassword: '',\n        merchantId: '',\n        outletId: ''\n      } as UserCreateFormData;\n      console.log('🔍 UserForm: Initial formData (create mode):', initialData);\n      return initialData;\n    }\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [internalIsSubmitting, setInternalIsSubmitting] = useState(false);\n  \n  // Data for dropdowns (create mode only)\n  const [merchants, setMerchants] = useState<any[]>([]);\n  const [outlets, setOutlets] = useState<any[]>([]);\n  const [loadingMerchants, setLoadingMerchants] = useState(false);\n  const [loadingOutlets, setLoadingOutlets] = useState(false);\n\n  // Use external isSubmitting if provided, otherwise use internal state\n  const isSubmitting = externalIsSubmitting !== undefined ? externalIsSubmitting : internalIsSubmitting;\n\n  // Role-based access control (create mode only)\n  const canSelectMerchant = currentUser?.role === 'ADMIN';\n  const canSelectOutlet = currentUser?.role === 'ADMIN' || currentUser?.role === 'MERCHANT';\n  const showMerchantField = currentUser?.role === 'ADMIN' || currentUser?.role === 'MERCHANT' || currentUser?.role === 'OUTLET_ADMIN' || currentUser?.role === 'OUTLET_STAFF';\n  const showOutletField = currentUser?.role === 'ADMIN' || currentUser?.role === 'MERCHANT' || currentUser?.role === 'OUTLET_ADMIN' || currentUser?.role === 'OUTLET_STAFF';\n\n  // Update form data when user changes (edit mode)\n  useEffect(() => {\n    if (isEditMode && user) {\n      console.log('🔍 UserForm: User object for edit:', user);\n      console.log('🔍 UserForm: User role:', user.role, 'Type:', typeof user.role);\n      console.log('🔍 UserForm: User merchantId:', user.merchantId, 'Type:', typeof user.merchantId);\n      console.log('🔍 UserForm: User outletId:', user.outletId, 'Type:', typeof user.outletId);\n      \n      // Ensure role is properly typed\n      const userRole = user.role as UserRole;\n      const validRoles: UserRole[] = ['ADMIN', 'MERCHANT', 'OUTLET_ADMIN', 'OUTLET_STAFF'];\n      const role = validRoles.includes(userRole) ? userRole : 'OUTLET_STAFF';\n      \n      const formData = {\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n        email: user.email || '',\n        phone: user.phone || '',\n        role: role,\n        merchantId: user.merchantId?.toString() || '',\n        outletId: user.outletId?.toString() || ''\n      } as UserUpdateFormData;\n      \n      console.log('🔍 UserForm: About to set formData:', formData);\n      console.log('🔍 UserForm: formData.role:', formData.role, 'Type:', typeof formData.role);\n      \n      setFormData(formData);\n      setErrors({});\n      \n      console.log('🔍 UserForm: Auto-filled edit form with user data:', user);\n      console.log('🔍 UserForm: Final role set:', formData.role);\n    }\n  }, [user, isEditMode]);\n\n  // Pre-fill form data with current user's merchant/outlet when they can't be changed (create mode)\n  useEffect(() => {\n    if (!isEditMode && currentUser) {\n      const updates: Partial<UserCreateFormData> = {};\n      \n      // Pre-fill merchant ID if user can't select merchant\n      const userMerchantId = currentUser.merchantId || currentUser.merchant?.id;\n      if (!canSelectMerchant && userMerchantId) {\n        updates.merchantId = userMerchantId.toString();\n      }\n      \n      // Pre-fill outlet ID if user can't select outlet\n      const userOutletId = currentUser.outletId || currentUser.outlet?.id;\n      if (!canSelectOutlet && userOutletId) {\n        updates.outletId = userOutletId.toString();\n      }\n      \n      if (Object.keys(updates).length > 0) {\n        setFormData((prev: UserFormData) => ({ ...prev, ...updates }));\n      }\n    }\n  }, [currentUser, canSelectMerchant, canSelectOutlet, isEditMode]);\n\n  // Load merchants data (create mode only)\n  useEffect(() => {\n    if (!isEditMode && canSelectMerchant) {\n      setLoadingMerchants(true);\n      merchantsApi.getMerchants()\n        .then((response: any) => {\n          if (response.success && response.data) {\n            setMerchants(response.data.merchants || []);\n          }\n        })\n        .catch((error: any) => {\n          console.error('Error loading merchants:', error);\n        })\n        .finally(() => {\n          setLoadingMerchants(false);\n        });\n    } else if (!isEditMode && currentUser?.merchantId || currentUser?.merchant?.id) {\n      // For non-admin users, set their merchant as the only option\n      const userMerchantId = currentUser.merchantId || currentUser.merchant?.id;\n      setMerchants([{\n        id: userMerchantId,\n        name: currentUser.merchant?.name || 'Current Merchant'\n      }]);\n      setFormData((prev: UserFormData) => ({ ...prev, merchantId: userMerchantId?.toString() || '' }));\n    }\n  }, [canSelectMerchant, currentUser, isEditMode]);\n\n  // Load outlets data (create mode only)\n  useEffect(() => {\n    if (!isEditMode && canSelectOutlet) {\n      setLoadingOutlets(true);\n      const merchantId = canSelectMerchant ? (formData as any).merchantId : (currentUser?.merchantId || currentUser?.merchant?.id);\n      \n      console.log('🔍 UserForm: Loading outlets for merchantId:', merchantId, 'canSelectMerchant:', canSelectMerchant);\n      \n      if (merchantId) {\n        outletsApi.getOutletsByMerchant(Number(merchantId))\n          .then((response: any) => {\n            console.log('🔍 UserForm: Outlets API response:', response);\n            if (response.success && response.data) {\n              const outletsData = response.data.outlets || response.data || [];\n              console.log('🔍 UserForm: Setting outlets:', outletsData);\n              setOutlets(outletsData);\n            } else {\n              console.warn('🔍 UserForm: No outlets data in response:', response);\n              setOutlets([]);\n            }\n          })\n          .catch((error: any) => {\n            console.error('🔍 UserForm: Error loading outlets:', error);\n            setOutlets([]);\n          })\n          .finally(() => {\n            setLoadingOutlets(false);\n          });\n      } else {\n        console.log('🔍 UserForm: No merchantId, clearing outlets');\n        setOutlets([]);\n        setLoadingOutlets(false);\n      }\n    } else if (!isEditMode && currentUser?.outletId) {\n      // For outlet users, set their outlet as the only option\n      console.log('🔍 UserForm: Setting single outlet for current user:', currentUser.outletId);\n      setOutlets([{\n        id: currentUser.outletId,\n        name: currentUser.outlet?.name || 'Current Outlet'\n      }]);\n      setFormData((prev: any) => ({ ...prev, outletId: currentUser.outletId?.toString() || '' }));\n    }\n  }, [canSelectOutlet, canSelectMerchant, (formData as any).merchantId, currentUser?.merchantId, currentUser?.outletId, isEditMode]);\n\n  // Reset outlet when merchant changes and reload outlets (create mode only)\n  useEffect(() => {\n    if (!isEditMode && canSelectMerchant && (formData as UserCreateFormData).merchantId) {\n      console.log('🔍 UserForm: Merchant changed, resetting outlet and reloading outlets');\n      setFormData((prev: UserFormData) => ({ ...prev, outletId: '' }));\n      \n      // Reload outlets for the new merchant\n      setLoadingOutlets(true);\n      outletsApi.getOutletsByMerchant(Number((formData as UserCreateFormData).merchantId))\n        .then((response: any) => {\n          console.log('🔍 UserForm: Reloading outlets for new merchant:', response);\n          if (response.success && response.data) {\n            const outletsData = response.data.outlets || response.data || [];\n            setOutlets(outletsData);\n          } else {\n            setOutlets([]);\n          }\n        })\n        .catch((error: any) => {\n          console.error('🔍 UserForm: Error reloading outlets:', error);\n          setOutlets([]);\n        })\n        .finally(() => {\n          setLoadingOutlets(false);\n        });\n    }\n  }, [(formData as UserCreateFormData).merchantId, canSelectMerchant, isEditMode]);\n\n  const handleInputChange = (field: string, value: string | boolean) => {\n    console.log('🔍 UserForm: Input changed:', { field, value });\n    setFormData((prev: UserFormData) => ({ ...prev, [field]: value }));\n    \n    // Clear field-specific error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const validateForm = (): boolean => {\n    let newErrors: Record<string, string>;\n    \n    if (isEditMode) {\n      newErrors = validateUserUpdateInput(formData as UserUpdateFormData);\n    } else {\n      newErrors = validateUserCreateInput(formData as UserCreateFormData);\n    }\n    \n    console.log('🔍 UserForm: Validation errors:', newErrors);\n    console.log('🔍 UserForm: Form data being validated:', formData);\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    console.log('🔍 UserForm: Form submitted, validating...');\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    if (!externalIsSubmitting) {\n      setInternalIsSubmitting(true);\n    }\n    \n    try {\n      let submitData: UserCreateInput | UserUpdateInput;\n      \n      if (isEditMode) {\n        const updateData = formData as UserUpdateFormData;\n        submitData = {\n          id: user?.id || 0,\n          firstName: updateData.firstName.trim(),\n          lastName: updateData.lastName.trim(),\n          email: updateData.email.trim().toLowerCase(),\n          phone: updateData.phone.trim(),\n          role: updateData.role,\n          merchantId: updateData.merchantId ? Number(updateData.merchantId) : undefined,\n          outletId: updateData.outletId ? Number(updateData.outletId) : undefined\n        } as UserUpdateInput;\n      } else {\n        const createData = formData as UserCreateFormData;\n        submitData = {\n          firstName: createData.name.trim().split(' ')[0] || '',\n          lastName: createData.name.trim().split(' ').slice(1).join(' ') || '',\n          email: createData.email.trim().toLowerCase(),\n          phone: createData.phone.trim(),\n          role: createData.role,\n          password: createData.password,\n          merchantId: createData.merchantId ? Number(createData.merchantId) : undefined,\n          outletId: createData.outletId ? Number(createData.outletId) : undefined\n        } as UserCreateInput;\n      }\n      \n      console.log('🔍 UserForm: About to call onSave with data:', submitData);\n      console.log('🔍 UserForm: Submit data type:', isEditMode ? 'UserUpdateInput' : 'UserCreateInput');\n      console.log('🔍 UserForm: Submit data keys:', Object.keys(submitData));\n      await onSave(submitData);\n      console.log('✅ UserForm: User operation completed successfully');\n      \n    } catch (error: any) {\n      console.error('❌ UserForm: Error in user operation:', error);\n      // Error handling is now done by the parent component using toast notifications\n    } finally {\n      if (!externalIsSubmitting) {\n        setInternalIsSubmitting(false);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    console.log('🔍 UserForm: Cancel button clicked');\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card>\n        <CardContent className=\"p-6 space-y-6\">\n          {/* Personal Information */}\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">\n              {isEditMode ? t('fields.basicInformation') : t('fields.personalInformation')}\n            </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {isEditMode ? (\n              <>\n                <FormField\n                  id=\"firstName\"\n                  label={t('fields.firstName')}\n                  value={(formData as any).firstName}\n                  onChange={(value) => handleInputChange('firstName', value)}\n                  error={errors.firstName}\n                  disabled={isSubmitting}\n                  required\n                  placeholder={t('placeholders.enterFirstName')}\n                />\n\n                <FormField\n                  id=\"lastName\"\n                  label={t('fields.lastName')}\n                  value={(formData as any).lastName}\n                  onChange={(value) => handleInputChange('lastName', value)}\n                  error={errors.lastName}\n                  disabled={isSubmitting}\n                  required\n                  placeholder={t('placeholders.enterLastName')}\n                />\n              </>\n            ) : (\n              <FormField\n                id=\"name\"\n                label={t('fields.fullName')}\n                value={(formData as any).name}\n                onChange={(value) => handleInputChange('name', value)}\n                error={errors.name}\n                disabled={isSubmitting}\n                required\n                placeholder={t('placeholders.enterFullName')}\n              />\n            )}\n\n            <FormField\n              id=\"email\"\n              label={t('fields.email')}\n              value={(formData as any).email}\n              onChange={(value) => handleInputChange('email', value)}\n              error={errors.email}\n              disabled={isSubmitting}\n              required\n              type=\"email\"\n              placeholder={t('placeholders.enterEmail')}\n            />\n\n            <FormField\n              id=\"phone\"\n              label={t('fields.phone')}\n              value={(formData as any).phone}\n              onChange={(value) => handleInputChange('phone', value)}\n              error={errors.phone}\n              disabled={isSubmitting}\n              required\n              placeholder={t('placeholders.enterPhone')}\n            />\n\n            {console.log('🔍 UserForm: RoleSelect value:', (formData as any).role, 'FormData:', formData)}\n            <RoleSelect\n              value={(formData as any).role}\n              onChange={(value) => {\n                console.log('🔍 UserForm: Role changed to:', value);\n                handleInputChange('role', value);\n              }}\n              error={errors.role}\n              disabled={isSubmitting}\n              currentUserRole={currentUser?.role}\n            />\n          </div>\n          </div>\n\n          {/* Organization Assignment */}\n          {(showMerchantField || showOutletField) && (\n            <div className=\"border-t pt-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">\n                {t('organizationAssignment')}\n              </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {showMerchantField && (\n                <MerchantSelect\n                  value={(formData as any).merchantId}\n                  onChange={(value) => handleInputChange('merchantId', value)}\n                  merchants={merchants}\n                  loading={loadingMerchants}\n                  error={errors.merchantId}\n                  disabled={isSubmitting}\n                  canSelect={canSelectMerchant}\n                  currentUser={currentUser}\n                />\n              )}\n\n              {showOutletField && (\n                <OutletSelect\n                  value={(formData as any).outletId}\n                  onChange={(value) => handleInputChange('outletId', value)}\n                  outlets={outlets}\n                  loading={loadingOutlets}\n                  error={errors.outletId}\n                  disabled={isSubmitting}\n                  canSelect={canSelectOutlet}\n                  canSelectMerchant={canSelectMerchant}\n                  merchantId={(formData as any).merchantId}\n                  currentUser={currentUser}\n                />\n              )}\n            </div>\n            </div>\n          )}\n\n          {/* Password Section (Create mode only) */}\n          {!isEditMode && (\n            <div className=\"border-t pt-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">\n                {t('passwordSettings')}\n              </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <FormField\n                id=\"password\"\n                label={t('fields.password')}\n                value={(formData as any).password}\n                onChange={(value) => handleInputChange('password', value)}\n                error={errors.password}\n                disabled={isSubmitting}\n                required\n                type=\"password\"\n                placeholder={t('placeholders.enterPassword')}\n                showPasswordToggle={true}\n              />\n\n              <FormField\n                id=\"confirmPassword\"\n                label={t('fields.confirmPassword')}\n                value={(formData as any).confirmPassword}\n                onChange={(value) => handleInputChange('confirmPassword', value)}\n                error={errors.confirmPassword}\n                disabled={isSubmitting}\n                type=\"password\"\n                placeholder={t('placeholders.confirmPassword')}\n                showPasswordToggle={true}\n              />\n            </div>\n            </div>\n          )}\n\n          {/* User Information (Edit mode only) */}\n          {isEditMode && user && (\n            <div className=\"border-t pt-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-4\">\n                {t('currentUserInformation')}\n              </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"font-medium text-gray-700\">{t('fields.role')}:</span>\n                <span className=\"ml-2 px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs\">\n                  {t(`roles.${user.role}` as any)}\n                </span>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">{t('fields.status')}:</span>\n                <span className={`ml-2 px-2 py-1 rounded-full text-xs ${\n                  user.isActive \n                    ? 'bg-green-100 text-green-800' \n                    : 'bg-red-100 text-red-800'\n                }`}>\n                  {user.isActive ? t('fields.active') : t('fields.inactive')}\n                </span>\n              </div>\n              {user.merchant && (\n                <div>\n                  <span className=\"font-medium text-gray-700\">{t('fields.merchant')}:</span>\n                  <span className=\"ml-2 text-gray-600\">{user.merchant.name}</span>\n                </div>\n              )}\n              {user.outlet && (\n                <div>\n                  <span className=\"font-medium text-gray-700\">{t('fields.outlet')}:</span>\n                  <span className=\"ml-2 text-gray-600\">{user.outlet.name}</span>\n                </div>\n              )}\n              <div>\n                <span className=\"font-medium text-gray-700\">{t('created')}:</span>\n                <span className=\"ml-2 text-gray-600\">\n                  {new Date(user.createdAt).toLocaleDateString()}\n                </span>\n              </div>\n              {user.lastLoginAt && (\n                <div>\n                  <span className=\"font-medium text-gray-700\">{t('fields.lastLogin')}:</span>\n                  <span className=\"ml-2 text-gray-600\">\n                    {new Date(user.lastLoginAt).toLocaleDateString()}\n                  </span>\n                </div>\n              )}\n            </div>\n            </div>\n          )}\n\n          {/* Validation Status */}\n          {Object.keys(errors).length > 0 && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n          <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0\">\n              <span className=\"text-yellow-400 text-lg\">⚠️</span>\n            </div>\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-yellow-800\">\n                {t('messages.validationErrors')}\n              </h3>\n              <div className=\"mt-2 text-sm text-yellow-700\">\n                <ul className=\"list-disc list-inside space-y-1\">\n                  {Object.entries(errors).map(([field, error]) => (\n                    <li key={field}>\n                      <strong>{field.charAt(0).toUpperCase() + field.slice(1)}:</strong> {error}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n          )}\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-end space-x-3 border-t pt-6\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={handleCancel}\n          disabled={isSubmitting}\n        >\n          <X className=\"w-4 h-4 mr-2\" />\n          {tc('buttons.cancel')}\n        </Button>\n        <Button \n          type=\"submit\"\n          disabled={isSubmitting}\n        >\n          <Save className=\"w-4 h-4 mr-2\" />\n          {isSubmitting \n            ? (isEditMode ? t('actions.updating') : t('actions.creating')) \n            : (isEditMode ? t('actions.updateUser') : t('actions.createUser'))\n          }\n        </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </form>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { Eye, EyeOff, Building2, Store } from 'lucide-react';\nimport { Input } from '../../../ui/input';\nimport { Label } from '../../../ui/label';\nimport { Button } from '../../../ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../../ui/select';\nimport { SearchableSelect } from '../../../ui/searchable-select';\nimport type { User } from '@rentalshop/types';\n\ninterface FormFieldProps {\n  id: string;\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  error?: string;\n  disabled?: boolean;\n  required?: boolean;\n  placeholder?: string;\n  type?: 'text' | 'email' | 'password';\n  showPasswordToggle?: boolean;\n}\n\nexport const FormField: React.FC<FormFieldProps> = ({\n  id,\n  label,\n  value,\n  onChange,\n  error,\n  disabled = false,\n  required = false,\n  placeholder,\n  type = 'text',\n  showPasswordToggle = false\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const inputType = type === 'password' && showPassword ? 'text' : type;\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor={id}>\n        {label} {required && '*'}\n      </Label>\n      <div className=\"relative\">\n        <Input\n          id={id}\n          type={inputType}\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          placeholder={placeholder}\n          className={error ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}\n          disabled={disabled}\n          required={required}\n        />\n        {showPasswordToggle && type === 'password' && (\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-6 w-6 p-0\"\n            disabled={disabled}\n          >\n            {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n          </Button>\n        )}\n      </div>\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n};\n\ninterface RoleSelectProps {\n  value: string | undefined;\n  onChange: (value: string) => void;\n  error?: string;\n  disabled?: boolean;\n  currentUserRole?: string;\n}\n\nexport const RoleSelect: React.FC<RoleSelectProps> = ({\n  value,\n  onChange,\n  error,\n  disabled = false,\n  currentUserRole\n}) => {\n  console.log('🔍 RoleSelect: Current value:', value, 'Type:', typeof value);\n  console.log('🔍 RoleSelect: Current user role:', currentUserRole);\n  console.log('🔍 RoleSelect: Available roles for current user:', currentUserRole === 'ADMIN' ? ['ADMIN', 'MERCHANT', 'OUTLET_ADMIN', 'OUTLET_STAFF'] : ['OUTLET_ADMIN', 'OUTLET_STAFF']);\n  \n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"role\">Role *</Label>\n      <Select \n        value={value || undefined} \n        onValueChange={onChange}\n        disabled={disabled}\n      >\n        <SelectTrigger className={error ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}>\n          <SelectValue placeholder={value ? `Current: ${value}` : \"Select role\"} />\n        </SelectTrigger>\n        <SelectContent>\n          {currentUserRole === 'ADMIN' && (\n            <>\n              <SelectItem value=\"ADMIN\">System Admin</SelectItem>\n              <SelectItem value=\"MERCHANT\">Merchant</SelectItem>\n            </>\n          )}\n          <SelectItem value=\"OUTLET_ADMIN\">Outlet Admin</SelectItem>\n          <SelectItem value=\"OUTLET_STAFF\">Outlet Staff</SelectItem>\n        </SelectContent>\n      </Select>\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n};\n\ninterface MerchantSelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  merchants: any[];\n  loading: boolean;\n  error?: string;\n  disabled?: boolean;\n  canSelect: boolean;\n  currentUser?: User | null;\n}\n\nexport const MerchantSelect: React.FC<MerchantSelectProps> = ({\n  value,\n  onChange,\n  merchants,\n  loading,\n  error,\n  disabled = false,\n  canSelect,\n  currentUser\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"merchant\" className=\"flex items-center gap-2\">\n        <Building2 className=\"w-4 h-4\" />\n        Merchant {canSelect ? '*' : '(Read-only)'}\n      </Label>\n      {canSelect ? (\n        <SearchableSelect\n          key={`merchant-${merchants.length}`}\n          value={value ? Number(value) : undefined}\n          onChange={(val) => onChange(val.toString())}\n          options={merchants.map(merchant => ({\n            value: merchant.id.toString(),\n            label: merchant.name\n          }))}\n          placeholder={loading ? \"Loading merchants...\" : \"Search and select merchant\"}\n          searchPlaceholder=\"Search merchants...\"\n          emptyText=\"No merchants found\"\n          className={error ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}\n        />\n      ) : (\n        <Input\n          value={currentUser?.merchant?.name || ''}\n          disabled\n          className=\"bg-gray-50 text-gray-600 cursor-not-allowed\"\n          placeholder=\"Current merchant\"\n        />\n      )}\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n};\n\ninterface OutletSelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  outlets: any[];\n  loading: boolean;\n  error?: string;\n  disabled?: boolean;\n  canSelect: boolean;\n  canSelectMerchant: boolean;\n  merchantId: string;\n  currentUser?: User | null;\n}\n\nexport const OutletSelect: React.FC<OutletSelectProps> = ({\n  value,\n  onChange,\n  outlets,\n  loading,\n  error,\n  disabled = false,\n  canSelect,\n  canSelectMerchant,\n  merchantId,\n  currentUser\n}) => {\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor=\"outlet\" className=\"flex items-center gap-2\">\n        <Store className=\"w-4 h-4\" />\n        Outlet {canSelect ? '*' : '(Read-only)'}\n      </Label>\n      {canSelect ? (\n        <SearchableSelect\n          key={`outlet-${outlets.length}-${merchantId}`}\n          value={value ? Number(value) : undefined}\n          onChange={(val) => onChange(val.toString())}\n          options={outlets.map(outlet => ({\n            value: outlet.id.toString(),\n            label: outlet.name\n          }))}\n          placeholder={\n            loading ? \"Loading outlets...\" : \n            !merchantId && canSelectMerchant ? \"Select merchant first\" : \n            \"Search and select outlet\"\n          }\n          searchPlaceholder=\"Search outlets...\"\n          emptyText=\"No outlets found\"\n          className={error ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}\n        />\n      ) : (\n        <Input\n          value={currentUser?.outlet?.name || ''}\n          disabled\n          className=\"bg-gray-50 text-gray-600 cursor-not-allowed\"\n          placeholder=\"Current outlet\"\n        />\n      )}\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n};\n","'use client'\n\nimport type { UserCreateInput, UserUpdateInput, UserRole } from '@rentalshop/types';\n\n// ============================================================================\n// TYPE-SAFE FORM DATA INTERFACES (Matching UserForm.tsx)\n// ============================================================================\n\ninterface UserCreateFormData {\n  name: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  isActive: boolean;\n  password: string;\n  confirmPassword: string;\n  merchantId: string;\n  outletId: string;\n}\n\ninterface UserUpdateFormData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  role: UserRole;\n  merchantId: string;\n  outletId: string;\n}\n\n// Common validation rules that can be reused across forms\nexport const validateEmail = (email: string): string | null => {\n  if (!email.trim()) {\n    return 'Email is required';\n  }\n  if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n    return 'Email is invalid';\n  }\n  return null;\n};\n\nexport const validatePhone = (phone: string): string | null => {\n  if (!phone.trim()) {\n    return 'Phone number is required';\n  }\n  \n  // Remove all non-digit characters for validation\n  const digitsOnly = phone.replace(/\\D/g, '');\n  \n  if (digitsOnly.length < 8) {\n    return 'Phone number must be at least 8 digits';\n  }\n  if (digitsOnly.length > 15) {\n    return 'Phone number must be less than 16 digits';\n  }\n  \n  // Allow common phone number formats\n  const phoneRegex = /^[\\+]?[0-9\\s\\-\\(\\)]+$/;\n  if (!phoneRegex.test(phone.trim())) {\n    return 'Phone number contains invalid characters';\n  }\n  \n  return null;\n};\n\nexport const validateName = (name: string, fieldName: string = 'Name'): string | null => {\n  if (!name.trim()) {\n    return `${fieldName} is required`;\n  }\n  if (name.trim().length < 2) {\n    return `${fieldName} must be at least 2 characters`;\n  }\n  return null;\n};\n\nexport const validatePassword = (password: string): string | null => {\n  if (!password) {\n    return 'Password is required';\n  }\n  if (password.length < 6) {\n    return 'Password must be at least 6 characters';\n  }\n  return null;\n};\n\nexport const validateConfirmPassword = (password: string, confirmPassword: string): string | null => {\n  if (password && password !== confirmPassword) {\n    return 'Passwords do not match';\n  }\n  return null;\n};\n\n// Validation for user creation\nexport const validateUserCreateInput = (data: UserCreateFormData): Record<string, string> => {\n  const errors: Record<string, string> = {};\n\n  console.log('🔍 UserFormValidation: Validating create input:', data);\n\n  // Name validation (split from full name)\n  const nameParts = data.name?.trim().split(' ') || [];\n  const firstName = nameParts[0] || '';\n  const lastName = nameParts.slice(1).join(' ') || '';\n\n  console.log('🔍 UserFormValidation: Name parts:', { firstName, lastName });\n\n  const firstNameError = validateName(firstName, 'First name');\n  if (firstNameError) errors.firstName = firstNameError;\n\n  // Only validate lastName if it exists (allow single name entry)\n  const lastNameError = lastName ? validateName(lastName, 'Last name') : null;\n  if (lastNameError) errors.lastName = lastNameError;\n\n  // Email validation\n  const emailError = validateEmail(data.email || '');\n  if (emailError) errors.email = emailError;\n\n  // Phone validation\n  const phoneError = validatePhone(data.phone || '');\n  if (phoneError) errors.phone = phoneError;\n\n  // Role validation\n  if (!data.role) {\n    errors.role = 'Role is required';\n  }\n\n  // Smart validation based on role requirements\n  if (data.role) {\n    if (data.role === 'ADMIN') {\n      // ADMIN can have any merchant/outlet or none - no validation needed\n    } else if (data.role === 'MERCHANT') {\n      // MERCHANT must have merchantId, no outletId\n      if (!data.merchantId) {\n        errors.merchantId = 'Merchant is required for this role';\n      }\n      if (data.outletId) {\n        errors.outletId = 'Outlet should not be selected for merchant role';\n      }\n    } else if (data.role === 'OUTLET_ADMIN' || data.role === 'OUTLET_STAFF') {\n      // OUTLET users must have both merchantId and outletId\n      if (!data.merchantId) {\n        errors.merchantId = 'Merchant is required for this role';\n      }\n      if (!data.outletId) {\n        errors.outletId = 'Outlet is required for this role';\n      }\n    }\n  }\n\n  // Password validation\n  const passwordError = validatePassword(data.password || '');\n  if (passwordError) errors.password = passwordError;\n\n  // Confirm password validation\n  const confirmPasswordError = validateConfirmPassword(data.password || '', data.confirmPassword || '');\n  if (confirmPasswordError) errors.confirmPassword = confirmPasswordError;\n\n  console.log('🔍 UserFormValidation: Validation errors:', errors);\n  return errors;\n};\n\n// Validation for user updates\nexport const validateUserUpdateInput = (data: UserUpdateFormData): Record<string, string> => {\n  const errors: Record<string, string> = {};\n\n  console.log('🔍 UserFormValidation: Validating update input:', data);\n\n  // First Name validation\n  const firstNameError = validateName(data.firstName || '', 'First name');\n  if (firstNameError) errors.firstName = firstNameError;\n\n  // Last Name validation\n  const lastNameError = validateName(data.lastName || '', 'Last name');\n  if (lastNameError) errors.lastName = lastNameError;\n\n  // Email validation\n  const emailError = validateEmail(data.email || '');\n  if (emailError) errors.email = emailError;\n\n  // Phone validation\n  const phoneError = validatePhone(data.phone || '');\n  if (phoneError) errors.phone = phoneError;\n\n  // Role validation\n  if (!data.role) {\n    errors.role = 'Role is required';\n  }\n\n  // Smart validation based on role requirements\n  if (data.role) {\n    if (data.role === 'ADMIN') {\n      // ADMIN can have any merchant/outlet or none - no validation needed\n    } else if (data.role === 'MERCHANT') {\n      // MERCHANT must have merchantId, no outletId\n      if (!data.merchantId) {\n        errors.merchantId = 'Merchant is required for this role';\n      }\n      if (data.outletId) {\n        errors.outletId = 'Outlet should not be selected for merchant role';\n      }\n    } else if (data.role === 'OUTLET_ADMIN' || data.role === 'OUTLET_STAFF') {\n      // OUTLET users must have both merchantId and outletId\n      if (!data.merchantId) {\n        errors.merchantId = 'Merchant is required for this role';\n      }\n      if (!data.outletId) {\n        errors.outletId = 'Outlet is required for this role';\n      }\n    }\n  }\n\n  // Note: No password validation in edit mode - password is not changed\n  console.log('🔍 UserFormValidation: Update validation errors:', errors);\n  return errors;\n};\n","import React from 'react';\nimport { \n  Card,\n  CardContent,\n  Button\n} from '@rentalshop/ui';\nimport { \n  Eye, \n  Edit, \n  Building2, \n  Store,\n  Mail,\n  Phone,\n  Calendar,\n  CheckCircle,\n  XCircle\n} from 'lucide-react';\nimport type { User } from '@rentalshop/types';\n\ninterface UserRowProps {\n  user: User;\n  onUserAction: (action: string, userId: number) => void;\n  showActions?: boolean;\n  actions?: string[];\n  className?: string;\n}\n\nexport function UserRow({ \n  user, \n  onUserAction, \n  showActions = true, \n  actions = ['view', 'edit'],\n  className = \"py-4\"\n}: UserRowProps) {\n  const handleUserAction = (action: string, userId: number) => {\n    console.log('🔍 UserRow: handleUserAction called:', { action, userId, user });\n    onUserAction(action, userId);\n  };\n\n  const getRoleBadgeStyle = (role: string) => {\n    switch (role) {\n      case 'ADMIN':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'MERCHANT':\n        return 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:border-blue-800';\n      case 'OUTLET_ADMIN':\n        return 'bg-purple-100 text-purple-800 border-purple-200 dark:bg-purple-900/20 dark:text-purple-400 dark:border-purple-800';\n      case 'OUTLET_STAFF':\n        return 'bg-green-100 text-green-800 border-green-200 dark:bg-green-900/20 dark:text-green-400 dark:border-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n    }\n  };\n\n  const getRoleDisplayName = (role: string) => {\n    switch (role) {\n      case 'ADMIN':\n        return 'Admin';\n      case 'MERCHANT':\n        return 'Merchant';\n      case 'OUTLET_ADMIN':\n        return 'Outlet Admin';\n      case 'OUTLET_STAFF':\n        return 'Outlet Staff';\n      default:\n        return role;\n    }\n  };\n\n  const getStatusBadgeStyle = (isActive: boolean) => {\n    if (isActive) {\n      return 'bg-emerald-100 text-emerald-800 border-emerald-200 dark:bg-emerald-900/20 dark:text-emerald-400 dark:border-emerald-800';\n    } else {\n      return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n    }\n  };\n\n  const getStatusDisplayName = (isActive: boolean) => {\n    return isActive ? 'Active' : 'Inactive';\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const renderActionButton = (action: string) => {\n    switch (action) {\n      case 'view':\n        return (\n          <Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={() => handleUserAction('view', user.id)}\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            View\n          </Button>\n        );\n      case 'edit':\n        return (\n          <Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={() => handleUserAction('edit', user.id)}\n          >\n            <Edit className=\"w-4 h-4 mr-2\" />\n            Edit\n          </Button>\n        );\n      case 'activate':\n        return (\n          <Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={() => handleUserAction('activate', user.id)}\n          >\n            Activate\n          </Button>\n        );\n      case 'deactivate':\n        return (\n          <Button \n            variant=\"outline\" \n            size=\"sm\"\n            onClick={() => handleUserAction('deactivate', user.id)}\n          >\n            Deactivate\n          </Button>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow duration-200\">\n      <CardContent className={className}>\n        <div className=\"flex items-center justify-between\">\n          {/* User Info */}\n          <div className=\"flex-1\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-3 mb-2\">\n                  <h3 className=\"text-lg font-semibold text-text-primary\">\n                    {`${user.firstName || ''} ${user.lastName || ''}`.trim() || user.name || 'Unknown User'}\n                  </h3>\n                  <div className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getRoleBadgeStyle(user.role)}`}>\n                    {getRoleDisplayName(user.role)}\n                  </div>\n                  <div className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getStatusBadgeStyle(user.isActive)}`}>\n                    {getStatusDisplayName(user.isActive)}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-6 text-sm text-text-secondary\">\n                  <div className=\"flex items-center gap-2\">\n                    <Mail className=\"w-4 h-4\" />\n                    <span>{user.email}</span>\n                  </div>\n                  {user.phone && (\n                    <div className=\"flex items-center gap-2\">\n                      <Phone className=\"w-4 h-4\" />\n                      <span>{user.phone}</span>\n                    </div>\n                  )}\n                  {user.outlet && (\n                    <div className=\"flex items-center gap-2\">\n                      <Store className=\"w-4 h-4\" />\n                      <span>{user.outlet.name}</span>\n                      {user.outlet.merchant && (\n                        <span className=\"text-text-tertiary\">• {user.outlet.merchant.name}</span>\n                      )}\n                    </div>\n                  )}\n                  <div className=\"flex items-center gap-2\">\n                    <Calendar className=\"w-4 h-4\" />\n                    <span>Joined {formatDate(typeof user.createdAt === 'string' ? user.createdAt : user.createdAt.toISOString())}</span>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-6 text-sm text-text-tertiary mt-1\">\n                  <span>Last login: {user.lastLoginAt ? formatDate(typeof user.lastLoginAt === 'string' ? user.lastLoginAt : user.lastLoginAt.toISOString()) : 'Never'}</span>\n                  <span>Email verified: {user.emailVerified ? 'Yes' : 'No'}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Actions */}\n          {showActions && (\n            <div className=\"flex items-center gap-2\">\n              {actions.map((action) => {\n                // Show activate/deactivate based on user status\n                if (action === 'activate' && user.isActive) return null;\n                if (action === 'deactivate' && !user.isActive) return null;\n                \n                return (\n                  <div key={action}>\n                    {renderActionButton(action)}\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Button } from '@rentalshop/ui';\nimport { Plus, Download } from 'lucide-react';\n\ninterface UserPageHeaderProps {\n  title?: string;\n  subtitle?: string;\n  showExportButton?: boolean;\n  showAddButton?: boolean;\n  onExport?: () => void;\n  onAdd?: () => void;\n  addButtonText?: string;\n  exportButtonText?: string;\n  className?: string;\n}\n\nexport function UserPageHeader({\n  title = \"Users\",\n  subtitle = \"Manage users in the system\",\n  showExportButton = false,\n  showAddButton = true,\n  onExport,\n  onAdd,\n  addButtonText = \"Add User\",\n  exportButtonText = \"Export\",\n  className = \"\"\n}: UserPageHeaderProps) {\n  return (\n    <div className={`flex justify-between items-start ${className}`}>\n\n      <div className=\"flex gap-3\">\n        {showExportButton && (\n          <Button\n            onClick={onExport}\n            className=\"h-9 px-4 text-sm\"\n          >\n            <Download className=\"w-4 h-4 mr-2\" />\n            {exportButtonText}\n          </Button>\n        )}\n        \n        {showAddButton && (\n          <Button \n            onClick={onAdd}\n            className=\"bg-green-600 hover:bg-green-700 text-white h-9 px-4\"\n          >\n            <Plus className=\"w-4 h-4 mr-2\" />\n            {addButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}","'use client'\n\nimport React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Input } from '../../../ui/input';\nimport { Label } from '../../../ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../../ui/select';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { UserCheck, UserX, Trash2 } from 'lucide-react';\nimport type { User } from '@rentalshop/types';\n\ninterface AccountManagementCardProps {\n  user: User;\n  isUpdating: boolean;\n  onActivate: () => void;\n  onDeactivate: () => void;\n  onDelete: () => void;\n}\n\nexport const AccountManagementCard: React.FC<AccountManagementCardProps> = ({\n  user,\n  isUpdating,\n  onActivate,\n  onDeactivate,\n  onDelete\n}) => {\n  return (\n    <div className=\"bg-white shadow rounded-lg\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h2 className=\"text-lg font-medium text-gray-900\">Account Management</h2>\n      </div>\n      \n      <div className=\"px-6 py-4 space-y-4\">\n        {/* Status Toggle */}\n        <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-900\">Account Status</h3>\n            <p className=\"text-sm text-gray-600\">\n              {user.isActive \n                ? 'User can currently log in and access the system' \n                : 'User is currently disabled and cannot access the system'\n              }\n            </p>\n          </div>\n          \n          <div className=\"flex gap-2\">\n            {user.isActive ? (\n              <Button \n                onClick={onDeactivate} \n                variant=\"outline\" \n                disabled={isUpdating}\n                className=\"text-orange-600 border-orange-600 hover:bg-orange-50\"\n              >\n                <UserX className=\"w-4 h-4 mr-2\" />\n                Deactivate\n              </Button>\n            ) : (\n              <Button \n                onClick={onActivate} \n                variant=\"outline\" \n                disabled={isUpdating}\n                className=\"text-green-600 border-green-600 hover:bg-green-50\"\n              >\n                <UserCheck className=\"w-4 h-4 mr-2\" />\n                Activate\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {/* Delete Account */}\n        <div className=\"flex items-center justify-between p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div>\n            <h3 className=\"text-sm font-medium text-red-900\">Delete Account</h3>\n            <p className=\"text-sm text-red-700\">\n              This action cannot be undone. This will permanently delete the user account and remove all associated data.\n            </p>\n          </div>\n          \n          <Button \n            onClick={onDelete}\n            variant=\"destructive\"\n            className=\"bg-red-600 hover:bg-red-700\"\n          >\n            <Trash2 className=\"w-4 h-4 mr-2\" />\n            Delete Account\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Pagination,\n  EmptyState,\n  Card,\n  CardContent\n} from '@rentalshop/ui';\nimport { OutletTable, OutletSearch } from './components';\nimport { Building2 } from 'lucide-react';\nimport type { Outlet, OutletFilters } from '@rentalshop/types';\nimport { useOutletsTranslations } from '@rentalshop/hooks';\n\n// Data interface for outlets list\nexport interface OutletsData {\n  outlets: Outlet[];\n  total: number;\n  page: number;\n  totalPages: number;\n  limit: number;\n  hasMore: boolean;\n}\n\nexport interface OutletsProps {\n  // Data props\n  data?: OutletsData;\n  filters?: OutletFilters;\n  onSearchChange?: (searchValue: string) => void;\n  onOutletAction?: (action: string, outletId: number) => void;\n  onPageChange?: (page: number) => void;\n  onSort?: (column: string) => void;\n  \n  // Display props\n  currentUser?: any;\n  className?: string;\n}\n\n/**\n * ✅ SIMPLIFIED OUTLETS COMPONENT (Modern Pattern)\n */\nexport const Outlets: React.FC<OutletsProps> = ({\n  data,\n  filters = {},\n  onSearchChange = () => {},\n  onOutletAction = () => {},\n  onPageChange = () => {},\n  onSort = () => {},\n  currentUser,\n  className = \"\"\n}) => {\n  \n  // Get translations\n  const t = useOutletsTranslations();\n  \n  const outlets = data?.outlets || [];\n  const totalOutlets = data?.total || 0;\n  const currentPage = data?.page || 1;\n  const totalPages = data?.totalPages || 1;\n  const limit = data?.limit || 25;\n\n  // Memoize handlers\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnOutletAction = React.useCallback(onOutletAction, [onOutletAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort, [onSort]);\n\n  return (\n    <div className={`flex flex-col h-full ${className}`}>\n      {/* Fixed Search Section */}\n      <div className=\"flex-shrink-0 mb-4\">\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <OutletSearch\n                value={filters.q || ''}\n                onChange={memoizedOnSearchChange}\n                onClear={() => memoizedOnSearchChange('')}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0\">\n        {outlets.length > 0 ? (\n          <OutletTable\n            outlets={outlets}\n            onOutletAction={memoizedOnOutletAction}\n            sortBy={filters.sortBy || \"createdAt\"}\n            sortOrder={filters.sortOrder || \"desc\"}\n            onSort={memoizedOnSort}\n          />\n        ) : (\n          <EmptyState\n            icon={Building2}\n            title={t('messages.noOutlets')}\n            description={\n              filters.q\n                ? t('messages.tryAdjustingSearch')\n                : t('messages.getStarted')\n            }\n          />\n        )}\n      </div>\n\n      {/* Fixed Pagination Section */}\n      {outlets.length > 0 && totalOutlets > limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            total={totalOutlets}\n            limit={limit}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"outlets\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Outlets;\n","import React from 'react';\nimport { \n  Card, \n  CardContent, \n  CardHeader, \n  CardTitle,\n  Button,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@rentalshop/ui';\nimport { \n  Building2, \n  Grid, \n  List, \n  Plus \n} from 'lucide-react';\nimport { useOutletsTranslations } from '@rentalshop/hooks';\n\ninterface OutletHeaderProps {\n  viewMode: 'grid' | 'table';\n  onViewModeChange: (mode: 'grid' | 'table') => void;\n  onAddOutlet: () => void;\n  totalOutlets: number;\n  merchantId?: number;\n}\n\nexport function OutletHeader({\n  viewMode,\n  onViewModeChange,\n  onAddOutlet,\n  totalOutlets,\n  merchantId\n}: OutletHeaderProps) {\n  const t = useOutletsTranslations();\n  \n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-4\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building2 className=\"w-5 h-5\" />\n            {t('title')} ({totalOutlets})\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {/* View Mode Toggle */}\n          <div className=\"flex items-center space-x-1 border rounded-lg p-1\">\n            <Button\n              variant={viewMode === 'grid' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => onViewModeChange('grid')}\n              className=\"h-8 w-8 p-0\"\n            >\n              <Grid className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant={viewMode === 'table' ? 'default' : 'ghost'}\n              size=\"sm\"\n              onClick={() => onViewModeChange('table')}\n              className=\"h-8 w-8 p-0\"\n            >\n              <List className=\"w-4 h-4\" />\n            </Button>\n          </div>\n\n          {/* Add Outlet Button */}\n          <Button onClick={onAddOutlet}>\n            <Plus className=\"w-4 h-4 mr-2\" />\n            {t('addOutlet')}\n          </Button>\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { \n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Button\n} from '@rentalshop/ui';\nimport type { OutletFilters as OutletFiltersType } from '@rentalshop/types';\n\ninterface OutletFiltersProps {\n  filters: OutletFiltersType;\n  onFiltersChange: (filters: OutletFiltersType) => void;\n  onSearchChange: (searchValue: string) => void;\n  onClearFilters?: () => void;\n}\n\n/**\n * ✅ COMPACT OUTLET FILTERS (Following Orders pattern)\n */\nexport function OutletFilters({\n  filters,\n  onFiltersChange,\n  onSearchChange,\n  onClearFilters\n}: OutletFiltersProps) {\n  const handleStatusFilter = (value: string) => {\n    const status = value === 'all' ? undefined : value;\n    onFiltersChange({ ...filters, status });\n  };\n\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            placeholder=\"Search outlets...\"\n            value={filters.search || ''}\n            onChange={(e) => onSearchChange(e.target.value)}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Status Filter */}\n      <Select\n        value={filters.status || 'all'}\n        onValueChange={handleStatusFilter}\n      >\n        <SelectTrigger className=\"w-[150px] h-10\">\n          <SelectValue placeholder=\"Status\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All Status</SelectItem>\n          <SelectItem value=\"active\">Active</SelectItem>\n          <SelectItem value=\"inactive\">Inactive</SelectItem>\n        </SelectContent>\n      </Select>\n\n      {/* Clear Filters */}\n      {(filters.search || filters.status) && onClearFilters && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          Clear\n        </Button>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport { \n  Card, \n  CardContent, \n  CardHeader, \n  CardTitle,\n  Button,\n  StatusBadge\n} from '@rentalshop/ui';\nimport { \n  Building2, \n  MapPin, \n  Phone, \n  Edit, \n  Eye\n} from 'lucide-react';\nimport type { Outlet } from '@rentalshop/types';\n\ninterface OutletGridProps {\n  outlets: Outlet[];\n  onOutletAction: (action: string, outletId: number) => void;\n}\n\nexport function OutletGrid({\n  outlets,\n  onOutletAction\n}: OutletGridProps) {\n  if (outlets.length === 0) {\n    return (\n      <Card>\n        <CardContent className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n          <Building2 className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-lg font-medium mb-2\">No Outlets Found</h3>\n          <p className=\"text-sm\">No outlets match your current filters.</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {outlets.map((outlet) => (\n        <Card key={outlet.id} className=\"hover:shadow-lg transition-shadow\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"flex items-center gap-2\">\n                <Building2 className=\"w-5 h-5\" />\n                {outlet.name}\n                {outlet.isDefault && (\n                  <StatusBadge \n                    status=\"main branch\"\n                    variant=\"outline\"\n                    className=\"flex items-center gap-1\"\n                  />\n                )}\n              </CardTitle>\n              <StatusBadge \n                status={outlet.isActive ? 'active' : 'inactive'}\n                variant=\"default\"\n              />\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {/* Address */}\n            {outlet.address && (\n              <div className=\"flex items-start gap-2\">\n                <MapPin className=\"w-4 h-4 text-gray-500 mt-0.5 flex-shrink-0\" />\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {outlet.address}\n                </div>\n              </div>\n            )}\n\n            {/* Phone */}\n            {outlet.phone && (\n              <div className=\"flex items-center gap-2\">\n                <Phone className=\"w-4 h-4 text-gray-500\" />\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {outlet.phone}\n                </div>\n              </div>\n            )}\n\n            {/* Description */}\n            {outlet.description && (\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {outlet.description}\n              </div>\n            )}\n\n            {/* Created Date */}\n            <div className=\"text-xs text-gray-500\">\n              Created: {new Date(outlet.createdAt).toLocaleDateString()}\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex space-x-2 pt-2\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => onOutletAction('view', outlet.id)}\n                className=\"flex-1\"\n              >\n                <Eye className=\"w-4 h-4 mr-1\" />\n                View\n              </Button>\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => onOutletAction('edit', outlet.id)}\n                className=\"flex-1\"\n              >\n                <Edit className=\"w-4 h-4 mr-1\" />\n                Edit\n              </Button>\n              {/* Only show disable/enable for non-default outlets */}\n              {!outlet.isDefault && (\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => onOutletAction(outlet.isActive ? 'disable' : 'enable', outlet.id)}\n                  className={`flex-1 ${outlet.isActive ? 'text-red-600 border-red-300 hover:bg-red-50 hover:border-red-400 dark:text-red-400 dark:border-red-600 dark:hover:bg-red-900/20' : 'text-green-600 border-green-300 hover:bg-green-50 hover:border-green-400 dark:text-green-400 dark:border-green-600 dark:hover:bg-green-900/20'}`}\n                >\n                  {outlet.isActive ? 'Disable' : 'Enable'}\n                </Button>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Badge } from '../../../ui/badge';\nimport { Card, CardContent } from '../../../ui/card';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '../../../ui/dropdown-menu';\nimport { Outlet } from '@rentalshop/types';\nimport { Eye, Edit, XCircle, CheckCircle, MoreVertical, Building2 } from 'lucide-react';\nimport { useOutletsTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface OutletTableProps {\n  outlets: Outlet[];\n  onOutletAction: (action: string, outletId: number) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\nexport function OutletTable({ \n  outlets, \n  onOutletAction, \n  sortBy = 'createdAt', \n  sortOrder = 'desc',\n  onSort \n}: OutletTableProps) {\n  const t = useOutletsTranslations();\n  const tc = useCommonTranslations();\n  const [openDropdownId, setOpenDropdownId] = React.useState<number | null>(null);\n  \n  if (outlets.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <Building2 className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noOutlets')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.tryAdjustingSearch')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatDate = (dateString: string | Date | undefined) => {\n    if (!dateString) return t('fields.notAvailable');\n    const date = typeof dateString === 'string' ? new Date(dateString) : dateString;\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getStatusBadge = (isActive: boolean) => {\n    return isActive ? (\n      <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n        {tc('labels.active')}\n      </Badge>\n    ) : (\n      <Badge className=\"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\">\n        {tc('labels.inactive')}\n      </Badge>\n    );\n  };\n\n  const handleSort = (column: string) => {\n    if (onSort) {\n      onSort(column);\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 dark:border-gray-700 flex flex-col h-full\">\n      <div className=\"flex-1 overflow-auto\">\n        <table className=\"w-full\">\n          {/* Table Header - Sticky */}\n          <thead className=\"bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10\">\n            <tr>\n              <th \n                onClick={() => handleSort('id')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  ID\n                  {sortBy === 'id' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th \n                onClick={() => handleSort('name')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {tc('labels.name')}\n                  {sortBy === 'name' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.address')}\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {t('fields.phone')}\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.status')}\n              </th>\n              <th \n                onClick={() => handleSort('createdAt')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {tc('labels.createdAt')}\n                  {sortBy === 'createdAt' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.actions')}\n              </th>\n            </tr>\n          </thead>\n          \n          {/* Table Body */}\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {outlets.map((outlet) => (\n              <tr key={outlet.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                {/* ID */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    #{outlet.id}\n                  </div>\n                </td>\n                \n                {/* Name */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm\">\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"font-medium text-gray-900 dark:text-white\">\n                        {outlet.name}\n                      </div>\n                      {outlet.isDefault && (\n                        <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 text-xs\">\n                          {t('labels.default')}\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </td>\n                \n                {/* Address */}\n                <td className=\"px-6 py-4\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {outlet.address || t('fields.notAvailable')}\n                  </div>\n                </td>\n                \n                {/* Contact */}\n                <td className=\"px-6 py-4\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {outlet.phone || t('fields.notAvailable')}\n                  </div>\n                </td>\n                \n                {/* Status */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  {getStatusBadge(outlet.isActive)}\n                </td>\n                \n                {/* Created Date */}\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-white\">\n                    {formatDate(outlet.createdAt)}\n                  </div>\n                </td>\n                \n                {/* Actions - Dropdown Menu */}\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                  <DropdownMenu>\n                    <DropdownMenuTrigger>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-8 w-8 p-0\"\n                        onClick={() => setOpenDropdownId(outlet.id)}\n                      >\n                        <MoreVertical className=\"h-4 w-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent \n                      align=\"end\"\n                      open={openDropdownId === outlet.id}\n                      onOpenChange={(open: boolean) => setOpenDropdownId(open ? outlet.id : null)}\n                    >\n                      <DropdownMenuItem onClick={() => {\n                        onOutletAction('view', outlet.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        {t('actions.viewDetails')}\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => {\n                        onOutletAction('edit', outlet.id);\n                        setOpenDropdownId(null);\n                      }}>\n                        <Edit className=\"h-4 w-4 mr-2\" />\n                        {t('actions.editOutlet')}\n                      </DropdownMenuItem>\n                      \n                      {/* Only show enable/disable for non-default outlets */}\n                      {!outlet.isDefault && (\n                        <>\n                          <DropdownMenuSeparator />\n                          <DropdownMenuItem \n                            onClick={() => {\n                              onOutletAction(outlet.isActive ? 'disable' : 'enable', outlet.id);\n                              setOpenDropdownId(null);\n                            }}\n                            className={outlet.isActive ? \"text-red-600 dark:text-red-400 focus:text-red-700 dark:focus:text-red-300\" : \"text-green-600 dark:text-green-400 focus:text-green-700 dark:focus:text-green-300\"}\n                          >\n                            {outlet.isActive ? <XCircle className=\"h-4 w-4 mr-2\" /> : <CheckCircle className=\"h-4 w-4 mr-2\" />}\n                            {outlet.isActive ? t('actions.disableOutlet') : t('actions.enableOutlet')}\n                          </DropdownMenuItem>\n                        </>\n                      )}\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Input, Button } from '@rentalshop/ui';\nimport { useOutletsTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface OutletSearchProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear: () => void;\n}\n\n/**\n * ✅ COMPACT OUTLET SEARCH (Following Orders pattern)\n */\nexport function OutletSearch({ value, onChange, onClear }: OutletSearchProps) {\n  const t = useOutletsTranslations();\n  const tc = useCommonTranslations();\n  \n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            type=\"text\"\n            placeholder={t('search.placeholder')}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Clear Button */}\n      {value && (\n        <Button\n          onClick={onClear}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"h-10\"\n        >\n          {tc('buttons.clear')}\n        </Button>\n      )}\n    </>\n  );\n}\n\n","import React from 'react';\nimport { Pagination } from '@rentalshop/ui';\n\ninterface OutletPaginationProps {\n  currentPage: number;\n  totalPages: number;\n  total: number;\n  limit: number;\n  onPageChange: (page: number) => void;\n}\n\nexport function OutletPagination({\n  currentPage,\n  totalPages,\n  total,\n  limit,\n  onPageChange\n}: OutletPaginationProps) {\n  return (\n    <Pagination\n      currentPage={currentPage}\n      totalPages={totalPages}\n      total={total}\n      limit={limit}\n      onPageChange={onPageChange}\n    />\n  );\n}\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle\n} from '../../../ui';\nimport { AddOutletForm } from './AddOutletForm';\nimport type { OutletCreateInput } from '@rentalshop/types';\nimport { useOutletsTranslations } from '@rentalshop/hooks';\n\ninterface AddOutletDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onOutletCreated?: (outletData: OutletCreateInput) => Promise<void>;\n  onError?: (error: string) => void;\n  merchantId?: number;\n}\n\nexport const AddOutletDialog: React.FC<AddOutletDialogProps> = ({\n  open,\n  onOpenChange,\n  onOutletCreated,\n  onError,\n  merchantId\n}) => {\n  const t = useOutletsTranslations();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSave = async (outletData: OutletCreateInput) => {\n    try {\n      setIsSubmitting(true);\n      \n      // Call the parent callback to create the outlet\n      // The parent will handle the API call and show toasts\n      if (onOutletCreated) {\n        await onOutletCreated(outletData);\n      }\n      \n      // Close dialog on success\n      onOpenChange(false);\n      \n    } catch (error) {\n      console.error('❌ AddOutletDialog: Error occurred:', error);\n      if (onError) {\n        onError(error instanceof Error ? error.message : 'Failed to create outlet');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto p-0\">\n        <DialogHeader className=\"px-6 py-4 border-b border-gray-200\">\n          <DialogTitle className=\"text-xl font-semibold text-gray-900\">\n            {t('dialogs.addOutletTitle')}\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"p-6\">\n          <AddOutletForm\n            onSave={handleSave}\n            onCancel={handleCancel}\n            isSubmitting={isSubmitting}\n            merchantId={merchantId}\n          />\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\n","'use client'\n\nimport React, { useState } from 'react';\nimport { Save, X } from 'lucide-react';\nimport { Button, Input, Label, Textarea, Card, CardContent } from '@rentalshop/ui';\nimport type { OutletCreateInput } from '@rentalshop/types';\nimport { useOutletsTranslations, useCommonTranslations } from '@rentalshop/hooks';\n\ninterface AddOutletFormProps {\n  onSave: (outletData: OutletCreateInput) => Promise<void>;\n  onCancel?: () => void;\n  isSubmitting?: boolean;\n  merchantId?: number;\n}\n\nexport const AddOutletForm: React.FC<AddOutletFormProps> = ({\n  onSave,\n  onCancel,\n  isSubmitting = false,\n  merchantId\n}) => {\n  const t = useOutletsTranslations();\n  const tc = useCommonTranslations();\n  \n  const [formData, setFormData] = useState({\n    name: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    country: '',\n    phone: '',\n    description: '',\n    merchantId: merchantId || 0\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Outlet name is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      await onSave(formData as OutletCreateInput);\n    } catch (error) {\n      console.error('Error saving outlet:', error);\n    }\n  };\n\n  const handleCancel = () => {\n    if (onCancel) {\n      onCancel();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card>\n        <CardContent className=\"p-6 space-y-4\">\n          {/* Outlet Name - Required */}\n          <div>\n        <Label htmlFor=\"name\">{t('fields.name')} *</Label>\n        <Input\n          id=\"name\"\n          value={formData.name}\n          onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n          placeholder={t('placeholders.enterOutletName')}\n          className={errors.name ? 'border-red-500' : ''}\n        />\n        {errors.name && (\n          <p className=\"text-sm text-red-600 mt-1\">{errors.name}</p>\n        )}\n      </div>\n\n      {/* Address */}\n      <div>\n        <Label htmlFor=\"address\">{t('fields.address')}</Label>\n        <Input\n          id=\"address\"\n          value={formData.address}\n          onChange={(e) => setFormData(prev => ({ ...prev, address: e.target.value }))}\n          placeholder={t('placeholders.enterStreetAddress')}\n        />\n      </div>\n\n      {/* City, State, ZIP Code - In one row */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div>\n          <Label htmlFor=\"city\">{t('fields.city')}</Label>\n          <Input\n            id=\"city\"\n            value={formData.city}\n            onChange={(e) => setFormData(prev => ({ ...prev, city: e.target.value }))}\n            placeholder={t('placeholders.enterCity')}\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"state\">{t('fields.state')}</Label>\n          <Input\n            id=\"state\"\n            value={formData.state}\n            onChange={(e) => setFormData(prev => ({ ...prev, state: e.target.value }))}\n            placeholder={t('placeholders.enterState')}\n          />\n        </div>\n\n        <div>\n          <Label htmlFor=\"zipCode\">{t('fields.zipCode')}</Label>\n          <Input\n            id=\"zipCode\"\n            value={formData.zipCode}\n            onChange={(e) => setFormData(prev => ({ ...prev, zipCode: e.target.value }))}\n            placeholder={t('placeholders.enterZipCode')}\n          />\n        </div>\n      </div>\n\n      {/* Country */}\n      <div>\n        <Label htmlFor=\"country\">{t('fields.country')}</Label>\n        <Input\n          id=\"country\"\n          value={formData.country}\n          onChange={(e) => setFormData(prev => ({ ...prev, country: e.target.value }))}\n          placeholder={t('placeholders.enterCountry')}\n        />\n      </div>\n\n      {/* Phone */}\n      <div>\n        <Label htmlFor=\"phone\">{t('fields.phone')}</Label>\n        <Input\n          id=\"phone\"\n          type=\"tel\"\n          value={formData.phone}\n          onChange={(e) => setFormData(prev => ({ ...prev, phone: e.target.value }))}\n          placeholder={t('placeholders.enterOutletPhone')}\n        />\n      </div>\n\n      {/* Description */}\n      <div>\n        <Label htmlFor=\"description\">{t('fields.description')}</Label>\n        <Textarea\n          id=\"description\"\n          value={formData.description}\n          onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n          placeholder={t('placeholders.enterOutletDescription')}\n          rows={3}\n        />\n      </div>\n\n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 border-t pt-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={handleCancel}\n              disabled={isSubmitting}\n            >\n              <X className=\"w-4 h-4 mr-2\" />\n              {tc('buttons.cancel')}\n            </Button>\n            \n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              <Save className=\"w-4 h-4 mr-2\" />\n              {isSubmitting ? tc('buttons.saving') : tc('buttons.save')}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </form>\n  );\n};\n\n","'use client';\n\nimport React from 'react';\nimport { \n  Pagination,\n  EmptyState,\n  Card,\n  CardContent\n} from '@rentalshop/ui';\nimport { CategoryTable, CategorySearch } from './components';\nimport { FolderOpen } from 'lucide-react';\nimport type { Category, CategoryFilters } from '@rentalshop/types';\nimport { useCategoriesTranslations } from '@rentalshop/hooks';\n\n// Data interface for categories list\nexport interface CategoriesData {\n  categories: Category[];\n  total: number;\n  currentPage: number;\n  totalPages: number;\n  limit: number;\n  hasMore: boolean;\n}\n\nexport interface CategoriesProps {\n  // Data props\n  data?: CategoriesData;\n  filters?: CategoryFilters;\n  onSearchChange?: (searchValue: string) => void;\n  onCategoryAction?: (action: string, categoryId: number) => void;\n  onPageChange?: (page: number) => void;\n  onSort?: (column: string) => void;\n  \n  // Display props\n  currentUser?: any;\n  className?: string;\n}\n\n/**\n * ✅ SIMPLIFIED CATEGORIES COMPONENT (Modern Pattern)\n */\nexport const Categories: React.FC<CategoriesProps> = ({\n  data,\n  filters = {},\n  onSearchChange = () => {},\n  onCategoryAction = () => {},\n  onPageChange = () => {},\n  onSort = () => {},\n  currentUser,\n  className = \"\"\n}) => {\n  \n  // Get translations\n  const t = useCategoriesTranslations();\n  \n  const categories = data?.categories || [];\n  const totalCategories = data?.total || 0;\n  const currentPage = data?.currentPage || 1;\n  const totalPages = data?.totalPages || 1;\n  const limit = data?.limit || 25;\n\n  // Memoize handlers\n  const memoizedOnSearchChange = React.useCallback(onSearchChange, [onSearchChange]);\n  const memoizedOnCategoryAction = React.useCallback(onCategoryAction, [onCategoryAction]);\n  const memoizedOnPageChange = React.useCallback(onPageChange, [onPageChange]);\n  const memoizedOnSort = React.useCallback(onSort, [onSort]);\n\n  return (\n    <div className={`flex flex-col h-full ${className}`}>\n      {/* Fixed Search Section */}\n      <div className=\"flex-shrink-0 mb-4\">\n        <Card className=\"shadow-sm border-border\">\n          <CardContent className=\"pt-4 pb-4\">\n            <div className=\"flex flex-wrap items-center gap-3\">\n              <CategorySearch\n                value={filters.q || ''}\n                onChange={memoizedOnSearchChange}\n                onClear={() => memoizedOnSearchChange('')}\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Scrollable Table Section */}\n      <div className=\"flex-1 min-h-0\">\n        {categories.length > 0 ? (\n          <CategoryTable\n            categories={categories}\n            onCategoryAction={memoizedOnCategoryAction}\n            sortBy={filters.sortBy || \"name\"}\n            sortOrder={filters.sortOrder || \"asc\"}\n            onSort={memoizedOnSort}\n          />\n        ) : (\n          <EmptyState\n            icon={FolderOpen}\n            title={t('messages.noCategories')}\n            description={\n              filters.q\n                ? t('messages.tryAdjustingSearch')\n                : t('messages.getStarted')\n            }\n          />\n        )}\n      </div>\n\n      {/* Fixed Pagination Section */}\n      {categories.length > 0 && totalCategories > limit && (\n        <div className=\"flex-shrink-0 py-4\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            total={totalCategories}\n            limit={limit}\n            onPageChange={memoizedOnPageChange}\n            itemName=\"categories\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Categories;\n","'use client'\n\nimport React from 'react';\nimport { Button } from '@rentalshop/ui';\nimport { Plus } from 'lucide-react';\nimport { useUserRole } from '@rentalshop/hooks';\n\ninterface CategoryHeaderProps {\n  onAddCategory: () => void;\n}\n\nexport const CategoryHeader: React.FC<CategoryHeaderProps> = ({\n  onAddCategory\n}) => {\n  const { canManageCategories } = useUserRole();\n  \n  return (\n    <div className=\"flex items-center justify-between\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Product Categories</h1>\n        <p className=\"text-muted-foreground\">\n          Manage your product categories for better organization\n        </p>\n      </div>\n      \n      {canManageCategories && (\n        <Button onClick={onAddCategory} className=\"flex items-center space-x-2\">\n          <Plus className=\"h-4 w-4\" />\n          <span>Add Category</span>\n        </Button>\n      )}\n    </div>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Card, \n  CardContent,\n  Button\n} from '../../../ui';\nimport { Plus, Download, Upload, Edit3 } from 'lucide-react';\nimport { useUserRole } from '@rentalshop/hooks';\nimport { AddCategoryDialog } from './AddCategoryDialog';\n\ninterface CategoryActionsProps {\n  onAddCategory: () => void;\n  onImportCategories: () => void;\n  onExportCategories: () => void;\n  onBulkEdit: () => void;\n  onCategoryCreated?: (category: any) => void;\n  onError?: (error: string) => void;\n}\n\nexport const CategoryActions: React.FC<CategoryActionsProps> = ({\n  onAddCategory,\n  onImportCategories,\n  onExportCategories,\n  onBulkEdit,\n  onCategoryCreated,\n  onError\n}) => {\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  // Use hook instead of prop\n  const { canManageCategories } = useUserRole();\n  // Filter actions based on user role - Only ADMIN and MERCHANT can manage categories\n  const allActions = [\n    {\n      id: 'add-category',\n      label: 'Add Category',\n      description: 'Create a new product category',\n      icon: '➕',\n      variant: 'default' as const,\n      onClick: () => setIsAddDialogOpen(true),\n      roles: canManageCategories ? ['ALL'] : [] // Use permission check\n    },\n    {\n      id: 'import-categories',\n      label: 'Import Categories',\n      description: 'Import from CSV/Excel',\n      icon: '📥',\n      variant: 'secondary' as const,\n      onClick: onImportCategories,\n      roles: canManageCategories ? ['ALL'] : [] // Use permission check\n    },\n    {\n      id: 'export-categories',\n      label: 'Export Categories',\n      description: 'Export to CSV/Excel',\n      icon: '📤',\n      variant: 'outline' as const,\n      onClick: onExportCategories,\n      roles: ['ALL'] // All roles can export\n    },\n    {\n      id: 'bulk-edit',\n      label: 'Bulk Edit',\n      description: 'Edit multiple categories',\n      icon: '✏️',\n      variant: 'outline' as const,\n      onClick: onBulkEdit,\n      roles: canManageCategories ? ['ALL'] : [] // Use permission check\n    }\n  ];\n\n  // Filter actions based on current user role\n  const actions = allActions.filter(action => \n    !action.roles || action.roles.length > 0\n  ).map(({ roles, ...action }) => action); // Remove roles property from final actions\n\n  return (\n    <>\n    <Card>\n      <CardContent className=\"p-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\n          {actions.map((action) => (\n            <Button\n              key={action.id}\n              variant={action.variant}\n              className=\"h-auto p-3 flex flex-col items-start space-y-2 text-left\"\n              onClick={action.onClick}\n            >\n              <div className=\"flex items-center space-x-2 w-full\">\n                <span className=\"text-lg\">{action.icon}</span>\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-sm\">{action.label}</div>\n                  <div className=\"text-xs opacity-80\">{action.description}</div>\n                </div>\n              </div>\n            </Button>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n\n    {/* Category Add Dialog */}\n    <AddCategoryDialog\n      open={isAddDialogOpen}\n      onOpenChange={setIsAddDialogOpen}\n      onCategoryCreated={onCategoryCreated}\n      onError={onError}\n    />\n    </>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle\n} from '../../../ui';\nimport { useCategoriesTranslations } from '@rentalshop/hooks';\nimport { CategoryFormContent } from './CategoryFormContent';\nimport type { Category } from '@rentalshop/types';\n\ninterface AddCategoryDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onCategoryCreated?: (category: Category) => void;\n  onError?: (error: string) => void;\n}\n\nexport const AddCategoryDialog: React.FC<AddCategoryDialogProps> = ({\n  open,\n  onOpenChange,\n  onCategoryCreated,\n  onError\n}) => {\n  const t = useCategoriesTranslations();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSave = async (categoryData: Category) => {\n    try {\n      setIsSubmitting(true);\n      \n      // Call the parent callback to create the category\n      // The parent will handle the API call and show toasts\n      if (onCategoryCreated) {\n        await onCategoryCreated(categoryData);\n      }\n      \n      // Close dialog on success\n      onOpenChange(false);\n      \n    } catch (error) {\n      console.error('❌ AddCategoryDialog: Error occurred:', error);\n      if (onError) {\n        onError(error instanceof Error ? error.message : 'Failed to create category');\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSubmitting) return; // Prevent cancellation while submitting\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>{t('dialog.addNew')}</DialogTitle>\n        </DialogHeader>\n        \n        <CategoryFormContent\n          category={null}\n          onSave={handleSave}\n          onCancel={handleCancel}\n          mode=\"create\"\n          isSubmitting={isSubmitting}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Button,\n  Input,\n  Textarea,\n  Label\n} from '../../../ui';\nimport { useCategoriesTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { Save, Loader2 } from 'lucide-react';\nimport type { Category } from '@rentalshop/types';\n\ninterface CategoryFormContentProps {\n  category?: Category | null;\n  onSave: (category: Category) => void;\n  onCancel: () => void;\n  mode: 'create' | 'edit';\n  isSubmitting?: boolean;\n}\n\nexport const CategoryFormContent: React.FC<CategoryFormContentProps> = ({\n  category,\n  onSave,\n  onCancel,\n  mode,\n  isSubmitting: externalIsSubmitting\n}) => {\n  const t = useCategoriesTranslations();\n  const tc = useCommonTranslations();\n  \n  const [formData, setFormData] = useState({\n    name: '',\n    description: ''\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Use external isSubmitting if provided, otherwise use internal state\n  const submitting = externalIsSubmitting !== undefined ? externalIsSubmitting : isSubmitting;\n\n  // Initialize form data when editing\n  useEffect(() => {\n    if (category && mode === 'edit') {\n      setFormData({\n        name: category.name || '',\n        description: category.description || ''\n      });\n    }\n  }, [category, mode]);\n\n  const handleInputChange = (field: string, value: string | boolean) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // Clear field-specific error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = t('validation.nameRequired');\n    } else if (formData.name.trim().length < 2) {\n      newErrors.name = t('validation.nameMinLength');\n    } else if (formData.name.trim().length > 50) {\n      newErrors.name = t('validation.nameMaxLength');\n    }\n\n    if (formData.description && formData.description.trim().length > 200) {\n      newErrors.description = t('validation.descriptionMaxLength');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    if (externalIsSubmitting === undefined) {\n      setIsSubmitting(true);\n    }\n\n    try {\n      // Prepare category data\n      const categoryData: Partial<Category> = {\n        name: formData.name.trim(),\n        description: formData.description.trim() || undefined\n      };\n\n      // Call the onSave callback\n      await onSave(categoryData as Category);\n      \n    } catch (error) {\n      console.error('Error saving category:', error);\n      // Error handling is done by the parent component\n    } finally {\n      if (externalIsSubmitting === undefined) {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  const handleCancel = () => {\n    if (submitting) return; // Prevent cancellation while submitting\n    onCancel();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div>\n        <Label htmlFor=\"name\">{t('fields.name')} *</Label>\n        <Input\n          id=\"name\"\n          value={formData.name}\n          onChange={(e) => handleInputChange('name', e.target.value)}\n          placeholder={t('fields.name')}\n          className={errors.name ? 'border-red-500' : ''}\n          disabled={submitting}\n          required\n        />\n        {errors.name && (\n          <p className=\"text-sm text-red-500 mt-1\">{errors.name}</p>\n        )}\n      </div>\n\n      <div>\n        <Label htmlFor=\"description\">{t('fields.description')}</Label>\n        <Textarea\n          id=\"description\"\n          value={formData.description}\n          onChange={(e) => handleInputChange('description', e.target.value)}\n          placeholder={t('fields.description')}\n          rows={3}\n          className={errors.description ? 'border-red-500' : ''}\n          disabled={submitting}\n        />\n        {errors.description && (\n          <p className=\"text-sm text-red-500 mt-1\">{errors.description}</p>\n        )}\n        <p className=\"text-xs text-gray-500 mt-1\">\n          {formData.description.length}/200 {t('validation.characters')}\n        </p>\n      </div>\n\n      <div className=\"flex items-center justify-end gap-3 pt-4\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={handleCancel}\n          disabled={submitting}\n        >\n          {tc('buttons.cancel')}\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={submitting}\n        >\n          {submitting ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              {tc('buttons.saving')}\n            </>\n          ) : (\n            <>\n              <Save className=\"h-4 w-4 mr-2\" />\n              {mode === 'create' ? t('actions.create') : t('actions.update')}\n            </>\n          )}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\n","'use client'\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  Badge\n} from '../../../ui';\nimport { Edit, Tag, Calendar, MoreHorizontal, Eye } from 'lucide-react';\nimport type { Category } from '@rentalshop/types';\n\ninterface CategoryCardProps {\n  category: Category;\n  onView: (category: Category) => void;\n  onEdit: (category: Category) => void;\n}\n\nexport const CategoryCard: React.FC<CategoryCardProps> = ({\n  category,\n  onView,\n  onEdit\n}) => {\n  const handleView = () => {\n    onView(category);\n  };\n\n  const handleEdit = () => {\n    onEdit(category);\n  };\n\n  return (\n    <Card className=\"h-full hover:shadow-md transition-shadow\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"p-2 bg-primary/10 rounded-lg\">\n              <Tag className=\"h-4 w-4 text-primary\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <CardTitle className=\"text-lg font-semibold truncate\">\n                {category.name}\n              </CardTitle>\n              <div className=\"flex items-center space-x-2 mt-1\">\n                <Badge \n                  variant={category.isActive ? 'default' : 'secondary'}\n                  className=\"text-xs\"\n                >\n                  {category.isActive ? 'Active' : 'Inactive'}\n                </Badge>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-1\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleView}\n              className=\"h-8 px-3\"\n            >\n              <Eye className=\"h-4 w-4 mr-1\" />\n              View\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleEdit}\n              className=\"h-8 px-3 text-blue-700 hover:text-blue-700 hover:bg-blue-50 border-blue-200 hover:border-blue-300\"\n            >\n              <Edit className=\"h-4 w-4 mr-1\" />\n              Edit\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"pt-0\">\n        {category.description ? (\n          <p className=\"text-sm text-muted-foreground line-clamp-2 mb-3\">\n            {category.description}\n          </p>\n        ) : (\n          <p className=\"text-sm text-muted-foreground mb-3 italic\">\n            No description provided\n          </p>\n        )}\n\n        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n          <div className=\"flex items-center space-x-1\">\n            <Calendar className=\"h-3 w-3\" />\n            <span>\n              Created {new Date(category.createdAt).toLocaleDateString()}\n            </span>\n          </div>\n          \n          {category.updatedAt && category.updatedAt !== category.createdAt && (\n            <span className=\"text-xs\">\n              Updated {new Date(category.updatedAt).toLocaleDateString()}\n            </span>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { CategoryCard } from './CategoryCard';\nimport type { Category } from '@rentalshop/types';\nimport { useCategoriesTranslations } from '@rentalshop/hooks';\n\ninterface CategoryGridProps {\n  categories: Category[];\n  onViewCategory: (category: Category) => void;\n  onEditCategory: (category: Category) => void;\n  sortField?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSortChange?: (field: string, order: 'asc' | 'desc') => void;\n}\n\nexport const CategoryGrid: React.FC<CategoryGridProps> = ({\n  categories,\n  onViewCategory,\n  onEditCategory,\n  sortField,\n  sortOrder,\n  onSortChange\n}) => {\n  const t = useCategoriesTranslations();\n  if (categories.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg border p-6\">\n        <div className=\"text-center py-12\">\n          <div className=\"mx-auto w-24 h-24 bg-muted rounded-full flex items-center justify-center mb-4\">\n            <svg\n              className=\"w-12 h-12 text-muted-foreground\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n              />\n            </svg>\n          </div>\n          <h3 className=\"text-lg font-medium text-muted-foreground mb-2\">\n            {t('messages.noCategories')}\n          </h3>\n          <p className=\"text-muted-foreground mb-4\">\n            {t('messages.getStarted')}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg border p-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {categories.map((category) => (\n          <CategoryCard\n            key={category.id}\n            category={category}\n            onView={onViewCategory}\n            onEdit={onEditCategory}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Badge } from '../../../ui/badge';\nimport { Card, CardContent } from '../../../ui/card';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '../../../ui/dropdown-menu';\nimport { Category } from '@rentalshop/types';\nimport { useCategoriesTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { Eye, Edit, Trash2, CheckCircle, XCircle, MoreVertical, FolderOpen } from 'lucide-react';\n\ninterface CategoryTableProps {\n  categories: Category[];\n  onCategoryAction: (action: string, categoryId: number) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (column: string) => void;\n}\n\nexport function CategoryTable({ \n  categories, \n  onCategoryAction, \n  sortBy = 'name', \n  sortOrder = 'asc',\n  onSort \n}: CategoryTableProps) {\n  const [openDropdownId, setOpenDropdownId] = React.useState<number | null>(null);\n  const t = useCategoriesTranslations();\n  const tc = useCommonTranslations();\n  \n  if (categories.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-gray-200 dark:border-gray-700\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <FolderOpen className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noCategories')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.noCategoriesDescription')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatDate = (dateString: string | Date | undefined) => {\n    if (!dateString) return 'N/A';\n    const date = typeof dateString === 'string' ? new Date(dateString) : dateString;\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getStatusBadge = (isActive: boolean) => {\n    return isActive ? (\n      <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n        {t('status.active')}\n      </Badge>\n    ) : (\n      <Badge className=\"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\">\n        {t('status.inactive')}\n      </Badge>\n    );\n  };\n\n  const handleSort = (column: string) => {\n    if (onSort) {\n      onSort(column);\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 dark:border-gray-700 flex flex-col h-full\">\n      <div className=\"flex-1 overflow-auto\">\n        <table className=\"w-full\">\n          {/* Table Header - Sticky */}\n          <thead className=\"bg-gray-50 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10\">\n            <tr>\n              <th \n                onClick={() => handleSort('id')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  ID\n                  {sortBy === 'id' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th \n                onClick={() => handleSort('name')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {tc('labels.name')}\n                  {sortBy === 'name' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.description')}\n              </th>\n              {/* Status column hidden as requested */}\n              {/* <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.status')}\n              </th> */}\n              <th \n                onClick={() => handleSort('createdAt')}\n                className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  {tc('labels.createdAt')}\n                  {sortBy === 'createdAt' && (\n                    <span className=\"text-xs\">{sortOrder === 'desc' ? '↓' : '↑'}</span>\n                  )}\n                </div>\n              </th>\n              <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                {tc('labels.actions')}\n              </th>\n            </tr>\n          </thead>\n\n          {/* Table Body - Scrollable */}\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {categories.map((category) => (\n              <tr \n                key={category.id} \n                className=\"hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\"\n              >\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">\n                  #{category.id}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm\">\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"font-medium text-gray-900 dark:text-gray-100\">\n                        {category.name}\n                      </div>\n                      {category.isDefault && (\n                        <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200 text-xs\">\n                          {t('labels.default')}\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 text-sm text-gray-500 dark:text-gray-400\">\n                  <div className=\"max-w-xs truncate\">\n                    {category.description || 'N/A'}\n                  </div>\n                </td>\n                {/* Status cell hidden as requested */}\n                {/* <td className=\"px-6 py-4 whitespace-nowrap\">\n                  {getStatusBadge(category.isActive)}\n                </td> */}\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                  {formatDate(category.createdAt)}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button \n                        variant=\"ghost\" \n                        size=\"sm\" \n                        className=\"h-8 w-8 p-0\"\n                        onClick={() => setOpenDropdownId(category.id)}\n                      >\n                        <MoreVertical className=\"h-4 w-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent \n                      align=\"end\"\n                      open={openDropdownId === category.id}\n                      onOpenChange={(open) => setOpenDropdownId(open ? category.id : null)}\n                    >\n                      <DropdownMenuItem\n                        onClick={() => {\n                          onCategoryAction('view', category.id);\n                          setOpenDropdownId(null);\n                        }}\n                        className=\"cursor-pointer\"\n                      >\n                        <Eye className=\"mr-2 h-4 w-4\" />\n                        {t('actions.viewDetails')}\n                      </DropdownMenuItem>\n                      \n                      <DropdownMenuItem\n                        onClick={() => {\n                          onCategoryAction('edit', category.id);\n                          setOpenDropdownId(null);\n                        }}\n                        className=\"cursor-pointer\"\n                      >\n                        <Edit className=\"mr-2 h-4 w-4\" />\n                        {t('actions.edit')}\n                      </DropdownMenuItem>\n                      \n                      {/* Activate/Deactivate hidden as requested */}\n                      {/* <DropdownMenuSeparator />\n                      \n                      <DropdownMenuItem\n                        onClick={() => {\n                          onCategoryAction(category.isActive ? 'deactivate' : 'activate', category.id);\n                          setOpenDropdownId(null);\n                        }}\n                        className=\"cursor-pointer\"\n                      >\n                        {category.isActive ? (\n                          <>\n                            <XCircle className=\"mr-2 h-4 w-4\" />\n                            {t('actions.deactivate')}\n                          </>\n                        ) : (\n                          <>\n                            <CheckCircle className=\"mr-2 h-4 w-4\" />\n                            {t('actions.activate')}\n                          </>\n                        )}\n                      </DropdownMenuItem> */}\n                      \n                      {/* Only show delete for non-default categories */}\n                      {!category.isDefault && (\n                        <>\n                          <DropdownMenuSeparator />\n                          <DropdownMenuItem\n                            onClick={() => {\n                              onCategoryAction('delete', category.id);\n                              setOpenDropdownId(null);\n                            }}\n                            className=\"cursor-pointer text-red-600 dark:text-red-400\"\n                          >\n                            <Trash2 className=\"mr-2 h-4 w-4\" />\n                            {t('actions.delete')}\n                          </DropdownMenuItem>\n                        </>\n                      )}\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n}\n","'use client'\n\nimport React from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle\n} from '../../../ui';\nimport { useCategoriesTranslations } from '@rentalshop/hooks';\nimport { CategoryFormContent } from './CategoryFormContent';\nimport type { Category } from '@rentalshop/types';\n\ninterface CategoryFormProps {\n  category?: Category | null;\n  onSave: (category: Category) => void;\n  onCancel: () => void;\n  mode: 'create' | 'edit';\n}\n\n/**\n * CategoryForm - Wrapper component that includes Dialog\n * This is kept for backward compatibility\n * For new code, use CategoryFormContent with your own Dialog wrapper\n */\nexport const CategoryForm: React.FC<CategoryFormProps> = ({\n  category,\n  onSave,\n  onCancel,\n  mode\n}) => {\n  const t = useCategoriesTranslations();\n  \n  return (\n    <Dialog open={true} onOpenChange={onCancel}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>\n            {mode === 'create' ? t('dialog.addNew') : t('dialog.edit')}\n          </DialogTitle>\n        </DialogHeader>\n        \n        <CategoryFormContent\n          category={category}\n          onSave={onSave}\n          onCancel={onCancel}\n          mode={mode}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","'use client'\n\nimport React, { useState } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  Button,\n  Label\n} from '../../../ui';\nimport { useCategoriesTranslations, useCommonTranslations } from '@rentalshop/hooks';\nimport { useLocale } from 'next-intl';\nimport { formatDateWithLocale } from '@rentalshop/utils';\nimport { Edit, Trash2, AlertTriangle } from 'lucide-react';\nimport type { Category } from '@rentalshop/types';\n\ninterface CategoryViewProps {\n  category: Category | null;\n  onClose: () => void;\n  onEdit: (category: Category) => void;\n  onDelete: (category: Category) => void;\n}\n\nexport const CategoryView: React.FC<CategoryViewProps> = ({\n  category,\n  onClose,\n  onEdit,\n  onDelete\n}) => {\n  const t = useCategoriesTranslations();\n  const tc = useCommonTranslations();\n  const locale = useLocale();\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  if (!category) return null;\n\n  const handleEdit = () => {\n    onEdit(category);\n    onClose();\n  };\n\n  const handleDelete = () => {\n    setShowDeleteConfirm(true);\n  };\n\n  const handleConfirmDelete = () => {\n    onDelete(category);\n    setShowDeleteConfirm(false);\n    onClose();\n  };\n\n  const handleCancelDelete = () => {\n    setShowDeleteConfirm(false);\n  };\n\n  return (\n    <>\n      <Dialog open={!!category} onOpenChange={onClose}>\n        <DialogContent className=\"sm:max-w-[600px]\">\n          <DialogHeader>\n            <div>\n              <DialogTitle className=\"text-xl font-semibold\">\n                {t('dialog.viewDetails')}\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-gray-600 mt-1\">\n                {t('dialog.viewDescription')}\n              </DialogDescription>\n            </div>\n          </DialogHeader>\n          {category && (\n            <div className=\"mt-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label className=\"text-sm font-medium text-gray-700\">{t('fields.name')}</Label>\n                  <div className=\"mt-1 p-3 bg-gray-50 rounded-md border\">\n                    <p className=\"text-gray-900 font-medium\">{category.name}</p>\n                  </div>\n                </div>\n                \n                {category.description && (\n                  <div className=\"md:col-span-2\">\n                    <Label className=\"text-sm font-medium text-gray-700\">{t('fields.description')}</Label>\n                    <div className=\"mt-1 p-3 bg-gray-50 rounded-md border\">\n                      <p className=\"text-gray-900 whitespace-pre-wrap\">{category.description}</p>\n                    </div>\n                  </div>\n                )}\n                \n                <div>\n                  <Label className=\"text-sm font-medium text-gray-700\">{tc('labels.createdAt')}</Label>\n                  <div className=\"mt-1 p-3 bg-gray-50 rounded-md border\">\n                    <p className=\"text-gray-900\">\n                      {category.createdAt \n                        ? formatDateWithLocale(category.createdAt, locale as 'en' | 'vi')\n                        : tc('labels.unknown')\n                      }\n                    </p>\n                  </div>\n                </div>\n                \n                <div>\n                  <Label className=\"text-sm font-medium text-gray-700\">{tc('labels.updatedAt')}</Label>\n                  <div className=\"mt-1 p-3 bg-gray-50 rounded-md border\">\n                    <p className=\"text-gray-900\">\n                      {category.updatedAt && category.updatedAt !== category.createdAt\n                        ? formatDateWithLocale(category.updatedAt, locale as 'en' | 'vi')\n                        : t('dialog.neverUpdated')\n                      }\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center justify-end gap-3 pt-4\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={onClose}\n                >\n                  {tc('buttons.close')}\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={handleEdit}\n                >\n                  {t('actions.edit')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog open={showDeleteConfirm} onOpenChange={setShowDeleteConfirm}>\n        <DialogContent className=\"sm:max-w-[600px]\">\n          <DialogHeader>\n            <DialogTitle>{t('dialog.deleteTitle')}</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600\">\n              {t('dialog.deleteConfirmation')} <strong>\"{category?.name}\"</strong>?\n            </p>\n            <p className=\"text-sm text-gray-500\">\n              {t('dialog.deleteWarning')}\n            </p>\n            <div className=\"flex items-center justify-end gap-3 pt-4\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={handleCancelDelete}\n              >\n                {tc('buttons.cancel')}\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"destructive\"\n                onClick={handleConfirmDelete}\n              >\n                {t('actions.delete')}\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { Input, Button } from '@rentalshop/ui';\nimport type { CategorySearchParams as CategoryFiltersType } from '@rentalshop/types';\n\ninterface CategoryFiltersProps {\n  filters: CategoryFiltersType;\n  onFiltersChange: (filters: CategoryFiltersType) => void;\n  onSearchChange: (search: string) => void;\n  onClearFilters: () => void;\n  onSortChange?: (sortBy: string, sortOrder: 'asc' | 'desc') => void;\n  currentSort?: { field: string; order: 'asc' | 'desc' };\n}\n\n/**\n * ✅ COMPACT CATEGORY FILTERS (Following Orders pattern)\n */\nexport const CategoryFilters: React.FC<CategoryFiltersProps> = ({\n  filters,\n  onSearchChange,\n  onClearFilters\n}) => {\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            type=\"text\"\n            placeholder=\"Search categories...\"\n            value={filters.search || ''}\n            onChange={(e) => onSearchChange(e.target.value)}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Clear Filters */}\n      {filters.search && (\n        <Button\n          onClick={onClearFilters}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"h-10\"\n        >\n          Clear\n        </Button>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Input, Button } from '@rentalshop/ui';\n\ninterface CategorySearchProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear: () => void;\n}\n\n/**\n * ✅ COMPACT CATEGORY SEARCH (Following Orders pattern)\n */\nexport function CategorySearch({ value, onChange, onClear }: CategorySearchProps) {\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            type=\"text\"\n            placeholder=\"Search categories...\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Clear Button */}\n      {value && (\n        <Button\n          onClick={onClear}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"h-10\"\n        >\n          Clear\n        </Button>\n      )}\n    </>\n  );\n}\n\n","import { \n  TableSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '../../../ui/skeleton';\n\nexport function CategoriesLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Categories Table */}\n      <TableSkeleton rows={8} columns={4} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function CategoryDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n      </div>\n    </div>\n  );\n}\n\n","'use client'\n\nimport React from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle,\n  DialogDescription\n} from '@rentalshop/ui';\nimport { PlanForm } from '../../../forms/PlanForm';\nimport type { \n  PlanCreateInput, \n  PlanUpdateInput,\n  Plan\n} from '@rentalshop/types';\n\ninterface PlanDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  mode: 'create' | 'edit' | 'view';\n  plan?: Plan;\n  onSubmit: (data: PlanCreateInput | PlanUpdateInput) => Promise<void>;\n  loading?: boolean;\n}\n\nexport const PlanDialog: React.FC<PlanDialogProps> = ({\n  open,\n  onOpenChange,\n  mode,\n  plan,\n  onSubmit,\n  loading = false\n}) => {\n  const getDialogTitle = () => {\n    switch (mode) {\n      case 'create':\n        return 'Create New Plan';\n      case 'edit':\n        return 'Edit Plan';\n      case 'view':\n        return 'Plan Details';\n      default:\n        return 'Plan';\n    }\n  };\n\n  const getDialogDescription = () => {\n    switch (mode) {\n      case 'create':\n        return 'Create a new subscription plan for merchants';\n      case 'edit':\n        return 'Update the plan information and settings';\n      case 'view':\n        return 'View plan details and configuration';\n      default:\n        return '';\n    }\n  };\n\n  const handleSubmit = async (data: PlanCreateInput | PlanUpdateInput) => {\n    try {\n      await onSubmit(data);\n      onOpenChange(false);\n    } catch (error) {\n      console.error('Error submitting plan:', error);\n    }\n  };\n\n  const handleCancel = () => {\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>{getDialogTitle()}</DialogTitle>\n          <DialogDescription>\n            {getDialogDescription()}\n          </DialogDescription>\n        </DialogHeader>\n        \n        <PlanForm\n          initialData={plan}\n          onSubmit={handleSubmit}\n          onCancel={handleCancel}\n          loading={loading}\n          mode={mode}\n          hideHeader={true}\n          title={getDialogTitle()}\n          submitText={mode === 'create' ? 'Create Plan' : mode === 'edit' ? 'Update Plan' : 'Save Changes'}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { \n  Button,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@rentalshop/ui';\nimport { \n  Eye, \n  Edit, \n  Trash2, \n  Settings, \n  MoreHorizontal,\n  Copy,\n  Archive,\n  Star\n} from 'lucide-react';\nimport type { Plan } from '@rentalshop/types';\n\ninterface PlanActionsProps {\n  plan: Plan;\n  onView: (plan: Plan) => void;\n  onEdit: (plan: Plan) => void;\n  onDelete: (plan: Plan) => void;\n  onToggleStatus: (plan: Plan) => void;\n  onTogglePopular: (plan: Plan) => void;\n  onDuplicate?: (plan: Plan) => void;\n  onArchive?: (plan: Plan) => void;\n}\n\nexport const PlanActions: React.FC<PlanActionsProps> = ({\n  plan,\n  onView,\n  onEdit,\n  onDelete,\n  onToggleStatus,\n  onTogglePopular,\n  onDuplicate,\n  onArchive\n}) => {\n  return (\n    <div className=\"flex items-center justify-end gap-2\">\n      {/* Quick Actions */}\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => onView(plan)}\n        className=\"h-8 w-8 p-0\"\n        title=\"View plan details\"\n      >\n        <Eye className=\"w-4 h-4\" />\n      </Button>\n      \n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => onEdit(plan)}\n        className=\"h-8 w-8 p-0\"\n        title=\"Edit plan\"\n      >\n        <Edit className=\"w-4 h-4\" />\n      </Button>\n\n      {/* Dropdown Menu for Additional Actions */}\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-8 w-8 p-0\"\n            title=\"More actions\"\n          >\n            <MoreHorizontal className=\"w-4 h-4\" />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\" className=\"w-48\">\n          <DropdownMenuItem onClick={() => onToggleStatus(plan)}>\n            <Settings className=\"w-4 h-4 mr-2\" />\n            {plan.isActive ? 'Deactivate' : 'Activate'}\n          </DropdownMenuItem>\n          \n          <DropdownMenuItem onClick={() => onTogglePopular(plan)}>\n            <Star className=\"w-4 h-4 mr-2\" />\n            {plan.isPopular ? 'Remove Popular' : 'Mark Popular'}\n          </DropdownMenuItem>\n          \n          {onDuplicate && (\n            <DropdownMenuItem onClick={() => onDuplicate(plan)}>\n              <Copy className=\"w-4 h-4 mr-2\" />\n              Duplicate Plan\n            </DropdownMenuItem>\n          )}\n          \n          <DropdownMenuSeparator />\n          \n          {onArchive && (\n            <DropdownMenuItem onClick={() => onArchive(plan)}>\n              <Archive className=\"w-4 h-4 mr-2\" />\n              Archive Plan\n            </DropdownMenuItem>\n          )}\n          \n          <DropdownMenuItem \n            onClick={() => onDelete(plan)}\n            className=\"text-red-600 focus:text-red-600\"\n          >\n            <Trash2 className=\"w-4 h-4 mr-2\" />\n            Delete Plan\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  );\n};\n","'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  Badge,\n  RadioGroup,\n  RadioGroupItem,\n  Label\n} from '@rentalshop/ui';\nimport { \n  CheckCircle,\n  Star,\n  Package,\n  Users,\n  CreditCard,\n  Calendar,\n  DollarSign\n} from 'lucide-react';\nimport { BILLING_CYCLES } from '@rentalshop/constants';\nimport { \n  calculateDiscountedPrice,\n  getBillingCycleDiscount,\n  formatBillingCycle\n} from '@rentalshop/utils';\nimport type { Plan, BillingCycle } from '@rentalshop/types';\n\ninterface PlanSelectionProps {\n  plans: Plan[];\n  selectedPlanId?: number;\n  selectedBillingCycle?: BillingCycle;\n  onPlanSelect: (planId: number, billingCycle: BillingCycle) => void;\n  loading?: boolean;\n  disabled?: boolean;\n}\n\nexport const PlanSelection: React.FC<PlanSelectionProps> = ({\n  plans,\n  selectedPlanId,\n  selectedBillingCycle = 'monthly',\n  onPlanSelect,\n  loading = false,\n  disabled = false\n}) => {\n  const [selectedPlan, setSelectedPlan] = useState<number | undefined>(selectedPlanId);\n  const [selectedCycle, setSelectedCycle] = useState<BillingCycle>(selectedBillingCycle);\n\n  useEffect(() => {\n    if (selectedPlanId) {\n      setSelectedPlan(selectedPlanId);\n    }\n  }, [selectedPlanId]);\n\n  useEffect(() => {\n    if (selectedBillingCycle) {\n      setSelectedCycle(selectedBillingCycle);\n    }\n  }, [selectedBillingCycle]);\n\n  const handlePlanSelect = (planId: number) => {\n    setSelectedPlan(planId);\n    onPlanSelect(planId, selectedCycle);\n  };\n\n  const handleBillingCycleSelect = (cycle: BillingCycle) => {\n    setSelectedCycle(cycle);\n    if (selectedPlan) {\n      onPlanSelect(selectedPlan, cycle);\n    }\n  };\n\n  const formatCurrency = (price: number, currency: string) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency || 'USD'\n    }).format(price);\n  };\n\n  const getLimitText = (limit: number) => {\n    return limit === -1 ? 'Unlimited' : limit.toString();\n  };\n\n  const getPlanCardVariant = (plan: Plan) => {\n    if (selectedPlan === plan.id) return 'default';\n    if (plan.isPopular) return 'bordered';\n    return 'bordered';\n  };\n\n  const getBillingCyclePrice = (plan: Plan, cycle: BillingCycle) => {\n    const cycleOption = BILLING_CYCLES.find(option => option.value === cycle);\n    if (!cycleOption) return plan.price;\n\n    const totalPrice = plan.price * cycleOption.months;\n    const discount = getBillingCycleDiscount(cycle);\n    const discountAmount = totalPrice * (discount / 100);\n    return totalPrice - discountAmount;\n  };\n\n  const getBillingCycleMonthlyPrice = (plan: Plan, cycle: BillingCycle) => {\n    const totalPrice = getBillingCyclePrice(plan, cycle);\n    const cycleOption = BILLING_CYCLES.find(option => option.value === cycle);\n    return cycleOption ? totalPrice / cycleOption.months : plan.price;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-bg-tertiary rounded w-1/4 mb-4\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"h-96 bg-bg-tertiary rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Billing Cycle Selection */}\n      <div className=\"space-y-4\">\n        <div>\n          <h3 className=\"text-lg font-medium text-text-primary mb-2\">Select Billing Cycle</h3>\n          <p className=\"text-text-secondary\">Choose how often you'd like to be billed</p>\n        </div>\n        \n        <RadioGroup \n          value={selectedCycle} \n          onValueChange={handleBillingCycleSelect}\n          className=\"grid grid-cols-1 md:grid-cols-4 gap-4\"\n        >\n          {BILLING_CYCLES.map((cycle) => (\n            <div key={cycle.value}>\n              <RadioGroupItem\n                value={cycle.value}\n                id={cycle.value}\n                className=\"peer sr-only\"\n                disabled={disabled}\n              />\n              <Label\n                htmlFor={cycle.value}\n                className=\"flex flex-col items-center justify-between rounded-md border-2 border-border bg-bg-card p-4 hover:bg-bg-secondary cursor-pointer peer-data-[state=checked]:border-action-primary peer-data-[state=checked]:bg-action-primary/5 [&:has([data-state=checked])]:border-action-primary\"\n              >\n                <div className=\"text-center\">\n                  <div className=\"font-medium text-text-primary\">{cycle.label}</div>\n                  <div className=\"text-sm text-text-secondary\">{cycle.description}</div>\n                  {getBillingCycleDiscount(cycle.value) > 0 && (\n                    <Badge variant=\"default\" className=\"mt-2\">\n                      {getBillingCycleDiscount(cycle.value)}% OFF\n                    </Badge>\n                  )}\n                </div>\n              </Label>\n            </div>\n          ))}\n        </RadioGroup>\n      </div>\n\n      {/* Plan Selection */}\n      <div className=\"space-y-4\">\n        <div>\n          <h3 className=\"text-lg font-medium text-text-primary mb-2\">Select Your Plan</h3>\n          <p className=\"text-text-secondary\">Choose the plan that best fits your business needs</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {plans.map((plan) => (\n            <Card \n              key={plan.id} \n              className={`cursor-pointer transition-all duration-200 hover:shadow-lg ${\n                selectedPlan === plan.id ? 'ring-2 ring-action-primary' : ''\n              } ${plan.isPopular ? 'ring-2 ring-action-primary' : ''}`}\n              onClick={() => !disabled && handlePlanSelect(plan.id)}\n            >\n              <CardHeader>\n                <div className=\"text-center\">\n                  {plan.isPopular && (\n                    <div className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-action-primary text-white mb-3\">\n                      <Star className=\"w-3 h-3 mr-1\" />\n                      Most Popular\n                    </div>\n                  )}\n                  <CardTitle>{plan.name}</CardTitle>\n                  <p className=\"text-text-secondary text-sm mt-2\">{plan.description}</p>\n                </div>\n              </CardHeader>\n              \n              <CardContent>\n                {/* Pricing */}\n                <div className=\"text-center mb-6\">\n                  <div className=\"text-4xl font-bold text-text-primary\">\n                    {formatCurrency(getBillingCyclePrice(plan, selectedCycle), plan.currency)}\n                  </div>\n                  <div className=\"text-lg text-text-secondary\">\n                    per {formatBillingCycle(selectedCycle).toLowerCase()}\n                  </div>\n                  <div className=\"text-sm text-text-tertiary mt-1\">\n                    {formatCurrency(getBillingCycleMonthlyPrice(plan, selectedCycle), plan.currency)}/month\n                  </div>\n                  {getBillingCycleDiscount(selectedCycle) > 0 && (\n                    <div className=\"text-sm text-action-success mt-1\">\n                      {getBillingCycleDiscount(selectedCycle)}% discount applied\n                    </div>\n                  )}\n                  {plan.trialDays > 0 && (\n                    <div className=\"text-sm text-action-primary mt-1\">\n                      {plan.trialDays}-day free trial\n                    </div>\n                  )}\n                </div>\n\n                {/* Limits */}\n                <div className=\"space-y-3 mb-6\">\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-text-secondary flex items-center gap-2\">\n                      <Package className=\"w-4 h-4\" />\n                      Outlets\n                    </span>\n                    <span className=\"font-medium\">{getLimitText(plan.limits.outlets)}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-text-secondary flex items-center gap-2\">\n                      <Users className=\"w-4 h-4\" />\n                      Users\n                    </span>\n                    <span className=\"font-medium\">{getLimitText(plan.limits.users)}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-text-secondary flex items-center gap-2\">\n                      <CreditCard className=\"w-4 h-4\" />\n                      Products\n                    </span>\n                    <span className=\"font-medium\">{getLimitText(plan.limits.products)}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-text-secondary flex items-center gap-2\">\n                      <Users className=\"w-4 h-4\" />\n                      Customers\n                    </span>\n                    <span className=\"font-medium\">{getLimitText(plan.limits.customers)}</span>\n                  </div>\n                </div>\n\n                {/* Features */}\n                <div className=\"space-y-2 mb-6\">\n                  {plan.features.slice(0, 4).map((feature, index) => (\n                    <div key={index} className=\"flex items-center gap-2 text-sm\">\n                      <CheckCircle className=\"w-4 h-4 text-action-success flex-shrink-0\" />\n                      <span className=\"text-text-secondary\">{feature}</span>\n                    </div>\n                  ))}\n                  {plan.features.length > 4 && (\n                    <div className=\"text-sm text-text-tertiary\">\n                      +{plan.features.length - 4} more features\n                    </div>\n                  )}\n                </div>\n\n                {/* Selection Indicator */}\n                <div className=\"text-center\">\n                  {selectedPlan === plan.id ? (\n                    <div className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-action-success text-white\">\n                      <CheckCircle className=\"w-3 h-3 mr-1\" />\n                      Selected\n                    </div>\n                  ) : (\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full\"\n                      disabled={disabled}\n                    >\n                      Select Plan\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Badge,\n  Button\n} from '@rentalshop/ui';\nimport { \n  Package, \n  Users, \n  CreditCard,\n  Star,\n  Eye,\n  Edit,\n  Settings\n} from 'lucide-react';\nimport type { Plan } from '@rentalshop/types';\n\ninterface PlanCardProps {\n  plan: Plan;\n  onView?: (plan: Plan) => void;\n  onEdit?: (plan: Plan) => void;\n  onToggleStatus?: (plan: Plan) => void;\n  showActions?: boolean;\n  variant?: 'default' | 'compact' | 'detailed';\n}\n\nexport const PlanCard: React.FC<PlanCardProps> = ({\n  plan,\n  onView,\n  onEdit,\n  onToggleStatus,\n  showActions = true,\n  variant = 'default'\n}) => {\n  const formatCurrency = (price: number, currency: string) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency || 'USD'\n    }).format(price);\n  };\n\n  const getBillingCycleText = (cycle: string) => {\n    return cycle === 'monthly' ? '/month' : '/year';\n  };\n\n  const getLimitText = (limit: number) => {\n    return limit === -1 ? 'Unlimited' : limit.toString();\n  };\n\n  const formatDate = (date: Date | string) => {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  if (variant === 'compact') {\n    return (\n      <Card className=\"hover:shadow-md transition-shadow\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex items-center gap-2\">\n                <Package className=\"w-4 h-4 text-text-tertiary\" />\n                <span className=\"font-medium text-text-primary\">{plan.name}</span>\n                {plan.isPopular && (\n                  <Badge variant=\"default\" className=\"text-xs\">\n                    <Star className=\"w-3 h-3 mr-1\" />\n                    Popular\n                  </Badge>\n                )}\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"font-medium text-text-primary\">\n                {formatCurrency(plan.price, plan.currency)}\n                <span className=\"text-sm text-text-secondary font-normal\">\n                  {getBillingCycleText(plan.billingCycle)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (variant === 'detailed') {\n    return (\n      <Card className=\"hover:shadow-md transition-shadow\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <Package className=\"w-5 h-5\" />\n              {plan.name}\n              {plan.isPopular && (\n                <Badge variant=\"default\" className=\"text-xs\">\n                  <Star className=\"w-3 h-3 mr-1\" />\n                  Popular\n                </Badge>\n              )}\n            </CardTitle>\n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-action-primary\">\n                {formatCurrency(plan.price, plan.currency)}\n                <span className=\"text-sm text-text-secondary font-normal\">\n                  {getBillingCycleText(plan.billingCycle)}\n                </span>\n              </div>\n              {plan.trialDays > 0 && (\n                <div className=\"text-xs text-action-primary\">\n                  {plan.trialDays}-day trial\n                </div>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <p className=\"text-text-secondary\">{plan.description}</p>\n          \n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <Package className=\"w-4 h-4 text-text-tertiary\" />\n              <span className=\"text-text-secondary\">Outlets:</span>\n              <span className=\"font-medium\">{getLimitText(plan.limits.outlets)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Users className=\"w-4 h-4 text-text-tertiary\" />\n              <span className=\"text-text-secondary\">Users:</span>\n              <span className=\"font-medium\">{getLimitText(plan.limits.users)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <CreditCard className=\"w-4 h-4 text-text-tertiary\" />\n              <span className=\"text-text-secondary\">Products:</span>\n              <span className=\"font-medium\">{getLimitText(plan.limits.products)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Users className=\"w-4 h-4 text-text-tertiary\" />\n              <span className=\"text-text-secondary\">Customers:</span>\n              <span className=\"font-medium\">{getLimitText(plan.limits.customers)}</span>\n            </div>\n          </div>\n\n          <div className=\"text-sm text-text-secondary\">\n            <div className=\"font-medium mb-1\">Features ({plan.features.length}):</div>\n            <div className=\"text-xs text-text-tertiary\">\n              {plan.features.slice(0, 3).join(', ')}\n              {plan.features.length > 3 && '...'}\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-between text-xs text-text-tertiary\">\n            <span>Created: {formatDate(plan.createdAt)}</span>\n            <span>Sort Order: {plan.sortOrder}</span>\n          </div>\n\n          {showActions && (\n            <div className=\"flex items-center justify-end gap-2 pt-2 border-t border-border\">\n              {onView && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => onView(plan)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Eye className=\"w-4 h-4\" />\n                </Button>\n              )}\n              {onEdit && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => onEdit(plan)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                </Button>\n              )}\n              {onToggleStatus && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => onToggleStatus(plan)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Settings className=\"w-4 h-4\" />\n                </Button>\n              )}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Default variant\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Package className=\"w-5 h-5\" />\n            {plan.name}\n            {plan.isPopular && (\n              <Badge variant=\"default\" className=\"text-xs\">\n                <Star className=\"w-3 h-3 mr-1\" />\n                Popular\n              </Badge>\n            )}\n          </CardTitle>\n          <div className=\"text-right\">\n            <div className=\"text-xl font-bold text-action-primary\">\n              {formatCurrency(plan.price, plan.currency)}\n              <span className=\"text-sm text-text-secondary font-normal\">\n                {getBillingCycleText(plan.billingCycle)}\n              </span>\n            </div>\n            {plan.trialDays > 0 && (\n              <div className=\"text-xs text-action-primary\">\n                {plan.trialDays}-day trial\n              </div>\n            )}\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-3\">\n        <p className=\"text-sm text-text-secondary line-clamp-2\">\n          {plan.description}\n        </p>\n        \n        <div className=\"grid grid-cols-2 gap-2 text-xs\">\n          <div className=\"flex items-center gap-1\">\n            <Package className=\"w-3 h-3 text-text-tertiary\" />\n            <span className=\"text-text-secondary\">Outlets:</span>\n            <span className=\"font-medium\">{getLimitText(plan.maxOutlets)}</span>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Users className=\"w-3 h-3 text-text-tertiary\" />\n            <span className=\"text-text-secondary\">Users:</span>\n            <span className=\"font-medium\">{getLimitText(plan.maxUsers)}</span>\n          </div>\n        </div>\n\n        {showActions && (\n          <div className=\"flex items-center justify-end gap-2 pt-2 border-t border-border\">\n            {onView && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => onView(plan)}\n                className=\"h-8 w-8 p-0\"\n              >\n                <Eye className=\"w-4 h-4\" />\n              </Button>\n            )}\n            {onEdit && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => onEdit(plan)}\n                className=\"h-8 w-8 p-0\"\n              >\n                <Edit className=\"w-4 h-4\" />\n              </Button>\n            )}\n            {onToggleStatus && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => onToggleStatus(plan)}\n                className=\"h-8 w-8 p-0\"\n              >\n                <Settings className=\"w-4 h-4\" />\n              </Button>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","'use client';\n\nimport React, { useState } from 'react';\nimport { \n  Card,\n  CardHeader,\n  CardTitle,\n  CardContent,\n  Badge,\n  Button,\n  StatusBadge,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@rentalshop/ui';\nimport { \n  Package, \n  Users, \n  CreditCard,\n  Star,\n  Eye,\n  Edit,\n  Settings,\n  ChevronUp,\n  ChevronDown,\n  Trash2,\n  MoreVertical\n} from 'lucide-react';\nimport type { Plan } from '@rentalshop/types';\nimport { usePlansTranslations } from '@rentalshop/hooks';\n\ninterface PlanTableProps {\n  plans: Plan[];\n  onView?: (plan: Plan) => void;\n  onEdit?: (plan: Plan) => void;\n  onDelete?: (plan: Plan) => void;\n  onToggleStatus?: (plan: Plan) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (field: string) => void;\n  loading?: boolean;\n}\n\nexport const PlanTable: React.FC<PlanTableProps> = ({\n  plans,\n  onView,\n  onEdit,\n  onDelete,\n  onToggleStatus,\n  sortBy = 'sortOrder',\n  sortOrder = 'asc',\n  onSort,\n  loading = false\n}) => {\n  const t = usePlansTranslations();\n  const [openMenuId, setOpenMenuId] = useState<number | null>(null);\n  const formatCurrency = (price: number, currency: string) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency || 'USD'\n    }).format(price);\n  };\n\n  const getLimitText = (limit: number | undefined) => {\n    if (limit === undefined || limit === null) return 'N/A';\n    return limit === -1 ? 'Unlimited' : limit.toString();\n  };\n\n  const formatDate = (date: Date | string) => {\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\n    return dateObj.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const handleSort = (field: string) => {\n    if (onSort) {\n      onSort(field);\n    }\n  };\n\n  const getSortIcon = (field: string) => {\n    if (sortBy !== field) return null;\n    return sortOrder === 'asc' ? <ChevronUp className=\"w-4 h-4\" /> : <ChevronDown className=\"w-4 h-4\" />;\n  };\n\n  if (loading) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent className=\"p-0\">\n          <div className=\"animate-pulse space-y-4 p-6\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"h-16 bg-bg-tertiary rounded\"></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (plans.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-text-tertiary\">\n            <div className=\"text-4xl mb-4\">📋</div>\n            <h3 className=\"text-lg font-medium mb-2\">{t('messages.noPlans')}</h3>\n            <p className=\"text-sm\">\n              {t('messages.getStarted')}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border-border flex flex-col h-full\">\n      <CardContent className=\"p-0 flex-1 overflow-hidden\">\n        {/* Table with scroll - flex layout */}\n        <div className=\"flex-1 overflow-auto h-full\">\n          <table className=\"w-full\">\n            {/* Table Header - Sticky */}\n            <thead className=\"bg-bg-secondary border-b border-border sticky top-0 z-10\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Plan Name\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Price & Billing\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Limits\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Created At\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            {/* Table Body */}\n            <tbody className=\"bg-bg-card divide-y divide-border\">\n              {plans.map((plan) => (\n                <tr key={plan.id} className=\"hover:bg-bg-secondary transition-colors\">\n                  {/* Plan Name with Icon */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-br from-action-primary to-brand-primary flex items-center justify-center\">\n                        <Package className=\"w-5 h-5 text-white\" />\n                      </div>\n                      <div>\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"text-sm font-medium text-text-primary\">\n                            {plan.name}\n                          </div>\n                          {plan.isPopular && (\n                            <Badge className=\"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\">\n                              <Star className=\"w-3 h-3 mr-1\" />\n                              Popular\n                            </Badge>\n                          )}\n                        </div>\n                        <div className=\"text-sm text-text-tertiary mt-1\">\n                          {plan.description}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  {/* Price */}\n                  <td className=\"px-6 py-4\">\n                    <div>\n                      <div className=\"text-sm font-medium text-text-primary\">\n                        {formatCurrency(plan.basePrice, plan.currency)}\n                        <span className=\"text-sm text-text-secondary font-normal\">/month</span>\n                      </div>\n                      {plan.trialDays > 0 && (\n                        <div className=\"text-xs text-action-primary mt-1\">\n                          {plan.trialDays}-day trial\n                        </div>\n                      )}\n                    </div>\n                  </td>\n                  \n                  {/* Limits - Compact */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {getLimitText(plan.limits.outlets)} outlets\n                    </div>\n                    <div className=\"text-sm text-text-secondary\">\n                      {getLimitText(plan.limits.users)} users\n                    </div>\n                  </td>\n                  \n                  {/* Status */}\n                  <td className=\"px-6 py-4\">\n                    <StatusBadge \n                      status={plan.isActive ? 'active' : 'inactive'}\n                    />\n                  </td>\n                  \n                  {/* Created Date */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {formatDate(plan.createdAt)}\n                    </div>\n                  </td>\n                  {/* Actions - Dropdown Menu */}\n                  <td className=\"px-6 py-4 text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          onClick={() => setOpenMenuId(openMenuId === plan.id ? null : plan.id)}\n                        >\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent \n                        align=\"end\"\n                        open={openMenuId === plan.id}\n                        onOpenChange={(open: boolean) => setOpenMenuId(open ? plan.id : null)}\n                      >\n                        {onView && (\n                          <DropdownMenuItem \n                            onClick={() => {\n                              onView(plan);\n                              setOpenMenuId(null);\n                            }}\n                          >\n                            <Eye className=\"h-4 w-4 mr-2\" />\n                            View Details\n                          </DropdownMenuItem>\n                        )}\n                        {onEdit && (\n                          <DropdownMenuItem \n                            onClick={() => {\n                              onEdit(plan);\n                              setOpenMenuId(null);\n                            }}\n                          >\n                            <Edit className=\"h-4 w-4 mr-2\" />\n                            Edit Plan\n                          </DropdownMenuItem>\n                        )}\n                        {onToggleStatus && (\n                          <DropdownMenuItem \n                            onClick={() => {\n                              onToggleStatus(plan);\n                              setOpenMenuId(null);\n                            }}\n                          >\n                            <Settings className=\"h-4 w-4 mr-2\" />\n                            {plan.isActive ? 'Deactivate' : 'Activate'}\n                          </DropdownMenuItem>\n                        )}\n                        {onDelete && (\n                          <>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem \n                              onClick={() => {\n                                onDelete(plan);\n                                setOpenMenuId(null);\n                              }}\n                              className=\"text-action-danger focus:text-action-danger\"\n                            >\n                              <Trash2 className=\"h-4 w-4 mr-2\" />\n                              Delete Plan\n                            </DropdownMenuItem>\n                          </>\n                        )}\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Button\n} from '@rentalshop/ui';\n\ninterface PlanFiltersProps {\n  searchTerm: string;\n  statusFilter: string;\n  onSearchChange: (value: string) => void;\n  onStatusFilterChange: (value: string) => void;\n  onClearFilters?: () => void;\n  showClearButton?: boolean;\n}\n\n/**\n * ✅ COMPACT PLAN FILTERS (Following Orders pattern)\n */\nexport const PlanFilters: React.FC<PlanFiltersProps> = ({\n  searchTerm,\n  statusFilter,\n  onSearchChange,\n  onStatusFilterChange,\n  onClearFilters,\n  showClearButton = true\n}) => {\n  const hasActiveFilters = searchTerm || statusFilter !== 'all';\n\n  return (\n    <>\n      {/* Search Field */}\n      <div className=\"flex-1 min-w-[280px]\">\n        <div className=\"relative\">\n          <Input\n            placeholder=\"Search plans...\"\n            value={searchTerm}\n            onChange={(e) => onSearchChange(e.target.value)}\n            className=\"pl-9 h-10\"\n          />\n          <svg \n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-text-tertiary\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" \n            />\n          </svg>\n        </div>\n      </div>\n\n      {/* Status Filter */}\n      <Select value={statusFilter} onValueChange={onStatusFilterChange}>\n        <SelectTrigger className=\"w-[150px] h-10\">\n          <SelectValue placeholder=\"Status\" />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectItem value=\"all\">All Plans</SelectItem>\n          <SelectItem value=\"active\">Active</SelectItem>\n          <SelectItem value=\"inactive\">Inactive</SelectItem>\n        </SelectContent>\n      </Select>\n\n      {/* Clear Filters */}\n      {showClearButton && hasActiveFilters && onClearFilters && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={onClearFilters}\n          className=\"h-10\"\n        >\n          Clear\n        </Button>\n      )}\n    </>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardContent\n} from '@rentalshop/ui';\nimport { \n  Package,\n  Star,\n  TrendingUp,\n  Users\n} from 'lucide-react';\n\ninterface PlanStatsProps {\n  totalPlans: number;\n  activePlans: number;\n  featuredPlans: number;\n  plansWithTrial: number;\n  className?: string;\n}\n\nexport const PlanStats: React.FC<PlanStatsProps> = ({\n  totalPlans,\n  activePlans,\n  featuredPlans,\n  plansWithTrial,\n  className = ''\n}) => {\n  return (\n    <div className={`grid grid-cols-1 md:grid-cols-4 gap-6 ${className}`}>\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-action-primary\">\n              {totalPlans}\n            </div>\n            <div className=\"text-sm text-text-secondary\">Total Plans</div>\n          </div>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-action-success\">\n              {activePlans}\n            </div>\n            <div className=\"text-sm text-text-secondary\">Active Plans</div>\n          </div>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-brand-secondary\">\n              {featuredPlans}\n            </div>\n            <div className=\"text-sm text-text-secondary\">Featured Plans</div>\n          </div>\n        </CardContent>\n      </Card>\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-action-primary\">\n              {plansWithTrial}\n            </div>\n            <div className=\"text-sm text-text-secondary\">Plans with Trial</div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","import React from 'react';\nimport { X, Check, Star } from 'lucide-react';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { formatCurrency } from '@rentalshop/utils';\n\n// Local type definitions to avoid import issues\ninterface BillingCycle {\n  value: string;\n  label: string;\n  months: number;\n  discount: number;\n}\n\ninterface Plan {\n  id: number;\n  name: string;\n  description: string;\n  price: number;\n  currency: string;\n  billingCycle: string;\n  billingCycleMonths: number;\n  features: string[];\n  limits: {\n    outlets: number;\n    users: number;\n    products: number;\n  };\n  status: 'active' | 'inactive';\n  isPopular?: boolean;\n  trialDays: number;\n}\n\ninterface PlanDetailModalProps {\n  plan: Plan | null;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSubscribe: (planId: number, billingCycle: string) => void;\n}\n\n// Billing cycle options\nconst BILLING_CYCLES: BillingCycle[] = [\n  { value: 'monthly', label: 'Monthly', months: 1, discount: 0 },\n  { value: 'quarterly', label: 'Quarterly', months: 3, discount: 5 },\n  { value: 'semi_annual', label: 'Semi-Annual', months: 6, discount: 10 },\n  { value: 'annual', label: 'Annual', months: 12, discount: 20 }\n];\n\n// Helper functions\nconst getBillingCycleDiscount = (cycle: string): number => {\n  const billingCycle = BILLING_CYCLES.find(bc => bc.value === cycle);\n  return billingCycle?.discount || 0;\n};\n\nconst calculateDiscountedPrice = (basePrice: number, cycle: string): number => {\n  const discount = getBillingCycleDiscount(cycle);\n  const billingCycle = BILLING_CYCLES.find(bc => bc.value === cycle);\n  const months = billingCycle?.months || 1;\n  \n  const totalBeforeDiscount = basePrice * months;\n  const discountAmount = (totalBeforeDiscount * discount) / 100;\n  return totalBeforeDiscount - discountAmount;\n};\n\nconst calculateSavings = (basePrice: number, cycle: string): number => {\n  const discount = getBillingCycleDiscount(cycle);\n  const billingCycle = BILLING_CYCLES.find(bc => bc.value === cycle);\n  const months = billingCycle?.months || 1;\n  \n  const totalBeforeDiscount = basePrice * months;\n  return (totalBeforeDiscount * discount) / 100;\n};\n\nexport const PlanDetailModal: React.FC<PlanDetailModalProps> = ({\n  plan,\n  open,\n  onOpenChange,\n  onSubscribe\n}) => {\n  if (!plan) return null;\n\n  const handleSubscribe = (billingCycle: string) => {\n    onSubscribe(plan.id, billingCycle);\n  };\n\n  return (\n    <div className={`fixed inset-0 z-50 flex items-center justify-center ${open ? 'block' : 'hidden'}`}>\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"\n        onClick={() => onOpenChange(false)}\n      />\n      \n      {/* Modal */}\n      <div className=\"relative w-full max-w-4xl mx-4 bg-white rounded-lg shadow-xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <div className=\"flex items-center gap-3\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">{plan.name} Plan</h2>\n            {plan.isPopular && (\n              <Badge variant=\"default\" className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">\n                <Star className=\"w-3 h-3 mr-1\" />\n                Popular\n              </Badge>\n            )}\n          </div>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => onOpenChange(false)}\n            className=\"h-8 w-8 p-0\"\n          >\n            <X className=\"w-4 h-4\" />\n          </Button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {/* Description */}\n          <p className=\"text-gray-600 mb-6\">{plan.description}</p>\n\n          {/* Billing Cycle Options */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              Choose Your Billing Cycle\n            </h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {BILLING_CYCLES.map((cycle) => {\n                const discountedPrice = calculateDiscountedPrice(plan.price, cycle.value);\n                const savings = calculateSavings(plan.price, cycle.value);\n                const isSelected = plan.billingCycle === cycle.value;\n\n                return (\n                  <Card \n                    key={cycle.value}\n                    className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n                      isSelected ? 'ring-2 ring-blue-500 bg-blue-50' : 'hover:bg-gray-50'\n                    }`}\n                    onClick={() => handleSubscribe(cycle.value)}\n                  >\n                    <CardHeader className=\"pb-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <CardTitle className=\"text-base font-semibold\">\n                          {cycle.label}\n                        </CardTitle>\n                        {isSelected && (\n                          <Check className=\"w-5 h-5 text-blue-500\" />\n                        )}\n                      </div>\n                    </CardHeader>\n                    <CardContent className=\"pt-0\">\n                      <div className=\"space-y-2\">\n                        <div className=\"text-2xl font-bold text-gray-900\">\n                          {formatCurrency(plan.price, plan.currency)}/month\n                        </div>\n                        \n                        {cycle.discount > 0 && (\n                          <div className=\"text-sm text-green-600 font-medium\">\n                            {cycle.discount}% discount\n                          </div>\n                        )}\n                        \n                        <div className=\"text-sm text-gray-600\">\n                          Total: {formatCurrency(discountedPrice, plan.currency)}\n                        </div>\n                        \n                        {savings > 0 && (\n                          <div className=\"text-xs text-green-600\">\n                            Save: {formatCurrency(savings, plan.currency)}\n                          </div>\n                        )}\n                        \n                        <Button \n                          variant={isSelected ? \"default\" : \"outline\"}\n                          size=\"sm\"\n                          className=\"w-full mt-3\"\n                          onClick={(e: React.MouseEvent) => {\n                            e.stopPropagation();\n                            handleSubscribe(cycle.value);\n                          }}\n                        >\n                          {isSelected ? 'Selected' : 'Select'}\n                        </Button>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Plan Features */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Plan Features</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h4 className=\"font-medium text-gray-900 mb-3\">Limits</h4>\n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  <li className=\"flex items-center gap-2\">\n                    <Check className=\"w-4 h-4 text-green-500\" />\n                    {plan.limits.outlets === -1 ? 'Unlimited' : plan.limits.outlets} outlets\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <Check className=\"w-4 h-4 text-green-500\" />\n                    {plan.limits.users === -1 ? 'Unlimited' : plan.limits.users} users\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <Check className=\"w-4 h-4 text-green-500\" />\n                    {plan.limits.products === -1 ? 'Unlimited' : plan.limits.products} products\n                  </li>\n                </ul>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium text-gray-900 mb-3\">Features</h4>\n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  {plan.features.map((feature, index) => (\n                    <li key={index} className=\"flex items-center gap-2\">\n                      <Check className=\"w-4 h-4 text-green-500\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Trial Information */}\n          {plan.trialDays > 0 && (\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center gap-2\">\n                <Check className=\"w-5 h-5 text-blue-500\" />\n                <span className=\"font-medium text-blue-900\">\n                  {plan.trialDays}-day free trial included\n                </span>\n              </div>\n              <p className=\"text-sm text-blue-700 mt-1\">\n                Start your {plan.trialDays}-day free trial today. No credit card required.\n              </p>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-end gap-3 p-6 border-t bg-gray-50\">\n          <Button\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => handleSubscribe(plan.billingCycle)}\n            className=\"bg-blue-700 hover:bg-blue-700\"\n          >\n            Subscribe to {plan.name} Plan\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","\"use client\"\n\nimport React from 'react';\nimport { \n  Card, \n  CardContent,\n  Badge,\n  Button,\n  StatusBadge\n} from '@rentalshop/ui';\nimport { \n  Calendar,\n  Edit,\n  Trash2,\n  ChevronUp,\n  ChevronDown,\n  Plus,\n  Eye\n} from 'lucide-react';\nimport { useCommonTranslations } from '@rentalshop/hooks';\n\n// Local type definitions\ninterface BillingCycle {\n  id: number;\n  name: string;\n  value: string;\n  months: number;\n  discount: number;\n  description?: string;\n  isActive: boolean;\n  sortOrder: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface BillingCycleTableProps {\n  billingCycles: BillingCycle[];\n  onView?: (billingCycle: BillingCycle) => void;\n  onEdit?: (billingCycle: BillingCycle) => void;\n  onToggleStatus?: (billingCycle: BillingCycle) => void;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  onSort?: (field: string) => void;\n  loading?: boolean;\n}\n\nexport const BillingCycleTable: React.FC<BillingCycleTableProps> = ({\n  billingCycles,\n  onView,\n  onEdit,\n  onToggleStatus,\n  sortBy = 'sortOrder',\n  sortOrder = 'asc',\n  onSort,\n  loading = false\n}) => {\n  const t = useCommonTranslations();\n  const formatDate = (date: string) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const handleSort = (field: string) => {\n    if (onSort) {\n      onSort(field);\n    }\n  };\n\n  const getSortIcon = (field: string) => {\n    if (sortBy !== field) return null;\n    return sortOrder === 'asc' ? <ChevronUp className=\"w-4 h-4\" /> : <ChevronDown className=\"w-4 h-4\" />;\n  };\n\n  if (loading) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent>\n          <div className=\"animate-pulse space-y-4\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"h-16 bg-bg-tertiary rounded\"></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border-border flex flex-col h-full\">\n      <CardContent className=\"p-0 flex-1 overflow-hidden\">\n        {/* Table with scroll - flex layout */}\n        <div className=\"flex-1 overflow-auto h-full\">\n          <table className=\"w-full\">\n            <thead className=\"bg-bg-secondary border-b border-border sticky top-0 z-10\">\n              <tr>\n                <th \n                  className=\"text-left py-3 px-4 font-medium text-text-primary cursor-pointer hover:bg-bg-secondary\"\n                  onClick={() => handleSort('name')}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    Name\n                    {getSortIcon('name')}\n                  </div>\n                </th>\n                <th \n                  className=\"text-left py-3 px-4 font-medium text-text-primary cursor-pointer hover:bg-bg-secondary\"\n                  onClick={() => handleSort('value')}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    Value\n                    {getSortIcon('value')}\n                  </div>\n                </th>\n                <th \n                  className=\"text-left py-3 px-4 font-medium text-text-primary cursor-pointer hover:bg-bg-secondary\"\n                  onClick={() => handleSort('months')}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    Months\n                    {getSortIcon('months')}\n                  </div>\n                </th>\n                <th \n                  className=\"text-left py-3 px-4 font-medium text-text-primary cursor-pointer hover:bg-bg-secondary\"\n                  onClick={() => handleSort('discount')}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    Discount\n                    {getSortIcon('discount')}\n                  </div>\n                </th>\n                <th className=\"text-left py-3 px-4 font-medium text-text-primary\">Description</th>\n                <th className=\"text-left py-3 px-4 font-medium text-text-primary\">Status</th>\n                <th \n                  className=\"text-left py-3 px-4 font-medium text-text-primary cursor-pointer hover:bg-bg-secondary\"\n                  onClick={() => handleSort('createdAt')}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    Created\n                    {getSortIcon('createdAt')}\n                  </div>\n                </th>\n                <th className=\"text-right py-3 px-4 font-medium text-text-primary\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {billingCycles.map((cycle) => (\n                <tr key={cycle.id} className=\"border-b border-border hover:bg-bg-secondary\">\n                  <td className=\"py-4 px-4\">\n                    <div className=\"font-medium text-text-primary\">{cycle.name}</div>\n                  </td>\n                  <td className=\"py-4 px-4\">\n                    <Badge variant=\"outline\" className=\"font-mono\">\n                      {cycle.value}\n                    </Badge>\n                  </td>\n                  <td className=\"py-4 px-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <Calendar className=\"w-4 h-4 text-text-tertiary\" />\n                      <span className=\"font-medium\">{cycle.months}</span>\n                      <span className=\"text-sm text-text-secondary\">\n                        {cycle.months === 1 ? 'month' : 'months'}\n                      </span>\n                    </div>\n                  </td>\n                  <td className=\"py-4 px-4\">\n                    <div className=\"flex items-center gap-2\">\n                      {cycle.discount > 0 ? (\n                        <Badge variant=\"default\" className=\"bg-green-100 text-green-800 border-green-200\">\n                          {cycle.discount}%\n                        </Badge>\n                      ) : (\n                        <span className=\"text-text-tertiary\">No discount</span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"py-4 px-4\">\n                    <div className=\"text-sm text-text-secondary max-w-xs truncate\">\n                      {cycle.description || 'No description'}\n                    </div>\n                  </td>\n                  <td className=\"py-4 px-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <StatusBadge \n                        status={cycle.isActive ? 'active' : 'inactive'}\n                      />\n                    </div>\n                  </td>\n                  <td className=\"py-4 px-4 text-sm text-text-secondary\">\n                    {formatDate(cycle.createdAt)}\n                  </td>\n                  <td className=\"py-4 px-4\">\n                    <div className=\"flex items-center justify-end gap-2\">\n                      {onView && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => onView(cycle)}\n                          className=\"h-8 w-8 p-0\"\n                          title=\"View billing cycle\"\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                        </Button>\n                      )}\n                      {onEdit && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => onEdit(cycle)}\n                          className=\"h-8 w-8 p-0\"\n                          title=\"Edit billing cycle\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                      )}\n\n                      {/* Delete button removed - will be moved to detail page */}\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          \n          {billingCycles.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Calendar className=\"w-12 h-12 text-text-tertiary mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-text-primary mb-2\">{t('messages.noBillingCycles')}</h3>\n              <p className=\"text-text-secondary\">\n                {t('messages.getStartedBillingCycle')}\n              </p>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n","\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Button,\n  Input,\n  Label,\n  Textarea,\n  Switch\n} from '@rentalshop/ui';\n\n// Local type definitions\ninterface BillingCycle {\n  id: number;\n  name: string;\n  value: string;\n  months: number;\n  discount: number;\n  description?: string;\n  isActive: boolean;\n  sortOrder: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface BillingCycleFormProps {\n  initialData?: Partial<BillingCycle>;\n  onSubmit: (data: BillingCycleFormData) => void;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\ninterface BillingCycleFormData {\n  name: string;\n  value: string;\n  months: number;\n  discount: number;\n  description: string;\n  isActive: boolean;\n  sortOrder: number;\n}\n\nexport const BillingCycleForm: React.FC<BillingCycleFormProps> = ({\n  initialData = {},\n  onSubmit,\n  onCancel,\n  loading = false\n}) => {\n  const [formData, setFormData] = useState<BillingCycleFormData>({\n    name: initialData.name || '',\n    value: initialData.value || '',\n    months: initialData.months || 1,\n    discount: initialData.discount || 0,\n    description: initialData.description || '',\n    isActive: initialData.isActive !== undefined ? initialData.isActive : true,\n    sortOrder: initialData.sortOrder || 0\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData({\n        name: initialData.name || '',\n        value: initialData.value || '',\n        months: initialData.months || 1,\n        discount: initialData.discount || 0,\n        description: initialData.description || '',\n        isActive: initialData.isActive !== undefined ? initialData.isActive : true,\n        sortOrder: initialData.sortOrder || 0\n      });\n    }\n  }, [initialData]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!formData.value.trim()) {\n      newErrors.value = 'Value is required';\n    } else if (!/^[a-z_]+$/.test(formData.value)) {\n      newErrors.value = 'Value must contain only lowercase letters and underscores';\n    }\n\n    if (formData.months < 1) {\n      newErrors.months = 'Months must be at least 1';\n    }\n\n    if (formData.discount < 0 || formData.discount > 100) {\n      newErrors.discount = 'Discount must be between 0 and 100';\n    }\n\n    if (formData.sortOrder < 0) {\n      newErrors.sortOrder = 'Sort order must be non-negative';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSubmit(formData);\n    }\n  };\n\n  const handleInputChange = (field: keyof BillingCycleFormData, value: string | number | boolean) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: ''\n      }));\n    }\n  };\n\n  const handleNumberInputChange = (field: keyof BillingCycleFormData, value: string) => {\n    const numValue = value === '' ? 0 : parseInt(value, 10);\n    if (!isNaN(numValue)) {\n      handleInputChange(field, numValue);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"name\">Name *</Label>\n          <Input\n            id=\"name\"\n            type=\"text\"\n            value={formData.name}\n            onChange={(e) => handleInputChange('name', e.target.value)}\n            placeholder=\"e.g., Monthly, Quarterly\"\n            className={errors.name ? 'border-red-500' : ''}\n          />\n          {errors.name && <p className=\"text-sm text-red-500\">{errors.name}</p>}\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"value\">Value *</Label>\n          <Input\n            id=\"value\"\n            type=\"text\"\n            value={formData.value}\n            onChange={(e) => handleInputChange('value', e.target.value)}\n            placeholder=\"e.g., monthly, quarterly\"\n            className={errors.value ? 'border-red-500' : ''}\n          />\n          {errors.value && <p className=\"text-sm text-red-500\">{errors.value}</p>}\n          <p className=\"text-xs text-text-tertiary\">\n            Use lowercase letters and underscores only\n          </p>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"months\">Months *</Label>\n          <Input\n            id=\"months\"\n            type=\"number\"\n            value={formData.months}\n            onChange={(e) => handleNumberInputChange('months', e.target.value)}\n            placeholder=\"1\"\n            min=\"1\"\n            className={errors.months ? 'border-red-500' : ''}\n          />\n          {errors.months && <p className=\"text-sm text-red-500\">{errors.months}</p>}\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"discount\">Discount (%)</Label>\n          <Input\n            id=\"discount\"\n            type=\"number\"\n            value={formData.discount}\n            onChange={(e) => handleNumberInputChange('discount', e.target.value)}\n            placeholder=\"0\"\n            min=\"0\"\n            max=\"100\"\n            step=\"0.1\"\n            className={errors.discount ? 'border-red-500' : ''}\n          />\n          {errors.discount && <p className=\"text-sm text-red-500\">{errors.discount}</p>}\n          <p className=\"text-xs text-text-tertiary\">\n            Percentage discount for this billing cycle (0-100)\n          </p>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"sortOrder\">Sort Order</Label>\n          <Input\n            id=\"sortOrder\"\n            type=\"number\"\n            value={formData.sortOrder}\n            onChange={(e) => handleNumberInputChange('sortOrder', e.target.value)}\n            placeholder=\"0\"\n            min=\"0\"\n            className={errors.sortOrder ? 'border-red-500' : ''}\n          />\n          {errors.sortOrder && <p className=\"text-sm text-red-500\">{errors.sortOrder}</p>}\n          <p className=\"text-xs text-text-tertiary\">\n            Lower numbers appear first in lists\n          </p>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"isActive\">Active</Label>\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"isActive\"\n              checked={formData.isActive}\n              onCheckedChange={(checked) => handleInputChange('isActive', checked)}\n            />\n            <span className=\"text-sm text-text-secondary\">\n              {formData.isActive ? 'Active' : 'Inactive'}\n            </span>\n          </div>\n          <p className=\"text-xs text-text-tertiary\">\n            Inactive billing cycles won't be available for selection\n          </p>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"description\">Description</Label>\n        <Textarea\n          id=\"description\"\n          value={formData.description}\n          onChange={(e) => handleInputChange('description', e.target.value)}\n          placeholder=\"Describe this billing cycle...\"\n          rows={3}\n        />\n        <p className=\"text-xs text-text-tertiary\">\n          Optional description for this billing cycle\n        </p>\n      </div>\n\n      {/* Preview */}\n      <div className=\"bg-bg-secondary p-4 rounded-lg\">\n        <h4 className=\"font-medium text-text-primary mb-2\">Preview</h4>\n        <div className=\"space-y-2 text-sm\">\n          <div>\n            <span className=\"text-text-secondary\">Name:</span> {formData.name || 'Not set'}\n          </div>\n          <div>\n            <span className=\"text-text-secondary\">Value:</span> {formData.value || 'Not set'}\n          </div>\n          <div>\n            <span className=\"text-text-secondary\">Duration:</span> {formData.months} {formData.months === 1 ? 'month' : 'months'}\n          </div>\n          <div>\n            <span className=\"text-text-secondary\">Discount:</span> {formData.discount}%\n          </div>\n          <div>\n            <span className=\"text-text-secondary\">Status:</span> {formData.isActive ? 'Active' : 'Inactive'}\n          </div>\n          {formData.description && (\n            <div>\n              <span className=\"text-text-secondary\">Description:</span> {formData.description}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-end gap-3 pt-6 border-t\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onCancel}\n          disabled={loading}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          disabled={loading}\n        >\n          {loading ? 'Saving...' : (initialData.id ? 'Update Billing Cycle' : 'Create Billing Cycle')}\n        </Button>\n      </div>\n    </form>\n  );\n};\n","\"use client\"\n\nimport React, { useState } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  Card,\n  CardContent,\n  Button,\n  Badge,\n  StatusBadge,\n  Switch,\n  Label\n} from '@rentalshop/ui';\nimport { \n  Calendar,\n  Percent,\n  Clock,\n  Edit,\n  Save,\n  X,\n  Info,\n  DollarSign,\n  Trash2\n} from 'lucide-react';\n\n// Local type definitions\ninterface BillingCycle {\n  id: number;\n  name: string;\n  value: string;\n  months: number;\n  discount: number;\n  description?: string;\n  isActive: boolean;\n  sortOrder: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface BillingCycleDetailDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  billingCycle: BillingCycle | null;\n  onToggleStatus?: (billingCycle: BillingCycle) => void;\n  onEdit?: (billingCycle: BillingCycle) => void;\n  onDelete?: (billingCycle: BillingCycle) => void;\n  loading?: boolean;\n}\n\nexport const BillingCycleDetailDialog: React.FC<BillingCycleDetailDialogProps> = ({\n  open,\n  onOpenChange,\n  billingCycle,\n  onToggleStatus,\n  onEdit,\n  onDelete,\n  loading = false\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [tempStatus, setTempStatus] = useState(billingCycle?.isActive ?? false);\n\n  // Update temp status when billing cycle changes\n  React.useEffect(() => {\n    setTempStatus(billingCycle?.isActive ?? false);\n  }, [billingCycle]);\n\n  const handleToggleStatus = () => {\n    if (billingCycle && onToggleStatus) {\n      onToggleStatus(billingCycle);\n    }\n  };\n\n  const handleEdit = () => {\n    if (billingCycle && onEdit) {\n      onEdit(billingCycle);\n      onOpenChange(false);\n    }\n  };\n\n  const handleDelete = () => {\n    if (billingCycle && onDelete) {\n      onDelete(billingCycle);\n      onOpenChange(false);\n    }\n  };\n\n  const handleSaveStatus = () => {\n    setTempStatus(!tempStatus);\n    handleToggleStatus();\n    setIsEditing(false);\n  };\n\n  const handleCancelEdit = () => {\n    setTempStatus(billingCycle?.isActive ?? false);\n    setIsEditing(false);\n  };\n\n  const formatDate = (date: string) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (!billingCycle) return null;\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <DialogTitle className=\"text-xl font-semibold\">\n                Billing Cycle Details\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-text-secondary mt-1\">\n                View and manage billing cycle information\n              </DialogDescription>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {onEdit && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleEdit}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                  Edit\n                </Button>\n              )}\n              {onDelete && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleDelete}\n                  className=\"flex items-center gap-2 text-red-600 hover:text-red-700 hover:bg-red-50\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  Delete\n                </Button>\n              )}\n            </div>\n          </div>\n        </DialogHeader>\n\n        <div className=\"mt-6 space-y-6\">\n          {/* Basic Information */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-medium text-text-primary mb-4 flex items-center gap-2\">\n                <Info className=\"w-5 h-5 text-text-tertiary\" />\n                Basic Information\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Name</Label>\n                  <p className=\"text-lg font-semibold text-text-primary mt-1\">{billingCycle.name}</p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Value</Label>\n                  <div className=\"mt-1\">\n                    <Badge variant=\"outline\" className=\"font-mono text-sm\">\n                      {billingCycle.value}\n                    </Badge>\n                  </div>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Description</Label>\n                  <p className=\"text-text-primary mt-1\">\n                    {billingCycle.description || 'No description provided'}\n                  </p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Sort Order</Label>\n                  <p className=\"text-text-primary mt-1\">{billingCycle.sortOrder}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Billing Details */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-medium text-text-primary mb-4 flex items-center gap-2\">\n                <DollarSign className=\"w-5 h-5 text-text-tertiary\" />\n                Billing Details\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Billing Period</Label>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <Calendar className=\"w-4 h-4 text-text-tertiary\" />\n                    <span className=\"text-lg font-semibold text-text-primary\">\n                      {billingCycle.months}\n                    </span>\n                    <span className=\"text-text-secondary\">\n                      {billingCycle.months === 1 ? 'month' : 'months'}\n                    </span>\n                  </div>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Discount</Label>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <Percent className=\"w-4 h-4 text-text-tertiary\" />\n                    {billingCycle.discount > 0 ? (\n                      <Badge variant=\"default\" className=\"bg-green-100 text-green-800 border-green-200\">\n                        {billingCycle.discount}% off\n                      </Badge>\n                    ) : (\n                      <span className=\"text-text-tertiary\">No discount</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Status Management */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-medium text-text-primary mb-4 flex items-center gap-2\">\n                <Clock className=\"w-5 h-5 text-text-tertiary\" />\n                Status Management\n              </h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Label className=\"text-sm font-medium text-text-secondary\">Current Status</Label>\n                    <div className=\"mt-1\">\n                      <StatusBadge status={billingCycle.isActive ? 'active' : 'inactive'} />\n                    </div>\n                  </div>\n                  {onToggleStatus && (\n                    <div className=\"flex items-center gap-4\">\n                      {isEditing ? (\n                        <>\n                          <div className=\"flex items-center gap-2\">\n                            <Switch\n                              checked={tempStatus}\n                              onCheckedChange={setTempStatus}\n                              disabled={loading}\n                            />\n                            <Label className=\"text-sm\">\n                              {tempStatus ? 'Active' : 'Inactive'}\n                            </Label>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              size=\"sm\"\n                              onClick={handleSaveStatus}\n                              disabled={loading}\n                              className=\"flex items-center gap-2\"\n                            >\n                              <Save className=\"w-4 h-4\" />\n                              Save\n                            </Button>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={handleCancelEdit}\n                              disabled={loading}\n                            >\n                              <X className=\"w-4 h-4\" />\n                            </Button>\n                          </div>\n                        </>\n                      ) : (\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => setIsEditing(true)}\n                          disabled={loading}\n                        >\n                          Change Status\n                        </Button>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Timestamps */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-medium text-text-primary mb-4 flex items-center gap-2\">\n                <Clock className=\"w-5 h-5 text-text-tertiary\" />\n                Timestamps\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Created</Label>\n                  <p className=\"text-text-primary mt-1\">{formatDate(billingCycle.createdAt)}</p>\n                </div>\n                <div>\n                  <Label className=\"text-sm font-medium text-text-secondary\">Last Updated</Label>\n                  <p className=\"text-text-primary mt-1\">{formatDate(billingCycle.updatedAt)}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Input,\n  Label,\n  Textarea,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Switch,\n  SearchableSelect\n} from '@rentalshop/ui';\nimport { merchantsApi } from '@rentalshop/utils';\nimport { Calendar, DollarSign, CreditCard, User, Package } from 'lucide-react';\n\ninterface Merchant {\n  id: number;\n  name: string;\n  email: string;\n}\n\ninterface Payment {\n  id: number;\n  merchantId: number;\n  planId: number;\n  planVariantId: number;\n  amount: number;\n  currency: string;\n  method: string;\n  description: string;\n  extendSubscription: boolean;\n  monthsToExtend?: number;\n  invoiceNumber?: string;\n  transactionId?: string;\n  startDate?: string;  // ✅ NEW: Payment period start date\n  endDate?: string;    // ✅ NEW: Payment period end date\n  status?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\ninterface Plan {\n  id: number;\n  name: string;\n  price: number;\n  currency: string;\n  variants?: PlanVariant[]; // ✅ NEW: Include plan variants\n}\n\ninterface PlanVariant {\n  id: number;\n  planId: number;\n  name: string;\n  duration: number;\n  price: number;\n  discount: number;\n  savings: number;\n  isActive: boolean;\n  isPopular: boolean;\n}\n\n\ninterface PaymentFormProps {\n  onSubmit: (data: PaymentFormData) => void;\n  onCancel: () => void;\n  loading?: boolean;\n  merchants?: Merchant[];\n  plans?: Plan[];\n  planVariants?: PlanVariant[]; // ✅ REQUIRED: Plan variants\n  // ✅ NEW: Edit mode support\n  mode?: 'create' | 'edit';\n  existingPayment?: Payment;\n}\n\nexport interface PaymentFormData {\n  merchantId: number;\n  planId: number;\n  planVariantId: number;  // ✅ REQUIRED: Plan variant ID (replaces billingCycleId)\n  amount: number;\n  currency: string;\n  method: string;\n  description: string;\n  extendSubscription: boolean;\n  monthsToExtend?: number;\n  invoiceNumber?: string;\n  transactionId?: string;\n  startDate?: string;  // ✅ NEW: Payment period start date\n  endDate?: string;    // ✅ NEW: Payment period end date\n}\n\nconst PAYMENT_METHODS = [\n  { value: 'STRIPE', label: 'Stripe' },\n  { value: 'PAYPAL', label: 'PayPal' },\n  { value: 'BANK_TRANSFER', label: 'Bank Transfer' },\n  { value: 'CREDIT_CARD', label: 'Credit Card' },\n  { value: 'CASH', label: 'Cash' }\n];\n\nconst CURRENCIES = [\n  { value: 'USD', label: 'USD ($)' },\n  { value: 'EUR', label: 'EUR (€)' },\n  { value: 'GBP', label: 'GBP (£)' }\n];\n\nexport const PaymentForm: React.FC<PaymentFormProps> = ({\n  onSubmit,\n  onCancel,\n  loading = false,\n  merchants = [],\n  plans = [],\n  planVariants = [], // ✅ REQUIRED: Plan variants\n  mode = 'create', // ✅ NEW: Default to create mode\n  existingPayment // ✅ NEW: Existing payment data for edit mode\n}) => {\n  // ✅ Initialize form data based on mode\n  const [formData, setFormData] = useState<PaymentFormData>(() => {\n    if (mode === 'edit' && existingPayment) {\n      return {\n        merchantId: existingPayment.merchantId,\n        planId: existingPayment.planId,\n        planVariantId: existingPayment.planVariantId,\n        amount: existingPayment.amount,\n        currency: existingPayment.currency,\n        method: existingPayment.method,\n        description: existingPayment.description,\n        extendSubscription: existingPayment.extendSubscription,\n        monthsToExtend: existingPayment.monthsToExtend,\n        invoiceNumber: existingPayment.invoiceNumber,\n        transactionId: existingPayment.transactionId,\n        startDate: existingPayment.startDate,\n        endDate: existingPayment.endDate\n      };\n    }\n    \n    // Default values for create mode\n    const today = new Date().toISOString().split('T')[0];\n    const nextMonth = new Date();\n    nextMonth.setMonth(nextMonth.getMonth() + 1);\n    const nextMonthStr = nextMonth.toISOString().split('T')[0];\n    \n    return {\n      merchantId: 0,\n      planId: 0,\n      planVariantId: 0,\n      amount: 0,\n      currency: 'USD',\n      method: 'STRIPE',\n      description: '',\n      extendSubscription: false,\n      startDate: today,\n      endDate: nextMonthStr\n    };\n  });\n\n  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);\n  const [selectedPlanVariant, setSelectedPlanVariant] = useState<PlanVariant | null>(null);\n  const [isSearchingMerchants, setIsSearchingMerchants] = useState(false);\n\n  // ✅ Search merchants function for SearchableSelect\n  const searchMerchants = React.useCallback(async (query: string) => {\n    console.log('🔍 PaymentForm: searchMerchants called with query:', query);\n    \n    if (!query.trim()) {\n      console.log('🔍 PaymentForm: Empty query, returning empty array');\n      return [];\n    }\n    \n    setIsSearchingMerchants(true);\n    console.log('🔍 PaymentForm: Starting API call for query:', query);\n    \n    try {\n      const response = await merchantsApi.searchMerchants({\n        q: query,\n        limit: 20,\n        sortBy: 'name',\n        sortOrder: 'asc'\n      });\n      \n      console.log('🔍 PaymentForm: API response:', response);\n      \n      if (response.success && response.data) {\n        const results = response.data.merchants.map(merchant => {\n          // Build comprehensive description with detailed contact info\n          const descriptionParts = [];\n          \n          // Primary contact info\n          if (merchant.phone) descriptionParts.push(`${merchant.phone}`);\n          if (merchant.email) descriptionParts.push(`${merchant.email}`);\n          \n          // Address information\n          const addressParts = [];\n          if (merchant.address) addressParts.push(merchant.address);\n          if (merchant.city) addressParts.push(merchant.city);\n          if (merchant.state) addressParts.push(merchant.state);\n          if (merchant.zipCode) addressParts.push(merchant.zipCode);\n          if (merchant.country) addressParts.push(merchant.country);\n          \n          if (addressParts.length > 0) {\n            descriptionParts.push(`${addressParts.join(', ')}`);\n          }\n          \n          // Business info\n          if (merchant.businessType) descriptionParts.push(`Business: ${merchant.businessType}`);\n          if (merchant.website) descriptionParts.push(`Website: ${merchant.website}`);\n          \n          return {\n            value: merchant.id.toString(),\n            label: merchant.name,\n            description: descriptionParts.join('\\n') || 'No contact info',\n            type: 'default' as const\n          };\n        });\n        console.log('🔍 PaymentForm: Returning results:', results);\n        return results;\n      }\n      console.log('🔍 PaymentForm: No success or data, returning empty array');\n      return [];\n    } catch (error) {\n      console.error('🔍 PaymentForm: Error searching merchants:', error);\n      return [];\n    } finally {\n      setIsSearchingMerchants(false);\n      console.log('🔍 PaymentForm: Search completed for query:', query);\n    }\n  }, []);\n\n  // ✅ Initialize selected plan and plan variant when in edit mode\n  useEffect(() => {\n    if (mode === 'edit' && existingPayment && plans.length > 0 && planVariants.length > 0) {\n      const plan = plans.find(p => p.id === existingPayment.planId);\n      const planVariant = planVariants.find(v => v.id === existingPayment.planVariantId);\n      \n      if (plan) setSelectedPlan(plan);\n      if (planVariant) setSelectedPlanVariant(planVariant);\n    }\n  }, [mode, existingPayment, plans, planVariants]);\n\n  // Update amount when plan or plan variant changes\n  useEffect(() => {\n    if (selectedPlan && selectedPlanVariant) {\n      const totalAmount = selectedPlanVariant.price;\n      const currency = selectedPlan.currency;\n      \n      setFormData(prev => ({\n        ...prev,\n        amount: Math.round(totalAmount * 100) / 100, // Round to 2 decimal places\n        currency: currency\n      }));\n    }\n  }, [selectedPlan, selectedPlanVariant]);\n\n  const handleInputChange = (field: keyof PaymentFormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    \n    // ✅ Auto-update end date when start date changes and plan variant is selected\n    if (field === 'startDate' && selectedPlanVariant && value) {\n      const startDate = new Date(value);\n      const endDate = new Date(startDate);\n      endDate.setMonth(endDate.getMonth() + selectedPlanVariant.duration);\n      \n      const endDateStr = endDate.toISOString().split('T')[0];\n      setFormData(prev => ({ ...prev, endDate: endDateStr }));\n    }\n  };\n\n  const handlePlanChange = (planId: number) => {\n    const plan = plans.find(p => p.id === planId);\n    setSelectedPlan(plan || null);\n    setSelectedPlanVariant(null); // ✅ Reset plan variant when plan changes\n    handleInputChange('planId', planId);\n    handleInputChange('planVariantId', 0); // ✅ Reset plan variant ID\n  };\n\n  const handlePlanVariantChange = (planVariantId: number) => {\n    const planVariant = planVariants.find(v => v.id === planVariantId);\n    setSelectedPlanVariant(planVariant || null);\n    handleInputChange('planVariantId', planVariantId);\n    \n    // ✅ Auto-update end date based on plan variant duration\n    if (planVariant && formData.startDate) {\n      const startDate = new Date(formData.startDate);\n      const endDate = new Date(startDate);\n      endDate.setMonth(endDate.getMonth() + planVariant.duration);\n      \n      const endDateStr = endDate.toISOString().split('T')[0];\n      handleInputChange('endDate', endDateStr);\n    }\n  };\n\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (formData.extendSubscription && !formData.monthsToExtend) {\n      alert('Please specify months to extend when extending subscription');\n      return;\n    }\n    \n    // Validate date range\n    if (formData.startDate && formData.endDate) {\n      const startDate = new Date(formData.startDate);\n      const endDate = new Date(formData.endDate);\n      \n      if (endDate <= startDate) {\n        alert('End date must be after start date');\n        return;\n      }\n    }\n    \n    // ✅ Submit form data - parent component handles create vs edit logic\n    onSubmit(formData);\n  };\n\n  // ✅ Updated validation: plan variant and dates are required\n  const isFormValid = formData.merchantId && \n                     formData.planId && \n                     formData.planVariantId > 0 && \n                     formData.amount > 0 &&\n                     formData.startDate &&\n                     formData.endDate;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <DollarSign className=\"w-5 h-5\" />\n          {mode === 'edit' ? 'Edit Payment' : 'Create Manual Payment'}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Merchant Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"merchant\">Merchant *</Label>\n            <SearchableSelect\n              value={formData.merchantId}\n              onChange={(merchantId) => handleInputChange('merchantId', merchantId)}\n              onSearch={searchMerchants}\n              placeholder=\"Search merchants...\"\n              searchPlaceholder=\"Type to search merchants...\"\n              emptyText=\"No merchants found. Try a different search term.\"\n              displayMode=\"input\"\n            />\n            {isSearchingMerchants && (\n              <p className=\"text-sm text-blue-500\">Searching merchants...</p>\n            )}\n            {/* Debug information */}\n            {process.env.NODE_ENV === 'development' && (\n              <p className=\"text-xs text-gray-400\">\n                Debug: Using API search for merchants\n              </p>\n            )}\n          </div>\n\n          {/* Plan Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"plan\">Plan *</Label>\n            <SearchableSelect\n              value={formData.planId}\n              onChange={(planId) => handlePlanChange(planId)}\n              options={plans.map(plan => ({\n                value: plan.id.toString(),\n                label: `${plan.name} - $${plan.price} ${plan.currency}`,\n                description: `Base price: $${plan.price}`,\n                type: 'default' as const\n              }))}\n              placeholder=\"Search plans...\"\n              searchPlaceholder=\"Type to search plans...\"\n              emptyText=\"No plans found. Please add plans first.\"\n              displayMode=\"input\"\n            />\n            {plans.length === 0 && (\n              <p className=\"text-sm text-red-500\">No plans available. Please add plans first.</p>\n            )}\n            {/* Debug information */}\n            {process.env.NODE_ENV === 'development' && (\n              <p className=\"text-xs text-gray-400\">\n                Debug: {plans.length} plans loaded\n              </p>\n            )}\n          </div>\n\n          {/* Plan Variant Selection */}\n          {selectedPlan && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"planVariant\">Plan Variant *</Label>\n              <SearchableSelect\n                value={formData.planVariantId}\n                onChange={(planVariantId) => handlePlanVariantChange(planVariantId)}\n                options={planVariants\n                  .filter(variant => variant.planId === selectedPlan.id && variant.isActive)\n                  .map(variant => ({\n                    value: variant.id.toString(),\n                    label: `${variant.name} (${variant.duration} months) - $${variant.price} ${selectedPlan.currency}`,\n                    description: variant.discount > 0 \n                      ? `Save $${variant.savings} with ${variant.discount}% discount`\n                      : `Standard pricing`,\n                    type: 'default' as const\n                  }))}\n                placeholder=\"Search plan variants...\"\n                searchPlaceholder=\"Type to search plan variants...\"\n                emptyText=\"No plan variants found for this plan.\"\n                displayMode=\"input\"\n              />\n              {planVariants.length === 0 ? (\n                <p className=\"text-sm text-red-500\">No plan variants available for this plan. Please add plan variants first.</p>\n              ) : (\n                <p className=\"text-sm text-gray-500\">\n                  Select a specific plan variant for precise pricing and duration.\n                </p>\n              )}\n              {/* Debug information */}\n              {process.env.NODE_ENV === 'development' && (\n                <p className=\"text-xs text-gray-400\">\n                  Debug: {planVariants.length} plan variants loaded, {planVariants.filter(v => v.planId === selectedPlan.id && v.isActive).length} for selected plan\n                </p>\n              )}\n            </div>\n          )}\n\n\n          {/* Amount Display */}\n          {formData.amount > 0 && (\n            <div className=\"p-4 bg-blue-50 rounded-lg\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-medium\">Total Amount:</span>\n                <span className=\"text-xl font-bold text-blue-700\">\n                  ${formData.amount} {formData.currency}\n                </span>\n              </div>\n              {/* Show plan variant info */}\n              {selectedPlan && selectedPlanVariant && (\n                <div className=\"text-sm text-gray-600 mt-1\">\n                  {selectedPlan.name} - {selectedPlanVariant.name} ({selectedPlanVariant.duration} months)\n                  {selectedPlanVariant.discount > 0 && (\n                    <span className=\"text-green-600 ml-2\">\n                      (Save ${selectedPlanVariant.savings} with {selectedPlanVariant.discount}% discount)\n                    </span>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Payment Method */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"method\">Payment Method *</Label>\n            <Select\n              value={formData.method}\n              onValueChange={(value) => handleInputChange('method', value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select payment method\" />\n              </SelectTrigger>\n              <SelectContent>\n                {PAYMENT_METHODS.map((method) => (\n                  <SelectItem key={method.value} value={method.value}>\n                    <div className=\"flex items-center gap-2\">\n                      <CreditCard className=\"w-4 h-4\" />\n                      {method.label}\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Extend Subscription Toggle */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"extendSubscription\">Extend Existing Subscription</Label>\n              <p className=\"text-sm text-gray-600\">\n                Check this to extend the merchant's current subscription instead of creating a new one\n              </p>\n            </div>\n            <Switch\n              checked={formData.extendSubscription}\n              onCheckedChange={(checked) => handleInputChange('extendSubscription', checked)}\n            />\n          </div>\n\n          {/* Months to Extend */}\n          {formData.extendSubscription && (\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"monthsToExtend\">Months to Extend *</Label>\n              <Input\n                type=\"number\"\n                min=\"1\"\n                max=\"60\"\n                value={formData.monthsToExtend || ''}\n                onChange={(e) => handleInputChange('monthsToExtend', parseInt(e.target.value))}\n                placeholder=\"Enter number of months\"\n              />\n            </div>\n          )}\n\n          {/* Optional Fields */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"invoiceNumber\">Invoice Number (Optional)</Label>\n              <Input\n                value={formData.invoiceNumber || ''}\n                onChange={(e) => handleInputChange('invoiceNumber', e.target.value)}\n                placeholder=\"e.g., INV-2024-001\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"transactionId\">Transaction ID (Optional)</Label>\n              <Input\n                value={formData.transactionId || ''}\n                onChange={(e) => handleInputChange('transactionId', e.target.value)}\n                placeholder=\"e.g., txn_123456789\"\n              />\n            </div>\n          </div>\n\n          {/* Payment Period */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"startDate\">Start Date *</Label>\n              <Input\n                type=\"date\"\n                value={formData.startDate || ''}\n                onChange={(e) => handleInputChange('startDate', e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"endDate\">End Date *</Label>\n              <Input\n                type=\"date\"\n                value={formData.endDate || ''}\n                onChange={(e) => handleInputChange('endDate', e.target.value)}\n                required\n              />\n            </div>\n          </div>\n\n          {/* Description */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Description</Label>\n            <Textarea\n              value={formData.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              placeholder=\"Payment description or notes...\"\n              rows={3}\n            />\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex items-center justify-end gap-3 pt-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={onCancel}\n              disabled={loading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={!isFormValid || loading}\n              className=\"min-w-[120px]\"\n            >\n              {loading \n                ? (mode === 'edit' ? 'Updating...' : 'Creating...') \n                : (mode === 'edit' ? 'Update Payment' : 'Create Payment')\n              }\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n","'use client'\n\nimport React from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter\n} from '../../../ui/dialog';\nimport { Button } from '../../../ui/button';\nimport { Card, CardContent } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { \n  CreditCard, \n  DollarSign, \n  Calendar, \n  Clock, \n  CheckCircle, \n  XCircle, \n  AlertCircle,\n  Building,\n  Package,\n  FileText,\n  User,\n  Receipt,\n  RotateCcw,\n  Download\n} from 'lucide-react';\n\ninterface PaymentDetailDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  payment?: any | null;\n  onProcessPayment?: (paymentId: number) => void;\n  onRefundPayment?: (paymentId: number) => void;\n  onDownloadReceipt?: (paymentId: number) => void;\n}\n\nexport const PaymentDetailDialog: React.FC<PaymentDetailDialogProps> = ({\n  open,\n  onOpenChange,\n  payment,\n  onProcessPayment,\n  onRefundPayment,\n  onDownloadReceipt\n}) => {\n  if (!payment) return null;\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      'completed': { color: 'bg-action-success/10 text-action-success', icon: CheckCircle, text: 'Completed' },\n      'pending': { color: 'bg-action-warning/10 text-action-warning', icon: Clock, text: 'Pending' },\n      'failed': { color: 'bg-action-danger/10 text-action-danger', icon: XCircle, text: 'Failed' },\n      'refunded': { color: 'bg-text-tertiary/10 text-text-tertiary', icon: AlertCircle, text: 'Refunded' }\n    };\n    \n    const config = statusConfig[status as keyof typeof statusConfig];\n    const Icon = config.icon;\n    \n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>\n        <Icon className=\"w-3 h-3 mr-1\" />\n        {config.text}\n      </span>\n    );\n  };\n\n  const getPaymentMethodIcon = (method: string) => {\n    const methodConfig = {\n      'credit_card': CreditCard,\n      'bank_transfer': DollarSign,\n      'paypal': DollarSign,\n      'stripe': CreditCard\n    };\n    \n    const Icon = methodConfig[method as keyof typeof methodConfig] || CreditCard;\n    return <Icon className=\"w-4 h-4\" />;\n  };\n\n  const getPaymentMethodText = (method: string) => {\n    const methodConfig = {\n      'credit_card': 'Credit Card',\n      'bank_transfer': 'Bank Transfer',\n      'paypal': 'PayPal',\n      'stripe': 'Stripe'\n    };\n    \n    return methodConfig[method as keyof typeof methodConfig] || method;\n  };\n\n  const formatDate = (date: string) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <DialogTitle className=\"text-xl font-semibold\">\n                Payment Details\n              </DialogTitle>\n              <DialogDescription className=\"text-sm text-text-secondary mt-1\">\n                View payment information and transaction details\n              </DialogDescription>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {onDownloadReceipt && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => onDownloadReceipt(payment.id)}\n                  className=\"flex items-center gap-2\"\n                >\n                  <Download className=\"w-4 h-4\" />\n                  Receipt\n                </Button>\n              )}\n            </div>\n          </div>\n        </DialogHeader>\n\n        <div className=\"mt-6 space-y-6\">\n          {/* Payment Overview */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n                <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n                Payment Overview\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Payment ID:</span>\n                    <span className=\"text-sm text-gray-900\">#{payment.id}</span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Status:</span>\n                    {getStatusBadge(payment.status)}\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Amount:</span>\n                    <span className=\"text-lg font-bold text-gray-900\">\n                      {formatCurrency(payment.amount, payment.currency)}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Method:</span>\n                    <div className=\"flex items-center gap-2\">\n                      {getPaymentMethodIcon(payment.method)}\n                      <span className=\"text-sm text-gray-900\">\n                        {getPaymentMethodText(payment.method)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Created:</span>\n                    <span className=\"text-sm text-gray-900\">{formatDate(payment.createdAt)}</span>\n                  </div>\n                  {payment.processedAt && (\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Processed:</span>\n                      <span className=\"text-sm text-gray-900\">{formatDate(payment.processedAt)}</span>\n                    </div>\n                  )}\n                  {payment.updatedAt && (\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Updated:</span>\n                      <span className=\"text-sm text-gray-900\">{formatDate(payment.updatedAt)}</span>\n                    </div>\n                  )}\n                  {payment.transactionId && (\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Transaction ID:</span>\n                      <span className=\"text-sm text-gray-900 font-mono\">{payment.transactionId}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Merchant Information */}\n          {payment.subscription?.merchant && (\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n                  <Building className=\"w-5 h-5\" />\n                  Merchant Information\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Merchant Name:</span>\n                      <span className=\"text-sm text-gray-900\">{payment.subscription.merchant.name}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Email:</span>\n                      <span className=\"text-sm text-gray-900\">{payment.subscription.merchant.email}</span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Merchant ID:</span>\n                      <span className=\"text-sm text-gray-900\">#{payment.subscription.merchant.id}</span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Subscription Information */}\n          {payment.subscription?.plan && (\n            <Card>\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n                  <Package className=\"w-5 h-5\" />\n                  Subscription Details\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Plan:</span>\n                      <span className=\"text-sm text-gray-900\">{payment.subscription.plan.name}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Plan Price:</span>\n                      <span className=\"text-sm text-gray-900\">\n                        {formatCurrency(payment.subscription.plan.price, payment.subscription.plan.currency)}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Plan Variant:</span>\n                      <span className=\"text-sm text-gray-900\">\n                        {payment.subscription.planVariant?.name || 'N/A'}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">Subscription Status:</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {payment.subscription.status}\n                      </Badge>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Additional Information */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n                <FileText className=\"w-5 h-5\" />\n                Additional Information\n              </h3>\n              <div className=\"space-y-4\">\n                {payment.invoiceNumber && (\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Invoice Number:</span>\n                    <span className=\"text-sm text-gray-900 font-mono\">{payment.invoiceNumber}</span>\n                  </div>\n                )}\n                {payment.description && (\n                  <div className=\"flex items-start justify-between\">\n                    <span className=\"text-sm font-medium text-gray-600\">Description:</span>\n                    <span className=\"text-sm text-gray-900 max-w-xs text-right\">{payment.description}</span>\n                  </div>\n                )}\n                {payment.failureReason && (\n                  <div className=\"flex items-start justify-between\">\n                    <span className=\"text-sm font-medium text-red-600\">Failure Reason:</span>\n                    <span className=\"text-sm text-red-600 max-w-xs text-right\">{payment.failureReason}</span>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Action Buttons */}\n          <div className=\"flex items-center justify-end gap-3 pt-4 border-t\">\n            {payment.status === 'pending' && onProcessPayment && (\n              <Button\n                onClick={() => onProcessPayment(payment.id)}\n                className=\"flex items-center gap-2\"\n              >\n                <CheckCircle className=\"w-4 h-4\" />\n                Process Payment\n              </Button>\n            )}\n            {payment.status === 'completed' && onRefundPayment && (\n              <Button\n                variant=\"outline\"\n                onClick={() => onRefundPayment(payment.id)}\n                className=\"flex items-center gap-2 text-red-600 hover:text-red-700\"\n              >\n                <RotateCcw className=\"w-4 h-4\" />\n                Refund Payment\n              </Button>\n            )}\n            <Button\n              variant=\"outline\"\n              onClick={() => onOpenChange(false)}\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  Button,\n  StatusBadge,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '../../../ui';\nimport { \n  Eye, \n  Edit,\n  Download,\n  CreditCard,\n  MoreVertical,\n  RefreshCcw\n} from 'lucide-react';\n\ninterface Payment {\n  id: number;\n  subscriptionId: string;\n  amount: number;\n  currency: string;\n  method: string;\n  status: string;\n  transactionId?: string;\n  invoiceNumber?: string;\n  description?: string;\n  failureReason?: string;\n  processedAt?: string;\n  createdAt: string;\n  updatedAt: string;\n  subscription?: {\n    id: string;\n    merchantId: string;\n    planId: string;\n    status: string;\n    amount: number;\n    currency: string;\n    merchant?: {\n      id: string;\n      name: string;\n      email: string;\n    };\n    plan?: {\n      id: string;\n      name: string;\n      price: number;\n      currency: string;\n    };\n    billingCycle?: {\n      id: string;\n      name: string;\n      months: number;\n      discount: number;\n    };\n  };\n}\n\ninterface PaymentTableProps {\n  payments: Payment[];\n  onView?: (payment: Payment) => void;\n  onDownloadReceipt?: (payment: Payment) => void;\n  onRefund?: (payment: Payment) => void;\n  loading?: boolean;\n}\n\nexport function PaymentTable({ \n  payments, \n  onView,\n  onDownloadReceipt,\n  onRefund,\n  loading = false \n}: PaymentTableProps) {\n  const [openMenuId, setOpenMenuId] = useState<number | null>(null);\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  const formatDate = (date: string | Date) => {\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusMap: Record<string, string> = {\n      'completed': 'active',\n      'pending': 'warning',\n      'failed': 'danger',\n      'refunded': 'inactive'\n    };\n    \n    return <StatusBadge status={statusMap[status.toLowerCase()] || 'inactive'} />;\n  };\n\n  const getPaymentMethodText = (method: string) => {\n    const methodConfig: Record<string, string> = {\n      'credit_card': 'Credit Card',\n      'bank_transfer': 'Bank Transfer',\n      'paypal': 'PayPal',\n      'stripe': 'Stripe'\n    };\n    \n    return methodConfig[method.toLowerCase()] || method;\n  };\n\n  if (loading) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent className=\"p-0\">\n          <div className=\"animate-pulse space-y-4 p-6\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"h-16 bg-bg-tertiary rounded\"></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (payments.length === 0) {\n    return (\n      <Card className=\"shadow-sm border-border\">\n        <CardContent className=\"text-center py-12\">\n          <div className=\"text-text-tertiary\">\n            <div className=\"text-4xl mb-4\">💳</div>\n            <h3 className=\"text-lg font-medium mb-2\">No payments found</h3>\n            <p className=\"text-sm\">\n              Try adjusting your search or filter criteria.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border-border flex flex-col h-full\">\n      <CardContent className=\"p-0 flex-1 overflow-hidden\">\n        {/* Table with scroll - flex layout */}\n        <div className=\"flex-1 overflow-auto h-full\">\n          <table className=\"w-full\">\n            {/* Table Header - Sticky */}\n            <thead className=\"bg-bg-secondary border-b border-border sticky top-0 z-10\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Merchant\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Plan\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Amount\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Method\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-text-secondary uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            {/* Table Body */}\n            <tbody className=\"bg-bg-card divide-y divide-border\">\n              {payments.map((payment) => (\n                <tr key={payment.id} className=\"hover:bg-bg-secondary transition-colors\">\n                  {/* Merchant with Icon */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-br from-action-primary to-brand-primary flex items-center justify-center\">\n                        <CreditCard className=\"w-5 h-5 text-white\" />\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-text-primary\">\n                          {payment.subscription?.merchant?.name || 'Unknown Merchant'}\n                        </div>\n                        {payment.invoiceNumber && (\n                          <div className=\"text-xs text-text-tertiary\">\n                            INV: {payment.invoiceNumber}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </td>\n                  \n                  {/* Plan */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {payment.subscription?.plan?.name || 'Unknown Plan'}\n                    </div>\n                  </td>\n                  \n                  {/* Amount */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm font-medium text-text-primary\">\n                      {formatCurrency(payment.amount, payment.currency)}\n                    </div>\n                  </td>\n                  \n                  {/* Payment Method */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {getPaymentMethodText(payment.method)}\n                    </div>\n                  </td>\n                  \n                  {/* Status */}\n                  <td className=\"px-6 py-4\">\n                    {getStatusBadge(payment.status)}\n                  </td>\n                  \n                  {/* Date */}\n                  <td className=\"px-6 py-4\">\n                    <div className=\"text-sm text-text-primary\">\n                      {formatDate(payment.createdAt)}\n                    </div>\n                  </td>\n                  \n                  {/* Actions - Dropdown Menu */}\n                  <td className=\"px-6 py-4 text-right\">\n                    <DropdownMenu>\n                      <DropdownMenuTrigger asChild>\n                        <Button \n                          variant=\"ghost\" \n                          size=\"sm\"\n                          onClick={() => setOpenMenuId(openMenuId === payment.id ? null : payment.id)}\n                        >\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </Button>\n                      </DropdownMenuTrigger>\n                      <DropdownMenuContent \n                        align=\"end\"\n                        open={openMenuId === payment.id}\n                        onOpenChange={(open: boolean) => setOpenMenuId(open ? payment.id : null)}\n                      >\n                        {onView && (\n                          <DropdownMenuItem \n                            onClick={() => {\n                              onView(payment);\n                              setOpenMenuId(null);\n                            }}\n                          >\n                            <Eye className=\"h-4 w-4 mr-2\" />\n                            View Details\n                          </DropdownMenuItem>\n                        )}\n                        {onDownloadReceipt && (\n                          <DropdownMenuItem \n                            onClick={() => {\n                              onDownloadReceipt(payment);\n                              setOpenMenuId(null);\n                            }}\n                          >\n                            <Download className=\"h-4 w-4 mr-2\" />\n                            Download Receipt\n                          </DropdownMenuItem>\n                        )}\n                        {onRefund && payment.status === 'completed' && (\n                          <>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem \n                              onClick={() => {\n                                onRefund(payment);\n                                setOpenMenuId(null);\n                              }}\n                              className=\"text-action-danger focus:text-action-danger\"\n                            >\n                              <RefreshCcw className=\"h-4 w-4 mr-2\" />\n                              Refund Payment\n                            </DropdownMenuItem>\n                          </>\n                        )}\n                      </DropdownMenuContent>\n                    </DropdownMenu>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent } from '../../../ui/card';\nimport { LucideIcon } from 'lucide-react';\n\ninterface StatItem {\n  label: string;\n  value: number | string;\n  icon: LucideIcon;\n  color: string;\n  bgColor: string;\n  trend?: {\n    value: number;\n    isPositive: boolean;\n  };\n}\n\ninterface StatsOverviewProps {\n  stats: StatItem[];\n  className?: string;\n}\n\nexport default function StatsOverview({ stats, className = '' }: StatsOverviewProps) {\n  return (\n    <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\n      {stats.map((stat, index) => {\n        const Icon = stat.icon;\n        return (\n          <Card key={index}>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-text-secondary mb-2\">{stat.label}</p>\n                  <p className={`text-2xl font-bold ${stat.color} mb-1`}>{stat.value}</p>\n                  {stat.trend && (\n                    <div className={`flex items-center gap-1 text-sm ${\n                      stat.trend.isPositive ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      <span>{stat.trend.isPositive ? '↗' : '↘'}</span>\n                      <span>{Math.abs(stat.trend.value)}%</span>\n                    </div>\n                  )}\n                </div>\n                <div className={`p-3 rounded-full ${stat.bgColor}`}>\n                  <Icon className={`h-6 w-6 ${stat.color}`} />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent } from '../../../ui/card';\nimport { Input } from '../../../ui/input';\nimport { Search } from 'lucide-react';\n\ninterface FilterOption {\n  value: string;\n  label: string;\n}\n\ninterface SearchAndFiltersProps {\n  searchTerm: string;\n  onSearchChange: (value: string) => void;\n  searchPlaceholder?: string;\n  filters?: {\n    label: string;\n    value: string;\n    options: FilterOption[];\n    onChange: (value: string) => void;\n  }[];\n  className?: string;\n}\n\nexport default function SearchAndFilters({\n  searchTerm,\n  onSearchChange,\n  searchPlaceholder = \"Search...\",\n  filters = [],\n  className = ''\n}: SearchAndFiltersProps) {\n  return (\n    <Card className={className}>\n      <CardContent>\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          {/* Search */}\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-text-tertiary w-4 h-4\" />\n              <Input\n                type=\"text\"\n                placeholder={searchPlaceholder}\n                value={searchTerm}\n                onChange={(e) => onSearchChange(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-border rounded-lg focus:ring-2 focus:ring-action-primary focus:border-transparent\"\n              />\n            </div>\n          </div>\n\n          {/* Filters */}\n          {filters.length > 0 && (\n            <div className=\"flex gap-2\">\n              {filters.map((filter, index) => (\n                <select\n                  key={index}\n                  value={filter.value}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) => filter.onChange(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg focus:ring-2 focus:ring-action-primary focus:border-transparent\"\n                >\n                  {filter.options.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              ))}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\n\ninterface StatusBadgeProps {\n  status: string;\n  type?: 'default' | 'role' | 'user' | 'system' | 'audit';\n  className?: string;\n}\n\nexport default function AdminStatusBadge({ status, type = 'default', className = '' }: StatusBadgeProps) {\n  const getStatusConfig = () => {\n    switch (type) {\n      case 'role':\n        return {\n          'ADMIN': { color: 'bg-red-100 text-red-800', text: 'Admin' },\n          'MERCHANT': { color: 'bg-blue-100 text-blue-800', text: 'Merchant' },\n          'OUTLET_ADMIN': { color: 'bg-green-100 text-green-800', text: 'Outlet Admin' },\n          'OUTLET_STAFF': { color: 'bg-gray-100 text-gray-800', text: 'Outlet Staff' }\n        };\n      \n      case 'user':\n        return {\n          'ACTIVE': { color: 'bg-green-100 text-green-800', text: 'Active' },\n          'INACTIVE': { color: 'bg-gray-100 text-gray-800', text: 'Inactive' },\n          'PENDING': { color: 'bg-yellow-100 text-yellow-800', text: 'Pending' },\n          'SUSPENDED': { color: 'bg-red-100 text-red-800', text: 'Suspended' }\n        };\n      \n      case 'system':\n        return {\n          'HEALTHY': { color: 'bg-green-100 text-green-800', text: 'Healthy' },\n          'WARNING': { color: 'bg-yellow-100 text-yellow-800', text: 'Warning' },\n          'ERROR': { color: 'bg-red-100 text-red-800', text: 'Error' },\n          'MAINTENANCE': { color: 'bg-blue-100 text-blue-800', text: 'Maintenance' }\n        };\n      \n      case 'audit':\n        return {\n          'SUCCESS': { color: 'bg-green-100 text-green-800', text: 'Success' },\n          'FAILED': { color: 'bg-red-100 text-red-800', text: 'Failed' },\n          'WARNING': { color: 'bg-yellow-100 text-yellow-800', text: 'Warning' },\n          'LOW': { color: 'bg-gray-100 text-gray-800', text: 'Low' },\n          'MEDIUM': { color: 'bg-blue-100 text-blue-800', text: 'Medium' },\n          'HIGH': { color: 'bg-orange-100 text-orange-800', text: 'High' },\n          'CRITICAL': { color: 'bg-red-100 text-red-800', text: 'Critical' }\n        };\n      \n      default:\n        return {\n          'SUCCESS': { color: 'bg-green-100 text-green-800', text: 'Success' },\n          'ERROR': { color: 'bg-red-100 text-red-800', text: 'Error' },\n          'WARNING': { color: 'bg-yellow-100 text-yellow-800', text: 'Warning' },\n          'INFO': { color: 'bg-blue-100 text-blue-800', text: 'Info' }\n        };\n    }\n  };\n\n  const config = getStatusConfig()[status as keyof ReturnType<typeof getStatusConfig>];\n  \n  if (!config) {\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 ${className}`}>\n        {status}\n      </span>\n    );\n  }\n\n  return (\n    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color} ${className}`}>\n      {config.text}\n    </span>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Button } from '../../../ui/button';\nimport { LucideIcon } from 'lucide-react';\n\ninterface ActionButtonProps {\n  icon: LucideIcon;\n  label: string;\n  onClick: () => void;\n  variant?: 'default' | 'outline' | 'destructive' | 'secondary' | 'ghost' | 'link';\n  size?: 'default' | 'sm' | 'lg' | 'icon';\n  disabled?: boolean;\n  className?: string;\n}\n\nexport default function ActionButton({\n  icon: Icon,\n  label,\n  onClick,\n  variant = 'outline',\n  size = 'sm',\n  disabled = false,\n  className = ''\n}: ActionButtonProps) {\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      onClick={onClick}\n      disabled={disabled}\n      className={className}\n    >\n      <Icon className=\"w-4 h-4 mr-2\" />\n      {label}\n    </Button>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { LucideIcon } from 'lucide-react';\n\ninterface EmptyStateProps {\n  icon: LucideIcon;\n  title: string;\n  description: string;\n  actionLabel?: string;\n  onAction?: () => void;\n  className?: string;\n}\n\nexport default function EmptyState({\n  icon: Icon,\n  title,\n  description,\n  actionLabel,\n  onAction,\n  className = ''\n}: EmptyStateProps) {\n  return (\n    <Card className={className}>\n      <CardContent>\n        <div className=\"text-center py-12\">\n          <Icon className=\"w-12 h-12 text-text-tertiary mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-text-secondary mb-2\">{title}</h3>\n          <p className=\"text-text-tertiary mb-4\">{description}</p>\n          {actionLabel && onAction && (\n            <Button onClick={onAction}>\n              {actionLabel}\n            </Button>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent } from '../../../ui/card';\n\ninterface Column {\n  key: string;\n  label: string;\n  render?: (value: any, row: any) => React.ReactNode;\n  sortable?: boolean;\n  className?: string;\n}\n\ninterface DataTableProps {\n  data: any[];\n  columns: Column[];\n  loading?: boolean;\n  onRowClick?: (row: any) => void;\n  className?: string;\n}\n\nexport default function DataTable({\n  data,\n  columns,\n  loading = false,\n  onRowClick,\n  className = ''\n}: DataTableProps) {\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardContent>\n          <div className=\"animate-pulse\">\n            <div className=\"h-12 bg-bg-tertiary rounded mb-4\"></div>\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"h-16 bg-bg-tertiary rounded mb-2\"></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardContent>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b border-border\">\n                {columns.map((column) => (\n                  <th\n                    key={column.key}\n                    className={`text-left py-3 px-4 font-medium text-text-secondary ${column.className || ''}`}\n                  >\n                    {column.label}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((row, index) => (\n                <tr\n                  key={index}\n                  className={`border-b border-border hover:bg-bg-secondary transition-colors ${\n                    onRowClick ? 'cursor-pointer' : ''\n                  }`}\n                  onClick={() => onRowClick?.(row)}\n                >\n                  {columns.map((column) => (\n                    <td key={column.key} className=\"py-3 px-4\">\n                      {column.render\n                        ? column.render(row[column.key], row)\n                        : row[column.key]\n                      }\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { cn } from '../../lib/cn';\n\nexport interface PageWrapperProps {\n  children: React.ReactNode;\n  className?: string;\n  container?: boolean;\n  maxWidth?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '7xl' | 'full';\n  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  spacing?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  /**\n   * Scroll behavior:\n   * - 'page': Full page scrolls (default) - for detail pages, long content\n   * - 'content': Fixed page with scrollable content inside - for tables, lists\n   */\n  scrollMode?: 'page' | 'content';\n}\n\nconst maxWidthClasses = {\n  sm: 'max-w-sm',\n  md: 'max-w-md', \n  lg: 'max-w-lg',\n  xl: 'max-w-xl',\n  '2xl': 'max-w-2xl',\n  '7xl': 'max-w-7xl',\n  full: 'max-w-full'\n};\n\nconst paddingClasses = {\n  none: '',\n  sm: 'px-4 py-4',\n  md: 'px-6 py-6', \n  lg: 'px-8 py-8',\n  xl: 'px-10 py-10'\n};\n\nconst spacingClasses = {\n  none: '',\n  sm: 'space-y-4',\n  md: 'space-y-6',\n  lg: 'space-y-8', \n  xl: 'space-y-10'\n};\n\nexport function PageWrapper({\n  children,\n  className,\n  container = true,\n  maxWidth = '7xl',\n  padding = 'sm',\n  spacing = 'sm',\n  scrollMode = 'page'\n}: PageWrapperProps) {\n  // For 'content' scroll mode, we need a fixed height container with overflow\n  if (scrollMode === 'content') {\n    return (\n      <div className=\"h-screen overflow-y-auto\">\n        <div className={cn(\n          // Base container\n          container && 'mx-auto',\n          // Max width\n          maxWidth !== 'full' && maxWidthClasses[maxWidth],\n          // Padding\n          padding !== 'none' && paddingClasses[padding],\n          // Spacing between children\n          spacing !== 'none' && spacingClasses[spacing],\n          // Custom classes\n          className\n        )}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n  \n  // For 'page' scroll mode (default), just return normal container\n  return (\n    <div className={cn(\n      // Base container\n      container && 'mx-auto',\n      // Max width\n      maxWidth !== 'full' && maxWidthClasses[maxWidth],\n      // Padding\n      padding !== 'none' && paddingClasses[padding],\n      // Spacing between children\n      spacing !== 'none' && spacingClasses[spacing],\n      // Custom classes\n      className\n    )}>\n      {children}\n    </div>\n  );\n}\n\n// Convenience components for common layouts\nexport function PageHeader({\n  children,\n  className\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) {\n  return (\n    <div className={cn('mb-4', className)}>\n      {children}\n    </div>\n  );\n}\n\nexport function PageTitle({\n  children,\n  className,\n  subtitle\n}: {\n  children: React.ReactNode;\n  className?: string;\n  subtitle?: string;\n}) {\n  return (\n    <div className={cn('mb-2', className)}>\n      <h1 className=\"text-3xl font-bold text-gray-900\">\n        {children}\n      </h1>\n      {subtitle && (\n        <p className=\"text-gray-600 mt-1\">\n          {subtitle}\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport function PageContent({\n  children,\n  className\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) {\n  return (\n    <div className={cn('space-y-4', className)}>\n      {children}\n    </div>\n  );\n}\n\nexport function PageSection({\n  children,\n  className,\n  title\n}: {\n  children: React.ReactNode;\n  className?: string;\n  title?: string;\n}) {\n  return (\n    <section className={cn('space-y-4', className)}>\n      {title && (\n        <h2 className=\"text-xl font-semibold text-gray-900\">\n          {title}\n        </h2>\n      )}\n      {children}\n    </section>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { PageHeader, PageTitle } from '../../../layout/PageWrapper';\nimport { Button } from '../../../ui/button';\nimport { LucideIcon } from 'lucide-react';\n\ninterface AdminPageHeaderProps {\n  title: string;\n  subtitle?: string;\n  actionLabel?: string;\n  actionIcon?: LucideIcon;\n  onAction?: () => void;\n  className?: string;\n}\n\nexport default function AdminPageHeader({\n  title,\n  subtitle,\n  actionLabel,\n  actionIcon: ActionIcon,\n  onAction,\n  className = ''\n}: AdminPageHeaderProps) {\n  return (\n    <PageHeader className={className}>\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <PageTitle subtitle={subtitle}>\n            {title}\n          </PageTitle>\n        </div>\n        {actionLabel && onAction && ActionIcon && (\n          <Button onClick={onAction}>\n            <ActionIcon className=\"w-4 h-4 mr-2\" />\n            {actionLabel}\n          </Button>\n        )}\n      </div>\n    </PageHeader>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { LucideIcon } from 'lucide-react';\n\ninterface SettingsTab {\n  id: string;\n  label: string;\n  icon: LucideIcon;\n}\n\ninterface SettingsNavigationProps {\n  tabs: SettingsTab[];\n  activeTab: string;\n  onTabChange: (tabId: string) => void;\n  className?: string;\n}\n\nexport default function SettingsNavigation({\n  tabs,\n  activeTab,\n  onTabChange,\n  className = ''\n}: SettingsNavigationProps) {\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>Settings Categories</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <nav className=\"space-y-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <Button\n                variant=\"ghost\"\n                key={tab.id}\n                onClick={() => onTabChange(tab.id)}\n                className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg text-left transition-colors justify-start h-auto ${\n                  activeTab === tab.id\n                    ? 'bg-action-primary text-text-inverted'\n                    : 'text-text-secondary hover:text-text-primary hover:bg-bg-secondary'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                {tab.label}\n              </Button>\n            );\n          })}\n        </nav>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { Input } from '../../../ui/input';\nimport { Select } from '../../../ui/select';\nimport { Textarea } from '../../../ui/textarea';\nimport { Switch } from '../../../ui/switch';\nimport { LucideIcon } from 'lucide-react';\n\ninterface FormField {\n  type: 'text' | 'email' | 'password' | 'number' | 'textarea' | 'select' | 'switch';\n  name: string;\n  label: string;\n  placeholder?: string;\n  description?: string;\n  required?: boolean;\n  min?: number;\n  max?: number;\n  options?: { value: string; label: string }[];\n  rows?: number;\n}\n\ninterface SettingsFormProps {\n  title: string;\n  fields: FormField[];\n  values: Record<string, any>;\n  onChange: (name: string, value: any) => void;\n  onSave: () => void;\n  onReset: () => void;\n  saving?: boolean;\n  className?: string;\n}\n\nexport default function SettingsForm({\n  title,\n  fields,\n  values,\n  onChange,\n  onSave,\n  onReset,\n  saving = false,\n  className = ''\n}: SettingsFormProps) {\n  const renderField = (field: FormField) => {\n    const commonProps = {\n      value: values[field.name] || '',\n      onChange: (e: any) => onChange(field.name, e.target.value),\n      placeholder: field.placeholder,\n      required: field.required,\n      min: field.min,\n      max: field.max\n    };\n\n    switch (field.type) {\n      case 'textarea':\n        return (\n          <Textarea\n            {...commonProps}\n            rows={field.rows || 3}\n            onChange={(e) => onChange(field.name, e.target.value)}\n          />\n        );\n\n      case 'select':\n        return (\n          <Select\n            value={values[field.name] || ''}\n            onValueChange={(value) => onChange(field.name, value)}\n          >\n            {field.options?.map((option) => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </Select>\n        );\n\n      case 'switch':\n        return (\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-text-secondary\">\n                {field.label}\n              </label>\n              {field.description && (\n                <p className=\"text-xs text-text-tertiary\">{field.description}</p>\n              )}\n            </div>\n            <Switch\n              checked={values[field.name] || false}\n              onCheckedChange={(checked) => onChange(field.name, checked)}\n            />\n          </div>\n        );\n\n      default:\n        return <Input {...commonProps} type={field.type} />;\n    }\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>{title}</CardTitle>\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={onReset}>\n              Reset\n            </Button>\n            <Button onClick={onSave} disabled={saving}>\n              {saving ? 'Saving...' : 'Save'}\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-6\">\n          {fields.map((field) => (\n            <div key={field.name}>\n              {field.type !== 'switch' && (\n                <label className=\"block text-sm font-medium text-text-secondary mb-2\">\n                  {field.label}\n                  {field.required && <span className=\"text-red-500 ml-1\">*</span>}\n                </label>\n              )}\n              {renderField(field)}\n              {field.description && field.type !== 'switch' && (\n                <p className=\"text-xs text-text-tertiary mt-1\">{field.description}</p>\n              )}\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent } from '../../../ui/card';\nimport { LucideIcon } from 'lucide-react';\n\ninterface StatusItem {\n  label: string;\n  value: string | number;\n  icon: LucideIcon;\n  color: string;\n  bgColor: string;\n  status?: 'healthy' | 'warning' | 'error';\n}\n\ninterface SystemStatusProps {\n  statusItems: StatusItem[];\n  className?: string;\n}\n\nexport default function SystemStatus({ statusItems, className = '' }: SystemStatusProps) {\n  const getStatusColor = (status?: string) => {\n    switch (status) {\n      case 'healthy':\n        return 'text-green-600';\n      case 'warning':\n        return 'text-yellow-600';\n      case 'error':\n        return 'text-red-600';\n      default:\n        return 'text-blue-700';\n    }\n  };\n\n  const getStatusBgColor = (status?: string) => {\n    switch (status) {\n      case 'healthy':\n        return 'bg-green-100';\n      case 'warning':\n        return 'bg-yellow-100';\n      case 'error':\n        return 'bg-red-100';\n      default:\n        return 'bg-blue-100';\n    }\n  };\n\n  return (\n    <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\n      {statusItems.map((item, index) => {\n        const Icon = item.icon;\n        const statusColor = item.status ? getStatusColor(item.status) : item.color;\n        const statusBgColor = item.status ? getStatusBgColor(item.status) : item.bgColor;\n        \n        return (\n          <Card key={index}>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-text-secondary\">{item.label}</p>\n                  <p className={`text-2xl font-bold ${statusColor}`}>{item.value}</p>\n                </div>\n                <div className={`p-3 rounded-full ${statusBgColor}`}>\n                  <Icon className={`h-6 w-6 ${statusColor}`} />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { PageWrapper, PageContent } from '../../../layout/PageWrapper';\nimport AdminPageHeader from './AdminPageHeader';\nimport SettingsNavigation from './SettingsNavigation';\nimport SystemStatus from './SystemStatus';\nimport { LucideIcon } from 'lucide-react';\n\ninterface SettingsTab {\n  id: string;\n  label: string;\n  icon: LucideIcon;\n}\n\ninterface StatusItem {\n  label: string;\n  value: string | number;\n  icon: LucideIcon;\n  color: string;\n  bgColor: string;\n  status?: 'healthy' | 'warning' | 'error';\n}\n\ninterface SettingsLayoutProps {\n  title: string;\n  subtitle?: string;\n  tabs: SettingsTab[];\n  activeTab: string;\n  onTabChange: (tabId: string) => void;\n  statusItems: StatusItem[];\n  children: React.ReactNode;\n  onSave?: () => void;\n  onReset?: () => void;\n  saving?: boolean;\n  className?: string;\n}\n\nexport default function SettingsLayout({\n  title,\n  subtitle,\n  tabs,\n  activeTab,\n  onTabChange,\n  statusItems,\n  children,\n  onSave,\n  onReset,\n  saving = false,\n  className = ''\n}: SettingsLayoutProps) {\n  return (\n    <PageWrapper className={className}>\n      <AdminPageHeader\n        title={title}\n        subtitle={subtitle}\n        actionLabel=\"Save Changes\"\n        onAction={onSave}\n      />\n\n      <PageContent>\n        {/* System Status */}\n        <SystemStatus\n          statusItems={statusItems}\n          className=\"mb-8\"\n        />\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Settings Navigation */}\n          <div className=\"lg:col-span-1\">\n            <SettingsNavigation\n              tabs={tabs}\n              activeTab={activeTab}\n              onTabChange={onTabChange}\n            />\n          </div>\n\n          {/* Settings Content */}\n          <div className=\"lg:col-span-3\">\n            {children}\n          </div>\n        </div>\n      </PageContent>\n    </PageWrapper>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Globe, Shield, Mail, Bell, Server } from 'lucide-react';\n\n// Settings Tab Definitions\nexport const settingsTabs = [\n  { id: 'general', label: 'General', icon: Globe },\n  { id: 'security', label: 'Security', icon: Shield },\n  { id: 'email', label: 'Email', icon: Mail },\n  { id: 'notifications', label: 'Notifications', icon: Bell },\n  { id: 'system', label: 'System', icon: Server }\n];\n\n// General Settings Fields\nexport const generalSettingsFields = [\n  {\n    type: 'text' as const,\n    name: 'siteName',\n    label: 'Site Name',\n    placeholder: 'Enter site name',\n    required: true\n  },\n  {\n    type: 'select' as const,\n    name: 'defaultLanguage',\n    label: 'Default Language',\n    options: [\n      { value: 'en', label: 'English' },\n      { value: 'es', label: 'Spanish' },\n      { value: 'fr', label: 'French' },\n      { value: 'de', label: 'German' }\n    ]\n  },\n  {\n    type: 'textarea' as const,\n    name: 'siteDescription',\n    label: 'Site Description',\n    placeholder: 'Enter site description',\n    rows: 3\n  },\n  {\n    type: 'select' as const,\n    name: 'timezone',\n    label: 'Timezone',\n    options: [\n      { value: 'UTC', label: 'UTC' },\n      { value: 'America/New_York', label: 'Eastern Time' },\n      { value: 'America/Chicago', label: 'Central Time' },\n      { value: 'America/Denver', label: 'Mountain Time' },\n      { value: 'America/Los_Angeles', label: 'Pacific Time' }\n    ]\n  },\n  {\n    type: 'select' as const,\n    name: 'dateFormat',\n    label: 'Date Format',\n    options: [\n      { value: 'MM/DD/YYYY', label: 'MM/DD/YYYY' },\n      { value: 'DD/MM/YYYY', label: 'DD/MM/YYYY' },\n      { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' }\n    ]\n  },\n  {\n    type: 'select' as const,\n    name: 'currency',\n    label: 'Currency',\n    options: [\n      { value: 'USD', label: 'USD' },\n      { value: 'EUR', label: 'EUR' },\n      { value: 'GBP', label: 'GBP' },\n      { value: 'CAD', label: 'CAD' }\n    ]\n  }\n];\n\n// Security Settings Fields\nexport const securitySettingsFields = [\n  {\n    type: 'number' as const,\n    name: 'sessionTimeout',\n    label: 'Session Timeout (minutes)',\n    min: 5,\n    max: 480,\n    description: 'How long users stay logged in before being required to log in again'\n  },\n  {\n    type: 'number' as const,\n    name: 'maxLoginAttempts',\n    label: 'Max Login Attempts',\n    min: 3,\n    max: 10,\n    description: 'Number of failed login attempts before account lockout'\n  },\n  {\n    type: 'number' as const,\n    name: 'passwordMinLength',\n    label: 'Password Minimum Length',\n    min: 6,\n    max: 20,\n    description: 'Minimum number of characters required for passwords'\n  },\n  {\n    type: 'switch' as const,\n    name: 'requireTwoFactor',\n    label: 'Require Two-Factor Authentication',\n    description: 'Force all users to enable 2FA'\n  },\n  {\n    type: 'switch' as const,\n    name: 'allowRegistration',\n    label: 'Allow User Registration',\n    description: 'Allow new users to register accounts'\n  }\n];\n\n// Email Settings Fields\nexport const emailSettingsFields = [\n  {\n    type: 'text' as const,\n    name: 'smtpHost',\n    label: 'SMTP Host',\n    placeholder: 'smtp.gmail.com'\n  },\n  {\n    type: 'number' as const,\n    name: 'smtpPort',\n    label: 'SMTP Port',\n    placeholder: '587',\n    min: 1,\n    max: 65535\n  },\n  {\n    type: 'email' as const,\n    name: 'smtpUsername',\n    label: 'SMTP Username',\n    placeholder: 'your-email@gmail.com'\n  },\n  {\n    type: 'password' as const,\n    name: 'smtpPassword',\n    label: 'SMTP Password',\n    placeholder: 'Your email password'\n  },\n  {\n    type: 'email' as const,\n    name: 'fromEmail',\n    label: 'From Email',\n    placeholder: 'noreply@yourdomain.com'\n  },\n  {\n    type: 'text' as const,\n    name: 'fromName',\n    label: 'From Name',\n    placeholder: 'Your Company Name'\n  }\n];\n\n// Notification Settings Fields\nexport const notificationSettingsFields = [\n  {\n    type: 'switch' as const,\n    name: 'emailNotifications',\n    label: 'Email Notifications',\n    description: 'Send email notifications for system events'\n  },\n  {\n    type: 'switch' as const,\n    name: 'systemAlerts',\n    label: 'System Alerts',\n    description: 'Show system alerts in the admin dashboard'\n  },\n  {\n    type: 'switch' as const,\n    name: 'maintenanceMode',\n    label: 'Maintenance Mode',\n    description: 'Put the system in maintenance mode'\n  }\n];\n\n// System Settings Fields\nexport const systemSettingsFields = [\n  {\n    type: 'number' as const,\n    name: 'maxFileSize',\n    label: 'Max File Size (MB)',\n    min: 1,\n    max: 100,\n    description: 'Maximum file size allowed for uploads'\n  },\n  {\n    type: 'select' as const,\n    name: 'backupFrequency',\n    label: 'Backup Frequency',\n    options: [\n      { value: 'hourly', label: 'Hourly' },\n      { value: 'daily', label: 'Daily' },\n      { value: 'weekly', label: 'Weekly' },\n      { value: 'monthly', label: 'Monthly' }\n    ]\n  },\n  {\n    type: 'number' as const,\n    name: 'logRetentionDays',\n    label: 'Log Retention (days)',\n    min: 7,\n    max: 365,\n    description: 'How long to keep system logs'\n  },\n  {\n    type: 'text' as const,\n    name: 'allowedFileTypes',\n    label: 'Allowed File Types',\n    placeholder: 'jpg, jpeg, png, pdf, doc, docx',\n    description: 'Comma-separated list of allowed file extensions'\n  }\n];\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { LucideIcon } from 'lucide-react';\n\ninterface SecurityCardProps {\n  title: string;\n  description: string;\n  icon: LucideIcon;\n  status: 'secure' | 'warning' | 'critical';\n  actionLabel?: string;\n  onAction?: () => void;\n  className?: string;\n}\n\nexport default function SecurityCard({\n  title,\n  description,\n  icon: Icon,\n  status,\n  actionLabel,\n  onAction,\n  className = ''\n}: SecurityCardProps) {\n  const getStatusConfig = () => {\n    switch (status) {\n      case 'secure':\n        return {\n          color: 'text-green-600',\n          bgColor: 'bg-green-100',\n          borderColor: 'border-green-200'\n        };\n      case 'warning':\n        return {\n          color: 'text-yellow-600',\n          bgColor: 'bg-yellow-100',\n          borderColor: 'border-yellow-200'\n        };\n      case 'critical':\n        return {\n          color: 'text-red-600',\n          bgColor: 'bg-red-100',\n          borderColor: 'border-red-200'\n        };\n    }\n  };\n\n  const config = getStatusConfig();\n\n  return (\n    <Card className={`${className} ${config.borderColor} border-2`}>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className={`p-2 rounded-full ${config.bgColor}`}>\n              <Icon className={`w-5 h-5 ${config.color}`} />\n            </div>\n            <CardTitle className=\"text-lg\">{title}</CardTitle>\n          </div>\n          {actionLabel && onAction && (\n            <Button variant=\"outline\" size=\"sm\" onClick={onAction}>\n              {actionLabel}\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary\">{description}</p>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent } from '../../../ui/card';\nimport { LucideIcon } from 'lucide-react';\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  change?: {\n    value: number;\n    isPositive: boolean;\n    period: string;\n  };\n  icon: LucideIcon;\n  color: string;\n  bgColor: string;\n  className?: string;\n}\n\nexport default function MetricCard({\n  title,\n  value,\n  change,\n  icon: Icon,\n  color,\n  bgColor,\n  className = ''\n}: MetricCardProps) {\n  return (\n    <Card className={className}>\n      <CardContent>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm font-medium text-text-secondary\">{title}</p>\n            <p className={`text-2xl font-bold ${color}`}>{value}</p>\n            {change && (\n              <div className={`flex items-center gap-1 text-sm mt-1 ${\n                change.isPositive ? 'text-green-600' : 'text-red-600'\n              }`}>\n                <span>{change.isPositive ? '↗' : '↘'}</span>\n                <span>{Math.abs(change.value)}%</span>\n                <span className=\"text-text-tertiary\">vs {change.period}</span>\n              </div>\n            )}\n          </div>\n          <div className={`p-3 rounded-full ${bgColor}`}>\n            <Icon className={`h-6 w-6 ${color}`} />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { LucideIcon, Activity, User, Settings, Database, CreditCard, ShoppingCart, Building2, AlertCircle, CheckCircle, Info } from 'lucide-react';\n\ninterface ActivityItem {\n  id: string;\n  timestamp: string;\n  user: string;\n  action: string;\n  description: string;\n  icon?: LucideIcon;\n  type: 'success' | 'warning' | 'error' | 'info';\n}\n\ninterface ActivityFeedProps {\n  title: string;\n  activities: ActivityItem[];\n  maxItems?: number;\n  className?: string;\n}\n\nexport default function ActivityFeed({\n  title,\n  activities,\n  maxItems = 10,\n  className = ''\n}: ActivityFeedProps) {\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'success':\n        return 'text-green-600 bg-green-100';\n      case 'warning':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'error':\n        return 'text-red-600 bg-red-100';\n      case 'info':\n        return 'text-blue-700 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getDefaultIcon = (action: string, type: string): LucideIcon => {\n    const actionLower = action.toLowerCase();\n    \n    // Map actions to icons\n    if (actionLower.includes('create') || actionLower.includes('add')) {\n      return Building2;\n    } else if (actionLower.includes('update') || actionLower.includes('edit')) {\n      return Settings;\n    } else if (actionLower.includes('delete') || actionLower.includes('remove')) {\n      return AlertCircle;\n    } else if (actionLower.includes('login') || actionLower.includes('auth')) {\n      return User;\n    } else if (actionLower.includes('payment') || actionLower.includes('billing')) {\n      return CreditCard;\n    } else if (actionLower.includes('order') || actionLower.includes('purchase')) {\n      return ShoppingCart;\n    } else if (actionLower.includes('backup') || actionLower.includes('system')) {\n      return Database;\n    } else if (actionLower.includes('error') || actionLower.includes('fail')) {\n      return AlertCircle;\n    } else if (actionLower.includes('success') || actionLower.includes('complete')) {\n      return CheckCircle;\n    }\n    \n    // Default based on type\n    switch (type) {\n      case 'success':\n        return CheckCircle;\n      case 'warning':\n        return AlertCircle;\n      case 'error':\n        return AlertCircle;\n      case 'info':\n      default:\n        return Info;\n    }\n  };\n\n  const displayActivities = activities.slice(0, maxItems);\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {displayActivities.map((activity) => {\n            const Icon = activity.icon || getDefaultIcon(activity.action, activity.type);\n            return (\n              <div key={activity.id} className=\"flex items-start gap-3\">\n                <div className={`p-2 rounded-full ${getTypeColor(activity.type)}`}>\n                  <Icon className=\"w-4 h-4\" />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm font-medium text-text-primary\">{activity.user}</span>\n                    <span className=\"text-sm text-text-secondary\">{activity.action}</span>\n                  </div>\n                  <p className=\"text-sm text-text-secondary mt-1\">{activity.description}</p>\n                  <p className=\"text-xs text-text-tertiary mt-1\">{activity.timestamp}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { LucideIcon } from 'lucide-react';\n\ninterface QuickAction {\n  id: string;\n  label: string;\n  description: string;\n  icon: LucideIcon;\n  variant?: 'default' | 'outline' | 'destructive' | 'secondary' | 'ghost' | 'link';\n  onClick: () => void;\n}\n\ninterface QuickActionsProps {\n  title: string;\n  actions: QuickAction[];\n  className?: string;\n}\n\nexport default function QuickActions({\n  title,\n  actions,\n  className = ''\n}: QuickActionsProps) {\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n          {actions.map((action) => {\n            const Icon = action.icon;\n            return (\n              <Button\n                key={action.id}\n                variant={action.variant || 'outline'}\n                onClick={action.onClick}\n                className=\"h-auto p-4 flex flex-col items-start gap-2\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"font-medium\">{action.label}</span>\n                </div>\n                <span className=\"text-xs text-text-tertiary text-left\">{action.description}</span>\n              </Button>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { LucideIcon } from 'lucide-react';\n\ninterface HealthMetric {\n  name: string;\n  value: number;\n  max: number;\n  unit: string;\n  status: 'healthy' | 'warning' | 'critical';\n  icon: LucideIcon;\n}\n\ninterface SystemHealthProps {\n  title: string;\n  metrics: HealthMetric[];\n  className?: string;\n}\n\nexport default function SystemHealth({\n  title,\n  metrics,\n  className = ''\n}: SystemHealthProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'healthy':\n        return 'bg-green-500';\n      case 'warning':\n        return 'bg-yellow-500';\n      case 'critical':\n        return 'bg-red-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'healthy':\n        return 'Healthy';\n      case 'warning':\n        return 'Warning';\n      case 'critical':\n        return 'Critical';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {metrics.map((metric, index) => {\n            const Icon = metric.icon;\n            const percentage = (metric.value / metric.max) * 100;\n            \n            return (\n              <div key={index} className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <Icon className=\"w-4 h-4 text-text-tertiary\" />\n                    <span className=\"text-sm font-medium text-text-primary\">{metric.name}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm text-text-secondary\">\n                      {metric.value} / {metric.max} {metric.unit}\n                    </span>\n                    <span className={`text-xs px-2 py-1 rounded-full text-white ${getStatusColor(metric.status)}`}>\n                      {getStatusText(metric.status)}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"w-full bg-bg-tertiary rounded-full h-2\">\n                  <div\n                    className={`h-2 rounded-full ${getStatusColor(metric.status)}`}\n                    style={{ width: `${Math.min(percentage, 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { TrendingUp, TrendingDown, Activity, Cpu, Monitor, HardDrive, Wifi, Database, Globe } from 'lucide-react';\n\nexport interface PerformanceMetric {\n  id: string;\n  name: string;\n  category: 'CPU' | 'MEMORY' | 'DISK' | 'NETWORK' | 'DATABASE' | 'API';\n  value: number;\n  unit: string;\n  threshold: {\n    warning: number;\n    critical: number;\n  };\n  status: 'HEALTHY' | 'WARNING' | 'CRITICAL';\n  trend: 'UP' | 'DOWN' | 'STABLE';\n  change: number;\n  timestamp: string;\n  description: string;\n}\n\ninterface PerformanceMetricCardProps {\n  metric: PerformanceMetric;\n  onClick?: (metric: PerformanceMetric) => void;\n}\n\nconst getCategoryIcon = (category: string) => {\n  switch (category) {\n    case 'CPU': return Cpu;\n    case 'MEMORY': return Monitor;\n    case 'DISK': return HardDrive;\n    case 'NETWORK': return Wifi;\n    case 'DATABASE': return Database;\n    case 'API': return Globe;\n    default: return Activity;\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'HEALTHY': return 'bg-green-100 text-green-800';\n    case 'WARNING': return 'bg-yellow-100 text-yellow-800';\n    case 'CRITICAL': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getTrendIcon = (trend: string) => {\n  switch (trend) {\n    case 'UP': return TrendingUp;\n    case 'DOWN': return TrendingDown;\n    case 'STABLE': return Activity;\n    default: return Activity;\n  }\n};\n\nconst getTrendColor = (trend: string, change: number) => {\n  if (trend === 'UP') return 'text-red-500';\n  if (trend === 'DOWN') return 'text-green-500';\n  return 'text-gray-500';\n};\n\nfunction PerformanceMetricCard({ metric, onClick }: PerformanceMetricCardProps) {\n  const Icon = getCategoryIcon(metric.category);\n  const TrendIcon = getTrendIcon(metric.trend);\n  const trendColor = getTrendColor(metric.trend, metric.change);\n\n  return (\n    <Card \n      className={`cursor-pointer transition-all hover:shadow-md ${onClick ? 'hover:border-primary' : ''}`}\n      onClick={() => onClick?.(metric)}\n    >\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-text-secondary\">\n          {metric.name}\n        </CardTitle>\n        <Icon className=\"h-4 w-4 text-text-tertiary\" />\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-2xl font-bold text-text-primary\">\n              {metric.value}{metric.unit}\n            </span>\n            <div className=\"flex items-center space-x-1\">\n              <TrendIcon className={`h-3 w-3 ${trendColor}`} />\n              <span className={`text-xs ${trendColor}`}>\n                {metric.change > 0 ? '+' : ''}{metric.change}{metric.unit}\n              </span>\n            </div>\n          </div>\n          <Badge className={getStatusColor(metric.status)}>\n            {metric.status}\n          </Badge>\n        </div>\n        <p className=\"text-xs text-text-tertiary mt-1\">\n          {metric.description}\n        </p>\n        <div className=\"mt-2 text-xs text-text-tertiary\">\n          <div>Warn: {metric.threshold.warning}{metric.unit}</div>\n          <div>Critical: {metric.threshold.critical}{metric.unit}</div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { PerformanceMetricCard };\nexport default PerformanceMetricCard;\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { AlertTriangle, CheckCircle, Clock, User } from 'lucide-react';\n\nexport interface PerformanceAlert {\n  id: string;\n  metric: string;\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  message: string;\n  timestamp: string;\n  resolved: boolean;\n  resolvedAt?: string;\n  resolvedBy?: string;\n}\n\ninterface PerformanceAlertCardProps {\n  alert: PerformanceAlert;\n  onResolve?: (alertId: string) => void;\n  onViewDetails?: (alert: PerformanceAlert) => void;\n}\n\nconst getSeverityColor = (severity: string) => {\n  switch (severity) {\n    case 'LOW': return 'bg-blue-100 text-blue-800';\n    case 'MEDIUM': return 'bg-yellow-100 text-yellow-800';\n    case 'HIGH': return 'bg-orange-100 text-orange-800';\n    case 'CRITICAL': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getSeverityIcon = (severity: string) => {\n  switch (severity) {\n    case 'LOW': return AlertTriangle;\n    case 'MEDIUM': return AlertTriangle;\n    case 'HIGH': return AlertTriangle;\n    case 'CRITICAL': return AlertTriangle;\n    default: return AlertTriangle;\n  }\n};\n\nfunction PerformanceAlertCard({ \n  alert, \n  onResolve, \n  onViewDetails \n}: PerformanceAlertCardProps) {\n  const SeverityIcon = getSeverityIcon(alert.severity);\n\n  return (\n    <Card className=\"border-l-4 border-l-orange-500\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <SeverityIcon className=\"h-4 w-4 text-orange-500\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {alert.metric}\n          </CardTitle>\n        </div>\n        <Badge className={getSeverityColor(alert.severity)}>\n          {alert.severity}\n        </Badge>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {alert.message}\n        </p>\n        \n        <div className=\"flex items-center space-x-4 text-xs text-text-tertiary mb-3\">\n          <div className=\"flex items-center space-x-1\">\n            <Clock className=\"h-3 w-3\" />\n            <span>{new Date(alert.timestamp).toLocaleString()}</span>\n          </div>\n          {alert.resolved && alert.resolvedBy && (\n            <div className=\"flex items-center space-x-1\">\n              <User className=\"h-3 w-3\" />\n              <span>Resolved by {alert.resolvedBy}</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            {alert.resolved ? (\n              <div className=\"flex items-center space-x-1 text-green-600\">\n                <CheckCircle className=\"h-4 w-4\" />\n                <span className=\"text-sm\">Resolved</span>\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-1 text-orange-600\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <span className=\"text-sm\">Active</span>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(alert)}\n              >\n                View Details\n              </Button>\n            )}\n            {!alert.resolved && onResolve && (\n              <Button\n                size=\"sm\"\n                onClick={() => onResolve(alert.id)}\n              >\n                Resolve\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { PerformanceAlertCard };\nexport default PerformanceAlertCard;\n","import React from 'react';\nimport { PerformanceMetricCard, PerformanceMetric } from './PerformanceMetricCard';\n\ninterface PerformanceMetricsGridProps {\n  metrics: PerformanceMetric[];\n  onMetricClick?: (metric: PerformanceMetric) => void;\n  loading?: boolean;\n}\n\nexport default function PerformanceMetricsGrid({ \n  metrics, \n  onMetricClick, \n  loading = false \n}: PerformanceMetricsGridProps) {\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n        {Array.from({ length: 8 }).map((_, index) => (\n          <div key={index} className=\"h-32 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (metrics.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No performance metrics available</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n      {metrics.map((metric) => (\n        <PerformanceMetricCard\n          key={metric.id}\n          metric={metric}\n          onClick={onMetricClick}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { PerformanceAlertCard, PerformanceAlert } from './PerformanceAlertCard';\n\ninterface PerformanceAlertsListProps {\n  alerts: PerformanceAlert[];\n  onResolveAlert?: (alertId: string) => void;\n  onViewAlertDetails?: (alert: PerformanceAlert) => void;\n  loading?: boolean;\n  maxItems?: number;\n}\n\nexport default function PerformanceAlertsList({ \n  alerts, \n  onResolveAlert, \n  onViewAlertDetails,\n  loading = false,\n  maxItems = 10\n}: PerformanceAlertsListProps) {\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        {Array.from({ length: 3 }).map((_, index) => (\n          <div key={index} className=\"h-24 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  const displayAlerts = alerts.slice(0, maxItems);\n  const activeAlerts = displayAlerts.filter(alert => !alert.resolved);\n  const resolvedAlerts = displayAlerts.filter(alert => alert.resolved);\n\n  if (alerts.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No performance alerts</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Active Alerts */}\n      {activeAlerts.length > 0 && (\n        <div>\n          <h3 className=\"text-sm font-medium text-text-primary mb-3\">\n            Active Alerts ({activeAlerts.length})\n          </h3>\n          <div className=\"space-y-3\">\n            {activeAlerts.map((alert) => (\n              <PerformanceAlertCard\n                key={alert.id}\n                alert={alert}\n                onResolve={onResolveAlert}\n                onViewDetails={onViewAlertDetails}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Resolved Alerts */}\n      {resolvedAlerts.length > 0 && (\n        <div>\n          <h3 className=\"text-sm font-medium text-text-primary mb-3\">\n            Recently Resolved ({resolvedAlerts.length})\n          </h3>\n          <div className=\"space-y-3\">\n            {resolvedAlerts.map((alert) => (\n              <PerformanceAlertCard\n                key={alert.id}\n                alert={alert}\n                onViewDetails={onViewAlertDetails}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  Wrench, \n  Play, \n  Pause, \n  CheckCircle, \n  XCircle, \n  Clock, \n  Calendar,\n  User,\n  AlertTriangle\n} from 'lucide-react';\n\nexport interface MaintenanceTask {\n  id: string;\n  name: string;\n  type: 'SCHEDULED' | 'EMERGENCY' | 'ROUTINE' | 'UPDATE';\n  status: 'PENDING' | 'IN_PROGRESS' | 'COMPLETED' | 'FAILED' | 'CANCELLED';\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  scheduledAt: string;\n  startedAt?: string;\n  completedAt?: string;\n  duration?: string;\n  description: string;\n  createdBy: string;\n  affectedServices: string[];\n  estimatedDuration: string;\n  actualDuration?: string;\n}\n\ninterface MaintenanceTaskCardProps {\n  task: MaintenanceTask;\n  onStart?: (taskId: string) => void;\n  onComplete?: (taskId: string) => void;\n  onCancel?: (taskId: string) => void;\n  onViewDetails?: (task: MaintenanceTask) => void;\n}\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case 'SCHEDULED': return 'bg-blue-100 text-blue-800';\n    case 'EMERGENCY': return 'bg-red-100 text-red-800';\n    case 'ROUTINE': return 'bg-green-100 text-green-800';\n    case 'UPDATE': return 'bg-purple-100 text-purple-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'PENDING': return 'bg-yellow-100 text-yellow-800';\n    case 'IN_PROGRESS': return 'bg-blue-100 text-blue-800';\n    case 'COMPLETED': return 'bg-green-100 text-green-800';\n    case 'FAILED': return 'bg-red-100 text-red-800';\n    case 'CANCELLED': return 'bg-gray-100 text-gray-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getPriorityColor = (priority: string) => {\n  switch (priority) {\n    case 'LOW': return 'bg-gray-100 text-gray-800';\n    case 'MEDIUM': return 'bg-yellow-100 text-yellow-800';\n    case 'HIGH': return 'bg-orange-100 text-orange-800';\n    case 'CRITICAL': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'PENDING': return Clock;\n    case 'IN_PROGRESS': return Play;\n    case 'COMPLETED': return CheckCircle;\n    case 'FAILED': return XCircle;\n    case 'CANCELLED': return XCircle;\n    default: return Clock;\n  }\n};\n\nfunction MaintenanceTaskCard({ \n  task, \n  onStart, \n  onComplete, \n  onCancel, \n  onViewDetails \n}: MaintenanceTaskCardProps) {\n  const StatusIcon = getStatusIcon(task.status);\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Wrench className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {task.name}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getPriorityColor(task.priority)}>\n            {task.priority}\n          </Badge>\n          <Badge className={getTypeColor(task.type)}>\n            {task.type}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {task.description}\n        </p>\n        \n        <div className=\"flex items-center space-x-4 text-xs text-text-tertiary mb-3\">\n          <div className=\"flex items-center space-x-1\">\n            <Calendar className=\"h-3 w-3\" />\n            <span>{new Date(task.scheduledAt).toLocaleDateString()}</span>\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <Clock className=\"h-3 w-3\" />\n            <span>{task.estimatedDuration}</span>\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <User className=\"h-3 w-3\" />\n            <span>{task.createdBy}</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <StatusIcon className=\"h-4 w-4 text-text-tertiary\" />\n            <Badge className={getStatusColor(task.status)}>\n              {task.status.replace('_', ' ')}\n            </Badge>\n          </div>\n          \n          {task.actualDuration && (\n            <span className=\"text-xs text-text-tertiary\">\n              Actual: {task.actualDuration}\n            </span>\n          )}\n        </div>\n\n        <div className=\"mb-3\">\n          <p className=\"text-xs text-text-tertiary mb-1\">Affected Services:</p>\n          <div className=\"flex flex-wrap gap-1\">\n            {task.affectedServices.map((service, index) => (\n              <span key={index} className=\"text-xs bg-bg-secondary px-2 py-1 rounded\">\n                {service}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(task)}\n              >\n                View Details\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {task.status === 'PENDING' && onStart && (\n              <Button\n                size=\"sm\"\n                onClick={() => onStart(task.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Play className=\"h-3 w-3\" />\n                <span>Start</span>\n              </Button>\n            )}\n            \n            {task.status === 'IN_PROGRESS' && onComplete && (\n              <Button\n                size=\"sm\"\n                onClick={() => onComplete(task.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <CheckCircle className=\"h-3 w-3\" />\n                <span>Complete</span>\n              </Button>\n            )}\n            \n            {(task.status === 'PENDING' || task.status === 'IN_PROGRESS') && onCancel && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onCancel(task.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <XCircle className=\"h-3 w-3\" />\n                <span>Cancel</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { MaintenanceTaskCard };\nexport default MaintenanceTaskCard;\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Button } from '../../../ui/button';\nimport { Shield, Eye, EyeOff } from 'lucide-react';\n\ninterface MaintenanceModeToggleProps {\n  isActive: boolean;\n  onToggle: () => void;\n  loading?: boolean;\n}\n\nexport default function MaintenanceModeToggle({ \n  isActive, \n  onToggle, \n  loading = false \n}: MaintenanceModeToggleProps) {\n  return (\n    <Card className=\"border-l-4 border-l-orange-500\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Shield className=\"w-5 h-5\" />\n          Maintenance Mode Status\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className={`w-3 h-3 rounded-full ${isActive ? 'bg-red-500' : 'bg-green-500'}`} />\n            <span className=\"text-sm font-medium\">\n              {isActive ? 'Maintenance Mode Active' : 'System Normal'}\n            </span>\n          </div>\n          <Button\n            variant={isActive ? 'default' : 'outline'}\n            onClick={onToggle}\n            disabled={loading}\n            className=\"flex items-center gap-2\"\n          >\n            {isActive ? <Eye className=\"w-4 h-4\" /> : <EyeOff className=\"w-4 h-4\" />}\n            {isActive ? 'Disable' : 'Enable'} Maintenance Mode\n          </Button>\n        </div>\n        \n        {isActive && (\n          <div className=\"mt-3 p-3 bg-orange-50 border border-orange-200 rounded-lg\">\n            <p className=\"text-sm text-orange-800\">\n              <strong>Warning:</strong> Maintenance mode is currently active. \n              Users may experience limited access to the system.\n            </p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { MaintenanceTaskCard, MaintenanceTask } from './MaintenanceTaskCard';\n\ninterface MaintenanceTasksGridProps {\n  tasks: MaintenanceTask[];\n  onStartTask?: (taskId: string) => void;\n  onCompleteTask?: (taskId: string) => void;\n  onCancelTask?: (taskId: string) => void;\n  onViewTaskDetails?: (task: MaintenanceTask) => void;\n  loading?: boolean;\n}\n\nexport default function MaintenanceTasksGrid({ \n  tasks, \n  onStartTask, \n  onCompleteTask, \n  onCancelTask, \n  onViewTaskDetails,\n  loading = false \n}: MaintenanceTasksGridProps) {\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Array.from({ length: 6 }).map((_, index) => (\n          <div key={index} className=\"h-64 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (tasks.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No maintenance tasks found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {tasks.map((task) => (\n        <MaintenanceTaskCard\n          key={task.id}\n          task={task}\n          onStart={onStartTask}\n          onComplete={onCompleteTask}\n          onCancel={onCancelTask}\n          onViewDetails={onViewTaskDetails}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { Calendar, Clock, Bell, BellOff } from 'lucide-react';\n\nexport interface MaintenanceWindow {\n  id: string;\n  name: string;\n  startTime: string;\n  endTime: string;\n  status: 'ACTIVE' | 'SCHEDULED' | 'COMPLETED' | 'CANCELLED';\n  description: string;\n  affectedServices: string[];\n  notifications: {\n    users: boolean;\n    admins: boolean;\n    customers: boolean;\n  };\n}\n\ninterface MaintenanceWindowCardProps {\n  window: MaintenanceWindow;\n  onEdit?: (window: MaintenanceWindow) => void;\n  onCancel?: (windowId: string) => void;\n  onViewDetails?: (window: MaintenanceWindow) => void;\n}\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'ACTIVE': return 'bg-green-100 text-green-800';\n    case 'SCHEDULED': return 'bg-blue-100 text-blue-800';\n    case 'COMPLETED': return 'bg-gray-100 text-gray-800';\n    case 'CANCELLED': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'ACTIVE': return Clock;\n    case 'SCHEDULED': return Calendar;\n    case 'COMPLETED': return Calendar;\n    case 'CANCELLED': return Calendar;\n    default: return Calendar;\n  }\n};\n\nexport default function MaintenanceWindowCard({ \n  window, \n  onEdit, \n  onCancel, \n  onViewDetails \n}: MaintenanceWindowCardProps) {\n  const StatusIcon = getStatusIcon(window.status);\n  const startDate = new Date(window.startTime);\n  const endDate = new Date(window.endTime);\n  const duration = Math.round((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60));\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <StatusIcon className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {window.name}\n          </CardTitle>\n        </div>\n        <Badge className={getStatusColor(window.status)}>\n          {window.status}\n        </Badge>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {window.description}\n        </p>\n        \n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Start Time:</span>\n            <span className=\"text-text-primary\">{startDate.toLocaleString()}</span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">End Time:</span>\n            <span className=\"text-text-primary\">{endDate.toLocaleString()}</span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Duration:</span>\n            <span className=\"text-text-primary\">{duration} hours</span>\n          </div>\n        </div>\n\n        <div className=\"mb-3\">\n          <p className=\"text-xs text-text-tertiary mb-1\">Affected Services:</p>\n          <div className=\"flex flex-wrap gap-1\">\n            {window.affectedServices.map((service, index) => (\n              <span key={index} className=\"text-xs bg-bg-secondary px-2 py-1 rounded\">\n                {service}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mb-3\">\n          <p className=\"text-xs text-text-tertiary mb-1\">Notifications:</p>\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-1\">\n              {window.notifications.users ? (\n                <Bell className=\"h-3 w-3 text-green-500\" />\n              ) : (\n                <BellOff className=\"h-3 w-3 text-gray-400\" />\n              )}\n              <span className=\"text-xs\">Users</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              {window.notifications.admins ? (\n                <Bell className=\"h-3 w-3 text-green-500\" />\n              ) : (\n                <BellOff className=\"h-3 w-3 text-gray-400\" />\n              )}\n              <span className=\"text-xs\">Admins</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              {window.notifications.customers ? (\n                <Bell className=\"h-3 w-3 text-green-500\" />\n              ) : (\n                <BellOff className=\"h-3 w-3 text-gray-400\" />\n              )}\n              <span className=\"text-xs\">Customers</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(window)}\n              >\n                View Details\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {window.status === 'SCHEDULED' && onEdit && (\n              <Button\n                size=\"sm\"\n                onClick={() => onEdit(window)}\n              >\n                Edit\n              </Button>\n            )}\n            \n            {(window.status === 'SCHEDULED' || window.status === 'ACTIVE') && onCancel && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onCancel(window.id)}\n              >\n                Cancel\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  Database, \n  Download, \n  Play, \n  Trash2, \n  Clock, \n  Calendar,\n  User,\n  HardDrive,\n  Cloud,\n  Archive,\n  CheckCircle,\n  XCircle,\n  AlertTriangle\n} from 'lucide-react';\n\nexport interface Backup {\n  id: string;\n  name: string;\n  type: 'FULL' | 'INCREMENTAL' | 'DIFFERENTIAL';\n  status: 'COMPLETED' | 'IN_PROGRESS' | 'FAILED' | 'SCHEDULED';\n  size: string;\n  createdAt: string;\n  completedAt?: string;\n  duration?: string;\n  location: 'LOCAL' | 'CLOUD' | 'BOTH';\n  description: string;\n  createdBy: string;\n}\n\ninterface BackupCardProps {\n  backup: Backup;\n  onDownload?: (backupId: string) => void;\n  onRestore?: (backupId: string) => void;\n  onDelete?: (backupId: string) => void;\n  onViewDetails?: (backup: Backup) => void;\n}\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case 'FULL': return 'bg-blue-100 text-blue-800';\n    case 'INCREMENTAL': return 'bg-green-100 text-green-800';\n    case 'DIFFERENTIAL': return 'bg-purple-100 text-purple-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'COMPLETED': return 'bg-green-100 text-green-800';\n    case 'IN_PROGRESS': return 'bg-blue-100 text-blue-800';\n    case 'FAILED': return 'bg-red-100 text-red-800';\n    case 'SCHEDULED': return 'bg-yellow-100 text-yellow-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'COMPLETED': return CheckCircle;\n    case 'IN_PROGRESS': return Clock;\n    case 'FAILED': return XCircle;\n    case 'SCHEDULED': return AlertTriangle;\n    default: return Clock;\n  }\n};\n\nconst getLocationIcon = (location: string) => {\n  switch (location) {\n    case 'CLOUD': return Cloud;\n    case 'LOCAL': return HardDrive;\n    case 'BOTH': return Archive;\n    default: return Database;\n  }\n};\n\nfunction BackupCard({ \n  backup, \n  onDownload, \n  onRestore, \n  onDelete, \n  onViewDetails \n}: BackupCardProps) {\n  const StatusIcon = getStatusIcon(backup.status);\n  const LocationIcon = getLocationIcon(backup.location);\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Database className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {backup.name}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getTypeColor(backup.type)}>\n            {backup.type}\n          </Badge>\n          <Badge className={getStatusColor(backup.status)}>\n            {backup.status}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {backup.description}\n        </p>\n        \n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Size:</span>\n            <span className=\"text-text-primary\">{backup.size}</span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Created:</span>\n            <span className=\"text-text-primary\">{new Date(backup.createdAt).toLocaleDateString()}</span>\n          </div>\n          {backup.completedAt && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">Completed:</span>\n              <span className=\"text-text-primary\">{new Date(backup.completedAt).toLocaleDateString()}</span>\n            </div>\n          )}\n          {backup.duration && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">Duration:</span>\n              <span className=\"text-text-primary\">{backup.duration}</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <StatusIcon className=\"h-4 w-4 text-text-tertiary\" />\n            <span className=\"text-xs text-text-tertiary\">\n              {backup.status.replace('_', ' ')}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center space-x-1\">\n            <LocationIcon className=\"h-3 w-3 text-text-tertiary\" />\n            <span className=\"text-xs text-text-tertiary\">{backup.location}</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between text-xs text-text-tertiary mb-3\">\n          <div className=\"flex items-center space-x-1\">\n            <User className=\"h-3 w-3\" />\n            <span>{backup.createdBy}</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(backup)}\n              >\n                View Details\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {backup.status === 'COMPLETED' && onDownload && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onDownload(backup.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Download className=\"h-3 w-3\" />\n                <span>Download</span>\n              </Button>\n            )}\n            \n            {backup.status === 'COMPLETED' && onRestore && (\n              <Button\n                size=\"sm\"\n                onClick={() => onRestore(backup.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Play className=\"h-3 w-3\" />\n                <span>Restore</span>\n              </Button>\n            )}\n            \n            {onDelete && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onDelete(backup.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Trash2 className=\"h-3 w-3\" />\n                <span>Delete</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { BackupCard };\nexport default BackupCard;\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  Clock, \n  Play, \n  Pause, \n  Settings, \n  Calendar,\n  CheckCircle,\n  XCircle,\n  AlertTriangle\n} from 'lucide-react';\n\nexport interface BackupSchedule {\n  id: string;\n  name: string;\n  frequency: 'HOURLY' | 'DAILY' | 'WEEKLY' | 'MONTHLY';\n  nextRun: string;\n  lastRun?: string;\n  status: 'ACTIVE' | 'PAUSED' | 'DISABLED';\n  type: 'FULL' | 'INCREMENTAL' | 'DIFFERENTIAL';\n  retention: number;\n}\n\ninterface BackupScheduleCardProps {\n  schedule: BackupSchedule;\n  onPause?: (scheduleId: string) => void;\n  onResume?: (scheduleId: string) => void;\n  onEdit?: (schedule: BackupSchedule) => void;\n  onDelete?: (scheduleId: string) => void;\n  onViewDetails?: (schedule: BackupSchedule) => void;\n}\n\nconst getFrequencyColor = (frequency: string) => {\n  switch (frequency) {\n    case 'HOURLY': return 'bg-green-100 text-green-800';\n    case 'DAILY': return 'bg-blue-100 text-blue-800';\n    case 'WEEKLY': return 'bg-purple-100 text-purple-800';\n    case 'MONTHLY': return 'bg-orange-100 text-orange-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'ACTIVE': return 'bg-green-100 text-green-800';\n    case 'PAUSED': return 'bg-yellow-100 text-yellow-800';\n    case 'DISABLED': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case 'FULL': return 'bg-blue-100 text-blue-800';\n    case 'INCREMENTAL': return 'bg-green-100 text-green-800';\n    case 'DIFFERENTIAL': return 'bg-purple-100 text-purple-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'ACTIVE': return CheckCircle;\n    case 'PAUSED': return Pause;\n    case 'DISABLED': return XCircle;\n    default: return AlertTriangle;\n  }\n};\n\nfunction BackupScheduleCard({ \n  schedule, \n  onPause, \n  onResume, \n  onEdit, \n  onDelete, \n  onViewDetails \n}: BackupScheduleCardProps) {\n  const StatusIcon = getStatusIcon(schedule.status);\n  const nextRunDate = new Date(schedule.nextRun);\n  const lastRunDate = schedule.lastRun ? new Date(schedule.lastRun) : null;\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Clock className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {schedule.name}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getFrequencyColor(schedule.frequency)}>\n            {schedule.frequency}\n          </Badge>\n          <Badge className={getTypeColor(schedule.type)}>\n            {schedule.type}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Next Run:</span>\n            <span className=\"text-text-primary\">{nextRunDate.toLocaleString()}</span>\n          </div>\n          {lastRunDate && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">Last Run:</span>\n              <span className=\"text-text-primary\">{lastRunDate.toLocaleString()}</span>\n            </div>\n          )}\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Retention:</span>\n            <span className=\"text-text-primary\">{schedule.retention} days</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <StatusIcon className=\"h-4 w-4 text-text-tertiary\" />\n            <Badge className={getStatusColor(schedule.status)}>\n              {schedule.status}\n            </Badge>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(schedule)}\n              >\n                View Details\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {schedule.status === 'ACTIVE' && onPause && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onPause(schedule.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Pause className=\"h-3 w-3\" />\n                <span>Pause</span>\n              </Button>\n            )}\n            \n            {schedule.status === 'PAUSED' && onResume && (\n              <Button\n                size=\"sm\"\n                onClick={() => onResume(schedule.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Play className=\"h-3 w-3\" />\n                <span>Resume</span>\n              </Button>\n            )}\n            \n            {onEdit && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onEdit(schedule)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Settings className=\"h-3 w-3\" />\n                <span>Edit</span>\n              </Button>\n            )}\n            \n            {onDelete && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onDelete(schedule.id)}\n              >\n                Delete\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { BackupScheduleCard };\nexport default BackupScheduleCard;\n","import React from 'react';\nimport { BackupCard, Backup } from './BackupCard';\n\ninterface BackupGridProps {\n  backups: Backup[];\n  onDownloadBackup?: (backupId: string) => void;\n  onRestoreBackup?: (backupId: string) => void;\n  onDeleteBackup?: (backupId: string) => void;\n  onViewBackupDetails?: (backup: Backup) => void;\n  loading?: boolean;\n}\n\nexport default function BackupGrid({ \n  backups, \n  onDownloadBackup, \n  onRestoreBackup, \n  onDeleteBackup, \n  onViewBackupDetails,\n  loading = false \n}: BackupGridProps) {\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Array.from({ length: 6 }).map((_, index) => (\n          <div key={index} className=\"h-80 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (backups.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No backups found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {backups.map((backup) => (\n        <BackupCard\n          key={backup.id}\n          backup={backup}\n          onDownload={onDownloadBackup}\n          onRestore={onRestoreBackup}\n          onDelete={onDeleteBackup}\n          onViewDetails={onViewBackupDetails}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { BackupScheduleCard, BackupSchedule } from './BackupScheduleCard';\n\ninterface BackupSchedulesGridProps {\n  schedules: BackupSchedule[];\n  onPauseSchedule?: (scheduleId: string) => void;\n  onResumeSchedule?: (scheduleId: string) => void;\n  onEditSchedule?: (schedule: BackupSchedule) => void;\n  onDeleteSchedule?: (scheduleId: string) => void;\n  onViewScheduleDetails?: (schedule: BackupSchedule) => void;\n  loading?: boolean;\n}\n\nexport default function BackupSchedulesGrid({ \n  schedules, \n  onPauseSchedule, \n  onResumeSchedule, \n  onEditSchedule, \n  onDeleteSchedule, \n  onViewScheduleDetails,\n  loading = false \n}: BackupSchedulesGridProps) {\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Array.from({ length: 4 }).map((_, index) => (\n          <div key={index} className=\"h-64 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (schedules.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No backup schedules found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {schedules.map((schedule) => (\n        <BackupScheduleCard\n          key={schedule.id}\n          schedule={schedule}\n          onPause={onPauseSchedule}\n          onResume={onResumeSchedule}\n          onEdit={onEditSchedule}\n          onDelete={onDeleteSchedule}\n          onViewDetails={onViewScheduleDetails}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  Key, \n  Copy, \n  Eye, \n  EyeOff, \n  Trash2, \n  XCircle,\n  Clock,\n  User,\n  Activity\n} from 'lucide-react';\n\nexport interface ApiKey {\n  id: string;\n  name: string;\n  key: string;\n  type: 'READ' | 'WRITE' | 'ADMIN' | 'WEBHOOK';\n  status: 'ACTIVE' | 'INACTIVE' | 'EXPIRED' | 'REVOKED';\n  permissions: string[];\n  lastUsed?: string;\n  createdAt: string;\n  expiresAt?: string;\n  createdBy: string;\n  description: string;\n  usage: {\n    requests: number;\n    limit: number;\n    resetDate: string;\n  };\n}\n\ninterface ApiKeyCardProps {\n  apiKey: ApiKey;\n  onCopy?: (key: string) => void;\n  onRevoke?: (keyId: string) => void;\n  onDelete?: (keyId: string) => void;\n  onViewDetails?: (apiKey: ApiKey) => void;\n}\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case 'READ': return 'bg-blue-100 text-blue-800';\n    case 'WRITE': return 'bg-green-100 text-green-800';\n    case 'ADMIN': return 'bg-red-100 text-red-800';\n    case 'WEBHOOK': return 'bg-purple-100 text-purple-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'ACTIVE': return 'bg-green-100 text-green-800';\n    case 'INACTIVE': return 'bg-yellow-100 text-yellow-800';\n    case 'EXPIRED': return 'bg-red-100 text-red-800';\n    case 'REVOKED': return 'bg-gray-100 text-gray-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nfunction ApiKeyCard({ \n  apiKey, \n  onCopy, \n  onRevoke, \n  onDelete, \n  onViewDetails \n}: ApiKeyCardProps) {\n  const [showKey, setShowKey] = useState(false);\n\n  const toggleKeyVisibility = () => {\n    setShowKey(!showKey);\n  };\n\n  const handleCopy = () => {\n    if (onCopy) {\n      onCopy(apiKey.key);\n    } else {\n      navigator.clipboard.writeText(apiKey.key);\n    }\n  };\n\n  const usagePercentage = (apiKey.usage.requests / apiKey.usage.limit) * 100;\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Key className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {apiKey.name}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getTypeColor(apiKey.type)}>\n            {apiKey.type}\n          </Badge>\n          <Badge className={getStatusColor(apiKey.status)}>\n            {apiKey.status}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {apiKey.description}\n        </p>\n        \n        <div className=\"mb-3\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <code className=\"text-xs bg-bg-secondary px-2 py-1 rounded font-mono flex-1\">\n              {showKey ? apiKey.key : '••••••••••••••••••••••••'}\n            </code>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={toggleKeyVisibility}\n              className=\"h-6 w-6 p-0\"\n            >\n              {showKey ? <EyeOff className=\"w-3 h-3\" /> : <Eye className=\"w-3 h-3\" />}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleCopy}\n              className=\"h-6 w-6 p-0\"\n            >\n              <Copy className=\"w-3 h-3\" />\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Usage:</span>\n            <span className=\"text-text-primary\">\n              {apiKey.usage.requests.toLocaleString()} / {apiKey.usage.limit.toLocaleString()}\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className={`h-2 rounded-full ${\n                usagePercentage > 90 ? 'bg-red-500' : \n                usagePercentage > 75 ? 'bg-yellow-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${Math.min(usagePercentage, 100)}%` }}\n            />\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Created:</span>\n            <span className=\"text-text-primary\">{new Date(apiKey.createdAt).toLocaleDateString()}</span>\n          </div>\n          {apiKey.lastUsed && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">Last Used:</span>\n              <span className=\"text-text-primary\">{new Date(apiKey.lastUsed).toLocaleDateString()}</span>\n            </div>\n          )}\n          {apiKey.expiresAt && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">Expires:</span>\n              <span className=\"text-text-primary\">{new Date(apiKey.expiresAt).toLocaleDateString()}</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"mb-3\">\n          <p className=\"text-xs text-text-tertiary mb-1\">Permissions:</p>\n          <div className=\"flex flex-wrap gap-1\">\n            {apiKey.permissions.map((permission, index) => (\n              <span key={index} className=\"text-xs bg-bg-secondary px-2 py-1 rounded\">\n                {permission}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between text-xs text-text-tertiary mb-3\">\n          <div className=\"flex items-center space-x-1\">\n            <User className=\"h-3 w-3\" />\n            <span>{apiKey.createdBy}</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(apiKey)}\n              >\n                View Details\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {apiKey.status === 'ACTIVE' && onRevoke && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onRevoke(apiKey.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <XCircle className=\"h-3 w-3\" />\n                <span>Revoke</span>\n              </Button>\n            )}\n            \n            {onDelete && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onDelete(apiKey.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Trash2 className=\"h-3 w-3\" />\n                <span>Delete</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { ApiKeyCard };\nexport default ApiKeyCard;\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  Globe, \n  Settings, \n  Clock,\n  User,\n  Activity\n} from 'lucide-react';\n\nexport interface ApiEndpoint {\n  id: string;\n  path: string;\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  status: 'ACTIVE' | 'DEPRECATED' | 'MAINTENANCE';\n  version: string;\n  description: string;\n  rateLimit: {\n    requests: number;\n    window: string;\n  };\n  lastModified: string;\n  modifiedBy: string;\n}\n\ninterface ApiEndpointCardProps {\n  endpoint: ApiEndpoint;\n  onEdit?: (endpoint: ApiEndpoint) => void;\n  onViewDetails?: (endpoint: ApiEndpoint) => void;\n}\n\nconst getMethodColor = (method: string) => {\n  switch (method) {\n    case 'GET': return 'bg-green-100 text-green-800';\n    case 'POST': return 'bg-blue-100 text-blue-800';\n    case 'PUT': return 'bg-yellow-100 text-yellow-800';\n    case 'DELETE': return 'bg-red-100 text-red-800';\n    case 'PATCH': return 'bg-purple-100 text-purple-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusColor = (status: string) => {\n  switch (status) {\n    case 'ACTIVE': return 'bg-green-100 text-green-800';\n    case 'DEPRECATED': return 'bg-yellow-100 text-yellow-800';\n    case 'MAINTENANCE': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nfunction ApiEndpointCard({ \n  endpoint, \n  onEdit, \n  onViewDetails \n}: ApiEndpointCardProps) {\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Globe className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary font-mono\">\n            {endpoint.path}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getMethodColor(endpoint.method)}>\n            {endpoint.method}\n          </Badge>\n          <Badge className={getStatusColor(endpoint.status)}>\n            {endpoint.status}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {endpoint.description}\n        </p>\n        \n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Version:</span>\n            <span className=\"text-text-primary\">{endpoint.version}</span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Rate Limit:</span>\n            <span className=\"text-text-primary\">\n              {endpoint.rateLimit.requests} requests per {endpoint.rateLimit.window}\n            </span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Last Modified:</span>\n            <span className=\"text-text-primary\">{new Date(endpoint.lastModified).toLocaleDateString()}</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between text-xs text-text-tertiary mb-3\">\n          <div className=\"flex items-center space-x-1\">\n            <User className=\"h-3 w-3\" />\n            <span>Modified by {endpoint.modifiedBy}</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(endpoint)}\n              >\n                View Details\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {onEdit && (\n              <Button\n                size=\"sm\"\n                onClick={() => onEdit(endpoint)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Settings className=\"h-3 w-3\" />\n                <span>Edit</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { ApiEndpointCard };\nexport default ApiEndpointCard;\n","import React from 'react';\nimport { ApiKeyCard, ApiKey } from './ApiKeyCard';\n\ninterface ApiKeysGridProps {\n  apiKeys: ApiKey[];\n  onCopyKey?: (key: string) => void;\n  onRevokeKey?: (keyId: string) => void;\n  onDeleteKey?: (keyId: string) => void;\n  onViewKeyDetails?: (apiKey: ApiKey) => void;\n  loading?: boolean;\n}\n\nexport default function ApiKeysGrid({ \n  apiKeys, \n  onCopyKey, \n  onRevokeKey, \n  onDeleteKey, \n  onViewKeyDetails,\n  loading = false \n}: ApiKeysGridProps) {\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Array.from({ length: 6 }).map((_, index) => (\n          <div key={index} className=\"h-80 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (apiKeys.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No API keys found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {apiKeys.map((apiKey) => (\n        <ApiKeyCard\n          key={apiKey.id}\n          apiKey={apiKey}\n          onCopy={onCopyKey}\n          onRevoke={onRevokeKey}\n          onDelete={onDeleteKey}\n          onViewDetails={onViewKeyDetails}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { ApiEndpointCard, ApiEndpoint } from './ApiEndpointCard';\n\ninterface ApiEndpointsGridProps {\n  endpoints: ApiEndpoint[];\n  onEditEndpoint?: (endpoint: ApiEndpoint) => void;\n  onViewEndpointDetails?: (endpoint: ApiEndpoint) => void;\n  loading?: boolean;\n}\n\nexport default function ApiEndpointsGrid({ \n  endpoints, \n  onEditEndpoint, \n  onViewEndpointDetails,\n  loading = false \n}: ApiEndpointsGridProps) {\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {Array.from({ length: 6 }).map((_, index) => (\n          <div key={index} className=\"h-64 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (endpoints.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No API endpoints found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {endpoints.map((endpoint) => (\n        <ApiEndpointCard\n          key={endpoint.id}\n          endpoint={endpoint}\n          onEdit={onEditEndpoint}\n          onViewDetails={onViewEndpointDetails}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  FileText, \n  Eye, \n  Clock,\n  User,\n  Globe,\n  Info,\n  CheckCircle,\n  AlertTriangle,\n  XCircle,\n  AlertCircle\n} from 'lucide-react';\n\nexport interface SystemLog {\n  id: string;\n  timestamp: string;\n  level: 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'FATAL';\n  source: 'API' | 'DATABASE' | 'AUTH' | 'PAYMENT' | 'SYSTEM' | 'CLIENT';\n  message: string;\n  details?: string;\n  userId?: string;\n  sessionId?: string;\n  requestId?: string;\n  ipAddress?: string;\n  userAgent?: string;\n  stackTrace?: string;\n  metadata?: Record<string, any>;\n}\n\ninterface LogEntryCardProps {\n  log: SystemLog;\n  onViewDetails?: (log: SystemLog) => void;\n  showFullDetails?: boolean;\n}\n\nconst getLevelColor = (level: string) => {\n  switch (level) {\n    case 'DEBUG': return 'bg-gray-100 text-gray-800';\n    case 'INFO': return 'bg-blue-100 text-blue-800';\n    case 'WARN': return 'bg-yellow-100 text-yellow-800';\n    case 'ERROR': return 'bg-red-100 text-red-800';\n    case 'FATAL': return 'bg-red-200 text-red-900';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getSourceColor = (source: string) => {\n  switch (source) {\n    case 'API': return 'bg-blue-100 text-blue-800';\n    case 'DATABASE': return 'bg-green-100 text-green-800';\n    case 'AUTH': return 'bg-purple-100 text-purple-800';\n    case 'PAYMENT': return 'bg-orange-100 text-orange-800';\n    case 'SYSTEM': return 'bg-gray-100 text-gray-800';\n    case 'CLIENT': return 'bg-cyan-100 text-cyan-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getLevelIcon = (level: string) => {\n  switch (level) {\n    case 'DEBUG': return Info;\n    case 'INFO': return CheckCircle;\n    case 'WARN': return AlertTriangle;\n    case 'ERROR': return XCircle;\n    case 'FATAL': return AlertCircle;\n    default: return Info;\n  }\n};\n\nfunction LogEntryCard({ \n  log, \n  onViewDetails, \n  showFullDetails = false \n}: LogEntryCardProps) {\n  const LevelIcon = getLevelIcon(log.level);\n  const logDate = new Date(log.timestamp);\n\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <LevelIcon className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {log.message}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getLevelColor(log.level)}>\n            {log.level}\n          </Badge>\n          <Badge className={getSourceColor(log.source)}>\n            {log.source}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {log.details && (\n          <p className=\"text-sm text-text-secondary mb-3\">\n            {log.details}\n          </p>\n        )}\n        \n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Timestamp:</span>\n            <span className=\"text-text-primary font-mono\">{logDate.toLocaleString()}</span>\n          </div>\n          {log.userId && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">User ID:</span>\n              <span className=\"text-text-primary\">{log.userId}</span>\n            </div>\n          )}\n          {log.requestId && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">Request ID:</span>\n              <span className=\"text-text-primary font-mono\">{log.requestId}</span>\n            </div>\n          )}\n          {log.ipAddress && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">IP Address:</span>\n              <span className=\"text-text-primary font-mono\">{log.ipAddress}</span>\n            </div>\n          )}\n        </div>\n\n        {showFullDetails && log.stackTrace && (\n          <div className=\"mb-3\">\n            <p className=\"text-xs text-text-tertiary mb-1\">Stack Trace:</p>\n            <pre className=\"text-xs text-text-primary bg-bg-secondary p-2 rounded overflow-auto max-h-32\">\n              {log.stackTrace}\n            </pre>\n          </div>\n        )}\n\n        {showFullDetails && log.metadata && (\n          <div className=\"mb-3\">\n            <p className=\"text-xs text-text-tertiary mb-1\">Metadata:</p>\n            <pre className=\"text-xs text-text-primary bg-bg-secondary p-2 rounded overflow-auto max-h-32\">\n              {JSON.stringify(log.metadata, null, 2)}\n            </pre>\n          </div>\n        )}\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4 text-xs text-text-tertiary\">\n            {log.userId && (\n              <div className=\"flex items-center space-x-1\">\n                <User className=\"h-3 w-3\" />\n                <span>{log.userId}</span>\n              </div>\n            )}\n            {log.ipAddress && (\n              <div className=\"flex items-center space-x-1\">\n                <Globe className=\"h-3 w-3\" />\n                <span>{log.ipAddress}</span>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(log)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Eye className=\"h-3 w-3\" />\n                <span>View Details</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { LogEntryCard };\nexport default LogEntryCard;\n","import React from 'react';\nimport { LogEntryCard, SystemLog } from './LogEntryCard';\n\ninterface LogsListProps {\n  logs: SystemLog[];\n  onViewLogDetails?: (log: SystemLog) => void;\n  loading?: boolean;\n  maxItems?: number;\n  showFullDetails?: boolean;\n}\n\nexport default function LogsList({ \n  logs, \n  onViewLogDetails, \n  loading = false,\n  maxItems = 50,\n  showFullDetails = false\n}: LogsListProps) {\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        {Array.from({ length: 5 }).map((_, index) => (\n          <div key={index} className=\"h-32 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  const displayLogs = logs.slice(0, maxItems);\n\n  if (logs.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No logs found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {displayLogs.map((log) => (\n        <LogEntryCard\n          key={log.id}\n          log={log}\n          onViewDetails={onViewLogDetails}\n          showFullDetails={showFullDetails}\n        />\n      ))}\n      \n      {logs.length > maxItems && (\n        <div className=\"text-center py-4\">\n          <p className=\"text-sm text-text-tertiary\">\n            Showing {maxItems} of {logs.length} logs\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Input } from '../../../ui/input';\nimport { Select } from '../../../ui/select';\nimport { Button } from '../../../ui/button';\nimport { Search, Filter, RefreshCw, Download } from 'lucide-react';\n\ninterface LogFiltersProps {\n  searchTerm: string;\n  onSearchChange: (value: string) => void;\n  levelFilter: string;\n  onLevelFilterChange: (value: string) => void;\n  sourceFilter: string;\n  onSourceFilterChange: (value: string) => void;\n  dateFilter: string;\n  onDateFilterChange: (value: string) => void;\n  onRefresh?: () => void;\n  onExport?: () => void;\n  loading?: boolean;\n}\n\nconst levelOptions = [\n  { value: 'all', label: 'All Levels' },\n  { value: 'DEBUG', label: 'Debug' },\n  { value: 'INFO', label: 'Info' },\n  { value: 'WARN', label: 'Warning' },\n  { value: 'ERROR', label: 'Error' },\n  { value: 'FATAL', label: 'Fatal' }\n];\n\nconst sourceOptions = [\n  { value: 'all', label: 'All Sources' },\n  { value: 'API', label: 'API' },\n  { value: 'DATABASE', label: 'Database' },\n  { value: 'AUTH', label: 'Authentication' },\n  { value: 'PAYMENT', label: 'Payment' },\n  { value: 'SYSTEM', label: 'System' },\n  { value: 'CLIENT', label: 'Client' }\n];\n\nconst dateOptions = [\n  { value: 'all', label: 'All Time' },\n  { value: 'today', label: 'Today' },\n  { value: 'yesterday', label: 'Yesterday' },\n  { value: 'week', label: 'This Week' },\n  { value: 'month', label: 'This Month' }\n];\n\nexport default function LogFilters({\n  searchTerm,\n  onSearchChange,\n  levelFilter,\n  onLevelFilterChange,\n  sourceFilter,\n  onSourceFilterChange,\n  dateFilter,\n  onDateFilterChange,\n  onRefresh,\n  onExport,\n  loading = false\n}: LogFiltersProps) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Filter className=\"w-4 h-4\" />\n          Log Filters\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\n          <div>\n            <label className=\"text-sm font-medium text-text-secondary mb-1 block\">\n              Search\n            </label>\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-text-tertiary\" />\n              <Input\n                placeholder=\"Search logs...\"\n                value={searchTerm}\n                onChange={(e) => onSearchChange(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"text-sm font-medium text-text-secondary mb-1 block\">\n              Level\n            </label>\n            <Select value={levelFilter} onValueChange={onLevelFilterChange}>\n              {levelOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </Select>\n          </div>\n          \n          <div>\n            <label className=\"text-sm font-medium text-text-secondary mb-1 block\">\n              Source\n            </label>\n            <Select value={sourceFilter} onValueChange={onSourceFilterChange}>\n              {sourceOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </Select>\n          </div>\n          \n          <div>\n            <label className=\"text-sm font-medium text-text-secondary mb-1 block\">\n              Date Range\n            </label>\n            <Select value={dateFilter} onValueChange={onDateFilterChange}>\n              {dateOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </Select>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            {onRefresh && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={onRefresh}\n                disabled={loading}\n                className=\"flex items-center space-x-1\"\n              >\n                <RefreshCw className={`h-3 w-3 ${loading ? 'animate-spin' : ''}`} />\n                <span>Refresh</span>\n              </Button>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            {onExport && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={onExport}\n                className=\"flex items-center space-x-1\"\n              >\n                <Download className=\"h-3 w-3\" />\n                <span>Export</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { Button } from '../../../ui/button';\nimport { \n  Shield, \n  Eye, \n  Clock,\n  User,\n  Globe,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Info\n} from 'lucide-react';\n\nexport interface SecurityEvent {\n  id: string;\n  type: 'LOGIN_ATTEMPT' | 'FAILED_LOGIN' | 'SUSPICIOUS_ACTIVITY' | 'DATA_BREACH' | 'UNAUTHORIZED_ACCESS';\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\n  timestamp: string;\n  source: string;\n  description: string;\n  details: string;\n  ipAddress?: string;\n  userAgent?: string;\n  userId?: string;\n  resolved: boolean;\n  resolvedAt?: string;\n  resolvedBy?: string;\n}\n\ninterface SecurityEventCardProps {\n  event: SecurityEvent;\n  onViewDetails?: (event: SecurityEvent) => void;\n  onResolve?: (eventId: string) => void;\n  showFullDetails?: boolean;\n}\n\nconst getTypeColor = (type: string) => {\n  switch (type) {\n    case 'LOGIN_ATTEMPT': return 'bg-blue-100 text-blue-800';\n    case 'FAILED_LOGIN': return 'bg-yellow-100 text-yellow-800';\n    case 'SUSPICIOUS_ACTIVITY': return 'bg-orange-100 text-orange-800';\n    case 'DATA_BREACH': return 'bg-red-100 text-red-800';\n    case 'UNAUTHORIZED_ACCESS': return 'bg-red-200 text-red-900';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getSeverityColor = (severity: string) => {\n  switch (severity) {\n    case 'LOW': return 'bg-green-100 text-green-800';\n    case 'MEDIUM': return 'bg-yellow-100 text-yellow-800';\n    case 'HIGH': return 'bg-orange-100 text-orange-800';\n    case 'CRITICAL': return 'bg-red-100 text-red-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getSeverityIcon = (severity: string) => {\n  switch (severity) {\n    case 'LOW': return Info;\n    case 'MEDIUM': return AlertTriangle;\n    case 'HIGH': return AlertTriangle;\n    case 'CRITICAL': return XCircle;\n    default: return Info;\n  }\n};\n\nconst getTypeIcon = (type: string) => {\n  switch (type) {\n    case 'LOGIN_ATTEMPT': return CheckCircle;\n    case 'FAILED_LOGIN': return XCircle;\n    case 'SUSPICIOUS_ACTIVITY': return AlertTriangle;\n    case 'DATA_BREACH': return XCircle;\n    case 'UNAUTHORIZED_ACCESS': return XCircle;\n    default: return Shield;\n  }\n};\n\nfunction SecurityEventCard({ \n  event, \n  onViewDetails, \n  onResolve,\n  showFullDetails = false \n}: SecurityEventCardProps) {\n  const SeverityIcon = getSeverityIcon(event.severity);\n  const TypeIcon = getTypeIcon(event.type);\n  const eventDate = new Date(event.timestamp);\n\n  return (\n    <Card className={`hover:shadow-md transition-shadow ${event.severity === 'CRITICAL' ? 'border-l-4 border-l-red-500' : ''}`}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center space-x-2\">\n          <TypeIcon className=\"h-4 w-4 text-text-tertiary\" />\n          <CardTitle className=\"text-sm font-medium text-text-primary\">\n            {event.description}\n          </CardTitle>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge className={getTypeColor(event.type)}>\n            {event.type.replace('_', ' ')}\n          </Badge>\n          <Badge className={getSeverityColor(event.severity)}>\n            {event.severity}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <p className=\"text-sm text-text-secondary mb-3\">\n          {event.details}\n        </p>\n        \n        <div className=\"space-y-2 mb-3\">\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Timestamp:</span>\n            <span className=\"text-text-primary font-mono\">{eventDate.toLocaleString()}</span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs\">\n            <span className=\"text-text-tertiary\">Source:</span>\n            <span className=\"text-text-primary\">{event.source}</span>\n          </div>\n          {event.userId && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">User ID:</span>\n              <span className=\"text-text-primary\">{event.userId}</span>\n            </div>\n          )}\n          {event.ipAddress && (\n            <div className=\"flex items-center justify-between text-xs\">\n              <span className=\"text-text-tertiary\">IP Address:</span>\n              <span className=\"text-text-primary font-mono\">{event.ipAddress}</span>\n            </div>\n          )}\n        </div>\n\n        {showFullDetails && event.userAgent && (\n          <div className=\"mb-3\">\n            <p className=\"text-xs text-text-tertiary mb-1\">User Agent:</p>\n            <p className=\"text-xs text-text-primary break-all\">{event.userAgent}</p>\n          </div>\n        )}\n\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <SeverityIcon className=\"h-4 w-4 text-text-tertiary\" />\n            {event.resolved ? (\n              <div className=\"flex items-center space-x-1 text-green-600\">\n                <CheckCircle className=\"h-3 w-3\" />\n                <span className=\"text-xs\">Resolved</span>\n              </div>\n            ) : (\n              <div className=\"flex items-center space-x-1 text-orange-600\">\n                <AlertTriangle className=\"h-3 w-3\" />\n                <span className=\"text-xs\">Active</span>\n              </div>\n            )}\n          </div>\n          \n          {event.resolved && event.resolvedAt && (\n            <span className=\"text-xs text-text-tertiary\">\n              Resolved: {new Date(event.resolvedAt).toLocaleDateString()}\n            </span>\n          )}\n        </div>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4 text-xs text-text-tertiary\">\n            {event.userId && (\n              <div className=\"flex items-center space-x-1\">\n                <User className=\"h-3 w-3\" />\n                <span>{event.userId}</span>\n              </div>\n            )}\n            {event.ipAddress && (\n              <div className=\"flex items-center space-x-1\">\n                <Globe className=\"h-3 w-3\" />\n                <span>{event.ipAddress}</span>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {onViewDetails && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onViewDetails(event)}\n                className=\"flex items-center space-x-1\"\n              >\n                <Eye className=\"h-3 w-3\" />\n                <span>View Details</span>\n              </Button>\n            )}\n            \n            {!event.resolved && onResolve && (\n              <Button\n                size=\"sm\"\n                onClick={() => onResolve(event.id)}\n                className=\"flex items-center space-x-1\"\n              >\n                <CheckCircle className=\"h-3 w-3\" />\n                <span>Resolve</span>\n              </Button>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { SecurityEventCard };\nexport default SecurityEventCard;\n","import React from 'react';\nimport { SecurityEventCard, SecurityEvent } from './SecurityEventCard';\n\ninterface SecurityEventsListProps {\n  events: SecurityEvent[];\n  onViewEventDetails?: (event: SecurityEvent) => void;\n  onResolveEvent?: (eventId: string) => void;\n  loading?: boolean;\n  maxItems?: number;\n  showFullDetails?: boolean;\n}\n\nexport default function SecurityEventsList({ \n  events, \n  onViewEventDetails, \n  onResolveEvent,\n  loading = false,\n  maxItems = 20,\n  showFullDetails = false\n}: SecurityEventsListProps) {\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        {Array.from({ length: 5 }).map((_, index) => (\n          <div key={index} className=\"h-40 bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  const displayEvents = events.slice(0, maxItems);\n  const activeEvents = displayEvents.filter(event => !event.resolved);\n  const resolvedEvents = displayEvents.filter(event => event.resolved);\n\n  if (events.length === 0) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-text-tertiary\">No security events found</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Active Events */}\n      {activeEvents.length > 0 && (\n        <div>\n          <h3 className=\"text-sm font-medium text-text-primary mb-3\">\n            Active Security Events ({activeEvents.length})\n          </h3>\n          <div className=\"space-y-4\">\n            {activeEvents.map((event) => (\n              <SecurityEventCard\n                key={event.id}\n                event={event}\n                onViewDetails={onViewEventDetails}\n                onResolve={onResolveEvent}\n                showFullDetails={showFullDetails}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Resolved Events */}\n      {resolvedEvents.length > 0 && (\n        <div>\n          <h3 className=\"text-sm font-medium text-text-primary mb-3\">\n            Recently Resolved ({resolvedEvents.length})\n          </h3>\n          <div className=\"space-y-4\">\n            {resolvedEvents.map((event) => (\n              <SecurityEventCard\n                key={event.id}\n                event={event}\n                onViewDetails={onViewEventDetails}\n                showFullDetails={showFullDetails}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {events.length > maxItems && (\n        <div className=\"text-center py-4\">\n          <p className=\"text-sm text-text-tertiary\">\n            Showing {maxItems} of {events.length} security events\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../ui/card';\nimport { Badge } from '../../../ui/badge';\nimport { \n  Shield, \n  AlertTriangle, \n  CheckCircle, \n  XCircle,\n  TrendingUp,\n  TrendingDown,\n  Activity\n} from 'lucide-react';\n\ninterface SecurityMetric {\n  title: string;\n  value: number | string;\n  change?: {\n    value: number;\n    isPositive: boolean;\n    period: string;\n  };\n  icon: React.ComponentType<{ className?: string }>;\n  color: string;\n  bgColor: string;\n}\n\ninterface SecurityMetricsCardProps {\n  metrics: SecurityMetric[];\n}\n\nexport default function SecurityMetricsCard({ metrics }: SecurityMetricsCardProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n      {metrics.map((metric, index) => {\n        const Icon = metric.icon;\n        const ChangeIcon = metric.change?.isPositive ? TrendingUp : TrendingDown;\n        \n        return (\n          <Card key={index} className=\"hover:shadow-md transition-shadow\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-text-secondary\">\n                {metric.title}\n              </CardTitle>\n              <div className={`p-2 rounded-lg ${metric.bgColor}`}>\n                <Icon className={`h-4 w-4 ${metric.color}`} />\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-2xl font-bold text-text-primary\">\n                  {metric.value}\n                </div>\n                {metric.change && (\n                  <div className=\"flex items-center space-x-1\">\n                    <ChangeIcon className={`h-3 w-3 ${\n                      metric.change.isPositive ? 'text-green-500' : 'text-red-500'\n                    }`} />\n                    <span className={`text-xs ${\n                      metric.change.isPositive ? 'text-green-500' : 'text-red-500'\n                    }`}>\n                      {metric.change.isPositive ? '+' : ''}{metric.change.value}%\n                    </span>\n                  </div>\n                )}\n              </div>\n              {metric.change && (\n                <p className=\"text-xs text-text-tertiary mt-1\">\n                  {metric.change.period}\n                </p>\n              )}\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Button,\n  Input,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Badge,\n  useToast,  } from '@rentalshop/ui';\nimport { AuditLogDetail } from './AuditLogDetail';\nimport { \n  Search,\n  Filter,\n  RefreshCw,\n  Eye,\n  User,\n  Calendar,\n  Activity,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Info,\n  Clock,\n  MapPin,\n  Monitor\n} from 'lucide-react';\n\n// Types\ninterface AuditLog {\n  id: number;\n  action: string;\n  entityType: string;\n  entityId: string;\n  entityName?: string;\n  user?: {\n    id: number;\n    email: string;\n    name: string;\n    role: string;\n  };\n  merchant?: {\n    id: number;\n    name: string;\n  };\n  outlet?: {\n    id: number;\n    name: string;\n  };\n  oldValues?: Record<string, any>;\n  newValues?: Record<string, any>;\n  changes?: Record<string, { old: any; new: any }>;\n  ipAddress?: string;\n  userAgent?: string;\n  sessionId?: string;\n  requestId?: string;\n  metadata?: Record<string, any>;\n  severity: 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL';\n  category: 'GENERAL' | 'SECURITY' | 'BUSINESS' | 'SYSTEM' | 'COMPLIANCE';\n  description?: string;\n  createdAt: string;\n}\n\ninterface AuditLogFilter {\n  action?: string;\n  entityType?: string;\n  entityId?: string;\n  userId?: string;\n  merchantId?: string;\n  outletId?: string;\n  severity?: string;\n  category?: string;\n  startDate?: string;\n  endDate?: string;\n  limit?: number;\n  offset?: number;\n}\n\ninterface AuditLogStats {\n  totalLogs: number;\n  logsByAction: Record<string, number>;\n  logsByEntity: Record<string, number>;\n  logsBySeverity: Record<string, number>;\n  logsByCategory: Record<string, number>;\n  recentActivity: number;\n}\n\n// This component now expects data to be passed as props\n// API calls should be made in the parent component using @rentalshop/utils\n\n// Severity badge component\nfunction SeverityBadge({ severity }: { severity: string }) {\n  const getSeverityStyle = (severity: string) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'ERROR':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'WARNING':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200 dark:bg-yellow-900/20 dark:text-yellow-400 dark:border-yellow-800';\n      case 'INFO':\n        return 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:border-blue-800';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n    }\n  };\n\n  const getSeverityIcon = (severity: string) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return <XCircle className=\"w-3 h-3\" />;\n      case 'ERROR':\n        return <XCircle className=\"w-3 h-3\" />;\n      case 'WARNING':\n        return <AlertTriangle className=\"w-3 h-3\" />;\n      case 'INFO':\n        return <Info className=\"w-3 h-3\" />;\n      default:\n        return <Info className=\"w-3 h-3\" />;\n    }\n  };\n\n  return (\n    <Badge className={`inline-flex items-center gap-1 ${getSeverityStyle(severity)}`}>\n      {getSeverityIcon(severity)}\n      {severity}\n    </Badge>\n  );\n}\n\n// Action badge component\nfunction ActionBadge({ action }: { action: string }) {\n  const getActionStyle = (action: string) => {\n    switch (action) {\n      case 'CREATE':\n        return 'bg-green-100 text-green-800 border-green-200 dark:bg-green-900/20 dark:text-green-400 dark:border-green-800';\n      case 'UPDATE':\n        return 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:border-blue-800';\n      case 'DELETE':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'LOGIN':\n        return 'bg-purple-100 text-purple-800 border-purple-200 dark:bg-purple-900/20 dark:text-purple-400 dark:border-purple-800';\n      case 'LOGOUT':\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n      case 'VIEW':\n        return 'bg-indigo-100 text-indigo-800 border-indigo-200 dark:bg-indigo-900/20 dark:text-indigo-400 dark:border-indigo-800';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n    }\n  };\n\n  return (\n    <Badge className={getActionStyle(action)}>\n      {action}\n    </Badge>\n  );\n}\n\n// Audit log row component\ninterface AuditLogRowProps {\n  log: AuditLog;\n  onViewDetails: (log: AuditLog) => void;\n}\n\nfunction AuditLogRow({ log, onViewDetails }: AuditLogRowProps) {\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <Card className=\"mb-2 hover:shadow-sm transition-shadow\">\n      <CardContent className=\"p-3\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n            <ActionBadge action={log.action} />\n            <SeverityBadge severity={log.severity} />\n            \n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center gap-2 text-sm\">\n                <span className=\"font-medium text-text-primary truncate\">\n                  {log.entityType}: {log.entityName || log.entityId}\n                </span>\n                {log.user && (\n                  <span className=\"text-text-tertiary text-xs\">\n                    by {log.user.name}\n                  </span>\n                )}\n              </div>\n              \n              {log.description && (\n                <p className=\"text-text-secondary text-xs truncate mt-1\">\n                  {log.description}\n                </p>\n              )}\n            </div>\n            \n            <div className=\"text-xs text-text-tertiary whitespace-nowrap\">\n              {formatDate(log.createdAt)}\n            </div>\n          </div>\n          \n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => onViewDetails(log)}\n            className=\"ml-3 flex-shrink-0\"\n          >\n            <Eye className=\"w-4 h-4 mr-2\" />\n            View Details\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Filter component\ninterface AuditLogFilterProps {\n  filter: AuditLogFilter;\n  onFilterChange: (filter: AuditLogFilter) => void;\n  onReset: () => void;\n}\n\nfunction AuditLogFilter({ filter, onFilterChange, onReset }: AuditLogFilterProps) {\n  const handleInputChange = (field: keyof AuditLogFilter, value: string) => {\n    onFilterChange({\n      ...filter,\n      [field]: value === 'all' || value === '' ? undefined : value\n    });\n  };\n\n  return (\n    <Card className=\"mb-6\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Filter className=\"w-5 h-5\" />\n          Filter Audit Logs\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Action</label>\n            <Select\n              value={filter.action || 'all'}\n              onValueChange={(value) => handleInputChange('action', value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"All actions\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All actions</SelectItem>\n                <SelectItem value=\"CREATE\">CREATE</SelectItem>\n                <SelectItem value=\"UPDATE\">UPDATE</SelectItem>\n                <SelectItem value=\"DELETE\">DELETE</SelectItem>\n                <SelectItem value=\"LOGIN\">LOGIN</SelectItem>\n                <SelectItem value=\"LOGOUT\">LOGOUT</SelectItem>\n                <SelectItem value=\"VIEW\">VIEW</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Entity Type</label>\n            <Select\n              value={filter.entityType || 'all'}\n              onValueChange={(value) => handleInputChange('entityType', value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"All entities\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All entities</SelectItem>\n                <SelectItem value=\"User\">User</SelectItem>\n                <SelectItem value=\"Product\">Product</SelectItem>\n                <SelectItem value=\"Order\">Order</SelectItem>\n                <SelectItem value=\"Customer\">Customer</SelectItem>\n                <SelectItem value=\"Setting\">Setting</SelectItem>\n                <SelectItem value=\"Merchant\">Merchant</SelectItem>\n                <SelectItem value=\"Outlet\">Outlet</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Severity</label>\n            <Select\n              value={filter.severity || 'all'}\n              onValueChange={(value) => handleInputChange('severity', value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"All severities\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All severities</SelectItem>\n                <SelectItem value=\"INFO\">INFO</SelectItem>\n                <SelectItem value=\"WARNING\">WARNING</SelectItem>\n                <SelectItem value=\"ERROR\">ERROR</SelectItem>\n                <SelectItem value=\"CRITICAL\">CRITICAL</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Category</label>\n            <Select\n              value={filter.category || 'all'}\n              onValueChange={(value) => handleInputChange('category', value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"All categories\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All categories</SelectItem>\n                <SelectItem value=\"GENERAL\">GENERAL</SelectItem>\n                <SelectItem value=\"SECURITY\">SECURITY</SelectItem>\n                <SelectItem value=\"BUSINESS\">BUSINESS</SelectItem>\n                <SelectItem value=\"SYSTEM\">SYSTEM</SelectItem>\n                <SelectItem value=\"COMPLIANCE\">COMPLIANCE</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Start Date</label>\n            <Input\n              type=\"datetime-local\"\n              value={filter.startDate || ''}\n              onChange={(e) => handleInputChange('startDate', e.target.value)}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">End Date</label>\n            <Input\n              type=\"datetime-local\"\n              value={filter.endDate || ''}\n              onChange={(e) => handleInputChange('endDate', e.target.value)}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">Entity ID</label>\n            <Input\n              placeholder=\"Enter entity ID\"\n              value={filter.entityId || ''}\n              onChange={(e) => handleInputChange('entityId', e.target.value)}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">User ID</label>\n            <Input\n              placeholder=\"Enter user ID\"\n              value={filter.userId || ''}\n              onChange={(e) => handleInputChange('userId', e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"flex items-center justify-between mt-4\">\n          <Button variant=\"outline\" onClick={onReset}>\n            Reset Filters\n          </Button>\n          <div className=\"text-sm text-text-secondary\">\n            Showing {filter?.limit || 50} results per page\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Main audit log viewer component\ninterface AuditLogViewerProps {\n  className?: string;\n  logs?: AuditLog[];\n  stats?: AuditLogStats | null;\n  loading?: boolean;\n  filter?: AuditLogFilter;\n  pagination?: {\n    total: number;\n    limit: number;\n    offset: number;\n    hasMore: boolean;\n  };\n  onFilterChange?: (filter: AuditLogFilter) => void;\n  onFilterReset?: () => void;\n  onLoadMore?: () => void;\n  onRefresh?: () => void;\n  onViewDetails?: (log: AuditLog) => void;\n}\n\nexport function AuditLogViewer({ \n  className = '',\n  logs = [],\n  stats = null,\n  loading = false,\n  filter = { limit: 50, offset: 0 },\n  pagination = { total: 0, limit: 50, offset: 0, hasMore: false },\n  onFilterChange = () => {},\n  onFilterReset = () => {},\n  onLoadMore = () => {},\n  onRefresh = () => {},\n  onViewDetails = () => {}\n}: AuditLogViewerProps) {\n  const [selectedLog, setSelectedLog] = useState<AuditLog | null>(null);\n  const [isDetailOpen, setIsDetailOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState<'logs' | 'stats'>('logs');\n\n  // Handle view details\n  const handleViewDetails = (log: AuditLog) => {\n    setSelectedLog(log);\n    setIsDetailOpen(true);\n    onViewDetails(log);\n  };\n\n  const handleCloseDetail = () => {\n    setSelectedLog(null);\n    setIsDetailOpen(false);\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-text-primary mb-2\">Audit Logs</h1>\n        <p className=\"text-text-secondary\">\n          Track all system changes, user actions, and security events.\n        </p>\n      </div>\n\n      <div className=\"space-y-6\">\n        <div className=\"flex space-x-2 border-b\">\n          <Button\n            variant={activeTab === 'logs' ? 'default' : 'ghost'}\n            onClick={() => setActiveTab('logs')}\n          >\n            Audit Logs\n          </Button>\n          <Button\n            variant={activeTab === 'stats' ? 'default' : 'ghost'}\n            onClick={() => setActiveTab('stats')}\n          >\n            Statistics\n          </Button>\n        </div>\n\n        {activeTab === 'logs' && (\n          <div className=\"space-y-6\">\n          <AuditLogFilter\n            filter={filter}\n            onFilterChange={onFilterChange}\n            onReset={onFilterReset}\n          />\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-between\">\n                <span>Audit Logs ({pagination?.total || 0} total)</span>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={onRefresh}\n                      disabled={loading}\n                    >\n                      <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n                      Refresh\n                    </Button>\n                </div>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {loading ? (\n                <div className=\"text-center py-8\">\n                  <RefreshCw className=\"w-6 h-6 animate-spin mx-auto mb-2\" />\n                  <p className=\"text-text-secondary\">Loading audit logs...</p>\n                </div>\n                              ) : !logs || logs.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <p className=\"text-text-secondary\">No audit logs found.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {logs.map(log => (\n                    <AuditLogRow\n                      key={log.id}\n                      log={log}\n                      onViewDetails={handleViewDetails}\n                    />\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n          </div>\n        )}\n\n        {activeTab === 'stats' && (\n          <div className=\"space-y-6\">\n          {stats ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-text-secondary\">Total Logs</p>\n                      <p className=\"text-2xl font-bold text-text-primary\">{stats.totalLogs}</p>\n                    </div>\n                    <Activity className=\"w-8 h-8 text-blue-500\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-text-secondary\">Recent Activity</p>\n                      <p className=\"text-2xl font-bold text-text-primary\">{stats.recentActivity}</p>\n                      <p className=\"text-xs text-text-tertiary\">Last 24 hours</p>\n                    </div>\n                    <Clock className=\"w-8 h-8 text-green-500\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-text-secondary\">Security Events</p>\n                      <p className=\"text-2xl font-bold text-text-primary\">\n                        {stats.logsByCategory.SECURITY || 0}\n                      </p>\n                    </div>\n                    <AlertTriangle className=\"w-8 h-8 text-red-500\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-text-secondary\">Business Events</p>\n                      <p className=\"text-2xl font-bold text-text-primary\">\n                        {stats.logsByCategory.BUSINESS || 0}\n                      </p>\n                    </div>\n                    <Activity className=\"w-8 h-8 text-purple-500\" />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <p className=\"text-text-secondary\">No statistics available.</p>\n            </div>\n          )}\n          </div>\n        )}\n      </div>\n\n      {/* Audit Log Detail Modal */}\n      {selectedLog && (\n        <AuditLogDetail\n          log={selectedLog}\n          isOpen={isDetailOpen}\n          onClose={handleCloseDetail}\n        />\n      )}\n    </div>\n  );\n}\n\n// Simple wrapper component for backward compatibility\nexport function AuditLogViewerSimple({ className = '' }: { className?: string }) {\n  return (\n    <AuditLogViewer \n      className={className}\n      logs={[]}\n      stats={null}\n      loading={false}\n      filter={{ limit: 50, offset: 0 }}\n      pagination={{ total: 0, limit: 50, offset: 0, hasMore: false }}\n      onFilterChange={() => {}}\n      onFilterReset={() => {}}\n      onLoadMore={() => {}}\n      onRefresh={() => {}}\n      onViewDetails={() => {}}\n    />\n  );\n}","import React, { useState } from 'react';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  Button,\n  Badge,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle\n} from '@rentalshop/ui';\nimport { \n  User,\n  Calendar,\n  MapPin,\n  Monitor,\n  Activity,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Info,\n  Clock,\n  Eye,\n  EyeOff\n} from 'lucide-react';\n\n// Types\ninterface AuditLog {\n  id: number;\n  action: string;\n  entityType: string;\n  entityId: string;\n  entityName?: string;\n  user?: {\n    id: number;\n    email: string;\n    name: string;\n    role: string;\n  };\n  merchant?: {\n    id: number;\n    name: string;\n  };\n  outlet?: {\n    id: number;\n    name: string;\n  };\n  oldValues?: Record<string, any>;\n  newValues?: Record<string, any>;\n  changes?: Record<string, { old: any; new: any }>;\n  ipAddress?: string;\n  userAgent?: string;\n  sessionId?: string;\n  requestId?: string;\n  metadata?: Record<string, any>;\n  severity: 'INFO' | 'WARNING' | 'ERROR' | 'CRITICAL';\n  category: 'GENERAL' | 'SECURITY' | 'BUSINESS' | 'SYSTEM' | 'COMPLIANCE';\n  description?: string;\n  createdAt: string;\n}\n\ninterface AuditLogDetailProps {\n  log: AuditLog | null;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\n// Severity badge component\nfunction SeverityBadge({ severity }: { severity: string }) {\n  const getSeverityStyle = (severity: string) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'ERROR':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'WARNING':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200 dark:bg-yellow-900/20 dark:text-yellow-400 dark:border-yellow-800';\n      case 'INFO':\n        return 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:border-blue-800';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n    }\n  };\n\n  const getSeverityIcon = (severity: string) => {\n    switch (severity) {\n      case 'CRITICAL':\n        return <XCircle className=\"w-3 h-3\" />;\n      case 'ERROR':\n        return <XCircle className=\"w-3 h-3\" />;\n      case 'WARNING':\n        return <AlertTriangle className=\"w-3 h-3\" />;\n      case 'INFO':\n        return <Info className=\"w-3 h-3\" />;\n      default:\n        return <Info className=\"w-3 h-3\" />;\n    }\n  };\n\n  return (\n    <Badge className={`inline-flex items-center gap-1 ${getSeverityStyle(severity)}`}>\n      {getSeverityIcon(severity)}\n      {severity}\n    </Badge>\n  );\n}\n\n// Action badge component\nfunction ActionBadge({ action }: { action: string }) {\n  const getActionStyle = (action: string) => {\n    switch (action) {\n      case 'CREATE':\n        return 'bg-green-100 text-green-800 border-green-200 dark:bg-green-900/20 dark:text-green-400 dark:border-green-800';\n      case 'UPDATE':\n        return 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-400 dark:border-blue-800';\n      case 'DELETE':\n        return 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/20 dark:text-red-400 dark:border-red-800';\n      case 'LOGIN':\n        return 'bg-purple-100 text-purple-800 border-purple-200 dark:bg-purple-900/20 dark:text-purple-400 dark:border-purple-800';\n      case 'LOGOUT':\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n      case 'VIEW':\n        return 'bg-indigo-100 text-indigo-800 border-indigo-200 dark:bg-indigo-900/20 dark:text-indigo-400 dark:border-indigo-800';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200 dark:bg-gray-900/20 dark:text-gray-400 dark:border-gray-800';\n    }\n  };\n\n  return (\n    <Badge className={getActionStyle(action)}>\n      {action}\n    </Badge>\n  );\n}\n\n// JSON viewer component\nfunction JsonViewer({ data, title }: { data: any; title: string }) {\n  const [isExpanded, setIsExpanded] = React.useState(false);\n\n  if (!data) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-sm\">{title}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-text-secondary text-sm\">No data available</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-sm flex items-center justify-between\">\n          {title}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsExpanded(!isExpanded)}\n          >\n            {isExpanded ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n            {isExpanded ? 'Collapse' : 'Expand'}\n          </Button>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <pre className={`text-xs font-mono bg-bg-secondary p-3 rounded-lg overflow-auto ${\n          isExpanded ? 'max-h-96' : 'max-h-32'\n        }`}>\n          {JSON.stringify(data, null, 2)}\n        </pre>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Changes viewer component\nfunction ChangesViewer({ changes }: { changes?: Record<string, { old: any; new: any }> }) {\n  if (!changes || Object.keys(changes).length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-sm\">Changes</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"text-text-secondary text-sm\">No changes detected</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-sm\">Changes ({Object.keys(changes).length} fields)</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          {Object.entries(changes).map(([field, change]) => (\n            <div key={field} className=\"border rounded-lg p-3\">\n              <div className=\"font-medium text-sm mb-2\">{field}</div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <div>\n                  <div className=\"text-xs text-text-secondary mb-1\">Old Value</div>\n                  <div className=\"text-xs font-mono bg-red-50 dark:bg-red-900/20 p-2 rounded\">\n                    {change.old === null ? 'null' : JSON.stringify(change.old)}\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-xs text-text-secondary mb-1\">New Value</div>\n                  <div className=\"text-xs font-mono bg-green-50 dark:bg-green-900/20 p-2 rounded\">\n                    {change.new === null ? 'null' : JSON.stringify(change.new)}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Main audit log detail component\nexport function AuditLogDetail({ log, isOpen, onClose }: AuditLogDetailProps) {\n  const [activeTab, setActiveTab] = useState<'overview' | 'changes' | 'context' | 'raw'>('overview');\n  \n  if (!log) return null;\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      timeZoneName: 'short'\n    });\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'SECURITY':\n        return <AlertTriangle className=\"w-4 h-4\" />;\n      case 'BUSINESS':\n        return <Activity className=\"w-4 h-4\" />;\n      case 'SYSTEM':\n        return <Monitor className=\"w-4 h-4\" />;\n      case 'COMPLIANCE':\n        return <CheckCircle className=\"w-4 h-4\" />;\n      default:\n        return <Info className=\"w-4 h-4\" />;\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Audit Log Details</DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Header Information */}\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <ActionBadge action={log.action} />\n                <SeverityBadge severity={log.severity} />\n                <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                  {getCategoryIcon(log.category)}\n                  {log.category}\n                </Badge>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <h3 className=\"text-lg font-semibold\">\n                  {log.entityType}: {log.entityName || log.entityId}\n                </h3>\n                {log.description && (\n                  <p className=\"text-text-secondary\">{log.description}</p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Tab navigation */}\n          <div className=\"space-y-4\">\n            <div className=\"flex space-x-2 border-b\">\n              <Button\n                variant={activeTab === 'overview' ? 'default' : 'ghost'}\n                onClick={() => setActiveTab('overview')}\n                size=\"sm\"\n              >\n                Overview\n              </Button>\n              <Button\n                variant={activeTab === 'changes' ? 'default' : 'ghost'}\n                onClick={() => setActiveTab('changes')}\n                size=\"sm\"\n              >\n                Changes\n              </Button>\n              <Button\n                variant={activeTab === 'context' ? 'default' : 'ghost'}\n                onClick={() => setActiveTab('context')}\n                size=\"sm\"\n              >\n                Context\n              </Button>\n              <Button\n                variant={activeTab === 'raw' ? 'default' : 'ghost'}\n                onClick={() => setActiveTab('raw')}\n                size=\"sm\"\n              >\n                Raw Data\n              </Button>\n            </div>\n\n            {activeTab === 'overview' && (\n              <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm flex items-center gap-2\">\n                      <User className=\"w-4 h-4\" />\n                      User Information\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-2\">\n                    {log.user ? (\n                      <>\n                        <div>\n                          <div className=\"text-xs text-text-secondary\">Name</div>\n                          <div className=\"text-sm font-medium\">{log.user.name}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-xs text-text-secondary\">Email</div>\n                          <div className=\"text-sm\">{log.user.email}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-xs text-text-secondary\">Role</div>\n                          <div className=\"text-sm\">{log.user.role}</div>\n                        </div>\n                      </>\n                    ) : (\n                      <p className=\"text-text-secondary text-sm\">No user information available</p>\n                    )}\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm flex items-center gap-2\">\n                      <Calendar className=\"w-4 h-4\" />\n                      Event Information\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-2\">\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">Timestamp</div>\n                      <div className=\"text-sm\">{formatDate(log.createdAt)}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">Action</div>\n                      <div className=\"text-sm\">{log.action}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">Entity Type</div>\n                      <div className=\"text-sm\">{log.entityType}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">Entity ID</div>\n                      <div className=\"text-sm font-mono\">{log.entityId}</div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n\n              {log.merchant && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">Merchant Context</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      <div>\n                        <div className=\"text-xs text-text-secondary\">Merchant Name</div>\n                        <div className=\"text-sm font-medium\">{log.merchant.name}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-xs text-text-secondary\">Merchant ID</div>\n                        <div className=\"text-sm font-mono\">{log.merchant.id}</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {log.outlet && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">Outlet Context</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      <div>\n                        <div className=\"text-xs text-text-secondary\">Outlet Name</div>\n                        <div className=\"text-sm font-medium\">{log.outlet.name}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-xs text-text-secondary\">Outlet ID</div>\n                        <div className=\"text-sm font-mono\">{log.outlet.id}</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n              </div>\n            )}\n\n            {activeTab === 'changes' && (\n              <div className=\"space-y-4\">\n                <ChangesViewer changes={log.changes} />\n              </div>\n            )}\n\n            {activeTab === 'context' && (\n              <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm flex items-center gap-2\">\n                      <MapPin className=\"w-4 h-4\" />\n                      Network Information\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-2\">\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">IP Address</div>\n                      <div className=\"text-sm font-mono\">{log.ipAddress || 'Unknown'}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">Session ID</div>\n                      <div className=\"text-sm font-mono\">{log.sessionId || 'Unknown'}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-xs text-text-secondary\">Request ID</div>\n                      <div className=\"text-sm font-mono\">{log.requestId || 'Unknown'}</div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm flex items-center gap-2\">\n                      <Monitor className=\"w-4 h-4\" />\n                      User Agent\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-xs font-mono bg-bg-secondary p-2 rounded break-all\">\n                      {log.userAgent || 'Unknown'}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              </div>\n            )}\n\n            {activeTab === 'raw' && (\n              <div className=\"space-y-4\">\n                <JsonViewer data={log.oldValues} title=\"Old Values\" />\n                <JsonViewer data={log.newValues} title=\"New Values\" />\n                <JsonViewer data={log.metadata} title=\"Metadata\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  Badge,\n  Input,\n  Label,\n  Textarea,\n  Skeleton,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  ConfirmationDialog\n} from '@rentalshop/ui';\nimport { useFormattedFullDate } from '@rentalshop/utils';\nimport { \n  Info, \n  Package, \n  DollarSign, \n  Settings, \n  Edit3, \n  Save, \n  X,\n  Calendar,\n  User,\n  MapPin,\n  Phone,\n  Mail,\n  RotateCcw,\n  Printer,\n  Edit,\n  Calculator\n} from 'lucide-react';\nimport { useFormatCurrency, useToast } from '@rentalshop/ui';\nimport { ORDER_STATUS_COLORS, ORDER_TYPE_COLORS, ORDER_TYPES, ORDER_STATUSES } from '@rentalshop/constants';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport type { OrderWithDetails } from '@rentalshop/types';\nimport { CollectionReturnModal } from './components/CollectionReturnModal';\nimport { OrderInformation } from './components/OrderInformation';\nimport { OrderProductsList } from './components/OrderProductsList';\nimport { OrderSummaryCard } from './components/OrderSummaryCard';\nimport { OrderSettingsCard } from './components/OrderSettingsCard';\nimport { OrderActionsSection } from './components/OrderActionsSection';\nimport { calculateCollectionTotal } from './utils';\nimport { ordersApi } from '@rentalshop/utils';\n\n// Define OrderDetailProps interface locally\ninterface OrderDetailProps {\n  order: OrderWithDetails;\n  onEdit?: (order: OrderWithDetails) => void;\n  onCancel?: (order: OrderWithDetails) => void;\n  onStatusChange?: (orderId: number, status: string) => void;\n  onPickup?: (orderId: number, data: any) => void;\n  onReturn?: (orderId: number, data: any) => void;\n  onSaveSettings?: (settings: SettingsForm) => Promise<void>;\n  loading?: boolean;\n  showActions?: boolean;\n}\n\n// Define SettingsForm interface locally\ninterface SettingsForm {\n  damageFee: number;\n  securityDeposit: number;\n  collateralType: string;\n  collateralDetails: string;\n  notes: string;\n}\n\n// Skeleton component for OrderDetail\nconst OrderDetailSkeleton: React.FC = () => {\n  return (\n    <div className=\"space-y-4\">\n        {/* Header Skeleton */}\n        <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-2\">\n              <Skeleton className=\"h-8 w-64\" />\n              <Skeleton className=\"h-4 w-48\" />\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex items-center gap-2\">\n                <Skeleton className=\"h-4 w-20\" />\n                <Skeleton className=\"h-6 w-16\" />\n              </div>\n              <Skeleton className=\"h-6 w-24\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content Grid Skeleton */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n          {/* Left Column Skeleton */}\n          <div className=\"lg:col-span-2 space-y-4\">\n            {/* Order Information Card Skeleton */}\n            <div>\n              <Card className=\"flex flex-col\">\n              <CardHeader>\n                <div className=\"flex items-center gap-2\">\n                  <Skeleton className=\"h-5 w-5\" />\n                  <Skeleton className=\"h-6 w-32\" />\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4 flex-1\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {/* Left Column Skeleton */}\n                  <div className=\"space-y-3\">\n                    {Array.from({ length: 3 }).map((_, index) => (\n                      <div key={index} className=\"flex justify-between\">\n                        <Skeleton className=\"h-4 w-24\" />\n                        <Skeleton className=\"h-4 w-32\" />\n                      </div>\n                    ))}\n                  </div>\n                  {/* Right Column Skeleton */}\n                  <div className=\"space-y-3\">\n                    {Array.from({ length: 4 }).map((_, index) => (\n                      <div key={index} className=\"flex justify-between\">\n                        <Skeleton className=\"h-4 w-24\" />\n                        <Skeleton className=\"h-4 w-32\" />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"flex-1\"></div>\n              </CardContent>\n              </Card>\n            </div>\n\n            {/* Products Card Skeleton */}\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center gap-2\">\n                  <Skeleton className=\"h-5 w-5\" />\n                  <Skeleton className=\"h-6 w-20\" />\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {Array.from({ length: 3 }).map((_, index) => (\n                    <div key={index} className=\"p-3 bg-gray-50 rounded-lg border border-gray-100\">\n                      <div className=\"flex items-start gap-3\">\n                        <Skeleton className=\"w-12 h-12 rounded-lg\" />\n                        <div className=\"flex-1 space-y-2\">\n                          <Skeleton className=\"h-4 w-32\" />\n                          <Skeleton className=\"h-3 w-20\" />\n                          <Skeleton className=\"h-3 w-24\" />\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Right Column Skeleton */}\n          <div className=\"space-y-4\">\n            {/* Order Summary Card Skeleton */}\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center gap-2\">\n                  <Skeleton className=\"h-5 w-5\" />\n                  <Skeleton className=\"h-6 w-28\" />\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                {Array.from({ length: 4 }).map((_, index) => (\n                  <div key={index} className=\"flex justify-between text-sm\">\n                    <Skeleton className=\"h-4 w-20\" />\n                    <Skeleton className=\"h-4 w-16\" />\n                  </div>\n                ))}\n                <div className=\"pt-2 border-t border-gray-200\">\n                  <div className=\"flex justify-between\">\n                    <Skeleton className=\"h-5 w-24\" />\n                    <Skeleton className=\"h-5 w-20\" />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Order Settings Card Skeleton */}\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center gap-2\">\n                  <Skeleton className=\"h-5 w-5\" />\n                  <Skeleton className=\"h-6 w-28\" />\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-3\">\n                  {Array.from({ length: 4 }).map((_, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <Skeleton className=\"h-4 w-24\" />\n                      <Skeleton className=\"h-4 w-32\" />\n                    </div>\n                  ))}\n                </div>\n                <Skeleton className=\"h-10 w-full\" />\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Action Buttons Skeleton */}\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 mt-6\">\n          <div className=\"space-y-4\">\n            <Skeleton className=\"h-6 w-32\" />\n            <div className=\"flex justify-between items-center\">\n              <Skeleton className=\"h-10 w-32\" />\n              <div className=\"flex gap-3\">\n                {Array.from({ length: 4 }).map((_, index) => (\n                  <Skeleton key={index} className=\"h-10 w-24\" />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n};\n\nexport const OrderDetail: React.FC<OrderDetailProps> = ({\n  order,\n  onEdit,\n  onCancel,\n  onStatusChange,\n  onPickup,\n  onReturn,\n  onSaveSettings,\n  loading = false,\n  showActions = true\n}) => {\n  // Use formatCurrency hook - automatically uses merchant's currency\n  const formatMoney = useFormatCurrency();\n  const { toastSuccess, toastError, toastInfo, removeToast } = useToast();\n  const t = useOrderTranslations();\n  \n  // Predefined collateral types\n  const COLLATERAL_TYPES = [\n    'ID Card',\n    'Driver License', \n    'Passport',\n    'Other'\n  ];\n  \n  const [settingsForm, setSettingsForm] = useState<SettingsForm>({\n    damageFee: order.damageFee || 0,\n    securityDeposit: order.securityDeposit || 0,\n    collateralType: order.collateralType || 'Other',\n    collateralDetails: order.collateralDetails || '',\n    notes: order.notes || ''\n  });\n  const [isEditingSettings, setIsEditingSettings] = useState(false);\n  const [tempSettings, setTempSettings] = useState<SettingsForm>(settingsForm);\n  const [isSavingSettings, setIsSavingSettings] = useState(false);\n  \n  // Collection and Return Modal state\n  const [isCollectionModalOpen, setIsCollectionModalOpen] = useState(false);\n  const [isReturnModalOpen, setIsReturnModalOpen] = useState(false);\n  \n  // Loading states for actions\n  const [isPickupLoading, setIsPickupLoading] = useState(false);\n  const [isReturnLoading, setIsReturnLoading] = useState(false);\n  const [isCancelLoading, setIsCancelLoading] = useState(false);\n  \n  // Confirmation dialog state\n  const [showCancelConfirmDialog, setShowCancelConfirmDialog] = useState(false);\n  \n  // Update settings when order changes\n  useEffect(() => {\n    if (order) {\n      const newSettings: SettingsForm = {\n        damageFee: order.damageFee || 0,\n        securityDeposit: order.securityDeposit || 0,\n        collateralType: order.collateralType || 'Other',\n        collateralDetails: order.collateralDetails || '',\n        notes: order.notes || ''\n      };\n      setSettingsForm(newSettings);\n      setTempSettings(newSettings);\n    }\n  }, [order]);\n  \n  // Show skeleton loading when loading is true\n  if (loading) {\n    return <OrderDetailSkeleton />;\n  }\n\n  // ============================================================================\n  // ORDER TYPE & STATUS LOGIC\n  // ============================================================================\n  \n  // Determine if order is RENT type\n  const isRentOrder = order.orderType === 'RENT';\n  \n  // Determine if order is SALE type\n  const isSaleOrder = order.orderType === 'SALE';\n  \n  // Get current order status\n  const currentStatus = order.status;\n  \n  // ============================================================================\n  // BUTTON VISIBILITY LOGIC\n  // ============================================================================\n  \n  // Cancel button visibility\n  const canCancel = onCancel && \n    currentStatus !== 'PICKUPED' && \n    currentStatus !== 'RETURNED' && \n    currentStatus !== 'CANCELLED';\n  \n  // Edit button visibility - based on order type and status\n  const canEdit = onEdit && (\n    // RENT orders: can only edit when RESERVED\n    (isRentOrder && currentStatus === 'RESERVED') ||\n    // SALE orders: can only edit when COMPLETED\n    (isSaleOrder && currentStatus === 'COMPLETED')\n  );\n  \n  // Pickup button visibility (RENT orders only)\n  const canPickup = onPickup && \n    isRentOrder && \n    currentStatus === 'RESERVED';\n  \n  // Return button visibility (RENT orders only)\n  const canReturn = onReturn && \n    isRentOrder && \n    currentStatus === 'PICKUPED';\n  \n  // Print button visibility (always visible)\n  const canPrint = true;\n  \n  // ============================================================================\n  // FIELD ENABLEMENT LOGIC\n  // ============================================================================\n  \n  // Damage fee enablement logic\n  const isDamageFeeEnabled = () => {\n    if (isSaleOrder) return false; // SALE orders don't have damage fees\n    \n    if (isRentOrder) {\n      switch (currentStatus) {\n        case 'RESERVED':\n          return false; // Disable for reserved orders\n        case 'PICKUPED':\n        case 'RETURNED':\n          return true; // Enable for picked up and returned orders\n        default:\n          return false;\n      }\n    }\n    \n    return false;\n  };\n  \n  // Security deposit enablement logic\n  const isSecurityDepositEnabled = () => {\n    if (isSaleOrder) return false; // SALE orders don't have security deposits\n    \n    if (isRentOrder) {\n      switch (currentStatus) {\n        case 'RESERVED':\n        case 'PICKUPED':\n        case 'RETURNED':\n          return true; // Always enable for RENT orders\n        default:\n          return false;\n      }\n    }\n    \n    return false;\n  };\n  \n  // Collateral type enablement logic\n  const isCollateralTypeEnabled = () => {\n    if (isSaleOrder) return false; // SALE orders don't have collateral\n    \n    if (isRentOrder) {\n      switch (currentStatus) {\n        case 'RESERVED':\n        case 'PICKUPED':\n        case 'RETURNED':\n          return true; // Always enable for RENT orders\n        default:\n          return false;\n      }\n    }\n    \n    return false;\n  };\n  \n  // Collateral details enablement logic\n  const isCollateralDetailsEnabled = () => {\n    if (isSaleOrder) return false; // SALE orders don't have collateral\n    \n    if (isRentOrder) {\n      switch (currentStatus) {\n        case 'RESERVED':\n        case 'PICKUPED':\n        case 'RETURNED':\n          return true; // Always enable for RENT orders\n        default:\n          return false;\n      }\n    }\n    \n    return false;\n  };\n\n  const handleSettingsChange = (updates: Partial<SettingsForm>) => {\n    setTempSettings(prev => ({ ...prev, ...updates }));\n    \n    // No toast for every change - only show feedback when saving\n  };\n\n  const handleSaveSettings = async () => {\n    if (onSaveSettings) {\n      setIsSavingSettings(true);\n      toastInfo('Saving...', 'Please wait while settings are being saved');\n      \n      try {\n        await onSaveSettings(tempSettings);\n        toastSuccess(t('detail.settingsSaved'), t('detail.settingsSavedMessage'));\n        setSettingsForm(tempSettings);\n        setIsEditingSettings(false);\n      } catch (error) {\n        toastError(t('detail.saveFailed'), t('detail.saveFailedMessage'));\n      } finally {\n        setIsSavingSettings(false);\n      }\n    } else {\n      // No API call, just local update\n      setSettingsForm(tempSettings);\n      setIsEditingSettings(false);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setTempSettings(settingsForm);\n    setIsEditingSettings(false);\n    // No toast for cancelling edit - this is just a UI state change\n  };\n\n  const handlePrintOrder = () => {\n    try {\n      window.print();\n      // No toast for print - this is a browser action, not an API call\n    } catch (error) {\n      toastError('Print Error', 'Failed to start printing. Please try again.');\n    }\n  };\n\n  const handlePickupOrder = async () => {\n    try {\n      setIsPickupLoading(true);\n      await ordersApi.pickupOrder(order.id);\n      toastSuccess('Pickup Successful', 'Order pickup has been processed.');\n      onStatusChange && onStatusChange(order.id, 'PICKUPED');\n      setIsCollectionModalOpen(false); // Close modal after successful pickup\n      \n      // Trigger page refresh to update order data\n      if (typeof window !== 'undefined') {\n        window.location.reload();\n      }\n    } catch (error) {\n      toastError('Pickup Failed', 'Failed to process order pickup. Please try again.');\n    } finally {\n      setIsPickupLoading(false);\n    }\n  };\n\n  const handleReturnOrder = async () => {\n    try {\n      setIsReturnLoading(true);\n      await ordersApi.returnOrder(order.id);\n      toastSuccess('Return Successful', 'Order return has been processed.');\n      onStatusChange && onStatusChange(order.id, 'RETURNED');\n      setIsReturnModalOpen(false); // Close modal after successful return\n      \n      // Trigger page refresh to update order data\n      if (typeof window !== 'undefined') {\n        window.location.reload();\n      }\n    } catch (error) {\n      toastError('Return Failed', 'Failed to process order return. Please try again.');\n    } finally {\n      setIsReturnLoading(false);\n    }\n  };\n\n  const handleCancelOrderClick = () => {\n    setShowCancelConfirmDialog(true);\n  };\n\n  const handleCancelOrder = async () => {\n    try {\n      setIsCancelLoading(true);\n      await ordersApi.cancelOrder(order.id);\n      toastSuccess('Cancellation Successful', 'Order has been cancelled.');\n      onStatusChange && onStatusChange(order.id, 'CANCELLED');\n      \n      // Trigger page refresh to update order data\n      if (typeof window !== 'undefined') {\n        window.location.reload();\n      }\n    } catch (error) {\n      toastError('Cancellation Failed', 'Failed to cancel order. Please try again.');\n    } finally {\n      setIsCancelLoading(false);\n      setShowCancelConfirmDialog(false);\n    }\n  };\n\n  // Open collection modal for pickup\n  const handlePickupClick = () => {\n    setIsCollectionModalOpen(true);\n  };\n\n  // Open return modal for return\n  const handleReturnClick = () => {\n    setIsReturnModalOpen(true);\n  };\n\n  const handleEditOrder = () => {\n    if (onEdit) {\n      try {\n        onEdit(order);\n        // No toast for entering edit mode - this is just a UI state change\n      } catch (error) {\n        toastError('Edit Failed', 'Failed to enter edit mode. Please try again.');\n      }\n    }\n  };\n\n  // Enhanced edit function that includes settings\n  const handleEditOrderWithSettings = () => {\n    if (onEdit) {\n      try {\n        // Create an enhanced order object with current settings\n        const enhancedOrder = {\n          ...order,\n          damageFee: tempSettings.damageFee,\n          securityDeposit: tempSettings.securityDeposit,\n          collateralType: tempSettings.collateralType,\n          collateralDetails: tempSettings.collateralDetails,\n          notes: tempSettings.notes\n        };\n        \n        onEdit(enhancedOrder);\n        // No toast for entering edit mode - this is just a UI state change\n      } catch (error) {\n        toastError('Edit Failed', 'Failed to enter edit mode. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n        {/* Header */}\n        <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                {t('orderDetails')} #{order.orderNumber}\n              </h1>\n              <p className=\"text-sm text-gray-600\">\n                {t('detail.viewAndManage')}\n              </p>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              {/* Order Type Badge */}\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-600\">{t('orderType.label')}:</span>\n                <Badge \n                  className={ORDER_TYPE_COLORS[order.orderType as keyof typeof ORDER_TYPE_COLORS]}\n                >\n                  {t(`orderType.${order.orderType}`)}\n                </Badge>\n              </div>\n              {/* Order Status */}\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-600\">{t('status.label')}:</span>\n                <Badge \n                  className={ORDER_STATUS_COLORS[order.status as keyof typeof ORDER_STATUS_COLORS] || 'bg-gray-100 text-gray-800'}\n                >\n                  {t(`status.${order.status}`)}\n                </Badge>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 min-h-screen\">\n          {/* Left Column - Order Information & Products (2/3 width) */}\n          <div className=\"lg:col-span-2 space-y-4\">\n            {/* Order Information Card - Using new component with translations */}\n            <OrderInformation order={order} />\n\n            {/* Products List - Using new component with translations */}\n            <OrderProductsList order={order} />\n          </div>\n\n                    {/* Right Column - Order Summary & Settings */}\n          <div className=\"space-y-6\">\n            {/* Order Summary Card - Using new component with translations */}\n            <OrderSummaryCard \n              order={order} \n              tempSettings={tempSettings}\n              calculateCollectionTotal={calculateCollectionTotal}\n            />\n\n            {/* Order Settings Card - Using new component with translations */}\n            <OrderSettingsCard\n              order={order}\n              settingsForm={settingsForm}\n              tempSettings={tempSettings}\n              isEditingSettings={isEditingSettings}\n              isSavingSettings={isSavingSettings}\n              loading={loading}\n              isDamageFeeEnabled={isDamageFeeEnabled}\n              isSecurityDepositEnabled={isSecurityDepositEnabled}\n              isCollateralTypeEnabled={isCollateralTypeEnabled}\n              isCollateralDetailsEnabled={isCollateralDetailsEnabled}\n              onSettingsChange={handleSettingsChange}\n              onSaveSettings={handleSaveSettings}\n              onCancelEdit={handleCancelEdit}\n              onStartEdit={() => setIsEditingSettings(true)}\n              collateralTypes={COLLATERAL_TYPES}\n                      />\n                    </div>\n                    </div>\n\n        {/* Action Buttons - Using new component with translations */}\n        {showActions && (\n          <OrderActionsSection\n            order={order}\n            canEdit={canEdit}\n            canCancel={canCancel}\n            canPickup={canPickup}\n            canReturn={canReturn}\n            canPrint={canPrint}\n            isRentOrder={isRentOrder}\n            isSaleOrder={isSaleOrder}\n            isPickupLoading={isPickupLoading}\n            isReturnLoading={isReturnLoading}\n            isCancelLoading={isCancelLoading}\n            onEdit={handleEditOrderWithSettings}\n            onCancel={handleCancelOrderClick}\n            onPickup={handlePickupClick}\n            onReturn={handleReturnClick}\n            onPrint={handlePrintOrder}\n          />\n        )}\n      \n      {/* Collection Modal */}\n      <CollectionReturnModal\n        isOpen={isCollectionModalOpen}\n        onClose={() => setIsCollectionModalOpen(false)}\n        order={order}\n        settingsForm={tempSettings}\n        mode=\"collection\"\n        onConfirmPickup={handlePickupOrder}\n      />\n\n      {/* Return Modal */}\n      <CollectionReturnModal\n        isOpen={isReturnModalOpen}\n        onClose={() => setIsReturnModalOpen(false)}\n        order={order}\n        settingsForm={tempSettings}\n        mode=\"return\"\n        onConfirmReturn={handleReturnOrder}\n      />\n\n      {/* Cancel Order Confirmation Dialog */}\n      <ConfirmationDialog\n        open={showCancelConfirmDialog}\n        onOpenChange={setShowCancelConfirmDialog}\n        type=\"danger\"\n        title={t('detail.cancelOrderTitle')}\n        description={t('detail.cancelOrderMessage')}\n        confirmText={t('actions.cancelOrder')}\n        cancelText={t('detail.keepOrder')}\n        onConfirm={handleCancelOrder}\n        onCancel={() => setShowCancelConfirmDialog(false)}\n        isLoading={isCancelLoading}\n      />\n    </div>\n  );\n};","import React from 'react';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle,\n  DialogFooter,\n  Button,\n  Badge\n} from '@rentalshop/ui';\nimport { Calculator, Info, DollarSign, Package, RotateCcw } from 'lucide-react';\nimport { formatCurrency } from '@rentalshop/ui';\nimport { OrderWithDetails } from '@rentalshop/types';\n\n// Define SettingsForm interface locally\ninterface SettingsForm {\n  damageFee: number;\n  securityDeposit: number;\n  collateralType: string;\n  collateralDetails: string;\n  notes: string;\n}\nimport { \n  getCollectionDetails, \n  getReturnDetails \n} from '../utils';\n\ninterface CollectionReturnModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  order: OrderWithDetails;\n  settingsForm: SettingsForm;\n  mode: 'collection' | 'return';\n  onConfirmPickup?: () => void;\n  onConfirmReturn?: () => void;\n}\n\nexport const CollectionReturnModal: React.FC<CollectionReturnModalProps> = ({\n  isOpen,\n  onClose,\n  order,\n  settingsForm,\n  mode,\n  onConfirmPickup,\n  onConfirmReturn\n}) => {\n  const isCollectionMode = mode === 'collection';\n  const isReturnMode = mode === 'return';\n  \n  // Get the appropriate details based on mode\n  const details = isCollectionMode \n    ? getCollectionDetails(order, settingsForm)\n    : getReturnDetails(order, settingsForm);\n\n  const getModalTitle = () => {\n    if (isCollectionMode) {\n      return 'Pickup Order - Collection Details';\n    }\n    return 'Return Order - Return Details';\n  };\n\n  const getModalIcon = () => {\n    if (isCollectionMode) {\n      return <Package className=\"w-5 h-5 text-green-600\" />;\n    }\n    return <RotateCcw className=\"w-5 h-5 text-blue-700\" />;\n  };\n\n  const getActionButtonText = () => {\n    if (isCollectionMode) {\n      return 'Confirm Pickup & Collect';\n    }\n    return 'Confirm Return & Process Refund';\n  };\n\n  const handleConfirm = async () => {\n    try {\n      if (isCollectionMode && onConfirmPickup) {\n        await onConfirmPickup();\n      } else if (isReturnMode && onConfirmReturn) {\n        await onConfirmReturn();\n      }\n      onClose();\n    } catch (error) {\n      // Error handling is done in the parent component\n      console.error('Error in modal confirmation:', error);\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            {getModalIcon()}\n            <span className=\"font-semibold\">{getModalTitle()}</span>\n          </DialogTitle>\n        </DialogHeader>\n        \n        <div className=\"space-y-6\">\n          {/* Order Info Header */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-700\">Order #{order.orderNumber}</span>\n              <Badge variant={order.orderType === 'RENT' ? 'default' : 'secondary'}>\n                {order.orderType}\n              </Badge>\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              Customer: {order.customer?.firstName} {order.customer?.lastName}\n            </div>\n            <div className=\"text-sm text-gray-600\">\n              Status: {order.status}\n            </div>\n          </div>\n\n          {/* Details Section */}\n          <div className=\"space-y-4\">\n            {/* Clean Collection/Return Summary */}\n            <div className=\"text-center\">\n                          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n              {isCollectionMode ? 'Collect from Customer' : 'Return to Customer'}\n            </h3>\n              \n              {/* Simple one-line summary */}\n              {details.calculation && details.calculation.length > 0 && (\n                <div className=\"text-xl font-bold text-green-700 bg-green-50 rounded-lg p-4 border border-green-200\">\n                  <span>\n                    {details.calculation.find(item => (item as any).isTotal)?.value !== undefined \n                      ? formatCurrency(details.calculation.find(item => (item as any).isTotal)?.value || 0)\n                      : '0.00'\n                    }\n                  </span>\n                  {/* Only show collateral if it actually exists and has a value */}\n                  {settingsForm.collateralType && \n                   settingsForm.collateralType !== 'Other' && \n                   settingsForm.collateralType.trim() !== '' && (\n                    <span className=\"ml-2 text-lg font-normal text-blue-700\">\n                      + {settingsForm.collateralType}\n                    </span>\n                  )}\n                  {settingsForm.collateralType === 'Other' && \n                   settingsForm.collateralDetails && \n                   settingsForm.collateralDetails.trim() !== '' && (\n                    <span className=\"ml-2 text-lg font-normal text-blue-700\">\n                      + {settingsForm.collateralDetails}\n                    </span>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <DialogFooter className=\"flex gap-3\">\n          <Button variant=\"outline\" onClick={onClose}>\n            Close\n          </Button>\n          {details.calculation && details.calculation.length > 0 && (\n            <Button onClick={handleConfirm}>\n              {getActionButtonText()}\n            </Button>\n          )}\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { OrderWithDetails } from '@rentalshop/types';\nimport * as CONSTANTS from '@rentalshop/constants';\n\n// Define SettingsForm interface locally\ninterface SettingsForm {\n  damageFee: number;\n  securityDeposit: number;\n  collateralType: string;\n  collateralDetails: string;\n  notes: string;\n}\n\n// Type definitions for calculation items\ninterface CalculationItem {\n  label: string;\n  value: number;\n  isSubtotal?: boolean;\n  isTotal?: boolean;\n  isReturn?: boolean;\n  isNegative?: boolean;\n  isCollateral?: boolean;\n  collateralInfo?: string;\n}\n\n// Centralized calculation function to ensure consistency\nexport const calculateCollectionTotal = (order: OrderWithDetails, settingsForm: SettingsForm): number => {\n  if (order.orderType === 'SALE') {\n    return order.totalAmount;\n  }\n  \n  // For RENT orders: remaining amount + security deposit\n  const remainingAmount = order.totalAmount - order.depositAmount;\n  const securityDeposit = settingsForm.securityDeposit || 0;\n  return remainingAmount + securityDeposit;\n};\n\nexport const getStatusColor = (status: string): string => {\n  return CONSTANTS.ORDER_STATUS_COLORS[status as keyof typeof CONSTANTS.ORDER_STATUS_COLORS] || 'bg-gray-100 text-gray-800';\n};\n\nexport const getOrderTypeColor = (type: string): string => {\n  const typeColors: Record<string, string> = {\n    'RENT': 'bg-blue-100 text-blue-800',\n    'SALE': 'bg-green-100 text-green-800',\n    'RENT_TO_OWN': 'bg-purple-100 text-purple-800'\n  };\n  return typeColors[type] || 'bg-gray-100 text-gray-800';\n};\n\n// Collection calculation - USER'S ORIGINAL LOGIC\nexport const calculateCollectionAmount = (order: OrderWithDetails, settingsForm: SettingsForm): number => {\n  return calculateCollectionTotal(order, settingsForm);\n};\n\n// Collection title - USER'S ORIGINAL LOGIC\nexport const getCollectionTitle = (order: OrderWithDetails): string => {\n  if (order.orderType === 'SALE') {\n    return 'Collect from customer';\n  }\n  \n  switch (order.status) {\n    case 'RESERVED':\n      return 'Collect from customer';\n    case 'PICKUPED':\n      return 'No collection needed';\n    case 'RETURNED':\n      return 'No collection needed';\n    default:\n      return 'No collection';\n  }\n};\n\n// Return amount calculation - USER'S ORIGINAL LOGIC\nexport const calculateReturnAmount = (order: OrderWithDetails, settingsForm: SettingsForm): number => {\n  if (order.orderType === 'SALE') {\n    // Sale orders don't have returns\n    return 0;\n  }\n  \n  // For rent orders - USER'S ORIGINAL LOGIC\n  switch (order.status) {\n    case 'PICKUPED':\n      // When returning, calculate what to return to customer\n      const securityDeposit = settingsForm.securityDeposit || 0;\n      const damageFee = settingsForm.damageFee || 0;\n      return securityDeposit - damageFee; // Return security deposit minus damage fee\n      \n    case 'RETURNED':\n      // Already returned\n      return 0;\n      \n    default:\n      return 0;\n  }\n};\n\n// Return title - USER'S ORIGINAL LOGIC\nexport const getReturnTitle = (order: OrderWithDetails): string => {\n  if (order.orderType === 'SALE') {\n    return 'No return needed';\n  }\n  \n  switch (order.status) {\n    case 'PICKUPED':\n      return 'Return to customer';\n    case 'RETURNED':\n      return 'Already returned';\n    default:\n      return 'No return needed';\n  }\n};\n\n// Collection details - Focus on WHAT TO COLLECT and HOW IT'S CALCULATED\nexport const getCollectionDetails = (order: OrderWithDetails, settingsForm: SettingsForm) => {\n  if (order.orderType === 'SALE') {\n    return {\n      title: 'Sale Order - What to Collect',\n      description: 'Collect the full sale amount',\n      calculation: [\n        {\n          label: 'Collect from customer',\n          value: order.totalAmount,\n          isTotal: true\n        }\n      ]\n    };\n  }\n  \n  // For rent orders - Show calculation breakdown\n  switch (order.status) {\n    case 'RESERVED':\n      const remainingAmount = order.totalAmount - order.depositAmount;\n      const securityDeposit = settingsForm.securityDeposit || 0;\n      const collectionTotal = calculateCollectionTotal(order, settingsForm);\n      const hasCollateral = settingsForm.collateralType && settingsForm.collateralType.trim() !== '';\n      \n      return {\n        title: 'Rental Order - What to Collect',\n        description: hasCollateral \n          ? 'Collect remaining amount, security deposit, and collateral'\n          : 'Collect remaining amount plus security deposit',\n        calculation: [\n          {\n            label: 'Total amount',\n            value: order.totalAmount\n          },\n          {\n            label: 'Deposit paid',\n            value: -order.depositAmount,\n            isNegative: true\n          },\n          {\n            label: 'Security deposit',\n            value: securityDeposit\n          },\n          ...(hasCollateral ? [\n            {\n              label: 'Collateral type',\n              value: 0,\n              isCollateral: true,\n              collateralInfo: `${settingsForm.collateralType}${settingsForm.collateralDetails ? ` - ${settingsForm.collateralDetails}` : ''}`\n            }\n          ] : []),\n          {\n            label: 'Collect from customer',\n            value: collectionTotal,\n            isTotal: true,\n            isCollateral: hasCollateral\n          }\n        ]\n      };\n      \n    case 'PICKUPED':\n      return {\n        title: 'No Collection Needed',\n        description: 'Order is already picked up',\n        calculation: []\n      };\n      \n    case 'RETURNED':\n      return {\n        title: 'Order Completed',\n        description: 'Order has been returned',\n        calculation: []\n      };\n      \n    default:\n      return {\n        title: 'No Collection',\n        description: 'No collection required',\n        calculation: []\n      };\n  }\n};\n\n// Return details - Focus on WHAT TO RETURN and HOW IT'S CALCULATED\nexport const getReturnDetails = (order: OrderWithDetails, settingsForm: SettingsForm) => {\n  if (order.orderType === 'SALE') {\n    return {\n      title: 'No Return Needed',\n      description: 'Sale orders do not require returns',\n      calculation: []\n    };\n  }\n  \n  // For rent orders - Show calculation breakdown\n  switch (order.status) {\n    case 'PICKUPED':\n      const securityDeposit = settingsForm.securityDeposit || 0;\n      const damageFee = settingsForm.damageFee || 0;\n      const returnAmount = securityDeposit - damageFee;\n      \n      return {\n        title: 'Rental Order - What to Return',\n        description: 'Return security deposit minus damage fees',\n        calculation: [\n          {\n            label: 'Security deposit',\n            value: securityDeposit\n          },\n          {\n            label: 'Damage fee',\n            value: -damageFee,\n            isNegative: true\n          },\n          {\n            label: 'Return to customer',\n            value: returnAmount,\n            isTotal: true,\n            isReturn: true\n          }\n        ]\n      };\n      \n    case 'RETURNED':\n      return {\n        title: 'Already Returned',\n        description: 'Order has already been returned',\n        calculation: []\n      };\n      \n    default:\n      return {\n        title: 'No Return Needed',\n        description: 'No return required',\n        calculation: []\n      };\n  }\n};","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../../ui/card';\nimport { Info } from 'lucide-react';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { useFormattedFullDate } from '@rentalshop/utils';\nimport type { OrderWithDetails } from '@rentalshop/types';\n\ninterface OrderInformationProps {\n  order: OrderWithDetails;\n}\n\nexport const OrderInformation: React.FC<OrderInformationProps> = ({ order }) => {\n  const t = useOrderTranslations();\n\n  return (\n    <Card className=\"flex flex-col\">\n      <CardHeader>\n        <CardTitle className=\"text-lg flex items-center gap-2\">\n          <Info className=\"w-5 h-5\" />\n          {t('detail.orderInformation')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4 flex-1\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* Left Column */}\n          <div className=\"space-y-3\">\n            {/* Customer Name */}\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">{t('customer.name')}:</span>\n              <span className=\"text-sm font-medium\">\n                {order.customer?.firstName\n                  ? `${order.customer.firstName} ${order.customer.lastName || ''}`.trim()\n                  : order.customerName || t('customer.noCustomer')}\n              </span>\n            </div>\n\n            {/* Customer Phone */}\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">{t('customer.phone')}:</span>\n              <span className=\"text-sm font-medium\">\n                {order.customer?.phone || order.customerPhone || 'N/A'}\n              </span>\n            </div>\n\n            {/* Seller */}\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">{t('detail.seller')}:</span>\n              <span className=\"text-sm font-medium\">\n                {order.outlet?.name || (order as any).outletName || 'N/A'}\n              </span>\n            </div>\n          </div>\n\n          {/* Right Column */}\n          <div className=\"space-y-3\">\n            {order.orderType === 'RENT' && (\n              <>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">{t('dates.pickupDate')}:</span>\n                  <span className=\"text-sm font-medium\">\n                    {order.pickupPlanAt ? useFormattedFullDate(order.pickupPlanAt) : 'N/A'}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">{t('dates.returnDate')}:</span>\n                  <span className=\"text-sm font-medium\">\n                    {order.returnPlanAt ? useFormattedFullDate(order.returnPlanAt) : 'N/A'}\n                  </span>\n                </div>\n              </>\n            )}\n            \n            {/* Order Date */}\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">{t('detail.orderDate')}:</span>\n              <span className=\"text-sm font-medium\">\n                {order.createdAt ? useFormattedFullDate(order.createdAt) : 'N/A'}\n              </span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Spacer to fill remaining height */}\n        <div className=\"flex-1\"></div>\n      </CardContent>\n    </Card>\n  );\n};\n\n","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../../ui/card';\nimport { Package } from 'lucide-react';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { useFormatCurrency } from '@rentalshop/ui';\nimport type { OrderWithDetails } from '@rentalshop/types';\n\ninterface OrderProductsListProps {\n  order: OrderWithDetails;\n}\n\nexport const OrderProductsList: React.FC<OrderProductsListProps> = ({ order }) => {\n  const t = useOrderTranslations();\n  const formatMoney = useFormatCurrency();\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg flex items-center gap-2\">\n          <Package className=\"w-5 h-5\" />\n          {t('detail.products')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        {order.orderItems.length === 0 ? (\n          <div className=\"text-center py-4 text-gray-500\">\n            <Package className=\"w-8 h-8 mx-auto mb-2 text-gray-300\" />\n            <p className=\"text-sm\">{t('items.noItems')}</p>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {order.orderItems.map((item, index) => (\n              <div key={index} className=\"p-3 bg-gray-50 rounded-lg border border-gray-100\">\n                <div className=\"flex items-start gap-3\">\n                  {/* Product Image */}\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center border border-gray-200\">\n                      <Package className=\"w-6 h-6 text-gray-400\" />\n                    </div>\n                  </div>\n                  \n                  {/* Product Info */}\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"font-medium text-gray-900 text-sm\">\n                      {item.product?.name || 'Unknown Product'}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      {item.product?.name ? `${t('items.product')}: ${item.product.name}` : 'Unknown Product'}\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      {formatMoney(item.unitPrice)} x {item.quantity}\n                    </div>\n                    {(item as any).notes && (\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        {t('detail.notes')}: {(item as any).notes || t('detail.noNotes')}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '../../../ui/card';\nimport { DollarSign } from 'lucide-react';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { useFormatCurrency } from '@rentalshop/ui';\nimport type { OrderWithDetails } from '@rentalshop/types';\n\ninterface SettingsForm {\n  damageFee: number;\n  securityDeposit: number;\n  collateralType: string;\n  collateralDetails: string;\n  notes: string;\n}\n\ninterface OrderSummaryCardProps {\n  order: OrderWithDetails;\n  tempSettings: SettingsForm;\n  calculateCollectionTotal: (order: OrderWithDetails, settings: SettingsForm) => number;\n}\n\nexport const OrderSummaryCard: React.FC<OrderSummaryCardProps> = ({ \n  order, \n  tempSettings,\n  calculateCollectionTotal \n}) => {\n  const t = useOrderTranslations();\n  const formatMoney = useFormatCurrency();\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg flex items-center gap-2\">\n          <DollarSign className=\"w-5 h-5\" />\n          {t('detail.orderSummary')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-3\">\n        {/* Subtotal */}\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-600\">{t('amount.subtotal')}:</span>\n          <span className=\"font-medium\">{formatMoney(order.totalAmount || 0)}</span>\n        </div>\n\n        {/* Discount Display */}\n        {(order as any).discountAmount > 0 && (\n          <div className=\"flex justify-between text-sm text-green-600\">\n            <span>\n              {t('payment.discount')} {(order as any).discountType === 'percentage' && (order as any).discountValue \n                ? `(${(order as any).discountValue}%)` \n                : '(amount)'}:\n            </span>\n            <span className=\"font-medium\">-{formatMoney((order as any).discountAmount)}</span>\n          </div>\n        )}\n\n        {/* Deposit */}\n        {order.orderType === 'RENT' && order.depositAmount > 0 && (\n          <div className=\"flex justify-between text-sm\">\n            <span className=\"text-gray-600\">{t('amount.deposit')}:</span>\n            <span className=\"font-medium\">{formatMoney(order.depositAmount)}</span>\n          </div>\n        )}\n\n        {/* Grand Total */}\n        <div className=\"flex justify-between text-lg font-bold text-green-700 pt-2 border-t border-gray-200\">\n          <span>{t('amount.grandTotal')}:</span>\n          <span>{formatMoney(order.totalAmount || 0)}</span>\n        </div>\n\n        {/* Collection Amount - Single field for RENT orders */}\n        {order.orderType === 'RENT' && (\n          <div className=\"flex justify-between text-sm pt-2 border-t border-gray-200\">\n            <span className=\"text-gray-600\">{t('detail.collectionAmount')}:</span>\n            <span className={`font-medium ${\n              order.status === 'RESERVED' ? 'text-yellow-700' : \n              order.status === 'PICKUPED' ? 'text-blue-700' : \n              'text-gray-500'\n            }`}>\n              {order.status === 'RESERVED' ? (\n                <span className=\"flex items-center gap-2\">\n                  <span>{formatMoney(calculateCollectionTotal(order, tempSettings))}</span>\n                  {tempSettings.collateralType && tempSettings.collateralType !== 'Other' && (\n                    <span className=\"text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">\n                      + {tempSettings.collateralType}\n                    </span>\n                  )}\n                  {tempSettings.collateralType === 'Other' && tempSettings.collateralDetails && (\n                    <span className=\"text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">\n                      + {tempSettings.collateralDetails}\n                    </span>\n                  )}\n                  {tempSettings.collateralType === 'Other' && !tempSettings.collateralDetails && (\n                    <span className=\"text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded\">\n                      + {t('detail.collateral')}\n                    </span>\n                  )}\n                </span>\n              ) : \n               order.status === 'PICKUPED' ? t('detail.alreadyCollected') : \n               t('detail.noCollectionNeeded')}\n            </span>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n","import React from 'react';\nimport { \n  Card, \n  CardHeader, \n  CardTitle, \n  CardContent,\n  Button,\n  Input,\n  Label,\n  Textarea,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@rentalshop/ui';\nimport { Settings, Save, Edit } from 'lucide-react';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { useFormatCurrency } from '@rentalshop/ui';\nimport type { OrderWithDetails } from '@rentalshop/types';\n\ninterface SettingsForm {\n  damageFee: number;\n  securityDeposit: number;\n  collateralType: string;\n  collateralDetails: string;\n  notes: string;\n}\n\ninterface OrderSettingsCardProps {\n  order: OrderWithDetails;\n  settingsForm: SettingsForm;\n  tempSettings: SettingsForm;\n  isEditingSettings: boolean;\n  isSavingSettings: boolean;\n  loading: boolean;\n  isDamageFeeEnabled: () => boolean;\n  isSecurityDepositEnabled: () => boolean;\n  isCollateralTypeEnabled: () => boolean;\n  isCollateralDetailsEnabled: () => boolean;\n  onSettingsChange: (updates: Partial<SettingsForm>) => void;\n  onSaveSettings: () => void;\n  onCancelEdit: () => void;\n  onStartEdit: () => void;\n  collateralTypes: string[];\n}\n\nexport const OrderSettingsCard: React.FC<OrderSettingsCardProps> = ({\n  order,\n  settingsForm,\n  tempSettings,\n  isEditingSettings,\n  isSavingSettings,\n  loading,\n  isDamageFeeEnabled,\n  isSecurityDepositEnabled,\n  isCollateralTypeEnabled,\n  isCollateralDetailsEnabled,\n  onSettingsChange,\n  onSaveSettings,\n  onCancelEdit,\n  onStartEdit,\n  collateralTypes\n}) => {\n  const t = useOrderTranslations();\n  const formatMoney = useFormatCurrency();\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-lg flex items-center gap-2\">\n          <Settings className=\"w-5 h-5\" />\n          {t('detail.orderSettings')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {isEditingSettings ? (\n          <>\n            {/* Damage Fee - Conditionally enabled based on order type and status */}\n            <div>\n              <Label htmlFor=\"damageFee\" className=\"text-sm font-medium text-gray-700\">\n                {t('amount.damageFee')}\n                {!isDamageFeeEnabled() && (\n                  <span className=\"text-xs text-gray-500 ml-2\">(Disabled for this order type/status)</span>\n                )}\n              </Label>\n              <Input\n                id=\"damageFee\"\n                type=\"number\"\n                min=\"0\"\n                step=\"0.01\"\n                value={tempSettings.damageFee || 0}\n                onChange={(e) => onSettingsChange({ damageFee: parseFloat(e.target.value) || 0 })}\n                className=\"mt-1\"\n                placeholder=\"0\"\n                disabled={!isDamageFeeEnabled()}\n              />\n            </div>\n\n            {/* Security Deposit - Conditionally enabled based on order type and status */}\n            <div>\n              <Label htmlFor=\"securityDeposit\" className=\"text-sm font-medium text-gray-700\">\n                {t('amount.securityDeposit')}\n                {!isSecurityDepositEnabled() && (\n                  <span className=\"text-xs text-gray-500 ml-2\">(Disabled for this order type/status)</span>\n                )}\n              </Label>\n              <Input\n                id=\"securityDeposit\"\n                type=\"number\"\n                min=\"0\"\n                step=\"0.01\"\n                value={tempSettings.securityDeposit || 0}\n                onChange={(e) => onSettingsChange({ securityDeposit: parseFloat(e.target.value) || 0 })}\n                className=\"mt-1\"\n                placeholder=\"0\"\n                disabled={!isSecurityDepositEnabled()}\n              />\n            </div>\n\n            {/* Collateral Type - Conditionally enabled based on order type and status */}\n            <div>\n              <Label htmlFor=\"collateralType\" className=\"text-sm font-medium text-gray-700\">\n                {t('amount.collateralType')}\n                {!isCollateralTypeEnabled() && (\n                  <span className=\"text-xs text-gray-500 ml-2\">(Disabled for this order type/status)</span>\n                )}\n              </Label>\n              <Select \n                onValueChange={(value) => onSettingsChange({ collateralType: value })} \n                value={tempSettings.collateralType || ''} \n                onOpenChange={onStartEdit}\n              >\n                <SelectTrigger className=\"mt-1\">\n                  <SelectValue placeholder=\"Select collateral type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {collateralTypes.map(type => (\n                    <SelectItem key={type} value={type}>{type}</SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Collateral Details - Conditionally enabled based on order type and status */}\n            <div>\n              <Label htmlFor=\"collateralDetails\" className=\"text-sm font-medium text-gray-700\">\n                {t('amount.collateralDetails')}\n                {!isCollateralDetailsEnabled() && (\n                  <span className=\"text-xs text-gray-500 ml-2\">(Disabled for this order type/status)</span>\n                )}\n              </Label>\n              <Input\n                id=\"collateralDetails\"\n                type=\"text\"\n                value={tempSettings.collateralDetails || ''}\n                onChange={(e) => onSettingsChange({ collateralDetails: e.target.value })}\n                className=\"mt-1\"\n                placeholder=\"Enter collateral details\"\n                disabled={!isCollateralDetailsEnabled()}\n              />\n            </div>\n\n            {/* Order Notes */}\n            <div>\n              <Label htmlFor=\"notes\" className=\"text-sm font-medium text-gray-700\">\n                {t('detail.notes')}\n              </Label>\n              <Textarea\n                id=\"notes\"\n                value={tempSettings.notes || ''}\n                onChange={(e) => onSettingsChange({ notes: e.target.value })}\n                rows={3}\n                className=\"mt-1\"\n                placeholder=\"Enter order notes\"\n              />\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-2 pt-2\">\n              <Button\n                onClick={onSaveSettings}\n                disabled={loading || isSavingSettings}\n                className=\"flex-1 flex items-center gap-2\"\n              >\n                <Save className=\"w-4 h-4\" />\n                {isSavingSettings ? t('detail.saving') : t('detail.saveChanges')}\n              </Button>\n              <Button\n                variant=\"outline\"\n                onClick={onCancelEdit}\n                className=\"flex-1\"\n              >\n                {t('detail.cancel')}\n              </Button>\n            </div>\n          </>\n        ) : (\n          <>\n            {/* Display Mode */}\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">{t('amount.damageFee')}:</span>\n                <span className=\"text-sm font-medium\">\n                  {isDamageFeeEnabled() \n                    ? formatMoney(settingsForm.damageFee || 0)\n                    : <span className=\"text-gray-400 italic\">Disabled</span>\n                  }\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">{t('amount.securityDeposit')}:</span>\n                <span className=\"text-sm font-medium\">\n                  {isSecurityDepositEnabled() \n                    ? formatMoney(settingsForm.securityDeposit || 0)\n                    : <span className=\"text-gray-400 italic\">Disabled</span>\n                  }\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">{t('amount.collateralType')}:</span>\n                <span className=\"text-sm font-medium\">\n                  {isCollateralTypeEnabled() \n                    ? (settingsForm.collateralType || 'Not specified')\n                    : <span className=\"text-gray-400 italic\">Disabled</span>\n                  }\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">{t('amount.collateralDetails')}:</span>\n                <span className=\"text-sm font-medium\">\n                  {isCollateralDetailsEnabled() \n                    ? (settingsForm.collateralDetails || t('detail.noDetails'))\n                    : <span className=\"text-gray-400 italic\">Disabled</span>\n                  }\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">{t('detail.notes')}:</span>\n                <span className=\"text-sm font-medium\">{settingsForm.notes || t('detail.noNotes')}</span>\n              </div>\n            </div>\n\n            {/* Edit Button */}\n            <Button\n              variant=\"outline\"\n              onClick={onStartEdit}\n              className=\"w-full flex items-center gap-2 mt-4\"\n            >\n              <Edit className=\"w-4 h-4\" />\n              {t('detail.editSettings')}\n            </Button>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n","import React from 'react';\nimport { Button } from '../../../ui/button';\nimport { Edit, X, Package, RotateCcw, Printer, Info } from 'lucide-react';\nimport { useOrderTranslations } from '@rentalshop/hooks';\nimport { ORDER_STATUSES } from '@rentalshop/constants';\nimport type { OrderWithDetails } from '@rentalshop/types';\n\ninterface OrderActionsSectionProps {\n  order: OrderWithDetails;\n  canEdit: boolean;\n  canCancel: boolean;\n  canPickup: boolean;\n  canReturn: boolean;\n  canPrint: boolean;\n  isRentOrder: boolean;\n  isSaleOrder: boolean;\n  isPickupLoading: boolean;\n  isReturnLoading: boolean;\n  isCancelLoading: boolean;\n  onEdit: () => void;\n  onCancel: () => void;\n  onPickup: () => void;\n  onReturn: () => void;\n  onPrint: () => void;\n}\n\nexport const OrderActionsSection: React.FC<OrderActionsSectionProps> = ({\n  order,\n  canEdit,\n  canCancel,\n  canPickup,\n  canReturn,\n  canPrint,\n  isRentOrder,\n  isSaleOrder,\n  isPickupLoading,\n  isReturnLoading,\n  isCancelLoading,\n  onEdit,\n  onCancel,\n  onPickup,\n  onReturn,\n  onPrint\n}) => {\n  const t = useOrderTranslations();\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-6 mt-6\">\n      <div className=\"space-y-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">{t('detail.orderActions')}</h3>\n        \n        {/* Actions Layout: Cancel on left, others on right */}\n        <div className=\"flex justify-between items-center\">\n          {/* Left side - Cancel button */}\n          <div>\n            {canCancel && (\n              <Button\n                variant=\"destructive\"\n                onClick={onCancel}\n                className=\"px-6\"\n                disabled={isCancelLoading}\n              >\n                <X className=\"w-4 h-4 mr-2\" />\n                {isCancelLoading ? t('detail.cancelling') : t('actions.cancelOrder')}\n              </Button>\n            )}\n          </div>\n\n          {/* Right side - Other action buttons */}\n          <div className=\"flex gap-3\">\n            {/* Edit Order */}\n            <Button\n              variant=\"outline\"\n              onClick={onEdit}\n              className=\"px-4\"\n              disabled={!canEdit}\n              title={\n                !canEdit \n                  ? isRentOrder \n                    ? 'RENT orders can only be edited when status is RESERVED'\n                    : 'SALE orders can only be edited when status is COMPLETED'\n                  : t('detail.editOrder')\n              }\n            >\n              <Edit className=\"w-4 h-4 mr-2\" />\n              {t('detail.editOrder')}\n            </Button>\n\n            {/* Pickup Order - Only for RENT orders with RESERVED status */}\n            {canPickup && (\n              <Button\n                variant=\"default\"\n                onClick={onPickup}\n                className=\"px-6\"\n                disabled={isPickupLoading}\n              >\n                <Package className=\"w-4 h-4 mr-2\" />\n                {isPickupLoading ? t('actions.pickingUp') : t('actions.markAsPickedUp')}\n              </Button>\n            )}\n\n            {/* Return Order - Only for RENT orders with PICKUPED status */}\n            {canReturn && (\n              <Button\n                variant=\"default\"\n                onClick={onReturn}\n                className=\"px-4\"\n                disabled={isReturnLoading}\n              >\n                <RotateCcw className=\"w-4 h-4 mr-2\" />\n                {isReturnLoading ? t('actions.returning') : t('actions.markAsReturned')}\n              </Button>\n            )}\n\n            {/* Print Order - Always visible */}\n            {canPrint && (\n              <Button\n                variant=\"outline\"\n                onClick={onPrint}\n                className=\"px-4\"\n              >\n                <Printer className=\"w-4 h-4 mr-2\" />\n                {t('actions.printReceipt')}\n              </Button>\n            )}\n          </div>\n        </div>\n        \n        {/* Edit Rules Information */}\n        <div className=\"mt-3 text-sm text-gray-600 bg-gray-50 rounded-lg p-3 border border-gray-200\">\n          <div className=\"flex items-start gap-2\">\n            <Info className=\"w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0\" />\n            <div>\n              <p className=\"font-medium text-gray-700 mb-1\">{t('detail.editingRules')}:</p>\n              <ul className=\"space-y-1 text-gray-600\">\n                <li>• {t('detail.rentOrderRule')} <span className=\"font-mono bg-blue-100 px-1 rounded\">{ORDER_STATUSES.RESERVED}</span></li>\n                <li>• {t('detail.saleOrderRule')} <span className=\"font-mono bg-green-100 px-1 rounded\">{ORDER_STATUSES.COMPLETED}</span></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n","import React from 'react';\nimport { DollarSign } from 'lucide-react';\nimport { formatCurrency } from '@rentalshop/ui';\nimport { OrderData, SettingsForm } from '@rentalshop/types';\nimport { calculateCollectionAmount, getCollectionTitle } from '../utils';\n\ninterface OrderSummaryProps {\n  order: OrderData;\n  settingsForm: SettingsForm;\n}\n\nexport const OrderSummary: React.FC<OrderSummaryProps> = ({ order, settingsForm }) => {\n  const collectionAmount = calculateCollectionAmount(order, settingsForm);\n  const collectionTitle = getCollectionTitle(order);\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"flex items-center gap-2 mb-4\">\n        <DollarSign className=\"w-5 h-5 text-gray-600\" />\n        <h3 className=\"text-lg font-semibold text-gray-900\">Order Summary</h3>\n      </div>\n      \n      {/* Content */}\n      <div className=\"space-y-4\">\n        {/* Subtotal */}\n        <div className=\"flex justify-between items-center py-2\">\n          <span className=\"text-gray-600\">Subtotal</span>\n          <span className=\"font-semibold text-gray-900\">\n            {formatCurrency(order.subtotal)}\n          </span>\n        </div>\n        \n        {/* Discount - Always show if exists */}\n        {order.discountAmount && order.discountAmount > 0 && (\n          <div className=\"flex justify-between items-center py-2\">\n            <span className=\"text-gray-600\">Discount</span>\n            <span className=\"font-medium text-green-600\">\n              -{formatCurrency(order.discountAmount)}\n            </span>\n          </div>\n        )}\n        \n        {/* Tax - Always show if exists */}\n        {order.taxAmount && order.taxAmount > 0 && (\n          <div className=\"flex justify-between items-center py-2\">\n            <span className=\"text-gray-600\">Tax</span>\n            <span className=\"font-medium text-gray-900\">\n              {formatCurrency(order.taxAmount)}\n            </span>\n          </div>\n        )}\n        \n        {/* Total Amount */}\n        <div className=\"flex justify-between items-center py-3 border-t border-gray-200\">\n          <span className=\"text-lg font-semibold text-gray-900\">Total Amount</span>\n          <span className=\"text-xl font-bold text-green-700\">\n            {formatCurrency(order.totalAmount)}\n          </span>\n        </div>\n        \n        {/* Deposit */}\n        <div className=\"flex justify-between items-center py-2\">\n          <span className=\"text-gray-600\">Deposit</span>\n          <span className=\"font-medium text-gray-900\">\n            {formatCurrency(order.depositAmount)}\n          </span>\n        </div>\n        \n        {/* Remaining Balance */}\n        <div className=\"flex justify-between items-center py-2\">\n          <span className=\"text-gray-600\">Remaining</span>\n          <span className=\"font-medium text-gray-900\">\n            {formatCurrency(order.totalAmount - order.depositAmount)}\n          </span>\n        </div>\n        \n        {/* Collection Amount */}\n        <div className=\"py-3 border-t border-gray-200\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"text-lg font-semibold text-gray-900\">\n              {collectionTitle}\n            </span>\n            <span className={`text-xl font-bold ${\n              collectionAmount < 0 ? 'text-blue-700' : \n              collectionAmount === 0 ? 'text-gray-500' : 'text-yellow-700'\n            }`}>\n              {collectionAmount === 0 ? (\n                <span className=\"text-gray-500\">0</span>\n              ) : (\n                `${formatCurrency(Math.abs(collectionAmount))}`\n              )}\n            </span>\n          </div>\n          \n          {/* Additional Notes */}\n          {order.orderType === 'RENT' && \n           order.status === 'RESERVED' && \n           settingsForm.material && \n           settingsForm.material.trim() !== '' && (\n            <div className=\"text-sm font-medium text-gray-600 mt-1\">\n              và {settingsForm.material}\n            </div>\n          )}\n          \n          {order.orderType === 'RENT' && order.status === 'RESERVED' && (\n            <div className=\"mt-2 text-xs text-gray-500\">\n              <div className=\"flex items-center gap-1\">\n                <span>💡</span>\n                <span>\n                  {formatCurrency(order.totalAmount)} Total after discount - {formatCurrency(order.depositAmount)} Deposit + {formatCurrency(settingsForm.bailAmount)} Bail amount\n                </span>\n              </div>\n            </div>\n          )}\n          \n          {order.orderType === 'RENT' && order.status === 'PICKUP' && (\n            <div className=\"mt-2 text-xs text-gray-500\">\n              <div className=\"flex items-center gap-1\">\n                <span>💡</span>\n                <span>\n                  {formatCurrency(settingsForm.bailAmount)} Bail amount - {formatCurrency(settingsForm.damageFee)} Damage Fee\n                </span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { \n  GridSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '../../../ui/skeleton';\n\nexport function ShopsLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Shops Grid */}\n      <GridSkeleton items={6} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function ShopDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 w-48 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n          <div className=\"h-10 w-24 bg-gray-200 rounded animate-pulse\" />\n        </div>\n      </div>\n      \n      {/* Shop Info */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Image Placeholder */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"aspect-video w-full bg-gray-200 rounded-lg animate-pulse\" />\n        </div>\n        \n        {/* Details */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          <div className=\"space-y-4\">\n            <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"space-y-2\">\n              {Array.from({ length: 5 }).map((_, i) => (\n                <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"grid grid-cols-2 gap-4\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <div key={i} className=\"h-4 w-full bg-gray-200 rounded animate-pulse\" />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Outlets */}\n      <div className=\"space-y-4\">\n        <div className=\"h-6 w-32 bg-gray-200 rounded animate-pulse\" />\n        <GridSkeleton items={4} />\n      </div>\n    </div>\n  );\n}\n","import { \n  GridSkeleton, \n  SearchSkeleton, \n  PaginationSkeleton,\n  StatsSkeleton \n} from '../../../ui/skeleton';\n\nexport function OutletsLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Section */}\n      <StatsSkeleton />\n      \n      {/* Search and Filters */}\n      <SearchSkeleton />\n      \n      {/* Outlets Grid */}\n      <GridSkeleton items={6} />\n      \n      {/* Pagination */}\n      <PaginationSkeleton />\n    </div>\n  );\n}\n\nexport function OutletDetailLoading() {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"animate-pulse\">\n        <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n      </div>\n    </div>\n  );\n}\n\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { \n  User, \n  CreditCard, \n  Settings as SettingsIcon, \n  Building2,\n  Store,\n  Languages\n} from 'lucide-react';\nimport type { CurrencyCode } from '@rentalshop/types';\nimport { useAuth, useSettingsTranslations } from '@rentalshop/hooks';\nimport { usersApi, authApi, settingsApi, subscriptionsApi } from '@rentalshop/utils';\nimport { useToast } from '@rentalshop/ui';\nimport { useCurrency } from '../../../contexts/CurrencyContext';\n\n// Import components\nimport { SettingsLayout } from './components/SettingsLayout';\nimport { ProfileSection } from './components/ProfileSection';\nimport { MerchantSection } from './components/MerchantSection';\nimport { OutletSection } from './components/OutletSection';\nimport { SubscriptionSection } from './components/SubscriptionSection';\nimport { AccountSection } from './components/AccountSection';\nimport { LanguageSection } from './components/LanguageSection';\nimport { ChangePasswordDialog } from './components/ChangePasswordDialog';\nimport { DeleteAccountDialog } from './components/DeleteAccountDialog';\n\n// ============================================================================\n// SETTINGS MENU ITEMS\n// ============================================================================\n\nconst createSettingsMenuItems = (t: any) => [\n  {\n    id: 'profile',\n    label: t('menuItems.profile.label'),\n    icon: User,\n    description: t('menuItems.profile.description')\n  },\n  {\n    id: 'merchant',\n    label: t('menuItems.merchant.label'),\n    icon: Building2,\n    description: t('menuItems.merchant.description'),\n    roles: ['MERCHANT']\n  },\n  {\n    id: 'outlet',\n    label: t('menuItems.outlet.label'),\n    icon: Store,\n    description: t('menuItems.outlet.description'),\n    roles: ['OUTLET_ADMIN', 'OUTLET_STAFF']\n  },\n  {\n    id: 'subscription',\n    label: t('menuItems.subscription.label'),\n    icon: CreditCard,\n    description: t('menuItems.subscription.description'),\n    roles: ['ADMIN', 'MERCHANT', 'OUTLET_ADMIN'] // ADMIN, MERCHANT, and OUTLET_ADMIN can access subscription\n  },\n  {\n    id: 'language',\n    label: t('menuItems.language.label'),\n    icon: Languages,\n    description: t('menuItems.language.description')\n  },\n  {\n    id: 'account',\n    label: t('menuItems.account.label'),\n    icon: SettingsIcon,\n    description: t('menuItems.account.description')\n  }\n];\n\n// ============================================================================\n// MAIN SETTINGS COMPONENT\n// ============================================================================\n\nexport const SettingsComponent: React.FC = () => {\n  const t = useSettingsTranslations();\n  const { user, logout, loading } = useAuth();\n  const { toastSuccess, toastError } = useToast();\n  const { currency, setCurrency } = useCurrency();\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  \n  // Get tab from URL or default to 'profile'\n  const tabFromUrl = searchParams.get('tab') || 'profile';\n  \n  // Navigation state\n  const [activeSection, setActiveSection] = useState(tabFromUrl);\n  \n  // Profile editing state\n  const [isEditingPersonal, setIsEditingPersonal] = useState(false);\n  const [isEditingMerchant, setIsEditingMerchant] = useState(false);\n  const [isEditingOutlet, setIsEditingOutlet] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  \n  // Form data states\n  const [personalFormData, setPersonalFormData] = useState({\n    firstName: user?.firstName || '',\n    lastName: user?.lastName || '',\n    phone: user?.phone || '',\n  });\n  \n  const [merchantFormData, setMerchantFormData] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    country: '',\n    businessType: '',\n    pricingType: '',\n    taxId: '',\n  });\n  \n  const [outletFormData, setOutletFormData] = useState({\n    name: '',\n    phone: '',\n    address: '',\n    description: '',\n  });\n  \n  // Dialog states\n  const [showChangePassword, setShowChangePassword] = useState(false);\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  \n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  \n  // Subscription state\n  const [subscriptionData, setSubscriptionData] = useState<any>(null);\n  const [subscriptionLoading, setSubscriptionLoading] = useState(true);\n\n  // Sync URL with active section\n  useEffect(() => {\n    const tabFromUrl = searchParams.get('tab') || 'profile';\n    if (tabFromUrl !== activeSection) {\n      setActiveSection(tabFromUrl);\n    }\n  }, [searchParams]);\n\n  // Function to change section and update URL\n  const handleSectionChange = (section: string) => {\n    setActiveSection(section);\n    router.push(`/settings?tab=${section}`);\n  };\n\n  // Update personalFormData when user data loads\n  useEffect(() => {\n    if (user) {\n      setPersonalFormData({\n        firstName: user.firstName || '',\n        lastName: user.lastName || '',\n        phone: user.phone || '',\n      });\n    }\n  }, [user]);\n\n  // Fetch subscription data\n  useEffect(() => {\n    const fetchSubscriptionData = async () => {\n      try {\n        setSubscriptionLoading(true);\n        const response = await subscriptionsApi.getCurrentUserSubscriptionStatus();\n        \n        console.log('🔍 Settings - Subscription API response:', response);\n        \n        if (response.success && response.data) {\n          // ============================================================================\n          // NEW FLAT API RESPONSE MAPPING\n          // ============================================================================\n          // API now returns flat structure:\n          // {\n          //   status: \"CANCELED\" | \"EXPIRED\" | \"PAST_DUE\" | \"PAUSED\" | \"TRIAL\" | \"ACTIVE\",\n          //   statusReason: \"Canceled on 10/7/2025\",\n          //   hasAccess: false,\n          //   daysRemaining: 31,\n          //   planName: \"Basic\",\n          //   currentPeriodEnd: \"2025-11-07T12:17:28.045Z\",  // ← Already flat!\n          //   billingAmount: 75050,                          // ← Already flat!\n          //   billingInterval: \"quarter\",                    // ← Already flat!\n          //   ...all other fields are flat\n          // }\n          \n          const data = response.data;\n          \n          // Map to SubscriptionSection format (keep compatibility)\n          const transformedData = {\n            hasSubscription: true,\n            subscription: {\n              // Core subscription info (already flat in response)\n              id: data.subscriptionId,\n              status: data.status,\n              planName: data.planName,\n              currentPeriodStart: data.currentPeriodStart,\n              currentPeriodEnd: data.currentPeriodEnd,\n              \n              // Billing info (already flat)\n              amount: data.billingAmount,\n              currency: data.billingCurrency,\n              interval: data.billingInterval,\n              \n              // Trial info\n              trialStart: data.trialStart,\n              trialEnd: data.trialEnd,\n              \n              // Cancellation info\n              cancelAtPeriodEnd: data.cancelAtPeriodEnd,\n              canceledAt: data.canceledAt,\n              cancelReason: data.cancelReason,\n              \n              // Plan details\n              plan: {\n                id: data.planId,\n                name: data.planName,\n                description: data.planDescription,\n                basePrice: data.planPrice,\n                currency: data.planCurrency\n              }\n            },\n            \n            // Status flags (derived from computed status)\n            status: data.status,\n            statusReason: data.statusReason,\n            isActive: data.status === 'ACTIVE',\n            isExpired: data.status === 'EXPIRED',\n            isTrial: data.status === 'TRIAL',\n            isCanceled: data.status === 'CANCELED',\n            hasAccess: data.hasAccess,\n            isExpiringSoon: data.isExpiringSoon,\n            daysRemaining: data.daysRemaining,\n            \n            // Merchant info\n            merchant: {\n              id: data.merchantId,\n              name: data.merchantName,\n              email: data.merchantEmail\n            },\n            \n            // Limits & usage\n            limits: data.limits,\n            usage: data.usage,\n            \n            // Features\n            features: data.features\n          };\n          \n          console.log('✅ Settings - Mapped subscription data:', transformedData);\n          setSubscriptionData(transformedData);\n        } else {\n          console.log('❌ Settings - No subscription data:', response);\n          setSubscriptionData(null);\n        }\n      } catch (error) {\n        console.error('Error fetching subscription data:', error);\n        setSubscriptionData(null);\n      } finally {\n        setSubscriptionLoading(false);\n      }\n    };\n\n    fetchSubscriptionData();\n  }, []);\n\n  // Update form data when user data is loaded\n  useEffect(() => {\n    if (user?.merchant && user?.role === 'MERCHANT') {\n      setMerchantFormData({\n        name: user.merchant.name || '',\n        phone: user.merchant.phone || '',\n        address: user.merchant.address || '',\n        city: user.merchant.city || '',\n        state: user.merchant.state || '',\n        zipCode: user.merchant.zipCode || '',\n        country: user.merchant.country || '',\n        businessType: user.merchant.businessType || '',\n        pricingType: user.merchant.pricingType || '',\n        taxId: user.merchant.taxId || '',\n      });\n    }\n    \n    if (user?.outlet && (user?.role === 'OUTLET_ADMIN' || user?.role === 'OUTLET_STAFF')) {\n      setOutletFormData({\n        name: user.outlet.name || '',\n        phone: user.outlet.phone || '',\n        address: user.outlet.address || '',\n        description: user.outlet.description || '',\n      });\n    }\n  }, [user]);\n\n  // Create and filter menu items based on user role\n  const settingsMenuItems = createSettingsMenuItems(t);\n  const filteredMenuItems = settingsMenuItems.filter(item => {\n    // If item has roles restriction, check if user role is allowed\n    if (item.roles) {\n      return item.roles.includes(user?.role || '');\n    }\n    // If no roles restriction, show to all\n    return true;\n  });\n\n  // Event handlers will be added in the next part...\n  const handlePersonalInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setPersonalFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleMerchantInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setMerchantFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleOutletInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setOutletFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setPasswordData(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Placeholder handlers - these will be implemented\n  const handleEditPersonalProfile = () => setIsEditingPersonal(true);\n  const handleUpdatePersonalProfile = async () => {\n    try {\n      setIsUpdating(true);\n      const response = await settingsApi.updateUserProfile(personalFormData);\n      if (response.success) {\n        // Update authData in localStorage\n        const storedAuth = localStorage.getItem('authData');\n        if (storedAuth) {\n          const authData = JSON.parse(storedAuth);\n          if (authData.user) {\n            // Update user personal data\n            authData.user.firstName = personalFormData.firstName;\n            authData.user.lastName = personalFormData.lastName;\n            authData.user.phone = personalFormData.phone;\n            authData.user.name = `${personalFormData.firstName} ${personalFormData.lastName}`;\n            \n            localStorage.setItem('authData', JSON.stringify(authData));\n            console.log('✅ Updated user personal data in localStorage');\n            \n            // Also update user object in memory\n            if (user) {\n              user.firstName = personalFormData.firstName;\n              user.lastName = personalFormData.lastName;\n              user.phone = personalFormData.phone;\n              user.name = `${personalFormData.firstName} ${personalFormData.lastName}`;\n              console.log('✅ Updated user personal data in memory');\n            }\n          }\n        }\n        \n        setIsEditingPersonal(false);\n        toastSuccess('Success', t('messages.personalProfileUpdated'));\n      } else {\n        toastError('Error', response.error || t('messages.personalProfileUpdateFailed'));\n      }\n    } catch (error) {\n      toastError('Error', t('messages.personalProfileUpdateFailed'));\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n  const handleCancelPersonal = () => setIsEditingPersonal(false);\n\n  const handleEditMerchantInfo = () => setIsEditingMerchant(true);\n  const handleUpdateMerchantInfo = async () => {\n    try {\n      console.log('🔧 handleUpdateMerchantInfo called');\n      console.log('🔧 merchantFormData:', merchantFormData);\n      setIsUpdating(true);\n      const response = await settingsApi.updateMerchantInfo(merchantFormData);\n      console.log('🔧 API response:', response);\n      \n      if (response.success) {\n        console.log('🔧 API success, updating localStorage...');\n        \n        // Update authData in localStorage (NOT 'user' key - it's 'authData')\n        const storedAuth = localStorage.getItem('authData');\n        console.log('🔧 storedAuth before update:', storedAuth ? 'exists' : 'null');\n        \n        if (storedAuth) {\n          const authData = JSON.parse(storedAuth);\n          console.log('🔧 authData.user.merchant before:', authData.user?.merchant);\n          \n          if (authData.user && authData.user.merchant) {\n            // Only update the country field (API already updated all fields in database)\n            authData.user.merchant.country = merchantFormData.country;\n            console.log('🔧 Updated country in authData.user.merchant:', authData.user.merchant.country);\n            \n            localStorage.setItem('authData', JSON.stringify(authData));\n            console.log('✅ Updated merchant country in localStorage:', authData.user.merchant.country);\n            \n            // IMPORTANT: Also update user object in memory so next Edit shows new country\n            if (user && user.merchant) {\n              user.merchant.country = merchantFormData.country;\n              console.log('✅ Updated merchant country in memory:', user.merchant.country);\n            }\n          } else {\n            console.log('❌ authData.user.merchant is null/undefined');\n          }\n        } else {\n          console.log('❌ No authData found in localStorage');\n        }\n        \n        setIsEditingMerchant(false);\n        toastSuccess('Success', t('messages.businessInfoUpdated'));\n      } else {\n        console.log('❌ API failed:', response.error);\n        toastError('Error', response.error || t('messages.businessInfoUpdateFailed'));\n      }\n    } catch (error) {\n      console.error('❌ Error in handleUpdateMerchantInfo:', error);\n      toastError('Error', t('messages.businessInfoUpdateFailed'));\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n  const handleCancelMerchant = () => setIsEditingMerchant(false);\n\n  const handleEditOutletInfo = () => setIsEditingOutlet(true);\n  const handleUpdateOutletInfo = async () => {\n    try {\n      setIsUpdating(true);\n      const response = await settingsApi.updateOutletInfo(outletFormData);\n      if (response.success) {\n        setIsEditingOutlet(false);\n        toastSuccess('Success', t('messages.outletInfoUpdated'));\n      } else {\n        toastError('Error', response.error || t('messages.outletInfoUpdateFailed'));\n      }\n    } catch (error) {\n      toastError('Error', t('messages.outletInfoUpdateFailed'));\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n  const handleCancelOutlet = () => setIsEditingOutlet(false);\n\n  const handleSignOut = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.error('Error signing out:', error);\n    }\n  };\n\n  const handleDeleteAccount = async () => {\n    try {\n      setIsDeleting(true);\n      \n      if (!user?.id) {\n        throw new Error('User ID not found');\n      }\n      \n      const response = await usersApi.deleteUser(user.id);\n      if (response.success) {\n        toastSuccess('Account Deleted', t('messages.accountDeleted'));\n        await logout();\n      } else {\n        toastError('Delete Failed', response.message || t('messages.accountDeleteFailed'));\n      }\n    } catch (error) {\n      toastError('Delete Failed', t('messages.accountDeleteFailed'));\n    } finally {\n      setIsDeleting(false);\n      setShowDeleteConfirm(false);\n    }\n  };\n\n  const handleChangePassword = async () => {\n    try {\n      setIsChangingPassword(true);\n      if (passwordData.newPassword !== passwordData.confirmPassword) {\n        throw new Error(t('messages.passwordMismatch'));\n      }\n      if (passwordData.newPassword.length < 6) {\n        throw new Error(t('messages.passwordTooShort'));\n      }\n      const response = await authApi.changePassword(passwordData.currentPassword, passwordData.newPassword);\n      if (response.success) {\n        setShowChangePassword(false);\n        setPasswordData({ currentPassword: '', newPassword: '', confirmPassword: '' });\n        toastSuccess('Password Changed', t('messages.passwordChanged'));\n      } else {\n        throw new Error(response.message || t('messages.passwordChangeFailed'));\n      }\n    } catch (error) {\n      toastError('Password Change Failed', error instanceof Error ? error.message : t('messages.passwordChangeFailed'));\n    } finally {\n      setIsChangingPassword(false);\n    }\n  };\n\n  const handleCurrencyChange = async (newCurrency: CurrencyCode) => {\n    try {\n      setIsUpdating(true);\n      const response = await settingsApi.updateMerchantCurrency({ currency: newCurrency });\n      if (response.success) {\n        // Update currency in context - CurrencyProvider will re-render all components\n        setCurrency(newCurrency);\n        \n        // Update authData in localStorage to persist currency\n        const storedAuth = localStorage.getItem('authData');\n        if (storedAuth) {\n          const authData = JSON.parse(storedAuth);\n          if (authData.user && authData.user.merchant) {\n            authData.user.merchant.currency = newCurrency;\n            localStorage.setItem('authData', JSON.stringify(authData));\n          }\n        }\n        \n        toastSuccess('Success', t('messages.currencyUpdated'));\n      } else {\n        toastError('Error', response.error || t('messages.currencyUpdateFailed'));\n      }\n    } catch (error) {\n      toastError('Error', t('messages.currencyUpdateFailed'));\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'profile':\n        return (\n          <ProfileSection\n            user={user}\n            isEditing={isEditingPersonal}\n            isUpdating={isUpdating}\n            formData={personalFormData}\n            onEdit={handleEditPersonalProfile}\n            onSave={handleUpdatePersonalProfile}\n            onCancel={handleCancelPersonal}\n            onInputChange={handlePersonalInputChange}\n          />\n        );\n      case 'merchant':\n        return (\n          <MerchantSection\n            user={user}\n            isEditing={isEditingMerchant}\n            isUpdating={isUpdating}\n            formData={merchantFormData}\n            currentCurrency={currency}\n            onEdit={handleEditMerchantInfo}\n            onSave={handleUpdateMerchantInfo}\n            onCancel={handleCancelMerchant}\n            onInputChange={handleMerchantInputChange}\n            onCurrencyChange={handleCurrencyChange}\n          />\n        );\n      case 'outlet':\n        return (\n          <OutletSection\n            user={user}\n            isEditing={isEditingOutlet}\n            isUpdating={isUpdating}\n            formData={outletFormData}\n            onEdit={handleEditOutletInfo}\n            onSave={handleUpdateOutletInfo}\n            onCancel={handleCancelOutlet}\n            onInputChange={handleOutletInputChange}\n          />\n        );\n      case 'subscription':\n        return (\n          <SubscriptionSection\n            subscriptionData={subscriptionData}\n            subscriptionLoading={subscriptionLoading}\n            currentUserRole={user?.role}\n          />\n        );\n      case 'language':\n        return <LanguageSection />;\n      case 'account':\n        return (\n          <AccountSection\n            onSignOut={handleSignOut}\n            onDeleteAccount={() => setShowDeleteConfirm(true)}\n            onChangePassword={() => setShowChangePassword(true)}\n            isDeleting={isDeleting}\n          />\n        );\n      default:\n        return (\n          <ProfileSection\n            user={user}\n            isEditing={isEditingPersonal}\n            isUpdating={isUpdating}\n            formData={personalFormData}\n            onEdit={handleEditPersonalProfile}\n            onSave={handleUpdatePersonalProfile}\n            onCancel={handleCancelPersonal}\n            onInputChange={handlePersonalInputChange}\n          />\n        );\n    }\n  };\n\n  return (\n    <>\n      <SettingsLayout\n        user={user}\n        loading={loading}\n        menuItems={filteredMenuItems}\n        activeSection={activeSection}\n        onSectionChange={handleSectionChange}\n      >\n        {renderActiveSection()}\n      </SettingsLayout>\n\n      <ChangePasswordDialog\n        isOpen={showChangePassword}\n        isChanging={isChangingPassword}\n        passwordData={passwordData}\n        onClose={() => setShowChangePassword(false)}\n        onChange={handlePasswordChange}\n        onSubmit={handleChangePassword}\n      />\n\n      <DeleteAccountDialog\n        isOpen={showDeleteConfirm}\n        isDeleting={isDeleting}\n        onClose={() => setShowDeleteConfirm(false)}\n        onConfirm={handleDeleteAccount}\n      />\n      \n    </>\n  );\n};\n\nexport default SettingsComponent;","'use client';\n\nimport React, { useState } from 'react';\nimport { \n  Card, \n  CardContent,\n  PageWrapper,\n  PageHeader,\n  PageTitle,\n  PageContent,\n  Button\n} from '@rentalshop/ui';\nimport { ChevronRight } from 'lucide-react';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface SettingsMenuItem {\n  id: string;\n  label: string;\n  icon: React.ComponentType<{ className?: string }>;\n  description: string;\n  roles?: string[];\n}\n\nexport interface SettingsLayoutProps {\n  user: any;\n  loading: boolean;\n  children: React.ReactNode;\n  menuItems: SettingsMenuItem[];\n  activeSection: string;\n  onSectionChange: (section: string) => void;\n}\n\n// ============================================================================\n// SETTINGS LAYOUT COMPONENT\n// ============================================================================\n\nexport const SettingsLayout: React.FC<SettingsLayoutProps> = ({\n  user,\n  loading,\n  children,\n  menuItems,\n  activeSection,\n  onSectionChange\n}) => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const t = useSettingsTranslations();\n\n  // Show loading state while user data is being fetched\n  if (loading) {\n    return (\n      <PageWrapper>\n        <PageHeader>\n          <PageTitle>{t('title')}</PageTitle>\n          <p>{t('subtitle')}</p>\n        </PageHeader>\n        <div className=\"flex justify-center items-center py-12\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-700 mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">{t('loading') || 'Loading settings...'}</p>\n          </div>\n        </div>\n      </PageWrapper>\n    );\n  }\n\n  // Show basic settings UI even if user is not loaded (keep UI as is)\n  // This prevents the infinite loading state and shows the settings interface\n\n  return (\n    <PageWrapper>\n      <PageHeader>\n        <PageTitle>{t('title')}</PageTitle>\n        <p>{t('subtitle')}</p>\n      </PageHeader>\n\n      <div className=\"flex flex-col lg:flex-row gap-6\">\n        {/* Sidebar Navigation */}\n        <div className=\"lg:w-64 flex-shrink-0\">\n          <Card>\n            <CardContent className=\"p-0\">\n              <nav className=\"space-y-1\">\n                {menuItems\n                  .filter((item) => {\n                    // Filter menu items based on user role\n                    if (!item.roles) return true; // Show items without role restrictions\n                    \n                    // Normalize role comparison (trim whitespace, handle case)\n                    const userRole = (user?.role || '').trim().toUpperCase();\n                    const hasRole = item.roles.some(role => role.toUpperCase() === userRole);\n                    \n                    return hasRole;\n                  })\n                  .map((item) => {\n                    const Icon = item.icon;\n                    const isActive = activeSection === item.id;\n                    \n                    return (\n                      <Button\n                        variant=\"ghost\"\n                        key={item.id}\n                        onClick={() => onSectionChange(item.id)}\n                        className={`w-full flex items-center space-x-3 px-4 py-3 text-left transition-colors justify-start h-auto ${\n                          isActive\n                            ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700'\n                            : 'text-gray-700 hover:bg-gray-50'\n                        }`}\n                      >\n                        <Icon className=\"h-5 w-5\" />\n                        <div className=\"flex-1 min-w-0\">\n                          <p className=\"font-medium\">{item.label}</p>\n                          <p className=\"text-xs text-gray-500 truncate\">{item.description}</p>\n                        </div>\n                        <ChevronRight className=\"h-4 w-4\" />\n                      </Button>\n                    );\n                  })}\n              </nav>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 min-w-0\">\n          <PageContent>\n            {children}\n          </PageContent>\n        </div>\n      </div>\n    </PageWrapper>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader,\n  CardContent,\n  Button,\n  Input,\n  Label\n} from '@rentalshop/ui';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface ProfileSectionProps {\n  user: any;\n  isEditing: boolean;\n  isUpdating: boolean;\n  formData: {\n    firstName: string;\n    lastName: string;\n    phone: string;\n  };\n  onEdit: () => void;\n  onSave: () => void;\n  onCancel: () => void;\n  onInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\n// ============================================================================\n// PROFILE SECTION COMPONENT\n// ============================================================================\n\nexport const ProfileSection: React.FC<ProfileSectionProps> = ({\n  user,\n  isEditing,\n  isUpdating,\n  formData,\n  onEdit,\n  onSave,\n  onCancel,\n  onInputChange\n}) => {\n  const t = useSettingsTranslations();\n  // Debug logging\n  console.log('🔍 ProfileSection render - user:', user);\n  console.log('🔍 ProfileSection render - user details:', {\n    'user.id': user?.id,\n    'user.email': user?.email,\n    'user.firstName': user?.firstName,\n    'user.lastName': user?.lastName,\n    'user.phone': user?.phone,\n    'user.role': user?.role\n  });\n  \n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between py-4 pb-3\">\n          <h3 className=\"text-base font-semibold text-gray-900\">{t('profile.personalInformation')}</h3>\n          {!isEditing ? (\n            <Button onClick={onEdit} size=\"sm\">\n              {t('profile.edit')}\n            </Button>\n          ) : (\n            <div className=\"flex gap-2\">\n              <Button onClick={onSave} variant=\"default\" size=\"sm\" disabled={isUpdating}>\n                {isUpdating ? t('profile.saving') : t('profile.save')}\n              </Button>\n              <Button onClick={onCancel} variant=\"outline\" size=\"sm\" disabled={isUpdating}>\n                {t('profile.cancel')}\n              </Button>\n            </div>\n          )}\n        </CardHeader>\n        <CardContent className=\"p-6 pt-4\">\n          <div className=\"space-y-8\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('profile.firstName')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    value={formData.firstName}\n                    onChange={onInputChange}\n                    placeholder={t('profile.enterFirstName')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.firstName || t('profile.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('profile.lastName')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    value={formData.lastName}\n                    onChange={onInputChange}\n                    placeholder={t('profile.enterLastName')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.lastName || t('profile.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('profile.email')}\n                </Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={user?.email || ''}\n                    placeholder={t('profile.email')}\n                    disabled={true}\n                    className=\"bg-gray-100 text-gray-600 cursor-not-allowed\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('profile.phone')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"phone\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={onInputChange}\n                    placeholder={t('profile.enterPhone')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.phone || t('profile.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <Label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('profile.role')}\n                </Label>\n                <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                  {user?.role ? user.role.charAt(0).toUpperCase() + user.role.slice(1) : 'User'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { \n  Card, \n  CardHeader,\n  CardContent,\n  Button,\n  Input,\n  Label,\n  Badge,\n  SearchableCountrySelect\n} from '@rentalshop/ui';\nimport { CheckCircle2, DollarSign } from 'lucide-react';\nimport { merchantsApi, formatCurrency, getCurrency } from '@rentalshop/utils';\nimport { \n  getBusinessTypeDescription, \n  getPricingTypeDescription,\n  COUNTRIES\n} from '@rentalshop/constants';\nimport type { BusinessType, PricingType } from '@rentalshop/constants/src/pricing';\nimport type { CurrencyCode } from '@rentalshop/types';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface MerchantSectionProps {\n  user: any;\n  isEditing: boolean;\n  isUpdating: boolean;\n  formData: {\n    name: string;\n    phone: string;\n    address: string;\n    city: string;\n    state: string;\n    zipCode: string;\n    country: string;\n    businessType: string;\n    pricingType: string;\n    taxId: string;\n  };\n  currentCurrency: CurrencyCode;\n  onEdit: () => void;\n  onSave: () => void;\n  onCancel: () => void;\n  onInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onCurrencyChange: (currency: CurrencyCode) => Promise<void>;\n}\n\n// ============================================================================\n// MERCHANT SECTION COMPONENT\n// ============================================================================\n\nexport const MerchantSection: React.FC<MerchantSectionProps> = ({\n  user,\n  isEditing,\n  isUpdating,\n  formData,\n  currentCurrency,\n  onEdit,\n  onSave,\n  onCancel,\n  onInputChange,\n  onCurrencyChange\n}) => {\n  const t = useSettingsTranslations();\n  const [merchantData, setMerchantData] = useState<any>(null);\n  const [loadingMerchant, setLoadingMerchant] = useState(false);\n  const [selectedCurrency, setSelectedCurrency] = useState<CurrencyCode>(currentCurrency);\n  const [isSavingCurrency, setIsSavingCurrency] = useState(false);\n  const fetchingRef = useRef(false);\n  \n  // Currency options\n  const CURRENCY_OPTIONS: Array<{ value: CurrencyCode; label: string; symbol: string }> = [\n    { value: 'USD', label: t('merchant.usDollar'), symbol: '$' },\n    { value: 'VND', label: t('merchant.vietnameseDong'), symbol: 'đ' },\n  ];\n  \n  // Debug logging\n  console.log('🔍 MerchantSection render - user:', user);\n  console.log('🔍 MerchantSection render - user.merchant:', user?.merchant);\n  console.log('🔍 MerchantSection render - user.merchantId:', user?.merchantId);\n  console.log('🔍 MerchantSection render - user role:', user?.role);\n  console.log('🔍 MerchantSection render - loadingMerchant:', loadingMerchant);\n  console.log('🔍 MerchantSection render - fetchingRef.current:', fetchingRef.current);\n  \n  // Fetch merchant data if user has merchantId but no full merchant object\n  useEffect(() => {\n    const fetchMerchantData = async () => {\n      // Prevent infinite loops by checking if we're already fetching\n      if (user?.merchantId && !user?.merchant && !fetchingRef.current) {\n        console.log('🔄 Fetching merchant data for merchantId:', user.merchantId);\n        fetchingRef.current = true;\n        setLoadingMerchant(true);\n        \n        try {\n          const result = await merchantsApi.getMerchantById(user.merchantId);\n          console.log('🔍 Merchant API response:', result);\n          \n          if (result.success && result.data) {\n            // Handle nested structure: result.data.merchant or direct result.data\n            const merchantInfo = (result.data as any).merchant || result.data;\n            console.log('✅ Merchant data extracted:', merchantInfo);\n            setMerchantData(merchantInfo);\n          } else {\n            console.error('❌ Failed to fetch merchant data:', result);\n          }\n        } catch (error) {\n          console.error('💥 Error fetching merchant data:', error);\n        } finally {\n          setLoadingMerchant(false);\n          fetchingRef.current = false;\n        }\n      }\n    };\n    \n    fetchMerchantData();\n    \n    // Cleanup function to reset fetching ref\n    return () => {\n      fetchingRef.current = false;\n    };\n  }, [user?.merchantId, user?.merchant]); // Removed loadingMerchant from dependencies\n  \n  // Use merchant data from user object or fetched data\n  const merchant = user?.merchant || merchantData;\n  \n  // Update selected currency when current currency changes\n  useEffect(() => {\n    setSelectedCurrency(currentCurrency);\n  }, [currentCurrency]);\n  \n  // Handle currency change\n  const handleCurrencySelect = async (currency: CurrencyCode) => {\n    if (currency === currentCurrency) return;\n    \n    setIsSavingCurrency(true);\n    try {\n      await onCurrencyChange(currency);\n      setSelectedCurrency(currency);\n    } catch (error) {\n      console.error('Failed to update currency:', error);\n      setSelectedCurrency(currentCurrency); // Revert on error\n    } finally {\n      setIsSavingCurrency(false);\n    }\n  };\n  \n  // Debug merchant data\n  console.log('🔍 MerchantSection - Final merchant data:', {\n    'user.merchant': user?.merchant,\n    'merchantData': merchantData,\n    'final merchant': merchant,\n    'merchant.name': merchant?.name,\n    'merchant.email': merchant?.email,\n    'merchant.phone': merchant?.phone,\n    'merchant.businessType': merchant?.businessType\n  });\n  \n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between py-4 pb-3\">\n          <h3 className=\"text-base font-semibold text-gray-900\">{t('merchant.businessInformation')}</h3>\n          {!isEditing ? (\n            <Button onClick={onEdit} size=\"sm\">\n              {t('merchant.edit')}\n            </Button>\n          ) : (\n            <div className=\"flex gap-2\">\n              <Button onClick={onSave} variant=\"default\" size=\"sm\" disabled={isUpdating}>\n                {isUpdating ? t('merchant.saving') : t('merchant.save')}\n              </Button>\n              <Button onClick={onCancel} variant=\"outline\" size=\"sm\" disabled={isUpdating}>\n                {t('merchant.cancel')}\n              </Button>\n            </div>\n          )}\n        </CardHeader>\n        <CardContent className=\"p-6 pt-4\">\n          {loadingMerchant ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-gray-500\">Loading business information...</p>\n            </div>\n          ) : !merchant && !user?.merchantId ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-gray-500\">No business information available</p>\n              <p className=\"text-gray-400 text-sm mt-2\">\n                User role: {user?.role || 'Unknown'} | \n                Has merchantId: {user?.merchantId ? 'Yes' : 'No'} | \n                Has merchant object: {user?.merchant ? 'Yes' : 'No'} |\n                Fetched merchant: {merchantData ? 'Yes' : 'No'}\n              </p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"merchantName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.name')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"merchantName\"\n                    name=\"name\"\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterBusinessName')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.name || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"merchantEmail\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.email')}\n                </Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"merchantEmail\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={merchant?.email || ''}\n                    placeholder={t('merchant.email')}\n                    disabled={true}\n                    className=\"bg-gray-100 text-gray-600 cursor-not-allowed\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"taxId\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.taxId')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"taxId\"\n                    name=\"taxId\"\n                    type=\"text\"\n                    value={formData.taxId}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterTaxId')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.taxId || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"merchantPhone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.phone')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"merchantPhone\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterPhone')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.phone || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <Label htmlFor=\"businessType\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      {t('merchant.businessType')}\n                    </Label>\n                    <div className=\"relative\">\n                      <Input\n                        id=\"businessType\"\n                        name=\"businessType\"\n                        type=\"text\"\n                        value={merchant?.businessType || t('merchant.notProvided')}\n                        placeholder={t('merchant.businessType')}\n                        disabled={true}\n                        className=\"bg-gray-100 text-gray-600 cursor-not-allowed\"\n                      />\n                    </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {merchant?.businessType ? getBusinessTypeDescription(merchant.businessType as BusinessType) : t('merchant.businessType')}\n                </p>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"pricingType\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      {t('merchant.pricingType')}\n                    </Label>\n                    <div className=\"relative\">\n                      <Input\n                        id=\"pricingType\"\n                        name=\"pricingType\"\n                        type=\"text\"\n                        value={merchant?.pricingType || t('merchant.notProvided')}\n                        placeholder={t('merchant.pricingType')}\n                        disabled={true}\n                        className=\"bg-gray-100 text-gray-600 cursor-not-allowed\"\n                      />\n                    </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  {merchant?.pricingType ? getPricingTypeDescription(merchant.pricingType as PricingType) : t('merchant.pricingType')}\n                </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <Label htmlFor=\"merchantAddress\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.address')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"merchantAddress\"\n                    name=\"address\"\n                    type=\"text\"\n                    value={formData.address}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterAddress')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.address || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"merchantCity\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.city')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"merchantCity\"\n                    name=\"city\"\n                    type=\"text\"\n                    value={formData.city}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterCity')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.city || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"merchantState\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.state')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"merchantState\"\n                    name=\"state\"\n                    type=\"text\"\n                    value={formData.state}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterState')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.state || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"merchantZipCode\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.zipCode')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"merchantZipCode\"\n                    name=\"zipCode\"\n                    type=\"text\"\n                    value={formData.zipCode}\n                    onChange={onInputChange}\n                    placeholder={t('merchant.enterZipCode')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {merchant?.zipCode || t('merchant.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"merchantCountry\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('merchant.country')}\n                </Label>\n                {isEditing ? (\n                  <SearchableCountrySelect\n                    options={COUNTRIES}\n                    value={formData.country}\n                    onChange={(countryName) => {\n                      console.log('🌍 MerchantSection: Country onChange called with:', countryName);\n                      console.log('🌍 MerchantSection: Current formData.country:', formData.country);\n                      // Trigger parent's onChange handler with synthetic event\n                      onInputChange({ \n                        target: { name: 'country', value: countryName } \n                      } as React.ChangeEvent<HTMLInputElement>);\n                      console.log('🌍 MerchantSection: onInputChange called');\n                    }}\n                    placeholder=\"Type to search countries...\"\n                    emptyMessage=\"No countries found\"\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md flex items-center gap-2\">\n                    {merchant?.country ? (\n                      <>\n                        {COUNTRIES.find(c => c.name === merchant.country)?.flag || ''}\n                        {merchant.country}\n                      </>\n                    ) : (\n                      t('merchant.notProvided')\n                    )}\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Currency Settings Card */}\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <DollarSign className=\"h-5 w-5 text-blue-700\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">{t('merchant.currencySettings')}</h3>\n          </div>\n          <p className=\"text-sm text-gray-600 mb-4\">\n            {t('merchant.currencyDesc')}\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {CURRENCY_OPTIONS.map((option) => {\n              const config = getCurrency(option.value);\n              const isSelected = selectedCurrency === option.value;\n              const isCurrent = currentCurrency === option.value;\n              \n              return (\n                <button\n                  key={option.value}\n                  onClick={() => handleCurrencySelect(option.value)}\n                  disabled={isSavingCurrency || isCurrent}\n                  className={`\n                    relative p-4 border-2 rounded-lg text-left transition-all\n                    ${isCurrent \n                      ? 'border-green-500 bg-green-50' \n                      : 'border-gray-200 bg-white hover:border-blue-300 hover:shadow-sm'\n                    }\n                    ${isSavingCurrency ? 'opacity-50 cursor-wait' : isCurrent ? 'cursor-default' : 'cursor-pointer'}\n                  `}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"text-2xl\">{option.symbol}</div>\n                      <div>\n                        <div className=\"font-semibold text-gray-900\">\n                          {option.label}\n                        </div>\n                        <div className=\"text-sm text-gray-600\">\n                          {option.value}\n                        </div>\n                      </div>\n                    </div>\n                    {isCurrent && (\n                      <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">\n                        <CheckCircle2 className=\"h-3 w-3 mr-1\" />\n                        {t('merchant.selected')}\n                      </Badge>\n                    )}\n                  </div>\n\n                  {/* Preview */}\n                  <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                    <div className=\"text-xs text-gray-500 mb-1\">{t('merchant.selectCurrency')}:</div>\n                    <div className=\"flex gap-4 text-sm text-gray-700\">\n                      <span>{formatCurrency(100, option.value)}</span>\n                      <span>{formatCurrency(10000, option.value)}</span>\n                    </div>\n                  </div>\n                </button>\n              );\n            })}\n          </div>\n\n          {isSavingCurrency && (\n            <p className=\"text-sm text-blue-700 mt-3\">\n              {t('merchant.savingCurrency')}\n            </p>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardHeader,\n  CardContent,\n  Button,\n  Input,\n  Label\n} from '@rentalshop/ui';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface OutletSectionProps {\n  user: any;\n  isEditing: boolean;\n  isUpdating: boolean;\n  formData: {\n    name: string;\n    phone: string;\n    address: string;\n    description: string;\n  };\n  onEdit: () => void;\n  onSave: () => void;\n  onCancel: () => void;\n  onInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\n// ============================================================================\n// OUTLET SECTION COMPONENT\n// ============================================================================\n\nexport const OutletSection: React.FC<OutletSectionProps> = ({\n  user,\n  isEditing,\n  isUpdating,\n  formData,\n  onEdit,\n  onSave,\n  onCancel,\n  onInputChange\n}) => {\n  const t = useSettingsTranslations();\n  \n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between py-4 pb-3\">\n          <h3 className=\"text-base font-semibold text-gray-900\">{t('outlet.outletInformation')}</h3>\n          {!isEditing ? (\n            <Button onClick={onEdit} size=\"sm\">\n              {t('outlet.edit')}\n            </Button>\n          ) : (\n            <div className=\"flex gap-2\">\n              <Button onClick={onSave} variant=\"default\" size=\"sm\" disabled={isUpdating}>\n                {isUpdating ? t('outlet.saving') : t('outlet.save')}\n              </Button>\n              <Button onClick={onCancel} variant=\"outline\" size=\"sm\" disabled={isUpdating}>\n                {t('outlet.cancel')}\n              </Button>\n            </div>\n          )}\n        </CardHeader>\n        <CardContent className=\"p-6 pt-4\">\n          {!user?.outlet ? (\n            <div className=\"text-center py-8\">\n              <p className=\"text-gray-500\">{t('outlet.noOutletInfo')}</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <Label htmlFor=\"outletName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('outlet.name')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"outletName\"\n                    name=\"name\"\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={onInputChange}\n                    placeholder={t('outlet.enterOutletName')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.outlet?.name || t('outlet.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <Label htmlFor=\"outletPhone\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('outlet.phone')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"outletPhone\"\n                    name=\"phone\"\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={onInputChange}\n                    placeholder={t('outlet.enterOutletPhone')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.outlet?.phone || t('outlet.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <Label htmlFor=\"outletAddress\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('outlet.address')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"outletAddress\"\n                    name=\"address\"\n                    type=\"text\"\n                    value={formData.address}\n                    onChange={onInputChange}\n                    placeholder={t('outlet.enterOutletAddress')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.outlet?.address || t('outlet.notProvided')}\n                  </p>\n                )}\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <Label htmlFor=\"outletDescription\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  {t('outlet.description')}\n                </Label>\n                {isEditing ? (\n                  <Input\n                    id=\"outletDescription\"\n                    name=\"description\"\n                    type=\"text\"\n                    value={formData.description}\n                    onChange={onInputChange}\n                    placeholder={t('outlet.enterDescription')}\n                  />\n                ) : (\n                  <p className=\"text-gray-900 py-2 px-3 bg-gray-50 rounded-md\">\n                    {user?.outlet?.description || t('outlet.notProvided')}\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardContent,\n  Button,\n  Badge\n} from '@rentalshop/ui';\nimport { \n  CreditCard, \n  CheckCircle,\n  AlertTriangle,\n  Calendar,\n  DollarSign\n} from 'lucide-react';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface SubscriptionSectionProps {\n  subscriptionData: any;\n  subscriptionLoading: boolean;\n  currentUserRole?: string;\n}\n\n// ============================================================================\n// SUBSCRIPTION SECTION COMPONENT\n// ============================================================================\n\nexport const SubscriptionSection: React.FC<SubscriptionSectionProps> = ({\n  subscriptionData,\n  subscriptionLoading,\n  currentUserRole\n}) => {\n  const t = useSettingsTranslations();\n  \n  if (subscriptionLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-700\"></div>\n              <span className=\"ml-2 text-gray-600\">{t('subscription.loading')}</span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (subscriptionData?.hasSubscription) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Current Plan Card */}\n        <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <CreditCard className=\"h-6 w-6 text-blue-700\" />\n                  <div>\n                    <h3 className=\"text-base font-semibold text-gray-900\">{t('subscription.currentPlan')}</h3>\n                    <p className=\"text-sm text-gray-600\">{subscriptionData.subscription.plan?.name || 'Professional Plan'}</p>\n                  </div>\n                </div>\n                <Badge \n                  variant={subscriptionData.isExpired ? 'destructive' : 'default'}\n                  className={subscriptionData.isExpired ? 'bg-red-100 text-red-800' : subscriptionData.isExpiringSoon ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}\n                >\n                  {subscriptionData.isExpired ? t('subscription.expired') : subscriptionData.isExpiringSoon ? t('subscription.expiringSoon') : t('subscription.active')}\n                </Badge>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <DollarSign className=\"h-4 w-4 text-gray-600\" />\n                    <span className=\"text-sm font-medium text-gray-700\">{t('subscription.amount')}</span>\n                  </div>\n                  <p className=\"text-base font-semibold text-gray-900\">\n                    ${subscriptionData.subscription.amount || '0.00'}\n                  </p>\n                  <p className=\"text-xs text-gray-600\">\n                    {subscriptionData.subscription.interval || 'monthly'}\n                  </p>\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Calendar className=\"h-4 w-4 text-gray-600\" />\n                    <span className=\"text-sm font-medium text-gray-700\">{t('subscription.nextBilling')}</span>\n                  </div>\n                  <p className=\"text-base font-semibold text-gray-900\">\n                    {subscriptionData.subscription.currentPeriodEnd ? \n                      new Date(subscriptionData.subscription.currentPeriodEnd).toLocaleDateString('en-US', { \n                        month: 'short', \n                        day: 'numeric', \n                        year: 'numeric' \n                      }) : 'N/A'}\n                  </p>\n                  {subscriptionData.daysUntilExpiry && (\n                    <p className=\"text-xs text-gray-600\">\n                      {subscriptionData.daysUntilExpiry} {t('subscription.daysRemaining')}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <CheckCircle className=\"h-4 w-4 text-gray-600\" />\n                    <span className=\"text-sm font-medium text-gray-700\">{t('subscription.status')}</span>\n                  </div>\n                  <p className=\"text-base font-semibold text-gray-900 capitalize\">\n                    {subscriptionData.subscription.status || t('subscription.active')}\n                  </p>\n                  <p className=\"text-xs text-gray-600\">\n                    {subscriptionData.subscription.cancelAtPeriodEnd ? t('subscription.cancelsAtPeriodEnd') : t('subscription.autoRenewalEnabled')}\n                  </p>\n                </div>\n              </div>\n\n              {subscriptionData.isExpiringSoon && (\n                <div className=\"mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <AlertTriangle className=\"h-5 w-5 text-yellow-600\" />\n                    <p className=\"text-sm text-yellow-800\">\n                      {t('subscription.expiresIn')} {subscriptionData.daysUntilExpiry} {t('subscription.daysRemaining')}. \n                      {t('subscription.considerRenewing')}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* Show read-only message for all roles */}\n              <div className=\"mt-6 pt-4 border-t border-gray-200\">\n                <p className=\"text-sm text-gray-600 text-center\">\n                  {currentUserRole === 'OUTLET_ADMIN' \n                    ? t('subscription.contactMerchant')\n                    : t('subscription.comingSoon')\n                  }\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center py-8\">\n            <CreditCard className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{t('subscription.noSubscription')}</h3>\n            <p className=\"text-sm text-gray-600 mb-6\">{t('subscription.noSubscriptionDesc')}</p>\n            \n            {/* Only show action button for ADMIN and MERCHANT roles */}\n            {(currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && (\n              <Button>\n                {t('subscription.viewInvoices')}\n              </Button>\n            )}\n            \n            {/* Show read-only message for OUTLET_ADMIN */}\n            {currentUserRole === 'OUTLET_ADMIN' && (\n              <p className=\"text-sm text-gray-600\">\n                {t('subscription.contactAdmin')}\n              </p>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardContent,\n  Button,\n  Separator\n} from '@rentalshop/ui';\nimport { LogOut, Trash2, Key } from 'lucide-react';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface AccountSectionProps {\n  onSignOut: () => void;\n  onDeleteAccount: () => void;\n  onChangePassword: () => void;\n  isDeleting: boolean;\n}\n\n// ============================================================================\n// ACCOUNT SECTION COMPONENT\n// ============================================================================\n\nexport const AccountSection: React.FC<AccountSectionProps> = ({\n  onSignOut,\n  onDeleteAccount,\n  onChangePassword,\n  isDeleting\n}) => {\n  const t = useSettingsTranslations();\n  \n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Key className=\"h-5 w-5 text-gray-600\" />\n                <div>\n                  <h3 className=\"text-base font-semibold text-gray-900\">{t('account.changePasswordTitle')}</h3>\n                  <p className=\"text-sm text-gray-600\">{t('account.changePasswordDesc')}</p>\n                </div>\n              </div>\n              <Button \n                variant=\"outline\" \n                onClick={onChangePassword}\n              >\n                {t('account.changePasswordButton')}\n              </Button>\n            </div>\n\n            <Separator />\n\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <LogOut className=\"h-5 w-5 text-gray-600\" />\n                <div>\n                  <h3 className=\"text-base font-semibold text-gray-900\">{t('account.sessionTitle')}</h3>\n                  <p className=\"text-sm text-gray-600\">{t('account.sessionDesc')}</p>\n                </div>\n              </div>\n              <Button \n                variant=\"outline\" \n                onClick={onSignOut}\n                className=\"text-red-600 hover:text-red-700 hover:bg-red-50 border-red-200\"\n              >\n                {t('account.signOut')}\n              </Button>\n            </div>\n\n            <Separator />\n\n            <div className=\"flex items-center justify-between p-4 bg-red-50 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Trash2 className=\"h-5 w-5 text-red-600\" />\n                <div>\n                  <h3 className=\"text-base font-semibold text-red-900\">{t('account.deleteAccountTitle')}</h3>\n                  <p className=\"text-sm text-red-700\">{t('account.deleteAccountDesc')}</p>\n                </div>\n              </div>\n              <Button \n                variant=\"destructive\" \n                onClick={onDeleteAccount}\n                disabled={isDeleting}\n              >\n                {isDeleting ? t('account.deleting') : t('account.deleteAccount')}\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client';\n\nimport React, { useState, useTransition } from 'react';\nimport { useLocale } from 'next-intl';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../../ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../../ui/select';\nimport { Button } from '../../../ui/button';\nimport { Languages, Check } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// Language options with flags\nconst languages = [\n  { value: 'en', label: 'English', flag: '🇺🇸' },\n  { value: 'vi', label: 'Tiếng Việt', flag: '🇻🇳' },\n] as const;\n\n/**\n * LanguageSection Component\n * \n * Allows users to change their preferred language.\n * Language preference is stored in localStorage and cookie for persistence.\n */\nexport function LanguageSection() {\n  const t = useSettingsTranslations();\n  const currentLocale = useLocale();\n  const router = useRouter();\n  const [isPending, startTransition] = useTransition();\n  const [selectedLanguage, setSelectedLanguage] = useState(currentLocale);\n\n  const handleLanguageChange = (newLocale: string) => {\n    setSelectedLanguage(newLocale);\n    \n    startTransition(() => {\n      // Save to localStorage\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('user_language_preference', newLocale);\n        \n        // Set cookie for server-side access\n        document.cookie = `NEXT_LOCALE=${newLocale};path=/;max-age=31536000;SameSite=Lax`;\n      }\n      \n      // Refresh the page to apply new locale\n      router.refresh();\n    });\n  };\n\n  const currentLanguage = languages.find(lang => lang.value === currentLocale);\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center gap-2\">\n          <Languages className=\"h-5 w-5 text-action-primary\" />\n          <CardTitle>{t('language.title')}</CardTitle>\n        </div>\n        <CardDescription>\n          {t('language.subtitle')}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium text-text-primary\">\n            {t('language.currentLanguage')}\n          </label>\n          <div className=\"flex items-center gap-2 px-3 py-2 bg-bg-secondary rounded-lg\">\n            <span className=\"text-2xl\">{currentLanguage?.flag}</span>\n            <span className=\"text-text-primary font-medium\">{currentLanguage?.label}</span>\n            <Check className=\"h-4 w-4 text-action-success ml-auto\" />\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"text-sm font-medium text-text-primary\">\n            {t('language.selectLanguage')}\n          </label>\n          <Select\n            value={selectedLanguage}\n            onValueChange={handleLanguageChange}\n            disabled={isPending}\n          >\n            <SelectTrigger className=\"w-full\">\n              <SelectValue placeholder={t('language.selectALanguage')} />\n            </SelectTrigger>\n            <SelectContent>\n              {languages.map((language) => (\n                <SelectItem key={language.value} value={language.value}>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-xl\">{language.flag}</span>\n                    <span>{language.label}</span>\n                    {language.value === currentLocale && (\n                      <Check className=\"h-4 w-4 text-action-success ml-2\" />\n                    )}\n                  </div>\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {isPending && (\n          <div className=\"flex items-center gap-2 text-sm text-text-secondary\">\n            <div className=\"h-4 w-4 border-2 border-action-primary border-t-transparent rounded-full animate-spin\" />\n            <span>{t('language.applyingChanges')}</span>\n          </div>\n        )}\n\n        <div className=\"pt-4 border-t border-border\">\n          <p className=\"text-sm text-text-secondary\">\n            ℹ️ {t('language.languagePreferenceSaved')}\n          </p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n","'use client';\n\nimport React, { useState } from 'react';\nimport { \n  Button,\n  Input,\n  Label\n} from '@rentalshop/ui';\nimport { Eye, EyeOff } from 'lucide-react';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface ChangePasswordDialogProps {\n  isOpen: boolean;\n  isChanging: boolean;\n  passwordData: {\n    currentPassword: string;\n    newPassword: string;\n    confirmPassword: string;\n  };\n  onClose: () => void;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onSubmit: () => void;\n}\n\n// ============================================================================\n// CHANGE PASSWORD DIALOG COMPONENT\n// ============================================================================\n\nexport const ChangePasswordDialog: React.FC<ChangePasswordDialogProps> = ({\n  isOpen,\n  isChanging,\n  passwordData,\n  onClose,\n  onChange,\n  onSubmit\n}) => {\n  const t = useSettingsTranslations();\n  // State for show/hide password\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-medium text-gray-900\">{t('changePassword.title')}</h3>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 h-8 w-8 p-0\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </Button>\n        </div>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <Label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              {t('changePassword.currentPassword')}\n            </Label>\n            <div className=\"relative\">\n              <Input\n                id=\"currentPassword\"\n                name=\"currentPassword\"\n                type={showCurrentPassword ? \"text\" : \"password\"}\n                value={passwordData.currentPassword}\n                onChange={onChange}\n                placeholder={t('changePassword.currentPasswordPlaceholder')}\n                className=\"pr-10\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowCurrentPassword(!showCurrentPassword)}\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                {showCurrentPassword ? (\n                  <EyeOff className=\"h-4 w-4\" />\n                ) : (\n                  <Eye className=\"h-4 w-4\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div>\n            <Label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              {t('changePassword.newPassword')}\n            </Label>\n            <div className=\"relative\">\n              <Input\n                id=\"newPassword\"\n                name=\"newPassword\"\n                type={showNewPassword ? \"text\" : \"password\"}\n                value={passwordData.newPassword}\n                onChange={onChange}\n                placeholder={t('changePassword.newPasswordPlaceholder')}\n                className=\"pr-10\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowNewPassword(!showNewPassword)}\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                {showNewPassword ? (\n                  <EyeOff className=\"h-4 w-4\" />\n                ) : (\n                  <Eye className=\"h-4 w-4\" />\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div>\n            <Label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              {t('changePassword.confirmPassword')}\n            </Label>\n            <div className=\"relative\">\n              <Input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type={showConfirmPassword ? \"text\" : \"password\"}\n                value={passwordData.confirmPassword}\n                onChange={onChange}\n                placeholder={t('changePassword.confirmPasswordPlaceholder')}\n                className=\"pr-10\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                {showConfirmPassword ? (\n                  <EyeOff className=\"h-4 w-4\" />\n                ) : (\n                  <Eye className=\"h-4 w-4\" />\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end space-x-3 mt-6\">\n          <Button\n            variant=\"outline\"\n            onClick={onClose}\n            disabled={isChanging}\n          >\n            {t('changePassword.cancel')}\n          </Button>\n          <Button\n            onClick={onSubmit}\n            disabled={isChanging}\n          >\n            {isChanging ? t('changePassword.changing') : t('changePassword.changePassword')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { Button } from '@rentalshop/ui';\nimport { useSettingsTranslations } from '@rentalshop/hooks';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface DeleteAccountDialogProps {\n  isOpen: boolean;\n  isDeleting: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\n// ============================================================================\n// DELETE ACCOUNT DIALOG COMPONENT\n// ============================================================================\n\nexport const DeleteAccountDialog: React.FC<DeleteAccountDialogProps> = ({\n  isOpen,\n  isDeleting,\n  onClose,\n  onConfirm\n}) => {\n  const t = useSettingsTranslations();\n  \n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n        <div className=\"flex items-center mb-4\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-6 w-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-lg font-medium text-gray-900\">{t('deleteAccountDialog.title')}</h3>\n          </div>\n        </div>\n        \n        <div className=\"mb-6\">\n          <p className=\"text-sm text-gray-600\">\n            {t('deleteAccountDialog.description')}\n          </p>\n          <ul className=\"mt-3 text-sm text-gray-600 list-disc list-inside space-y-1\">\n            <li>{t('deleteAccountDialog.profileInfo')}</li>\n            <li>{t('deleteAccountDialog.orderHistory')}</li>\n            <li>{t('deleteAccountDialog.productListings')}</li>\n            <li>{t('deleteAccountDialog.savedPreferences')}</li>\n          </ul>\n          <p className=\"mt-3 text-sm text-gray-600\">\n            <strong>{t('deleteAccountDialog.irreversibleWarning')}</strong>\n          </p>\n        </div>\n\n        <div className=\"flex justify-end space-x-3\">\n          <Button\n            variant=\"outline\"\n            onClick={onClose}\n            disabled={isDeleting}\n          >\n            {t('deleteAccountDialog.cancel')}\n          </Button>\n          <Button\n            variant=\"destructive\"\n            onClick={onConfirm}\n            disabled={isDeleting}\n          >\n            {isDeleting ? t('deleteAccountDialog.deleting') : t('deleteAccountDialog.deleteAccount')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport React from 'react';\nimport { \n  Card, \n  CardContent,\n  Button\n} from '@rentalshop/ui';\nimport { Shield } from 'lucide-react';\n\n// ============================================================================\n// TYPES\n// ============================================================================\n\nexport interface SecuritySectionProps {\n  onChangePassword: () => void;\n}\n\n// ============================================================================\n// SECURITY SECTION COMPONENT\n// ============================================================================\n\nexport const SecuritySection: React.FC<SecuritySectionProps> = ({\n  onChangePassword\n}) => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-900\">Security</h2>\n        <p className=\"text-gray-600\">Manage your password and account security settings</p>\n      </div>\n\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Shield className=\"h-5 w-5 text-gray-600\" />\n                <div>\n                  <h3 className=\"font-medium text-gray-900\">Password</h3>\n                  <p className=\"text-sm text-gray-600\">Change your password to keep your account secure</p>\n                </div>\n              </div>\n              <Button \n                variant=\"outline\" \n                onClick={onChangePassword}\n              >\n                Change Password\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { DollarSign, CheckCircle2, AlertCircle } from 'lucide-react';\nimport type { CurrencyCode } from '@rentalshop/types';\nimport { formatCurrency, getCurrency } from '@rentalshop/utils';\n\n// Import UI components\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n  Button,\n  Badge,\n} from '@rentalshop/ui';\n\n// Currency options for selection\nconst CURRENCY_OPTIONS: Array<{ value: CurrencyCode; label: string; symbol: string; name: string }> = [\n  { value: 'USD', label: '$ USD - US Dollar', symbol: '$', name: 'US Dollar' },\n  { value: 'VND', label: 'đ VND - Vietnamese Dong', symbol: 'đ', name: 'Vietnamese Dong' },\n];\n\n/**\n * Currency Section Props\n */\ninterface CurrencySectionProps {\n  /** Current user */\n  user?: any;\n  /** Current selected currency */\n  currentCurrency: CurrencyCode;\n  /** Is updating */\n  isUpdating?: boolean;\n  /** On currency change */\n  onCurrencyChange: (currency: CurrencyCode) => Promise<void>;\n}\n\n/**\n * Currency Section Component\n * \n * Allows merchants to select and change their preferred currency.\n * Displays currency options with preview formatting.\n */\nexport const CurrencySection: React.FC<CurrencySectionProps> = ({\n  user,\n  currentCurrency,\n  isUpdating = false,\n  onCurrencyChange,\n}) => {\n  const [selectedCurrency, setSelectedCurrency] = useState<CurrencyCode>(currentCurrency);\n  const [hasChanges, setHasChanges] = useState(false);\n\n  // Update selected currency when prop changes\n  useEffect(() => {\n    setSelectedCurrency(currentCurrency);\n    setHasChanges(false);\n  }, [currentCurrency]);\n\n  // Handle currency selection\n  const handleSelect = (currency: CurrencyCode) => {\n    setSelectedCurrency(currency);\n    setHasChanges(currency !== currentCurrency);\n  };\n\n  // Handle save\n  const handleSave = async () => {\n    if (!hasChanges) return;\n    await onCurrencyChange(selectedCurrency);\n    setHasChanges(false);\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setSelectedCurrency(currentCurrency);\n    setHasChanges(false);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h2 className=\"text-2xl font-bold text-gray-900 flex items-center gap-2\">\n          <DollarSign className=\"h-6 w-6 text-blue-700\" />\n          Currency Settings\n        </h2>\n        <p className=\"text-gray-600 mt-1\">\n          Choose your preferred currency for displaying prices across your rental shop.\n        </p>\n      </div>\n\n      {/* Warning Message */}\n      {hasChanges && (\n        <div className=\"flex items-start gap-3 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <AlertCircle className=\"h-5 w-5 text-yellow-600 flex-shrink-0 mt-0.5\" />\n          <div className=\"flex-1\">\n            <p className=\"text-sm font-medium text-yellow-900\">\n              Unsaved Changes\n            </p>\n            <p className=\"text-sm text-yellow-700 mt-1\">\n              You have unsaved currency changes. Click \"Save Changes\" to apply them.\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Current Currency Display */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Current Currency</CardTitle>\n          <CardDescription>\n            Your currently active currency for all price displays\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center gap-3 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"text-3xl\">{getCurrency(currentCurrency)?.symbol || '$'}</div>\n            <div className=\"flex-1\">\n              <div className=\"text-lg font-semibold text-gray-900\">\n                {getCurrency(currentCurrency)?.name || 'US Dollar'}\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                Code: {currentCurrency}\n              </div>\n            </div>\n            {selectedCurrency === currentCurrency && !hasChanges && (\n              <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">\n                <CheckCircle2 className=\"h-3 w-3 mr-1\" />\n                Active\n              </Badge>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Currency Selection */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Select Currency</CardTitle>\n          <CardDescription>\n            Choose from our supported currencies\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {CURRENCY_OPTIONS.map((option: { value: CurrencyCode; label: string; symbol: string; name: string }) => {\n              const config = getCurrency(option.value);\n              if (!config) return null;\n              const isSelected = selectedCurrency === option.value;\n              const isCurrent = currentCurrency === option.value;\n              \n              return (\n                <button\n                  key={option.value}\n                  onClick={() => handleSelect(option.value)}\n                  disabled={isUpdating}\n                  className={`\n                    relative p-4 border-2 rounded-lg text-left transition-all\n                    ${isSelected \n                      ? 'border-blue-500 bg-blue-50 shadow-sm' \n                      : 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'\n                    }\n                    ${isUpdating ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n                  `}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"text-2xl\">{config.symbol}</div>\n                      <div>\n                        <div className=\"font-semibold text-gray-900\">\n                          {config.name}\n                        </div>\n                        <div className=\"text-sm text-gray-600\">\n                          {option.value}\n                        </div>\n                      </div>\n                    </div>\n                    {isSelected && (\n                      <CheckCircle2 className=\"h-5 w-5 text-blue-700\" />\n                    )}\n                  </div>\n\n                  {/* Preview Examples */}\n                  <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                    <div className=\"text-xs text-gray-500 mb-1\">Preview:</div>\n                    <div className=\"space-y-1\">\n                      <div className=\"text-sm text-gray-700\">\n                        <span className=\"text-gray-500\">Small: </span>\n                        <span className=\"font-medium\">{formatCurrency(10, option.value)}</span>\n                      </div>\n                      <div className=\"text-sm text-gray-700\">\n                        <span className=\"text-gray-500\">Medium: </span>\n                        <span className=\"font-medium\">{formatCurrency(1000, option.value)}</span>\n                      </div>\n                      <div className=\"text-sm text-gray-700\">\n                        <span className=\"text-gray-500\">Large: </span>\n                        <span className=\"font-medium\">{formatCurrency(1000000, option.value)}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Current Badge */}\n                  {isCurrent && !hasChanges && (\n                    <div className=\"absolute top-2 right-2\">\n                      <Badge variant=\"default\" className=\"bg-green-100 text-green-800 text-xs\">\n                        Current\n                      </Badge>\n                    </div>\n                  )}\n                </button>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Currency Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Currency Details</CardTitle>\n          <CardDescription>\n            Technical information about {getCurrency(selectedCurrency)?.name || 'Selected Currency'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <div className=\"text-sm text-gray-500\">Symbol</div>\n              <div className=\"text-lg font-semibold\">{getCurrency(selectedCurrency)?.symbol || '$'}</div>\n            </div>\n            <div>\n              <div className=\"text-sm text-gray-500\">Code</div>\n              <div className=\"text-lg font-semibold\">{selectedCurrency}</div>\n            </div>\n            <div>\n              <div className=\"text-sm text-gray-500\">Decimal Places</div>\n              <div className=\"text-lg font-semibold\">{getCurrency(selectedCurrency)?.maxFractionDigits || 2}</div>\n            </div>\n            <div>\n              <div className=\"text-sm text-gray-500\">Symbol Position</div>\n              <div className=\"text-lg font-semibold capitalize\">\n                {getCurrency(selectedCurrency)?.symbolBefore ? 'before' : 'after'}\n              </div>\n            </div>\n            <div>\n              <div className=\"text-sm text-gray-500\">Locale</div>\n              <div className=\"text-lg font-semibold\">{getCurrency(selectedCurrency)?.locale || 'en-US'}</div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Action Buttons */}\n      {hasChanges && (\n        <div className=\"flex items-center justify-end gap-3 pt-4 border-t\">\n          <Button\n            variant=\"outline\"\n            onClick={handleCancel}\n            disabled={isUpdating}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSave}\n            disabled={isUpdating || !hasChanges}\n          >\n            {isUpdating ? 'Saving...' : 'Save Changes'}\n          </Button>\n        </div>\n      )}\n\n      {/* Help Text */}\n      <div className=\"text-sm text-gray-500 space-y-2\">\n        <p>\n          <strong>Note:</strong> Changing your currency will affect how prices are displayed \n          throughout your rental shop. All existing prices will remain in their original values \n          but will be formatted according to the selected currency.\n        </p>\n        <p>\n          If you need to convert existing prices to the new currency, please contact support.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrencySection;\n\n","'use client'\n\nimport { useState } from 'react'\nimport { \n  Home, \n  Package, \n  Users, \n  Settings, \n  Tag, \n  ShoppingCart,\n  Store,\n  Building2,\n  Bell,\n  User,\n  LogOut,\n  X,\n  Menu,\n  CreditCard,\n  Calendar,\n  Clock,\n  ChevronDown,\n  BarChart3,\n  ShieldCheck,\n  FileText,\n  Database,\n  Activity,\n  Wrench,\n  Key,\n  Download,\n  AlertTriangle\n} from 'lucide-react';\nimport { Button } from '../ui/button'\nimport { Badge } from '../ui/badge'\nimport { LucideIcon } from 'lucide-react'\n\ninterface NavItem {\n  href: string\n  label: string\n  icon: LucideIcon\n  subItems?: NavItem[]\n}\n\ninterface TopNavigationProps {\n  variant?: 'client' | 'admin'\n  currentPage: string // Make this required instead of using usePathname\n  notificationsCount?: number\n  cartItemsCount?: number\n  onLogout?: () => void\n  onProfileClick?: () => void\n  userRole?: string // Add user role for filtering navigation\n}\n\nexport function TopNavigation({ \n  variant = 'client', \n  currentPage,\n  notificationsCount = 0,\n  cartItemsCount = 0,\n  onLogout,\n  onProfileClick,\n  userRole\n}: TopNavigationProps) {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false)\n\n  const clientNavItems: NavItem[] = [\n    { href: '/dashboard', label: 'Dashboard', icon: Home },\n    { href: '/products', label: 'Products', icon: Package },\n    { href: '/customers', label: 'Customers', icon: Users },\n    { href: '/orders', label: 'Orders', icon: ShoppingCart },\n    { href: '/settings', label: 'Settings', icon: Settings },\n  ]\n\n  const adminNavItems: NavItem[] = [\n    { href: '/dashboard', label: 'Dashboard', icon: Home },\n    { href: '/merchants', label: 'Merchants', icon: Building2 },\n    { \n      href: '/plans', \n      label: 'Plans', \n      icon: Package\n    },\n    { href: '/subscriptions', label: 'Subscriptions', icon: Clock },\n    { href: '/payments', label: 'Payments', icon: CreditCard },\n    { href: '/users', label: 'Users', icon: Users },\n    { \n      href: '/system', \n      label: 'System', \n      icon: Settings,\n      subItems: [\n        { href: '/system/backup', label: 'Backup Management', icon: Database },\n        { href: '/system/integrity', label: 'Data Integrity', icon: ShieldCheck },\n        { href: '/system/audit-logs', label: 'Audit Logs', icon: FileText }\n      ]\n    },\n\n  ]\n\n  // Filter nav items based on user role\n  const filterNavItemsByRole = (items: NavItem[], userRole?: string) => {\n    if (!userRole) return items;\n    \n    // Hide specific tabs based on user role\n    if (userRole === 'OUTLET_ADMIN') {\n      // OUTLET_ADMIN can see users but not outlets, subscriptions, plans, payments\n      return items.filter(item => \n        item.href !== '/outlets' && \n        item.href !== '/subscriptions' && \n        item.href !== '/plans' && \n        item.href !== '/payments'\n      );\n    } else if (userRole === 'OUTLET_STAFF') {\n      // OUTLET_STAFF cannot see users, outlets, subscriptions, plans, payments (limited permissions)\n      return items.filter(item => \n        item.href !== '/users' && \n        item.href !== '/outlets' && \n        item.href !== '/subscriptions' && \n        item.href !== '/plans' && \n        item.href !== '/payments'\n      );\n    }\n    \n    return items;\n  };\n\n  const navItems = variant === 'admin' \n    ? filterNavItemsByRole(adminNavItems, userRole) \n    : clientNavItems\n\n\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-white border-b border-gray-200 shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Left: Logo + Brand */}\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-700 to-blue-700 rounded-xl flex items-center justify-center shadow-lg\">\n                <Store className=\"w-6 h-6 text-white\" />\n              </div>\n            </div>\n            <div className=\"ml-3\">\n              <h1 className=\"text-xl font-bold text-gray-900\">Rental Shop</h1>\n              <p className=\"text-xs text-gray-500 capitalize\">{variant}</p>\n            </div>\n          </div>\n\n          {/* Center: Main Navigation - Desktop */}\n          <nav className=\"hidden lg:flex items-center space-x-1\">\n            {navItems.map((item) => {\n              const Icon = item.icon\n              const isActive = currentPage === item.href || (item.subItems && item.subItems.some(subItem => currentPage === subItem.href))\n              const hasSubItems = item.subItems && item.subItems.length > 0\n              \n              if (hasSubItems) {\n                return (\n                  <div key={item.href} className=\"relative group\">\n                    <a\n                      href={item.href}\n                      className={`px-4 py-2 rounded-lg text-sm font-medium flex items-center gap-2 transition-all duration-200 ${\n                        isActive\n                          ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                          : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                      }`}\n                    >\n                      <Icon className={`w-4 h-4 ${isActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                      {item.label}\n                      <ChevronDown className=\"w-3 h-3\" />\n                    </a>\n                    \n                    {/* Dropdown Menu */}\n                    <div className=\"absolute top-full left-0 mt-1 w-48 bg-white border border-gray-200 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50\">\n                      <div className=\"py-1\">\n                        {item.subItems?.map((subItem) => {\n                          const SubIcon = subItem.icon\n                          const isSubActive = currentPage === subItem.href\n                          return (\n                            <a\n                              key={subItem.href}\n                              href={subItem.href}\n                              className={`flex items-center gap-2 px-4 py-2 text-sm transition-colors ${\n                                isSubActive\n                                  ? 'bg-blue-50 text-blue-700'\n                                  : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                              }`}\n                            >\n                              <SubIcon className={`w-4 h-4 ${isSubActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                              {subItem.label}\n                            </a>\n                          )\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                )\n              }\n              \n              return (\n                <a\n                  key={item.href}\n                  href={item.href}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium flex items-center gap-2 transition-all duration-200 ${\n                    isActive\n                      ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  <Icon className={`w-4 h-4 ${isActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                  {item.label}\n                </a>\n              )\n            })}\n          </nav>\n\n          {/* Right: Actions + User */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Quick Actions */}\n            <div className=\"flex items-center space-x-2\">\n              {/* Notifications */}\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"relative p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n              >\n                <Bell className=\"w-5 h-5\" />\n              </Button>\n\n              {/* Cart Items - Only for client */}\n              {variant === 'client' && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"relative p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n                >\n                  <ShoppingCart className=\"w-5 h-5\" />\n                  {cartItemsCount > 0 && (\n                    <Badge className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\">\n                      {cartItemsCount > 9 ? '9+' : cartItemsCount}\n                    </Badge>\n                  )}\n                </Button>\n              )}\n            </div>\n\n            {/* User Profile */}\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onProfileClick}\n                className=\"flex items-center gap-2 text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n              >\n                <div className=\"w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-500 rounded-full flex items-center justify-center\">\n                  <User className=\"w-4 h-4 text-white\" />\n                </div>\n                <span className=\"hidden sm:block text-sm font-medium\">Profile</span>\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onLogout}\n                className=\"p-2 text-gray-600 hover:text-red-600 hover:bg-red-50\"\n                title=\"Logout\"\n              >\n                <LogOut className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            {/* Mobile Menu Button */}\n            <div className=\"lg:hidden\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n              >\n                {isMobileMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n              </Button>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n      {/* Mobile Navigation Menu */}\n      {isMobileMenuOpen && (\n        <div className=\"lg:hidden border-t border-gray-200 bg-white\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            {navItems.map((item) => {\n              const Icon = item.icon\n              const isActive = currentPage === item.href || (item.subItems && item.subItems.some(subItem => currentPage === subItem.href))\n              const hasSubItems = item.subItems && item.subItems.length > 0\n              \n              return (\n                <div key={item.href}>\n                  <a\n                    href={item.href}\n                    className={`flex px-3 py-2 rounded-lg text-base font-medium items-center gap-3 ${\n                      isActive\n                        ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                        : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                    }`}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    <Icon className={`w-5 h-5 ${isActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                    {item.label}\n                  </a>\n                  \n                  {/* Mobile Sub-items */}\n                  {hasSubItems && (\n                    <div className=\"ml-6 space-y-1\">\n                      {item.subItems?.map((subItem) => {\n                        const SubIcon = subItem.icon\n                        const isSubActive = currentPage === subItem.href\n                        return (\n                          <a\n                            key={subItem.href}\n                            href={subItem.href}\n                            className={`flex px-3 py-2 rounded-lg text-sm font-medium items-center gap-3 ${\n                              isSubActive\n                                ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                                : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                            }`}\n                            onClick={() => setIsMobileMenuOpen(false)}\n                          >\n                            <SubIcon className={`w-4 h-4 ${isSubActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                            {subItem.label}\n                          </a>\n                        )\n                      })}\n                    </div>\n                  )}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )}\n    </header>\n  )\n}\n\nexport default TopNavigation\n","import { \n  Home, \n  Store, \n  Users, \n  Settings, \n  User, \n  LogOut, \n  Menu, \n  X,\n  Search,\n  Bell,\n  ShoppingCart,\n  Package,\n  Tag,\n  CreditCard,\n  BarChart3,\n  Shield,\n  Calendar,\n  Clock\n} from 'lucide-react'\nimport { Button } from '../ui/button'\nimport { Input } from '../ui/input'\nimport { Badge } from '../ui/badge'\n\ninterface ServerTopNavigationProps {\n  variant?: 'client' | 'admin'\n  currentPage: string\n  notificationsCount?: number\n  cartItemsCount?: number\n  searchAction?: string // Form action for search\n  logoutAction?: string // Form action for logout\n  profileAction?: string // Form action for profile\n}\n\nexport function ServerTopNavigation({ \n  variant = 'client', \n  currentPage,\n  notificationsCount = 0,\n  cartItemsCount = 0,\n  searchAction = '/search',\n  logoutAction = '/logout',\n  profileAction = '/profile'\n}: ServerTopNavigationProps) {\n  const clientNavItems = [\n    { href: '/dashboard', label: 'Dashboard', icon: Home },\n    { href: '/products', label: 'Products', icon: Package },\n    { href: '/customers', label: 'Customers', icon: Users },\n    { href: '/orders', label: 'Orders', icon: ShoppingCart },\n    { href: '/settings', label: 'Settings', icon: Settings },\n  ]\n\n  const adminNavItems = [\n    { href: '/dashboard', label: 'Dashboard', icon: Home },\n    { href: '/merchants', label: 'Merchants', icon: Store },\n    { href: '/plans', label: 'Plans', icon: Package },\n    { href: '/subscriptions', label: 'Subscriptions', icon: Clock },\n    { href: '/payments', label: 'Payments', icon: CreditCard },\n    { href: '/settings', label: 'Settings', icon: Settings },\n    { href: '/analytics', label: 'Analytics', icon: BarChart3 },\n    { href: '/security', label: 'Security', icon: Shield },\n  ]\n\n  const navItems = variant === 'admin' ? adminNavItems : clientNavItems\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-white border-b border-gray-200 shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Left: Logo + Brand */}\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-10 h-10 bg-gradient-to-br from-blue-700 to-blue-700 rounded-xl flex items-center justify-center shadow-lg\">\n                <Store className=\"w-6 h-6 text-white\" />\n              </div>\n            </div>\n            <div className=\"ml-3\">\n              <h1 className=\"text-xl font-bold text-gray-900\">Rental Shop</h1>\n              <p className=\"text-xs text-gray-500 capitalize\">{variant}</p>\n            </div>\n          </div>\n\n          {/* Center: Main Navigation - Desktop */}\n          <nav className=\"hidden lg:flex items-center space-x-1\">\n            {navItems.map((item) => {\n              const Icon = item.icon\n              const isActive = currentPage === item.href\n              return (\n                <a\n                  key={item.href}\n                  href={item.href}\n                  className={`px-4 py-2 rounded-lg text-sm font-medium flex items-center gap-2 transition-all duration-200 ${\n                    isActive\n                      ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                      : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                  }`}\n                >\n                  <Icon className={`w-4 h-4 ${isActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                  {item.label}\n                </a>\n              )\n            })}\n          </nav>\n\n          {/* Right: Search + Actions + User */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Search Bar */}\n            <form action={searchAction} method=\"GET\" className=\"hidden md:block\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                <Input\n                  type=\"text\"\n                  name=\"q\"\n                  placeholder=\"Search products, customers...\"\n                  className=\"w-64 pl-10 pr-4 h-9 border-gray-300 focus:border-blue-500 focus:ring-blue-500\"\n                />\n              </div>\n            </form>\n\n            {/* Quick Actions */}\n            <div className=\"flex items-center space-x-2\">\n              {/* Notifications */}\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"relative p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n              >\n                <Bell className=\"w-5 h-5\" />\n              </Button>\n\n              {/* Cart Items - Only for client */}\n              {variant === 'client' && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"relative p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n                >\n                  <ShoppingCart className=\"w-5 h-5\" />\n                  {cartItemsCount > 0 && (\n                    <Badge className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\">\n                      {cartItemsCount > 9 ? '9+' : cartItemsCount}\n                    </Badge>\n                  )}\n                </Button>\n              )}\n            </div>\n\n            {/* User Profile */}\n            <div className=\"flex items-center space-x-2\">\n              <form action={profileAction} method=\"GET\">\n                <Button\n                  type=\"submit\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"flex items-center gap-2 text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\n                >\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-500 rounded-full flex items-center justify-center\">\n                    <User className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <span className=\"hidden sm:block text-sm font-medium\">Profile</span>\n                </Button>\n              </form>\n\n              <form action={logoutAction} method=\"POST\">\n                <Button\n                  type=\"submit\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"p-2 text-gray-600 hover:text-red-600 hover:bg-red-50\"\n                  title=\"Logout\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                </Button>\n              </form>\n            </div>\n\n            {/* Mobile Menu Button - Server-side toggle would need JavaScript */}\n            <div className=\"lg:hidden\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-50\"\n                type=\"button\"\n                data-mobile-menu-toggle\n              >\n                <Menu className=\"w-6 h-6\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Search Bar */}\n        <div className=\"md:hidden pb-4\">\n          <form action={searchAction} method=\"GET\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <Input\n                type=\"text\"\n                name=\"q\"\n                placeholder=\"Search products, customers...\"\n                className=\"w-full pl-10 pr-4 h-10 border-gray-300 focus:border-blue-500 focus:border-blue-500 focus:ring-blue-500\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n\n      {/* Mobile Navigation Menu - Static for server components */}\n      <div className=\"lg:hidden border-t border-gray-200 bg-white hidden\" data-mobile-menu>\n        <div className=\"px-2 pt-2 pb-3 space-y-1\">\n          {navItems.map((item) => {\n            const Icon = item.icon\n            const isActive = currentPage === item.href\n            return (\n              <a\n                key={item.href}\n                href={item.href}\n                className={`block px-3 py-2 rounded-lg text-base font-medium flex items-center gap-3 ${\n                  isActive\n                    ? 'bg-blue-50 text-blue-700 border border-blue-200'\n                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'\n                }`}\n              >\n                <Icon className={`w-5 h-5 ${isActive ? 'text-blue-700' : 'text-gray-500'}`} />\n                {item.label}\n              </a>\n            )\n          })}\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default ServerTopNavigation\n","'use client';\n\nimport React, { useState } from 'react';\nimport { Sidebar } from './sidebar';\n\ninterface DashboardWrapperCleanProps {\n  children: React.ReactNode;\n  user?: any;\n  onLogout?: () => void;\n  currentPath?: string;\n  hideSidebar?: boolean;\n  allowCollapse?: boolean;\n}\n\nexport default function DashboardWrapperClean({ \n  children, \n  user, \n  onLogout = () => {}, \n  currentPath = '',\n  hideSidebar = false,\n  allowCollapse = true\n}: DashboardWrapperCleanProps) {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  const handleCollapseToggle = () => {\n    setSidebarCollapsed(!sidebarCollapsed);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-bg-secondary\">\n      {!hideSidebar && (\n        <Sidebar \n          user={user}\n          onLogout={onLogout}\n          currentPath={currentPath}\n          isCollapsed={sidebarCollapsed}\n          onCollapseToggle={allowCollapse ? handleCollapseToggle : undefined}\n        />\n      )}\n      <main className={`flex-1 overflow-y-auto ${!hideSidebar ? 'transition-all duration-300 ease-in-out' : ''}`}>\n        <div className=\"p-6 space-y-6\">\n          {/* Main Content */}\n          <div className=\"space-y-6\">\n            {children}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n} ","'use client';\n\nimport React, { useState } from 'react';\nimport { Sidebar } from './sidebar';\n\ninterface DashboardWrapperColorfulProps {\n  children: React.ReactNode;\n  user?: any;\n  onLogout?: () => void;\n  currentPath?: string;\n  hideSidebar?: boolean;\n  allowCollapse?: boolean;\n}\n\nexport default function DashboardWrapperColorful({ \n  children, \n  user, \n  onLogout = () => {}, \n  currentPath = '',\n  hideSidebar = false,\n  allowCollapse = true\n}: DashboardWrapperColorfulProps) {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  const handleCollapseToggle = () => {\n    setSidebarCollapsed(!sidebarCollapsed);\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gradient-to-br from-brand-50 via-bg-primary to-brand-100\">\n      {!hideSidebar && (\n        <Sidebar \n          user={user}\n          onLogout={onLogout}\n          currentPath={currentPath}\n          isCollapsed={sidebarCollapsed}\n          onCollapseToggle={allowCollapse ? handleCollapseToggle : undefined}\n        />\n      )}\n      <main className={`flex-1 overflow-y-auto ${!hideSidebar ? 'transition-all duration-300 ease-in-out' : ''}`}>\n        <div className=\"p-8 space-y-8\">\n          {/* Enhanced Header */}\n          <div className=\"bg-gradient-to-r from-brand-500 to-action-primary rounded-2xl p-8 shadow-glow animate-fade-in\">\n            <h1 className=\"text-4xl font-display font-bold text-white mb-2\">\n              Welcome to RentalShop\n            </h1>\n            <p className=\"text-xl text-brand-100 font-medium\">\n              Your comprehensive rental management dashboard\n            </p>\n          </div>\n          \n          {/* Main Content with Enhanced Styling */}\n          <div className=\"space-y-6\">\n            {children}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n} ","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { Button } from '../ui/button';\n\ninterface TodaysFocusProps {\n  data: {\n    todayPickups: number;\n    todayReturns: number;\n    overdueCount: number;\n    activeRentals: number;\n  };\n}\n\nexport const TodaysFocus: React.FC<TodaysFocusProps> = ({ data }) => {\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Today's Operations</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-gray-400 text-sm\">\n                  📦\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900 text-sm\">Pickups Today</p>\n                  <p className=\"text-xs text-gray-400\">Items to be picked up</p>\n                </div>\n              </div>\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {data.todayPickups}\n              </Badge>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-gray-400 text-sm\">\n                  🔄\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900 text-sm\">Returns Today</p>\n                  <p className=\"text-xs text-gray-400\">Items to be returned</p>\n                </div>\n              </div>\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {data.todayReturns}\n              </Badge>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-gray-400 text-sm\">\n                  ⚠️\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900 text-sm\">Overdue Items</p>\n                  <p className=\"text-xs text-gray-400\">Past due date</p>\n                </div>\n              </div>\n              <Badge variant=\"destructive\" className=\"text-xs\">\n                {data.overdueCount}\n              </Badge>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-gray-100 last:border-b-0\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"text-gray-400 text-sm\">\n                  📊\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-900 text-sm\">Active Rentals</p>\n                  <p className=\"text-xs text-gray-400\">Currently rented out</p>\n                </div>\n              </div>\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {data.activeRentals}\n              </Badge>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      \n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            <Button className=\"w-full justify-start h-12 text-left\" variant=\"outline\">\n              <span className=\"mr-3\">📦</span>\n              <div className=\"flex-1 text-left\">\n                <div className=\"font-medium\">Process Pickup</div>\n                <div className=\"text-sm text-gray-500\">Mark items as picked up</div>\n              </div>\n            </Button>\n            \n            <Button className=\"w-full justify-start h-12 text-left\" variant=\"outline\">\n              <span className=\"mr-3\">🔄</span>\n              <div className=\"flex-1 text-left\">\n                <div className=\"font-medium\">Process Return</div>\n                <div className=\"text-sm text-gray-500\">Mark items as returned</div>\n              </div>\n            </Button>\n            \n            <Button className=\"w-full justify-start h-12 text-left\" variant=\"outline\">\n              <span className=\"mr-3\">⚠️</span>\n              <div className=\"flex-1 text-left\">\n                <div className=\"font-medium\">Handle Overdue</div>\n                <div className=\"text-sm text-gray-500\">Contact overdue customers</div>\n              </div>\n            </Button>\n            \n            <Button className=\"w-full justify-start h-12 text-left\" variant=\"outline\">\n              <span className=\"mr-3\">📞</span>\n              <div className=\"flex-1 text-left\">\n                <div className=\"font-medium\">Send Reminders</div>\n                <div className=\"text-sm text-gray-500\">Notify upcoming returns</div>\n              </div>\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\n\ninterface QuickActionCardProps {\n  title: string;\n  description: string;\n  icon: string;\n  href: string;\n  color: string;\n}\n\nconst QuickActionCard: React.FC<QuickActionCardProps> = ({\n  title,\n  description,\n  icon,\n  href,\n  color\n}) => (\n  <Card className=\"group relative overflow-hidden bg-white rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105 border-0\">\n    <div className={`absolute top-0 left-0 w-full h-1 bg-gradient-to-r ${color}`}></div>\n    <CardContent className=\"p-6\">\n      <a href={href} className=\"block\">\n        <div className=\"flex items-center space-x-4\">\n          <div className={`w-16 h-16 rounded-xl bg-gradient-to-br ${color} text-white text-3xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-shadow`}>\n            {icon}\n          </div>\n          <div className=\"flex-1\">\n            <h3 className=\"font-bold text-gray-900 text-lg mb-2 group-hover:text-blue-700 transition-colors\">\n              {title}\n            </h3>\n            <p className=\"text-gray-600 font-medium\">{description}</p>\n          </div>\n          <div className=\"text-gray-400 group-hover:text-blue-500 transition-colors\">\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n            </svg>\n          </div>\n        </div>\n      </a>\n    </CardContent>\n  </Card>\n);\n\nexport const ColorfulQuickActions: React.FC = () => {\n  const quickActions = [\n    {\n      title: 'New Rental',\n      description: 'Create rental order',\n      icon: '📦',\n      href: '/orders/new',\n      color: 'from-blue-500 to-blue-700'\n    },\n    {\n      title: 'Return Item',\n      description: 'Process returns',\n      icon: '🔄',\n      href: '/orders/returns',\n      color: 'from-blue-600 to-blue-700'\n    },\n    {\n      title: 'Add Product',\n      description: 'Add new item',\n      icon: '➕',\n      href: '/products/new',\n      color: 'from-purple-500 to-purple-600'\n    },\n    {\n      title: 'Customer Search',\n      description: 'Find customers',\n      icon: '👥',\n      href: '/customers',\n      color: 'from-orange-500 to-orange-600'\n    }\n  ];\n\n  return (\n    <div className=\"mb-8\">\n      <Card className=\"border-0 shadow-lg bg-gradient-to-br from-white to-gray-50\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-800\">Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {quickActions.map((action, index) => (\n              <QuickActionCard key={index} {...action} />\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { Button } from '../ui/button';\n\ninterface TodaysFocusProps {\n  data: {\n    todayPickups: number;\n    todayReturns: number;\n    overdueCount: number;\n    activeRentals: number;\n  };\n}\n\nexport const ColorfulTodaysFocus: React.FC<TodaysFocusProps> = ({ data }) => {\n  const operations = [\n    {\n      title: 'Pickups Today',\n      description: 'Items to be picked up',\n      icon: '📦',\n      value: data.todayPickups,\n      color: 'from-blue-500 to-blue-700',\n      bgColor: 'bg-blue-50',\n      textColor: 'text-blue-700'\n    },\n    {\n      title: 'Returns Today',\n      description: 'Items to be returned',\n      icon: '🔄',\n      value: data.todayReturns,\n      color: 'from-blue-600 to-blue-700',\n      bgColor: 'bg-green-50',\n      textColor: 'text-green-600'\n    },\n    {\n      title: 'Overdue Items',\n      description: 'Past due date',\n      icon: '⚠️',\n      value: data.overdueCount,\n      color: 'from-red-500 to-red-600',\n      bgColor: 'bg-red-50',\n      textColor: 'text-red-600'\n    },\n    {\n      title: 'Active Rentals',\n      description: 'Currently rented out',\n      icon: '📊',\n      value: data.activeRentals,\n      color: 'from-purple-500 to-purple-600',\n      bgColor: 'bg-purple-50',\n      textColor: 'text-purple-600'\n    }\n  ];\n\n  const quickActions = [\n    {\n      title: 'Process Pickup',\n      description: 'Mark items as picked up',\n      icon: '📦',\n      color: 'from-blue-500 to-blue-700'\n    },\n    {\n      title: 'Process Return',\n      description: 'Mark items as returned',\n      icon: '🔄',\n      color: 'from-blue-600 to-blue-700'\n    },\n    {\n      title: 'Handle Overdue',\n      description: 'Contact overdue customers',\n      icon: '⚠️',\n      color: 'from-red-500 to-red-600'\n    },\n    {\n      title: 'Send Reminders',\n      description: 'Notify upcoming returns',\n      icon: '📞',\n      color: 'from-purple-500 to-purple-600'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n      <Card className=\"border-0 shadow-lg bg-gradient-to-br from-white to-gray-50\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-800\">Today's Operations</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {operations.map((operation, index) => (\n              <div key={index} className=\"group relative overflow-hidden bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:scale-105 border border-gray-100\">\n                <div className={`absolute top-0 left-0 w-1 h-full bg-gradient-to-b ${operation.color}`}></div>\n                <div className=\"p-6\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className={`w-14 h-14 rounded-xl bg-gradient-to-br ${operation.color} text-white text-2xl flex items-center justify-center shadow-lg`}>\n                        {operation.icon}\n                      </div>\n                      <div>\n                        <p className=\"font-bold text-gray-900 text-lg\">{operation.title}</p>\n                        <p className=\"text-gray-600 font-medium\">{operation.description}</p>\n                      </div>\n                    </div>\n                    <Badge variant=\"outline\" className={`text-lg font-bold px-4 py-2 ${operation.textColor} border-2`}>\n                      {operation.value}\n                    </Badge>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n      \n      <Card className=\"border-0 shadow-lg bg-gradient-to-br from-white to-gray-50\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-xl font-bold text-gray-800\">Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {quickActions.map((action, index) => (\n              <Button \n                key={index}\n                className=\"w-full justify-start h-16 text-left group relative overflow-hidden bg-white hover:bg-gray-50 border border-gray-200 hover:border-gray-300 transition-all duration-300 transform hover:scale-105 shadow-md hover:shadow-lg\" \n                variant=\"outline\"\n              >\n                <div className={`absolute top-0 left-0 w-1 h-full bg-gradient-to-b ${action.color}`}></div>\n                <span className=\"mr-4 text-2xl\">{action.icon}</span>\n                <div className=\"flex-1 text-left\">\n                  <div className=\"font-bold text-gray-900 text-lg\">{action.title}</div>\n                  <div className=\"text-gray-600 font-medium\">{action.description}</div>\n                </div>\n              </Button>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\n\ninterface QuickActionCardProps {\n  title: string;\n  description: string;\n  icon: string;\n  href: string;\n  color: string;\n}\n\nconst QuickActionCard: React.FC<QuickActionCardProps> = ({\n  title,\n  description,\n  icon,\n  href,\n  color\n}) => (\n  <Card className=\"border-0 shadow-sm hover:shadow-md transition-shadow cursor-pointer\">\n    <CardContent className=\"p-3\">\n      <a href={href} className=\"block\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"text-gray-500 text-base\">\n            {icon}\n          </div>\n          <div className=\"flex-1\">\n            <h3 className=\"font-medium text-gray-900 text-sm\">{title}</h3>\n            <p className=\"text-xs text-gray-400\">{description}</p>\n          </div>\n          <div className=\"text-gray-300\">\n            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n            </svg>\n          </div>\n        </div>\n      </a>\n    </CardContent>\n  </Card>\n);\n\nexport const QuickActionsGrid: React.FC = () => {\n  const quickActions = [\n    {\n      title: 'New Rental',\n      description: 'Create rental order',\n      icon: '📦',\n      href: '/orders/new',\n      color: 'bg-blue-500'\n    },\n    {\n      title: 'Return Item',\n      description: 'Process returns',\n      icon: '🔄',\n      href: '/orders/returns',\n      color: 'bg-green-500'\n    },\n    {\n      title: 'Add Product',\n      description: 'Add new item',\n      icon: '➕',\n      href: '/products/new',\n      color: 'bg-purple-500'\n    },\n    {\n      title: 'Customer Search',\n      description: 'Find customers',\n      icon: '👥',\n      href: '/customers',\n      color: 'bg-orange-500'\n    }\n  ];\n\n  return (\n    <div className=\"mb-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Quick Actions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {quickActions.map((action, index) => (\n              <QuickActionCard key={index} {...action} />\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}; ","'use client';\n\nimport React, { useEffect } from 'react';\nimport { Search, X } from 'lucide-react';\nimport { cn } from '@rentalshop/ui';\nimport { Button } from '@rentalshop/ui';\nimport { useThrottledSearch } from '@rentalshop/hooks';\n\nexport interface SearchInputProps {\n  placeholder?: string;\n  delay?: number;\n  minLength?: number;\n  onSearch: (query: string) => void;\n  className?: string;\n  disabled?: boolean;\n  defaultValue?: string;\n}\n\nexport const SearchInput: React.FC<SearchInputProps> = ({\n  placeholder = 'Search...',\n  delay = 500,\n  minLength = 2,\n  onSearch,\n  className,\n  disabled = false,\n  defaultValue = ''\n}) => {\n  const {\n    query,\n    isSearching,\n    handleSearchChange,\n    clearSearch,\n    cleanup\n  } = useThrottledSearch({\n    delay,\n    minLength,\n    onSearch\n  });\n\n  // Set default value\n  useEffect(() => {\n    if (defaultValue && !query) {\n      handleSearchChange(defaultValue);\n    }\n  }, [defaultValue, query, handleSearchChange]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return cleanup;\n  }, [cleanup]);\n\n  return (\n    <div className={cn('relative', className)}>\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => handleSearchChange(e.target.value)}\n          placeholder={placeholder}\n          disabled={disabled}\n          className={cn(\n            'w-full pl-10 pr-10 py-2 border border-gray-300 rounded-lg',\n            'focus:ring-2 focus:ring-blue-500 focus:border-blue-500',\n            'disabled:bg-gray-100 disabled:cursor-not-allowed',\n            'transition-colors duration-200'\n          )}\n        />\n        {query && (\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={clearSearch}\n            type=\"button\"\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-6 w-6 p-0\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        )}\n      </div>\n      {isSearching && (\n        <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-700\"></div>\n        </div>\n      )}\n    </div>\n  );\n}; ","'use client'\n\nimport { useState } from 'react'\nimport { \n  Home, \n  Store, \n  Users, \n  Settings, \n  User, \n  LogOut, \n  Menu, \n  X,\n  ChevronLeft,\n  ChevronRight,\n  Tag,\n  ShoppingCart,\n  Building2\n} from 'lucide-react'\nimport { Button } from '@rentalshop/ui'\n\ninterface NavigationProps {\n  variant?: 'client' | 'admin'\n  currentPage?: string\n  hideSidebar?: boolean\n  allowCollapse?: boolean\n  onCollapseToggle?: () => void\n  isCollapsed?: boolean\n  userRole?: string // Add user role for filtering navigation\n}\n\nexport function Navigation({ \n  variant = 'client', \n  currentPage,\n  hideSidebar = false,\n  allowCollapse = true,\n  onCollapseToggle,\n  isCollapsed = false,\n  userRole\n}: NavigationProps) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const clientNavItems = [\n    { href: '/dashboard', label: 'Dashboard', icon: Home },\n    { href: '/products', label: 'Products', icon: Store },\n    { href: '/customers', label: 'Customers', icon: Users },\n    { href: '/orders', label: 'Orders', icon: Store },\n    { href: '/settings', label: 'Settings', icon: Settings },\n  ]\n\n  const adminNavItems = [\n    { href: '/dashboard', label: 'Dashboard', icon: Home },\n    { href: '/users', label: 'Users', icon: Users },\n    { href: '/outlets', label: 'Outlets', icon: Building2 },\n    { href: '/products', label: 'Products', icon: Store },\n    { href: '/categories', label: 'Categories', icon: Tag },\n    { href: '/orders', label: 'Orders', icon: ShoppingCart },\n    { href: '/settings', label: 'Settings', icon: Settings },\n  ]\n\n  // Filter nav items based on user role\n  const filterNavItemsByRole = (items: typeof adminNavItems, userRole?: string) => {\n    if (!userRole) return items;\n    \n    // Hide specific tabs based on user role\n    if (userRole === 'OUTLET_ADMIN') {\n      // OUTLET_ADMIN can see users but not outlets, subscriptions, plans, payments\n      return items.filter(item => \n        item.href !== '/outlets' && \n        item.href !== '/subscriptions' && \n        item.href !== '/plans' && \n        item.href !== '/payments'\n      );\n    } else if (userRole === 'OUTLET_STAFF') {\n      // OUTLET_STAFF cannot see users, outlets, subscriptions, plans, payments (limited permissions)\n      return items.filter(item => \n        item.href !== '/users' && \n        item.href !== '/outlets' && \n        item.href !== '/subscriptions' && \n        item.href !== '/plans' && \n        item.href !== '/payments'\n      );\n    }\n    \n    return items;\n  };\n\n  const navItems = variant === 'admin' \n    ? filterNavItemsByRole(adminNavItems, userRole) \n    : clientNavItems\n\n  return (\n    <nav className=\"bg-nav-background text-nav-tint shadow-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-brand-primary rounded-lg flex items-center justify-center\">\n                <Store className=\"w-5 h-5 text-white\" />\n              </div>\n            </div>\n            {!hideSidebar && (\n              <div className=\"hidden md:block ml-10\">\n                <div className=\"flex items-baseline space-x-4\">\n                  {navItems.map((item) => {\n                    const Icon = item.icon\n                    return (\n                      <a\n                        key={item.href}\n                        href={item.href}\n                        className={`px-3 py-2 rounded-md text-sm font-medium flex items-center transition-colors ${\n                          currentPage === item.href\n                            ? 'bg-brand-secondary text-white'\n                            : 'text-nav-tint hover:text-gray-300'\n                        }`}\n                      >\n                        <Icon className=\"w-4 h-4 mr-2\" />\n                        {!isCollapsed && item.label}\n                      </a>\n                    )\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            {!hideSidebar && allowCollapse && onCollapseToggle && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onCollapseToggle}\n                className=\"text-nav-tint hover:text-gray-300\"\n                title={isCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n              >\n                {isCollapsed ? (\n                  <ChevronRight className=\"w-4 h-4\" />\n                ) : (\n                  <ChevronLeft className=\"w-4 h-4\" />\n                )}\n              </Button>\n            )}\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-nav-tint hover:text-gray-300\">\n              <User className=\"w-4 h-4 mr-2\" />\n              {!isCollapsed && 'Profile'}\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-nav-tint hover:text-gray-300\">\n              <LogOut className=\"w-4 h-4 mr-2\" />\n              {!isCollapsed && 'Logout'}\n            </Button>\n            {!hideSidebar && (\n              <div className=\"md:hidden\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setIsOpen(!isOpen)}\n                  className=\"text-nav-tint hover:text-gray-300\"\n                >\n                  {isOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* Mobile menu */}\n      {!hideSidebar && isOpen && (\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            {navItems.map((item) => {\n              const Icon = item.icon\n              return (\n                <a\n                  key={item.href}\n                  href={item.href}\n                  className={`block px-3 py-2 rounded-md text-base font-medium flex items-center ${\n                    currentPage === item.href\n                      ? 'bg-brand-secondary text-white'\n                      : 'text-nav-tint hover:text-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4 mr-2\" />\n                  {item.label}\n                </a>\n              )\n            })}\n          </div>\n        </div>\n      )}\n    </nav>\n  )\n} ","'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { cn } from '@rentalshop/ui';\nimport { Button } from '@rentalshop/ui';\nimport { \n  ChevronLeft, \n  ChevronRight, \n  Home, \n  Users, \n  Package, \n  ShoppingCart, \n  Building2, \n  Settings,\n  CreditCard,\n  Calendar,\n  Clock,\n  Database,\n  ShieldCheck,\n  FileText,\n  Store,\n  LogOut,\n  User,\n  Bell\n} from 'lucide-react';\n\nexport interface AdminSidebarProps {\n  user?: any;\n  isOpen?: boolean;\n  onToggle?: () => void;\n  onLogout?: () => void;\n  currentPath?: string;\n  isCollapsed?: boolean;\n  onCollapseToggle?: () => void;\n  notificationsCount?: number;\n}\n\ninterface MenuItem {\n  label: string;\n  href: string;\n  icon: React.ComponentType<{ className?: string }>;\n  badge?: string;\n  subItems?: MenuItem[];\n}\n\nconst adminMenuItems: MenuItem[] = [\n  {\n    label: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n  },\n  {\n    label: 'Merchants',\n    href: '/merchants',\n    icon: Building2,\n  },\n  {\n    label: 'Plans',\n    href: '/plans',\n    icon: Package,\n  },\n  {\n    label: 'Subscriptions',\n    href: '/subscriptions',\n    icon: Clock,\n  },\n  {\n    label: 'Payments',\n    href: '/payments',\n    icon: CreditCard,\n  },\n  {\n    label: 'Users',\n    href: '/users',\n    icon: Users,\n  },\n  {\n    label: 'System',\n    href: '/system',\n    icon: Settings,\n    subItems: [\n      { \n        label: 'Backup Management', \n        href: '/system/backup', \n        icon: Database \n      },\n      { \n        label: 'Data Integrity', \n        href: '/system/integrity', \n        icon: ShieldCheck \n      },\n      { \n        label: 'Audit Logs', \n        href: '/system/audit-logs', \n        icon: FileText \n      }\n    ]\n  }\n];\n\nexport const AdminSidebar: React.FC<AdminSidebarProps> = ({\n  user,\n  isOpen = true,\n  onToggle,\n  onLogout,\n  currentPath = '',\n  isCollapsed = false,\n  onCollapseToggle,\n  notificationsCount = 0\n}) => {\n  const [expandedItems, setExpandedItems] = useState<string[]>([]);\n  const pathname = usePathname();\n\n  const toggleExpanded = (href: string) => {\n    setExpandedItems(prev => \n      prev.includes(href) \n        ? prev.filter(item => item !== href)\n        : [...prev, href]\n    );\n  };\n\n  const isActive = (href: string) => {\n    if (href === '/dashboard') {\n      return pathname === '/dashboard';\n    }\n    return pathname.startsWith(href);\n  };\n\n  const renderMenuItem = (item: MenuItem, level = 0) => {\n    const hasSubItems = item.subItems && item.subItems.length > 0;\n    const isExpanded = expandedItems.includes(item.href);\n    const active = isActive(item.href);\n    const Icon = item.icon;\n\n    return (\n      <div key={item.href}>\n        {hasSubItems ? (\n          <Button\n            variant=\"ghost\"\n            onClick={() => toggleExpanded(item.href)}\n            className={cn(\n              'flex items-center justify-between w-full px-3 py-2.5 text-sm font-normal rounded-lg transition-all duration-150 ease-out h-auto',\n              active \n                ? 'text-blue-700 font-medium' \n                : 'text-text-primary hover:text-blue-700 hover:bg-bg-secondary'\n            )}\n          >\n            <div className=\"flex items-center gap-2\">\n              <Icon className={cn(\n                'w-4 h-4',\n                active ? 'text-blue-700' : 'text-text-secondary'\n              )} />\n              {!isCollapsed && (\n                <span>{item.label}</span>\n              )}\n            </div>\n            {!isCollapsed && (\n              <ChevronRight className={cn(\n                'w-4 h-4 transition-transform duration-200',\n                isExpanded ? 'rotate-90' : ''\n              )} />\n            )}\n          </Button>\n        ) : (\n          <Link\n            href={item.href}\n            className={cn(\n              'flex items-center justify-between px-3 py-2.5 text-sm font-normal rounded-lg transition-all duration-150 ease-out',\n              active \n                ? 'text-blue-700 font-medium' \n                : 'text-text-primary hover:text-blue-700 hover:bg-bg-secondary'\n            )}\n          >\n            <div className=\"flex items-center gap-2\">\n              <Icon className={cn(\n                'w-4 h-4',\n                active ? 'text-blue-700' : 'text-text-secondary'\n              )} />\n              {!isCollapsed && (\n                <span>{item.label}</span>\n              )}\n            </div>\n            {!isCollapsed && item.badge && (\n              <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-500 rounded-full\">\n                {item.badge}\n              </span>\n            )}\n          </Link>\n        )}\n\n        {/* Sub Items */}\n        {hasSubItems && isExpanded && !isCollapsed && (\n          <div className=\"ml-6 mt-1 space-y-1\">\n            {item.subItems?.map((subItem) => {\n              const SubIcon = subItem.icon;\n              const subActive = isActive(subItem.href);\n              \n              return (\n                <Link\n                  key={subItem.href}\n                  href={subItem.href}\n                  className={cn(\n                    'flex items-center gap-2 px-4 py-2 text-sm font-normal rounded-lg transition-colors',\n                    subActive ? 'text-blue-700 font-medium' : 'text-text-primary hover:text-blue-700 hover:bg-bg-secondary'\n                  )}\n                >\n                  <SubIcon className=\"w-4 h-4\" />\n                  <span>{subItem.label}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className={cn(\n      'flex flex-col h-full bg-bg-card border-r border-border shadow-sm transition-all duration-300',\n      isCollapsed ? 'w-16' : 'w-64'\n    )}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        {!isCollapsed && (\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-brand-primary to-brand-secondary rounded-lg flex items-center justify-center shadow-sm\">\n              <Store className=\"w-5 h-5 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-lg font-semibold text-text-primary\">RentalShop</h1>\n              <p className=\"text-xs text-text-secondary\">Admin</p>\n            </div>\n          </div>\n        )}\n        \n        {isCollapsed && (\n          <div className=\"w-8 h-8 bg-gradient-to-br from-brand-primary to-brand-secondary rounded-lg flex items-center justify-center mx-auto shadow-sm\">\n            <Store className=\"w-5 h-5 text-white\" />\n          </div>\n        )}\n\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={onCollapseToggle}\n          className=\"h-8 w-8 text-text-tertiary hover:text-text-primary\"\n        >\n          {isCollapsed ? (\n            <ChevronRight className=\"h-4 w-4\" />\n          ) : (\n            <ChevronLeft className=\"h-4 w-4\" />\n          )}\n        </Button>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-4 py-6 space-y-2 overflow-y-auto\">\n        {adminMenuItems.map((item) => renderMenuItem(item))}\n      </nav>\n\n      {/* User Profile & Actions */}\n      <div className=\"p-4 border-t border-border\">\n        {user && !isCollapsed && (\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-600 rounded-full flex items-center justify-center\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-text-primary truncate\">\n                {user.name || user.email}\n              </p>\n              <p className=\"text-xs text-text-tertiary truncate\">\n                {user.role}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {user && isCollapsed && (\n          <div className=\"flex flex-col items-center space-y-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-600 rounded-full flex items-center justify-center\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n          </div>\n        )}\n\n        {onLogout && (\n          <Button\n            variant=\"ghost\"\n            onClick={onLogout}\n            className={cn(\n              'w-full justify-start text-text-secondary hover:text-text-primary hover:bg-bg-secondary text-sm font-normal',\n              isCollapsed && 'justify-center px-2'\n            )}\n          >\n            <LogOut className=\"w-4 h-4\" />\n            {!isCollapsed && <span className=\"ml-2\">Logout</span>}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { cn } from '@rentalshop/ui';\nimport { Button } from '@rentalshop/ui';\nimport { LanguageSwitcher } from './LanguageSwitcher';\nimport { useCommonTranslations } from '@rentalshop/hooks';\nimport { \n  ChevronLeft, \n  ChevronRight, \n  Home, \n  Users, \n  Package, \n  ShoppingCart, \n  Building2, \n  Settings,\n  Calendar,\n  Tag,\n  User,\n  Store,\n  LogOut,\n  Bell,\n  ChevronDown\n} from 'lucide-react';\n\nexport interface ClientSidebarProps {\n  user?: any;\n  isOpen?: boolean;\n  onToggle?: () => void;\n  onLogout?: () => void;\n  currentPath?: string;\n  isCollapsed?: boolean;\n  onCollapseToggle?: () => void;\n  notificationsCount?: number;\n  cartItemsCount?: number;\n  onNavigate?: (href: string) => void;\n  onPrefetch?: (href: string) => void;\n}\n\ninterface MenuItem {\n  label: string;\n  href: string;\n  icon: React.ComponentType<{ className?: string }>;\n  badge?: string;\n  subItems?: MenuItem[];\n}\n\n// Function to get menu items with translations\nconst getClientMenuItems = (t: any): MenuItem[] => [\n  {\n    label: t('navigation.dashboard'),\n    href: '/dashboard',\n    icon: Home,\n  },\n  {\n    label: t('navigation.orders'),\n    href: '/orders',\n    icon: ShoppingCart,\n  },\n  {\n    label: t('navigation.products'),\n    href: '/products',\n    icon: Package,\n    subItems: [\n      { \n        label: t('navigation.allProducts'), \n        href: '/products', \n        icon: Package \n      },\n      { \n        label: t('navigation.categories'), \n        href: '/categories', \n        icon: Tag \n      }\n    ]\n  },\n  {\n    label: t('navigation.customers'),\n    href: '/customers',\n    icon: Users,\n  },\n  {\n    label: t('navigation.users'),\n    href: '/users',\n    icon: User,\n  },\n  {\n    label: t('navigation.outlets'),\n    href: '/outlets',\n    icon: Building2,\n  },\n  {\n    label: t('navigation.calendar'),\n    href: '/calendar',\n    icon: Calendar,\n  },\n  {\n    label: t('navigation.settings'),\n    href: '/settings',\n    icon: Settings,\n  }\n];\n\nexport const ClientSidebar: React.FC<ClientSidebarProps> = ({\n  user,\n  isOpen = true,\n  onToggle,\n  onLogout,\n  currentPath = '',\n  isCollapsed = false,\n  onCollapseToggle,\n  notificationsCount = 0,\n  cartItemsCount = 0,\n  onNavigate,\n  onPrefetch\n}) => {\n  const [expandedItems, setExpandedItems] = useState<string[]>([]);\n  const [hoveredTab, setHoveredTab] = useState<string | null>(null);\n  const [clickedTab, setClickedTab] = useState<string | null>(null);\n  const [localCurrentPage, setLocalCurrentPage] = useState(currentPath);\n  const [isNavigating, setIsNavigating] = useState<string | null>(null);\n  const pathname = usePathname();\n  \n  // Get translations\n  const t = useCommonTranslations();\n\n  // Filter menu items based on user role\n  const filterMenuItemsByRole = (items: MenuItem[], userRole?: string) => {\n    if (!userRole) return items;\n    \n    // Hide specific tabs based on user role\n    if (userRole === 'OUTLET_ADMIN') {\n      // OUTLET_ADMIN can see users but not outlets, subscriptions, plans, payments\n      return items.filter(item => \n        item.href !== '/outlets' && \n        item.href !== '/subscriptions' && \n        item.href !== '/plans' && \n        item.href !== '/payments'\n      );\n    } else if (userRole === 'OUTLET_STAFF') {\n      // OUTLET_STAFF cannot see users, outlets, subscriptions, plans, payments (limited permissions)\n      return items.filter(item => \n        item.href !== '/users' && \n        item.href !== '/outlets' && \n        item.href !== '/subscriptions' && \n        item.href !== '/plans' && \n        item.href !== '/payments'\n      );\n    }\n    \n    return items;\n  };\n\n  const menuItems = filterMenuItemsByRole(getClientMenuItems(t), user?.role);\n\n  // Update local state when prop changes - prioritize pathname for immediate updates\n  useEffect(() => {\n    const actualPath = pathname || currentPath;\n    setLocalCurrentPage(actualPath);\n    // Clear navigation state when path actually changes\n    if (isNavigating && actualPath !== isNavigating) {\n      setIsNavigating(null);\n    }\n  }, [pathname, currentPath, isNavigating]);\n\n  // AGGRESSIVE PREFETCHING: Prefetch all pages on mount for instant navigation\n  useEffect(() => {\n    if (onPrefetch) {\n      menuItems.forEach(item => {\n        onPrefetch(item.href);\n      });\n    }\n  }, [menuItems, onPrefetch]);\n\n  // Close submenu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      const isClickingNavItem = target.closest('.nav-item');\n      const isClickingSubmenu = target.closest('[data-submenu]');\n      \n      if (expandedItems.length > 0 && !isClickingNavItem && !isClickingSubmenu) {\n        setExpandedItems([]);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [expandedItems]);\n\n  const toggleExpanded = (href: string) => {\n    setExpandedItems(prev => \n      prev.includes(href) \n        ? prev.filter(item => item !== href)\n        : [...prev, href]\n    );\n  };\n\n  const isActive = (href: string) => {\n    // Use pathname as primary source for immediate feedback, fallback to localCurrentPage\n    const currentPathToCheck = pathname || localCurrentPage;\n    if (href === '/dashboard') {\n      return currentPathToCheck === '/dashboard';\n    }\n    return currentPathToCheck.startsWith(href);\n  };\n\n  const handleTabClick = (href: string) => {\n    // OPTIMISTIC UI UPDATE: Immediately set navigation state for instant visual feedback\n    setIsNavigating(href);\n    setLocalCurrentPage(href);\n    \n    // Set clicked state for immediate visual feedback\n    setClickedTab(href);\n    \n    // Clear clicked state quickly for responsive feel\n    setTimeout(() => setClickedTab(null), 150);\n    \n    // Navigate asynchronously - don't block UI updates\n    if (onNavigate) {\n      // Use requestAnimationFrame to ensure state updates render first\n      requestAnimationFrame(() => {\n        onNavigate(href);\n      });\n    }\n  };\n\n  const handleTabHover = (href: string) => {\n    setHoveredTab(href);\n    if (onPrefetch) {\n      onPrefetch(href);\n    }\n  };\n\n\n  const renderMenuItem = (item: MenuItem, level = 0) => {\n    const hasSubItems = item.subItems && item.subItems.length > 0;\n    const isExpanded = expandedItems.includes(item.href);\n    const active = isActive(item.href);\n    const isHovered = hoveredTab === item.href;\n    const isNavigatingTo = isNavigating === item.href;\n    const isClicked = clickedTab === item.href;\n    const Icon = item.icon;\n    \n    // Combined state for immediate visual feedback\n    const shouldHighlight = active || isNavigatingTo;\n\n    return (\n      <div key={item.href} className=\"relative\">\n        {hasSubItems ? (\n          <Button\n            variant=\"ghost\"\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              toggleExpanded(item.href);\n            }}\n            onMouseEnter={() => handleTabHover(item.href)}\n            onMouseLeave={() => setHoveredTab(null)}\n            className={cn(\n              'nav-item flex items-center justify-between w-full px-3 py-2.5 text-sm font-normal rounded-lg relative',\n              shouldHighlight\n                ? 'nav-item-active text-blue-700 font-medium bg-blue-50/80' \n                : 'text-text-primary hover:text-blue-700 hover:bg-bg-secondary',\n              isHovered && !shouldHighlight ? 'hover:shadow-sm' : '',\n              isClicked ? 'scale-[0.98] transform' : '',\n              isNavigatingTo ? 'nav-item-loading ring-1 ring-blue-200/50' : ''\n            )}\n          >\n            <div className=\"flex items-center gap-2\">\n              <Icon className={cn(\n                'w-4 h-4 transition-colors duration-100',\n                shouldHighlight ? 'text-blue-700' : 'text-text-secondary'\n              )} />\n              {!isCollapsed && (\n                <span>{item.label}</span>\n              )}\n            </div>\n            {!isCollapsed && (\n              <ChevronDown className={cn(\n                'w-4 h-4 transition-transform duration-200',\n                isExpanded ? 'rotate-180' : ''\n              )} />\n            )}\n            \n            {/* Hover effect - only show when not currently active/navigating */}\n            {isHovered && !shouldHighlight && (\n              <div className=\"absolute inset-0 bg-bg-secondary/50 rounded-lg transition-all duration-100\"></div>\n            )}\n            \n            {/* Navigation indicator */}\n            {isNavigatingTo && (\n              <div className=\"absolute inset-0 bg-blue-50/30 rounded-lg animate-pulse transition-all duration-100\"></div>\n            )}\n          </Button>\n        ) : (\n          <Button\n            variant=\"ghost\"\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              handleTabClick(item.href);\n            }}\n            onMouseEnter={() => handleTabHover(item.href)}\n            onMouseLeave={() => setHoveredTab(null)}\n            className={cn(\n              'nav-item flex items-center justify-between w-full px-3 py-2.5 text-sm font-normal rounded-lg relative',\n              shouldHighlight\n                ? 'nav-item-active text-blue-700 font-medium bg-blue-50/80' \n                : 'text-text-primary hover:text-blue-700 hover:bg-bg-secondary',\n              isHovered && !shouldHighlight ? 'hover:shadow-sm' : '',\n              isClicked ? 'scale-[0.98] transform' : '',\n              isNavigatingTo ? 'nav-item-loading ring-1 ring-blue-200/50' : ''\n            )}\n          >\n            <div className=\"flex items-center gap-2\">\n              <Icon className={cn(\n                'w-4 h-4 transition-colors duration-100',\n                shouldHighlight ? 'text-blue-700' : 'text-text-secondary'\n              )} />\n              {!isCollapsed && (\n                <span>{item.label}</span>\n              )}\n            </div>\n            {!isCollapsed && item.badge && (\n              <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-500 rounded-full\">\n                {item.badge}\n              </span>\n            )}\n            \n            {/* Hover effect - only show when not currently active/navigating */}\n            {isHovered && !shouldHighlight && (\n              <div className=\"absolute inset-0 bg-bg-secondary/50 rounded-lg transition-all duration-100\"></div>\n            )}\n            \n            {/* Navigation indicator */}\n            {isNavigatingTo && (\n              <div className=\"absolute inset-0 bg-blue-50/30 rounded-lg animate-pulse transition-all duration-100\"></div>\n            )}\n          </Button>\n        )}\n\n        {/* Sub Items */}\n        {hasSubItems && isExpanded && !isCollapsed && (\n          <div className=\"ml-6 mt-1 space-y-1\" data-submenu=\"true\">\n            {item.subItems?.map((subItem) => {\n              const SubIcon = subItem.icon;\n              const subActive = isActive(subItem.href);\n              const subNavigating = isNavigating === subItem.href;\n              const subClicked = clickedTab === subItem.href;\n              const subShouldHighlight = subActive || subNavigating;\n              \n              return (\n                <Button\n                  variant=\"ghost\"\n                  key={subItem.href}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    handleTabClick(subItem.href);\n                    // Add small delay before closing submenu to ensure navigation processes\n                    setTimeout(() => {\n                      setExpandedItems([]);\n                    }, 50); // Reduced delay for faster response\n                  }}\n                  className={cn(\n                    'w-full text-left px-4 py-2 text-sm font-normal flex items-center gap-2 hover:bg-bg-secondary transition-all duration-100 rounded-lg justify-start h-auto will-change-transform',\n                    subShouldHighlight ? 'text-blue-700 font-medium bg-blue-50/80' : 'text-text-primary hover:text-blue-700',\n                    subClicked ? 'scale-[0.99] transform' : '',\n                    subNavigating ? 'ring-1 ring-blue-200/50' : ''\n                  )}\n                >\n                  <SubIcon className={cn(\n                    'w-4 h-4 transition-colors duration-100',\n                    subShouldHighlight ? 'text-blue-700' : 'text-text-secondary'\n                  )} />\n                  {subItem.label}\n                  {subNavigating && (\n                    <div className=\"absolute inset-0 bg-blue-50/20 rounded-lg transition-all duration-100\"></div>\n                  )}\n                </Button>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className={cn(\n      'flex flex-col h-full bg-bg-card border-r border-border shadow-sm transition-all duration-300',\n      isCollapsed ? 'w-16' : 'w-64'\n    )}>\n      {/* Hidden Link components for Next.js automatic prefetching */}\n      <div className=\"hidden\">\n        {menuItems.map(item => (\n          <Link key={item.href} href={item.href} />\n        ))}\n      </div>\n\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        {!isCollapsed && (\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-700 to-blue-500 rounded-lg flex items-center justify-center shadow-sm\">\n              <Building2 className=\"w-5 h-5 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-lg font-semibold text-text-primary\">RentalShop</h1>\n            </div>\n          </div>\n        )}\n        \n        {isCollapsed && (\n          <div className=\"w-8 h-8 bg-gradient-to-br from-blue-700 to-blue-500 rounded-lg flex items-center justify-center mx-auto shadow-sm\">\n            <Building2 className=\"w-5 h-5 text-white\" />\n          </div>\n        )}\n\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={onCollapseToggle}\n          className=\"h-8 w-8 text-text-tertiary hover:text-text-primary\"\n        >\n          {isCollapsed ? (\n            <ChevronRight className=\"h-4 w-4\" />\n          ) : (\n            <ChevronLeft className=\"h-4 w-4\" />\n          )}\n        </Button>\n      </div>\n\n\n      {/* Navigation */}\n      <nav className=\"flex-1 px-4 py-6 space-y-2 overflow-y-auto\">\n        {menuItems.map((item) => renderMenuItem(item))}\n      </nav>\n\n      {/* User Profile & Actions */}\n      <div className=\"p-4 border-t border-border\">\n        {user && !isCollapsed && (\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-600 rounded-full flex items-center justify-center\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-text-primary truncate\">\n                {user.name || user.email}\n              </p>\n              <p className=\"text-xs text-text-tertiary truncate\">\n                {user.role}\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              {cartItemsCount > 0 && (\n                <div className=\"relative\">\n                  <ShoppingCart className=\"w-4 h-4 text-text-tertiary\" />\n                  <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-action-primary rounded-full text-xs text-white flex items-center justify-center\">\n                    {cartItemsCount}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {user && isCollapsed && (\n          <div className=\"flex flex-col items-center space-y-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-gray-400 to-gray-600 rounded-full flex items-center justify-center\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              {notificationsCount > 0 && (\n                <div className=\"relative\">\n                  <Bell className=\"w-4 h-4 text-text-tertiary\" />\n                  <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-action-danger rounded-full text-xs text-white flex items-center justify-center\">\n                    {notificationsCount}\n                  </span>\n                </div>\n              )}\n              {cartItemsCount > 0 && (\n                <div className=\"relative\">\n                  <ShoppingCart className=\"w-4 h-4 text-text-tertiary\" />\n                  <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-action-primary rounded-full text-xs text-white flex items-center justify-center\">\n                    {cartItemsCount}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {onLogout && (\n          <Button\n            variant=\"ghost\"\n            onClick={onLogout}\n            className={cn(\n              'w-full justify-start text-text-secondary hover:text-text-primary hover:bg-bg-secondary text-sm font-normal',\n              isCollapsed && 'justify-center px-2'\n            )}\n          >\n            <LogOut className=\"w-4 h-4\" />\n            {!isCollapsed && <span className=\"ml-2\">{t('navigation.logout')}</span>}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n","'use client'\n\nimport { useState } from 'react'\nimport { Menu } from 'lucide-react'\nimport { Button, Sidebar } from '@rentalshop/ui'\n\ninterface LayoutProps {\n  variant?: 'client' | 'admin'\n  currentPage?: string\n  children: React.ReactNode\n  user?: any\n  onLogout?: () => void\n  hideSidebar?: boolean\n  allowCollapse?: boolean\n}\n\nexport function Layout({ \n  variant = 'client', \n  currentPage, \n  children, \n  user, \n  onLogout = () => {},\n  hideSidebar = false,\n  allowCollapse = true\n}: LayoutProps) {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false)\n\n  const handleCollapseToggle = () => {\n    setSidebarCollapsed(!sidebarCollapsed)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-bg-primary\">\n      {/* Sidebar */}\n      {!hideSidebar && (\n        <Sidebar\n          user={user}\n          isOpen={sidebarOpen}\n          onToggle={() => setSidebarOpen(!sidebarOpen)}\n          onLogout={onLogout}\n          currentPath={currentPage || ''}\n          isCollapsed={sidebarCollapsed}\n          onCollapseToggle={allowCollapse ? handleCollapseToggle : undefined}\n        />\n      )}\n      \n      {/* Main content */}\n      <div className={`${!hideSidebar ? 'transition-all duration-300 ease-in-out' : ''}`} \n           style={{ marginLeft: hideSidebar ? '0' : sidebarCollapsed ? '4rem' : '16rem' }}>\n        {/* Top bar */}\n        <div className=\"bg-bg-card shadow-sm border-b border-border\">\n          <div className=\"flex items-center justify-between h-16 px-4\">\n            <div className=\"flex items-center\">\n              {!hideSidebar && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setSidebarOpen(true)}\n                  className=\"md:hidden mr-2\"\n                >\n                  <Menu className=\"w-5 h-5\" />\n                </Button>\n              )}\n              <h2 className=\"text-lg font-semibold text-text-primary\">\n                {variant === 'admin' ? 'Admin Panel' : 'Rental Shop'}\n              </h2>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              {/* Add notifications, user menu, etc. here */}\n            </div>\n          </div>\n        </div>\n        \n        {/* Page content */}\n        <main className=\"p-6\">\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n} ","'use client'\n\nimport React from 'react';\nimport { \n  Badge,\n  StatusBadge,\n  Button,\n  Card,\n  CardContent\n} from '../ui';\nimport { \n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  CreditCard,\n  TrendingUp,\n  Zap\n} from 'lucide-react';\nimport { useSubscriptionStatusInfo } from '@rentalshop/hooks';\n\ninterface SubscriptionStatusProps {\n  showDetails?: boolean;\n  className?: string;\n  currentUserRole?: string;\n}\n\nexport function SubscriptionStatus({ showDetails = false, className = '', currentUserRole }: SubscriptionStatusProps) {\n  const {\n    hasSubscription,\n    subscription,\n    status,\n    isTrial,\n    isActive,\n    isExpired,\n    isExpiringSoon,\n    daysUntilExpiry,\n    planName,\n    loading,\n    error,\n    statusMessage // Use statusReason from API\n  } = useSubscriptionStatusInfo();\n\n  if (loading) {\n    return (\n      <div className={`animate-pulse ${className}`}>\n        <div className=\"h-6 bg-gray-200 rounded w-24\"></div>\n      </div>\n    );\n  }\n\n  if (error || !hasSubscription) {\n    return (\n      <div className={className}>\n        {/* Only show \"Get Started\" button for ADMIN and MERCHANT roles */}\n        {(currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && (\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => window.location.href = '/plans'}\n          >\n            <CreditCard className=\"h-4 w-4 mr-2\" />\n            Get Started\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  // ============================================================================\n  // STATUS MAPPING (Based on computed status from API)\n  // ============================================================================\n  const getStatusIcon = () => {\n    switch (status) {\n      case 'TRIAL': return <Zap className=\"h-4 w-4\" />;\n      case 'ACTIVE': return <CheckCircle className=\"h-4 w-4\" />;\n      case 'EXPIRED': return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'CANCELED': return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'PAST_DUE': return <CreditCard className=\"h-4 w-4\" />;\n      case 'PAUSED': return <Clock className=\"h-4 w-4\" />;\n      default: return <Clock className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getStatusVariant = () => {\n    switch (status) {\n      case 'ACTIVE': return 'success' as const;\n      case 'TRIAL': return 'warning' as const;\n      case 'EXPIRED': return 'destructive' as const;\n      case 'CANCELED': return 'destructive' as const;\n      case 'PAST_DUE': return 'warning' as const;\n      case 'PAUSED': return 'secondary' as const;\n      default: return 'secondary' as const;\n    }\n  };\n\n  const getStatusText = () => {\n    // Use statusMessage from API (already has the reason)\n    if (statusMessage) return statusMessage;\n    \n    // Fallback to status-based text\n    switch (status) {\n      case 'ACTIVE': return isExpiringSoon ? `Expires in ${daysUntilExpiry} days` : 'Active';\n      case 'TRIAL': return `Trial (${daysUntilExpiry} days left)`;\n      case 'EXPIRED': return 'Expired';\n      case 'CANCELED': return 'Canceled';\n      case 'PAST_DUE': return 'Payment Past Due';\n      case 'PAUSED': return 'Paused';\n      default: return status || 'Unknown';\n    }\n  };\n\n  // Get border color based on status\n  const getBorderColor = () => {\n    switch (status) {\n      case 'ACTIVE': return isExpiringSoon ? 'border-orange-500' : 'border-green-500';\n      case 'TRIAL': return 'border-yellow-500';\n      case 'EXPIRED': return 'border-red-500';\n      case 'CANCELED': return 'border-red-500';\n      case 'PAST_DUE': return 'border-orange-500';\n      case 'PAUSED': return 'border-gray-500';\n      default: return 'border-gray-500';\n    }\n  };\n\n  // Check if action button should be shown\n  const shouldShowAction = status === 'EXPIRED' || status === 'CANCELED' || status === 'PAST_DUE' || isExpiringSoon;\n\n  if (showDetails) {\n    return (\n      <Card className={`border-l-4 ${getBorderColor()} ${className}`}>\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              {getStatusIcon()}\n              <div>\n                <div className=\"font-medium text-gray-900\">{planName}</div>\n                <div className=\"text-sm text-gray-600\">{getStatusText()}</div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <StatusBadge status={status} type=\"subscription\" variant=\"solid\">\n              </StatusBadge>\n              {/* Only show action buttons for ADMIN and MERCHANT roles */}\n              {(currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && shouldShowAction && (\n                <Button\n                  size=\"sm\"\n                  onClick={() => window.location.href = '/plans'}\n                >\n                  <TrendingUp className=\"h-4 w-4 mr-2\" />\n                  {status === 'EXPIRED' || status === 'CANCELED' ? 'Renew' : 'Upgrade'}\n                </Button>\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className={`flex items-center space-x-2 ${className}`}>\n      {getStatusIcon()}\n      <span className=\"font-medium\">{planName} - {getStatusText()}</span>\n      <StatusBadge status={status} type=\"subscription\" variant=\"solid\" size=\"sm\" />\n      {/* Only show action buttons for ADMIN and MERCHANT roles */}\n      {(currentUserRole === 'ADMIN' || currentUserRole === 'MERCHANT') && shouldShowAction && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => window.location.href = '/plans'}\n        >\n          <TrendingUp className=\"h-4 w-4 mr-2\" />\n          {status === 'EXPIRED' || status === 'CANCELED' ? 'Renew' : 'Upgrade'}\n        </Button>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,8CAAAA,UAAAC,SAAA;AAAA;AAKA,aAAS,MAAM,SAAS;AACtB,WAAK,WAAW;AAChB,WAAK,MAAM;AAAA,IACb;AACA,UAAM,UAAU,QAAQ,WAAY;AAClC,WAAK,QAAQ;AACb,WAAK,UAAU,uBAAO,OAAO,IAAI;AAAA,IACnC;AACA,UAAM,UAAU,MAAM,SAAU,KAAK;AACnC,aAAO,KAAK,QAAQ,GAAG;AAAA,IACzB;AACA,UAAM,UAAU,MAAM,SAAU,KAAK,OAAO;AAC1C,WAAK,SAAS,KAAK,YAAY,KAAK,MAAM;AAC1C,UAAI,EAAE,OAAO,KAAK;AAAU,aAAK;AAEjC,aAAQ,KAAK,QAAQ,GAAG,IAAI;AAAA,IAC9B;AAEA,QAAI,cAAc;AAAlB,QACE,cAAc;AADhB,QAEE,mBAAmB;AAFrB,QAGE,kBAAkB;AAHpB,QAIE,qBAAqB;AAJvB,QAKE,iBAAiB;AAEnB,QAAI,YAAY,IAAI,MAAM,cAAc;AAAxC,QACE,WAAW,IAAI,MAAM,cAAc;AADrC,QAEE,WAAW,IAAI,MAAM,cAAc;AAIrC,IAAAA,QAAO,UAAU;AAAA,MACf;AAAA,MAEA,OAAOC;AAAA,MAEP,eAAeC;AAAA,MAEf,QAAQ,SAAU,MAAM;AACtB,YAAI,QAAQA,eAAc,IAAI;AAE9B,eACE,SAAS,IAAI,IAAI,KACjB,SAAS,IAAI,MAAM,SAAS,OAAO,KAAK,OAAO;AAC7C,cAAI,QAAQ;AACZ,cAAI,MAAM,MAAM;AAChB,cAAI,OAAO;AAEX,iBAAO,QAAQ,MAAM,GAAG;AACtB,gBAAI,OAAO,MAAM,KAAK;AACtB,gBACE,SAAS,eACT,SAAS,iBACT,SAAS,aACT;AACA,qBAAO;AAAA,YACT;AAEA,mBAAO,KAAK,MAAM,OAAO,CAAC;AAAA,UAC5B;AACA,eAAK,MAAM,KAAK,CAAC,IAAI;AAAA,QACvB,CAAC;AAAA,MAEL;AAAA,MAEA,QAAQ,SAAU,MAAM,MAAM;AAC5B,YAAI,QAAQA,eAAc,IAAI;AAC9B,eACE,SAAS,IAAI,IAAI,KACjB,SAAS,IAAI,MAAM,SAASC,QAAO,MAAM;AACvC,cAAI,QAAQ,GACV,MAAM,MAAM;AACd,iBAAO,QAAQ,KAAK;AAClB,gBAAI,QAAQ,QAAQ,CAAC;AAAM,qBAAO,KAAK,MAAM,OAAO,CAAC;AAAA;AAChD;AAAA,UACP;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,MAEL;AAAA,MAEA,MAAM,SAAU,UAAU;AACxB,eAAO,SAAS,OAAO,SAAU,MAAM,MAAM;AAC3C,iBACE,QACC,SAAS,IAAI,KAAK,YAAY,KAAK,IAAI,IACpC,MAAM,OAAO,OACZ,OAAO,MAAM,MAAM;AAAA,QAE5B,GAAG,EAAE;AAAA,MACP;AAAA,MAEA,SAAS,SAAU,MAAM,IAAI,SAAS;AACpC,QAAAC,SAAQ,MAAM,QAAQ,IAAI,IAAI,OAAOH,OAAM,IAAI,GAAG,IAAI,OAAO;AAAA,MAC/D;AAAA,IACF;AAEA,aAASC,eAAc,MAAM;AAC3B,aACE,UAAU,IAAI,IAAI,KAClB,UAAU;AAAA,QACR;AAAA,QACAD,OAAM,IAAI,EAAE,IAAI,SAAU,MAAM;AAC9B,iBAAO,KAAK,QAAQ,oBAAoB,IAAI;AAAA,QAC9C,CAAC;AAAA,MACH;AAAA,IAEJ;AAEA,aAASA,OAAM,MAAM;AACnB,aAAO,KAAK,MAAM,WAAW,KAAK,CAAC,EAAE;AAAA,IACvC;AAEA,aAASG,SAAQ,OAAO,MAAM,SAAS;AACrC,UAAI,MAAM,MAAM,QACd,MACA,KACAC,UACA;AAEF,WAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,eAAO,MAAM,GAAG;AAEhB,YAAI,MAAM;AACR,cAAI,eAAe,IAAI,GAAG;AACxB,mBAAO,MAAM,OAAO;AAAA,UACtB;AAEA,sBAAY,SAAS,IAAI;AACzB,UAAAA,WAAU,CAAC,aAAa,QAAQ,KAAK,IAAI;AAEzC,eAAK,KAAK,SAAS,MAAM,WAAWA,UAAS,KAAK,KAAK;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAEA,aAAS,SAAS,KAAK;AACrB,aACE,OAAO,QAAQ,YAAY,OAAO,CAAC,KAAK,GAAG,EAAE,QAAQ,IAAI,OAAO,CAAC,CAAC,MAAM;AAAA,IAE5E;AAEA,aAAS,iBAAiB,MAAM;AAC9B,aAAO,KAAK,MAAM,gBAAgB,KAAK,CAAC,KAAK,MAAM,WAAW;AAAA,IAChE;AAEA,aAAS,gBAAgB,MAAM;AAC7B,aAAO,gBAAgB,KAAK,IAAI;AAAA,IAClC;AAEA,aAAS,eAAe,MAAM;AAC5B,aAAO,CAAC,SAAS,IAAI,MAAM,iBAAiB,IAAI,KAAK,gBAAgB,IAAI;AAAA,IAC3E;AAAA;AAAA;;;AC7JA;AAAA,0CAAAC,UAAAC,SAAA;AAAA;AAAA,QAAM,UAAU;AAEhB,QAAM,QAAQ,CAAC,QAAQ,IAAI,MAAM,OAAO,KAAK,CAAC;AAE9C,QAAM,aAAa,CAAC,QAAQ,IAAI,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC;AAE9D,QAAMC,QAAO,CAAC,KAAKC,OAAM,MAAM,GAAG,EAAE,KAAKA,EAAC,EAAE,YAAY;AAExD,QAAMC,aAAY,CAAC,QACjB,MAAM,GAAG,EAAE;AAAA,MACT,CAAC,KAAK,SACJ,GAAG,GAAG,GACJ,CAAC,MACG,KAAK,YAAY,IACjB,KAAK,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC,EAAE,YAAY,CACxD;AAAA,MACF;AAAA,IACF;AAEF,QAAM,aAAa,CAAC,QAAQ,WAAWA,WAAU,GAAG,CAAC;AAErD,QAAMC,aAAY,CAAC,QAAQH,MAAK,KAAK,GAAG;AAExC,QAAM,YAAY,CAAC,QAAQA,MAAK,KAAK,GAAG;AAExC,QAAM,eAAe,CAAC,QAAQ,WAAWA,MAAK,KAAK,GAAG,CAAC;AAEvD,QAAM,YAAY,CAAC,QAAQ,MAAM,GAAG,EAAE,IAAI,UAAU,EAAE,KAAK,GAAG;AAE9D,IAAAD,QAAO,UAAU;AAAA,MACf;AAAA,MACA;AAAA,MACA,WAAAG;AAAA,MACA;AAAA,MACA,WAAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACtCA;AAAA,yCAAAC,UAAAC,SAAA;AAAA;AAQA,IAAAA,QAAO,UAAU,SAAS,OAAO;AAC/B,aAAOC,UAAS,YAAY,KAAK,GAAG,KAAK;AAAA,IAC3C;AAEA,IAAAD,QAAO,QAAQ,QAAQC;AAEvB,aAASA,UAAS,OAAO,OAAO;AAC9B,UAAI,SAAS,MAAM,QACf,SAAS,IAAI,MAAM,MAAM,GACzB,UAAU,CAAC,GACX,IAAI,QAEJ,gBAAgB,kBAAkB,KAAK,GACvC,YAAY,cAAc,KAAK;AAGnC,YAAM,QAAQ,SAAS,MAAM;AAC3B,YAAI,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,CAAC,GAAG;AACtD,gBAAM,IAAI,MAAM,+DAA+D;AAAA,QACjF;AAAA,MACF,CAAC;AAED,aAAO,KAAK;AACV,YAAI,CAAC,QAAQ,CAAC;AAAG,gBAAM,MAAM,CAAC,GAAG,GAAG,oBAAI,IAAI,CAAC;AAAA,MAC/C;AAEA,aAAO;AAEP,eAAS,MAAM,MAAMC,IAAG,cAAc;AACpC,YAAG,aAAa,IAAI,IAAI,GAAG;AACzB,cAAI;AACJ,cAAI;AACF,sBAAU,gBAAgB,KAAK,UAAU,IAAI;AAAA,UAC/C,SAAQC,IAAG;AACT,sBAAU;AAAA,UACZ;AACA,gBAAM,IAAI,MAAM,sBAAsB,OAAO;AAAA,QAC/C;AAEA,YAAI,CAAC,UAAU,IAAI,IAAI,GAAG;AACxB,gBAAM,IAAI,MAAM,iFAA+E,KAAK,UAAU,IAAI,CAAC;AAAA,QACrH;AAEA,YAAI,QAAQD,EAAC;AAAG;AAChB,gBAAQA,EAAC,IAAI;AAEb,YAAI,WAAW,cAAc,IAAI,IAAI,KAAK,oBAAI,IAAI;AAClD,mBAAW,MAAM,KAAK,QAAQ;AAE9B,YAAIA,KAAI,SAAS,QAAQ;AACvB,uBAAa,IAAI,IAAI;AACrB,aAAG;AACD,gBAAI,QAAQ,SAAS,EAAEA,EAAC;AACxB,kBAAM,OAAO,UAAU,IAAI,KAAK,GAAG,YAAY;AAAA,UACjD,SAASA;AACT,uBAAa,OAAO,IAAI;AAAA,QAC1B;AAEA,eAAO,EAAE,MAAM,IAAI;AAAA,MACrB;AAAA,IACF;AAEA,aAAS,YAAY,KAAI;AACvB,UAAI,MAAM,oBAAI,IAAI;AAClB,eAAS,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK;AAC9C,YAAI,OAAO,IAAI,CAAC;AAChB,YAAI,IAAI,KAAK,CAAC,CAAC;AACf,YAAI,IAAI,KAAK,CAAC,CAAC;AAAA,MACjB;AACA,aAAO,MAAM,KAAK,GAAG;AAAA,IACvB;AAEA,aAAS,kBAAkB,KAAI;AAC7B,UAAI,QAAQ,oBAAI,IAAI;AACpB,eAAS,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK;AAC9C,YAAI,OAAO,IAAI,CAAC;AAChB,YAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC;AAAG,gBAAM,IAAI,KAAK,CAAC,GAAG,oBAAI,IAAI,CAAC;AACrD,YAAI,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC;AAAG,gBAAM,IAAI,KAAK,CAAC,GAAG,oBAAI,IAAI,CAAC;AACrD,cAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,KAAI;AACzB,UAAI,MAAM,oBAAI,IAAI;AAClB,eAAS,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,KAAK;AAC9C,YAAI,IAAI,IAAI,CAAC,GAAG,CAAC;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACjGA;AAAA,mDAAAE,UAAAC,SAAA;AAAA;AAEA,QAAIC,WAAU,MAAM;AACpB,QAAI,UAAU,OAAO;AACrB,QAAI,UAAU,OAAO,UAAU;AAC/B,QAAI,iBAAiB,OAAO,YAAY;AAExC,aAAS,MAAM,GAAG,GAAG;AAEnB,UAAI,MAAM;AAAG,eAAO;AAEpB,UAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;AAC1D,YAAI,OAAOA,SAAQ,CAAC,GAChB,OAAOA,SAAQ,CAAC,GAChB,GACA,QACA;AAEJ,YAAI,QAAQ,MAAM;AAChB,mBAAS,EAAE;AACX,cAAI,UAAU,EAAE;AAAQ,mBAAO;AAC/B,eAAK,IAAI,QAAQ,QAAQ;AACvB,gBAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAG,qBAAO;AACjC,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ;AAAM,iBAAO;AAEzB,YAAI,QAAQ,aAAa,MACrB,QAAQ,aAAa;AACzB,YAAI,SAAS;AAAO,iBAAO;AAC3B,YAAI,SAAS;AAAO,iBAAO,EAAE,QAAQ,KAAK,EAAE,QAAQ;AAEpD,YAAI,UAAU,aAAa,QACvB,UAAU,aAAa;AAC3B,YAAI,WAAW;AAAS,iBAAO;AAC/B,YAAI,WAAW;AAAS,iBAAO,EAAE,SAAS,KAAK,EAAE,SAAS;AAE1D,YAAIC,QAAO,QAAQ,CAAC;AACpB,iBAASA,MAAK;AAEd,YAAI,WAAW,QAAQ,CAAC,EAAE;AACxB,iBAAO;AAET,aAAK,IAAI,QAAQ,QAAQ;AACvB,cAAI,CAAC,QAAQ,KAAK,GAAGA,MAAK,CAAC,CAAC;AAAG,mBAAO;AAKxC,YAAI,kBAAkB,aAAa,WAAW,aAAa;AACzD,iBAAO,MAAM;AAGf,aAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,gBAAMA,MAAK,CAAC;AACZ,cAAI,QAAQ,YAAY,EAAE,UAAU;AAKlC;AAAA,UACF,OAAO;AAEL,gBAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC;AAAG,qBAAO;AAAA,UACrC;AAAA,QACF;AAIA,eAAO;AAAA,MACT;AAEA,aAAO,MAAM,KAAK,MAAM;AAAA,IAC1B;AAGA,IAAAF,QAAO,UAAU,SAAS,cAAc,GAAG,GAAG;AAC5C,UAAI;AACF,eAAO,MAAM,GAAG,CAAC;AAAA,MACnB,SAAS,OAAO;AACd,YAAK,MAAM,WAAW,MAAM,QAAQ,MAAM,kBAAkB,KAAO,MAAM,WAAW,aAAc;AAMhG,kBAAQ,KAAK,oEAAoE,MAAM,MAAM,MAAM,OAAO;AAC1G,iBAAO;AAAA,QACT;AAEA,cAAM;AAAA,MACR;AAAA,IACF;AAAA;AAAA;;;AC7FA;AAAA,+DAAAG,UAAA;AAAA;AASa,QAAI,IAAE,eAAa,OAAO,UAAQ,OAAO;AAAzC,QAA6C,IAAE,IAAE,OAAO,IAAI,eAAe,IAAE;AAA7E,QAAmFC,KAAE,IAAE,OAAO,IAAI,cAAc,IAAE;AAAlH,QAAwHC,KAAE,IAAE,OAAO,IAAI,gBAAgB,IAAE;AAAzJ,QAA+J,IAAE,IAAE,OAAO,IAAI,mBAAmB,IAAE;AAAnM,QAAyMC,KAAE,IAAE,OAAO,IAAI,gBAAgB,IAAE;AAA1O,QAAgP,IAAE,IAAE,OAAO,IAAI,gBAAgB,IAAE;AAAjR,QAAuRC,KAAE,IAAE,OAAO,IAAI,eAAe,IAAE;AAAvT,QAA6T,IAAE,IAAE,OAAO,IAAI,kBAAkB,IAAE;AAAhW,QAAsW,IAAE,IAAE,OAAO,IAAI,uBAAuB,IAAE;AAA9Y,QAAoZC,KAAE,IAAE,OAAO,IAAI,mBAAmB,IAAE;AAAxb,QAA8bC,KAAE,IAAE,OAAO,IAAI,gBAAgB,IAAE;AAA/d,QAAqe,IAAE,IACpf,OAAO,IAAI,qBAAqB,IAAE;AADrB,QAC2BC,KAAE,IAAE,OAAO,IAAI,YAAY,IAAE;AADxD,QAC8DC,KAAE,IAAE,OAAO,IAAI,YAAY,IAAE;AAD3F,QACiGC,KAAE,IAAE,OAAO,IAAI,aAAa,IAAE;AAD/H,QACqIC,KAAE,IAAE,OAAO,IAAI,mBAAmB,IAAE;AADzK,QAC+K,IAAE,IAAE,OAAO,IAAI,iBAAiB,IAAE;AADjN,QACuN,IAAE,IAAE,OAAO,IAAI,aAAa,IAAE;AAClQ,aAAS,EAAE,GAAE;AAAC,UAAG,aAAW,OAAO,KAAG,SAAO,GAAE;AAAC,YAAI,IAAE,EAAE;AAAS,gBAAO,GAAE;AAAA,UAAC,KAAK;AAAE,oBAAO,IAAE,EAAE,MAAK,GAAE;AAAA,cAAC,KAAK;AAAA,cAAE,KAAK;AAAA,cAAE,KAAKR;AAAA,cAAE,KAAKC;AAAA,cAAE,KAAK;AAAA,cAAE,KAAKG;AAAE,uBAAO;AAAA,cAAE;AAAQ,wBAAO,IAAE,KAAG,EAAE,UAAS,GAAE;AAAA,kBAAC,KAAKF;AAAA,kBAAE,KAAKC;AAAA,kBAAE,KAAKG;AAAA,kBAAE,KAAKD;AAAA,kBAAE,KAAK;AAAE,2BAAO;AAAA,kBAAE;AAAQ,2BAAO;AAAA,gBAAC;AAAA,YAAC;AAAA,UAAC,KAAKN;AAAE,mBAAO;AAAA,QAAC;AAAA,MAAC;AAAA,IAAC;AAAC,aAAS,EAAE,GAAE;AAAC,aAAO,EAAE,CAAC,MAAI;AAAA,IAAC;AAAC,IAAAD,SAAQ,YAAU;AAAE,IAAAA,SAAQ,iBAAe;AAAE,IAAAA,SAAQ,kBAAgBI;AAAE,IAAAJ,SAAQ,kBAAgB;AAAE,IAAAA,SAAQ,UAAQ;AAAE,IAAAA,SAAQ,aAAWK;AAAE,IAAAL,SAAQ,WAASE;AAAE,IAAAF,SAAQ,OAAKQ;AAAE,IAAAR,SAAQ,OAAKO;AAAE,IAAAP,SAAQ,SAAOC;AAChf,IAAAD,SAAQ,WAASG;AAAE,IAAAH,SAAQ,aAAW;AAAE,IAAAA,SAAQ,WAASM;AAAE,IAAAN,SAAQ,cAAY,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,KAAG,EAAE,CAAC,MAAI;AAAA,IAAC;AAAE,IAAAA,SAAQ,mBAAiB;AAAE,IAAAA,SAAQ,oBAAkB,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAII;AAAA,IAAC;AAAE,IAAAJ,SAAQ,oBAAkB,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAI;AAAA,IAAC;AAAE,IAAAA,SAAQ,YAAU,SAAS,GAAE;AAAC,aAAM,aAAW,OAAO,KAAG,SAAO,KAAG,EAAE,aAAW;AAAA,IAAC;AAAE,IAAAA,SAAQ,eAAa,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIK;AAAA,IAAC;AAAE,IAAAL,SAAQ,aAAW,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIE;AAAA,IAAC;AAAE,IAAAF,SAAQ,SAAO,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIQ;AAAA,IAAC;AAC1d,IAAAR,SAAQ,SAAO,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIO;AAAA,IAAC;AAAE,IAAAP,SAAQ,WAAS,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIC;AAAA,IAAC;AAAE,IAAAD,SAAQ,aAAW,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIG;AAAA,IAAC;AAAE,IAAAH,SAAQ,eAAa,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAI;AAAA,IAAC;AAAE,IAAAA,SAAQ,aAAW,SAAS,GAAE;AAAC,aAAO,EAAE,CAAC,MAAIM;AAAA,IAAC;AAC1O,IAAAN,SAAQ,qBAAmB,SAAS,GAAE;AAAC,aAAM,aAAW,OAAO,KAAG,eAAa,OAAO,KAAG,MAAIE,MAAG,MAAI,KAAG,MAAIC,MAAG,MAAI,KAAG,MAAIG,MAAG,MAAI,KAAG,aAAW,OAAO,KAAG,SAAO,MAAI,EAAE,aAAWE,MAAG,EAAE,aAAWD,MAAG,EAAE,aAAW,KAAG,EAAE,aAAWH,MAAG,EAAE,aAAWC,MAAG,EAAE,aAAWK,MAAG,EAAE,aAAW,KAAG,EAAE,aAAW,KAAG,EAAE,aAAWD;AAAA,IAAE;AAAE,IAAAT,SAAQ,SAAO;AAAA;AAAA;;;ACdnU;AAAA,4DAAAW,UAAA;AAAA;AAaA,QAAI,QAAQ,IAAI,aAAa,cAAc;AACzC,OAAC,WAAW;AACd;AAIA,YAAI,YAAY,OAAO,WAAW,cAAc,OAAO;AACvD,YAAIC,sBAAqB,YAAY,OAAO,IAAI,eAAe,IAAI;AACnE,YAAI,oBAAoB,YAAY,OAAO,IAAI,cAAc,IAAI;AACjE,YAAI,sBAAsB,YAAY,OAAO,IAAI,gBAAgB,IAAI;AACrE,YAAI,yBAAyB,YAAY,OAAO,IAAI,mBAAmB,IAAI;AAC3E,YAAI,sBAAsB,YAAY,OAAO,IAAI,gBAAgB,IAAI;AACrE,YAAI,sBAAsB,YAAY,OAAO,IAAI,gBAAgB,IAAI;AACrE,YAAI,qBAAqB,YAAY,OAAO,IAAI,eAAe,IAAI;AAGnE,YAAI,wBAAwB,YAAY,OAAO,IAAI,kBAAkB,IAAI;AACzE,YAAI,6BAA6B,YAAY,OAAO,IAAI,uBAAuB,IAAI;AACnF,YAAI,yBAAyB,YAAY,OAAO,IAAI,mBAAmB,IAAI;AAC3E,YAAI,sBAAsB,YAAY,OAAO,IAAI,gBAAgB,IAAI;AACrE,YAAI,2BAA2B,YAAY,OAAO,IAAI,qBAAqB,IAAI;AAC/E,YAAI,kBAAkB,YAAY,OAAO,IAAI,YAAY,IAAI;AAC7D,YAAI,kBAAkB,YAAY,OAAO,IAAI,YAAY,IAAI;AAC7D,YAAI,mBAAmB,YAAY,OAAO,IAAI,aAAa,IAAI;AAC/D,YAAI,yBAAyB,YAAY,OAAO,IAAI,mBAAmB,IAAI;AAC3E,YAAI,uBAAuB,YAAY,OAAO,IAAI,iBAAiB,IAAI;AACvE,YAAI,mBAAmB,YAAY,OAAO,IAAI,aAAa,IAAI;AAE/D,iBAAS,mBAAmB,MAAM;AAChC,iBAAO,OAAO,SAAS,YAAY,OAAO,SAAS;AAAA,UACnD,SAAS,uBAAuB,SAAS,8BAA8B,SAAS,uBAAuB,SAAS,0BAA0B,SAAS,uBAAuB,SAAS,4BAA4B,OAAO,SAAS,YAAY,SAAS,SAAS,KAAK,aAAa,mBAAmB,KAAK,aAAa,mBAAmB,KAAK,aAAa,uBAAuB,KAAK,aAAa,sBAAsB,KAAK,aAAa,0BAA0B,KAAK,aAAa,0BAA0B,KAAK,aAAa,wBAAwB,KAAK,aAAa,oBAAoB,KAAK,aAAa;AAAA,QACplB;AAEA,iBAAS,OAAOC,SAAQ;AACtB,cAAI,OAAOA,YAAW,YAAYA,YAAW,MAAM;AACjD,gBAAI,WAAWA,QAAO;AAEtB,oBAAQ,UAAU;AAAA,cAChB,KAAKD;AACH,oBAAI,OAAOC,QAAO;AAElB,wBAAQ,MAAM;AAAA,kBACZ,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACH,2BAAO;AAAA,kBAET;AACE,wBAAI,eAAe,QAAQ,KAAK;AAEhC,4BAAQ,cAAc;AAAA,sBACpB,KAAK;AAAA,sBACL,KAAK;AAAA,sBACL,KAAK;AAAA,sBACL,KAAK;AAAA,sBACL,KAAK;AACH,+BAAO;AAAA,sBAET;AACE,+BAAO;AAAA,oBACX;AAAA,gBAEJ;AAAA,cAEF,KAAK;AACH,uBAAO;AAAA,YACX;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAEA,YAAI,YAAY;AAChB,YAAI,iBAAiB;AACrB,YAAI,kBAAkB;AACtB,YAAI,kBAAkB;AACtB,YAAIC,WAAUF;AACd,YAAI,aAAa;AACjB,YAAIG,aAAW;AACf,YAAI,OAAO;AACX,YAAI,OAAO;AACX,YAAIC,UAAS;AACb,YAAI,WAAW;AACf,YAAI,aAAa;AACjB,YAAI,WAAW;AACf,YAAI,sCAAsC;AAE1C,iBAAS,YAAYH,SAAQ;AAC3B;AACE,gBAAI,CAAC,qCAAqC;AACxC,oDAAsC;AAEtC,sBAAQ,MAAM,EAAE,+KAAyL;AAAA,YAC3M;AAAA,UACF;AAEA,iBAAO,iBAAiBA,OAAM,KAAK,OAAOA,OAAM,MAAM;AAAA,QACxD;AACA,iBAAS,iBAAiBA,SAAQ;AAChC,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,kBAAkBA,SAAQ;AACjC,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,kBAAkBA,SAAQ;AACjC,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,UAAUA,SAAQ;AACzB,iBAAO,OAAOA,YAAW,YAAYA,YAAW,QAAQA,QAAO,aAAaD;AAAA,QAC9E;AACA,iBAAS,aAAaC,SAAQ;AAC5B,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,WAAWA,SAAQ;AAC1B,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,OAAOA,SAAQ;AACtB,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,OAAOA,SAAQ;AACtB,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,SAASA,SAAQ;AACxB,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,WAAWA,SAAQ;AAC1B,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,aAAaA,SAAQ;AAC5B,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AACA,iBAAS,WAAWA,SAAQ;AAC1B,iBAAO,OAAOA,OAAM,MAAM;AAAA,QAC5B;AAEA,QAAAF,SAAQ,YAAY;AACpB,QAAAA,SAAQ,iBAAiB;AACzB,QAAAA,SAAQ,kBAAkB;AAC1B,QAAAA,SAAQ,kBAAkB;AAC1B,QAAAA,SAAQ,UAAUG;AAClB,QAAAH,SAAQ,aAAa;AACrB,QAAAA,SAAQ,WAAWI;AACnB,QAAAJ,SAAQ,OAAO;AACf,QAAAA,SAAQ,OAAO;AACf,QAAAA,SAAQ,SAASK;AACjB,QAAAL,SAAQ,WAAW;AACnB,QAAAA,SAAQ,aAAa;AACrB,QAAAA,SAAQ,WAAW;AACnB,QAAAA,SAAQ,cAAc;AACtB,QAAAA,SAAQ,mBAAmB;AAC3B,QAAAA,SAAQ,oBAAoB;AAC5B,QAAAA,SAAQ,oBAAoB;AAC5B,QAAAA,SAAQ,YAAY;AACpB,QAAAA,SAAQ,eAAe;AACvB,QAAAA,SAAQ,aAAa;AACrB,QAAAA,SAAQ,SAAS;AACjB,QAAAA,SAAQ,SAAS;AACjB,QAAAA,SAAQ,WAAW;AACnB,QAAAA,SAAQ,aAAa;AACrB,QAAAA,SAAQ,eAAe;AACvB,QAAAA,SAAQ,aAAa;AACrB,QAAAA,SAAQ,qBAAqB;AAC7B,QAAAA,SAAQ,SAAS;AAAA,MACf,GAAG;AAAA,IACL;AAAA;AAAA;;;ACpLA;AAAA,yCAAAM,UAAAC,SAAA;AAAA;AAEA,QAAI,QAAQ,IAAI,aAAa,cAAc;AACzC,MAAAA,QAAO,UAAU;AAAA,IACnB,OAAO;AACL,MAAAA,QAAO,UAAU;AAAA,IACnB;AAAA;AAAA;;;ACNA;AAAA,mFAAAC,UAAAC,SAAA;AAAA;AAEA,QAAI,UAAU;AAMd,QAAI,gBAAgB;AAAA,MAClB,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,MAAM;AAAA,IACR;AACA,QAAI,gBAAgB;AAAA,MAClB,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO;AAAA,IACT;AACA,QAAI,sBAAsB;AAAA,MACxB,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,aAAa;AAAA,MACb,WAAW;AAAA,IACb;AACA,QAAI,eAAe;AAAA,MACjB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,cAAc;AAAA,MACd,aAAa;AAAA,MACb,WAAW;AAAA,MACX,MAAM;AAAA,IACR;AACA,QAAI,eAAe,CAAC;AACpB,iBAAa,QAAQ,UAAU,IAAI;AACnC,iBAAa,QAAQ,IAAI,IAAI;AAE7B,aAAS,WAAW,WAAW;AAE7B,UAAI,QAAQ,OAAO,SAAS,GAAG;AAC7B,eAAO;AAAA,MACT;AAGA,aAAO,aAAa,UAAU,UAAU,CAAC,KAAK;AAAA,IAChD;AAEA,QAAIC,kBAAiB,OAAO;AAC5B,QAAI,sBAAsB,OAAO;AACjC,QAAI,wBAAwB,OAAO;AACnC,QAAI,2BAA2B,OAAO;AACtC,QAAI,iBAAiB,OAAO;AAC5B,QAAI,kBAAkB,OAAO;AAC7B,aAASC,sBAAqB,iBAAiB,iBAAiB,WAAW;AACzE,UAAI,OAAO,oBAAoB,UAAU;AAEvC,YAAI,iBAAiB;AACnB,cAAI,qBAAqB,eAAe,eAAe;AAEvD,cAAI,sBAAsB,uBAAuB,iBAAiB;AAChE,YAAAA,sBAAqB,iBAAiB,oBAAoB,SAAS;AAAA,UACrE;AAAA,QACF;AAEA,YAAIC,QAAO,oBAAoB,eAAe;AAE9C,YAAI,uBAAuB;AACzB,UAAAA,QAAOA,MAAK,OAAO,sBAAsB,eAAe,CAAC;AAAA,QAC3D;AAEA,YAAI,gBAAgB,WAAW,eAAe;AAC9C,YAAI,gBAAgB,WAAW,eAAe;AAE9C,iBAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,EAAE,GAAG;AACpC,cAAI,MAAMA,MAAK,CAAC;AAEhB,cAAI,CAAC,cAAc,GAAG,KAAK,EAAE,aAAa,UAAU,GAAG,MAAM,EAAE,iBAAiB,cAAc,GAAG,MAAM,EAAE,iBAAiB,cAAc,GAAG,IAAI;AAC7I,gBAAI,aAAa,yBAAyB,iBAAiB,GAAG;AAE9D,gBAAI;AAEF,cAAAF,gBAAe,iBAAiB,KAAK,UAAU;AAAA,YACjD,SAASG,IAAG;AAAA,YAAC;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAJ,QAAO,UAAUE;AAAA;AAAA;;;ACtGjB,YAAY,WAAW;AACvB,SAAS,WAA8B;;;ACDvC,SAA0B,YAAY;AACtC,SAAS,eAAe;AAEjB,SAAS,MAAM,QAAsB;AAC1C,SAAO,QAAQ,KAAK,MAAM,CAAC;AAC7B;AAQO,SAAS,WAAWG,OAAwCC,UAAiB,SAAiB;AACnG,MAAI,CAACD;AAAM,WAAO;AAElB,QAAM,UAAU,OAAOA,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAE5D,MAAI,MAAM,QAAQ,QAAQ,CAAC;AAAG,WAAO;AAErC,SAAO,IAAI,KAAK,eAAeC,SAAQ;AAAA,IACrC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,EACV,CAAC,EAAE,OAAO,OAAO;AACnB;;;ADGE;AA1BF,IAAM,gBAAgB;AAAA,EACpB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SAAS;AAAA,QACT,aACE;AAAA,QACF,SACE;AAAA,QACF,SACE;AAAA,QACF,MACE;AAAA,MACJ;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAEA,IAAM,QAAc,iBAGlB,CAAC,EAAE,WAAW,SAAS,GAAG,MAAM,GAAG,QACnC;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,MAAK;AAAA,IACL,WAAW,GAAG,cAAc,EAAE,QAAQ,CAAC,GAAG,SAAS;AAAA,IAClD,GAAG;AAAA;AACN,CACD;AACD,MAAM,cAAc;AAEpB,IAAM,aAAmB,iBAGvB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW,GAAG,gDAAgD,SAAS;AAAA,IACtE,GAAG;AAAA;AACN,CACD;AACD,WAAW,cAAc;AAEzB,IAAM,mBAAyB,iBAG7B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAW,GAAG,iCAAiC,SAAS;AAAA,IACvD,GAAG;AAAA;AACN,CACD;AACD,iBAAiB,cAAc;;;AE5D/B,SAAS,OAAAC,YAA8B;;;ACDvC,SAA0B,QAAAC,aAAY;AACtC,SAAS,WAAAC,gBAAe;AAEjB,SAASC,OAAM,QAAsB;AAC1C,SAAOD,SAAQD,MAAK,MAAM,CAAC;AAC7B;;;AD0BI,gBAAAG,YAAA;AA1BJ,IAAM,gBAAgBC;AAAA,EACpB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SACE;AAAA,QACF,WACE;AAAA,QACF,aACE;AAAA,QACF,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAMA,SAAS,MAAM,EAAE,WAAW,SAAS,GAAG,MAAM,GAAe;AAC3D,SACE,gBAAAD,KAAC,SAAI,WAAWE,IAAG,cAAc,EAAE,QAAQ,CAAC,GAAG,SAAS,GAAI,GAAG,OAAO;AAE1E;;;AE7BA,SAAS,gBAAgB,sBAAsB;AA+DzC,gBAAAC,MA8BF,YA9BE;AApDN,IAAM,sBAAsB;AAAA;AAAA,EAE1B,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA;AAAA,EAGA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA;AAAA,EAGA,SAAS;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,eAAe;AAAA,IACb,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF;AAEA,IAAM,cAAc;AAAA,EAClB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAEO,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA,OAAO;AAAA,EACP,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AACF,MAAM;AAEJ,MAAI,CAAC,QAAQ;AACX,WACE,gBAAAA,KAAC,UAAK,WAAW,GAAG,gIAAgI,SAAS,GAAG,qBAEhK;AAAA,EAEJ;AAGA,QAAM,gBAAgB,oBAAoB,OAAO,YAAY,CAAqC;AAElG,MAAI;AACJ,MAAI,eAAe;AACjB,aAAS;AAAA,EACX,OAAO;AAEL,UAAM,aAAa,eAAe,QAAQ,IAAI;AAC9C,UAAM,QAAQ,eAAe,QAAQ,IAAI;AACzC,aAAS;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA,IACR;AAAA,EACF;AAEA,QAAM,cAAc;AAAA,IAClB;AAAA,IACA,YAAY,IAAI;AAAA,IAChB,OAAO;AAAA,IACP;AAAA,EACF;AAEA,SACE,qBAAC,UAAK,WAAW,aACf;AAAA,oBAAAA,KAAC,UAAK,WAAU,WAAW,iBAAO,MAAK;AAAA,IACvC,gBAAAA,KAAC,UAAK,WAAU,cAAc,kBAAO;AAAA,KACvC;AAEJ;;;ACrGA,OAAO,UAAU;AACjB,SAAS,cAAc,YAAY;AAqBrB,gBAAAC,MAsBE,QAAAC,aAtBF;AAJP,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY,gBAAAD,KAAC,gBAAa,WAAU,WAAU;AAAA,EAC9C;AACF,MAAM;AACJ,QAAM,WAAW,WACb,CAAC,EAAE,OAAO,QAAQ,MAAM,UAAU,MAAM,gBAAAA,KAAC,QAAK,WAAU,WAAU,EAAG,GAAG,GAAG,KAAK,IAChF;AAEJ,SACE,gBAAAA,KAAC,SAAI,cAAW,cAAa,WAAW,GAAG,oCAAoC,SAAS,GACtF,0BAAAA,KAAC,QAAG,WAAU,+BACX,mBAAS,IAAI,CAAC,MAAM,UAAU;AAC7B,UAAM,SAAS,UAAU,SAAS,SAAS;AAE3C,WACE,gBAAAC,MAAC,QAAe,WAAU,+BACvB;AAAA,cAAQ,KACP,gBAAAD,KAAC,UAAK,WAAU,oCAAmC,eAAY,QAC5D,qBACH;AAAA,MAGD,KAAK,QAAQ,CAAC,SACb,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,MAAM,KAAK;AAAA,UACX,WAAW;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UAEC;AAAA,iBAAK;AAAA,YACN,gBAAAD,KAAC,UAAM,eAAK,OAAM;AAAA;AAAA;AAAA,MACpB,IAEA,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,WAAW;AAAA,YACT;AAAA,YACA,SAAS,qCAAqC;AAAA,UAChD;AAAA,UACA,gBAAc,SAAS,SAAS;AAAA,UAE/B;AAAA,iBAAK;AAAA,YACN,gBAAAD,KAAC,UAAM,eAAK,OAAM;AAAA;AAAA;AAAA,MACpB;AAAA,SA7BK,KA+BT;AAAA,EAEJ,CAAC,GACH,GACF;AAEJ;;;AC1EA,YAAYE,YAAW;AACvB,SAAS,YAAY;AACrB,SAAS,OAAAC,YAA8B;AAiDjC,gBAAAC,YAAA;AA9CN,IAAM,iBAAiBC;AAAA,EACrB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA;AAAA,QAEP,SAAS;AAAA;AAAA,QAET,aAAa;AAAA;AAAA,QAEb,SAAS;AAAA;AAAA,QAET,WAAW;AAAA;AAAA,QAEX,OAAO;AAAA;AAAA,QAEP,MAAM;AAAA;AAAA,QAEN,SAAS;AAAA;AAAA,QAET,SAAS;AAAA,MACX;AAAA,MACA,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF;AACF;AAQA,IAAM,SAAe;AAAA,EACnB,CAAC,EAAE,WAAW,SAAS,MAAM,UAAU,OAAO,GAAG,MAAM,GAAG,QAAQ;AAChE,UAAM,OAAO,UAAU,OAAO;AAC9B,WACE,gBAAAD;AAAA,MAAC;AAAA;AAAA,QACC,WAAWE,IAAG,eAAe,EAAE,SAAS,MAAM,UAAU,CAAC,CAAC;AAAA,QAC1D;AAAA,QACC,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AACA,OAAO,cAAc;;;AC3DrB,OAAOC,YAAW;AAElB,SAAS,OAAAC,YAA8B;AAwD/B,gBAAAC,MAUF,QAAAC,aAVE;AAtDR,IAAM,sBAAsBF;AAAA,EAC1B;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,QACX,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,SAAS;AAAA,MACX;AAAA,MACA,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF;AACF;AAWA,IAAM,cAAcG,OAAM;AAAA,EACxB,CAAC;AAAA,IACC;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV;AAAA,IACA,WAAW;AAAA,IACX,eAAe;AAAA,IACf;AAAA,IACA,GAAG;AAAA,EACL,GAAG,QAAQ;AACT,UAAM,OAAO,UAAU,WAAW;AAElC,UAAM,aAAa,MAAM;AACvB,UAAI,CAAC,QAAQ,CAAC;AAAU,eAAO;AAC/B,aACE,gBAAAF,KAAC,UAAK,WAAWG;AAAA,QACf;AAAA,QACA,iBAAiB,SAAS,SAAS;AAAA,MACrC,GACG,gBACH;AAAA,IAEJ;AAEA,WACE,gBAAAF;AAAA,MAAC;AAAA;AAAA,QACC,WAAWE,IAAG,oBAAoB,EAAE,SAAS,MAAM,UAAU,CAAC,CAAC;AAAA,QAC/D;AAAA,QACC,GAAG;AAAA,QAEH;AAAA,2BAAiB,UAAU,WAAW;AAAA,UACtC;AAAA,UACA,iBAAiB,WAAW,WAAW;AAAA;AAAA;AAAA,IAC1C;AAAA,EAEJ;AACF;AAEA,YAAY,cAAc;;;ACjF1B,OAAOC,YAAW;AAElB,SAAS,OAAAC,YAA8B;AA4CjC,gBAAAC,YAAA;AA1CN,IAAM,yBAAyBD;AAAA,EAC7B;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SAAS;AAAA,QACT,aAAa;AAAA,QACb,SAAS;AAAA,QACT,WAAW;AAAA,QACX,OAAO;AAAA,QACP,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EACF;AACF;AAQA,IAAM,iBAAiBE,OAAM;AAAA,EAC3B,CAAC,EAAE,WAAW,SAAS,MAAM,UAAU,OAAO,GAAG,MAAM,GAAG,QAAQ;AAChE,UAAM,OAAO,UAAU,WAAW;AAClC,WACE,gBAAAD;AAAA,MAAC;AAAA;AAAA,QACC,WAAWE,IAAG,uBAAuB,EAAE,SAAS,MAAM,UAAU,CAAC,CAAC;AAAA,QAClE;AAAA,QACC,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AAEA,eAAe,cAAc;;;ACvD7B,YAAYC,YAAW;AAQrB,gBAAAC,YAAA;AAJF,IAAM,OAAa,kBAGjB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,KAAK,cAAc;AAEnB,IAAM,aAAmB,kBAGvB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,iCAAiC,SAAS;AAAA,IACvD,GAAG;AAAA;AACN,CACD;AACD,WAAW,cAAc;AAEzB,IAAM,YAAkB,kBAGtB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,UAAU,cAAc;AAExB,IAAM,kBAAwB,kBAG5B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,+BAA+B,SAAS;AAAA,IACrD,GAAG;AAAA;AACN,CACD;AACD,gBAAgB,cAAc;AAE9B,IAAM,cAAoB,kBAGxB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD,KAAC,SAAI,KAAU,WAAWC,IAAG,YAAY,SAAS,GAAI,GAAG,OAAO,CACjE;AACD,YAAY,cAAc;AAE1B,IAAM,aAAmB,kBAGvB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,8BAA8B,SAAS;AAAA,IACpD,GAAG;AAAA;AACN,CACD;AACD,WAAW,cAAc;;;AC7CrB,gBAAAC,YAAA;AArBG,IAAM,YAAsC,CAAC;AAAA,EAClD;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AACT,MAAM;AACJ,QAAM,cAAc;AAEpB,QAAM,iBAAiB;AAAA,IACrB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,UAAU;AAAA,EACZ;AAEA,QAAMC,eAAc;AAAA,IAClB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,SACE,gBAAAD,KAAC,SAAI,WAAWE;AAAA,IACd;AAAA,IACA,eAAe,OAAO;AAAA,IACtBD,aAAY,IAAI;AAAA,IAChB;AAAA,EACF,GACG,UACH;AAEJ;AAOO,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AACF,MACE,gBAAAD,KAAC,SAAI,WAAWE,IAAG,QAAQ,SAAS,GACjC,UACH;AASK,IAAM,iBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA,OAAO;AACT,MAAM;AACJ,QAAMD,eAAc;AAAA,IAClB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,SACE,gBAAAD,KAAC,QAAG,WAAWE;AAAA,IACb;AAAA,IACAD,aAAY,IAAI;AAAA,IAChB;AAAA,EACF,GACG,UACH;AAEJ;AAOO,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AACF,MACE,gBAAAD,KAAC,SAAI,WAAWE,IAAG,aAAa,SAAS,GACtC,UACH;;;AC9DE,gBAAAC,aAAA;AAvBG,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AACT,MAAM;AACJ,QAAM,cAAc;AAEpB,QAAM,iBAAiB;AAAA,IACrB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAEA,QAAMC,eAAc;AAAA,IAClB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,SACE,gBAAAD,MAAC,SAAI,WAAWE;AAAA,IACd;AAAA,IACA,eAAe,OAAO;AAAA,IACtBD,aAAY,IAAI;AAAA,IAChB;AAAA,EACF,GACG,UACH;AAEJ;AAOO,IAAM,qBAAwD,CAAC;AAAA,EACpE;AAAA,EACA;AACF,MACE,gBAAAD,MAAC,SAAI,WAAWE,IAAG,QAAQ,SAAS,GACjC,UACH;AASK,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA,OAAO;AACT,MAAM;AACJ,QAAMD,eAAc;AAAA,IAClB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,SACE,gBAAAD,MAAC,QAAG,WAAWE;AAAA,IACb;AAAA,IACAD,aAAY,IAAI;AAAA,IAChB;AAAA,EACF,GACG,UACH;AAEJ;AAOO,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AACF,MACE,gBAAAD,MAAC,SAAI,WAAWE,IAAG,aAAa,SAAS,GACtC,UACH;;;AClGF,YAAYC,YAAW;AACvB,YAAY,qBAAqB;AACjC,SAAS,OAAO,aAAa,iBAAiB;AAkB5C,SAaI,OAAAC,OAbJ,QAAAC,aAAA;AAdF,IAAM,SAAyB;AAI/B,IAAM,cAA8B;AAMpC,IAAM,gBAAsB,kBAG1B,CAAC,EAAE,WAAW,UAAU,UAAU,WAAW,GAAG,MAAM,GAAG,QACzD,gBAAAC;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT,YAAY,YAAY;AAAA,MACxB,YAAY,eAAe;AAAA,MAC3B,YAAY,WAAW;AAAA,MACvB,YAAY,aAAa;AAAA,MACzB;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEH;AAAA;AAAA,MACD,gBAAAC,MAAiB,sBAAhB,EAAqB,SAAO,MAC3B,0BAAAA,MAAC,eAAY,WAAU,sBAAqB,GAC9C;AAAA;AAAA;AACF,CACD;AACD,cAAc,cAA8B,wBAAQ;AAEpD,IAAM,uBAA6B,kBAGjC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWD;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEJ,0BAAAC,MAAC,aAAU,WAAU,WAAU;AAAA;AACjC,CACD;AACD,qBAAqB,cAA8B,+BAAe;AAElE,IAAM,yBAA+B,kBAGnC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWD;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEJ,0BAAAC,MAAC,eAAY,WAAU,WAAU;AAAA;AACnC,CACD;AACD,uBAAuB,cACL,iCAAiB;AAEnC,IAAM,gBAAsB,kBAG1B,CAAC,EAAE,WAAW,UAAU,WAAW,UAAU,GAAG,MAAM,GAAG,QACzD,gBAAAA,MAAiB,wBAAhB,EAAuB,WAAW,OAAO,aAAa,cAAc,SAAS,OAAO,QACnF,0BAAAF;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA,aAAa,YACX;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,IACC,GAAG;AAAA,IAEJ;AAAA,sBAAAC,MAAC,wBAAqB;AAAA,MACtB,gBAAAA;AAAA,QAAiB;AAAA,QAAhB;AAAA,UACC,WAAWD;AAAA,YACT;AAAA,YACA,aAAa,YACX;AAAA,UACJ;AAAA,UAEC;AAAA;AAAA,MACH;AAAA,MACA,gBAAAC,MAAC,0BAAuB;AAAA;AAAA;AAC1B,GACF,CACD;AACD,cAAc,cAA8B,wBAAQ;AAEpD,IAAM,cAAoB,kBAGxB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWD,IAAG,0CAA0C,SAAS;AAAA,IAChE,GAAG;AAAA;AACN,CACD;AACD,YAAY,cAA8B,sBAAM;AAEhD,IAAM,aAAmB,kBAGvB,CAAC,EAAE,WAAW,UAAU,GAAG,MAAM,GAAG,QACpC,gBAAAD;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEJ;AAAA,sBAAAC,MAAC,UAAK,WAAU,gEACd,0BAAAA,MAAiB,+BAAhB,EACC,0BAAAA,MAAC,SAAM,WAAU,WAAU,GAC7B,GACF;AAAA,MAEA,gBAAAA,MAAiB,0BAAhB,EAA0B,UAAS;AAAA;AAAA;AACtC,CACD;AACD,WAAW,cAA8B,qBAAK;AAE9C,IAAM,kBAAwB,kBAG5B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWD,IAAG,4BAA4B,SAAS;AAAA,IAClD,GAAG;AAAA;AACN,CACD;AACD,gBAAgB,cAA8B,0BAAU;;;ACjJxD,SAAS,mBAAmB;AA2ClB,SAEI,OAAAE,OAFJ,QAAAC,aAAA;AA1BH,SAAS,iBAAiB;AAAA,EAC/B,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,YAAY;AAAA,EACZ,WAAW;AAAA,EACX;AACF,GAA0B;AACxB,QAAM,EAAE,iBAAiB,aAAa,SAAS,IAAI,YAAY;AAE/D,QAAM,uBAAuB,CAAC,UAAkB;AAC9C,UAAM,cAAc;AACpB,gBAAY,WAAW;AACvB,uBAAmB,WAAW;AAAA,EAChC;AAGA,QAAM,sBAAsB,SAAS;AAErC,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,OAAO;AAAA,MACP,eAAe;AAAA,MACf;AAAA,MAEA;AAAA,wBAAAD,MAAC,iBAAc,WAAW,wBAAwB,SAAS,IACzD,0BAAAA,MAAC,eACC,0BAAAC,MAAC,UAAK,WAAU,2BACb;AAAA,yBACC,gBAAAD,MAAC,UAAK,WAAU,uBACb,8BAAoB,QAAQ,MAAM,UACrC;AAAA,UAED,aACC,gBAAAA,MAAC,UAAK,WAAU,WACb,2BACH;AAAA,WAEJ,GACF,GACF;AAAA,QAEA,gBAAAA,MAAC,iBACE,8BAAoB,IAAI,CAAC,aACxB,gBAAAA,MAAC,cAA+B,OAAO,SAAS,MAC9C,0BAAAC,MAAC,SAAI,WAAU,2BACZ;AAAA,yBACC,gBAAAD,MAAC,UAAK,WAAU,eACb,mBAAS,QACZ;AAAA,UAED,aACC,gBAAAA,MAAC,UACE,mBAAS,MACZ;AAAA,UAEF,gBAAAA,MAAC,UAAK,WAAU,iCACb,mBAAS,MACZ;AAAA,WACF,KAfe,SAAS,IAgB1B,CACD,GACH;AAAA;AAAA;AAAA,EACF;AAEJ;;;ACvFA,YAAYE,YAAW;AACvB,YAAY,qBAAqB;AACjC,SAAS,SAAS;AAehB,gBAAAC,OA0BI,QAAAC,aA1BJ;AAZF,IAAM,SAAyB;AAE/B,IAAM,gBAAgC;AAEtC,IAAM,eAA+B;AAIrC,IAAM,gBAAsB,kBAG1B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAC;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,cAAc,cAA8B,wBAAQ;AAEpD,IAAM,gBAAsB,kBAG1B,CAAC,EAAE,WAAW,UAAU,GAAG,MAAM,GAAG,QACpC,gBAAAC,MAAC,gBACC;AAAA,kBAAAF,MAAC,iBAAc;AAAA,EACf,gBAAAE;AAAA,IAAiB;AAAA,IAAhB;AAAA,MACC;AAAA,MACA,WAAWD;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,MACC,GAAG;AAAA,MAEH;AAAA;AAAA,QACD,gBAAAC,MAAiB,uBAAhB,EAAsB,WAAU,iRAC/B;AAAA,0BAAAF,MAAC,KAAE,WAAU,WAAU;AAAA,UACvB,gBAAAA,MAAC,UAAK,WAAU,WAAU,mBAAK;AAAA,WACjC;AAAA;AAAA;AAAA,EACF;AAAA,GACF,CACD;AACD,cAAc,cAA8B,wBAAQ;AAEpD,IAAM,eAAe,CAAC;AAAA,EACpB;AAAA,EACA,GAAG;AACL,MACE,gBAAAA;AAAA,EAAC;AAAA;AAAA,IACC,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN;AAEF,aAAa,cAAc;AAE3B,IAAM,eAAe,CAAC;AAAA,EACpB;AAAA,EACA,GAAG;AACL,MACE,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN;AAEF,aAAa,cAAc;AAE3B,IAAM,cAAoB,kBAGxB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,YAAY,cAA8B,sBAAM;AAEhD,IAAM,oBAA0B,kBAG9B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAiB;AAAA,EAAhB;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,iCAAiC,SAAS;AAAA,IACvD,GAAG;AAAA;AACN,CACD;AACD,kBAAkB,cAA8B,4BAAY;;;AC7F5D,SAAS,eAAe,aAAa,MAAM,aAAa,eAAe;AA2F3D,gBAAAE,OACA,QAAAC,aADA;AAzEZ,IAAM,gBAAgB,CAAC,SAA2B;AAChD,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF;AACE,aAAO;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,EACJ;AACF;AAEO,IAAM,qBAAwD,CAAC;AAAA,EACpE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,WAAW;AACb,MAAM;AACJ,QAAM,SAAS,cAAc,IAAI;AACjC,QAAM,gBAAgB,OAAO;AAE7B,QAAM,gBAAgB,MAAM;AAC1B,cAAU;AACV,iBAAa,KAAK;AAAA,EACpB;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX;AACA,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAD,MAAC,UAAO,MAAY,cAClB,0BAAAC,MAAC,iBAAc,WAAU,YACvB;AAAA,oBAAAD,MAAC,gBACC,0BAAAC,MAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD,MAAC,iBAAc,WAAW,WAAW,OAAO,SAAS,IAAI;AAAA,MACzD,gBAAAC,MAAC,SACC;AAAA,wBAAAD,MAAC,eAAY,WAAU,yBACpB,iBACH;AAAA,QACA,gBAAAA,MAAC,qBAAkB,WAAU,8BAC1B,uBACH;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAEA,gBAAAC,MAAC,gBAAa,WAAU,mCACtB;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU,aAAa;AAAA,UAEtB;AAAA;AAAA,MACH;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,OAAO;AAAA,UAChB,SAAS;AAAA,UACT,UAAU,aAAa;AAAA,UACvB,WAAW,OAAO;AAAA,UAEjB,sBAAY,kBAAmB,eAAe;AAAA;AAAA,MACjD;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;ACrIA,SAAgB,gBAAgB;;;ACFhC,YAAYE,YAAW;AAwBnB,gBAAAC,aAAA;AAfJ,IAAM,WAAiB,kBAA+C,CAAC,EAAE,WAAW,UAAU,UAAU,GAAG,MAAM,GAAG,QAAQ;AAC1H,QAAM,OACJ;AAEF,QAAM,WAAkE;AAAA,IACtE,SAAS;AAAA,IACT,QACE;AAAA,IACF,WACE;AAAA,IACF,OACE;AAAA,EACJ;AAEA,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,WAAWC,IAAG,SAAS,OAAO,GAAG,SAAS;AAAA,MAC1C;AAAA,MACC,GAAG;AAAA;AAAA,EACN;AAEJ,CAAC;AACD,SAAS,cAAc;;;AC/BvB,OAAOC,YAAW;AAcZ,SASe,OAAAC,OATf,QAAAC,aAAA;AAHN,IAAMC,SAAQC,OAAM;AAAA,EAClB,CAAC,EAAE,WAAW,UAAU,UAAU,GAAG,MAAM,GAAG,QAAQ;AACpD,WACE,gBAAAF;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,QACC,GAAG;AAAA,QAEH;AAAA;AAAA,UACA,YAAY,gBAAAD,MAAC,UAAK,WAAU,qBAAoB,eAAC;AAAA;AAAA;AAAA,IACpD;AAAA,EAEJ;AACF;AAEAE,OAAM,cAAc;;;AFfpB,SAAS,iBAAAE,gBAAe,eAAAC,cAAa,QAAAC,OAAM,eAAAC,cAAa,WAAAC,gBAAe;AAuG3D,gBAAAC,OACA,QAAAC,aADA;AAlFZ,IAAMC,iBAAgB,CAAC,SAA2B;AAChD,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO;AAAA,QACL,MAAMH;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAMJ;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAME;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,MAAMC;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,IACF;AACE,aAAO;AAAA,QACL,MAAMF;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,QACf,aAAa;AAAA,MACf;AAAA,EACJ;AACF;AAEO,IAAM,+BAA4E,CAAC;AAAA,EACxF;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,gBAAgB;AAClB,MAAM;AACJ,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,EAAE;AAEvC,QAAM,SAASM,eAAc,IAAI;AACjC,QAAM,gBAAgB,OAAO;AAE7B,QAAM,gBAAgB,MAAM;AAC1B,cAAU,OAAO,KAAK,CAAC;AACvB,cAAU,EAAE;AACZ,iBAAa,KAAK;AAAA,EACpB;AAEA,QAAM,eAAe,MAAM;AACzB,cAAU,EAAE;AACZ,QAAI,UAAU;AACZ,eAAS;AAAA,IACX;AACA,iBAAa,KAAK;AAAA,EACpB;AAEA,QAAM,oBAAoB,aAAa,YAAa,iBAAiB,CAAC,OAAO,KAAK;AAElF,SACE,gBAAAF,MAAC,UAAO,MAAY,cAClB,0BAAAC,MAAC,iBAAc,WAAU,YACvB;AAAA,oBAAAD,MAAC,gBACC,0BAAAC,MAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD,MAAC,iBAAc,WAAW,WAAW,OAAO,SAAS,IAAI;AAAA,MACzD,gBAAAC,MAAC,SACC;AAAA,wBAAAD,MAAC,eAAY,WAAU,yBACpB,iBACH;AAAA,QACA,gBAAAA,MAAC,qBAAkB,WAAU,8BAC1B,uBACH;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAEA,gBAAAA,MAAC,SAAI,WAAU,kBACb,0BAAAC,MAAC,SACC;AAAA,sBAAAD,MAACG,QAAA,EAAM,SAAQ,UAAU,uBAAY;AAAA,MACrC,gBAAAH;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO;AAAA,UACP,UAAU,CAACI,OAAM,UAAUA,GAAE,OAAO,KAAK;AAAA,UACzC,aAAa;AAAA,UACb,MAAM;AAAA,UACN,WAAU;AAAA;AAAA,MACZ;AAAA,OACF,GACF;AAAA,IAEA,gBAAAH,MAAC,gBAAa,WAAU,mCACtB;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU,aAAa;AAAA,UAEtB;AAAA;AAAA,MACH;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,OAAO;AAAA,UAChB,SAAS;AAAA,UACT,UAAU;AAAA,UACV,WAAW,OAAO;AAAA,UAEjB,sBAAY,kBAAmB,eAAe;AAAA;AAAA,MACjD;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AGnKA,YAAYK,aAAW;AA4BnB,gBAAAC,OAWA,QAAAC,cAXA;AAlBJ,IAAM,QAAc,mBAAyC,CAC3D,EAAE,WAAW,MAAM,UAAU,UAAU,aAAa,GAAG,MAAM,GAC7D,QACG;AACH,QAAM,OACJ;AAEF,QAAM,WAA+D;AAAA,IACnE,SAAS;AAAA,IACT,QACE;AAAA,IACF,WACE;AAAA,IACF,OACE;AAAA,EACJ;AAEA,QAAM,QACJ,gBAAAD;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,WAAWE,IAAG,SAAS,OAAO,GAAG,SAAS;AAAA,MAC1C;AAAA,MACC,GAAG;AAAA;AAAA,EACN;AAGF,MAAI,CAAC;AAAa,WAAO;AAEzB,SACE,gBAAAD,OAAC,SAAI,WAAU,YACb;AAAA,oBAAAD,MAAC,UAAK,WAAU,0DAA0D,uBAAY;AAAA,IAC/E,qBAAa,OAAc;AAAA,MAChC,WAAWE,IAAG,SAAS,OAAO,GAAG,QAAQ,SAAS;AAAA,IACpD,CAAC;AAAA,KACH;AAEJ,CAAC;AACD,MAAM,cAAc;;;ACDR,gBAAAC,OAOF,QAAAC,cAPE;AA1BL,SAAS,iBAAiB;AAAA,EAC/B,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV;AACF,GAA0B;AAGxB,QAAMC,eAAc;AAAA,IAClB,IAAI,EAAE,WAAW,WAAW,KAAK,OAAO,UAAU,WAAW,MAAM,WAAW,SAAS,UAAU;AAAA,IACjG,IAAI,EAAE,WAAW,aAAa,KAAK,SAAS,UAAU,WAAW,MAAM,WAAW,SAAS,UAAU;AAAA,IACrG,IAAI,EAAE,WAAW,WAAW,KAAK,OAAO,UAAU,aAAa,MAAM,WAAW,SAAS,YAAY;AAAA,EACvG;AAEA,QAAM,QAAQA,aAAY,IAAI;AAE9B,SACE,gBAAAD,OAAC,SAAI,WAAW,GAAG,uDAAuD,SAAS,GAEhF;AAAA,gBAAY,SACX,gBAAAD,MAAC,SAAI,WAAU,iDACb,0BAAAA,MAAC,SAAI,WAAW;AAAA,MACd;AAAA,MACA;AAAA,MACA,MAAM;AAAA,IACR,GACE,0BAAAA,MAAC,SAAI,WAAU,+FAA8F,GAC/G,GACF;AAAA,IAGD,YAAY,cACX,gBAAAA,MAAC,SAAI,WAAW,GAAG,YAAY,MAAM,QAAQ,GAC3C,0BAAAC,OAAC,SAAI,WAAU,sCAAqC,SAAQ,aAE1D;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,MAAK;AAAA,UACL,GAAE;AAAA;AAAA,MAGJ;AAAA,MAEA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,QAAO;AAAA,UACP,aAAY;AAAA,UACZ,eAAc;AAAA,UACd,MAAK;AAAA,UACL,iBAAgB;AAAA,UAChB,kBAAiB;AAAA,UACjB,GAAE;AAAA;AAAA,MAGJ;AAAA,OACF,GACF;AAAA,IAGD,YAAY,UACX,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,sBAAAD,MAAC,SAAI,WAAW,GAAG,MAAM,MAAM,kEAAkE,GAAG;AAAA,MACpG,gBAAAA,MAAC,SAAI,WAAW,GAAG,MAAM,MAAM,mEAAmE,GAAG;AAAA,MACrG,gBAAAA,MAAC,SAAI,WAAW,GAAG,MAAM,MAAM,0CAA0C,GAAG;AAAA,OAC9E;AAAA,IAGD,YAAY,WACX,gBAAAC,OAAC,SAAI,WAAU,YACb;AAAA,sBAAAD,MAAC,SAAI,WAAW,GAAG,MAAM,SAAS,4DAA4D,GAAG;AAAA,MACjG,gBAAAA,MAAC,SAAI,WAAW,GAAG,MAAM,SAAS,oCAAoC,GAAG;AAAA,OAC3E;AAAA,IAGD,YAAY,aACX,gBAAAC;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,GAAG,+BAA+B,MAAM,OAAO;AAAA,QAC1D,OAAM;AAAA,QACN,MAAK;AAAA,QACL,SAAQ;AAAA,QAER;AAAA,0BAAAD,MAAC,YAAO,WAAU,cAAa,IAAG,MAAK,IAAG,MAAK,GAAE,MAAK,QAAO,gBAAe,aAAY,KAAI;AAAA,UAC5F,gBAAAA,MAAC,UAAK,WAAU,cAAa,MAAK,gBAAe,GAAE,mHAAkH;AAAA;AAAA;AAAA,IACvK;AAAA,IAID,WACC,gBAAAA,MAAC,OAAE,WAAW,GAAG,6BAA6B,MAAM,SAAS,GAC1D,mBACH;AAAA,KAEJ;AAEJ;AAKO,SAAS,cAAc;AAAA,EAC5B,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AACF,GAAkE;AAChE,QAAME,eAAc;AAAA,IAClB,IAAI,EAAE,MAAM,eAAe,SAAS,UAAU;AAAA,IAC9C,IAAI,EAAE,MAAM,WAAW,SAAS,UAAU;AAAA,IAC1C,IAAI,EAAE,MAAM,WAAW,SAAS,UAAU;AAAA,EAC5C;AAEA,QAAM,QAAQA,aAAY,IAAI;AAE9B,MAAI,YAAY,QAAQ;AACtB,WACE,gBAAAD,OAAC,SAAI,WAAW,GAAG,+BAA+B,SAAS,GACzD;AAAA,sBAAAD,MAAC,SAAI,WAAW,GAAG,MAAM,MAAM,gEAAgE,GAAG;AAAA,MAClG,gBAAAA,MAAC,SAAI,WAAW,GAAG,MAAM,MAAM,iEAAiE,GAAG;AAAA,MACnG,gBAAAA,MAAC,SAAI,WAAW,GAAG,MAAM,MAAM,wCAAwC,GAAG;AAAA,OAC5E;AAAA,EAEJ;AAEA,SACE,gBAAAC;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,GAAG,gBAAgB,MAAM,SAAS,SAAS;AAAA,MACtD,OAAM;AAAA,MACN,MAAK;AAAA,MACL,SAAQ;AAAA,MAER;AAAA,wBAAAD,MAAC,YAAO,WAAU,cAAa,IAAG,MAAK,IAAG,MAAK,GAAE,MAAK,QAAO,gBAAe,aAAY,KAAI;AAAA,QAC5F,gBAAAA,MAAC,UAAK,WAAU,cAAa,MAAK,gBAAe,GAAE,mHAAkH;AAAA;AAAA;AAAA,EACvK;AAEJ;;;ACzJA,SAAgB,eAAe,YAAY,YAAAG,WAAU,iBAA4B;AA4F7E,gBAAAC,aAAA;AAvEJ,IAAM,kBAA0E;AAAA,EAC9E,KAAK,EAAE,QAAQ,KAAK,MAAM,YAAY;AAAA,EACtC,KAAK,EAAE,QAAQ,UAAK,MAAM,kBAAkB;AAC9C;AAGA,IAAM,kBAAkB,cAAmC;AAAA,EACzD,UAAU;AAAA,EACV,aAAa,MAAM;AAAA,EAAC;AAAA,EACpB,QAAQ;AAAA,EACR,MAAM;AACR,CAAC;AAiCM,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA,kBAAkB;AAAA,EAClB;AACF,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAID;AAAA,IAC9B,oBAAoB;AAAA,EACtB;AAGA,YAAU,MAAM;AACd,QAAI,oBAAoB,qBAAqB,UAAU;AACrD,kBAAY,gBAAgB;AAAA,IAC9B;AAAA,EACF,GAAG,CAAC,gBAAgB,CAAC;AAGrB,QAAM,SAAS,gBAAgB,QAAQ,KAAK,gBAAgB;AAE5D,QAAM,QAA6B;AAAA,IACjC;AAAA,IACA;AAAA,IACA,QAAQ,OAAO;AAAA,IACf,MAAM,OAAO;AAAA,EACf;AAEA,SACE,gBAAAC,MAAC,gBAAgB,UAAhB,EAAyB,OACvB,UACH;AAEJ;AAqBO,IAAMC,eAAc,MAA2B;AACpD,QAAM,UAAU,WAAW,eAAe;AAE1C,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,MAAM,oDAAoD;AAAA,EACtE;AAEA,SAAO;AACT;AAsBO,SAAS,aACdC,YAC+B;AAC/B,SAAO,SAAS,yBAAyB,OAA4B;AACnE,UAAM,EAAE,SAAS,IAAID,aAAY;AACjC,WAAO,gBAAAD,MAACE,YAAA,EAAW,GAAI,OAAa,UAAoB;AAAA,EAC1D;AACF;;;ACzIA,SAAS,sBAAsB;AAExB,SAAS,oBAAoB;AAClC,QAAM,EAAE,SAAS,IAAIC,aAAY;AAOjC,SAAO,CAAC,WAA8C;AACpD,WAAO,eAAe,QAAQ,QAAQ;AAAA,EACxC;AACF;;;ACWW,gBAAAC,aAAA;AATJ,IAAM,QAA8B,CAAC;AAAA,EAC1C;AAAA,EACA,YAAY;AAAA,EACZ,SAAS;AACX,MAAM;AACJ,QAAM,SAAS,kBAAkB;AACjC,QAAM,YAAY,OAAO,MAAM;AAE/B,MAAI,QAAQ;AACV,WAAO,gBAAAA,MAAC,UAAK,WAAuB,qBAAU;AAAA,EAChD;AAEA,SAAO,gBAAAA,MAAC,SAAI,WAAuB,qBAAU;AAC/C;AAKO,IAAM,YAAqD,CAAC,EAAE,QAAQ,OAAO,MAClF,gBAAAA,MAAC,SAAM,QAAgB,WAAU,aAAY,QAAgB;AAMxD,IAAM,aAAsD,CAAC,EAAE,QAAQ,OAAO,MACnF,gBAAAA,MAAC,SAAM,QAAgB,WAAU,yBAAwB,QAAgB;;;AC5D3E,OAAOC,aAAW;AAeZ,gBAAAC,aAAA;AAHN,IAAMC,aAAYC,QAAM;AAAA,EACtB,CAAC,EAAE,WAAW,cAAc,cAAc,aAAa,MAAM,GAAG,MAAM,GAAG,QAAQ;AAC/E,WACE,gBAAAF;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,MAAM,aAAa,SAAS;AAAA,QAC5B,oBAAkB;AAAA,QAClB,WAAW;AAAA,UACT;AAAA,UACA,gBAAgB,eAAe,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,QACC,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AAEAC,WAAU,cAAc;;;AC5BxB,YAAYE,aAAW;AAejB,gBAAAC,aAAA;AAPN,IAAM,SAAe;AAAA,EACnB,CAAC,EAAE,WAAW,SAAS,iBAAiB,GAAG,MAAM,GAAG,QAAQ;AAC1D,UAAM,eAAe,CAAC,UAA+C;AACnE,wBAAkB,MAAM,OAAO,OAAO;AAAA,IACxC;AAEA,WACE,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,WAAWC;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,QACA,OAAO;AAAA,UACL,YAAY,UAAU,yBAAyB;AAAA,QACjD;AAAA,QACC,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AAEA,OAAO,cAAc;;;ACnCrB,YAAYC,aAAW;AACvB,SAAS,eAAAC,cAAa,SAAAC,cAAa;AAQjC,gBAAAC,OAwJA,QAAAC,cAxJA;AAJF,IAAM,eAAqB,mBAGzB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD,MAAC,SAAI,KAAU,WAAWE,IAAG,YAAY,SAAS,GAAI,GAAG,OAAO,CACjE;AACD,aAAa,cAAc;AAE3B,IAAM,sBAA4B,mBAMhC,CAAC,EAAE,WAAW,UAAU,UAAU,UAAU,OAAO,GAAG,MAAM,GAAG,QAAQ;AACvE,MAAI,WAAiB,uBAAe,QAAQ,GAAG;AAC7C,WAAa,qBAAa,UAAqC;AAAA,MAC7D,GAAG;AAAA,MACH;AAAA,MACA,SAAS,CAACC,OAAwB;AAChC,QAAAA,GAAE,gBAAgB;AAClB,mBAAW,IAAI;AACf,iBAAS,MAAM,UAAUA,EAAC;AAAA,MAC5B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SACE,gBAAAH;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,SAAQ;AAAA,MACR,WAAWE;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,MACA,SAAS,CAACC,OAAM;AACd,QAAAA,GAAE,gBAAgB;AAClB,mBAAW,IAAI;AAAA,MACjB;AAAA,MACC,GAAG;AAAA,MAEH;AAAA;AAAA,EACH;AAEJ,CAAC;AACD,oBAAoB,cAAc;AAElC,IAAM,sBAA4B,mBAQhC,CAAC,EAAE,WAAW,QAAQ,SAAS,aAAa,GAAG,OAAO,OAAO,cAAc,GAAG,MAAM,GAAG,QAAQ;AAC/F,QAAM,aAAmB,eAAuB,IAAI;AAEpD,EAAM,kBAAU,MAAM;AACpB,UAAM,qBAAqB,CAAC,UAAsB;AAChD,UAAI,QAAQ,WAAW,WAAW,CAAC,WAAW,QAAQ,SAAS,MAAM,MAAc,GAAG;AACpF,uBAAe,KAAK;AAAA,MACtB;AAAA,IACF;AAEA,QAAI,MAAM;AACR,eAAS,iBAAiB,aAAa,kBAAkB;AACzD,aAAO,MAAM,SAAS,oBAAoB,aAAa,kBAAkB;AAAA,IAC3E;AAAA,EACF,GAAG,CAAC,MAAM,YAAY,CAAC;AAEvB,MAAI,CAAC;AAAM,WAAO;AAElB,SACE,gBAAAH;AAAA,IAAC;AAAA;AAAA,MACC,KAAK,CAAC,SAAS;AACb,QAAC,WAA6D,UAAU;AACxE,YAAI,OAAO,QAAQ,YAAY;AAC7B,cAAI,IAAI;AAAA,QACV,WAAW,KAAK;AACd,UAAC,IAAsD,UAAU;AAAA,QACnE;AAAA,MACF;AAAA,MACA,WAAWE;AAAA,QACT;AAAA,QACA,UAAU,QAAQ,YAAY;AAAA,QAC9B;AAAA,MACF;AAAA,MACA,OAAO,EAAE,WAAW,WAAW;AAAA,MAC/B,SAAS,CAACC,OAAMA,GAAE,gBAAgB;AAAA,MACjC,GAAG;AAAA;AAAA,EACN;AAEJ,CAAC;AACD,oBAAoB,cAAc;AAElC,IAAM,mBAAyB,mBAM7B,CAAC,EAAE,WAAW,OAAO,UAAU,SAAS,GAAG,MAAM,GAAG,QACpD,gBAAAH;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWE;AAAA,MACT;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF;AAAA,IACA,SAAS,CAACC,OAAM;AACd,MAAAA,GAAE,gBAAgB;AAClB,iBAAW;AACX,gBAAUA,EAAC;AAAA,IACb;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,iBAAiB,cAAc;AAE/B,IAAM,wBAA8B,mBAGlC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAH;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWE,IAAG,4BAA4B,SAAS;AAAA,IAClD,GAAG;AAAA;AACN,CACD;AACD,sBAAsB,cAAc;AAEpC,IAAM,oBAA0B,mBAK9B,CAAC,EAAE,WAAW,OAAO,GAAG,MAAM,GAAG,QACjC,gBAAAF;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWE;AAAA,MACT;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,kBAAkB,cAAc;AAEhC,IAAM,2BAAiC,mBAKrC,CAAC,EAAE,WAAW,UAAU,SAAS,GAAG,MAAM,GAAG,QAC7C,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEJ;AAAA,sBAAAF,MAAC,UAAK,WAAU,gEACb,qBAAW,gBAAAA,MAACI,QAAA,EAAM,WAAU,WAAU,GACzC;AAAA,MACC;AAAA;AAAA;AACH,CACD;AACD,yBAAyB,cAAc;AAEvC,IAAM,wBAA8B,mBAKlC,CAAC,EAAE,WAAW,UAAU,SAAS,GAAG,MAAM,GAAG,QAC7C,gBAAAH;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEJ;AAAA,sBAAAF,MAAC,UAAK,WAAU,gEACb,qBAAW,gBAAAA,MAAC,SAAI,WAAU,mCAAkC,GAC/D;AAAA,MACC;AAAA;AAAA;AACH,CACD;AACD,sBAAsB,cAAc;AAEpC,IAAM,uBAAuB,CAAC;AAAA,EAC5B;AAAA,EACA,GAAG;AACL,MAA6C;AAC3C,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,WAAWE,IAAG,8CAA8C,SAAS;AAAA,MACpE,GAAG;AAAA;AAAA,EACN;AAEJ;AACA,qBAAqB,cAAc;AAEnC,IAAM,oBAA0B,mBAG9B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAF,MAAC,SAAI,KAAU,WAAWE,IAAG,IAAI,SAAS,GAAI,GAAG,OAAO,CACzD;AACD,kBAAkB,cAAc;AAEhC,IAAM,qBAA2B,mBAG/B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAF,MAAC,SAAI,KAAU,WAAWE,IAAG,IAAI,SAAS,GAAI,GAAG,OAAO,CACzD;AACD,mBAAmB,cAAc;AAEjC,IAAM,kBAAwB,mBAG5B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAF,MAAC,SAAI,KAAU,WAAWE,IAAG,IAAI,SAAS,GAAI,GAAG,OAAO,CACzD;AACD,gBAAgB,cAAc;AAE9B,IAAM,yBAA+B,mBAGnC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAF;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWE;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,uBAAuB,cAAc;AAErC,IAAM,yBAA+B,mBAKnC,CAAC,EAAE,WAAW,OAAO,UAAU,GAAG,MAAM,GAAG,QAC3C,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF;AAAA,IACC,GAAG;AAAA,IAEH;AAAA;AAAA,MACD,gBAAAF,MAACK,cAAA,EAAY,WAAU,mBAAkB;AAAA;AAAA;AAC3C,CACD;AACD,uBAAuB,cAAc;AAErC,IAAM,yBAA+B,mBAGnC,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAL,MAAC,SAAI,KAAU,WAAWE,IAAG,IAAI,SAAS,GAAI,GAAG,OAAO,CACzD;AACD,uBAAuB,cAAc;;;ACtRrC,YAAYI,aAAW;AAQnB,gBAAAC,aAAA;AALJ,IAAM,QAAc,mBAGlB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAA,MAAC,SAAI,WAAU,iCACb,0BAAAA;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,iCAAiC,SAAS;AAAA,IACvD,GAAG;AAAA;AACN,GACF,CACD;AACD,MAAM,cAAc;AAEpB,IAAM,cAAoB,mBAGxB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD,MAAC,WAAM,KAAU,WAAWC,IAAG,mBAAmB,SAAS,GAAI,GAAG,OAAO,CAC1E;AACD,YAAY,cAAc;AAE1B,IAAM,YAAkB,mBAGtB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,8BAA8B,SAAS;AAAA,IACpD,GAAG;AAAA;AACN,CACD;AACD,UAAU,cAAc;AAExB,IAAM,cAAoB,mBAGxB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,YAAY,cAAc;AAE1B,IAAM,WAAiB,mBAGrB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,SAAS,cAAc;AAEvB,IAAM,YAAkB,mBAGtB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC;AAAA,MACT;AAAA,MACA;AAAA,IACF;AAAA,IACC,GAAG;AAAA;AACN,CACD;AACD,UAAU,cAAc;AAExB,IAAM,YAAkB,mBAGtB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,kDAAkD,SAAS;AAAA,IACxE,GAAG;AAAA;AACN,CACD;AACD,UAAU,cAAc;AAExB,IAAM,eAAqB,mBAGzB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAC1B,gBAAAD;AAAA,EAAC;AAAA;AAAA,IACC;AAAA,IACA,WAAWC,IAAG,sCAAsC,SAAS;AAAA,IAC5D,GAAG;AAAA;AACN,CACD;AACD,aAAa,cAAc;;;ACtG3B,SAAgB,YAAAC,WAAU,aAAAC,kBAAiB;AAoHnC,SAEe,OAAAC,OAFf,QAAAC,cAAA;AA/FD,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,MAAM;AAAA,EACN;AAAA,EACA,OAAO;AAAA,EACP,WAAW;AAAA,EACX;AAAA,EACA,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB;AACF,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIC,UAAiB,EAAE;AAG3D,EAAAC,WAAU,MAAM;AACd,oBAAgB,sBAAsB,SAAS,CAAC,CAAC;AAAA,EACnD,GAAG,CAAC,KAAK,CAAC;AAGV,QAAM,wBAAwB,CAAC,aAA6B;AAE1D,QAAI,aAAa,UAAa,aAAa,QAAQ,MAAM,QAAQ,GAAG;AAClE,aAAO;AAAA,IACT;AAEA,QAAI,aAAa;AAAG,aAAO;AAE3B,QAAI,eAAe;AACjB,aAAO,SAAS,eAAe,SAAS;AAAA,QACtC,uBAAuB;AAAA,QACvB,uBAAuB;AAAA,MACzB,CAAC;AAAA,IACH,OAAO;AACL,aAAO,SAAS,eAAe,OAAO;AAAA,IACxC;AAAA,EACF;AAGA,QAAM,oBAAoB,CAAC,eAAuB;AAEhD,QAAI,CAAC,cAAc,WAAW,KAAK,MAAM,IAAI;AAC3C,sBAAgB,EAAE;AAClB,eAAS,CAAC;AACV;AAAA,IACF;AAGA,UAAM,QAAQ,gBAAgB,YAAY;AAC1C,UAAM,aAAa,WAAW,QAAQ,OAAO,EAAE;AAG/C,QAAI,eAAe;AACjB,YAAM,QAAQ,WAAW,MAAM,GAAG;AAClC,UAAI,MAAM,SAAS;AAAG;AAGtB,UAAI,MAAM,CAAC,KAAK,MAAM,CAAC,EAAE,SAAS;AAAkB;AAAA,IACtD;AAGA,UAAM,eAAe,gBAAgB,WAAW,UAAU,KAAK,IAAI,SAAS,UAAU,KAAK;AAG3F,QAAI,QAAQ,UAAa,eAAe;AAAK;AAC7C,QAAI,QAAQ,UAAa,eAAe;AAAK;AAG7C,oBAAgB,UAAU;AAG1B,aAAS,YAAY;AAAA,EACvB;AAGA,QAAM,aAAa,MAAM;AACvB,QAAI,SAAS,QAAQ,GAAG;AACtB,sBAAgB,sBAAsB,KAAK,CAAC;AAAA,IAC9C;AAAA,EACF;AAGA,QAAM,cAAc,MAAM;AACxB,QAAI,SAAS,QAAQ,GAAG;AACtB,sBAAgB,MAAM,SAAS,CAAC;AAAA,IAClC;AAAA,EACF;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAU,aACZ;AAAA,aACC,gBAAAA,OAAC,WAAM,WAAU,yCACd;AAAA;AAAA,MACA,YAAY,gBAAAD,MAAC,UAAK,WAAU,qBAAoB,eAAC;AAAA,OACpD;AAAA,IAEF,gBAAAC,OAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,OAAO;AAAA,UACP,UAAU,CAACI,OAAM,kBAAkBA,GAAE,OAAO,KAAK;AAAA,UACjD,QAAQ;AAAA,UACR,SAAS;AAAA,UACT;AAAA,UACA,WAAW;AAAA,YACT,SAAS,UAAU;AAAA,YACnB,SAAS;AAAA,YACT;AAAA,UACF;AAAA,UACA;AAAA;AAAA,MACF;AAAA,MACC,UACC,gBAAAJ,MAAC,UAAK,WAAU,+FACb,kBACH;AAAA,OAEJ;AAAA,KACF;AAEJ;AAGO,IAAM,aAAa;;;ACnJ1B,SAAgB,YAAAK,iBAAgB;AAY1B,gBAAAC,OAWI,QAAAC,cAXJ;AARC,IAAM,mBAA6B,MAAM;AAC9C,QAAM,CAAC,OAAO,QAAQ,IAAIC,UAAiB,CAAC;AAC5C,QAAM,CAAC,UAAU,WAAW,IAAIA,UAAiB,CAAC;AAClD,QAAM,CAAC,QAAQ,SAAS,IAAIA,UAAiB,CAAC;AAC9C,QAAM,CAAC,YAAY,aAAa,IAAIA,UAAiB,CAAC;AAEtD,SACE,gBAAAD,OAAC,SAAI,WAAU,iBACb;AAAA,oBAAAD,MAAC,QAAG,WAAU,sBAAqB,yCAA2B;AAAA,IAC9D,gBAAAA,MAAC,OAAE,WAAU,iBAAgB,0GAE7B;AAAA,IAEA,gBAAAC,OAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAA,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,0CAA4B,GACzC;AAAA,QACA,gBAAAC,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO;AAAA,cACP,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,eAAe;AAAA,cACf,kBAAkB;AAAA,cAClB,QAAO;AAAA;AAAA,UACT;AAAA,UAEA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO;AAAA,cACP,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,eAAe;AAAA,cACf,kBAAkB;AAAA,cAClB,QAAO;AAAA;AAAA,UACT;AAAA,UAEA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO;AAAA,cACP,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,eAAe;AAAA,cACf,kBAAkB;AAAA;AAAA,UACpB;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,2CAA6B,GAC1C;AAAA,QACA,gBAAAC,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO;AAAA,cACP,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,eAAe;AAAA,cACf,KAAK;AAAA;AAAA,UACP;AAAA,UAEA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO;AAAA,cACP,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,eAAe;AAAA,cACf,KAAK;AAAA,cACL,QAAO;AAAA;AAAA,UACT;AAAA,UAEA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,OAAO;AAAA,cACP,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,eAAe;AAAA,cACf,KAAK;AAAA,cACL,KAAK;AAAA,cACL,QAAO;AAAA;AAAA,UACT;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,4BAAc,GAC3B;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAC,OAAC,SAAI,WAAU,iDACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,UAAK,WAAU,eAAc,oBAAM;AAAA,UAAO;AAAA,UAAG,MAAM,QAAQ,CAAC;AAAA,WAC/D;AAAA,QACA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,MAAC,UAAK,WAAU,eAAc,uBAAS;AAAA,UAAO;AAAA,UAAE;AAAA,WAClD;AAAA,QACA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,MAAC,UAAK,WAAU,eAAc,qBAAO;AAAA,UAAO;AAAA,UAAE;AAAA,UAAO;AAAA,WACvD;AAAA,QACA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,MAAC,UAAK,WAAU,eAAc,yBAAW;AAAA,UAAO;AAAA,UAAE;AAAA,UAAW;AAAA,WAC/D;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,sBAAQ,GACrB;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAC,OAAC,QAAG,WAAU,qBACZ;AAAA,wBAAAD,MAAC,QAAG,gEAA6C;AAAA,QACjD,gBAAAA,MAAC,QAAG,8DAA2C;AAAA,QAC/C,gBAAAA,MAAC,QAAG,sDAAmC;AAAA,QACvC,gBAAAA,MAAC,QAAG,4DAAyC;AAAA,QAC7C,gBAAAA,MAAC,QAAG,wCAAqB;AAAA,QACzB,gBAAAA,MAAC,QAAG,wCAAqB;AAAA,QACzB,gBAAAA,MAAC,QAAG,2CAAwB;AAAA,QAC5B,gBAAAA,MAAC,QAAG,yCAAsB;AAAA,QAC1B,gBAAAA,MAAC,QAAG,6DAA0C;AAAA,SAChD,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACjEM,SAEe,OAAAG,OAFf,QAAAC,cAAA;AArDC,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,MAAM;AAAA,EACN;AAAA,EACA,WAAW;AAAA,EACX,WAAW;AACb,MAAM;AACJ,QAAM,eAAe,CAACC,OAA2C;AAC/D,UAAM,aAAaA,GAAE,OAAO;AAG5B,QAAI,CAAC,cAAc,WAAW,KAAK,MAAM,IAAI;AAC3C,eAAS,EAAE;AACX;AAAA,IACF;AAGA,UAAM,eAAe,SAAS,UAAU;AAGxC,QAAI,MAAM,YAAY,GAAG;AACvB;AAAA,IACF;AAGA,QAAI,QAAQ,UAAa,eAAe,OAAO,iBAAiB,IAAI;AAClE;AAAA,IACF;AACA,QAAI,QAAQ,UAAa,eAAe,KAAK;AAC3C;AAAA,IACF;AAGA,aAAS,YAAY;AAAA,EACvB;AAEA,QAAM,kBAAkB,MAAM;AAC5B,QAAI,UAAU,UAAa,UAAU,MAAM;AACzC,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,SAAS;AAAA,EACxB;AAEA,SACE,gBAAAD,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,OAACE,QAAA,EAAM,SAAS,IACb;AAAA;AAAA,MACA,YAAY,gBAAAH,MAAC,UAAK,WAAU,qBAAoB,eAAC;AAAA,OACpD;AAAA,IACA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,MAAK;AAAA,QACL,OAAO,gBAAgB;AAAA,QACvB,UAAU;AAAA,QACV;AAAA,QACA,KAAK,QAAQ,KAAK,SAAY;AAAA,QAC9B;AAAA,QACA;AAAA,QACA,WAAW;AAAA,UACT,SAAS;AAAA,UACT;AAAA,QACF;AAAA;AAAA,IACF;AAAA,IACC,YACC,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,KAEnD;AAEJ;;;AChGA,SAAgB,YAAAI,WAAU,UAAAC,SAAQ,aAAAC,kBAAiB;AACnD,SAAS,UAAU,aAAa,gBAAAC,eAAc,KAAAC,UAAS;AAsNjD,SASE,OAAAC,OATF,QAAAC,cAAA;AA/LC,IAAM,kBAAkD,CAAC;AAAA,EAC9D,QAAQ,EAAE,MAAM,QAAW,IAAI,OAAU;AAAA,EACzC;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA,WAAW;AAAA,EACX,UAAU,oBAAI,KAAK;AAAA,EACnB;AAAA,EACA,cAAc;AAAA,EACd,SAAS;AAAA,EACT,QAAQ;AACV,MAAM;AACJ,QAAM,CAAC,QAAQ,SAAS,IAAIC,UAAS,KAAK;AAC1C,QAAM,CAAC,cAAc,eAAe,IAAIA,UAAS,MAAM;AACrD,UAAM,YAAY,OAAO,QAAQ,oBAAI,KAAK;AAC1C,WAAO,IAAI,KAAK,UAAU,YAAY,GAAG,UAAU,SAAS,GAAG,CAAC;AAAA,EAClE,CAAC;AACD,QAAM,CAAC,aAAa,cAAc,IAAIA,UAAsB,IAAI;AAChE,QAAM,CAAC,WAAW,YAAY,IAAIA,UAAoB,KAAK;AAC3D,QAAM,eAAeC,QAAuB,IAAI;AAGhD,EAAAC,WAAU,MAAM;AACd,iBAAa,KAAK;AAAA,EACpB,GAAG,CAAC,KAAK,CAAC;AAGV,EAAAA,WAAU,MAAM;AACd,UAAM,qBAAqB,CAAC,UAAsB;AAChD,UAAI,aAAa,WAAW,CAAC,aAAa,QAAQ,SAAS,MAAM,MAAc,GAAG;AAChF,kBAAU,KAAK;AAAA,MACjB;AAAA,IACF;AAEA,aAAS,iBAAiB,aAAa,kBAAkB;AACzD,WAAO,MAAM,SAAS,oBAAoB,aAAa,kBAAkB;AAAA,EAC3E,GAAG,CAAC,CAAC;AAEL,QAAMC,eAAa,CAACC,OAAY,aAA+B,WAAW;AACxE,UAAM,MAAM,OAAOA,MAAK,QAAQ,CAAC,EAAE,SAAS,GAAG,GAAG;AAClD,UAAM,QAAQ,OAAOA,MAAK,SAAS,IAAI,CAAC,EAAE,SAAS,GAAG,GAAG;AACzD,UAAM,OAAOA,MAAK,YAAY;AAE9B,QAAI,eAAe,QAAQ;AACzB,aAAO,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI;AAAA,IAChC;AAEA,WAAO,GAAG,GAAG,IAAI,KAAK;AAAA,EACxB;AAEA,QAAM,qBAAqB,MAAM;AAC/B,QAAI,CAAC,OAAO,QAAQ,CAAC,OAAO;AAAI,aAAO;AAEvC,QAAI,MAAM,QAAQ,MAAM,IAAI;AAC1B,aAAO,GAAGD,aAAW,MAAM,MAAM,MAAM,CAAC,MAAMA,aAAW,MAAM,IAAI,MAAM,CAAC;AAAA,IAC5E;AAEA,QAAI,MAAM,MAAM;AACd,aAAO,QAAQA,aAAW,MAAM,MAAM,MAAM,CAAC;AAAA,IAC/C;AAEA,QAAI,MAAM,IAAI;AACZ,aAAO,MAAMA,aAAW,MAAM,IAAI,MAAM,CAAC;AAAA,IAC3C;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,iBAAiB,CAACC,UAAe;AACrC,UAAM,OAAOA,MAAK,YAAY;AAC9B,UAAM,QAAQA,MAAK,SAAS;AAC5B,UAAM,WAAW,IAAI,KAAK,MAAM,OAAO,CAAC;AACxC,UAAM,UAAU,IAAI,KAAK,MAAM,QAAQ,GAAG,CAAC;AAC3C,UAAMC,eAAc,QAAQ,QAAQ;AACpC,UAAMC,qBAAoB,SAAS,OAAO;AAE1C,WAAO,EAAE,aAAAD,cAAa,mBAAAC,mBAAkB;AAAA,EAC1C;AAEA,QAAM,gBAAgB,CAACF,UAAe;AACpC,QAAI,CAAC,UAAU,QAAQ,CAAC,UAAU;AAAI,aAAO;AAE7C,UAAM,WAAWA,MAAK,QAAQ;AAC9B,UAAM,WAAW,UAAU,MAAM,QAAQ,KAAK;AAC9C,UAAM,SAAS,UAAU,IAAI,QAAQ,KAAK;AAE1C,QAAI,UAAU,QAAQ,UAAU,IAAI;AAClC,aAAO,YAAY,YAAY,YAAY;AAAA,IAC7C;AAEA,QAAI,UAAU,MAAM;AAClB,aAAO,YAAY;AAAA,IACrB;AAEA,QAAI,UAAU,IAAI;AAChB,aAAO,YAAY;AAAA,IACrB;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,iBAAiB,CAACA,UAAe;AACrC,QAAI,CAAC,UAAU,QAAQ,CAAC,UAAU;AAAI,aAAO;AAE7C,UAAM,WAAWA,MAAK,QAAQ;AAC9B,UAAM,WAAW,UAAU,MAAM,QAAQ,KAAK;AAC9C,UAAM,SAAS,UAAU,IAAI,QAAQ,KAAK;AAE1C,WAAO,aAAa,YAAY,aAAa;AAAA,EAC/C;AAEA,QAAM,iBAAiB,CAACA,UAAe;AACrC,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AAEzB,QAAI,WAAWA,QAAO;AAAS,aAAO;AACtC,QAAI,WAAWA,QAAO;AAAS,aAAO;AAEtC,WAAO;AAAA,EACT;AAEA,QAAM,kBAAkB,CAACA,UAAe;AACtC,QAAI,eAAeA,KAAI;AAAG;AAE1B,QAAI,CAAC,UAAU,QAAS,UAAU,QAAQ,UAAU,IAAK;AAEvD,mBAAa,EAAE,MAAMA,OAAM,IAAI,OAAU,CAAC;AAAA,IAC5C,OAAO;AAEL,UAAIA,QAAO,UAAU,MAAO;AAC1B,qBAAa,EAAE,MAAMA,OAAM,IAAI,UAAU,KAAK,CAAC;AAAA,MACjD,OAAO;AACL,qBAAa,EAAE,MAAM,UAAU,MAAM,IAAIA,MAAK,CAAC;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,kBAAkB,CAACA,UAAe;AACtC,QAAI,UAAU,QAAQ,CAAC,UAAU,IAAI;AACnC,qBAAeA,KAAI;AAAA,IACrB;AAAA,EACF;AAEA,QAAM,cAAc,MAAM;AACxB,QAAI,UAAU;AACZ,eAAS,SAAS;AAAA,IACpB;AACA,cAAU,KAAK;AAAA,EACjB;AAEA,QAAM,cAAc,MAAM;AACxB,UAAM,eAAe,EAAE,MAAM,QAAW,IAAI,OAAU;AACtD,iBAAa,YAAY;AACzB,QAAI,UAAU;AACZ,eAAS,YAAY;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,oBAAoB,CAAC,SAAiB;AAC1C,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,OAAO,IAAI,KAAK,KAAK;AAC3B,SAAK,QAAQ,MAAM,QAAQ,IAAI,CAAC;AAEhC,UAAM,KAAK,IAAI,KAAK,IAAI;AACxB,OAAG,QAAQ,KAAK,QAAQ,IAAI,OAAO,CAAC;AAEpC,UAAM,WAAW,EAAE,MAAM,GAAG;AAC5B,iBAAa,QAAQ;AACrB,QAAI,UAAU;AACZ,eAAS,QAAQ;AAAA,IACnB;AACA,cAAU,KAAK;AAAA,EACjB;AAEA,QAAM,gBAAgB,CAAC,cAA+B;AACpD,oBAAgB,UAAQ;AACtB,YAAM,WAAW,IAAI,KAAK,IAAI;AAC9B,UAAI,cAAc,QAAQ;AACxB,iBAAS,SAAS,KAAK,SAAS,IAAI,CAAC;AAAA,MACvC,OAAO;AACL,iBAAS,SAAS,KAAK,SAAS,IAAI,CAAC;AAAA,MACvC;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAEA,QAAM,EAAE,aAAa,kBAAkB,IAAI,eAAe,YAAY;AACtE,QAAM,WAAW,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAE1D,SACE,gBAAAL,OAAC,SAAI,WAAWQ,IAAG,YAAY,SAAS,GAAG,KAAK,cAC9C;AAAA,oBAAAR;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,SAAS,MAAM,CAAC,YAAY,UAAU,CAAC,MAAM;AAAA,QAC7C;AAAA,QACA,WAAWQ;AAAA,UACT;AAAA,UACA,CAAC,OAAO,QAAQ,CAAC,OAAO,MAAM;AAAA,QAChC;AAAA,QAEA;AAAA,0BAAAT,MAAC,YAAS,WAAU,gBAAe;AAAA,UAClC,mBAAmB;AAAA;AAAA;AAAA,IACtB;AAAA,IAEc,UACL,gBAAAC,OAAC,SAAI,WAAWQ;AAAA,MACd;AAAA,MACA,UAAU,SAAS,WAAW;AAAA,IAChC,GAEL;AAAA,sBAAAR,OAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,MAAC,QAAG,WAAU,uCAAsC,kDAAqB;AAAA,QACzE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,UAAU,KAAK;AAAA,YAC9B,WAAU;AAAA,YAEV,0BAAAA,MAACU,IAAA,EAAE,WAAU,WAAU;AAAA;AAAA,QACzB;AAAA,SACF;AAAA,MAGC,eACC,gBAAAT,OAAC,SAAI,WAAU,kCACb;AAAA,wBAAAD,MAAC,QAAG,WAAU,0CAAyC,iCAAW;AAAA,QAClE,gBAAAA,MAAC,SAAI,WAAU,wBACZ,WAAC,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,IAAI,UACrB,gBAAAC;AAAA,UAAC;AAAA;AAAA,YAEC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,kBAAkB,IAAI;AAAA,YACrC,WAAU;AAAA,YAET;AAAA;AAAA,cAAK;AAAA,cAAE,SAAS,IAAI,QAAQ;AAAA;AAAA;AAAA,UANxB;AAAA,QAOP,CACD,GACH;AAAA,SACF;AAAA,MAIF,gBAAAA,OAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,MAAM;AAAA,YACnC,WAAU;AAAA,YAEV,0BAAAA,MAAC,eAAY,WAAU,WAAU;AAAA;AAAA,QACnC;AAAA,QAEA,gBAAAA,MAAC,QAAG,WAAU,qCACX,uBAAa,mBAAmB,SAAS;AAAA,UACxC,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC,GACH;AAAA,QAEA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,MAAM;AAAA,YACnC,WAAU;AAAA,YAEV,0BAAAA,MAACW,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,QACpC;AAAA,SACF;AAAA,MAGO,gBAAAV,OAAC,SAAI,WAAU,QAEb;AAAA,wBAAAD,MAAC,SAAI,WAAU,+BACZ,mBAAS,IAAI,SACZ,gBAAAA,MAAC,SAAc,WAAU,sDACtB,iBADO,GAEV,CACD,GACH;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,0BAEZ;AAAA,gBAAM,KAAK,EAAE,QAAQ,kBAAkB,GAAG,CAAC,GAAG,MAC7C,gBAAAD,MAAC,SAAuB,WAAU,SAAxB,SAAS,CAAC,EAAoB,CACzC;AAAA,UAGA,MAAM,KAAK,EAAE,QAAQ,YAAY,GAAG,CAAC,GAAG,MAAM;AAC7C,kBAAMM,QAAO,IAAI,KAAK,aAAa,YAAY,GAAG,aAAa,SAAS,GAAG,IAAI,CAAC;AAChF,kBAAM,aAAa,eAAeA,KAAI;AACtC,kBAAM,aAAa,eAAeA,KAAI;AACtC,kBAAM,YAAY,cAAcA,KAAI;AACpC,kBAAM,YAAY,eAAeA,MAAK,QAAQ,MAAM,YAAY,QAAQ;AAEzE,mBACE,gBAAAN;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBAER,SAAS,MAAM,gBAAgBM,KAAI;AAAA,gBACnC,cAAc,MAAM,gBAAgBA,KAAI;AAAA,gBACxC,UAAU;AAAA,gBACV,WAAWG;AAAA,kBACT;AAAA,kBACA,cAAc;AAAA,kBACd,CAAC,cAAc;AAAA,kBACf,cAAc;AAAA,kBACd,aAAa,CAAC,cAAc;AAAA,kBAC5B,aAAa,CAAC,cAAc;AAAA,gBAC9B;AAAA,gBAEC,UAAAH,MAAK,QAAQ;AAAA;AAAA,cAbT;AAAA,YAcP;AAAA,UAEH,CAAC;AAAA,WACH;AAAA,SACF;AAAA,MAKP,gBAAAL,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,SACF;AAAA,OACF;AAAA,KAEJ;AAEJ;;;ACjXA,OAAOY,aAAW;AAElB,SAAS,6BAA6B;AAgEhC,SAKE,OAAAC,OALF,QAAAC,cAAA;AArDC,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AACb,GAAoB;AAClB,QAAMC,KAAI,sBAAsB;AAChC,QAAM,iBAAiB,MAAM;AAC3B,UAAM,QAAQ,CAAC;AACf,UAAM,kBAAkB;AAExB,QAAI,cAAc,iBAAiB;AACjC,eAAS,IAAI,GAAG,KAAK,YAAY,KAAK;AACpC,cAAM,KAAK,CAAC;AAAA,MACd;AAAA,IACF,OAAO;AACL,UAAI,eAAe,GAAG;AACpB,iBAAS,IAAI,GAAG,KAAK,GAAG,KAAK;AAC3B,gBAAM,KAAK,CAAC;AAAA,QACd;AACA,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,UAAU;AAAA,MACvB,WAAW,eAAe,aAAa,GAAG;AACxC,cAAM,KAAK,CAAC;AACZ,cAAM,KAAK,KAAK;AAChB,iBAAS,IAAI,aAAa,GAAG,KAAK,YAAY,KAAK;AACjD,gBAAM,KAAK,CAAC;AAAA,QACd;AAAA,MACF,OAAO;AACL,cAAM,KAAK,CAAC;AACZ,cAAM,KAAK,KAAK;AAChB,iBAAS,IAAI,cAAc,GAAG,KAAK,cAAc,GAAG,KAAK;AACvD,gBAAM,KAAK,CAAC;AAAA,QACd;AACA,cAAM,KAAK,KAAK;AAChB,cAAM,KAAK,UAAU;AAAA,MACvB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,aAAa,cAAc,KAAK,QAAQ;AAC9C,QAAM,UAAU,KAAK,IAAI,cAAc,OAAO,KAAK;AAEnD,MAAI,cAAc,GAAG;AACnB,WAAO;AAAA,EACT;AAEA,SACE,gBAAAD,OAAC,SAAI,WAAU,uFACb;AAAA,oBAAAA,OAAC,SAAI,WAAU,4CACZ;AAAA,MAAAC,GAAE,oBAAoB;AAAA,MAAE;AAAA,MAAE;AAAA,MAAU;AAAA,MAAEA,GAAE,eAAe;AAAA,MAAE;AAAA,MAAE;AAAA,MAAQ;AAAA,MAAEA,GAAE,eAAe;AAAA,MAAE;AAAA,MAAE;AAAA,MAAM;AAAA,MAAE;AAAA,OACrG;AAAA,IAEA,gBAAAD,OAAC,SAAI,WAAU,+BACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM,aAAa,cAAc,CAAC;AAAA,UAC3C,UAAU,gBAAgB;AAAA,UAEzB,UAAAE,GAAE,kBAAkB;AAAA;AAAA,MACvB;AAAA,MAEA,gBAAAF,MAAC,SAAI,WAAU,+BACZ,yBAAe,EAAE,IAAI,CAAC,MAAM,UAC3B,gBAAAA,MAACG,QAAM,UAAN,EACE,mBAAS,QACR,gBAAAH,MAAC,UAAK,WAAU,2BAA0B,iBAAG,IAE7C,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,gBAAgB,OAAO,YAAY;AAAA,UAC5C,MAAK;AAAA,UACL,SAAS,MAAM,aAAa,IAAc;AAAA,UAC1C,WAAU;AAAA,UAET;AAAA;AAAA,MACH,KAXiB,KAarB,CACD,GACH;AAAA,MAEA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM,aAAa,cAAc,CAAC;AAAA,UAC3C,UAAU,gBAAgB;AAAA,UAEzB,UAAAE,GAAE,cAAc;AAAA;AAAA,MACnB;AAAA,OACF;AAAA,KACF;AAEJ;;;AC5GA,YAAYE,aAAW;AACvB,YAAY,yBAAyB;AACrC,SAAS,cAAc;AASnB,gBAAAC,aAAA;AALJ,IAAM,aAAmB,mBAGvB,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAAQ;AAClC,SACE,gBAAAA;AAAA,IAAqB;AAAA,IAApB;AAAA,MACC,WAAWC,IAAG,cAAc,SAAS;AAAA,MACpC,GAAG;AAAA,MACJ;AAAA;AAAA,EACF;AAEJ,CAAC;AACD,WAAW,cAAkC,yBAAK;AAElD,IAAM,iBAAuB,mBAG3B,CAAC,EAAE,WAAW,GAAG,MAAM,GAAG,QAAQ;AAClC,SACE,gBAAAD;AAAA,IAAqB;AAAA,IAApB;AAAA,MACC;AAAA,MACA,WAAWC;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,MACC,GAAG;AAAA,MAEJ,0BAAAD,MAAqB,+BAApB,EAA8B,WAAU,oCACvC,0BAAAA,MAAC,UAAO,WAAU,yCAAwC,GAC5D;AAAA;AAAA,EACF;AAEJ,CAAC;AACD,eAAe,cAAkC,yBAAK;;;ACjClD,gBAAAE,OAaE,QAAAC,cAbF;AAFG,SAAS,SAAS,EAAE,UAAU,GAAkB;AACrD,SACE,gBAAAD;AAAA,IAAC;AAAA;AAAA,MACC,WAAWE;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA;AAAA,EACF;AAEJ;AAGO,SAAS,aAAa,EAAE,UAAU,GAAkB;AACzD,SACE,gBAAAF,MAAC,SAAI,WAAWE,IAAG,iCAAiC,SAAS,GAC3D,0BAAAD,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAD,MAAC,YAAS,WAAU,aAAY;AAAA,IAChC,gBAAAA,MAAC,YAAS,WAAU,aAAY;AAAA,IAChC,gBAAAA,MAAC,YAAS,WAAU,aAAY;AAAA,KAClC,GACF;AAEJ;AAGO,SAAS,iBAAiB,EAAE,UAAU,EAAE,GAAyB;AACtE,SACE,gBAAAA,MAAC,QAAG,WAAU,gDACX,gBAAM,KAAK,EAAE,QAAQ,QAAQ,CAAC,EAAE,IAAI,CAAC,GAAG,UACvC,gBAAAA,MAAC,QAAe,WAAU,OACxB,0BAAAA,MAAC,YAAS,WAAU,cAAa,KAD1B,KAET,CACD,GACH;AAEJ;AAGO,SAAS,cAAc;AAAA,EAC5B,OAAO;AAAA,EACP,UAAU;AAAA,EACV;AACF,GAIG;AACD,SACE,gBAAAA,MAAC,SAAI,WAAWE,IAAG,UAAU,SAAS,GACpC,0BAAAD,OAAC,SAAI,WAAU,qBACb;AAAA,oBAAAD,MAAC,SAAI,WAAU,4BACb,0BAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAA,MAAC,YAAS,WAAU,YAAW;AAAA,OACjC,GACF;AAAA,IACA,gBAAAC,OAAC,WAAM,WAAU,UACf;AAAA,sBAAAD,MAAC,WAAM,WAAU,wBACf,0BAAAA,MAAC,QACE,gBAAM,KAAK,EAAE,QAAQ,QAAQ,CAAC,EAAE,IAAI,CAAC,GAAG,UACvC,gBAAAA,MAAC,QAAe,WAAU,6BACxB,0BAAAA,MAAC,YAAS,WAAU,YAAW,KADxB,KAET,CACD,GACH,GACF;AAAA,MACA,gBAAAA,MAAC,WACE,gBAAM,KAAK,EAAE,QAAQ,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,aACpC,gBAAAA,MAAC,oBAAgC,WAAV,QAA4B,CACpD,GACH;AAAA,OACF;AAAA,KACF,GACF;AAEJ;AAGO,SAAS,aAAa;AAAA,EAC3B,QAAQ;AAAA,EACR;AACF,GAGG;AACD,SACE,gBAAAA,MAAC,SAAI,WAAWE,IAAG,wDAAwD,SAAS,GACjF,gBAAM,KAAK,EAAE,QAAQ,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,UACrC,gBAAAF,MAAC,kBAAkB,KAAO,CAC3B,GACH;AAEJ;AAGO,SAAS,aAAa,EAAE,UAAU,GAAkB;AACzD,SACE,gBAAAC,OAAC,SAAI,WAAWC,IAAG,aAAa,SAAS,GACvC;AAAA,oBAAAD,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAA,MAAC,YAAS,WAAU,eAAc;AAAA,OACpC;AAAA,IACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAA,MAAC,YAAS,WAAU,eAAc;AAAA,OACpC;AAAA,IACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAA,MAAC,YAAS,WAAU,eAAc;AAAA,OACpC;AAAA,IACA,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,aAAY;AAAA,MAChC,gBAAAA,MAAC,YAAS,WAAU,aAAY;AAAA,OAClC;AAAA,KACF;AAEJ;AAGO,SAAS,mBAAmB,EAAE,UAAU,GAAkB;AAC/D,SACE,gBAAAA,MAAC,SAAI,WAAWE,IAAG,+BAA+B,SAAS,GACxD,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAF,MAAC,YAAqB,WAAU,cAAjB,KAA4B,CAC5C,GACH;AAEJ;AAGO,SAAS,cAAc,EAAE,UAAU,GAAkB;AAC1D,SACE,gBAAAA,MAAC,SAAI,WAAWE,IAAG,wDAAwD,SAAS,GACjF,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAF,MAAC,SAAgB,WAAU,iCACzB,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,IAC/B,gBAAAA,MAAC,YAAS,WAAU,YAAW;AAAA,IAC/B,gBAAAA,MAAC,YAAS,WAAU,YAAW;AAAA,KACjC,KALQ,KAMV,CACD,GACH;AAEJ;AAGO,SAAS,iBAAiB,EAAE,UAAU,GAAkB;AAC7D,SACE,gBAAAC,OAAC,SAAI,WAAWC,IAAG,aAAa,SAAS,GACvC;AAAA,oBAAAD,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,MAAC,YAAS,WAAU,WAAU;AAAA,QAC9B,gBAAAA,MAAC,YAAS,WAAU,WAAU;AAAA,SAChC;AAAA,OACF;AAAA,IACA,gBAAAC,OAAC,SAAI,WAAU,0BACZ;AAAA,YAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAD,MAAC,SAAgB,WAAU,2BACzB,0BAAAA,MAAC,YAAS,WAAU,WAAU,KADtB,KAEV,CACD;AAAA,MACA,MAAM,KAAK,EAAE,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,UAClC,gBAAAA,MAAC,SAAgB,WAAU,2BACzB,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,YAAS,WAAU,WAAU;AAAA,QAC9B,gBAAAA,MAAC,YAAS,WAAU,WAAU;AAAA,SAChC,KAJQ,KAKV,CACD;AAAA,OACH;AAAA,KACF;AAEJ;AAGO,SAAS,eAAe,EAAE,UAAU,GAAkB;AAC3D,SACE,gBAAAC,OAAC,SAAI,WAAWC,IAAG,aAAa,SAAS,GACvC;AAAA,oBAAAD,OAAC,SAAI,WAAU,cACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,eAAc;AAAA,MAClC,gBAAAA,MAAC,YAAS,WAAU,aAAY;AAAA,OAClC;AAAA,IACA,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAA,MAAC,YAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAA,MAAC,YAAS,WAAU,YAAW;AAAA,OACjC;AAAA,KACF;AAEJ;AAGO,SAAS,mBAAmB,EAAE,UAAU,GAAkB;AAC/D,SACE,gBAAAC,OAAC,SAAI,WAAWC,IAAG,qCAAqC,SAAS,GAC/D;AAAA,oBAAAF,MAAC,YAAS,WAAU,YAAW;AAAA,IAC/B,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAA,MAAC,YAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAA,MAAC,YAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAA,MAAC,YAAS,WAAU,WAAU;AAAA,OAChC;AAAA,KACF;AAEJ;AAGO,SAAS,gBAAgB,EAAE,UAAU,GAAkB;AAC5D,SACE,gBAAAC,OAAC,SAAI,WAAWC,IAAG,sBAAsB,SAAS,GAChD;AAAA,oBAAAF,MAAC,YAAS,WAAU,YAAW;AAAA,IAC/B,gBAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,MAAC,YAAqB,WAAU,iBAAjB,KAA+B,CAC/C,GACH;AAAA,KACF;AAEJ;AAGO,SAAS,eAAe,EAAE,UAAU,GAAkB;AAC3D,SACE,gBAAAA,MAAC,YAAO,WAAWE,IAAG,0BAA0B,SAAS,GACvD,0BAAAD,OAAC,SAAI,WAAU,+CACb;AAAA,oBAAAD,MAAC,YAAS,WAAU,YAAW;AAAA,IAC/B,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD,MAAC,YAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAA,MAAC,YAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAA,MAAC,YAAS,WAAU,YAAW;AAAA,OACjC;AAAA,KACF,GACF;AAEJ;;;AChPA,SAAgB,YAAAG,WAAU,aAAAC,kBAAiB;AAC3C,SAAS,eAAe;AAoElB,SACE,OAAAC,OADF,QAAAC,cAAA;AA9CC,IAAM,kCAAkF,CAAC;AAAA,EAC9F;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIH,UAAoC,IAAI;AAChF,QAAM,CAAC,WAAW,YAAY,IAAIA,UAAS,KAAK;AAChD,QAAM,CAAC,OAAO,QAAQ,IAAIA,UAAwB,IAAI;AAEtD,EAAAC,WAAU,MAAM;AACd,QAAI,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY;AAC1C,sBAAgB,IAAI;AACpB;AAAA,IACF;AAEA,UAAM,oBAAoB,YAAY;AACpC,mBAAa,IAAI;AACjB,eAAS,IAAI;AAEb,UAAI;AACF,cAAM,SAAS,MAAM;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,wBAAgB,MAAM;AAAA,MACxB,SAAS,KAAK;AACZ,iBAAS,8BAA8B;AACvC,gBAAQ,MAAM,6BAA6B,GAAG;AAAA,MAChD,UAAE;AACA,qBAAa,KAAK;AAAA,MACpB;AAAA,IACF;AAGA,UAAM,YAAY,WAAW,mBAAmB,GAAG;AACnD,WAAO,MAAM,aAAa,SAAS;AAAA,EACrC,GAAG,CAAC,SAAS,YAAY,YAAY,mBAAmB,4BAA4B,CAAC;AAErF,MAAI,CAAC;AAAS,WAAO;AAErB,MAAI,WAAW;AACb,WACE,gBAAAE,OAAC,SAAI,WAAU,iGACb;AAAA,sBAAAD,MAAC,WAAQ,WAAU,6BAA4B;AAAA,MAAE;AAAA,OAEnD;AAAA,EAEJ;AAEA,MAAI,OAAO;AACT,WACE,gBAAAA,MAAC,SAAI,WAAU,+FAA8F,sDAE7G;AAAA,EAEJ;AAEA,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,SACE,gBAAAC,OAAC,SAAI,WAAW,uEAAuE,aAAa,KAAK,IACtG;AAAA,iBAAa;AAAA,IACb,aAAa,WAAW,mBACvB,gBAAAD,MAAC,UAAK,WAAU,QAAO,0BAAE;AAAA,IAE1B,aAAa,WAAW,kBACvB,gBAAAA,MAAC,UAAK,WAAU,QAAO,uBAAE;AAAA,IAE1B,aAAa,WAAW,iBACvB,gBAAAA,MAAC,UAAK,WAAU,QAAO,0BAAE;AAAA,IAE1B,aAAa,WAAW,eACvB,gBAAAA,MAAC,UAAK,WAAU,QAAO,oBAAC;AAAA,KAE5B;AAEJ;;;AC1GA,SAAS,eAAAE,cAA4B,WAAAC,UAAS,SAAS,WAAAC,gBAAe;AA2BhE,SACE,OAAAC,OADF,QAAAC,cAAA;AAPC,IAAM,2BAAoE,CAAC;AAAA,EAChF;AAAA,EACA,YAAY;AAAA,EACZ,OAAO;AACT,MAAM;AACJ,MAAI,WAAW;AACb,WACE,gBAAAA,OAAC,SAAI,WAAU,8HACb;AAAA,sBAAAD,MAACD,UAAA,EAAQ,WAAU,wBAAuB;AAAA,MAC1C,gBAAAC,MAAC,UAAK,yBAAW;AAAA,OACnB;AAAA,EAEJ;AAEA,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,QAAM,EAAE,QAAQ,WAAW,QAAQ,IAAI;AAGvC,QAAM,iBAAiB,MAAM;AAC3B,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,UACL,SAAS;AAAA,UACT,WAAW;AAAA,UACX,aAAa;AAAA,UACb,MAAMH;AAAA,UACN,WAAW;AAAA,QACb;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,SAAS;AAAA,UACT,WAAW;AAAA,UACX,aAAa;AAAA,UACb,MAAMC;AAAA,UACN,WAAW;AAAA,QACb;AAAA,MACF;AACE,eAAO;AAAA,UACL,SAAS;AAAA,UACT,WAAW;AAAA,UACX,aAAa;AAAA,UACb,MAAM;AAAA,UACN,WAAW;AAAA,QACb;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,gBAAgB,MAAM;AAC1B,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,iBAAiB,MAAM;AAC3B,UAAM,EAAE,iBAAiB,qBAAqB,eAAe,IAAI;AAEjE,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO,uBAAuB,kBAAkB,SAAS,IAAI,OAAO;AAAA,MACtE,KAAK;AACH,YAAI,iBAAiB;AACnB,iBAAO,kBAAkB,mBAAmB;AAAA,QAC9C,OAAO;AACL,iBAAO,0BAA0B,WAAW,kBAAkB,UAAU;AAAA,QAC1E;AAAA,MACF;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,QAAQ,eAAe;AAC7B,QAAM,gBAAgB,MAAM;AAG5B,QAAMI,eAAc;AAAA,IAClB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,QAAM,YAAY;AAAA,IAChB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,SACE,gBAAAD;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,iGAAiGC,aAAY,IAAI,CAAC,IAAI,MAAM,OAAO,IAAI,MAAM,SAAS,IAAI,MAAM,WAAW;AAAA,MACtL,OAAO,eAAe;AAAA,MAEtB;AAAA,wBAAAF,MAAC,iBAAc,WAAW,GAAG,UAAU,IAAI,CAAC,IAAI,MAAM,SAAS,IAAI;AAAA,QACnE,gBAAAA,MAAC,UAAM,wBAAc,GAAE;AAAA;AAAA;AAAA,EACzB;AAEJ;;;AC3HA,SAAS,iBAAAG,gBAAe,eAAAC,oBAAmB;AA4D5B,gBAAAC,OAyDG,QAAAC,cAzDH;AAjCR,IAAM,6BAAwE,CAAC;AAAA,EACpF;AAAA,EACA;AACF,MAAM;AACJ,MAAI,CAAC,cAAc,WAAW,WAAW,GAAG;AAC1C,WAAO;AAAA,EACT;AAGA,QAAM,sBAAsB,WAAW,OAAO,WAAS;AACrD,UAAM,eAAe,iBAAiB,MAAM,SAAS;AACrD,QAAI,CAAC;AAAc,aAAO;AAE1B,WAAO,aAAa,WAAW;AAAA,EACjC,CAAC;AAED,MAAI,oBAAoB,WAAW,GAAG;AACpC,WAAO;AAAA,EACT;AAEA,QAAM,iBAAiB,MAAM;AAC3B,UAAM,iBAAiB,oBAAoB;AAAA,MAAK,CAAAC,OAC9C,iBAAiBA,GAAE,SAAS,GAAG,WAAW;AAAA,IAC5C;AAEA,QAAI;AAAgB,aAAO;AAC3B,WAAO;AAAA,EACT;AAEA,QAAM,iBAAiB,MAAM;AAC3B,UAAM,OAAO,eAAe;AAC5B,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO,gBAAAF,MAACF,gBAAA,EAAc,WAAU,2BAA0B;AAAA,MAC5D;AACE,eAAO,gBAAAE,MAACD,cAAA,EAAY,WAAU,yBAAwB;AAAA,IAC1D;AAAA,EACF;AAEA,QAAM,kBAAkB,MAAM;AAC5B,UAAM,OAAO,eAAe;AAC5B,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,kBAAkB,MAAM;AAC5B,UAAM,OAAO,eAAe;AAC5B,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAC,MAAC,SAAI,WAAW,yBAAyB,gBAAgB,CAAC,SACxD,0BAAAC,OAAC,SAAI,WAAU,0BACZ;AAAA,mBAAe;AAAA,IAChB,gBAAAA,OAAC,SAAI,WAAU,UACb;AAAA,sBAAAD,MAAC,QAAG,WAAU,oBAAoB,0BAAgB,GAAE;AAAA,MACpD,gBAAAA,MAAC,SAAI,WAAU,aACZ,8BAAoB,IAAI,CAAC,YAAY;AACpC,cAAM,eAAe,iBAAiB,QAAQ,SAAS;AACvD,YAAI,CAAC;AAAc,iBAAO;AAE1B,cAAM,uBAAuB,MAAM;AACjC,gBAAM,EAAE,iBAAiB,oBAAoB,IAAI;AAEjD,kBAAQ,aAAa,QAAQ;AAAA,YAC3B,KAAK;AACH,kBAAI,iBAAiB;AACnB,uBAAO,kBAAkB,mBAAmB;AAAA,cAC9C,OAAO;AACL,uBAAO;AAAA,cACT;AAAA,YACF;AACE,qBAAO;AAAA,UACX;AAAA,QACF;AAEA,eACE,gBAAAC,OAAC,SAA4B,WAAU,WACrC;AAAA,0BAAAD,MAAC,UAAK,WAAU,eAAe,kBAAQ,aAAY;AAAA,UACnD,gBAAAA,MAAC,UAAK,WAAU,QAAO,eAAC;AAAA,UACxB,gBAAAA,MAAC,UAAM,+BAAqB,GAAE;AAAA,UAC9B,gBAAAC,OAAC,UAAK,WAAU,2BAA0B;AAAA;AAAA,YAC3B,QAAQ;AAAA,YAAS;AAAA,aAChC;AAAA,aANQ,QAAQ,SAOlB;AAAA,MAEJ,CAAC,GACH;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC/HA,YAAYE,aAAW;AAEvB,SAAS,eAAAC,oBAAmB;AAkLpB,mBACE,OAAAC,OADF,QAAAC,cAAA;AArJD,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,aAAa;AAAA,EACb,aAAa;AAAA,EACb;AACF,MAAM;AACJ,QAAM,CAAC,MAAM,OAAO,IAAU,iBAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAU,iBAAS,EAAE;AAC3C,QAAM,CAAC,iBAAiB,kBAAkB,IAAU,iBAA6B,WAAW,CAAC,CAAC;AAC9F,QAAM,UAAgB,eAA8B,IAAI;AACxD,QAAM,cAAoB,eAAO,QAAQ;AACzC,QAAM,qBAA2B,eAA8B,IAAI;AAGnE,EAAM,kBAAU,MAAM;AACpB,gBAAY,UAAU;AAAA,EACxB,GAAG,CAAC,QAAQ,CAAC;AAGb,EAAM,kBAAU,MAAM;AACpB,QAAI,UAAU;AAEZ,yBAAmB,CAAC,CAAC;AAAA,IACvB,OAAO;AAEL,yBAAmB,WAAW,CAAC,CAAC;AAAA,IAClC;AAAA,EACF,GAAG,CAAC,UAAU,OAAO,CAAC;AAGtB,EAAM,kBAAU,MAAM;AACpB,QAAI,SAAS;AACb,UAAM,iBAAiB;AAGvB,QAAI,mBAAmB,SAAS;AAC9B,mBAAa,mBAAmB,OAAO;AAAA,IACzC;AAEA,UAAM,YAAY,YAAY;AAC5B,YAAM,kBAAkB,YAAY;AAEpC,UAAI,mBAAmB,MAAM,KAAK,GAAG;AACnC,gBAAQ,IAAI,0DAAmD,KAAK;AACpE,cAAM,MAAM,MAAM,gBAAgB,KAAK;AACvC,YAAI,UAAU,MAAM,QAAQ,GAAG,GAAG;AAChC,kBAAQ,IAAI,iDAA0C,IAAI,MAAM;AAChE,6BAAmB,GAAG;AAAA,QACxB;AAAA,MACF,WAAW,mBAAmB,CAAC,MAAM,KAAK,KAAK,CAAC,OAAO;AAErD,gBAAQ,IAAI,6EAAsE;AAClF,2BAAmB,CAAC,CAAC;AAAA,MACvB;AAAA,IACF;AAEA,QAAI,MAAM,KAAK,GAAG;AAEhB,yBAAmB,UAAU,WAAW,MAAM;AAC5C,kBAAU;AAAA,MACZ,GAAG,cAAc;AAAA,IACnB,WAAW,CAAC,MAAM,KAAK,KAAK,CAAC,OAAO;AAElC,yBAAmB,CAAC,CAAC;AAAA,IACvB;AAEA,WAAO,MAAM;AACX,eAAS;AACT,UAAI,mBAAmB,SAAS;AAC9B,qBAAa,mBAAmB,OAAO;AAAA,MACzC;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,KAAK,CAAC;AAEjB,QAAM,WAAiB,gBAAQ,MAAM;AACnC,YAAQ,IAAI,qDAA8C,OAAO,aAAa,CAAC,CAAC,UAAU,kBAAkB,SAAS,UAAU,CAAC;AAEhI,QAAI,UAAU;AAEZ,UAAI,MAAM,KAAK,GAAG;AAChB,gBAAQ,IAAI,wEAAiE,gBAAgB,MAAM;AACnG,eAAO;AAAA,MACT,OAAO;AACL,gBAAQ,IAAI,iEAA0D;AACtE,eAAO,CAAC;AAAA,MACV;AAAA,IACF;AAGA,UAAM,IAAI,MAAM,KAAK,EAAE,YAAY;AACnC,QAAI,CAAC,GAAG;AACN,cAAQ,IAAI,kEAA2D,WAAW,CAAC,GAAG,MAAM;AAC5F,aAAO,WAAW,CAAC;AAAA,IACrB;AAEA,UAAMC,YAAW,SAAS,OAAO,CAACC,OAAMA,GAAE,MAAM,YAAY,EAAE,SAAS,CAAC,CAAC;AACzE,YAAQ,IAAI,iDAA0CD,WAAU,UAAU,GAAG,cAAc,CAAC;AAC5F,WAAOA,aAAY,CAAC;AAAA,EACtB,GAAG,CAAC,OAAO,iBAAiB,UAAU,OAAO,CAAC;AAE9C,QAAM,WAAW,gBAAgB,KAAK,CAACC,OAAMA,GAAE,UAAU,OAAO,KAAK,CAAC;AAGtE,QAAM,eAAe,UAAU,SAAS;AAGxC,EAAM,kBAAU,MAAM;AACpB,UAAM,UAAU,CAACC,OAA+B;AAC9C,YAAM,KAAK,QAAQ;AACnB,UAAI,CAAC;AAAI;AACT,UAAI,QAAQ,CAAC,GAAG,SAASA,GAAE,MAAc,GAAG;AAC1C,gBAAQ,KAAK;AAAA,MACf;AAAA,IACF;AAEA,aAAS,iBAAiB,aAAa,OAAO;AAC9C,aAAS,iBAAiB,cAAc,OAAO;AAE/C,WAAO,MAAM;AACX,eAAS,oBAAoB,aAAa,OAAO;AACjD,eAAS,oBAAoB,cAAc,OAAO;AAAA,IACpD;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AAET,QAAM,eAAe,CAAC,WAA6B;AACjD,eAAW,SAAS,OAAO,KAAK,CAAC;AACjC,YAAQ,KAAK;AAEb,QAAI,UAAU;AACZ,yBAAmB,CAAC,MAAM,CAAC;AAAA,IAC7B;AAEA,eAAW,MAAM;AACf,eAAS,EAAE;AAAA,IACb,GAAG,GAAG;AAAA,EACR;AAEA,SACE,gBAAAH,OAAC,SAAI,WAAWI,IAAG,YAAY,SAAS,GAAG,KAAK,SAE7C;AAAA,oBAAgB,UACf,gBAAAJ,OAAA,YACE;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,OAAO;AAAA,UACP,SAAS,MAAM;AACb,oBAAQ,IAAI;AAAA,UACd;AAAA,UACA,UAAU,CAACI,OAAM;AACf,qBAASA,GAAE,OAAO,KAAK;AACvB,oBAAQ,IAAI;AAAA,UACd;AAAA,UACA,QAAQ,MAAM;AAEZ,uBAAW,MAAM;AACf,sBAAQ,KAAK;AAAA,YAEf,GAAG,GAAG;AAAA,UACR;AAAA,UACA,aAAa,WAAW,SAAS,QAAQ;AAAA,UACzC,WAAWC;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA;AAAA,MACF;AAAA,MACA,gBAAAL,MAAC,UAAK,WAAU,uFAAsF;AAAA,MACtG,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,MAAK;AAAA,UACL,cAAW;AAAA,UACX,WAAU;AAAA,UACV,aAAa,CAACI,OAAM;AAClB,YAAAA,GAAE,eAAe;AACjB,oBAAQ,CAACD,OAAM,CAACA,EAAC;AAAA,UACnB;AAAA,UAEA,0BAAAH,MAACM,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA,MACnC;AAAA,MAGC,SACC,gBAAAN;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,MAAK;AAAA,UACL,SAAS,MAAM;AACb,qBAAS,EAAE;AAEX,gBAAI,UAAU;AACZ,iCAAmB,CAAC,CAAC;AAAA,YACvB,OAAO;AACL,iCAAmB,WAAW,CAAC,CAAC;AAAA,YAClC;AACA,oBAAQ,KAAK;AAAA,UACf;AAAA,UACA,WAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,OAEJ,IAEA,gBAAAC;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,QAAQ,CAACM,OAAM,CAACA,EAAC;AAAA,QAChC,WAAWF;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,QAEA;AAAA,0BAAAL,MAAC,UAAK,WAAWK,IAAG,CAAC,YAAY,eAAe,GAAI,qBAAW,SAAS,QAAQ,aAAY;AAAA,UAC5F,gBAAAL,MAACM,cAAA,EAAY,WAAU,yBAAwB;AAAA;AAAA;AAAA,IACjD;AAAA,IAGD,QACC,gBAAAN,MAAC,SAAI,WAAU,uHACb,0BAAAA,MAAC,SAAI,WAAU,+BACZ,mBAAS,WAAW,IACnB,gBAAAC,OAAC,SAAI,WAAU,+CACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,sCACb,0BAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,+CAA8C,GACrH,GACF;AAAA,MACA,gBAAAA,MAAC,SAAK,qBAAU;AAAA,OAClB,IAEA,gBAAAC,OAAA,YAEG;AAAA,oBAAc,YACb,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM;AACb,qBAAS;AACT,oBAAQ,KAAK;AAAA,UACf;AAAA,UACA,WAAU;AAAA,UAGV;AAAA,4BAAAD,MAAC,SAAI,WAAU,wCACb,0BAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,8BAA6B,GACpG,GACF;AAAA,YAGA,gBAAAA,MAAC,SAAI,WAAU,kBACb,0BAAAA,MAAC,SAAI,WAAU,8BAA8B,sBAAW,GAC1D;AAAA;AAAA;AAAA,MACF;AAAA,MAID,SAAS,IAAI,CAAC,QAAQ;AACrB,eACE,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YAEL,SAAS,MAAM;AACb,2BAAa,GAAG;AAAA,YAClB;AAAA,YACA,WAAWI;AAAA,cACT;AAAA,cACA,UAAU,SAAS,IAAI,KAAK,KAAK;AAAA,YACnC;AAAA,YAGD;AAAA,kBAAI,SAAS,aAAa,IAAI;AAAA;AAAA,gBAE7B,gBAAAJ,OAAC,SAAI,WAAU,6EACb;AAAA,kCAAAD;AAAA,oBAAC;AAAA;AAAA,sBACC,KAAK,IAAI;AAAA,sBACT,KAAK,IAAI;AAAA,sBACT,WAAU;AAAA,sBACV,SAAS,CAACI,OAAM;AAEd,wBAAAA,GAAE,cAAc,MAAM,UAAU;AAChC,wBAAAA,GAAE,cAAc,oBAAoB,UAAU,OAAO,QAAQ;AAAA,sBAC/D;AAAA;AAAA,kBACF;AAAA,kBACA,gBAAAJ,MAAC,SAAI,WAAU,qEACb,0BAAAA,MAAC,SAAI,WAAU,yBAAwB,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAC/E,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,mEAAkE,GACzI,GACF;AAAA,mBACF;AAAA,kBACE,IAAI,SAAS;AAAA;AAAA,gBAEf,gBAAAA,MAAC,SAAI,WAAU,mFACb,0BAAAA,MAAC,SAAI,WAAU,yBAAwB,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAC/E,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,mEAAkE,GACzI,GACF;AAAA;AAAA;AAAA,gBAGA,gBAAAA,MAAC,SAAI,WAAU,uCACb,0BAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,uEAAsE,GAC7I,GACF;AAAA;AAAA,cAIF,gBAAAA,MAAC,SAAI,WAAU,kBACZ,cAAI,SAAS;AAAA;AAAA,gBAEZ,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,kCAAAD,MAAC,SAAI,WAAU,sCAAsC,cAAI,OAAM;AAAA,kBAC9D,IAAI,YACH,gBAAAA,MAAC,SAAI,WAAU,kCAAkC,cAAI,UAAS;AAAA,kBAE/D,IAAI,WAAW,IAAI,QAAQ,SAAS,KACnC,gBAAAA,MAAC,SAAI,WAAU,wBACZ,cAAI,QAAQ,IAAI,CAAC,QAAQ,UACxB,gBAAAA;AAAA,oBAAC;AAAA;AAAA,sBAEC,WAAU;AAAA,sBAET;AAAA;AAAA,oBAHI;AAAA,kBAIP,CACD,GACH;AAAA,mBAEJ;AAAA;AAAA;AAAA,gBAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,kCAAAD,MAAC,SAAI,WAAU,sCAAsC,cAAI,OAAM;AAAA,kBAC9D,IAAI,eACH,gBAAAA,MAAC,SAAI,WAAU,6CAA6C,cAAI,aAAY;AAAA,mBAEhF;AAAA,iBAEJ;AAAA,cAGC,UAAU,SAAS,IAAI,KAAK,KAC3B,gBAAAA,MAAC,SAAI,WAAU,uCACb,0BAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,gBAAe,SAAQ,aACnD,0BAAAA,MAAC,UAAK,UAAS,WAAU,GAAE,sHAAqH,UAAS,WAAU,GACrK,GACF;AAAA;AAAA;AAAA,UApFK,IAAI;AAAA,QAsFb;AAAA,MAEJ,CAAC;AAAA,OACD,GAEJ,GACF;AAAA,KAEJ;AAEJ;;;AC7YA,YAAYQ,aAAW;AAEvB,SAAS,eAAAC,oBAAmB;AAqFtB,qBAAAC,WACE,OAAAC,OADF,QAAAC,cAAA;AAnEC,IAAM,0BAAkE,CAAC;AAAA,EAC9E;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA,eAAe;AACjB,MAAM;AACJ,QAAM,CAAC,MAAM,OAAO,IAAU,iBAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAU,iBAAS,EAAE;AAC3C,QAAM,UAAgB,eAA8B,IAAI;AAGxD,QAAM,WAAiB,gBAAQ,MAAM;AACnC,UAAM,IAAI,MAAM,KAAK,EAAE,YAAY;AACnC,QAAI,CAAC,GAAG;AACN,aAAO;AAAA,IACT;AACA,WAAO,QAAQ;AAAA,MAAO,CAAC,YACrB,QAAQ,KAAK,YAAY,EAAE,SAAS,CAAC,KACrC,QAAQ,KAAK,YAAY,EAAE,SAAS,CAAC;AAAA,IACvC;AAAA,EACF,GAAG,CAAC,OAAO,OAAO,CAAC;AAEnB,QAAM,WAAW,QAAQ,KAAK,CAACC,OAAMA,GAAE,SAAS,KAAK;AAGrD,QAAM,eAAe,UAAU,SAAS;AAGxC,EAAM,kBAAU,MAAM;AACpB,UAAM,UAAU,CAACC,OAA+B;AAC9C,YAAM,KAAK,QAAQ;AACnB,UAAI,CAAC;AAAI;AACT,UAAI,QAAQ,CAAC,GAAG,SAASA,GAAE,MAAc,GAAG;AAC1C,gBAAQ,KAAK;AAAA,MACf;AAAA,IACF;AAEA,aAAS,iBAAiB,aAAa,OAAO;AAC9C,aAAS,iBAAiB,cAAc,OAAO;AAE/C,WAAO,MAAM;AACX,eAAS,oBAAoB,aAAa,OAAO;AACjD,eAAS,oBAAoB,cAAc,OAAO;AAAA,IACpD;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AAET,QAAM,eAAe,CAAC,YAA2B;AAC/C,YAAQ,IAAI,+BAAwB,QAAQ,IAAI;AAChD,eAAW,QAAQ,IAAI;AACvB,YAAQ,KAAK;AAEb,eAAW,MAAM;AACf,eAAS,EAAE;AAAA,IACb,GAAG,GAAG;AAAA,EACR;AAEA,QAAM,cAAc,MAAM;AACxB,eAAW,EAAE;AACb,aAAS,EAAE;AACX,YAAQ,KAAK;AAAA,EACf;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAWG,IAAG,YAAY,SAAS,GAAG,KAAK,SAE9C;AAAA,oBAAAH,OAAAF,WAAA,EACE;AAAA,sBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,OAAO;AAAA,UACP,SAAS,MAAM;AACb,oBAAQ,IAAI;AAAA,UACd;AAAA,UACA,UAAU,CAACG,OAAM;AACf,qBAASA,GAAE,OAAO,KAAK;AACvB,oBAAQ,IAAI;AAAA,UACd;AAAA,UACA,QAAQ,MAAM;AAEZ,uBAAW,MAAM;AACf,sBAAQ,KAAK;AAAA,YAEf,GAAG,GAAG;AAAA,UACR;AAAA,UACA,aAAa,WAAW,GAAG,SAAS,IAAI,IAAI,SAAS,IAAI,KAAK;AAAA,UAC9D,WAAWC;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA;AAAA,MACF;AAAA,MACA,gBAAAJ,MAAC,UAAK,WAAU,uFAAsF;AAAA,MACtG,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,MAAK;AAAA,UACL,cAAW;AAAA,UACX,WAAU;AAAA,UACV,aAAa,CAACG,OAAM;AAClB,YAAAA,GAAE,eAAe;AACjB,oBAAQ,CAACD,OAAM,CAACA,EAAC;AAAA,UACnB;AAAA,UAEA,0BAAAF,MAACK,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA,MACnC;AAAA,MAIC,SACC,gBAAAL;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,MAAK;AAAA,UACL,SAAS,MAAM;AACb,qBAAS,EAAE;AACX,oBAAQ,KAAK;AAAA,UACf;AAAA,UACA,WAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,OAEJ;AAAA,IAGC,QACC,gBAAAA,MAAC,SAAI,WAAU,uHACb,0BAAAA,MAAC,SAAI,WAAU,+BACZ,mBAAS,WAAW,IACnB,gBAAAC,OAAC,SAAI,WAAU,+CACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,sCACb,0BAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,+CAA8C,GACrH,GACF;AAAA,MACA,gBAAAA,MAAC,SAAK,wBAAa;AAAA,OACrB,IAEA,gBAAAA,MAAAD,WAAA,EACG,mBAAS,IAAI,CAAC,YACb,gBAAAE;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QAEL,SAAS,MAAM;AACb,kBAAQ,IAAI,sCAA0B,QAAQ,IAAI;AAClD,uBAAa,OAAO;AAAA,QACtB;AAAA,QACA,WAAWG;AAAA,UACT;AAAA,UACA,UAAU,QAAQ,QAAQ;AAAA,QAC5B;AAAA,QAGA;AAAA,0BAAAJ,MAAC,UAAK,WAAU,0BAA0B,kBAAQ,MAAK;AAAA,UAGvD,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,sCAAsC,kBAAQ,MAAK;AAAA,YAClE,gBAAAA,MAAC,SAAI,WAAU,yBAAyB,kBAAQ,MAAK;AAAA,aACvD;AAAA,UAGC,UAAU,QAAQ,QACjB,gBAAAA,MAAC,SAAI,WAAU,uCACb,0BAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,gBAAe,SAAQ,aACnD,0BAAAA,MAAC,UAAK,UAAS,WAAU,GAAE,sHAAqH,UAAS,WAAU,GACrK,GACF;AAAA;AAAA;AAAA,MAzBG,QAAQ;AAAA,IA2Bf,CACD,GACH,GAEJ,GACF;AAAA,KAEJ;AAEJ;;;ACvMA,SAAgB,YAAAM,WAAU,aAAAC,YAAW,iBAAAC,gBAAe,cAAAC,mBAAkB;AACtE,SAAS,KAAAC,IAAG,eAAAC,cAAa,eAAAC,cAAa,QAAAC,OAAM,iBAAAC,sBAAqB;AAwEzD,gBAAAC,OAEA,QAAAC,cAFA;AAzDR,IAAM,aAAa;AAAA,EACjB,SAASC;AAAA,EACT,OAAOC;AAAA,EACP,SAASC;AAAA,EACT,MAAMC;AACR;AAEA,IAAM,cAAc;AAAA,EAClB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AACR;AAEA,IAAM,aAAa;AAAA,EACjB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AACR;AAEO,IAAM,QAA8B,CAAC;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AACF,MAAM;AACJ,QAAM,CAAC,WAAW,YAAY,IAAIC,UAAS,IAAI;AAE/C,EAAAC,WAAU,MAAM;AACd,QAAI,WAAW,GAAG;AAChB,YAAM,QAAQ,WAAW,MAAM;AAC7B,qBAAa,KAAK;AAClB,mBAAW,MAAM,QAAQ,EAAE,GAAG,GAAG;AAAA,MACnC,GAAG,QAAQ;AAEX,aAAO,MAAM,aAAa,KAAK;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,UAAU,IAAI,OAAO,CAAC;AAE1B,QAAMC,QAAO,WAAW,IAAI;AAE5B,SACE,gBAAAR;AAAA,IAAC;AAAA;AAAA,MACC,WAAW;AAAA,QACT;AAAA,QACA,YAAY,0BAA0B;AAAA,MACxC;AAAA,MAEA,0BAAAC;AAAA,QAAC;AAAA;AAAA,UACC,WAAW;AAAA,YACT;AAAA,YACA,YAAY,IAAI;AAAA,UAClB;AAAA,UAEA;AAAA,4BAAAD,MAACQ,OAAA,EAAK,WAAW,GAAG,gCAAgC,WAAW,IAAI,CAAC,GAAG;AAAA,YAEvE,gBAAAP,OAAC,SAAI,WAAU,kBACb;AAAA,8BAAAD,MAAC,QAAG,WAAU,uBAAuB,iBAAM;AAAA,cAC1C,WACC,gBAAAA,MAAC,OAAE,WAAU,2BAA2B,mBAAQ;AAAA,eAEpD;AAAA,YAEA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,SAAS,MAAM;AACb,+BAAa,KAAK;AAClB,6BAAW,MAAM,QAAQ,EAAE,GAAG,GAAG;AAAA,gBACnC;AAAA,gBACA,WAAU;AAAA,gBAEV,0BAAAA,MAACS,IAAA,EAAE,WAAU,WAAU;AAAA;AAAA,YACzB;AAAA;AAAA;AAAA,MACF;AAAA;AAAA,EACF;AAEJ;AAOO,IAAM,iBAAgD,CAAC,EAAE,QAAQ,QAAQ,MAAM;AACpF,UAAQ,IAAI,oCAA6B,EAAE,aAAa,QAAQ,UAAU,GAAG,OAAO,CAAC;AAErF,SACE,gBAAAT,MAAC,SAAI,WAAU,6DACZ,kBAAQ,IAAI,CAAC,OAAO,UACnB,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC,WAAU;AAAA,MACV,OAAO;AAAA,QACL,gBAAgB,GAAG,QAAQ,GAAG;AAAA,QAC9B,WAAW,cAAc,QAAQ,CAAC;AAAA,MACpC;AAAA,MAEA,0BAAAA,MAAC,SAAO,GAAG,OAAO,SAAkB;AAAA;AAAA,IAP/B,MAAM;AAAA,EAQb,CACD,GACH;AAEJ;AASA,IAAM,eAAeU,eAA4C,MAAS;AAGnE,IAAM,gBAAyD,CAAC,EAAE,SAAS,MAAM;AACtF,QAAM,CAAC,QAAQ,SAAS,IAAIJ,UAAuB,CAAC,CAAC;AAErD,QAAM,WAAW,CAAC,MAAiB,OAAe,SAAkB,aAAsB;AACxF,UAAM,KAAK,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC;AACjD,UAAM,WAAuB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS;AAAA,IACX;AAEA,cAAU,UAAQ,CAAC,GAAG,MAAM,QAAQ,CAAC;AACrC,WAAO;AAAA,EACT;AAEA,QAAM,cAAc,CAAC,OAAe;AAClC,cAAU,UAAQ,KAAK,OAAO,WAAS,MAAM,OAAO,EAAE,CAAC;AAAA,EACzD;AAEA,SACE,gBAAAL,OAAC,aAAa,UAAb,EAAsB,OAAO,EAAE,QAAQ,UAAU,YAAY,GAC3D;AAAA;AAAA,IACD,gBAAAD,MAAC,kBAAe,QAAgB,SAAS,aAAa;AAAA,KACxD;AAEJ;AAGO,IAAM,YAAY,MAAM;AAC7B,QAAM,UAAUW,YAAW,YAAY;AACvC,MAAI,YAAY,QAAW;AACzB,UAAM,IAAI,MAAM,+CAA+C;AAAA,EACjE;AACA,SAAO;AACT;AAGO,IAAM,WAAW,MAAM;AAC5B,QAAM,EAAE,UAAU,YAAY,IAAI,UAAU;AAG5C,QAAM,eAAe,CAAC,OAAe,YAAqB,SAAS,WAAW,OAAO,OAAO;AAC5F,QAAM,aAAa,CAAC,OAAe,YAAqB,SAAS,SAAS,OAAO,SAAS,CAAC;AAC3F,QAAM,eAAe,CAAC,OAAe,YAAqB,SAAS,WAAW,OAAO,OAAO;AAC5F,QAAM,YAAY,CAAC,OAAe,YAAqB,SAAS,QAAQ,OAAO,OAAO;AAEtF,SAAO;AAAA;AAAA,IAEL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA,SAAS;AAAA,IACT,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,EACR;AACF;;;ACpMA,SAAgB,YAAAC,YAAU,aAAAC,YAAW,aAAa,UAAAC,eAAc;AAwBhE,SAAS,aAAa,oBAAyC;AAC/D,SAAS,wBAAwB,yBAAAC,8BAA6B;AAC9D;AAAA,EACE,WAAAC;AAAA,EACA;AAAA,EACA;AAAA,EAIA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,eAAAC;AAAA,EACA;AAAA,EACA,WAAAC;AAAA,OACK;AAokBK,SAyNE,YAAAC,WAzNF,OAAAC,OAKM,QAAAC,cALN;AAphBL,IAAM,cAA0C,CAAC;AAAA,EACtD,cAAc,CAAC;AAAA,EACf,aAAa,CAAC;AAAA,EACd,UAAU,CAAC;AAAA,EACX;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,OAAO;AAAA,EACP,aAAa;AAAA,EACb,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB;AAAA,EACA,qBAAqB;AACvB,MAAM;AACJ,QAAMC,KAAI,uBAAuB;AACjC,QAAM,KAAKT,uBAAsB;AAEjC,QAAM,CAAC,UAAU,WAAW,IAAIU,WAA0B;AAAA,IACxD,MAAM;AAAA,IACN,aAAa;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,WAAW;AAAA,IACX,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ,CAAC;AAAA,IACT,aAAa,CAAC;AAAA,IACd,KAAK;AAAA,IACL,GAAG;AAAA,EACL,CAAC;AAID,QAAM,CAAC,QAAQ,mBAAmB,IAAIA,WAAyD,CAAC,CAAC;AACjG,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AACtD,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,KAAK;AAClD,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAgD,MAAM;AAClG,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAyC,CAAC,CAAC;AACvF,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAiC,CAAC,CAAC;AAC3E,QAAM,CAAC,eAAe,gBAAgB,IAAIA,WAAiB,CAAC,CAAC;AAC7D,QAAM,eAAeC,QAAyB,IAAI;AAGlD,EAAAC,WAAU,MAAM;AACd,YAAQ,IAAI,gDAAyC,WAAW;AAChE,YAAQ,IAAI,mDAA4C,YAAY,UAAU;AAC9E,YAAQ,IAAI,wDAAiD,OAAO,YAAY,UAAU;AAC1F,YAAQ,IAAI,iCAA0B,IAAI;AAC1C,YAAQ,IAAI,oCAA6B,OAAO;AAChD,YAAQ,IAAI,oDAA6C,YAAY,WAAW;AAChF,YAAQ,IAAI,iDAA0C,SAAS,WAAW;AAC1E,YAAQ,IAAI,2CAAoC,QAAQ,MAAM;AAC9D,YAAQ,IAAI,wDAAiD,SAAS,YAAY,MAAM;AAGxF,QAAI,SAAS,QAAQ;AACnB,cAAQ,IAAI,mEAA4D;AACxE,YAAM,YAAY,QAAQ,IAAI,CAAAC,OAAKA,GAAE,EAAE;AACvC,YAAM,iBAAiB,SAAS,YAAY,IAAI,QAAM,GAAG,QAAQ;AACjE,cAAQ,IAAI,2CAAoC,SAAS;AACzD,cAAQ,IAAI,6CAAsC,cAAc;AAEhE,YAAM,iBAAiB,UAAU,OAAO,QAAM,CAAC,eAAe,SAAS,EAAE,CAAC;AAC1E,UAAI,eAAe,SAAS,GAAG;AAC7B,gBAAQ,KAAK,sEAA+D,cAAc;AAAA,MAC5F;AAAA,IACF;AAAA,EACF,GAAG,CAAC,aAAa,MAAM,SAAS,SAAS,WAAW,CAAC;AAGrD,EAAAD,WAAU,MAAM;AACd,QAAI,eAAe,OAAO,KAAK,WAAW,EAAE,SAAS,GAAG;AACtD,cAAQ,IAAI,sEAA+D,WAAW;AACtF,kBAAY;AAAA,QACV,MAAM;AAAA,QACN,aAAa;AAAA,QACb,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,WAAW;AAAA,QACX,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ,CAAC;AAAA,QACT,aAAa,CAAC;AAAA,QACd,KAAK;AAAA,QACL,GAAG;AAAA,MACL,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,WAAW,CAAC;AAGhB,EAAAA,WAAU,MAAM;AACd,QAAI,kBAAkB,EAAE,GAAG,SAAS;AAGpC,QAAI,SAAS,YAAY,SAAS,YAAY,WAAW,KAAK,QAAQ,SAAS,GAAG;AAChF,sBAAgB,cAAc,QAAQ,IAAI,aAAW;AAAA,QACnD,UAAU,OAAO;AAAA,QACjB,OAAO;AAAA,MACT,EAAE;AAAA,IACJ;AAGA,QAAI,CAAC,SAAS,cAAc,WAAW,SAAS,GAAG;AACjD,sBAAgB,aAAa,WAAW,CAAC,EAAE;AAAA,IAC7C;AAGA,QAAI,SAAS,YAAY,CAAC,SAAS,SAAS;AAC1C,sBAAgB,UAAU,gBAAgB;AAAA,IAC5C;AAGA,QAAI,KAAK,UAAU,eAAe,MAAM,KAAK,UAAU,QAAQ,GAAG;AAChE,kBAAY,eAAe;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,SAAS,YAAY,SAAS,YAAY,QAAQ,SAAS,YAAY,SAAS,SAAS,IAAI,CAAC;AAGlG,EAAAA,WAAU,MAAM;AACd,QAAI,QAAQ,WAAW,KAAK,SAAS,YAAY,WAAW,GAAG;AAC7D,YAAM,qBAAqB,SAAS,YAAY,CAAC,EAAE;AAGnD,UAAI,SAAS,eAAe,oBAAoB;AAC9C,oBAAY,WAAS;AAAA,UACnB,GAAG;AAAA,UACH,aAAa,CAAC;AAAA,YACZ,UAAU,QAAQ,CAAC,EAAE;AAAA,YACrB,OAAO,SAAS;AAAA,UAClB,CAAC;AAAA,QACH,EAAE;AAAA,MACJ;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,YAAY,QAAQ,MAAM,CAAC;AAGxC,QAAM,kBAAkB,MAAc;AACpC,UAAM,YAAY,KAAK,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE;AAChD,UAAM,SAAS,KAAK,MAAM,KAAK,OAAO,IAAI,GAAI,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AAC1E,WAAO,GAAG,SAAS,GAAG,MAAM;AAAA,EAC9B;AAGA,EAAAA,WAAU,MAAM;AACd,QAAI,SAAS,UAAU,SAAS,QAAQ,SAAS,YAAY;AAC3D,YAAM,YAAY,WAAW,MAAM;AACjC,uBAAe;AAAA,MACjB,GAAG,GAAI;AAEP,aAAO,MAAM,aAAa,SAAS;AAAA,IACrC;AAAA,EACF,GAAG,CAAC,SAAS,MAAM,SAAS,aAAa,SAAS,YAAY,IAAI,CAAC;AAEnE,QAAM,iBAAiB,YAAY,YAAY;AAI7C,sBAAkB,QAAQ;AAC1B,QAAI;AAGF,YAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAI,CAAC;AACtD,wBAAkB,OAAO;AACzB,iBAAW,MAAM,kBAAkB,MAAM,GAAG,GAAI;AAAA,IAClD,SAAS,OAAO;AACd,wBAAkB,OAAO;AACzB,iBAAW,MAAM,kBAAkB,MAAM,GAAG,GAAI;AAAA,IAClD;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AAEb,QAAM,eAAe,MAAe;AAClC,UAAM,YAA4D,CAAC;AAEnE,QAAI,CAAC,SAAS,KAAK,KAAK,GAAG;AACzB,gBAAU,OAAO;AAAA,IACnB;AAEA,QAAI,CAAC,SAAS,YAAY;AACxB,gBAAU,aAAa;AAAA,IACzB;AAEA,QAAI,SAAS,aAAa,GAAG;AAC3B,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,SAAS,aAAa,GAAG;AAC3B,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,SAAS,UAAU,GAAG;AACxB,gBAAU,UAAU;AAAA,IACtB;AAEA,QAAI,SAAS,cAAc,GAAG;AAC5B,gBAAU,aAAa;AAAA,IACzB;AAGA,QAAI,QAAQ,WAAW,GAAG;AACxB,gBAAU,cAAc;AACxB,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,YAAY,WAAW,GAAG;AACrC,gBAAU,cAAc;AACxB,aAAO;AAAA,IACT;AAGA,QAAI,SAAS,YAAY,SAAS,GAAG;AACnC,YAAM,qBAAqB,SAAS,YAAY,KAAK,UAAQ,KAAK,QAAQ,CAAC;AAC3E,UAAI,oBAAoB;AACtB,kBAAU,cAAc;AAAA,MAC1B;AAAA,IACF;AAGA,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOE,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,YAAQ,IAAI,oDAA6C,QAAQ;AACjE,YAAQ,IAAI,4CAAqC,OAAO,SAAS,UAAU;AAC3E,YAAQ,IAAI,6CAAsC,SAAS,UAAU;AAGrE,QAAI,CAAC,aAAa,GAAG;AACnB,cAAQ,IAAI,uCAAkC;AAG9C,YAAM,YAA4D,CAAC;AAEnE,UAAI,CAAC,SAAS,KAAK,KAAK,GAAG;AACzB,kBAAU,OAAO;AAAA,MACnB;AAEA,UAAI,CAAC,SAAS,YAAY;AACxB,kBAAU,aAAa;AAAA,MACzB;AAEA,UAAI,SAAS,aAAa,GAAG;AAC3B,kBAAU,YAAY;AAAA,MACxB;AAEA,UAAI,SAAS,aAAa,GAAG;AAC3B,kBAAU,YAAY;AAAA,MACxB;AAEA,UAAI,SAAS,UAAU,GAAG;AACxB,kBAAU,UAAU;AAAA,MACtB;AAEA,UAAI,SAAS,cAAc,GAAG;AAC5B,kBAAU,aAAa;AAAA,MACzB;AAGA,UAAI,SAAS,YAAY,WAAW,GAAG;AACrC,kBAAU,cAAc;AACxB,4BAAoB,SAAS;AAC7B;AAAA,MACF;AAGA,UAAI,SAAS,YAAY,SAAS,GAAG;AACnC,cAAM,qBAAqB,SAAS,YAAY,KAAK,UAAQ,KAAK,QAAQ,CAAC;AAC3E,YAAI,oBAAoB;AACtB,oBAAU,cAAc;AAAA,QAC1B;AAAA,MACF;AAGA,0BAAoB,SAAS;AAC7B;AAAA,IACF;AAIA,UAAM,cAA4B;AAAA,MAChC,YAAY,OAAO,eAAe,WAAW,SAAS,UAAU,KAAK,IAAI,cAAc;AAAA,MACvF,YAAY,SAAS;AAAA,MACrB,MAAM,SAAS;AAAA,MACf,aAAa,SAAS;AAAA,MACtB,SAAS,SAAS;AAAA,MAClB,YAAY,SAAS;AAAA,MACrB,WAAW,SAAS;AAAA,MACpB,WAAW,SAAS,YAAY,IAAI,SAAS,YAAY;AAAA,MACzD,SAAS,SAAS;AAAA,MAClB,QAAQ,qBAAqB,CAAC,IAAI,SAAS;AAAA;AAAA,MAC3C,aAAa,SAAS;AAAA,IACxB;AAGA,QAAI,oBAAoB;AACtB,eAAS,aAAa,aAAa;AAAA,IACrC,OAAO;AACL,eAAS,WAAW;AAAA,IACtB;AAAA,EACF;AAEA,QAAM,oBAAoB,CAAC,OAA8B,UAAe;AAEtE,QAAI,iBAAiB;AAErB,QAAI,UAAU,cAAc;AAE1B,uBAAiB,SAAS,KAAK,KAAK;AAAA,IACtC,WAAW,UAAU,eAAe,UAAU,eAAe,UAAU,WAAW;AAEhF,uBAAiB,WAAW,KAAK,KAAK;AAAA,IACxC,WAAW,UAAU,cAAc;AAEjC,uBAAiB,SAAS,KAAK,KAAK;AAAA,IACtC;AAEA,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,CAAC,KAAK,GAAG;AAAA,IACX,EAAE;AAGF,QAAI,OAAO,KAAK,GAAG;AACjB,0BAAoB,WAAS;AAAA,QAC3B,GAAG;AAAA,QACH,CAAC,KAAK,GAAG;AAAA,MACX,EAAE;AAAA,IACJ;AAAA,EACF;AAIA,QAAM,oBAAoB,CAAC,UAAkB,OAAgB,UAAkB;AAC7E,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,aAAa,KAAK,YAAY;AAAA,QAAI,UAChC,KAAK,aAAa,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,IAAI;AAAA,MAC7D;AAAA,IACF,EAAE;AAAA,EACJ;AAKA,QAAM,oBAAoB,OAAO,UAA2B;AAC1D,QAAI,CAAC;AAAO;AAGZ,UAAMC,qBAAoB,qBAAqB,cAAc,SAAS,SAAS,OAAO;AACtF,QAAIA,sBAAqB,GAAG;AAC1B,cAAQ,KAAK,0BAA0B;AACvC;AAAA,IACF;AAEA,UAAM,aAAa,MAAM,KAAK,KAAK;AACnC,UAAM,gBAAgB,WAAW,MAAM,GAAG,IAAIA,kBAAiB;AAE/D,QAAI,oBAAoB;AAEtB,cAAQ,IAAI,+DAAwD;AACpE,uBAAiB,UAAQ,CAAC,GAAG,MAAM,GAAG,aAAa,CAAC;AAGpD,sBAAgB,CAAC,CAAC;AAClB;AAAA,IACF;AAGA,UAAM,QAAQ,aAAa;AAC3B,QAAI,CAAC,OAAO;AACV,cAAQ,MAAM,+BAA+B;AAC7C,sBAAgB,WAAS;AAAA,QACvB,GAAG;AAAA,QACH,SAAS;AAAA,MACX,EAAE;AACF;AAAA,IACF;AAEA,eAAW,QAAQ,eAAe;AAChC,YAAM,SAAS,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC;AAGzC,sBAAgB,UAAQ;AACtB,cAAM,YAAY,EAAE,GAAG,KAAK;AAC5B,eAAO,UAAU,MAAM;AACvB,eAAO;AAAA,MACT,CAAC;AAGD,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,QAAQ,CAAC,GAAG,KAAK,QAAQ,aAAa,MAAM,EAAE;AAAA,MAChD,EAAE;AAEF,UAAI;AAEF,cAAM,eAAe,MAAM,YAAY,MAAM,OAAO;AAAA,UAClD,QAAQ;AAAA,UACR,aAAa,IAAI,OAAO;AAAA;AAAA,UACxB,cAAc,CAAC,cAAc,aAAa,aAAa,cAAc,WAAW;AAAA,UAChF,UAAU;AAAA;AAAA,UACV,WAAW;AAAA,UACX,SAAS;AAAA;AAAA,UAET,mBAAmB;AAAA,UACnB,oBAAoB;AAAA;AAAA,UACpB,WAAW;AAAA;AAAA,UACX,YAAY,CAAC,aAA6B;AACxC,8BAAkB,WAAS;AAAA,cACzB,GAAG;AAAA,cACH,CAAC,MAAM,GAAG;AAAA,YACZ,EAAE;AAAA,UACJ;AAAA,QACF,CAAC;AAED,YAAI,aAAa,WAAW,aAAa,MAAM;AAE7C,sBAAY,WAAS;AAAA,YACnB,GAAG;AAAA,YACH,QAAQ,KAAK,OAAO;AAAA,cAAI,SACtB,QAAQ,aAAa,MAAM,KAAK,aAAa,KAAM,MAAM;AAAA,YAC3D;AAAA,UACF,EAAE;AAGF,cAAI,aAAa,KAAK,iBAAiB,UAAU;AAC/C,oBAAQ,KAAK,yFAA+E;AAAA,UAC9F,WAAW,aAAa,KAAK,iBAAiB,SAAS;AACrD,oBAAQ,KAAK,oFAA0E;AAAA,UACzF,OAAO;AACL,oBAAQ,IAAI,kDAA6C;AAAA,UAC3D;AAGA,4BAAkB,UAAQ;AACxB,kBAAM,cAAc,EAAE,GAAG,KAAK;AAC9B,mBAAO,YAAY,MAAM;AACzB,mBAAO;AAAA,UACT,CAAC;AAAA,QACH,OAAO;AAEL,kBAAQ,MAAM,kBAAkB,aAAa,KAAK;AAClD,0BAAgB,WAAS;AAAA,YACvB,GAAG;AAAA,YACH,CAAC,MAAM,GAAG,aAAa,SAAS;AAAA,UAClC,EAAE;AAGF,sBAAY,WAAS;AAAA,YACnB,GAAG;AAAA,YACH,QAAQ,KAAK,OAAO,OAAO,SAAO,QAAQ,aAAa,MAAM,EAAE;AAAA,UACjE,EAAE;AAAA,QACJ;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,MAAM,iBAAiB,KAAK;AACpC,wBAAgB,WAAS;AAAA,UACvB,GAAG;AAAA,UACH,CAAC,MAAM,GAAG,iBAAiB,QAAQ,MAAM,UAAU;AAAA,QACrD,EAAE;AAGF,oBAAY,WAAS;AAAA,UACnB,GAAG;AAAA,UACH,QAAQ,KAAK,OAAO,OAAO,SAAO,QAAQ,aAAa,MAAM,EAAE;AAAA,QACjE,EAAE;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AAEA,QAAM,cAAc,CAAC,UAAkB;AACrC,QAAI,oBAAoB;AAEtB,uBAAiB,UAAQ,KAAK,OAAO,CAAC,GAAG,MAAM,MAAM,KAAK,CAAC;AAAA,IAC7D,OAAO;AAEL,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,QAAQ,KAAK,OAAO,OAAO,CAAC,GAAG,MAAM,MAAM,KAAK;AAAA,MAClD,EAAE;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,aAAa,YAAY,CAACD,OAAuB;AACrD,IAAAA,GAAE,eAAe;AACjB,IAAAA,GAAE,gBAAgB;AAClB,QAAIA,GAAE,SAAS,eAAeA,GAAE,SAAS,YAAY;AACnD,oBAAc,IAAI;AAAA,IACpB,WAAWA,GAAE,SAAS,aAAa;AACjC,oBAAc,KAAK;AAAA,IACrB;AAAA,EACF,GAAG,CAAC,CAAC;AAEH,QAAM,aAAa,YAAY,CAACA,OAAuB;AACvD,IAAAA,GAAE,eAAe;AACjB,IAAAA,GAAE,gBAAgB;AAClB,kBAAc,KAAK;AAEnB,UAAMC,qBAAoB,qBAAqB,cAAc,SAAS,SAAS,OAAO;AACtF,QAAID,GAAE,aAAa,SAASA,GAAE,aAAa,MAAM,CAAC,KAAKC,qBAAoB,GAAG;AAC5E,wBAAkBD,GAAE,aAAa,KAAK;AAAA,IACxC;AAAA,EACF,GAAG,CAAC,SAAS,OAAO,QAAQ,cAAc,QAAQ,kBAAkB,CAAC;AAErE,QAAM,mBAAmB,MAAM;AAC7B,QAAI,SAAS,eAAe;AAAG,aAAO,EAAE,QAAQ,gBAAgB,SAAS,cAAuB;AAChG,WAAO,EAAE,QAAQ,YAAY,SAAS,UAAmB;AAAA,EAC3D;AAEA,QAAM,EAAE,QAAQ,QAAQ,IAAI,iBAAiB;AAG7C,QAAM,gBAAgB,qBAAqB,gBAAgB,SAAS;AACpE,QAAM,oBAAoB,cAAc;AACxC,QAAM,qBAAqB,qBAAqB;AAGhD,QAAM,uBAAuB,CAAC,SAAuB;AACnD,WAAO,IAAI,gBAAgB,IAAI;AAAA,EACjC;AAEA,SACE,gBAAAN,OAAC,SAAI,WAAU,aAEZ;AAAA,KAAC,cACA,gBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAD,MAAC,QAAG,WAAU,6CAA6C,iBAAM;AAAA,QAEhE,SAAS,UACR,gBAAAC,OAAC,SAAI,WAAU,gCACZ;AAAA,6BAAmB,YAClB,gBAAAA,OAAC,SAAI,WAAU,uDACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,sEAAqE;AAAA,YAAE;AAAA,aAExF;AAAA,UAED,mBAAmB,WAClB,gBAAAC,OAAC,SAAI,WAAU,kDACb;AAAA,4BAAAD,MAACL,cAAA,EAAY,WAAU,WAAU;AAAA,YAAE;AAAA,aAErC;AAAA,UAED,mBAAmB,WAClB,gBAAAM,OAAC,SAAI,WAAU,gDACb;AAAA,4BAAAD,MAACJ,UAAA,EAAQ,WAAU,WAAU;AAAA,YAAE;AAAA,aAEjC;AAAA,WAEJ;AAAA,SAEJ;AAAA,MACA,gBAAAI,MAAC,SAAI,WAAU,2BACb,0BAAAA,MAAC,SAAM,SAAkB,WAAU,WAChC,kBACH,GACF;AAAA,OACF;AAAA,IAGF,gBAAAC,OAAC,UAAK,IAAI,QAAQ,UAAU,cAAc,WAAU,aAElD;AAAA,sBAAAA,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAACN,UAAA,EAAQ,WAAU,WAAU;AAAA,UAC5BQ,GAAE,gBAAgB;AAAA,WACrB,GACF;AAAA,QACA,gBAAAD,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAA,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAA,OAAC,WAAM,WAAU,yCAAyC;AAAA,gBAAAC,GAAE,aAAa;AAAA,gBAAE;AAAA,iBAAE;AAAA,cAC7E,gBAAAF;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAO,SAAS;AAAA,kBAChB,UAAU,CAACO,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,kBACzD,aAAaL,GAAE,aAAa;AAAA,kBAC5B,WAAW,OAAO,OAAO,mBAAmB;AAAA;AAAA,cAC9C;AAAA,cACC,OAAO,QAAQ,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,MAAK;AAAA,eACnE;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,WAAU,yCAAyC,UAAAE,GAAE,YAAY,GAAE;AAAA,cAC1E,gBAAAF;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAO,SAAS;AAAA,kBAChB,UAAU,CAACO,OAAM,kBAAkB,OAAOA,GAAE,OAAO,KAAK;AAAA,kBACxD,aAAaL,GAAE,YAAY;AAAA;AAAA,cAC7B;AAAA,eACF;AAAA,aACF;AAAA,UAEA,gBAAAD,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,WAAU,yCAAyC,UAAAE,GAAE,gBAAgB,GAAE;AAAA,cAC9E,gBAAAD,OAAC,SAAI,WAAU,cACb;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAO,SAAS;AAAA,oBAChB,UAAU,CAACO,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,oBAC5D,aAAaL,GAAE,gBAAgB;AAAA,oBAC/B,WAAU;AAAA;AAAA,gBACZ;AAAA,gBACA,gBAAAF;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,SAAQ;AAAA,oBACR,MAAK;AAAA,oBACL,SAAS,MAAM,kBAAkB,WAAW,gBAAgB,CAAC;AAAA,oBAC7D,OAAOE,GAAE,0BAA0B;AAAA,oBAEnC,0BAAAF,MAAC,aAAU,WAAU,WAAU;AAAA;AAAA,gBACjC;AAAA,iBACF;AAAA,eACF;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAA,OAAC,WAAM,WAAU,yCAAyC;AAAA,gBAAAC,GAAE,iBAAiB;AAAA,gBAAE;AAAA,iBAAE;AAAA,cACjF,gBAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAO,SAAS,WAAW,SAAS;AAAA,kBACpC,eAAe,CAAC,UAAU;AACxB,sCAAkB,cAAc,KAAK;AAAA,kBACvC;AAAA,kBAEA;AAAA,oCAAAD,MAAC,iBAAc,WAAW,OAAO,aAAa,mBAAmB,IAC/D,0BAAAA,MAAC,eAAY,aAAaE,GAAE,iBAAiB,GAAG,GAClD;AAAA,oBACA,gBAAAF,MAAC,iBACE,qBAAW,IAAI,CAAC,aACf,gBAAAA,MAAC,cAA6B,OAAO,SAAS,GAAG,SAAS,GACvD,mBAAS,QADK,SAAS,EAE1B,CACD,GACH;AAAA;AAAA;AAAA,cACF;AAAA,cACC,OAAO,cAAc,gBAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,YAAW;AAAA,eAC/E;AAAA,aACF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,WAAU,yCAAyC,UAAAE,GAAE,oBAAoB,GAAE;AAAA,YAClF,gBAAAF;AAAA,cAAC;AAAA;AAAA,gBACC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAACO,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,gBAChE,aAAaL,GAAE,oBAAoB;AAAA,gBACnC,MAAM;AAAA;AAAA,YACR;AAAA,aACF;AAAA,UAGA,gBAAAD,OAAC,SAAI,WAAU,sDACb;AAAA,4BAAAA,OAAC,QAAG,WAAU,uFACZ;AAAA,8BAAAD,MAAC,cAAW,WAAU,WAAU;AAAA,cAC/BE,GAAE,eAAe;AAAA,eACpB;AAAA,YACA,gBAAAD,OAAC,SAAI,WAAU,yCACf;AAAA,8BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAOE,GAAE,kBAAkB;AAAA,oBAC3B,OAAO,SAAS;AAAA,oBAChB,UAAU,CAAC,UAAU,kBAAkB,aAAa,KAAK;AAAA,oBACzD,aAAY;AAAA,oBACZ,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,UAAQ;AAAA,oBACR,eAAe;AAAA,oBACf,kBAAkB;AAAA;AAAA,gBACpB;AAAA,gBACC,OAAO,aAAa,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,iBAC7E;AAAA,cAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAOE,GAAE,kBAAkB;AAAA,oBAC3B,OAAO,SAAS;AAAA,oBAChB,UAAU,CAAC,UAAU,kBAAkB,aAAa,KAAK;AAAA,oBACzD,aAAY;AAAA,oBACZ,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,UAAQ;AAAA,oBACR,eAAe;AAAA,oBACf,kBAAkB;AAAA;AAAA,gBACpB;AAAA,gBACC,OAAO,aAAa,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,iBAC7E;AAAA,cAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,OAAOE,GAAE,gBAAgB;AAAA,oBACzB,OAAO,SAAS;AAAA,oBAChB,UAAU,CAAC,UAAU,kBAAkB,WAAW,KAAK;AAAA,oBACvD,aAAY;AAAA,oBACZ,OAAO,CAAC,CAAC,OAAO;AAAA,oBAChB,UAAQ;AAAA,oBACR,eAAe;AAAA,oBACf,kBAAkB;AAAA;AAAA,gBACpB;AAAA,gBACC,OAAO,WAAW,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,SAAQ;AAAA,iBACzE;AAAA,eACF;AAAA,YAEA,gBAAAA,MAAC,SAAI,WAAU,yCACb,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAOE,GAAE,cAAc;AAAA,kBACvB,OAAO,SAAS;AAAA,kBAChB,UAAU,CAAC,UAAU,kBAAkB,cAAc,KAAK;AAAA,kBAC1D,aAAY;AAAA,kBACZ,OAAO,CAAC,CAAC,OAAO;AAAA,kBAChB,UAAQ;AAAA,kBACR,eAAe;AAAA,kBACf,KAAK;AAAA;AAAA,cACP;AAAA,cACC,OAAO,cAAc,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,YAAW;AAAA,eAC/E,GACF;AAAA,aACA;AAAA,WACF;AAAA,SACF;AAAA,MAGC,QAAQ,SAAS,IAChB,gBAAAC,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAAC,aAAU,WAAU,WAAU;AAAA,UAC9BE,GAAE,mCAAmC;AAAA,UAAE;AAAA,WAC1C,GACF;AAAA,QACA,gBAAAD,OAAC,eACD;AAAA,0BAAAD,MAAC,SAAI,WAAU,QACb,0BAAAC,OAAC,OAAE,WAAU,iCACV;AAAA,YAAAC,GAAE,wBAAwB;AAAA,YAAE;AAAA,YAAG,QAAQ;AAAA,YAAO;AAAA,YAAIA,GAAE,wBAAwB;AAAA,YAAE;AAAA,YAAG,SAAS,YAAY;AAAA,YAAO;AAAA,YAAG,gBAAAF,MAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,YAAO;AAAA,YAAEE,GAAE,yBAAyB;AAAA,aACvL,GACF;AAAA,UAEC,QAAQ,WAAW,IAClB,gBAAAD,OAAC,SAAI,WAAU,oBACb;AAAA,4BAAAD,MAAC,aAAU,WAAU,gDAA+C;AAAA,YACpE,gBAAAA,MAAC,QAAG,WAAU,8BAA8B,UAAAE,GAAE,8BAA8B,GAAE;AAAA,YAC9E,gBAAAF,MAAC,OAAE,WAAU,8BACV,UAAAE,GAAE,6BAA6B,GAClC;AAAA,YACA,gBAAAF,MAAC,OAAE,WAAU,wBACV,UAAAE,GAAE,wBAAwB,GAC7B;AAAA,aACF,IAEA,gBAAAD,OAAAF,WAAA,EACE;AAAA,4BAAAE,OAAC,SACC;AAAA,8BAAAD,MAAC,eACC,0BAAAC,OAAC,YACC;AAAA,gCAAAD,MAAC,aAAW,UAAAE,GAAE,qBAAqB,GAAE;AAAA,gBACrC,gBAAAF,MAAC,aAAW,UAAAE,GAAE,aAAa,GAAE;AAAA,iBAC/B,GACF;AAAA,cACA,gBAAAF,MAAC,aACE,mBAAS,YAAY,IAAI,CAAC,gBAAgB;AACzC,sBAAM,SAAS,QAAQ,KAAK,CAAAM,OAAKA,GAAE,OAAO,YAAY,QAAQ;AAE9D,uBACE,gBAAAL,OAAC,YACC;AAAA,kCAAAD,MAAC,aAAU,WAAU,eACnB,0BAAAC,OAAC,SACC;AAAA,oCAAAD,MAAC,SAAI,WAAU,eAAe,kBAAQ,QAAQ,kBAAiB;AAAA,oBAC9D,QAAQ,WACP,gBAAAA,MAAC,SAAI,WAAU,oCACZ,iBAAO,SACV;AAAA,qBAEJ,GACF;AAAA,kBACA,gBAAAA,MAAC,aACC,0BAAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,OAAO,YAAY;AAAA,sBACnB,UAAU,CAAC,UAAU,kBAAkB,YAAY,UAAU,SAAS,KAAK;AAAA,sBAC3E,KAAK;AAAA,sBACL,eAAe;AAAA,sBACf,UAAQ;AAAA,sBACR,WAAU;AAAA;AAAA,kBACZ,GACF;AAAA,qBApBa,YAAY,QAqB3B;AAAA,cAEJ,CAAC,GACH;AAAA,eACF;AAAA,YAGC,OAAO,eACN,gBAAAA,MAAC,SAAI,WAAU,QACb,0BAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,aAAY,GAC1D;AAAA,aAEJ;AAAA,WAEJ;AAAA,SACF,IACI;AAAA,MAGJ,gBAAAC,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAAC,aAAU,WAAU,WAAU;AAAA,UAC9BE,GAAE,eAAe;AAAA,WACpB,GACF;AAAA,QACA,gBAAAD,OAAC,eAAY,WAAU,aAErB;AAAA,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,uEACT,cAAc,CAAC,qBACX,+CACA,qBACA,+BACA,8CACN;AAAA,cACA,aAAa,CAAC,qBAAqB,aAAa;AAAA,cAChD,aAAa,CAAC,qBAAqB,aAAa;AAAA,cAChD,YAAY,CAAC,qBAAqB,aAAa;AAAA,cAC/C,QAAQ,CAAC,qBAAqB,aAAa;AAAA,cAE3C;AAAA,gCAAAD,MAAC,UAAO,WAAW,wBAAwB,qBAAqB,kBAAkB,qBAAqB,IAAI;AAAA,gBAC3G,gBAAAA,MAAC,OAAE,WAAU,sCACV,+BAAqBE,GAAE,2BAA2B,IAAIA,GAAE,yBAAyB,GACpF;AAAA,gBACA,gBAAAF,MAAC,OAAE,WAAU,oCACV,+BACG,GAAGE,GAAE,uBAAuB,CAAC,uCAC7BA,GAAE,uBAAuB,GAE/B;AAAA,gBAGA,gBAAAF;AAAA,kBAAC;AAAA;AAAA,oBACC,KAAK;AAAA,oBACL,MAAK;AAAA,oBACL,UAAQ;AAAA,oBACR,QAAO;AAAA,oBACP,UAAU,CAACO,OAAM,kBAAkBA,GAAE,OAAO,KAAK;AAAA,oBACjD,WAAU;AAAA,oBACV,IAAG;AAAA,oBACH,UAAU;AAAA;AAAA,gBACZ;AAAA,gBAGA,gBAAAP;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,SAAQ;AAAA,oBACR,MAAK;AAAA,oBACL,SAAS,MAAM,aAAa,SAAS,MAAM;AAAA,oBAC3C,UAAU;AAAA,oBAET,+BAAqBE,GAAE,2BAA2B,IAAI,GAAG,gBAAgB;AAAA;AAAA,gBAC5E;AAAA;AAAA;AAAA,UACF;AAAA,UAGA,gBAAAD,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAA,OAAC,OAAE,WAAU,+BACV;AAAA;AAAA,cAAkB;AAAA,cAAI,qBAAqBC,GAAE,yBAAyB,IAAIA,GAAE,yBAAyB;AAAA,eACxG;AAAA,YACC,oBAAoB,KACnB,gBAAAF;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,SAAS,MAAM;AACb,sBAAI,oBAAoB;AACtB,qCAAiB,CAAC,CAAC;AAAA,kBACrB,OAAO;AACL,gCAAY,WAAS,EAAE,GAAG,MAAM,QAAQ,CAAC,EAAE,EAAE;AAAA,kBAC/C;AAAA,gBACF;AAAA,gBAEC,UAAAE,GAAE,yBAAyB;AAAA;AAAA,YAC9B;AAAA,aAEJ;AAAA,UAGC,OAAO,KAAK,YAAY,EAAE,SAAS,KAClC,gBAAAF,MAAC,SAAI,WAAU,aACZ,iBAAO,QAAQ,YAAY,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,MAC/C,gBAAAC,OAAC,SAAiB,WAAU,yEAC1B;AAAA,4BAAAD,MAACH,cAAA,EAAY,WAAU,6CAA4C;AAAA,YACnE,gBAAAI,OAAC,SAAI,WAAU,UACb;AAAA,8BAAAD,MAAC,OAAE,WAAU,oCAAoC,UAAAE,GAAE,uBAAuB,GAAE;AAAA,cAC5E,gBAAAF,MAAC,OAAE,WAAU,6BAA6B,iBAAM;AAAA,eAClD;AAAA,YACA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,SAAS,MAAM,gBAAgB,UAAQ;AACrC,wBAAM,YAAY,EAAE,GAAG,KAAK;AAC5B,yBAAO,UAAU,MAAM;AACvB,yBAAO;AAAA,gBACT,CAAC;AAAA,gBACD,WAAU;AAAA,gBAEV,0BAAAA,MAACJ,UAAA,EAAQ,WAAU,WAAU;AAAA;AAAA,YAC/B;AAAA,eAlBQ,MAmBV,CACD,GACH;AAAA,UAGD,oBAAoB,KACnB,gBAAAI,MAAC,SAAI,WAAU,0BACZ;AAAA;AAAA,YAEC,cAAc,IAAI,CAAC,MAAM,UAAU;AACjC,oBAAM,aAAa,qBAAqB,IAAI;AAC5C,qBACE,gBAAAC,OAAC,SAAgB,WAAU,kBACzB;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,KAAK;AAAA,oBACL,KAAK,GAAG,KAAK,IAAI;AAAA,oBACjB,WAAU;AAAA;AAAA,gBACZ;AAAA,gBACA,gBAAAA,MAAC,SAAI,WAAU,6FACZ,eAAK,MACR;AAAA,gBACA,gBAAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,SAAQ;AAAA,oBACR,MAAK;AAAA,oBACL,MAAK;AAAA,oBACL,SAAS,MAAM;AACb,kCAAY,KAAK;AACjB,0BAAI,gBAAgB,UAAU;AAAA,oBAChC;AAAA,oBACA,WAAU;AAAA,oBACV,OAAOE,GAAE,sBAAsB;AAAA,oBAE/B,0BAAAF,MAACJ,UAAA,EAAQ,WAAU,WAAU;AAAA;AAAA,gBAC/B;AAAA,mBArBQ,KAsBV;AAAA,YAEJ,CAAC;AAAA;AAAA;AAAA,YAGD,SAAS,OAAO,IAAI,CAAC,OAAO,UAAU;AAEpC,oBAAM,cAAc,MAAM,WAAW,YAAY;AACjD,oBAAM,SAAS,cAAc,MAAM,QAAQ,cAAc,EAAE,IAAI;AAC/D,oBAAM,WAAW,cAAc,eAAe,MAAM,IAAI;AAExD,qBACE,gBAAAI,MAAC,SAAgB,WAAU,kBACxB;AAAA;AAAA,gBAEC,gBAAAC,OAAC,SAAI,WAAU,2HACb;AAAA,kCAAAD,MAACF,UAAA,EAAQ,WAAU,4CAA2C;AAAA,kBAC7D,YACC,gBAAAG,OAAAF,WAAA,EACE;AAAA,oCAAAC,MAAC,SAAI,WAAU,eACb,0BAAAA,MAAC,SAAI,WAAU,uCACb,0BAAAA;AAAA,sBAAC;AAAA;AAAA,wBACC,WAAU;AAAA,wBACV,OAAO,EAAE,OAAO,GAAG,SAAS,UAAU,IAAI;AAAA;AAAA,oBAC5C,GACF,GACF;AAAA,oBACA,gBAAAC,OAAC,OAAE,WAAU,+BACV;AAAA,+BAAS,UAAU,eAAeC,GAAE,oBAAoB;AAAA,sBACxD,SAAS,UAAU,eAAe,GAAGA,GAAE,oBAAoB,CAAC,IAAI,SAAS,UAAU;AAAA,sBACnF,SAAS,UAAU,gBAAgBA,GAAE,qBAAqB;AAAA,sBAC1D,SAAS,UAAU,cAAcA,GAAE,mBAAmB;AAAA,uBACzD;AAAA,qBACF;AAAA,mBAEJ;AAAA;AAAA;AAAA,gBAGA,gBAAAD,OAAAF,WAAA,EACE;AAAA,kCAAAC;AAAA,oBAAC;AAAA;AAAA,sBACC,KAAK;AAAA,sBACL,KAAK,GAAGE,GAAE,aAAa,CAAC,IAAI,QAAQ,CAAC;AAAA,sBACrC,WAAU;AAAA;AAAA,kBACZ;AAAA,kBACA,gBAAAF;AAAA,oBAAC;AAAA;AAAA,sBACC,SAAQ;AAAA,sBACR,MAAK;AAAA,sBACL,MAAK;AAAA,sBACL,SAAS,MAAM,YAAY,KAAK;AAAA,sBAChC,WAAU;AAAA,sBACV,OAAOE,GAAE,sBAAsB;AAAA,sBAE/B,0BAAAF,MAACJ,UAAA,EAAQ,WAAU,WAAU;AAAA;AAAA,kBAC/B;AAAA,mBACF;AAAA,mBA1CM,KA4CV;AAAA,YAEJ,CAAC;AAAA,aAEL;AAAA,WAEJ;AAAA,SACF;AAAA,MAOC,CAAC,oBACA,gBAAAI,MAAC,SAAI,WAAU,oBACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU,gBAAgB,CAAC,aAAa;AAAA,UACxC,WAAU;AAAA,UAET,yBACC,gBAAAC,OAAAF,WAAA,EACE;AAAA,4BAAAC,MAAC,SAAI,WAAU,kEAAiE;AAAA,YAAE;AAAA,aAEpF,IAEA,gBAAAC,OAAAF,WAAA,EACE;AAAA,4BAAAC,MAACL,cAAA,EAAY,WAAU,gBAAe;AAAA,YACrC;AAAA,aACH;AAAA;AAAA,MAEJ,GACF;AAAA,OAEJ;AAAA,KACF;AAEJ;;;ACjmCA,SAAgB,YAAAc,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EAAS,QAAAC;AAAA,EACP,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,YAAAC;AAAA,EACA,SAAAC;AAAA,EAEA,kBAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,YAAAC;AAAA,OAAiB;AAyMX,SA+NA,YAAAC,WA/NA,OAAAC,OAaM,QAAAC,cAbN;AAlKD,IAAM,YAAsC,CAAC;AAAA,EAClD;AAAA,EACA,YAAY,CAAC;AAAA,EACb,WAAW,CAAC;AAAA,EACZ,UAAU,CAAC;AAAA,EACX;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,SAAS;AACX,MAAM;AACJ,QAAM,EAAE,YAAY,aAAa,IAAIH,UAAS;AAE9C,QAAM,CAAC,UAAU,WAAW,IAAIjB,WAA8B;AAAA,IAC5D,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,UAAU;AAAA,IACV,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,eAAe;AAAA,IACf,OAAO;AAAA,IACP,cAAc;AAAA,IACd,eAAe;AAAA,IACf,eAAe;AAAA,IACf,YAAY,CAAC;AAAA,IACb,GAAG;AAAA,EACL,CAAC;AAED,QAAM,CAAC,YAAY,aAAa,IAAIA;AAAA,IAClC,aAAa,YAAY,IAAI,WAAS;AAAA,MACpC,WAAW,KAAK;AAAA,MAChB,UAAU,KAAK;AAAA,MACf,WAAW,KAAK;AAAA,MAChB,YAAY,KAAK;AAAA,MACjB,YAAY,KAAK,cAAc;AAAA,MAC/B,WAAW,KAAK,WAAW,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK;AAAA,MAC1D,SAAS,KAAK,SAAS,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK;AAAA,MACtD,YAAY,KAAK,cAAc;AAAA,MAC/B,SAAS,KAAK,WAAW;AAAA,MACzB,OAAO,KAAK,SAAS;AAAA,IACvB,EAAE,KAAK,CAAC;AAAA,EACV;AAEA,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA;AAAA,IAC9C,UAAU,KAAK,OAAK,EAAE,OAAO,SAAS,UAAU,KAAK;AAAA,EACvD;AAGA,EAAAC,YAAU,MAAM;AACd,UAAM,WAAW,WAAW,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,YAAY,CAAC;AAC1E,UAAM,YAAY,WAAW;AAC7B,UAAM,cAAc,WAAW,aAAa,SAAS,kBAAkB;AAEvE,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,WAAW,IAAI,WAAS;AAAA,QAClC,WAAW,KAAK;AAAA,QAChB,UAAU,KAAK;AAAA,QACf,WAAW,KAAK;AAAA,QAChB,YAAY,KAAK;AAAA,QACjB,YAAY,KAAK;AAAA,QACjB,WAAW,KAAK,YAAY,IAAI,KAAK,KAAK,SAAS,IAAI;AAAA,QACvD,SAAS,KAAK,UAAU,IAAI,KAAK,KAAK,OAAO,IAAI;AAAA,QACjD,YAAY,KAAK;AAAA,QACjB,SAAS,KAAK;AAAA,QACd,OAAO,KAAK;AAAA,MACd,EAAE;AAAA,IACJ,EAAE;AAAA,EACJ,GAAG,CAAC,YAAY,SAAS,cAAc,CAAC;AAGxC,EAAAA,YAAU,MAAM;AACd,QAAI,kBAAkB;AACpB,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,YAAY,iBAAiB;AAAA,QAC7B,cAAc,GAAG,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ;AAAA,QACxE,eAAe,iBAAiB;AAAA,QAChC,eAAe,iBAAiB;AAAA,MAClC,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,gBAAgB,CAAC;AAErB,QAAM,eAAe,MAAM;AACzB,kBAAc,UAAQ,CAAC,GAAG,MAAM;AAAA,MAC9B,WAAW;AAAA,MACX,UAAU;AAAA,MACV,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,IACT,CAAC,CAAC;AAAA,EACJ;AAEA,QAAM,kBAAkB,CAAC,UAAkB;AACzC,kBAAc,UAAQ,KAAK,OAAO,CAAC,GAAG,MAAM,MAAM,KAAK,CAAC;AAAA,EAC1D;AAEA,QAAM,kBAAkB,CAAC,OAAe,OAAgC,UAAe;AACrF,kBAAc,UAAQ;AACpB,YAAM,WAAW,CAAC,GAAG,IAAI;AACzB,YAAM,OAAO,EAAE,GAAG,SAAS,KAAK,GAAG,CAAC,KAAK,GAAG,MAAM;AAGlD,UAAI,UAAU,cAAc,UAAU,aAAa;AACjD,aAAK,aAAa,KAAK,WAAW,KAAK;AAAA,MACzC;AAGA,UAAI,SAAS,cAAc,UAAU,UAAU,cAAc;AAC3D,aAAK,aAAa,KAAK,WAAW,KAAK,aAAa,KAAK,cAAc;AAAA,MACzE;AAGA,UAAI,UAAU,aAAa;AACzB,cAAM,UAAU,SAAS,KAAK,CAAAoB,OAAKA,GAAE,OAAO,KAAK;AACjD,YAAI,SAAS;AACX,eAAK,YAAY,SAAS,cAAc,SAAS,QAAQ,YAAa,QAAQ,aAAa;AAC3F,eAAK,aAAa,KAAK,WAAW,KAAK;AAAA,QACzC;AAAA,MACF;AAEA,eAAS,KAAK,IAAI;AAClB,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAEA,QAAM,eAAe,CAACC,OAAuB;AAC3C,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,SAAS,UAAU;AACtB,iBAAW,oBAAoB,yBAAyB;AACxD;AAAA,IACF;AAEA,QAAI,WAAW,WAAW,GAAG;AAC3B,iBAAW,oBAAoB,iCAAiC;AAChE;AAAA,IACF;AAEA,QAAI,WAAW,KAAK,UAAQ,CAAC,KAAK,SAAS,GAAG;AAC5C,iBAAW,oBAAoB,uCAAuC;AACtE;AAAA,IACF;AAEA,aAAS,QAAsB;AAAA,EACjC;AAGA,QAAM,WACJ,gBAAAF,OAAClB,OAAA,EACC;AAAA,oBAAAiB,MAAChB,aAAA,EACC,0BAAAgB,MAACf,YAAA,EAAU,gDAAkB,GAC/B;AAAA,IACA,gBAAAgB,OAACf,cAAA,EAAY,WAAU,aACrB;AAAA,sBAAAe,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,6CAAa;AAAA,UAC7E,gBAAAC;AAAA,YAACZ;AAAA,YAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,eAAe,CAAC,UAAqB,YAAY,WAAS,EAAE,GAAG,MAAM,WAAW,MAAM,EAAE;AAAA,cAExF;AAAA,gCAAAW,MAACR,gBAAA,EAAc,SAAQ,UACrB,0BAAAQ,MAACP,cAAA,EAAY,GACf;AAAA,gBACA,gBAAAQ,OAACX,gBAAA,EACC;AAAA,kCAAAU,MAACT,aAAA,EAAW,OAAM,QAAO,qBAAI;AAAA,kBAC7B,gBAAAS,MAACT,aAAA,EAAW,OAAM,QAAO,oBAAG;AAAA,kBAC5B,gBAAAS,MAACT,aAAA,EAAW,OAAM,eAAc,sCAAW;AAAA,mBAC7C;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAEA,gBAAAU,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,gCAAU;AAAA,UAC1E,gBAAAC;AAAA,YAACZ;AAAA,YAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,eAAe,CAAC,UAAkB,YAAY,WAAS,EAAE,GAAG,MAAM,UAAU,MAAM,EAAE;AAAA,cAEpF;AAAA,gCAAAW,MAACR,gBAAA,EAAc,SAAQ,UACrB,0BAAAQ,MAACP,cAAA,EAAY,aAAY,8BAAgB,GAC3C;AAAA,gBACA,gBAAAO,MAACV,gBAAA,EACE,kBAAQ,IAAI,YACX,gBAAAU,MAACT,aAAA,EAA2B,OAAO,OAAO,IACvC,iBAAO,QADO,OAAO,EAExB,CACD,GACH;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAU,OAAC,SACC;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,8BAAU;AAAA,QAC1E,gBAAAA;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,OAAO,kBAAkB,MAAM;AAAA,YAC/B,UAAU,CAAC,QAAgB;AACzB,oBAAM,WAAW,UAAU,KAAK,OAAK,EAAE,OAAO,GAAG;AACjD,kCAAoB,YAAY,IAAI;AAAA,YACtC;AAAA,YACA,SAAS,UAAU,IAAI,CAAC,OAAO;AAAA,cAC7B,OAAO,OAAO,EAAE,EAAE;AAAA,cAClB,OAAO,GAAG,EAAE,SAAS,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK;AAAA,YAClD,EAAE;AAAA,YACF,aAAY;AAAA,YACZ,mBAAkB;AAAA;AAAA,QACpB;AAAA,SACF;AAAA,MAEC,CAAC,oBACA,gBAAAI,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,qCAAc;AAAA,UAC9E,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,OAAO,SAAS,gBAAgB,IAAI,UAAU,CAACe,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,cAAcA,GAAE,OAAO,MAAM,EAAE,GAAG,aAAY,2BAAiB;AAAA,WAC9K;AAAA,QACA,gBAAAF,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,+CAAa;AAAA,UAC7E,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,OAAO,SAAS,iBAAiB,IAAI,UAAU,CAACe,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,eAAeA,GAAE,OAAO,MAAM,EAAE,GAAG,aAAY,qCAAgB;AAAA,WAC/K;AAAA,QACA,gBAAAF,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,mBAAK;AAAA,UACrE,gBAAAA,MAACZ,QAAA,EAAM,MAAK,SAAQ,SAAQ,UAAS,OAAO,SAAS,iBAAiB,IAAI,UAAU,CAACe,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,eAAeA,GAAE,OAAO,MAAM,EAAE,GAAG,aAAY,SAAQ;AAAA,WACpL;AAAA,SACF;AAAA,MAGD,SAAS,cAAc,UACtB,gBAAAF,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,iDAAiB;AAAA,UACjF,gBAAAA;AAAA,YAACZ;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,OAAO,SAAS,cAAc,YAAY,EAAE,MAAM,GAAG,EAAE,KAAK;AAAA,cAC5D,UAAU,CAACe,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,cAAcA,GAAE,OAAO,QAAQ,IAAI,KAAKA,GAAE,OAAO,KAAK,IAAI,OAAU,EAAE;AAAA;AAAA,UACzH;AAAA,WACF;AAAA,QACA,gBAAAF,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,gDAAgB;AAAA,UAChF,gBAAAA;AAAA,YAACZ;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,OAAO,SAAS,cAAc,YAAY,EAAE,MAAM,GAAG,EAAE,KAAK;AAAA,cAC5D,UAAU,CAACe,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,cAAcA,GAAE,OAAO,QAAQ,IAAI,KAAKA,GAAE,OAAO,KAAK,IAAI,OAAU,EAAE;AAAA;AAAA,UACzH;AAAA,WACF;AAAA,SACF;AAAA,OAEJ;AAAA,KACF;AAGF,QAAM,eACJ,gBAAAF,OAAClB,OAAA,EACC;AAAA,oBAAAiB,MAAChB,aAAA,EACC,0BAAAiB,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,MAACf,YAAA,EAAU,gCAAQ;AAAA,MACnB,gBAAAe,MAACb,SAAA,EAAO,MAAK,UAAS,SAAS,cAAc,SAAQ,WAAU,MAAK,MAAK,wCAAa;AAAA,OACxF,GACF;AAAA,IACA,gBAAAa,MAACd,cAAA,EACE,qBAAW,WAAW,IACrB,gBAAAc,MAAC,SAAI,WAAU,kCAAiC,oIAAsD,IAEtG,gBAAAA,MAAC,SAAI,WAAU,aACZ,qBAAW,IAAI,CAAC,MAAM,UACrB,gBAAAC,OAAC,SAAgB,WAAU,mCACzB;AAAA,sBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,OAAC,QAAG,WAAU,eAAc;AAAA;AAAA,UAAU,QAAQ;AAAA,WAAE;AAAA,QAChD,gBAAAD,MAACb,SAAA,EAAO,MAAK,UAAS,SAAQ,eAAc,MAAK,MAAK,SAAS,MAAM,gBAAgB,KAAK,GAAG,oBAAG;AAAA,SAClG;AAAA,MACA,gBAAAc,OAAC,SAAI,WAAU,wDACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,kCAAU;AAAA,UAC1E,gBAAAC,OAACZ,SAAA,EAAO,OAAO,KAAK,WAAW,eAAe,CAAC,UAAkB,gBAAgB,OAAO,aAAa,KAAK,GACxG;AAAA,4BAAAW,MAACR,gBAAA,EAAc,SAAQ,UACrB,0BAAAQ,MAACP,cAAA,EAAY,aAAY,gCAAgB,GAC3C;AAAA,YACA,gBAAAO,MAACV,gBAAA,EACE,mBAAS,IAAI,aACZ,gBAAAW,OAACV,aAAA,EAA4B,OAAO,QAAQ,IACzC;AAAA,sBAAQ;AAAA,cAAK;AAAA,cAAIK,gBAAe,QAAQ,SAAS;AAAA,cAAE;AAAA,iBADrC,QAAQ,EAEzB,CACD,GACH;AAAA,aACF;AAAA,WACF;AAAA,QACA,gBAAAK,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,qCAAQ;AAAA,UACxE,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,MAAK,UAAS,KAAI,KAAI,OAAO,KAAK,UAAU,UAAU,CAACe,OAAM,gBAAgB,OAAO,YAAY,SAASA,GAAE,OAAO,KAAK,KAAK,CAAC,GAAG;AAAA,WAC1J;AAAA,QACA,gBAAAF,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,kCAAO;AAAA,UACvE,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,MAAK,UAAS,KAAI,KAAI,MAAK,QAAO,OAAO,KAAK,WAAW,UAAU,CAACe,OAAM,gBAAgB,OAAO,aAAa,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC,GAAG;AAAA,WAC1K;AAAA,QACA,gBAAAF,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,gCAAQ;AAAA,UACxE,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,MAAK,UAAS,KAAI,KAAI,MAAK,QAAO,OAAO,KAAK,SAAS,UAAU,CAACe,OAAM,gBAAgB,OAAO,WAAW,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC,GAAG;AAAA,WACtK;AAAA,SACF;AAAA,MACC,SAAS,cAAc,UACtB,gBAAAF,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,oDAAiB;AAAA,UACjF,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,MAAK,QAAO,OAAO,KAAK,aAAa,IAAI,UAAU,CAACe,OAAM,gBAAgB,OAAO,aAAaA,GAAE,OAAO,KAAK,GAAG;AAAA,WACzI;AAAA,QACA,gBAAAF,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,8CAAkB;AAAA,UAClF,gBAAAA,MAACZ,QAAA,EAAM,SAAQ,UAAS,MAAK,QAAO,OAAO,KAAK,WAAW,IAAI,UAAU,CAACe,OAAM,gBAAgB,OAAO,WAAWA,GAAE,OAAO,KAAK,GAAG;AAAA,WACrI;AAAA,SACF;AAAA,MAEF,gBAAAF,OAAC,SACC;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,wBAAO;AAAA,QACvE,gBAAAA,MAACN,WAAA,EAAS,OAAO,KAAK,OAAO,UAAU,CAACS,OAAM,gBAAgB,OAAO,SAASA,GAAE,OAAO,KAAK,GAAG,aAAY,4CAA2B;AAAA,SACxI;AAAA,MACA,gBAAAH,MAAC,SAAI,WAAU,oBACb,0BAAAC,OAACN,QAAA,EAAM,SAAQ,WAAU;AAAA;AAAA,QAAOC,gBAAe,KAAK,UAAU;AAAA,SAAE,GAClE;AAAA,SApDQ,KAqDV,CACD,GACH,GAEJ;AAAA,KACF;AAGF,QAAM,gBACJ,gBAAAK,OAAClB,OAAA,EACC;AAAA,oBAAAiB,MAAChB,aAAA,EACC,0BAAAgB,MAACf,YAAA,EAAU,mDAAgB,GAC7B;AAAA,IACA,gBAAAe,MAACd,cAAA,EACC,0BAAAe,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,yCACb,0BAAAC,OAAC,SACC;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,8BAAQ;AAAA,QACxE,gBAAAA;AAAA,UAACZ;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,OAAO,SAAS,kBAAkB;AAAA,YAClC,UAAU,CAACe,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,gBAAgB,WAAWA,GAAE,OAAO,KAAK,KAAK,EAAE,EAAE;AAAA;AAAA,QACrG;AAAA,SACF,GACF;AAAA,MAEA,gBAAAF,OAAC,SAAI,WAAU,2BACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,wBAAuB;AAAA,0BAAAD,MAAC,UAAK,+BAAS;AAAA,UAAO,gBAAAA,MAAC,UAAM,UAAAJ,gBAAe,SAAS,YAAY,CAAC,GAAE;AAAA,WAAO;AAAA,QACjH,gBAAAK,OAAC,SAAI,WAAU,wBAAuB;AAAA,0BAAAD,MAAC,UAAK,8BAAW;AAAA,UAAO,gBAAAA,MAAC,UAAM,UAAAJ,gBAAe,SAAS,aAAa,CAAC,GAAE;AAAA,WAAO;AAAA,QACpH,gBAAAK,OAAC,SAAI,WAAU,wBAAuB;AAAA,0BAAAD,MAAC,UAAK,+BAAS;AAAA,UAAO,gBAAAC,OAAC,UAAK;AAAA;AAAA,YAAEL,gBAAe,SAAS,kBAAkB,CAAC;AAAA,aAAE;AAAA,WAAO;AAAA,QACxH,gBAAAK,OAAC,SAAI,WAAU,4DAA2D;AAAA,0BAAAD,MAAC,UAAK,kCAAU;AAAA,UAAO,gBAAAA,MAAC,UAAK,WAAU,kBAAkB,UAAAJ,gBAAe,SAAS,eAAe,CAAC,GAAE;AAAA,WAAO;AAAA,QACpL,gBAAAK,OAAC,SAAI,WAAU,8CAA6C;AAAA,0BAAAD,MAAC,UAAK,iCAAS;AAAA,UAAO,gBAAAA,MAAC,UAAK,WAAU,iBAAiB,UAAAJ,gBAAe,SAAS,iBAAiB,CAAC,GAAE;AAAA,WAAO;AAAA,SACxK;AAAA,OACF,GACF;AAAA,KACF;AAGF,QAAM,YACJ,gBAAAK,OAAClB,OAAA,EACC;AAAA,oBAAAiB,MAAChB,aAAA,EACC,0BAAAgB,MAACf,YAAA,EAAU,wBAAO,GACpB;AAAA,IACA,gBAAAe,MAACd,cAAA,EACC,0BAAAc,MAACN,WAAA,EAAS,OAAO,SAAS,SAAS,IAAI,UAAU,CAACS,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,OAAOA,GAAE,OAAO,MAAM,EAAE,GAAG,aAAY,wCAAuB,MAAM,GAAG,GACjK;AAAA,KACF;AAGF,SACE,gBAAAH,MAAC,UAAK,UAAU,cAAc,WAAU,aACrC,qBAAW,UACV,gBAAAC,OAAAF,WAAA,EACE;AAAA,oBAAAE,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,2BACZ;AAAA;AAAA,QACA;AAAA,SACH;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,+CACZ;AAAA;AAAA,QACA;AAAA,SACH;AAAA,OACF;AAAA,IACA,gBAAAA,OAAC,SAAI,WAAU,8BACb;AAAA,sBAAAD,MAACb,SAAA,EAAO,MAAK,UAAS,SAAQ,WAAU,SAAS,UAAU,sBAAG;AAAA,MAC9D,gBAAAa,MAACb,SAAA,EAAO,MAAK,UAAS,UAAU,SAAU,oBAAU,+BAAkB,kCAAe;AAAA,OACvF;AAAA,KACF,IAEA,gBAAAc,OAAAF,WAAA,EACG;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACD,gBAAAE,OAAC,SAAI,WAAU,8BACb;AAAA,sBAAAD,MAACb,SAAA,EAAO,MAAK,UAAS,SAAQ,WAAU,SAAS,UAAU,sBAAG;AAAA,MAC9D,gBAAAa,MAACb,SAAA,EAAO,MAAK,UAAS,UAAU,SAAU,oBAAU,+BAAkB,kCAAe;AAAA,OACvF;AAAA,KACF,GAEJ;AAEJ;;;ACvbA,SAAgB,YAAAiB,YAAU,aAAAC,aAAW,eAAAC,oBAAmB;AACxD,SAAS,YAAAC,iBAAgC;AAGzC,SAAS,gBAAAC,eAAc,eAAAC,cAA6B,kBAAAC,uBAAuD;AAC3G,SAAS,wBAAwB,wBAAAC,6BAA4B;AAC7D,SAAqB,YAAAC,iBAAgB;;;ACpCrC,SAAS,YAAAC,YAAU,aAAAC,aAAW,eAAAC,cAAa,UAAAC,eAAc;AACzD,SAAS,YAAAC,iBAAgB;AAEzB,SAAS,gBAA4B;AAQ9B,IAAM,qBAAqB,CAAC,UAAgC;AACjE,QAAM;AAAA,IACJ,UAAU,CAAC;AAAA,IACX,aAAa;AAAA,IACb;AAAA,IACA;AAAA,EACF,IAAI;AAGJ,QAAM,CAAC,UAAU,WAAW,IAAIJ,WAAwB,MAAM;AAE5D,QAAI,cAAc,cAAc;AAC9B,aAAO;AAAA,QACL,WAAW,aAAa,aAAa;AAAA,QACrC,YAAY,SAAS,aAAa,UAAU,KAAK;AAAA,QACjD,UAAU,aAAa,YAAY,QAAQ,CAAC,GAAG,MAAM;AAAA,QACrD,cAAc,aAAa,eAAe,IAAI,KAAK,aAAa,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QAC5G,cAAc,aAAa,eAAe,IAAI,KAAK,aAAa,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QAC5G,UAAU,aAAa,YAAY;AAAA,QACnC,WAAW,aAAa,aAAa;AAAA,QACrC,cAAc,aAAa,gBAAgB;AAAA,QAC3C,eAAe,aAAa,iBAAiB,SAAS;AAAA,QACtD,gBAAgB,aAAa,kBAAkB,SAAS;AAAA,QACxD,eAAe,aAAa,iBAAiB,SAAS;AAAA,QACtD,iBAAiB,aAAa,mBAAmB;AAAA,QACjD,SAAS,aAAa,WAAW;AAAA,QACjC,WAAW,aAAa,aAAa;AAAA,QACrC,aAAa,aAAa,eAAe;AAAA,QACzC,OAAO,aAAa,SAAS;AAAA,QAC7B,YAAY,CAAC;AAAA,MACf;AAAA,IACF;AAGA,WAAO;AAAA,MACL,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU,QAAQ,CAAC,GAAG,MAAM;AAAA,MAC5B,cAAc;AAAA,MACd,cAAc;AAAA,MACd,UAAU;AAAA,MACV,WAAW;AAAA,MACX,cAAc;AAAA,MACd,eAAe,SAAS;AAAA,MACxB,gBAAgB,SAAS;AAAA,MACzB,eAAe,SAAS;AAAA,MACxB,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,aAAa;AAAA,MACb,OAAO;AAAA,MACP,YAAY,CAAC;AAAA,IACf;AAAA,EACF,CAAC;AAED,QAAM,CAAC,YAAY,aAAa,IAAIA,WAA8B,MAAM;AAEtE,QAAI,cAAc,cAAc,YAAY;AAC1C,aAAO,aAAa,WAAW,IAAI,CAAC,UAAe;AAAA,QACjD,IAAI,KAAK;AAAA;AAAA,QACT,WAAW,KAAK,SAAS,MAAM,KAAK,aAAa;AAAA;AAAA,QACjD,SAAS;AAAA,UACP,IAAI,KAAK,SAAS,MAAM,KAAK,aAAa;AAAA;AAAA,UAC1C,MAAM,KAAK,SAAS,QAAQ;AAAA,UAC5B,aAAa,KAAK,SAAS,eAAe;AAAA,UAC1C,QAAQ,KAAK,SAAS,UAAU;AAAA,UAChC,SAAS,KAAK,SAAS,WAAW;AAAA,UAClC,WAAW,KAAK,aAAa;AAAA;AAAA,UAC7B,SAAS,KAAK,WAAW;AAAA,QAC3B;AAAA,QACA,UAAU,KAAK,YAAY;AAAA,QAC3B,WAAW,KAAK,aAAa;AAAA,QAC7B,YAAY,KAAK,cAAc;AAAA,QAC/B,YAAY,KAAK,cAAc;AAAA,QAC/B,SAAS,KAAK,WAAW;AAAA,QACzB,OAAO,KAAK,SAAS;AAAA,MACvB,EAAE;AAAA,IACJ;AACA,WAAO,CAAC;AAAA,EACV,CAAC;AAGD,QAAM,gBAAgBG,QAA4B,UAAU;AAG5D,EAAAF,YAAU,MAAM;AACd,kBAAc,UAAU;AAAA,EAC1B,GAAG,CAAC,UAAU,CAAC;AAEf,QAAM,CAAC,cAAc,eAAe,IAAID,WAAS,KAAK;AACtD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAG9D,QAAM,EAAE,cAAc,WAAW,IAAII,UAAS;AAG9C,EAAAH,YAAU,MAAM;AACd,UAAM,WAAW,WAAW,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,WAAW,KAAK,WAAW,CAAC;AACzF,UAAM,iBAAiB,SAAS,iBAAiB,eAC5C,WAAW,SAAS,gBAAgB,MACrC,SAAS;AACb,UAAM,cAAc,WAAW;AAE/B,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,IACF,EAAE;AAAA,EACJ,GAAG,CAAC,YAAY,SAAS,cAAc,SAAS,aAAa,CAAC;AAG9D,EAAAA,YAAU,MAAM;AACd,QAAI,SAAS,cAAc,QAAQ;AACjC,YAAM,eAAe,WAAW,OAAO,CAAC,KAAK,SAAS,OAAO,KAAK,WAAW,IAAI,CAAC;AAClF,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,eAAe;AAAA,MACjB,EAAE;AAAA,IACJ,OAAO;AACL,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,eAAe;AAAA,MACjB,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,YAAY,SAAS,SAAS,CAAC;AAGnC,EAAAA,YAAU,MAAM;AACd,QAAI,cAAc,cAAc;AAE9B,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,WAAW,aAAa,aAAa;AAAA,QACrC,YAAY,aAAa,cAAc;AAAA,QACvC,UAAU,aAAa,YAAY,QAAQ,CAAC,GAAG,MAAM;AAAA,QACrD,cAAc,aAAa,eAAe,IAAI,KAAK,aAAa,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QAC5G,cAAc,aAAa,eAAe,IAAI,KAAK,aAAa,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QAC5G,UAAU,aAAa,YAAY;AAAA,QACnC,WAAW,aAAa,aAAa;AAAA,QACrC,cAAc,aAAa,gBAAgB;AAAA,QAC3C,eAAe,aAAa,iBAAiB,SAAS;AAAA,QACtD,gBAAgB,aAAa,kBAAkB,SAAS;AAAA,QACxD,eAAe,aAAa,iBAAiB,SAAS;AAAA,QACtD,iBAAiB,aAAa,mBAAmB;AAAA,QACjD,SAAS,aAAa,WAAW;AAAA,QACjC,WAAW,aAAa,aAAa;AAAA,QACrC,aAAa,aAAa,eAAe;AAAA,QACzC,OAAO,aAAa,SAAS;AAAA,MAC/B,EAAE;AAGF,UAAI,aAAa,YAAY;AAC3B,cAAM,oBAAyC,aAAa,WAAW,IAAI,CAAC,UAAe;AAAA,UACzF,IAAI,KAAK;AAAA;AAAA,UACT,WAAW,KAAK,SAAS,MAAM,KAAK,aAAa;AAAA;AAAA,UACjD,SAAS;AAAA,YACP,IAAI,KAAK,SAAS,MAAM,KAAK,aAAa;AAAA;AAAA,YAC1C,MAAM,KAAK,SAAS,QAAQ;AAAA,YAC5B,aAAa,KAAK,SAAS,eAAe;AAAA,YAC1C,QAAQ,KAAK,SAAS,UAAU;AAAA,YAChC,SAAS,KAAK,SAAS,WAAW;AAAA,YAClC,WAAW,KAAK,aAAa;AAAA;AAAA,YAC7B,SAAS,KAAK,WAAW;AAAA,UAC3B;AAAA,UACA,UAAU,KAAK,YAAY;AAAA,UAC3B,WAAW,KAAK,aAAa;AAAA,UAC7B,YAAY,KAAK,cAAc;AAAA,UAC/B,YAAY,KAAK,cAAc;AAAA,UAC/B,SAAS,KAAK,WAAW;AAAA,UACzB,OAAO,KAAK,SAAS;AAAA,QACvB,EAAE;AAEF,sBAAc,iBAAiB;AAG/B,YAAI,aAAa,cAAc,QAAQ;AACrC,gBAAM,eAAe,kBAAkB,OAAO,CAAC,KAAK,SAAS,OAAO,KAAK,WAAW,IAAI,CAAC;AACzF,sBAAY,WAAS;AAAA,YACnB,GAAG;AAAA,YACH,eAAe;AAAA,UACjB,EAAE;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG,CAAC,YAAY,cAAc,OAAO,CAAC;AAGtC,QAAM,oBAAoBC,aAAY,CAAC,YAAiB;AACtD,UAAM,kBAAkB,QAAQ;AAChC,UAAM,eAAe,WAAW,KAAK,UAAQ,KAAK,cAAc,eAAe;AAE/E,QAAI,cAAc;AAEhB,YAAM,eAAe,WAAW;AAAA,QAAI,UAClC,KAAK,cAAc,kBACf,EAAE,GAAG,MAAM,UAAU,KAAK,WAAW,EAAE,IACvC;AAAA,MACN;AACA,oBAAc,YAAY;AAAA,IAC5B,OAAO;AAEL,YAAM,YAAY,QAAQ,aAAa;AACvC,YAAM,UAAU,QAAQ,WAAW;AAEnC,YAAM,UAA6B;AAAA,QACjC,WAAW;AAAA,QACX,SAAS;AAAA,UACP,IAAI;AAAA,UACJ,MAAM,QAAQ,QAAQ;AAAA,UACtB,aAAa,QAAQ,eAAe;AAAA,UACpC,QAAQ,QAAQ,UAAU;AAAA,UAC1B,SAAS,QAAQ,WAAW;AAAA,UAC5B;AAAA,UACA;AAAA,QACF;AAAA,QACA,UAAU,SAAS;AAAA,QACnB,WAAW,SAAS,cAAc,SAAS,YAAY;AAAA,QACvD,aAAa,SAAS,cAAc,SAAS,YAAY,aAAa,SAAS;AAAA,QAC/E;AAAA,QACA,OAAO;AAAA,MACT;AACA,YAAM,gBAAgB,CAAC,GAAG,YAAY,OAAO;AAC7C,oBAAc,aAAa;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,YAAY,SAAS,SAAS,CAAC;AAGnC,QAAM,yBAAyBA,aAAY,CAAC,cAAsB;AAChE,kBAAc,WAAW,OAAO,UAAQ,KAAK,cAAc,SAAS,CAAC;AAAA,EACvE,GAAG,CAAC,UAAU,CAAC;AAGf,QAAM,kBAAkBA,aAAY,CAAC,WAAmB,OAAgC,UAA2B;AACjH,UAAM,eAAe,WAAW,IAAI,UAAQ;AAC1C,UAAI,KAAK,cAAc,WAAW;AAChC,eAAO,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM;AAAA,MACnC;AACA,aAAO;AAAA,IACT,CAAC;AACD,kBAAc,YAAY;AAAA,EAC5B,GAAG,CAAC,UAAU,CAAC;AAGf,QAAM,sBAAsBA,aAAY,CAAC,WAAmB,YAA4B;AACtF,QAAI,CAAC,aAAa,CAAC;AAAS,aAAO;AACnC,UAAM,QAAQ,IAAI,KAAK,SAAS;AAChC,UAAM,MAAM,IAAI,KAAK,OAAO;AAC5B,UAAM,WAAW,KAAK,IAAI,IAAI,QAAQ,IAAI,MAAM,QAAQ,CAAC;AACzD,WAAO,KAAK,KAAK,YAAY,MAAO,KAAK,KAAK,GAAG;AAAA,EACnD,GAAG,CAAC,CAAC;AAGL,QAAM,oBAAoBA,aAAY,CAAC,WAAmB,YAAoB;AAC5E,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,cAAc;AAAA,MACd,cAAc;AAAA,IAChB,EAAE;AAGF,UAAM,OAAO,oBAAoB,WAAW,OAAO;AACnD,UAAM,eAAe,WAAW,IAAI,WAAS;AAAA,MAC3C,GAAG;AAAA,MACH;AAAA,MACA;AAAA,MACA,YAAY;AAAA,MACZ,YAAY,KAAK,YAAY,OAAO,KAAK;AAAA,IAC3C,EAAE;AACF,kBAAc,YAAY;AAAA,EAC5B,GAAG,CAAC,YAAY,mBAAmB,CAAC;AAGpC,QAAM,qBAAqBA,aAAY,CAACG,OAAuB;AAC7D,IAAAA,GAAE,eAAe;AACjB,YAAQ,IAAI,mDAA4C,UAAU;AAClE,YAAQ,IAAI,kDAA2C,WAAW,MAAM;AACxE,YAAQ,IAAI,mDAA4C,WAAW,IAAI,WAAS;AAAA,MAC9E,WAAW,KAAK;AAAA,MAChB,aAAa,KAAK,SAAS;AAAA,MAC3B,UAAU,KAAK;AAAA,IACjB,EAAE,CAAC;AACH,wBAAoB,IAAI;AAAA,EAC1B,GAAG,CAAC,UAAU,CAAC;AAGf,QAAM,eAAeH,aAAY,OAAOG,OAAuB;AAC7D,IAAAA,GAAE,eAAe;AAGjB,UAAM,oBAAoB,cAAc;AAExC,QAAI;AAAc;AAGlB,QAAI,CAAC,qBAAqB,kBAAkB,WAAW,GAAG;AAExD,YAAM,IAAI,MAAM,iEAAiE;AAAA,IACnF;AAEA,oBAAgB,IAAI;AAEpB,QAAI;AAEF,YAAM,aAAa;AAAA,QACjB,WAAW,SAAS;AAAA,QACpB,YAAY,SAAS;AAAA;AAAA,QACrB,UAAU,SAAS;AAAA;AAAA,QACnB,cAAc,SAAS,eAAe,IAAI,KAAK,SAAS,YAAY,EAAE,YAAY,IAAI;AAAA,QACtF,cAAc,SAAS,eAAe,IAAI,KAAK,SAAS,YAAY,EAAE,YAAY,IAAI;AAAA,QACtF,UAAU,SAAS;AAAA,QACnB,WAAW,SAAS;AAAA,QACpB,cAAc,SAAS;AAAA,QACvB,eAAe,SAAS;AAAA,QACxB,gBAAgB,SAAS;AAAA,QACzB,eAAe,SAAS;AAAA,QACxB,iBAAiB,SAAS;AAAA,QAC1B,SAAS,SAAS;AAAA,QAClB,WAAW,SAAS;AAAA,QACpB,aAAa,SAAS;AAAA,QACtB,OAAO,SAAS;AAAA,QAChB,YAAY,kBAAkB,IAAI,WAAS;AAAA,UACzC,WAAW,KAAK;AAAA;AAAA,UAChB,UAAU,KAAK;AAAA,UACf,WAAW,KAAK;AAAA,UAChB,SAAS,KAAK,WAAW;AAAA,UACzB,OAAO,KAAK,SAAS;AAAA,QACvB,EAAE;AAAA,MACJ;AAGA,UAAI,cAAc,cAAc,IAAI;AAClC,QAAC,WAAmB,KAAK,aAAa;AAAA,MACxC;AAEA,YAAM,WAAW,UAAiB;AAAA,IACpC,SAAS,OAAO;AAEd,YAAM;AAAA,IACR,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF,GAAG,CAAC,UAAU,YAAY,cAAc,OAAO,YAAY,CAAC;AAG5D,QAAM,qBAAqBH,aAAY,YAAY;AACjD,wBAAoB,KAAK;AAEzB,UAAM,YAAY,EAAE,gBAAgB,MAAM;AAAA,IAAC,EAAE;AAC7C,UAAM,aAAa,SAAS;AAAA,EAC9B,GAAG,CAAC,YAAY,YAAY,CAAC;AAG7B,QAAM,YAAYA,aAAY,MAAM;AAClC,QAAI,cAAc,cAAc;AAE9B,kBAAY;AAAA,QACV,WAAW,aAAa,aAAa;AAAA,QACrC,YAAY,SAAS,aAAa,UAAU,KAAK;AAAA,QACjD,UAAU,aAAa,YAAY,QAAQ,CAAC,GAAG,MAAM;AAAA,QACrD,cAAc,aAAa,eAAe,IAAI,KAAK,aAAa,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QAC5G,cAAc,aAAa,eAAe,IAAI,KAAK,aAAa,YAAY,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QAC5G,UAAU,aAAa,YAAY;AAAA,QACnC,WAAW,aAAa,aAAa;AAAA,QACrC,cAAc;AAAA,QACd,eAAe,SAAS;AAAA,QACxB,gBAAgB,aAAa,kBAAkB,SAAS;AAAA,QACxD,eAAe,aAAa,iBAAiB,SAAS;AAAA,QACtD,iBAAiB,aAAa,mBAAmB;AAAA,QACjD,SAAS,aAAa,WAAW;AAAA,QACjC,WAAW,aAAa,aAAa;AAAA,QACrC,aAAa,aAAa,eAAe;AAAA,QACzC,OAAO,aAAa,SAAS;AAAA,QAC7B,YAAY,CAAC;AAAA,MACf,CAAC;AAED,oBAAc,aAAa,WAAW,IAAI,CAAC,UAAe;AAAA,QACxD,IAAI,KAAK;AAAA,QACT,WAAW,KAAK,aAAa;AAAA,QAC7B,SAAS;AAAA,UACP,IAAI,KAAK,SAAS,MAAM,KAAK,aAAa;AAAA,UAC1C,MAAM,KAAK,SAAS,QAAQ;AAAA,UAC5B,aAAa,KAAK,SAAS,eAAe;AAAA,UAC1C,QAAQ,KAAK,SAAS,UAAU;AAAA,UAChC,SAAS,KAAK,SAAS,WAAW;AAAA,UAClC,WAAW,KAAK,aAAa;AAAA,UAC7B,SAAS,KAAK,WAAW;AAAA,QAC3B;AAAA,QACA,UAAU,KAAK,YAAY;AAAA,QAC3B,WAAW,KAAK,aAAa;AAAA,QAC7B,YAAY,KAAK,cAAc;AAAA,QAC/B,YAAY,KAAK,cAAc;AAAA,QAC/B,SAAS,KAAK,WAAW;AAAA,QACzB,OAAO,KAAK,SAAS;AAAA,MACvB,EAAE,CAAC;AAAA,IACL,OAAO;AAEL,kBAAY;AAAA,QACV,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,UAAU,QAAQ,CAAC,GAAG,MAAM;AAAA,QAC5B,cAAc;AAAA,QACd,cAAc;AAAA,QACd,UAAU;AAAA,QACV,WAAW;AAAA,QACX,cAAc;AAAA,QACd,eAAe,SAAS;AAAA,QACxB,gBAAgB,SAAS;AAAA,QACzB,eAAe,SAAS;AAAA,QACxB,iBAAiB;AAAA,QACjB,SAAS;AAAA,QACT,WAAW;AAAA,QACX,aAAa;AAAA,QACb,OAAO;AAAA,QACP,YAAY,CAAC;AAAA,MACf,CAAC;AAED,oBAAc,CAAC,CAAC;AAAA,IAClB;AAAA,EACF,GAAG,CAAC,YAAY,cAAc,OAAO,CAAC;AAEtC,SAAO;AAAA;AAAA,IAEL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,EACF;AACF;;;ACvcA,SAAS,YAAAI,YAAU,eAAAC,oBAAmB;AACtC,SAAS,YAAAC,WAAU,cAAAC,mBAAkB;AAO9B,IAAM,qBAAqB,MAAM;AACtC,QAAM,CAAC,kBAAkB,mBAAmB,IAAIH,WAA2B,CAAC,CAAC;AAG7E,QAAM,sBAAsBC,aAAY,CAAC,WAAmB,YAA4B;AACtF,QAAI,CAAC,aAAa,CAAC;AAAS,aAAO;AACnC,UAAM,QAAQ,IAAI,KAAK,SAAS;AAChC,UAAM,MAAM,IAAI,KAAK,OAAO;AAC5B,UAAM,WAAW,KAAK,IAAI,IAAI,QAAQ,IAAI,MAAM,QAAQ,CAAC;AACzD,WAAO,KAAK,KAAK,YAAY,MAAO,KAAK,KAAK,GAAG;AAAA,EACnD,GAAG,CAAC,CAAC;AAGL,QAAM,eAAeA,aAAY,CAC/B,UACA,eACY;AACZ,UAAM,SAA2B,CAAC;AAElC,QAAI,CAAC,SAAS,cAAc,SAAS,cAAc,GAAG;AACpD,aAAO,aAAa;AAAA,IACtB;AAEA,QAAI,CAAC,SAAS,YAAY,SAAS,YAAY,GAAG;AAChD,aAAO,WAAW;AAAA,IACpB;AAEA,QAAI,WAAW,WAAW,GAAG;AAC3B,aAAO,aAAa;AAAA,IACtB;AAEA,QAAI,SAAS,cAAc,QAAQ;AACjC,UAAI,CAAC,SAAS,cAAc;AAC1B,eAAO,eAAe;AAAA,MACxB;AACA,UAAI,CAAC,SAAS,cAAc;AAC1B,eAAO,eAAe;AAAA,MACxB;AACA,UAAI,SAAS,gBAAgB,SAAS,cAAc;AAClD,cAAM,OAAO,oBAAoB,SAAS,cAAc,SAAS,YAAY;AAC7E,YAAI,OAAOC,UAAS,iBAAiB;AACnC,iBAAO,eAAe,2BAA2BA,UAAS,eAAe;AAAA,QAC3E,WAAW,OAAOA,UAAS,iBAAiB;AAC1C,iBAAO,eAAe,wBAAwBA,UAAS,eAAe;AAAA,QACxE;AAAA,MACF;AAAA,IACF;AAEA,QAAI,SAAS,cAAc,UAAU,SAAS,gBAAgBC,YAAW,oBAAoB;AAC3F,aAAO,gBAAgB,sCAAsCA,YAAW,kBAAkB;AAAA,IAC5F;AAEA,wBAAoB,MAAM;AAC1B,WAAO,OAAO,KAAK,MAAM,EAAE,WAAW;AAAA,EACxC,GAAG,CAAC,mBAAmB,CAAC;AAGxB,QAAM,cAAcF,aAAY,CAC9B,UACA,eACY;AACZ,UAAM,cAAc,WAAW,SAAS;AACxC,UAAM,cAAc,QAAQ,SAAS,cAAc,SAAS,aAAa,CAAC;AAC1E,UAAM,YAAY,QAAQ,SAAS,YAAY,SAAS,WAAW,CAAC;AAEpE,QAAI,SAAS,cAAc,QAAQ;AACjC,aAAO,eAAe,eAAe,aAAa,QAAQ,SAAS,YAAY,KAAK,QAAQ,SAAS,YAAY;AAAA,IACnH,OAAO;AACL,aAAO,eAAe,eAAe;AAAA,IACvC;AAAA,EACF,GAAG,CAAC,CAAC;AAGL,QAAM,wBAAwBA,aAAY,MAAM;AAC9C,wBAAoB,CAAC,CAAC;AAAA,EACxB,GAAG,CAAC,CAAC;AAGL,QAAM,qBAAqBA,aAAY,CAAC,OAA+B,YAAoB;AACzF,wBAAoB,WAAS;AAAA,MAC3B,GAAG;AAAA,MACH,CAAC,KAAK,GAAG;AAAA,IACX,EAAE;AAAA,EACJ,GAAG,CAAC,CAAC;AAGL,QAAM,uBAAuBA,aAAY,CAAC,UAAkC;AAC1E,wBAAoB,UAAQ;AAC1B,YAAM,YAAY,EAAE,GAAG,KAAK;AAC5B,aAAO,UAAU,KAAK;AACtB,aAAO;AAAA,IACT,CAAC;AAAA,EACH,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;AC/GA,SAAS,YAAAG,YAAU,eAAAC,oBAAmB;AACtC,SAAS,aAAa,kBAAAC,uBAAsB;AAC5C,SAAS,kBAAkB;AAIpB,IAAM,mBAAmB,CAAC,WAAyB,UAAU;AAClE,QAAM,CAAC,mBAAmB,oBAAoB,IAAIF,WAAS,KAAK;AAGhE,QAAM,0BAA0BC,aAAY,OAAO,UAAkD;AACnG,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,aAAO,CAAC;AAAA,IACV;AAEA,QAAI;AACF,2BAAqB,IAAI;AAEzB,YAAM,SAAS,MAAM,YAAY,YAAY;AAAA,QAC3C,QAAQ;AAAA,QACR,OAAO,WAAW;AAAA,MACpB,CAAC;AAED,UAAI,OAAO,WAAW,OAAO,MAAM,UAAU;AAE3C,eAAO,OAAO,KAAK,SAAS,IAAI,CAAC,YAAiB;AAEhD,gBAAM,cAAc,QAAQ,cAAc,CAAC;AAC3C,gBAAM,YAAY,aAAa,aAAa;AAC5C,gBAAM,QAAQ,aAAa,SAAS;AACpC,gBAAM,aAAa;AAEnB,iBAAO;AAAA,YACL,OAAO,OAAO,QAAQ,EAAE;AAAA;AAAA,YACxB,OAAO,QAAQ;AAAA,YACf,OAAO,QAAQ,SAAS,QAAQ;AAAA;AAAA,YAChC,UAAU,QAAQ,UAAU,YAAY,QAAQ,OAAO,KAAK;AAAA,YAC5D,SAAS;AAAA,cACPC,gBAAe,QAAQ,aAAa,GAAG,QAAQ;AAAA,cAC/C,YAAYA,gBAAe,QAAQ,WAAW,GAAG,QAAQ,CAAC;AAAA,cAC1D,cAAc,SAAS;AAAA,cACvB,gBAAgB,UAAU;AAAA,cAC1B,QAAQ,UAAU,QAAQ;AAAA,YAC5B,EAAE,OAAO,OAAO;AAAA;AAAA,YAChB,MAAM;AAAA,UACR;AAAA,QACF,CAAC;AAAA,MACH;AACA,aAAO,CAAC;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO,CAAC;AAAA,IACV,UAAE;AACA,2BAAqB,KAAK;AAAA,IAC5B;AAAA,EACF,GAAG,CAAC,QAAQ,CAAC;AAGb,QAAM,iBAAiBD,aAAY,OAAO,UAA+C;AACvF,QAAI,CAAC,MAAM,KAAK;AAAG,aAAO,CAAC;AAE3B,QAAI;AACF,2BAAqB,IAAI;AAEzB,YAAM,SAAS,MAAM,YAAY,YAAY;AAAA,QAC3C,QAAQ;AAAA,QACR,OAAO,WAAW;AAAA,MACpB,CAAC;AAED,UAAI,OAAO,WAAW,OAAO,MAAM,UAAU;AAE3C,eAAO,OAAO,KAAK;AAAA,MACrB;AACA,aAAO,CAAC;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO,CAAC;AAAA,IACV,UAAE;AACA,2BAAqB,KAAK;AAAA,IAC5B;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;ACvFA,SAAS,YAAAE,YAAU,eAAAC,oBAAmB;AACtC,SAAS,oBAAoB;AAC7B,SAAS,cAAAC,mBAAkB;AAGpB,IAAM,oBAAoB,MAAM;AACrC,QAAM,CAAC,oBAAoB,qBAAqB,IAAIF,WAAS,KAAK;AAClE,QAAM,CAAC,uBAAuB,wBAAwB,IAAIA,WAAiC,CAAC,CAAC;AAG7F,QAAM,kBAAkBC,aAAY,OAAO,UAAmD;AAC5F,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,+BAAyB,CAAC,CAAC;AAC3B,aAAO,CAAC;AAAA,IACV;AAEA,QAAI;AACF,4BAAsB,IAAI;AAE1B,YAAM,SAAS,MAAM,aAAa,aAAa;AAAA,QAC7C,QAAQ;AAAA,QACR,OAAOC,YAAW;AAAA,QAClB,UAAU;AAAA,MACZ,CAAC;AAED,UAAI,OAAO,WAAW,OAAO,MAAM,aAAa,OAAO,KAAK,UAAU,SAAS,GAAG;AAEhF,iCAAyB,OAAO,KAAK,SAAS;AAG9C,cAAM,gBAAgB,OAAO,KAAK,UAAU,IAAI,CAAC,cAAoC;AAAA,UACnF,OAAO,SAAS;AAAA,UAChB,OAAO,GAAG,SAAS,SAAS,IAAI,SAAS,QAAQ,MAAM,SAAS,KAAK;AAAA,UACrE,MAAM;AAAA,QACR,EAAE;AAEF,eAAO;AAAA,MACT,OAAO;AACL,iCAAyB,CAAC,CAAC;AAC3B,eAAO,CAAC;AAAA,MACV;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,8BAA8B,KAAK;AACjD,+BAAyB,CAAC,CAAC;AAC3B,aAAO,CAAC;AAAA,IACV,UAAE;AACA,4BAAsB,KAAK;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,CAAC;AAGL,QAAM,6BAA6BD,aAAY,MAAM;AACnD,6BAAyB,CAAC,CAAC;AAAA,EAC7B,GAAG,CAAC,CAAC;AAGL,QAAM,qBAAqBA,aAAY,CAAC,cAAsC;AAC5E,6BAAyB,SAAS;AAAA,EACpC,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;AJxBA,SAAS,eAAe;;;AK3CxB,OAAOE,aAAW;AAClB;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,YAAAC;AAAA,EACA,UAAAC;AAAA,EACA,qBAAAC;AAAA,OACK;AACP,SAAS,sBAAsB,0BAAAC,+BAA8B;AAC7D;AAAA,EAEE,WAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP,SAAS,mCAAAC,wCAAuC;AA2E5C,gBAAAC,OAoDM,QAAAC,cApDN;AArDJ,IAAM,cAA0C,CAAC;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,WAAW;AACb,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIf,QAAM,SAAS,EAAE;AACzD,QAAM,CAAC,WAAW,YAAY,IAAIA,QAAM,SAAS,KAAK;AAGtD,EAAAA,QAAM,UAAU,MAAM;AACpB,QAAI,CAAC,WAAW;AACd,UAAI,UAAU,KAAK,UAAU,QAAQ,UAAU,QAAW;AACxD,wBAAgB,EAAE;AAAA,MACpB,OAAO;AAEL,cAAM,YAAY,IAAI,KAAK,aAAa,SAAS;AAAA,UAC/C,uBAAuB;AAAA,UACvB,uBAAuB;AAAA,QACzB,CAAC,EAAE,OAAO,KAAK;AACf,wBAAgB,SAAS;AAAA,MAC3B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,WAAW,QAAQ,CAAC;AAE/B,QAAM,cAAc,MAAM;AACxB,iBAAa,IAAI;AAEjB,oBAAgB,QAAQ,MAAM,SAAS,IAAI,EAAE;AAAA,EAC/C;AAEA,QAAM,aAAa,MAAM;AACvB,iBAAa,KAAK;AAElB,UAAM,WAAW,WAAW,aAAa,QAAQ,MAAM,EAAE,CAAC,KAAK;AAC/D,UAAM,UAAU,QAAQ,SAAY,KAAK,IAAI,KAAK,QAAQ,IAAI;AAC9D,UAAM,QAAQ,KAAK,IAAI,KAAK,OAAO;AACnC,aAAS,KAAK;AAAA,EAChB;AAEA,QAAM,eAAe,CAACgB,OAA2C;AAC/D,UAAM,QAAQA,GAAE,OAAO;AAEvB,QAAI,UAAU,MAAM,YAAY,KAAK,KAAK,GAAG;AAC3C,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,SACE,gBAAAF;AAAA,IAACT;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,OAAO;AAAA,MACP,UAAU;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,MACR;AAAA,MACA;AAAA;AAAA,EACF;AAEJ;AAqBO,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AACb,MAAM;AACJ,QAAMY,KAAI,qBAAqB;AAC/B,QAAM,KAAKP,wBAAuB;AAClC,SACE,gBAAAI,MAACb,OAAA,EACC,0BAAAc,OAACX,cAAA,EAAY,WAAU,kBAErB;AAAA,oBAAAU,MAAC,SAAI,WAAU,aACb,0BAAAC,OAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACR;AAAA,QAAA;AAAA,UACC,aAAaW,GAAE,yBAAyB;AAAA,UACxC,OAAO;AAAA,UACP,UAAU,CAAC,cAAsB;AAC/B,oBAAQ,IAAI,8DAAuD,SAAS;AAC5E,oBAAQ,IAAI,iCAA0B,QAAQ;AAE9C,kBAAM,UAAU,SAAS,KAAK,CAAAC,OAAKA,GAAE,OAAO,SAAS;AACrD,oBAAQ,IAAI,4BAAqB,OAAO;AACxC,gBAAI,SAAS;AACX,sBAAQ,IAAI,gDAAyC,OAAO;AAC5D,2BAAa,OAAO;AAAA,YACtB,OAAO;AACL,sBAAQ,MAAM,oCAA+B,SAAS;AAAA,YACxD;AAAA,UACF;AAAA,UACA,UAAU;AAAA,UACV,mBAAkB;AAAA,UAClB,WAAU;AAAA,UACV,YAAY;AAAA;AAAA,MACd;AAAA,MACC,qBACC,gBAAAJ,MAAC,SAAI,WAAU,uDACb,0BAAAA,MAACP,WAAA,EAAS,WAAU,wBAAuB,GAC7C;AAAA,OAEJ,GACF;AAAA,IAGA,gBAAAO,MAAC,SAAI,WAAU,aACb,0BAAAC,OAACd,OAAA,EAAK,WAAU,0BACd;AAAA,sBAAAa,MAACZ,aAAA,EAAW,WAAU,QACpB,0BAAAa,OAACZ,YAAA,EAAU,WAAU,qCACnB;AAAA,wBAAAW,MAACH,UAAA,EAAQ,WAAU,WAAU;AAAA,QAC5B,GAAG,kBAAkB;AAAA,QAAE;AAAA,QAAC,gBAAAG,MAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,QACzD,gBAAAC,OAAC,UAAK,WAAU,qCAAoC;AAAA;AAAA,UAAE,WAAW;AAAA,UAAO;AAAA,WAAC;AAAA,SAC3E,GACF;AAAA,MACA,gBAAAD,MAACV,cAAA,EACE,qBAAW,WAAW;AAAA;AAAA,QAErB,gBAAAW,OAAC,SAAI,WAAU,mBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,wCACb,0BAAAA,MAACH,UAAA,EAAQ,WAAU,aAAY,GACjC;AAAA,UACA,gBAAAG,MAAC,QAAG,WAAU,0CACX,aAAG,oBAAoB,GAC1B;AAAA,UACA,gBAAAA,MAAC,OAAE,WAAU,+CACV,UAAAG,GAAE,8BAA8B,GACnC;AAAA,WACF;AAAA;AAAA;AAAA,QAGA,gBAAAH,MAAC,SAAI,WAAU,aACZ,qBAAW,IAAI,CAAC,MAAM,UACrB,gBAAAA;AAAA,UAAC;AAAA;AAAA,YAEC;AAAA,YACA,SAAS,SAAS,KAAK,CAAAI,OAAKA,GAAE,OAAO,KAAK,SAAS;AAAA,YACnD,UAAU;AAAA,YACV,UAAU;AAAA,YACV;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,UARK;AAAA,QASP,CACD,GACH;AAAA,SAEJ;AAAA,OACF,GACF;AAAA,KACF,GACF;AAEJ;AAcA,IAAM,gBAA8C,CAAC;AAAA,EACnD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AAEJ,QAAM,cAAcT,mBAAkB;AACtC,QAAMQ,KAAI,qBAAqB;AAC/B,QAAM,KAAKP,wBAAuB;AAIlC,QAAM,iBAAiB,KAAK,WAAW;AAEvC,MAAI,CAAC,gBAAgB;AAEnB,WACE,gBAAAK,OAAC,SAAI,WAAU,oDACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,iBACb,0BAAAA,MAAC,SAAI,WAAU,4GACb,0BAAAA,MAACH,UAAA,EAAQ,WAAU,yBAAwB,GAC7C,GACF;AAAA,QACA,gBAAAG,MAAC,SAAI,WAAU,kBACb,0BAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,0BAAAA,OAAC,SACC;AAAA,4BAAAA,OAAC,QAAG,WAAU,qCACX;AAAA,iBAAG,WAAW;AAAA,cAAE;AAAA,cAAG,KAAK;AAAA,eAC3B;AAAA,YACA,gBAAAD,MAAC,OAAE,WAAU,8BACV,aAAG,gCAAgC,GACtC;AAAA,aACF;AAAA,UACA,gBAAAA;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,KAAK,SAAS;AAAA,cACtC,WAAU;AAAA,cACV,OAAOS,GAAE,wBAAwB;AAAA,cAEjC,0BAAAH,MAACF,SAAA,EAAO,WAAU,WAAU;AAAA;AAAA,UAC9B;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAG,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,sBAEhE;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,KAAK;AAAA,cACZ,UAAU,CAACE,OAAM,SAAS,KAAK,WAAW,YAAY,SAASA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,cACnF,WAAU;AAAA,cACV,KAAI;AAAA;AAAA,UACN;AAAA,WACF;AAAA,QACA,gBAAAD,OAAC,SACC;AAAA,0BAAAD,MAAC,WAAM,WAAU,gDAA+C,wBAEhE;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,KAAK;AAAA,cACZ,UAAU,CAACE,OAAM,SAAS,KAAK,WAAW,aAAa,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,cACtF,WAAU;AAAA,cACV,MAAK;AAAA,cACL,KAAI;AAAA;AAAA,UACN;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,mBAEhE;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,KAAK,SAAS;AAAA,YACrB,UAAU,CAACE,OAAM,SAAS,KAAK,WAAW,SAASA,GAAE,OAAO,KAAK;AAAA,YACjE,WAAU;AAAA,YACV,MAAM;AAAA,YACN,aAAY;AAAA;AAAA,QACd;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,6CACb;AAAA,wBAAAA,OAAC,UAAK,WAAU,iBAAgB;AAAA;AAAA,UACtB,KAAK;AAAA,UAAS;AAAA,UAAI,KAAK;AAAA,UAAU;AAAA,UAAM,KAAK,WAAW,KAAK;AAAA,UAAU;AAAA,WAChF;AAAA,QACC,cAAc,UACb,gBAAAA,OAAC,UAAK,WAAU,iBACb;AAAA,UAAAE,GAAE,kBAAkB;AAAA,UAAE;AAAA,UAAG,KAAK,WAAW;AAAA,UAAE;AAAA,WAC9C;AAAA,SAEJ;AAAA,OACF;AAAA,EAEJ;AAEA,QAAM,WAAW,eAAe,SAAS,CAAC;AAE1C,SACE,gBAAAF,OAAC,SAAI,WAAU,oDAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,+BAEb;AAAA,sBAAAD,MAAC,SAAI,WAAU,iBACZ,qBACC,gBAAAC,OAAC,SAAI,WAAU,+DACb;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,KAAK,eAAe,QAAQG,GAAE,kBAAkB;AAAA,YAChD,WAAU;AAAA,YACV,SAAS,CAACD,OAAM;AAEd,cAAAA,GAAE,cAAc,MAAM,UAAU;AAChC,cAAAA,GAAE,cAAc,oBAAoB,UAAU,OAAO,QAAQ;AAAA,YAC/D;AAAA;AAAA,QACF;AAAA,QACA,gBAAAF,MAAC,SAAI,WAAU,mEACb,0BAAAA,MAACH,UAAA,EAAQ,WAAU,yBAAwB,GAC7C;AAAA,SACF,IAEA,gBAAAG,MAAC,SAAI,WAAU,4FACb,0BAAAA,MAACH,UAAA,EAAQ,WAAU,yBAAwB,GAC7C,GAEJ;AAAA,MAGA,gBAAAG,MAAC,SAAI,WAAU,kBACb,0BAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,UACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,6BACZ,yBAAe,QAAQG,GAAE,yBAAyB,GACrD;AAAA,UACA,gBAAAH,MAAC,SAAI,WAAU,yBACZ,yBAAe,WAAWG,GAAE,oBAAoB,GACnD;AAAA,UAEC,cAAc,UACb,gBAAAF,OAAC,SAAI,WAAU,QACZ;AAAA,uBACC,gBAAAD;AAAA,cAACD;AAAA,cAAA;AAAA,gBACC;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,mBAAmB,KAAK,YAAY;AAAA,gBACpC;AAAA;AAAA,YACF;AAAA,YAED,CAAC,cAAc,CAAC,aACf,gBAAAC,MAAC,SAAI,WAAU,8BAA6B,uDAE5C,IACE;AAAA,aACN;AAAA,WAEJ;AAAA,QACA,gBAAAA;AAAA,UAACN;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,SAAS,KAAK,SAAS;AAAA,YACtC,WAAU;AAAA,YACV,OAAM;AAAA,YAEN,0BAAAM,MAACF,SAAA,EAAO,WAAU,WAAU;AAAA;AAAA,QAC9B;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAG,OAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,sBAEhE;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,KAAK;AAAA,YACZ,UAAU,CAAC,UAAU,SAAS,KAAK,WAAW,YAAY,KAAK;AAAA,YAC/D,KAAK;AAAA,YACL,UAAU;AAAA,YACV,WAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,SACC;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,wBAEhE;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,KAAK;AAAA,YACZ,UAAU,CAAC,UAAU,SAAS,KAAK,WAAW,aAAa,KAAK;AAAA,YAChE,KAAK;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,YACV,WAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,SACC;AAAA,wBAAAD,MAAC,WAAM,WAAU,gDAA+C,qBAEhE;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,KAAK,WAAW;AAAA,YACvB,UAAU,CAAC,UAAU,SAAS,KAAK,WAAW,WAAW,KAAK;AAAA,YAC9D,KAAK;AAAA,YACL,MAAM;AAAA,YACN,UAAU;AAAA,YACV,WAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,QACb;AAAA,sBAAAD,MAAC,WAAM,WAAU,gDAA+C,mBAEhE;AAAA,MACA,gBAAAA;AAAA,QAACT;AAAA,QAAA;AAAA,UACC,OAAO,KAAK;AAAA,UACZ,UAAU,CAACW,OAAM,SAAS,KAAK,WAAW,SAASA,GAAE,OAAO,KAAK;AAAA,UACjE,aAAY;AAAA,UACZ,WAAU;AAAA;AAAA,MACZ;AAAA,OACF;AAAA,IAGA,gBAAAD,OAAC,SAAI,WAAU,wEACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,QAC7B,KAAK;AAAA,QAAS;AAAA,QAAI,YAAY,KAAK,SAAS;AAAA,QAAE;AAAA,QAAI,YAAY,KAAK,WAAW,KAAK,SAAS;AAAA,SACtG;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,yBACZ;AAAA,QAAAE,GAAE,kBAAkB;AAAA,QAAE;AAAA,QAAG,YAAY,KAAK,OAAO;AAAA,SACpD;AAAA,OACF;AAAA,KACF;AAEJ;;;AC7eA,OAAOE,WAAS,YAAAC,kBAAgB;AAChC;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,mBAAAC;AAAA,EACA;AAAA,EACA,YAAAC;AAAA,EACA,YAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP,SAAS,wBAAAC,6BAA4B;AACrC;AAAA,EAEE,UAAAC;AAAA,EACA,KAAAC;AAAA,EACA,QAAAC;AAAA,OAGK;AAqEH,SAoSgB,YAAAC,WApShB,OAAAC,OAmEU,QAAAC,cAnEV;AAhDJ,IAAMC,eAA0C,CAAC;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN;AAAA,EACA,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,WAAW;AACb,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIvB,QAAM,SAAS,EAAE;AACzD,QAAM,CAAC,WAAW,YAAY,IAAIA,QAAM,SAAS,KAAK;AAEtD,EAAAA,QAAM,UAAU,MAAM;AACpB,QAAI,CAAC,WAAW;AACd,UAAI,UAAU,KAAK,UAAU,QAAQ,UAAU,QAAW;AACxD,wBAAgB,EAAE;AAAA,MACpB,OAAO;AACL,cAAM,YAAY,IAAI,KAAK,aAAa,SAAS;AAAA,UAC/C,uBAAuB;AAAA,UACvB,uBAAuB;AAAA,QACzB,CAAC,EAAE,OAAO,KAAK;AACf,wBAAgB,SAAS;AAAA,MAC3B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,WAAW,QAAQ,CAAC;AAE/B,QAAM,cAAc,MAAM;AACxB,iBAAa,IAAI;AACjB,oBAAgB,QAAQ,MAAM,SAAS,IAAI,EAAE;AAAA,EAC/C;AAEA,QAAM,aAAa,MAAM;AACvB,iBAAa,KAAK;AAClB,UAAM,WAAW,WAAW,aAAa,QAAQ,MAAM,EAAE,CAAC,KAAK;AAC/D,UAAM,UAAU,QAAQ,SAAY,KAAK,IAAI,KAAK,QAAQ,IAAI;AAC9D,UAAM,QAAQ,KAAK,IAAI,KAAK,OAAO;AACnC,aAAS,KAAK;AAAA,EAChB;AAEA,QAAM,eAAe,CAACwB,OAA2C;AAC/D,UAAM,QAAQA,GAAE,OAAO;AACvB,QAAI,UAAU,MAAM,YAAY,KAAK,KAAK,GAAG;AAC3C,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,SACE,gBAAAH;AAAA,IAACf;AAAA,IAAA;AAAA,MACC,MAAK;AAAA,MACL,OAAO;AAAA,MACP,UAAU;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,MACR;AAAA,MACA;AAAA;AAAA,EACF;AAEJ;AAwBO,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMmB,KAAIT,sBAAqB;AAC/B,QAAM,CAAC,yBAAyB,0BAA0B,IAAIf,WAAS,KAAK;AAE5E,SACE,gBAAAqB,OAACpB,OAAA,EACC;AAAA,oBAAAmB,MAAClB,aAAA,EAAW,WAAU,QACpB,0BAAAkB,MAACjB,YAAA,EAAU,WAAU,qCAClB,UAAAqB,GAAE,yBAAyB,GAC9B,GACF;AAAA,IACA,gBAAAH,OAACjB,cAAA,EAAY,WAAU,aAErB;AAAA,sBAAAiB,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAA,OAAC,WAAM,WAAU,yCACd;AAAA,UAAAG,GAAE,oBAAoB;AAAA,UACtB,cACC,gBAAAH,OAAC,UAAK,WAAU,0CAAyC;AAAA;AAAA,YACrDG,GAAE,kCAAkC;AAAA,YAAE;AAAA,aAC1C;AAAA,WAEJ;AAAA,QACA,gBAAAH,OAAC,SAAI,WAAU,0BACb;AAAA,0BAAAD;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,SAAS,cAAc,SAAS,YAAY;AAAA,cACrD,UAAU;AAAA,cACV,SAAS,MAAM;AACb,oBAAI,CAAC,YAAY;AACf,mCAAiB,aAAa,MAAM;AAAA,gBACtC;AAAA,cACF;AAAA,cACA,WAAW,kBAAkB,aAAa,kCAAkC,EAAE;AAAA,cAE7E,UAAAU,GAAE,gBAAgB;AAAA;AAAA,UACrB;AAAA,UACA,gBAAAJ;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,SAAS,cAAc,SAAS,YAAY;AAAA,cACrD,UAAU;AAAA,cACV,SAAS,MAAM;AACb,oBAAI,CAAC,YAAY;AACf,mCAAiB,aAAa,MAAM;AACpC,mCAAiB,gBAAgB,EAAE;AACnC,mCAAiB,gBAAgB,EAAE;AACnC,mCAAiB,iBAAiB,CAAC;AAAA,gBACrC;AAAA,cACF;AAAA,cACA,WAAW,kBAAkB,aAAa,kCAAkC,EAAE;AAAA,cAE7E,UAAAU,GAAE,gBAAgB;AAAA;AAAA,UACrB;AAAA,WACF;AAAA,SACF;AAAA,MAGC,SAAS,cAAc,UACtB,gBAAAH,OAAC,SAAI,WAAU,oBAEZ;AAAA,gBAAQ,IAAI,qDAA8C;AAAA,UACzD,WAAW,SAAS;AAAA,UACpB,iBAAiB,CAAC,CAAC;AAAA,UACnB,aAAa,cAAc;AAAA,UAC3B,cAAc,cAAc;AAAA,QAC9B,CAAC;AAAA,QAEA,eACC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAS;AAAA,cACP,IAAI;AAAA;AAAA,cACJ,MAAMI,GAAE,uBAAuB;AAAA,cAC/B,WAAW;AAAA;AAAA,cACX,SAAS;AAAA,YACX;AAAA,YACA,UAAU;AAAA,YACV,kBAAkB,SAAS;AAAA,YAC3B,gBAAgB,SAAS;AAAA,YACzB,gBAAgB,CAAC,SAAS,UAAU;AAClC,oBAAM,YAAY,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AACpD,oBAAM,UAAU,MAAM,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAEhD,+BAAiB,gBAAgB,SAAS;AAC1C,+BAAiB,gBAAgB,OAAO;AAExC,kCAAoB,WAAW,OAAO;AAAA,YACxC;AAAA,YACA,eAAe,CAAC,YAAY;AAE1B,sBAAQ,IAAI,oBAAoB,OAAO;AAAA,YACzC;AAAA;AAAA,QACF;AAAA;AAAA,UAGA,gBAAAH,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,OAAC,WAAM,WAAU,yCACd;AAAA,cAAAG,GAAE,uBAAuB;AAAA,cAAE;AAAA,cAAC,gBAAAJ,MAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,eAC/D;AAAA,YACA,gBAAAA;AAAA,cAACT;AAAA,cAAA;AAAA,gBACC,OAAO;AAAA,kBACL,MAAM,SAAS,eAAe,IAAI,KAAK,SAAS,YAAY,IAAI;AAAA,kBAChE,IAAI,SAAS,eAAe,IAAI,KAAK,SAAS,YAAY,IAAI;AAAA,gBAChE;AAAA,gBACA,UAAU,CAAC,UAAU;AACnB,wBAAM,YAAY,MAAM,OAAO,MAAM,KAAK,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AACxE,wBAAM,UAAU,MAAM,KAAK,MAAM,GAAG,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAElE,mCAAiB,gBAAgB,SAAS;AAC1C,mCAAiB,gBAAgB,OAAO;AAExC,sBAAI,aAAa,SAAS;AACxB,wCAAoB,WAAW,OAAO;AAAA,kBACxC;AAAA,gBACF;AAAA,gBACA,aAAaa,GAAE,6BAA6B;AAAA,gBAC5C,SAAS,oBAAI,KAAK;AAAA,gBAClB,aAAa;AAAA,gBACb,QAAO;AAAA;AAAA,YACT;AAAA,aACF;AAAA;AAAA,SAEJ;AAAA,MAIF,gBAAAH,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAA,OAAC,WAAM,WAAU,yCACd;AAAA,UAAAG,GAAE,iBAAiB;AAAA,UAAE;AAAA,UAAC,gBAAAJ,MAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,WACzD;AAAA,QACA,gBAAAC;AAAA,UAACf;AAAA,UAAA;AAAA,YACC,OAAO,SAAS,WAAW,OAAO,SAAS,QAAQ,IAAI;AAAA,YACvD,eAAe,CAAC,UAAkB;AAChC,sBAAQ,IAAI,uCAAgC;AAAA,gBAC1C,eAAe,SAAS;AAAA,gBACxB,UAAU;AAAA,gBACV,gBAAgB,QAAQ,SAAS,OAAO,EAAE,IAAI;AAAA,gBAC9C;AAAA,cACF,CAAC;AAED,oBAAM,WAAW,QAAQ,SAAS,OAAO,EAAE,IAAI;AAC/C,+BAAiB,YAAY,QAAQ;AAAA,YACvC;AAAA,YAEA;AAAA,8BAAAc,MAACX,gBAAA,EAAc,SAAQ,UAAS,WAAU,UACxC,0BAAAW,MAACV,cAAA,EAAY,aAAY,oBAAmB,GAC9C;AAAA,cACA,gBAAAU,MAACb,gBAAA,EACE,kBAAQ,IAAI,YACX,gBAAAa,MAACZ,aAAA,EAA2B,OAAO,OAAO,OAAO,EAAE,GAChD,iBAAO,QADO,OAAO,EAExB,CACD,GACH;AAAA;AAAA;AAAA,QACF;AAAA,SACF;AAAA,MAGA,gBAAAa,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAA,OAAC,WAAM,WAAU,yCACd;AAAA,UAAAG,GAAE,mBAAmB;AAAA,UAAE;AAAA,UAAC,gBAAAJ,MAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,WAC3D;AAAA,QACA,gBAAAC,OAAC,SAAI,WAAU,YACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,YACb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,aAAaI,GAAE,0BAA0B;AAAA,gBACzC,OAAO,mBAAmB,GAAG,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ,MAAM,iBAAiB,KAAK,KAAK;AAAA,gBACrH,SAAS,MAAM;AAEb,sBAAI,YAAY,KAAK,GAAG;AACtB,qCAAiB,WAAW;AAAA,kBAC9B;AAAA,gBACF;AAAA,gBACA,UAAU,CAACD,OAAM;AACf,wBAAM,QAAQA,GAAE,OAAO;AAGvB,sBAAI,oBAAoB,UAAU,GAAG,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ,MAAM,iBAAiB,KAAK,IAAI;AAC1H,oCAAgB;AAAA,kBAClB;AAEA,sCAAoB,KAAK;AAEzB,sBAAI,MAAM,KAAK,GAAG;AAChB,qCAAiB,KAAK;AAAA,kBACxB;AAAA,gBACF;AAAA,gBACA,WAAW,oIACT,mBACI,4DACA,wGACN;AAAA;AAAA,YACF;AAAA,YACC,mBACC,gBAAAH;AAAA,cAACN;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,SAAS;AAAA,gBACT,WAAU;AAAA,gBACV,OAAOU,GAAE,gCAAgC;AAAA,gBAEzC,0BAAAJ,MAACH,IAAA,EAAE,WAAU,WAAU;AAAA;AAAA,YACzB,IAEA,gBAAAG;AAAA,cAACN;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,SAAS,MAAM;AACb,sBAAI,YAAY,KAAK,GAAG;AACtB,qCAAiB,WAAW;AAAA,kBAC9B;AAAA,gBACF;AAAA,gBACA,WAAU;AAAA,gBAEV,0BAAAM,MAACJ,SAAA,EAAO,WAAU,WAAU;AAAA;AAAA,YAC9B;AAAA,YAID,CAAC,qBAAqB,sBAAsB,SAAS,KAAK,YAAY,KAAK,MAC1E,gBAAAK,OAAC,SAAI,WAAU,4HAEb;AAAA,8BAAAA;AAAA,gBAACP;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,WAAU;AAAA,kBAEV;AAAA,oCAAAO,OAAC,SAAI,WAAU,2BACb;AAAA,sCAAAD,MAACF,OAAA,EAAK,WAAU,WAAU;AAAA,sBAC1B,gBAAAE,MAAC,UAAM,UAAAI,GAAE,yBAAyB,GAAE;AAAA,uBACtC;AAAA,oBACC,YAAY,KAAK,KAChB,gBAAAH,OAAC,SAAI,WAAU,8BAA6B;AAAA;AAAA,sBACvB;AAAA,sBAAY;AAAA,uBACjC;AAAA;AAAA;AAAA,cAEJ;AAAA,cAGC,sBAAsB,SAAS,IAC9B,gBAAAD,MAAAD,WAAA,EACG,gCAAsB,IAAI,CAAC,aAC1B,gBAAAE;AAAA,gBAACP;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBAER,MAAK;AAAA,kBACL,SAAS,MAAM;AACb,qCAAiB,QAAQ;AACzB,wCAAoB,GAAG,SAAS,SAAS,IAAI,SAAS,QAAQ,MAAM,SAAS,KAAK,EAAE;AAAA,kBACtF;AAAA,kBACA,WAAU;AAAA,kBAEV;AAAA,oCAAAO,OAAC,SAAI,WAAU,6BACZ;AAAA,+BAAS;AAAA,sBAAU;AAAA,sBAAE,SAAS;AAAA,uBACjC;AAAA,oBACA,gBAAAD,MAAC,SAAI,WAAU,yBAAyB,mBAAS,OAAM;AAAA;AAAA;AAAA,gBAXlD,SAAS;AAAA,cAYhB,CACD,GACH;AAAA;AAAA,gBAGA,gBAAAC,OAAC,SAAI,WAAU,mBACb;AAAA,kCAAAA,OAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,oBACZ;AAAA,oBAAY;AAAA,qBACvC;AAAA,kBACA,gBAAAD,MAAC,SAAI,WAAU,8BACZ,UAAAI,GAAE,kCAAkC,GACvC;AAAA,mBACF;AAAA;AAAA,eAEJ;AAAA,aAEJ;AAAA,UACC,sBACC,gBAAAJ,MAAC,SAAI,WAAU,uDACb,0BAAAA,MAACP,WAAA,EAAS,WAAU,wBAAuB,GAC7C;AAAA,WAEJ;AAAA,SAEF;AAAA,MAGC,SAAS,cAAc,UACtB,gBAAAQ,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,MAAC,WAAM,WAAU,yCAAyC,UAAAI,GAAE,kBAAkB,GAAE;AAAA,QAChF,gBAAAJ;AAAA,UAACE;AAAA,UAAA;AAAA,YACC,OAAO,SAAS,iBAAiB;AAAA,YACjC,UAAU,CAAC,UAAU,iBAAiB,iBAAiB,KAAK;AAAA,YAC5D,KAAK;AAAA,YACL,UAAU;AAAA,YACV,aAAY;AAAA,YACZ,WAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,MAIF,gBAAAD,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,MAAC,WAAM,WAAU,yCAAyC,UAAAI,GAAE,mBAAmB,GAAE;AAAA,QACjF,gBAAAH,OAAC,SAAI,WAAU,0BACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,cACb,0BAAAA;AAAA,YAACE;AAAA,YAAA;AAAA,cACC,OAAO,SAAS,iBAAiB;AAAA,cACjC,UAAU,CAAC,UAAU,iBAAiB,iBAAiB,KAAK;AAAA,cAC5D,KAAK;AAAA,cACL,UAAU;AAAA,cACV,aAAaE,GAAE,yBAAyB;AAAA,cACxC,WAAU;AAAA;AAAA,UACZ,GACF;AAAA,UACA,gBAAAH;AAAA,YAACf;AAAA,YAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,eAAe,CAAC,UAAmC;AACjD,iCAAiB,gBAAgB,KAAK;AAAA,cACxC;AAAA,cAEA;AAAA,gCAAAc,MAACX,gBAAA,EAAc,SAAQ,UAAS,WAAU,UACxC,0BAAAW,MAACV,cAAA,EAAY,GACf;AAAA,gBACA,gBAAAW,OAACd,gBAAA,EACC;AAAA,kCAAAa,MAACZ,aAAA,EAAW,OAAM,UAAU,UAAAgB,GAAE,iBAAiB,GAAE;AAAA,kBACjD,gBAAAJ,MAACZ,aAAA,EAAW,OAAM,cAAc,UAAAgB,GAAE,qBAAqB,GAAE;AAAA,mBAC3D;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAH,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,WAAM,WAAU,yCAAyC,UAAAI,GAAE,qBAAqB,GAAE;AAAA,QACnF,gBAAAJ;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,aAAaY,GAAE,0BAA0B;AAAA,YACzC,OAAO,SAAS;AAAA,YAChB,UAAU,CAACD,OACT,iBAAiB,SAASA,GAAE,OAAO,KAAK;AAAA,YAE1C,MAAM;AAAA;AAAA,QACR;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACzeA;AAAA,EACE,QAAAE;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,qBAAAC;AAAA,OACK;AACP,SAAS,wBAAAC,6BAA4B;AACrC;AAAA,EACE,eAAAC;AAAA,EACA,WAAAC;AAAA,OACK;AA+BD,gBAAAC,OACE,QAAAC,cADF;AAfC,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AAEJ,QAAM,cAAcL,mBAAkB;AACtC,QAAMM,KAAIL,sBAAqB;AAE/B,SACE,gBAAAI,OAACV,OAAA,EACC;AAAA,oBAAAS,MAACR,aAAA,EAAW,WAAU,QACpB,0BAAAS,OAACR,YAAA,EAAU,WAAU,qCAClB;AAAA,MAAAS,GAAE,qBAAqB;AAAA,MAAE;AAAA,MAAIA,GAAE,qBAAqB;AAAA,OACvD,GACF;AAAA,IACA,gBAAAD,OAACP,cAAA,EAAY,WAAU,aAErB;AAAA,sBAAAO,OAAC,SAAI,WAAU,+DACb;AAAA,wBAAAD,MAAC,QAAG,WAAU,2CAA2C,UAAAE,GAAE,qBAAqB,GAAE;AAAA,QAGjF,SAAS,cAAc,UAAU,SAAS,gBAAgB,SAAS,gBAClE,gBAAAD,OAAC,SAAI,WAAU,oCACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAA,OAAC,UAAK,WAAU,uBAAuB;AAAA,cAAAC,GAAE,wBAAwB;AAAA,cAAE;AAAA,eAAC;AAAA,YACpE,gBAAAF,MAAC,UAAK,WAAU,eACZ,iBAAM;AACN,oBAAM,QAAQ,IAAI,KAAK,SAAS,YAAY;AAC5C,oBAAM,MAAM,IAAI,KAAK,SAAS,YAAY;AAC1C,oBAAM,OAAO,KAAK,MAAM,IAAI,QAAQ,IAAI,MAAM,QAAQ,MAAM,MAAO,KAAK,KAAK,GAAG;AAChF,qBAAO,GAAG,IAAI,IAAI,SAAS,IAAI,QAAQ,MAAM;AAAA,YAC/C,GAAG,GACL;AAAA,aACF;AAAA,UACA,gBAAAC,OAAC,SAAI,WAAU,mDACb;AAAA,4BAAAA,OAAC,UAAM;AAAA,cAAAC,GAAE,cAAc;AAAA,cAAE;AAAA,cAAG,IAAI,KAAK,SAAS,YAAY,EAAE,mBAAmB,OAAO;AAAA,eAAE;AAAA,YACxF,gBAAAD,OAAC,UAAM;AAAA,cAAAC,GAAE,YAAY;AAAA,cAAE;AAAA,cAAG,IAAI,KAAK,SAAS,YAAY,EAAE,mBAAmB,OAAO;AAAA,eAAE;AAAA,aACxF;AAAA,WACF;AAAA,QAIF,gBAAAD,OAAC,SAAI,WAAU,gCACb;AAAA,0BAAAA,OAAC,UAAK,WAAU,uBAAuB;AAAA,YAAAC,GAAE,kBAAkB;AAAA,YAAE;AAAA,aAAC;AAAA,UAC9D,gBAAAF,MAAC,UAAK,WAAU,eAAe,sBAAY,SAAS,QAAQ,GAAE;AAAA,WAChE;AAAA,QAGC,SAAS,iBAAiB,KACzB,gBAAAC,OAAC,SAAI,WAAU,oDACb;AAAA,0BAAAA,OAAC,UAAM;AAAA,YAAAC,GAAE,kBAAkB;AAAA,YAAE;AAAA,aAAC;AAAA,UAC9B,gBAAAD,OAAC,UAAK,WAAU,eAAc;AAAA;AAAA,YAAE,YAAY,SAAS,cAAc;AAAA,aAAE;AAAA,WACvE;AAAA,QAID,SAAS,cAAc,UAAU,SAAS,gBAAgB,KACzD,gBAAAA,OAAC,SAAI,WAAU,gCACb;AAAA,0BAAAA,OAAC,UAAK,WAAU,uBAAuB;AAAA,YAAAC,GAAE,iBAAiB;AAAA,YAAE;AAAA,aAAC;AAAA,UAC7D,gBAAAF,MAAC,UAAK,WAAU,eAAe,sBAAY,SAAS,aAAa,GAAE;AAAA,WACrE;AAAA,QAIF,gBAAAC,OAAC,SAAI,WAAU,4FACb;AAAA,0BAAAA,OAAC,UAAM;AAAA,YAAAC,GAAE,oBAAoB;AAAA,YAAE;AAAA,aAAC;AAAA,UAChC,gBAAAF,MAAC,UAAM,sBAAY,SAAS,WAAW,GAAE;AAAA,WAC3C;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,oDACb;AAAA,wBAAAA,OAAC,QAAG,WAAU,4CAA4C;AAAA,UAAAC,GAAE,2BAA2B;AAAA,UAAE;AAAA,WAAC;AAAA,QAC1F,gBAAAD,OAAC,SAAI,WAAU,qBAEb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2BACZ;AAAA,uBAAW,SAAS,IACnB,gBAAAD,MAACF,cAAA,EAAY,WAAU,0BAAyB,IAEhD,gBAAAE,MAACD,UAAA,EAAQ,WAAU,wBAAuB;AAAA,YAE5C,gBAAAE,OAAC,UAAK,WAAW,WAAW,SAAS,IAAI,mBAAmB,gBACzD;AAAA,yBAAW,SAAS,IAAI,WAAM;AAAA,cAAI;AAAA,cAAEC,GAAE,sCAAsC;AAAA,cAC5E,WAAW,SAAS,KAAK,KAAK,WAAW,MAAM,IAAIA,GAAE,uBAAuB,CAAC;AAAA,eAChF;AAAA,aACF;AAAA,UAGA,gBAAAD,OAAC,SAAI,WAAU,2BACZ;AAAA,qBAAS,cAAc,SAAS,aAAa,IAC5C,gBAAAD,MAACF,cAAA,EAAY,WAAU,0BAAyB,IAEhD,gBAAAE,MAACD,UAAA,EAAQ,WAAU,wBAAuB;AAAA,YAE5C,gBAAAE,OAAC,UAAK,WAAW,SAAS,cAAc,SAAS,aAAa,IAAI,mBAAmB,gBAClF;AAAA,uBAAS,cAAc,SAAS,aAAa,IAAI,WAAM;AAAA,cAAI;AAAA,cAAEC,GAAE,0CAA0C;AAAA,eAC5G;AAAA,aACF;AAAA,UAGC,SAAS,cAAc,UACtB,gBAAAD,OAAC,SAAI,WAAU,2BACZ;AAAA,qBAAS,gBAAgB,SAAS,eACjC,gBAAAD,MAACF,cAAA,EAAY,WAAU,0BAAyB,IAEhD,gBAAAE,MAACD,UAAA,EAAQ,WAAU,wBAAuB;AAAA,YAE5C,gBAAAE,OAAC,UAAK,WAAW,SAAS,gBAAgB,SAAS,eAAe,mBAAmB,gBAClF;AAAA,uBAAS,gBAAgB,SAAS,eAAe,WAAM;AAAA,cAAI;AAAA,cAAEC,GAAE,mCAAmC;AAAA,eACrG;AAAA,aACF;AAAA,UAIF,gBAAAD,OAAC,SAAI,WAAU,2BACZ;AAAA,qBAAS,YAAY,SAAS,WAAW,IACxC,gBAAAD,MAACF,cAAA,EAAY,WAAU,0BAAyB,IAEhD,gBAAAE,MAACD,UAAA,EAAQ,WAAU,wBAAuB;AAAA,YAE5C,gBAAAE,OAAC,UAAK,WAAW,SAAS,YAAY,SAAS,WAAW,IAAI,mBAAmB,gBAC9E;AAAA,uBAAS,YAAY,SAAS,WAAW,IAAI,WAAM;AAAA,cAAI;AAAA,cAAEC,GAAE,sCAAsC;AAAA,eACpG;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAF,MAAC,SAAI,WAAU,kBACb,0BAAAC,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD;AAAA,UAACL;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,UAAU,WAAW,CAAC;AAAA,YACtB,SAAS;AAAA,YACT,WAAU;AAAA,YAET,oBAAUO,GAAE,qBAAqB,IAAI,aAAaA,GAAE,sBAAsB,IAAIA,GAAE,kBAAkB;AAAA;AAAA,QACrG;AAAA,QACC,YACC,gBAAAF;AAAA,UAACL;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YAET,uBAAaO,GAAE,iBAAiB,IAAIA,GAAE,yBAAyB;AAAA;AAAA,QAClE;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AC3LA,SAAgB,YAAAC,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,OACK;;;ACRP,SAAgB,YAAAC,kBAAgB;AAChC,SAAS,MAAM,KAAAC,UAAS;AAMxB;AAAA,EACE;AAAA,EACA,yBAAAC;AAAA,OACK;AAsIO,gBAAAC,OAOA,QAAAC,cAPA;AA9HP,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA,cAAc;AAChB,MAAM;AACJ,QAAMC,KAAI,wBAAwB;AAClC,QAAM,KAAKH,uBAAsB;AAEjC,QAAM,CAAC,UAAU,WAAW,IAAII,WAAS;AAAA,IACvC,WAAW;AAAA,IACX,UAAU;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,SAAS;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA;AAAA,EACX,CAAC;AAED,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAAS,KAAK;AACtE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAwB,IAAI;AAGpE,QAAM,eACJ,yBAAyB,SACrB,uBACA;AAEN,QAAM,oBAAoB,CAAC,OAAe,UAAkB;AAC1D,gBAAY,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAGnD,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,IAChD;AAGA,QAAI,cAAc;AAChB,sBAAgB,IAAI;AAAA,IACtB;AAAA,EACF;AAEA,QAAM,eAAe,MAAe;AAClC,UAAM,YAAoC,CAAC;AAG3C,QAAI,CAAC,SAAS,UAAU,KAAK,GAAG;AAC9B,gBAAU,YAAYD,GAAE,8BAA8B;AAAA,IACxD,WAAW,SAAS,UAAU,KAAK,EAAE,SAAS,GAAG;AAC/C,gBAAU,YAAYA,GAAE,+BAA+B;AAAA,IACzD;AAGA,QAAI,CAAC,SAAS,SAAS,KAAK,GAAG;AAC7B,gBAAU,WAAWA,GAAE,6BAA6B;AAAA,IACtD,WAAW,SAAS,SAAS,KAAK,EAAE,SAAS,GAAG;AAC9C,gBAAU,WAAWA,GAAE,8BAA8B;AAAA,IACvD;AAGA,QAAI,SAAS,SAAS,SAAS,MAAM,KAAK,GAAG;AAC3C,UAAI,CAAC,eAAe,KAAK,SAAS,MAAM,KAAK,CAAC,GAAG;AAC/C,kBAAU,QAAQA,GAAE,yBAAyB;AAAA,MAC/C;AAAA,IACF;AAGA,QAAI,CAAC,SAAS,MAAM,KAAK,GAAG;AAC1B,gBAAU,QAAQA,GAAE,0BAA0B;AAAA,IAChD,WAAW,CAAC,kBAAkB,KAAK,SAAS,MAAM,KAAK,CAAC,GAAG;AACzD,gBAAU,QAAQA,GAAE,yBAAyB;AAAA,IAC/C,WAAW,SAAS,MAAM,KAAK,EAAE,SAAS,GAAG;AAC3C,gBAAU,QAAQA,GAAE,2BAA2B;AAAA,IACjD;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOE,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,QAAI;AACF,8BAAwB,IAAI;AAC5B,sBAAgB,IAAI;AAEpB,YAAM,OAAO,QAAQ;AAAA,IACvB,SAAS,OAAO;AACd,UAAI,WAAW;AAEf,UAAI,iBAAiB,OAAO;AAC1B,YAAI,MAAM,QAAQ,SAAS,iBAAiB,GAAG;AAC7C,qBAAW;AAAA,QACb,WAAW,MAAM,QAAQ,SAAS,iBAAiB,GAAG;AACpD,qBAAW;AAAA,QACb,OAAO;AACL,qBAAW,MAAM;AAAA,QACnB;AAAA,MACF;AAEA,sBAAgB,QAAQ;AAAA,IAC1B,UAAE;AACA,8BAAwB,KAAK;AAAA,IAC/B;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAJ,MAAC,UAAK,UAAU,cACd,0BAAAA,MAAC,QACC,0BAAAC,OAAC,eAAY,WAAU,iBAEpB;AAAA,oBACC,gBAAAD,MAAC,SAAI,WAAU,kDACb,0BAAAA,MAAC,OAAE,WAAU,wBAAwB,wBAAa,GACpD;AAAA,IAIF,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAA,OAACI,QAAA,EAAM,SAAQ,aAAa;AAAA,UAAAH,GAAE,kBAAkB;AAAA,UAAE;AAAA,WAAE;AAAA,QACpD,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,aAAaA,GAAE,OAAO,KAAK;AAAA,YAC9D,aAAaF,GAAE,6BAA6B;AAAA,YAC5C,WAAW,OAAO,YAAY,mBAAmB;AAAA;AAAA,QACnD;AAAA,QACC,OAAO,aACN,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,SAE1D;AAAA,MAEA,gBAAAC,OAAC,SACC;AAAA,wBAAAA,OAACI,QAAA,EAAM,SAAQ,YAAY;AAAA,UAAAH,GAAE,iBAAiB;AAAA,UAAE;AAAA,WAAE;AAAA,QAClD,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,YAAYA,GAAE,OAAO,KAAK;AAAA,YAC7D,aAAaF,GAAE,4BAA4B;AAAA,YAC3C,WAAW,OAAO,WAAW,mBAAmB;AAAA;AAAA,QAClD;AAAA,QACC,OAAO,YACN,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,UAAS;AAAA,SAEzD;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAD,MAACK,QAAA,EAAM,SAAQ,SAAS,UAAAH,GAAE,cAAc,GAAE;AAAA,QAC1C,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,YAC1D,aAAaF,GAAE,yBAAyB;AAAA,YACxC,WAAW,OAAO,QAAQ,mBAAmB;AAAA;AAAA,QAC/C;AAAA,QACC,OAAO,SACN,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,SAEtD;AAAA,MAEA,gBAAAC,OAAC,SACC;AAAA,wBAAAA,OAACI,QAAA,EAAM,SAAQ,SAAS;AAAA,UAAAH,GAAE,cAAc;AAAA,UAAE;AAAA,WAAE;AAAA,QAC5C,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,YAC1D,aAAaF,GAAE,yBAAyB;AAAA,YACxC,WAAW,OAAO,QAAQ,mBAAmB;AAAA,YAC7C,UAAQ;AAAA;AAAA,QACV;AAAA,QACC,OAAO,SACN,gBAAAF,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,SAEtD;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SACC;AAAA,sBAAAD,MAACK,QAAA,EAAM,SAAQ,eAAe,UAAAH,GAAE,oBAAoB,GAAE;AAAA,MACtD,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,SAAS;AAAA,UAChB,UAAU,CAACI,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,UAChE,aAAaF,GAAE,+BAA+B;AAAA;AAAA,MAChD;AAAA,OACF;AAAA,IAGA,gBAAAD,OAAC,SACC;AAAA,sBAAAD,MAACK,QAAA,EAAM,SAAQ,WAAW,UAAAH,GAAE,gBAAgB,GAAE;AAAA,MAC9C,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,SAAS;AAAA,UAChB,UAAU,CAACI,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,UAC5D,aAAaF,GAAE,iCAAiC;AAAA;AAAA,MAClD;AAAA,OACF;AAAA,IAGA,gBAAAD,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAD,MAACK,QAAA,EAAM,SAAQ,QAAQ,UAAAH,GAAE,aAAa,GAAE;AAAA,QACxC,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,YACzD,aAAaF,GAAE,wBAAwB;AAAA;AAAA,QACzC;AAAA,SACF;AAAA,MAEA,gBAAAD,OAAC,SACC;AAAA,wBAAAD,MAACK,QAAA,EAAM,SAAQ,SAAS,UAAAH,GAAE,cAAc,GAAE;AAAA,QAC1C,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,YAC1D,aAAaF,GAAE,yBAAyB;AAAA;AAAA,QAC1C;AAAA,SACF;AAAA,MAEA,gBAAAD,OAAC,SACC;AAAA,wBAAAD,MAACK,QAAA,EAAM,SAAQ,WAAW,UAAAH,GAAE,gBAAgB,GAAE;AAAA,QAC9C,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACI,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,YAC5D,aAAaF,GAAE,2BAA2B;AAAA;AAAA,QAC5C;AAAA,SACF;AAAA,OACF;AAAA,IAIA,gBAAAD,OAAC,SAAI,WAAU,4CACb;AAAA,sBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAEV;AAAA,4BAAAD,MAACM,IAAA,EAAE,WAAU,gBAAe;AAAA,YAC3B,GAAG,gBAAgB;AAAA;AAAA;AAAA,MACtB;AAAA,MAEA,gBAAAL,OAAC,UAAO,MAAK,UAAS,UAAU,cAC9B;AAAA,wBAAAD,MAAC,QAAK,WAAU,gBAAe;AAAA,QAC9B,eAAe,GAAG,kBAAkB,IAAIE,GAAE,gBAAgB;AAAA,SAC7D;AAAA,OACF;AAAA,KACF,GACF,GACF;AAEJ;;;AD5QM,SAEI,OAAAK,OAFJ,QAAAC,cAAA;AAVC,IAAM,yBAAgE,CAAC;AAAA,EAC5E;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,oBAAoB,qBAAqB,IAAIC,WAAS,KAAK;AAElE,SACE,gBAAAF,MAACG,SAAA,EAAO,MAAY,cAClB,0BAAAF,OAACG,gBAAA,EAAc,WAAU,8CACvB;AAAA,oBAAAJ,MAACK,eAAA,EAAa,WAAU,sCACtB,0BAAAL,MAACM,cAAA,EAAY,WAAU,uCAAsC,8BAE7D,GACF;AAAA,IAEA,gBAAAN,MAAC,SAAI,WAAU,OACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ,OAAO,iBAAsC;AACnD,cAAI;AACF,oBAAQ,IAAI,iEAA0D;AACtE,kCAAsB,IAAI;AAG1B,gBAAI,CAAC,YAAY;AACf,oBAAM,IAAI,MAAM,0GAA0G;AAAA,YAC5H;AAEA,oBAAQ,IAAI,gEAAyD;AAGrE,kBAAM,kBAAkB,YAAY;AAEpC,oBAAQ,IAAI,oFAA6E;AAGzF,yBAAa,KAAK;AAAA,UAEpB,SAAS,OAAO;AACd,oBAAQ,MAAM,kDAA6C,KAAK;AAGhE,kCAAsB,KAAK;AAE3B,kBAAM;AAAA,UACR,UAAE;AACA,oBAAQ,IAAI,0DAAmD;AAC/D,kCAAsB,KAAK;AAAA,UAC7B;AAAA,QACF;AAAA,QACA,UAAU,MAAM;AACd,uBAAa,KAAK;AAAA,QACpB;AAAA,QACA,cAAc;AAAA;AAAA,IAChB,GACF;AAAA,KACF,GACF;AAEJ;;;AE5EA;AAAA,EACE,UAAAO;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,OACK;;;ACoBP;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,aAAAC;AAAA,EACA,SAAAC;AAAA,EACA,eAAAC;AAAA,EACA,aAAAC;AAAA,EACA,aAAAC;AAAA,EACA,YAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,OAEK;AACP,SAAS,kBAAAC,uBAAsB;AAC/B,SAAS,wBAAAC,6BAA4B;AACrC;AAAA,EACE;AAAA,EACA,QAAAC;AAAA,EACA,WAAAC;AAAA,EACA,cAAAC;AAAA,EACA;AAAA,EACA,YAAAC;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,KAAAC;AAAA,EAEA;AAAA,OACK;AA2HC,SAoCQ,YAAAC,WAnCN,OAAAC,OADF,QAAAC,cAAA;AA3DD,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,cAAc;AAAA,EACd,WAAW;AAAA,EACX,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,YAAY;AACd,MAAM;AACJ,QAAMC,KAAIZ,sBAAqB;AAE/B,QAAM,oBAAoB,MAAM;AAC9B,QAAI,UAAU,cAAc,UAAU,UAAU,gBAAgB,UAAU,cAAc;AACtF,YAAM,QAAQ,IAAI,KAAK,UAAU,YAAY;AAC7C,YAAM,MAAM,IAAI,KAAK,UAAU,YAAY;AAC3C,YAAM,aAAa,IAAI,QAAQ,IAAI,MAAM,QAAQ;AACjD,aAAO,KAAK,KAAK,cAAc,MAAO,KAAK,KAAK,GAAG;AAAA,IACrD;AACA,WAAO;AAAA,EACT;AAGA,QAAM,wBAAwB,MAAM;AAClC,QAAI,CAAC;AAAgB,aAAO,CAAC;AAE7B,UAAMa,YAAW,CAAC;AAElB,QAAI,CAAC,UAAU,cAAc,CAAC,UAAU,cAAc;AACpD,MAAAA,UAAS,KAAKD,GAAE,qCAAqC,CAAC;AAAA,IACxD;AAEA,QAAI,UAAU,WAAW,WAAW,GAAG;AACrC,MAAAC,UAAS,KAAKD,GAAE,4BAA4B,CAAC;AAAA,IAC/C;AAEA,QAAI,UAAU,cAAc,WAAW,CAAC,UAAU,gBAAgB,CAAC,UAAU,eAAe;AAC1F,MAAAC,UAAS,KAAKD,GAAE,4BAA4B,CAAC;AAAA,IAC/C;AAEA,QAAI,UAAU,eAAe,GAAG;AAC9B,MAAAC,UAAS,KAAKD,GAAE,kCAAkC,CAAC;AAAA,IACrD;AAEA,WAAOC;AAAA,EACT;AAEA,QAAM,WAAW,sBAAsB;AACvC,QAAM,iBAAiB,kBAAkB;AAEzC,SACE,gBAAAF,OAAC,SAAI,WAAW,aAAa,SAAS,IAEpC;AAAA,oBAAAA,OAAC,SAAI,WAAU,yBACb;AAAA,sBAAAA,OAAC,QAAG,WAAU,2EACZ;AAAA,wBAAAD,MAAC,gBAAa,WAAU,yBAAwB;AAAA,QAC/C;AAAA,SACH;AAAA,MACC,YACC,gBAAAA,MAAC,OAAE,WAAU,iBAAiB,oBAAS;AAAA,OAE3C;AAAA,IAGA,gBAAAC,OAACzB,OAAA,EACC;AAAA,sBAAAwB,MAACvB,aAAA,EACC,0BAAAwB,OAACvB,YAAA,EAAU,WAAU,iDACnB;AAAA,wBAAAsB,MAACT,OAAA,EAAK,WAAU,yBAAwB;AAAA,QAAE;AAAA,SAE5C,GACF;AAAA,MACA,gBAAAS,MAACrB,cAAA,EACC,0BAAAsB,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAACpB,QAAA,EAAM,SAAS,UAAU,cAAc,SAAS,YAAY,aAC1D,oBAAU,WACb;AAAA,YACA,gBAAAoB,MAAC,UAAK,WAAU,yBAAwB,wBAAU;AAAA,aACpD;AAAA,UAEC,UAAU,cACT,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAACR,UAAA,EAAQ,WAAU,yBAAwB;AAAA,YAC3C,gBAAAQ,MAAC,UAAK,WAAU,uBAAsB,qBAAO;AAAA,YAC7C,gBAAAA,MAAC,UAAK,WAAU,yBAAyB,oBAAU,YAAW;AAAA,aAChE;AAAA,UAGD,UAAU,cAAc,UACvB,gBAAAC,OAAAF,WAAA,EACE;AAAA,4BAAAE,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,MAACN,WAAA,EAAS,WAAU,yBAAwB;AAAA,cAC5C,gBAAAM,MAAC,UAAK,WAAU,uBAAsB,qBAAO;AAAA,cAC7C,gBAAAA,MAAC,UAAK,WAAU,yBACb,oBAAU,eAAe,IAAI,KAAK,UAAU,YAAY,EAAE,mBAAmB,IAAIE,GAAE,iBAAiB,GACvG;AAAA,eACF;AAAA,YACA,gBAAAD,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,MAACN,WAAA,EAAS,WAAU,yBAAwB;AAAA,cAC5C,gBAAAM,MAAC,UAAK,WAAU,uBAAsB,qBAAO;AAAA,cAC7C,gBAAAA,MAAC,UAAK,WAAU,yBACb,oBAAU,eAAe,IAAI,KAAK,UAAU,YAAY,EAAE,mBAAmB,IAAIE,GAAE,iBAAiB,GACvG;AAAA,eACF;AAAA,YACC,iBAAiB,KAChB,gBAAAD,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,MAAC,SAAM,WAAU,yBAAwB;AAAA,cACzC,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,uBAAS;AAAA,cAC/C,gBAAAC,OAAC,UAAK,WAAU,yBAAyB;AAAA;AAAA,gBAAe;AAAA,iBAAK;AAAA,eAC/D;AAAA,aAEJ;AAAA,WAEJ;AAAA,QAEA,gBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAACL,OAAA,EAAK,WAAU,yBAAwB;AAAA,YACxC,gBAAAK,MAAC,UAAK,WAAU,uBAAsB,uBAAS;AAAA,YAC/C,gBAAAA,MAAC,UAAK,WAAU,yBACb,oBAAU,gBAAgBE,GAAE,sBAAsB,GACrD;AAAA,aACF;AAAA,UAEC,UAAU,iBACT,gBAAAD,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAAC,cAAW,WAAU,yBAAwB;AAAA,YAC9C,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,oBAAM;AAAA,YAC5C,gBAAAA,MAAC,UAAK,WAAU,yBAAyB,oBAAU,eAAc;AAAA,aACnE;AAAA,UAGD,UAAU,iBACT,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAAC,iBAAc,WAAU,yBAAwB;AAAA,YACjD,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,oBAAM;AAAA,YAC5C,gBAAAA,MAAC,UAAK,WAAU,yBAAyB,oBAAU,eAAc;AAAA,aACnE;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAACzB,OAAA,EACC;AAAA,sBAAAwB,MAACvB,aAAA,EACC,0BAAAwB,OAACvB,YAAA,EAAU,WAAU,iDACnB;AAAA,wBAAAsB,MAACR,UAAA,EAAQ,WAAU,0BAAyB;AAAA,QAAE;AAAA,QAChC,UAAU,WAAW;AAAA,QAAO;AAAA,SAC5C,GACF;AAAA,MACA,gBAAAQ,MAACrB,cAAA,EACE,oBAAU,WAAW,WAAW,IAC/B,gBAAAsB,OAAC,SAAI,WAAU,kCACb;AAAA,wBAAAD,MAACR,UAAA,EAAQ,WAAU,wCAAuC;AAAA,QAC1D,gBAAAQ,MAAC,OAAE,0CAA4B;AAAA,SACjC,IAEA,gBAAAC,OAAAF,WAAA,EACG;AAAA,gBAAQ,IAAI,mDAA4C,UAAU,UAAU;AAAA,QAC5E,QAAQ,IAAI,iDAA0C,UAAU,WAAW,MAAM;AAAA,QAClF,gBAAAE,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,8CAA6C;AAAA;AAAA,YAC1C,UAAU,WAAW;AAAA,YAAO;AAAA,aAC9C;AAAA,UACA,gBAAAA,OAACnB,QAAA,EACC;AAAA,4BAAAkB,MAACjB,cAAA,EACC,0BAAAkB,OAACf,WAAA,EACC;AAAA,8BAAAc,MAACf,YAAA,EAAU,qBAAO;AAAA,cAClB,gBAAAe,MAACf,YAAA,EAAU,sBAAQ;AAAA,cACnB,gBAAAe,MAACf,YAAA,EAAU,wBAAU;AAAA,cACrB,gBAAAe,MAACf,YAAA,EAAW,UAAAiB,GAAE,qBAAqB,GAAE;AAAA,cACpC,UAAU,cAAc,UAAU,gBAAAF,MAACf,YAAA,EAAU,qBAAO;AAAA,eACvD,GACF;AAAA,YACA,gBAAAe,MAAChB,YAAA,EACE,oBAAU,WAAW,IAAI,CAAC,MAAM,UAAU;AACzC,sBAAQ,IAAI,kCAA2B,KAAK,KAAK,IAAI;AAGrD,qBACE,gBAAAiB,OAACf,WAAA,EAAqB,WAAU,YAC9B;AAAA,gCAAAc,MAACb,YAAA,EACC,0BAAAc,OAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,MAAC,SAAI,WAAU,qEACZ,eAAK,SAAS,UAAU,KAAK,QAAQ,OAAO,SAAS,IACpD,gBAAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,KAAK,KAAK,QAAQ,OAAO,CAAC;AAAA,sBAC1B,KAAK,KAAK,QAAQ;AAAA,sBAClB,WAAU;AAAA;AAAA,kBACZ,IAEA,gBAAAA,MAACR,UAAA,EAAQ,WAAU,yBAAwB,GAE/C;AAAA,kBACA,gBAAAS,OAAC,SACC;AAAA,oCAAAA,OAAC,SAAI,WAAU,eACZ;AAAA,2BAAK,SAAS,QAAQ,eAAe,KAAK,SAAS;AAAA,sBACpD,gBAAAA,OAAC,UAAK,WAAU,8BAA6B;AAAA;AAAA,wBAAQ,QAAQ;AAAA,wBAAE;AAAA,yBAAC;AAAA,uBAClE;AAAA,oBACA,gBAAAD,MAAC,SAAI,WAAU,yBACZ,eAAK,SAAS,WAAW,eAAe,QAAQ,CAAC,IACpD;AAAA,qBACF;AAAA,mBACF,GACF;AAAA,gBACA,gBAAAA,MAACb,YAAA,EACC,0BAAAa,MAACpB,QAAA,EAAM,SAAQ,WAAW,eAAK,UAAS,GAC1C;AAAA,gBACA,gBAAAoB,MAACb,YAAA,EAAU,WAAU,aAClB,UAAAE,gBAAe,KAAK,SAAS,GAChC;AAAA,gBACA,gBAAAW,MAACb,YAAA,EAAU,WAAU,yBAClB,UAAAE,gBAAe,KAAK,UAAU,GACjC;AAAA,gBACC,UAAU,cAAc,UACvB,gBAAAW,MAACb,YAAA,EAAU,WAAU,aAClB,UAAAE,gBAAe,KAAK,WAAW,CAAC,GACnC;AAAA,mBArCW,KAuCf;AAAA,YAEJ,CAAC,GACH;AAAA,aACF;AAAA,WACF;AAAA,SACF,GAEJ;AAAA,OACF;AAAA,IAGA,gBAAAY,OAACzB,OAAA,EACC;AAAA,sBAAAwB,MAACvB,aAAA,EACC,0BAAAwB,OAACvB,YAAA,EAAU,WAAU,iDACnB;AAAA,wBAAAsB,MAACP,aAAA,EAAW,WAAU,0BAAyB;AAAA,QAAE;AAAA,SAEnD,GACF;AAAA,MACA,gBAAAO,MAACrB,cAAA,EACC,0BAAAsB,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,iBAAgB,uBAAS;AAAA,UACzC,gBAAAA,MAAC,UAAK,WAAU,aAAa,UAAAX,gBAAe,UAAU,QAAQ,GAAE;AAAA,WAClE;AAAA,QAEC,UAAU,aAAa,UAAU,YAAY,KAC5C,gBAAAY,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,iBAAgB,kBAAI;AAAA,UACpC,gBAAAA,MAAC,UAAK,WAAU,aAAa,UAAAX,gBAAe,UAAU,SAAS,GAAE;AAAA,WACnE;AAAA,QAGD,UAAU,kBAAkB,UAAU,iBAAiB,KACtD,gBAAAY,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,iBAAgB,uBAAS;AAAA,UACzC,gBAAAC,OAAC,UAAK,WAAU,4BAA2B;AAAA;AAAA,YAAEZ,gBAAe,UAAU,cAAc;AAAA,aAAE;AAAA,WACxF;AAAA,QAGF,gBAAAW,MAACnB,YAAA,EAAU;AAAA,QAEX,gBAAAoB,OAAC,SAAI,WAAU,uDACb;AAAA,0BAAAD,MAAC,UAAK,2BAAa;AAAA,UACnB,gBAAAA,MAAC,UAAK,WAAU,2BAA2B,UAAAX,gBAAe,UAAU,WAAW,GAAE;AAAA,WACnF;AAAA,QAEC,UAAU,iBAAiB,UAAU,gBAAgB,KACpD,gBAAAY,OAAAF,WAAA,EACE;AAAA,0BAAAE,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,iBAAgB,+BAAiB;AAAA,YACjD,gBAAAA,MAAC,UAAK,WAAU,6BAA6B,UAAAX,gBAAe,UAAU,aAAa,GAAE;AAAA,aACvF;AAAA,UAEA,gBAAAY,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,iBAAgB,gCAAkB;AAAA,YAClD,gBAAAA,MAAC,UAAK,WAAU,yBACb,UAAAX,gBAAe,UAAU,cAAc,UAAU,aAAa,GACjE;AAAA,aACF;AAAA,WACF;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,KAGE,UAAU,SAAS,UAAU,cAAc,WAC3C,gBAAAY,OAACzB,OAAA,EACC;AAAA,sBAAAwB,MAACvB,aAAA,EACC,0BAAAwB,OAACvB,YAAA,EAAU,WAAU,iDACnB;AAAA,wBAAAsB,MAAC,iBAAc,WAAU,2BAA0B;AAAA,QAClDE,GAAE,gCAAgC;AAAA,SACrC,GACF;AAAA,MACA,gBAAAF,MAACrB,cAAA,EACC,0BAAAsB,OAAC,SAAI,WAAU,aACZ;AAAA,kBAAU,SACT,gBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,UAAK,WAAU,qCAAoC,oBAAM;AAAA,UAC1D,gBAAAA,MAAC,OAAE,WAAU,8BAA8B,oBAAU,OAAM;AAAA,WAC7D;AAAA,QAGD,UAAU,cAAc,UACvB,gBAAAC,OAAC,SAAI,WAAU,yCACZ;AAAA,oBAAU,mBACT,gBAAAA,OAAC,SACC;AAAA,4BAAAD,MAAC,UAAK,WAAU,qCAAoC,+BAAiB;AAAA,YACrE,gBAAAA,MAAC,OAAE,WAAU,8BACV,UAAAX,gBAAe,UAAU,eAAe,GAC3C;AAAA,aACF;AAAA,UAED,UAAU,aACT,gBAAAY,OAAC,SACC;AAAA,4BAAAD,MAAC,UAAK,WAAU,qCAAoC,yBAAW;AAAA,YAC/D,gBAAAA,MAAC,OAAE,WAAU,8BACV,UAAAX,gBAAe,UAAU,SAAS,GACrC;AAAA,aACF;AAAA,UAED,UAAU,WACT,gBAAAY,OAAC,SACC;AAAA,4BAAAD,MAAC,UAAK,WAAU,qCAAoC,uBAAS;AAAA,YAC7D,gBAAAA,MAAC,OAAE,WAAU,8BACV,UAAAX,gBAAe,UAAU,OAAO,GACnC;AAAA,aACF;AAAA,WAEJ;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,IAID,SAAS,SAAS,KACjB,gBAAAY,OAACzB,OAAA,EAAK,WAAU,kCACd;AAAA,sBAAAwB,MAACvB,aAAA,EACC,0BAAAwB,OAACvB,YAAA,EAAU,WAAU,iEACnB;AAAA,wBAAAsB,MAACJ,gBAAA,EAAc,WAAU,WAAU;AAAA,QAAE;AAAA,SAEvC,GACF;AAAA,MACA,gBAAAI,MAACrB,cAAA,EACC,0BAAAqB,MAAC,QAAG,WAAU,2DACX,mBAAS,IAAI,CAACI,UAAS,UACtB,gBAAAJ,MAAC,QAAgB,UAAAI,YAAR,KAAgB,CAC1B,GACH,GACF;AAAA,OACF;AAAA,IAIF,gBAAAH,OAAC,SAAI,WAAU,wCACZ;AAAA,kBACC,gBAAAA;AAAA,QAACb;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAU;AAAA,UAEV;AAAA,4BAAAY,MAACF,IAAA,EAAE,WAAU,WAAU;AAAA,YACtB;AAAA;AAAA;AAAA,MACH;AAAA,MAGF,gBAAAG;AAAA,QAACb;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAU;AAAA,UAEV;AAAA,4BAAAY,MAAC,aAAU,WAAU,WAAU;AAAA,YAC9B;AAAA;AAAA;AAAA,MACH;AAAA,MAEA,gBAAAA;AAAA,QAACZ;AAAA,QAAA;AAAA,UACC,SAAS;AAAA,UACT,UAAU,WAAW,SAAS,SAAS;AAAA,UACvC,WAAU;AAAA,UAET,oBACC,gBAAAa,OAAAF,WAAA,EACE;AAAA,4BAAAC,MAAC,SAAI,WAAU,gFAA+E;AAAA,YAAE;AAAA,aAElG,IAEA,gBAAAC,OAAAF,WAAA,EACE;AAAA,4BAAAC,MAACH,cAAA,EAAY,WAAU,WAAU;AAAA,YAChC;AAAA,aACH;AAAA;AAAA,MAEJ;AAAA,OACF;AAAA,KACF;AAEJ;;;ADxgBA,SAAS,gBAAAQ,qBAAoB;AAiEnB,SACE,OAAAC,OADF,QAAAC,cAAA;AAjBH,IAAM,qBAAwD,CAAC;AAAA,EACpE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SACE,gBAAAD,MAACE,SAAA,EAAO,MAAY,cAClB,0BAAAD,OAACE,gBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAH,MAACI,eAAA,EACC,0BAAAH,OAACI,cAAA,EAAY,WAAU,8CACrB;AAAA,sBAAAL,MAACD,eAAA,EAAa,WAAU,yBAAwB;AAAA,MAC/C;AAAA,OACH,GACF;AAAA,IAEA,gBAAAC;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,KACF,GACF;AAEJ;;;AV+YQ,SAGI,OAAAM,OAHJ,QAAAC,cAAA;AAnbD,IAAM,kBAAkD,CAAC,UAAU;AACxE,QAAM;AAAA,IACJ,YAAY,CAAC;AAAA,IACb,WAAW,CAAC;AAAA,IACZ,UAAU,CAAC;AAAA,IACX,aAAa,CAAC;AAAA,IACd;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV,SAAS;AAAA,IACT;AAAA,IACA,WAAW;AAAA;AAAA,IACX,aAAa;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AAGJ,QAAMC,KAAIC,sBAAqB;AAG/B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,mBAAmB,KAAK;AAE5B,QAAM,EAAE,kBAAkB,cAAc,YAAY,IAAI,mBAAmB;AAC3E,QAAM,EAAE,mBAAmB,yBAAyB,eAAe,IAAI,iBAAiB,QAAe;AACvG,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,kBAAkB;AAGtB,QAAM,EAAE,KAAK,IAAI,QAAQ;AACzB,QAAM,eAAe,MAAM,YAAY;AAGvC,UAAQ,IAAI,8CAAuC;AAAA,IACjD,SAAS,CAAC,CAAC;AAAA,IACX,aAAa,CAAC,CAAC;AAAA,IACf,aAAa,cAAc;AAAA,IAC3B,cAAc,cAAc;AAAA,IAC5B,cAAc;AAAA,EAChB,CAAC;AAGD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAsC,MAAM;AAE1F,QAAI,cAAc,cAAc,UAAU;AACxC,aAAO;AAAA,QACL,IAAI,SAAS,aAAa,UAAU,KAAK;AAAA,QACzC,WAAW,aAAa,SAAS;AAAA,QACjC,UAAU,aAAa,SAAS;AAAA,QAChC,OAAO,aAAa,SAAS;AAAA,QAC7B,OAAO,aAAa,SAAS,SAAS;AAAA,QACtC,UAAU;AAAA,QACV,WAAW,oBAAI,KAAK;AAAA,QACpB,WAAW,oBAAI,KAAK;AAAA,QACpB,YAAY,SAAS,aAAa,SAAS,UAAU,KAAK;AAAA,QAC1D,UAAU;AAAA,UACR,IAAI,SAAS,aAAa,SAAS,UAAU,KAAK;AAAA,UAClD,MAAM,aAAa,SAAS,UAAU,QAAQ;AAAA,QAChD;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT,CAAC;AAGD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAA6B,CAAC,CAAC;AAE/E,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAS,MAAM;AAEnD,QAAI,cAAc,cAAc,UAAU;AACxC,aAAO,GAAG,aAAa,SAAS,SAAS,IAAI,aAAa,SAAS,QAAQ,MAAM,aAAa,SAAS,KAAK;AAAA,IAC9G;AACA,WAAO;AAAA,EACT,CAAC;AAGD,EAAAC,YAAU,MAAM;AACd,QAAI,aAAa;AACf,kBAAY,SAAS;AAAA,IACvB;AAAA,EACF,GAAG,CAAC,aAAa,SAAS,CAAC;AAE3B,QAAM,CAAC,uBAAuB,wBAAwB,IAAID,WAAS,KAAK;AAGxE,QAAM,EAAE,sBAAsB,IAAI,uBAAuB;AAGzD,QAAM,EAAE,cAAc,YAAY,YAAY,IAAIE,UAAS;AAG3D,QAAM,sBAAsBC,aAAY,OAAO,UAAkB;AAC/D,QAAI;AACF,YAAM,gBAAgB,MAAM,eAAe,KAAK;AAChD,0BAAoB,aAAa;AACjC,aAAO,cAAc,IAAI,cAAY;AAAA,QACnC,OAAO,OAAO,QAAQ,EAAE;AAAA,QACxB,OAAO,QAAQ;AAAA,QACf,OAAO,QAAQ,SAAS,CAAC;AAAA,QACzB,UAAU,QAAQ,UAAU,YAAY,QAAQ,OAAO,KAAKL,GAAE,oBAAoB;AAAA,QAClF,SAAS;AAAA,UACPM,gBAAe,QAAQ,aAAa,GAAG,QAAe;AAAA,UACtD,YAAYA,gBAAe,QAAQ,WAAW,GAAG,QAAe,CAAC;AAAA,UACjE,cAAc,QAAQ,cAAc,CAAC,GAAG,aAAa,CAAC;AAAA,UACtD,gBAAgB,QAAQ,cAAc,CAAC,GAAG,SAAS,CAAC;AAAA,UACpD,QAAQ,UAAU,QAAQN,GAAE,qBAAqB;AAAA,QACnD,EAAE,OAAO,OAAO;AAAA,QAChB,MAAM;AAAA,MACR,EAAE;AAAA,IACJ,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO,CAAC;AAAA,IACV;AAAA,EACF,GAAG,CAAC,gBAAgB,QAAQ,CAAC;AAG7B,QAAM,+BAA+BK,aAAY,OAC/C,SACA,WACA,SACA,oBAA4BE,UAAS,qBACE;AACvC,QAAI;AACF,cAAQ,IAAI,gDAAyC;AAAA,QACnD,WAAW,QAAQ;AAAA,QACnB,aAAa,QAAQ;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAGD,YAAM,gBAA4C;AAAA,QAChD,UAAU;AAAA,QACV,sBAAsB;AAAA,QACtB,UAAU;AAAA,MACZ;AAGA,UAAI,aAAa,WAAW,SAAS,cAAc,QAAQ;AAEzD,sBAAc,YAAY,IAAI,KAAK,SAAS,EAAE,YAAY;AAC1D,sBAAc,UAAU,IAAI,KAAK,OAAO,EAAE,YAAY;AAAA,MACxD;AAGA,YAAM,uBAAuB,MAAMC,aAAY,yBAAyB,QAAQ,IAAI,aAAa;AAEjG,UAAI,qBAAqB,WAAW,qBAAqB,MAAM;AAC7D,cAAM,mBAAmB,qBAAqB;AAE9C,gBAAQ,IAAI,wCAAiC,gBAAgB;AAG7D,YAAI,CAAC,iBAAiB,gBAAgB;AACpC,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM,sBAAsB,iBAAiB,UAAU,iBAAiB,mBAAmB;AAAA,YAC3F,OAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,aAAa,WAAW,SAAS,cAAc,QAAQ;AAEzD,cAAI,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,gBAAgB;AACrE,kBAAM,gBAAgB,iBAAiB;AACvC,mBAAO;AAAA,cACL,QAAQ;AAAA,cACR,MAAM,gBAAgB,IAClB,uBAAuB,aAAa,aACpC;AAAA,cACJ,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAGA,cAAM,aAAa,iBAAiB,sBAAsB,KAAK,CAAC,WAAgB,OAAO,iBAAiB;AACxG,cAAM,uBAAuB,iBAAiB,sBAAsB,OAAO,CAAC,KAAa,WACvF,MAAM,OAAO,sBAAsB,CAAC,KAAK,iBAAiB;AAE5D,YAAI,YAAY;AACd,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM,cAAc,oBAAoB;AAAA,YACxC,OAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM,cAAc,oBAAoB,IAAI,iBAAiB;AAAA,YAC7D,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,OAAO;AAEL,gBAAQ,KAAK,4DAA4D;AACzE,cAAM,IAAI,MAAM,iBAAiB;AAAA,MACnC;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,wCAAwC,KAAK;AAG3D,UAAI;AACF,cAAM,cAAc,QAAQ,cAAc,CAAC;AAC3C,cAAM,YAAY,aAAa,aAAa;AAC5C,cAAM,QAAQ,aAAa,SAAS;AAEpC,gBAAQ,IAAI,4CAAqC,EAAE,WAAW,OAAO,kBAAkB,CAAC;AAExF,YAAI,cAAc,GAAG;AACnB,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAMR,GAAE,qBAAqB;AAAA,YAC7B,OAAO;AAAA,UACT;AAAA,QACF,WAAW,YAAY,mBAAmB;AACxC,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM,cAAc,SAAS,IAAI,iBAAiB;AAAA,YAClD,OAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,iBAAO;AAAA,YACL,QAAQ;AAAA,YACR,MAAM,cAAc,SAAS;AAAA,YAC7B,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,SAAS,eAAe;AACtB,gBAAQ,MAAM,4CAA4C,aAAa;AACvE,eAAO;AAAA,UACL,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,WAAWA,EAAC,CAAC;AAG1B,QAAM,uBAAuBK,aAAY,OAAO,iBAAsB;AACpE,QAAI;AACF,cAAQ,IAAI,+DAAwD;AAGpE,YAAM,oBAAoB,cAAc,QAAQ,CAAC,GAAG;AAEpD,UAAI,CAAC,mBAAmB;AACtB,cAAM,WAAW;AACjB,mBAAWL,GAAE,gBAAgB,GAAG,QAAQ;AACxC,cAAM,IAAI,MAAM,QAAQ;AAAA,MAC1B;AAEA,cAAQ,IAAI,sDAA+C,iBAAiB;AAG5E,YAAM,kBAAkB,aAAa,MAAM,QAAQ,iBAAiB,EAAE;AAGtE,YAAM,iBAAiB,sBAAsB,KAAK,cAAY;AAC5D,YAAI,SAAS,OAAO;AAClB,gBAAM,0BAA0B,SAAS,MAAM,QAAQ,iBAAiB,EAAE;AAC1E,iBAAO,oBAAoB;AAAA,QAC7B;AACA,eAAO;AAAA,MACT,CAAC;AAED,UAAI,gBAAgB;AAClB,cAAM,WAAW,iCAAiC,aAAa,KAAK,qBAAqB,eAAe,SAAS,IAAI,eAAe,QAAQ;AAC5I,mBAAWA,GAAE,4BAA4B,GAAG,QAAQ;AACpD,cAAM,IAAI,MAAM,QAAQ;AAAA,MAC1B;AAEA,cAAQ,IAAI,4EAAqE;AAGjF,YAAM,iBAAiB,MAAMS,cAAa,mBAAmB,aAAa,KAAK;AAE/E,UAAI,eAAe,WAAW,eAAe,MAAM;AACjD,cAAM,oBAAoB,eAAe,KAAK,aAAa,eAAe,KAAK,YAAY,CAAC;AAC5F,cAAM,iBAAiB,MAAM,QAAQ,iBAAiB,IAAI,oBAAoB,CAAC,iBAAiB;AAEhG,mBAAW,oBAAoB,gBAAgB;AAC7C,cAAI,iBAAiB,OAAO;AAC1B,kBAAM,0BAA0B,iBAAiB,MAAM,QAAQ,iBAAiB,EAAE;AAClF,gBAAI,oBAAoB,yBAAyB;AAC/C,oBAAM,WAAW,iCAAiC,aAAa,KAAK,qBAAqB,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ;AAChJ,yBAAWT,GAAE,4BAA4B,GAAG,QAAQ;AACpD,oBAAM,IAAI,MAAM,QAAQ;AAAA,YAC1B;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,IAAI,+EAAwE;AAEpF,YAAM,SAAS,MAAMS,cAAa,eAAe;AAAA,QAC/C,GAAG;AAAA,QACH,YAAY;AAAA,QACZ,UAAU;AAAA,MACZ,CAAC;AAED,cAAQ,IAAI,iDAA0C,MAAM;AAC5D,cAAQ,IAAI,mDAA4C,OAAO,OAAO;AACtE,cAAQ,IAAI,gDAAyC,OAAO,IAAI;AAChE,cAAQ,IAAI,0DAAmD,OAAO,MAAM,QAAQ;AAEpF,UAAI,OAAO,WAAW,OAAO,SAAS,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY;AAEpF,cAAM,cAAc,OAAO,KAAK,YAAY,OAAO;AAEnD,gBAAQ,IAAI,kEAA2D,WAAW;AAGlF,2BAAmB,CAAC,aAAa,GAAG,qBAAqB,CAAC;AAG1D,oBAAY,WAAS;AAAA,UACnB,GAAG;AAAA,UACH,YAAY,OAAO,YAAY,EAAE;AAAA,QACnC,EAAE;AACF,4BAAoB,WAAW;AAG/B,uBAAe,GAAG,YAAY,SAAS,IAAI,YAAY,QAAQ,MAAM,YAAY,KAAK,EAAE;AAGxF,qBAAaT,GAAE,0BAA0B,GAAG,aAAa,YAAY,SAAS,IAAI,YAAY,QAAQ,KAAKA,GAAE,iCAAiC,CAAC,EAAE;AAEjJ,gBAAQ,IAAI,iEAA0D;AAAA,MACxE,OAAO;AAEL,cAAM,eAAe,OAAO,WAAW,OAAO,SAASA,GAAE,iCAAiC;AAC1F,gBAAQ,MAAM,2CAAsC,YAAY;AAChE,gBAAQ,MAAM,6CAAwC,MAAM;AAC5D,mBAAWA,GAAE,gBAAgB,GAAG,YAAY;AAC5C,cAAM,IAAI,MAAM,YAAY;AAAA,MAC9B;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,gDAA2C,KAAK;AAE9D,YAAM;AAAA,IACR;AAAA,EACF,GAAG,CAAC,YAAY,SAAS,uBAAuB,oBAAoB,aAAa,cAAc,UAAU,CAAC;AAG1G,QAAM,uBAAuBK,aAAY,CAAC,aAAmC;AAC3E,YAAQ,IAAI,sDAA+C,QAAQ;AACnE,YAAQ,IAAI,gDAAyC,SAAS,EAAE;AAChE,YAAQ,IAAI,qDAA8C,OAAO,SAAS,EAAE;AAC5E,YAAQ,IAAI,8DAAuD,OAAO,KAAK,QAAQ,CAAC;AACxF,YAAQ,IAAI,gDAAyC,SAAS,EAAE;AAGhE,UAAM,aAAa,SAAS;AAC5B,YAAQ,IAAI,yDAAkD,UAAU;AAExE,wBAAoB,QAAQ;AAE5B,gBAAY,UAAQ;AAClB,cAAQ,IAAI,sDAA+C,IAAI;AAC/D,YAAM,cAAc,EAAE,GAAG,MAAM,WAAuB;AACtD,cAAQ,IAAI,iDAA0C,WAAW;AACjE,aAAO;AAAA,IACT,CAAC;AACD,mBAAe,GAAG,SAAS,SAAS,IAAI,SAAS,QAAQ,MAAM,SAAS,KAAK,EAAE;AAAA,EACjF,GAAG,CAAC,CAAC;AAGL,EAAAF,YAAU,MAAM;AACd,QAAI,cAAc,cAAc;AAE9B,UAAI,aAAa,UAAU;AACzB,cAAM,WAAW;AAAA,UACf,IAAI,SAAS,aAAa,UAAU,KAAK;AAAA,UACzC,WAAW,aAAa,SAAS;AAAA,UACjC,UAAU,aAAa,SAAS;AAAA,UAChC,OAAO,aAAa,SAAS;AAAA,UAC7B,OAAO,aAAa,SAAS,SAAS;AAAA,UACtC,UAAU;AAAA,UACV,WAAW,oBAAI,KAAK;AAAA,UACpB,WAAW,oBAAI,KAAK;AAAA,UACpB,YAAY,SAAS,aAAa,SAAS,UAAU,KAAK;AAAA,UAC1D,UAAU,EAAE,IAAI,SAAS,aAAa,SAAS,UAAU,KAAK,GAAG,MAAM,GAAG;AAAA,QAC5E;AACA,4BAAoB,QAAQ;AAC5B,uBAAe,GAAG,SAAS,SAAS,IAAI,SAAS,QAAQ,MAAM,SAAS,KAAK,EAAE;AAAA,MACjF;AAAA,IACF;AAAA,EACF,GAAG,CAAC,YAAY,YAAY,CAAC;AAG7B,QAAM,wBAAwBE,aAAY,OAAOK,OAAuB;AACtE,IAAAA,GAAE,eAAe;AAEjB,QAAI;AAAc;AAGlB,QAAI,CAAC,aAAa,UAAU,UAAU,GAAG;AACvC;AAAA,IACF;AAEA,UAAM,aAAaA,EAAC;AAAA,EACtB,GAAG,CAAC,cAAc,cAAc,UAAU,YAAY,YAAY,CAAC;AAGnE,QAAM,mBAAmB,YAAY,UAAU,UAAU;AAEzD,SACE,gBAAAX,OAAC,SAAI,WAAU,qCACb;AAAA,oBAAAD,MAAC,SAAI,WAAU,UACb,0BAAAC,OAAC,SAAI,WAAU,6CAEb;AAAA,sBAAAD,MAAC,SAAI,WAAU,wBACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,UAAU,CAAC,GAAG,UAAU,GAAG,gBAAgB;AAAA,UAC3C,cAAc;AAAA,UACd,iBAAiB;AAAA,UACjB,mBAAmB;AAAA,UACnB,kBAAkB;AAAA,UAClB;AAAA,UACA,WAAW,SAAS;AAAA,UACpB,YAAY,SAAS;AAAA,UACrB,YAAY,SAAS;AAAA,UACrB;AAAA,UACA;AAAA;AAAA,MACF,GACF;AAAA,MAGA,gBAAAA,MAAC,SAAI,WAAU,wBACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,kBAAkB,CAAC,OAAO,UAAU,YAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAAA,UACrF,kBAAkB;AAAA,UAClB,iBAAiB,MAAM;AACrB,gCAAoB,IAAI;AACxB,2BAAe,EAAE;AACjB,wBAAY,WAAS,EAAE,GAAG,MAAM,YAAY,OAAU,EAAE;AAAA,UAC1D;AAAA,UACA,qBAAqB;AAAA,UACrB,kBAAkB;AAAA,UAClB,yBAAyB,MAAM,yBAAyB,IAAI;AAAA,UAC5D,qBAAqB;AAAA,UACrB;AAAA;AAAA,MACF,GACF;AAAA,MAGA,gBAAAA,MAAC,SAAI,WAAU,wBACb,0BAAAA,MAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAS,WAAW;AAAA,UACpB,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB;AAAA,UACA;AAAA;AAAA,MACF,GACF,GACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,mBAAmB;AAAA,QACnB;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,WAAW;AAAA,UACT,WAAW,SAAS;AAAA,UACpB,YAAY,SAAS,cAAc;AAAA,UACnC,cAAc,mBAAmB,GAAG,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ,KAAK;AAAA,UAChG,eAAe,kBAAkB;AAAA,UACjC,eAAe,kBAAkB;AAAA,UACjC,UAAU,SAAS,YAAY;AAAA,UAC/B,YAAY,QAAQ,KAAK,CAAAa,OAAKA,GAAE,OAAO,SAAS,QAAQ,GAAG;AAAA,UAC3D,cAAc,SAAS;AAAA,UACvB,cAAc,SAAS;AAAA,UACvB,UAAU,SAAS;AAAA,UACnB,WAAW,SAAS;AAAA,UACpB,gBAAgB,SAAS;AAAA,UACzB,aAAa,SAAS;AAAA,UACtB,eAAe,SAAS;AAAA,UACxB,iBAAiB,SAAS;AAAA,UAC1B,SAAS,SAAS;AAAA,UAClB,WAAW,SAAS;AAAA,UACpB,OAAO,SAAS;AAAA,UAChB,aAAa,MAAM;AACjB,oBAAQ,IAAI,4DAAqD,UAAU;AAC3E,oBAAQ,IAAI,wDAAiD,WAAW,MAAM;AAC9E,mBAAO,WAAW,IAAI,WAAS;AAAA,cAC7B,WAAW,KAAK;AAAA,cAChB,SAAS,KAAK;AAAA;AAAA,cACd,UAAU,KAAK;AAAA,cACf,WAAW,KAAK;AAAA,cAChB,YAAY,KAAK,WAAW,KAAK;AAAA,cACjC,SAAS,KAAK,WAAW;AAAA;AAAA,cACzB,OAAO,KAAK,SAAS;AAAA,YACvB,EAAE;AAAA,UACJ,GAAG;AAAA,QACL;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX,QAAQ,MAAM,oBAAoB,KAAK;AAAA,QACvC,SAAS,WAAW;AAAA,QACpB,aAAa,aAAaX,GAAE,qBAAqB,IAAIA,GAAE,uBAAuB;AAAA,QAC9E,UAAUA,GAAE,oBAAoB;AAAA,QAChC,OAAOA,GAAE,sBAAsB;AAAA,QAC/B,UAAUA,GAAE,6BAA6B;AAAA;AAAA,IAC3C;AAAA,IAAE;AAAA,KAAI;AAEZ;;;AYpmBA,SAAgB,YAAAY,kBAA2B;AAmB3C;AAAA,EACE,WAAAC;AAAA,EACA,cAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,EACA,eAAAC;AAAA,EAEA;AAAA,EACA;AAAA,OACK;AAOP,SAAS,sBAAsB;AAC/B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AA6KG,SAkWM,YAAAC,WAjWJ,OAAAC,OADF,QAAAC,cAAA;AA3IH,IAAM,WAAoC,CAAC;AAAA,EAChD,cAAc,CAAC;AAAA,EACf;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,OAAO;AAAA,EACP,aAAa;AAAA,EACb,mBAAmB;AAAA,EACnB;AACF,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAIC,WAAuB;AAAA,IACrD,MAAM;AAAA,IACN,aAAa;AAAA,IACb,WAAW;AAAA;AAAA,IACX,UAAU;AAAA,IACV,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,aAAa;AAAA,IACb,cAAc;AAAA,IACd,UAAU,CAAC;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,YAAY;AAAA;AAAA,IACZ,WAAW;AAAA,IACX,GAAG;AAAA,EACL,CAAC;AAED,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAsD,CAAC,CAAC;AACpF,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AACtD,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,EAAE;AAE/C,QAAM,oBAAoB,CAAC,OAA2B,UAAe;AACnE,gBAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAEjD,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,IAC9C;AAAA,EACF;AAEA,QAAM,2BAA2B,CAAC,UAAwB;AACxD,UAAM,cAAc,eAAe,KAAK,YAAU,OAAO,UAAU,KAAK;AACxE,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,cAAc;AAAA,MACd,oBAAoB,aAAa,UAAU;AAAA,IAC7C,EAAE;AACF,QAAI,OAAO,cAAc;AACvB,gBAAU,WAAS,EAAE,GAAG,MAAM,cAAc,GAAG,EAAE;AAAA,IACnD;AAAA,EACF;AAGA,QAAM,eAAe,MAAe;AAClC,UAAM,YAAyD,CAAC;AAEhE,QAAI,CAAC,SAAS,KAAK,KAAK,GAAG;AACzB,gBAAU,OAAO;AAAA,IACnB;AAEA,QAAI,CAAC,SAAS,YAAY,KAAK,GAAG;AAChC,gBAAU,cAAc;AAAA,IAC1B;AAEA,QAAI,SAAS,YAAY,GAAG;AAC1B,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,SAAS,YAAY,GAAG;AAC1B,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,SAAS,aAAa,IAAI;AAC5B,gBAAU,aAAa;AAAA,IACzB;AAEA,QAAI,SAAS,WAAW,IAAI;AAC1B,gBAAU,WAAW;AAAA,IACvB;AAEA,QAAI,SAAS,cAAc,IAAI;AAC7B,gBAAU,cAAc;AAAA,IAC1B;AAEA,QAAI,SAAS,eAAe,IAAI;AAC9B,gBAAU,eAAe;AAAA,IAC3B;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOC,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,oBAAgB,IAAI;AACpB,QAAI;AACF,YAAM,SAAS,QAAQ;AAAA,IACzB,SAAS,OAAO;AACd,cAAQ,MAAM,0BAA0B,KAAK;AAAA,IAC/C,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,aAAa,MAAM;AACvB,QAAI,WAAW,KAAK,KAAK,CAAC,SAAS,SAAS,SAAS,WAAW,KAAK,CAAC,GAAG;AACvE,wBAAkB,YAAY,CAAC,GAAG,SAAS,UAAU,WAAW,KAAK,CAAC,CAAC;AACvE,oBAAc,EAAE;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,gBAAgB,CAAC,UAAkB;AACvC,sBAAkB,YAAY,SAAS,SAAS,OAAO,CAAC,GAAG,MAAM,MAAM,KAAK,CAAC;AAAA,EAC/E;AAEA,QAAM,eAAe,CAAC,UAAkB;AACtC,WAAO,UAAU,KAAK,cAAc,MAAM,SAAS;AAAA,EACrD;AAEA,QAAMC,mBAAiB,CAAC,OAAe,aAAqB;AAC1D,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU,YAAY;AAAA,IACxB,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAEA,SACE,gBAAAH,OAAC,SAAI,WAAU,aACZ;AAAA,KAAC,cACA,gBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAD,MAAC,QAAG,WAAU,wCAAwC,iBAAM;AAAA,QAC5D,gBAAAA,MAAC,OAAE,WAAU,4BACV,mBAAS,WAAW,mCAAmC,2BAC1D;AAAA,SACF;AAAA,MACC,SAAS,UACR,gBAAAA,MAAC,SAAM,SAAS,SAAS,WAAW,YAAY,aAC7C,mBAAS,WAAW,WAAW,YAClC;AAAA,OAEJ;AAAA,IAGF,gBAAAC,OAAC,UAAK,IAAI,QAAQ,UAAU,cAAc,WAAU,aAElD;AAAA,sBAAAA,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAACN,UAAA,EAAQ,WAAU,WAAU;AAAA,UAAE;AAAA,WAEjC,GACF;AAAA,QACA,gBAAAO,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAA,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAACK,QAAA,EAAM,SAAQ,QAAO,yBAAW;AAAA,cACjC,gBAAAL;AAAA,gBAAC;AAAA;AAAA,kBACC,IAAG;AAAA,kBACH,OAAO,SAAS;AAAA,kBAChB,UAAU,CAACG,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,kBACzD,aAAY;AAAA,kBACZ,WAAW,OAAO,OAAO,mBAAmB;AAAA;AAAA,cAC9C;AAAA,cACC,OAAO,QAAQ,gBAAAH,MAAC,OAAE,WAAU,wBAAwB,iBAAO,MAAK;AAAA,eACnE;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAACK,QAAA,EAAM,SAAQ,aAAY,wBAAU;AAAA,cACrC,gBAAAL;AAAA,gBAAC;AAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,OAAO,SAAS;AAAA,kBAChB,UAAU,CAACG,OAAM,kBAAkB,aAAa,SAASA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,kBAC7E,aAAY;AAAA,kBACZ,KAAI;AAAA;AAAA,cACN;AAAA,eACF;AAAA,aACF;AAAA,UAEA,gBAAAF,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAACK,QAAA,EAAM,SAAQ,eAAc,2BAAa;AAAA,YAC1C,gBAAAL;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAO,SAAS;AAAA,gBAChB,UAAU,CAACG,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,gBAChE,aAAY;AAAA,gBACZ,MAAM;AAAA,gBACN,WAAW,OAAO,cAAc,mBAAmB;AAAA;AAAA,YACrD;AAAA,YACC,OAAO,eAAe,gBAAAH,MAAC,OAAE,WAAU,wBAAwB,iBAAO,aAAY;AAAA,aACjF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,IAAG;AAAA,kBACH,SAAS,SAAS;AAAA,kBAClB,iBAAiB,CAAC,YAAY,kBAAkB,YAAY,OAAO;AAAA;AAAA,cACrE;AAAA,cACA,gBAAAA,MAACK,QAAA,EAAM,SAAQ,YAAW,yBAAW;AAAA,eACvC;AAAA,YACA,gBAAAJ,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,IAAG;AAAA,kBACH,SAAS,SAAS;AAAA,kBAClB,iBAAiB,CAAC,YAAY,kBAAkB,aAAa,OAAO;AAAA;AAAA,cACtE;AAAA,cACA,gBAAAC,OAACI,QAAA,EAAM,SAAQ,aAAY,WAAU,2BACnC;AAAA,gCAAAL,MAAC,QAAK,WAAU,WAAU;AAAA,gBAAE;AAAA,iBAE9B;AAAA,eACF;AAAA,YACA,gBAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,IAAG;AAAA,kBACH,SAAS,SAAS;AAAA,kBAClB,iBAAiB,CAAC,YAAY,kBAAkB,cAAc,OAAO;AAAA;AAAA,cACvE;AAAA,cACA,gBAAAC,OAACI,QAAA,EAAM,SAAQ,cAAa,WAAU,2BACpC;AAAA,gCAAAL,MAAC,YAAS,WAAU,WAAU;AAAA,gBAAE;AAAA,iBAElC;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAACL,aAAA,EAAW,WAAU,WAAU;AAAA,UAAE;AAAA,WAEpC,GACF;AAAA,QACA,gBAAAM,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAA,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAACK,QAAA,EAAM,SAAQ,aAAY,0BAAY;AAAA,cACvC,gBAAAL;AAAA,gBAAC;AAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,OAAO,SAAS;AAAA,kBAChB,UAAU,CAACG,OAAM,kBAAkB,aAAa,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,kBAC/E,aAAY;AAAA,kBACZ,KAAI;AAAA,kBACJ,WAAW,OAAO,YAAY,mBAAmB;AAAA;AAAA,cACnD;AAAA,cACC,OAAO,aAAa,gBAAAH,MAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,eAC7E;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAACK,QAAA,EAAM,SAAQ,YAAW,sBAAQ;AAAA,cAClC,gBAAAJ,OAAC,UAAO,OAAO,SAAS,UAAU,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK,GAC7F;AAAA,gCAAAD,MAAC,iBACC,0BAAAA,MAAC,eAAY,GACf;AAAA,gBACA,gBAAAC,OAAC,iBACC;AAAA,kCAAAD,MAAC,cAAW,OAAM,OAAM,qBAAO;AAAA,kBAC/B,gBAAAA,MAAC,cAAW,OAAM,OAAM,0BAAO;AAAA,kBAC/B,gBAAAA,MAAC,cAAW,OAAM,OAAM,0BAAO;AAAA,mBACjC;AAAA,iBACF;AAAA,eACF;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAACK,QAAA,EAAM,SAAQ,gBAAe,2BAAa;AAAA,cAC3C,gBAAAJ,OAAC,UAAO,OAAO,SAAS,cAAc,eAAe,0BACnD;AAAA,gCAAAD,MAAC,iBACC,0BAAAA,MAAC,eAAY,GACf;AAAA,gBACA,gBAAAA,MAAC,iBACE,yBAAe,IAAI,CAAC,UACnB,gBAAAA,MAAC,cAA6B,OAAO,MAAM,OACzC,0BAAAC,OAAC,SAAI,WAAU,iBACb;AAAA,kCAAAD,MAAC,UAAK,WAAU,eAAe,gBAAM,OAAM;AAAA,kBAC3C,gBAAAA,MAAC,UAAK,WAAU,8BAA8B,gBAAM,aAAY;AAAA,mBAClE,KAJe,MAAM,KAKvB,CACD,GACH;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAACK,QAAA,EAAM,SAAQ,aAAY,wBAAU;AAAA,YACrC,gBAAAL;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,OAAO,SAAS;AAAA,gBAChB,UAAU,CAACG,OAAM,kBAAkB,aAAa,SAASA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,gBAC7E,aAAY;AAAA,gBACZ,KAAI;AAAA,gBACJ,WAAW,OAAO,YAAY,mBAAmB;AAAA;AAAA,YACnD;AAAA,YACC,OAAO,aAAa,gBAAAH,MAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,aAC7E;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,kCACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,oCAAmC,4BAAc;AAAA,YAChE,gBAAAC,OAAC,SAAI,WAAU,wCACZ;AAAA,cAAAG,iBAAe,SAAS,WAAW,SAAS,QAAQ;AAAA,cACrD,gBAAAH,OAAC,UAAK,WAAU,gDAA+C;AAAA;AAAA,gBAC3D,mBAAmB,SAAS,YAAY,EAAE,YAAY;AAAA,iBAC1D;AAAA,eACF;AAAA,YAGC,wBAAwB,SAAS,YAAY,IAAI,KAChD,gBAAAA,OAAC,SAAI,WAAU,oCACZ;AAAA,sCAAwB,SAAS,YAAY;AAAA,cAAE;AAAA,eAClD;AAAA,YAID,SAAS,qBAAqB,KAC7B,gBAAAA,OAAC,SAAI,WAAU,oCAAmC;AAAA;AAAA,cACxCG,iBAAe,yBAAyB,SAAS,WAAW,SAAS,YAAY,GAAG,SAAS,QAAQ;AAAA,cAAE;AAAA,cAAM,SAAS;AAAA,cAAmB;AAAA,eACnJ;AAAA,YAGD,SAAS,YAAY,KACpB,gBAAAH,OAAC,SAAI,WAAU,oCACZ;AAAA,uBAAS;AAAA,cAAU;AAAA,eACtB;AAAA,aAEJ;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAA,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAAC,YAAS,WAAU,WAAU;AAAA,UAAE;AAAA,WAElC,GACF;AAAA,QACA,gBAAAC,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAA,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAM;AAAA,gBACN,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,UAAU,kBAAkB,cAAc,KAAK;AAAA,gBAC1D,aAAY;AAAA,gBACZ,UAAS;AAAA,gBACT,OAAO,CAAC,CAAC,OAAO;AAAA;AAAA,YAClB;AAAA,YACC,OAAO,cAAc,gBAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,YAAW;AAAA,YAE7E,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAM;AAAA,gBACN,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,gBACxD,aAAY;AAAA,gBACZ,UAAS;AAAA,gBACT,OAAO,CAAC,CAAC,OAAO;AAAA;AAAA,YAClB;AAAA,YACC,OAAO,YAAY,gBAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,UAAS;AAAA,YAEzE,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAM;AAAA,gBACN,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,UAAU,kBAAkB,eAAe,KAAK;AAAA,gBAC3D,aAAY;AAAA,gBACZ,UAAS;AAAA,gBACT,OAAO,CAAC,CAAC,OAAO;AAAA;AAAA,YAClB;AAAA,YACC,OAAO,eAAe,gBAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,aAAY;AAAA,YAE/E,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,OAAM;AAAA,gBACN,OAAO,SAAS;AAAA,gBAChB,UAAU,CAAC,UAAU,kBAAkB,gBAAgB,KAAK;AAAA,gBAC5D,aAAY;AAAA,gBACZ,UAAS;AAAA,gBACT,OAAO,CAAC,CAAC,OAAO;AAAA;AAAA,YAClB;AAAA,YACC,OAAO,gBAAgB,gBAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,cAAa;AAAA,aACnF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,kCACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,oCAAmC,6BAAe;AAAA,YACjE,gBAAAC,OAAC,SAAI,WAAU,iDACb;AAAA,8BAAAA,OAAC,SACC;AAAA,gCAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,MAACN,UAAA,EAAQ,WAAU,8BAA6B;AAAA,kBAChD,gBAAAM,MAAC,UAAK,WAAU,uBAAsB,sBAAQ;AAAA,mBAChD;AAAA,gBACA,gBAAAA,MAAC,SAAI,WAAU,iCAAiC,uBAAa,SAAS,UAAU,GAAE;AAAA,iBACpF;AAAA,cACA,gBAAAC,OAAC,SACC;AAAA,gCAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,MAAC,SAAM,WAAU,8BAA6B;AAAA,kBAC9C,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,oBAAM;AAAA,mBAC9C;AAAA,gBACA,gBAAAA,MAAC,SAAI,WAAU,iCAAiC,uBAAa,SAAS,QAAQ,GAAE;AAAA,iBAClF;AAAA,cACA,gBAAAC,OAAC,SACC;AAAA,gCAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,MAAC,cAAW,WAAU,8BAA6B;AAAA,kBACnD,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,uBAAS;AAAA,mBACjD;AAAA,gBACA,gBAAAA,MAAC,SAAI,WAAU,iCAAiC,uBAAa,SAAS,WAAW,GAAE;AAAA,iBACrF;AAAA,cACA,gBAAAC,OAAC,SACC;AAAA,gCAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,MAAC,SAAM,WAAU,8BAA6B;AAAA,kBAC9C,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,wBAAU;AAAA,mBAClD;AAAA,gBACA,gBAAAA,MAAC,SAAI,WAAU,iCAAiC,uBAAa,SAAS,YAAY,GAAE;AAAA,iBACtF;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,QACC;AAAA,wBAAAD,MAAC,cACC,0BAAAC,OAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,MAACF,cAAA,EAAY,WAAU,WAAU;AAAA,UAAE;AAAA,WAErC,GACF;AAAA,QACA,gBAAAG,OAAC,eAAY,WAAU,aACrB;AAAA,0BAAAA,OAAC,SAAI,WAAU,cACb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,OAAO;AAAA,gBACP,UAAU,CAACG,OAAM,cAAcA,GAAE,OAAO,KAAK;AAAA,gBAC7C,aAAY;AAAA,gBACZ,YAAY,CAACA,OAAMA,GAAE,QAAQ,YAAYA,GAAE,eAAe,GAAG,WAAW;AAAA;AAAA,YAC1E;AAAA,YACA,gBAAAH,MAAC,UAAO,MAAK,UAAS,SAAS,YAAY,UAAU,CAAC,WAAW,KAAK,GACpE,0BAAAA,MAACJ,OAAA,EAAK,WAAU,WAAU,GAC5B;AAAA,aACF;AAAA,UAEC,SAAS,SAAS,SAAS,KAC1B,gBAAAK,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,yCAAwC,4BAAc;AAAA,YACrE,gBAAAA,MAAC,SAAI,WAAU,aACZ,mBAAS,SAAS,IAAI,CAAC,SAAS,UAC/B,gBAAAC,OAAC,SAAgB,WAAU,oEACzB;AAAA,8BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,gCAAAD,MAACF,cAAA,EAAY,WAAU,+BAA8B;AAAA,gBACrD,gBAAAE,MAAC,UAAK,WAAU,6BAA6B,mBAAQ;AAAA,iBACvD;AAAA,cACA,gBAAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS,MAAM,cAAc,KAAK;AAAA,kBAClC,WAAU;AAAA,kBAEV,0BAAAA,MAACH,SAAA,EAAO,WAAU,8BAA6B;AAAA;AAAA,cACjD;AAAA,iBAbQ,KAcV,CACD,GACH;AAAA,aACF;AAAA,WAEJ;AAAA,SACF;AAAA,MAGC,CAAC,oBACA,gBAAAI,OAAC,SAAI,WAAU,2CACZ;AAAA,oBACC,gBAAAD,MAAC,UAAO,MAAK,UAAS,SAAQ,WAAU,SAAS,UAAU,UAAU,cAAc,oBAEnF;AAAA,QAEF,gBAAAA,MAAC,UAAO,MAAK,UAAS,UAAU,gBAAgB,SAC7C,yBACC,gBAAAC,OAAAF,WAAA,EACE;AAAA,0BAAAC,MAAC,SAAI,WAAU,kEAAiE;AAAA,UAAM;AAAA,WAExF,IAEA,YAEJ;AAAA,SACF;AAAA,OAEJ;AAAA,KACF;AAEJ;;;ACtkBA,SAAgB,YAAAM,kBAAgB;;;ACFhC,2BAA4D;AAC5D,uBAAqC;AACrC,sBAAqB;AAErB,IAAM,WAAW,OAAO,UAAU;AAClC,IAAM,gBAAgB,MAAM,UAAU;AACtC,IAAM,iBAAiB,OAAO,UAAU;AACxC,IAAM,iBAAiB,OAAO,WAAW,cAAc,OAAO,UAAU,WAAW,MAAM;AACzF,IAAM,gBAAgB;AACtB,SAAS,YAAY,KAAK;AACxB,MAAI,OAAO,CAAC;AAAK,WAAO;AACxB,QAAM,iBAAiB,QAAQ,KAAK,IAAI,MAAM;AAC9C,SAAO,iBAAiB,OAAO,KAAK;AACtC;AACA,SAAS,iBAAiB,KAAK,eAAe,OAAO;AACnD,MAAI,OAAO,QAAQ,QAAQ,QAAQ,QAAQ;AAAO,WAAO,KAAK;AAC9D,QAAM,SAAS,OAAO;AACtB,MAAI,WAAW;AAAU,WAAO,YAAY,GAAG;AAC/C,MAAI,WAAW;AAAU,WAAO,eAAe,IAAI,GAAG,MAAM;AAC5D,MAAI,WAAW;AAAY,WAAO,gBAAgB,IAAI,QAAQ,eAAe;AAC7E,MAAI,WAAW;AAAU,WAAO,eAAe,KAAK,GAAG,EAAE,QAAQ,eAAe,YAAY;AAC5F,QAAM,MAAM,SAAS,KAAK,GAAG,EAAE,MAAM,GAAG,EAAE;AAC1C,MAAI,QAAQ;AAAQ,WAAO,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,IAAI,YAAY,GAAG;AAChF,MAAI,QAAQ,WAAW,eAAe;AAAO,WAAO,MAAM,cAAc,KAAK,GAAG,IAAI;AACpF,MAAI,QAAQ;AAAU,WAAO,eAAe,KAAK,GAAG;AACpD,SAAO;AACT;AACA,SAAS,WAAW,OAAO,cAAc;AACvC,MAAI,SAAS,iBAAiB,OAAO,YAAY;AACjD,MAAI,WAAW;AAAM,WAAO;AAC5B,SAAO,KAAK,UAAU,OAAO,SAAU,KAAKC,QAAO;AACjD,QAAIC,UAAS,iBAAiB,KAAK,GAAG,GAAG,YAAY;AACrD,QAAIA,YAAW;AAAM,aAAOA;AAC5B,WAAOD;AAAA,EACT,GAAG,CAAC;AACN;AAEA,SAAS,QAAQ,OAAO;AACtB,SAAO,SAAS,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK;AAC7C;AAEA,IAAI;AAAJ,IAAyB;AAAzB,IAA8C;AAC9C,IAAI,SAAS;AACb,sBAAsB,OAAO;AAC7B,IAAM,yBAAN,MAA6B;AAAA,EAC3B,YAAY,eAAe,OAAO,OAAO,MAAM;AAC7C,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,QAAQ;AACb,SAAK,mBAAmB,IAAI;AAC5B,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS,CAAC;AACf,SAAK,QAAQ,CAAC;AACd,YAAQ,aAAa,EAAE,QAAQ,SAAO;AACpC,UAAI,gBAAgB,QAAQ,GAAG,GAAG;AAChC,aAAK,OAAO,KAAK,GAAG,IAAI,MAAM;AAC9B,cAAM,cAAc,IAAI,MAAM,SAAS,IAAI,QAAQ,CAAC,GAAG;AACvD,aAAK,MAAM,KAAK,GAAG,WAAW;AAAA,MAChC,OAAO;AACL,aAAK,OAAO,KAAK,GAAG;AAAA,MACtB;AAAA,IACF,CAAC;AACD,SAAK,UAAU,KAAK,OAAO,SAAS,IAAI,GAAG,KAAK,OAAO,MAAM,qBAAqB,KAAK,OAAO,CAAC;AAAA,EACjG;AACF;AACA,sBAAsB,OAAO;AAC7B,uBAAuB,OAAO;AAC9B,IAAM,kBAAN,MAAM,yBAAwB,MAAM;AAAA,EAClC,OAAO,YAAY,SAAS,QAAQ;AAElC,UAAM,OAAO,OAAO,SAAS,OAAO,QAAQ;AAG5C,aAAS,OAAO,OAAO,CAAC,GAAG,QAAQ;AAAA,MACjC;AAAA,MACA,cAAc,OAAO;AAAA,IACvB,CAAC;AACD,QAAI,OAAO,YAAY;AAAU,aAAO,QAAQ,QAAQ,QAAQ,CAAC,GAAG,QAAQ,WAAW,OAAO,GAAG,CAAC,CAAC;AACnG,QAAI,OAAO,YAAY;AAAY,aAAO,QAAQ,MAAM;AACxD,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ,KAAK;AAClB,WAAO,OAAO,IAAI,SAAS;AAAA,EAC7B;AAAA,EACA,YAAY,eAAe,OAAO,OAAO,MAAM,cAAc;AAC3D,UAAM,eAAe,IAAI,uBAAuB,eAAe,OAAO,OAAO,IAAI;AACjF,QAAI,cAAc;AAChB,aAAO;AAAA,IACT;AACA,UAAM;AACN,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS,CAAC;AACf,SAAK,QAAQ,CAAC;AACd,SAAK,oBAAoB,IAAI;AAC7B,SAAK,OAAO,aAAa;AACzB,SAAK,UAAU,aAAa;AAC5B,SAAK,OAAO,aAAa;AACzB,SAAK,QAAQ,aAAa;AAC1B,SAAK,OAAO,aAAa;AACzB,SAAK,SAAS,aAAa;AAC3B,SAAK,QAAQ,aAAa;AAC1B,QAAI,MAAM,mBAAmB;AAC3B,YAAM,kBAAkB,MAAM,gBAAe;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,QAAQ,mBAAmB,EAAE,MAAM;AACjC,WAAO,uBAAuB,OAAO,WAAW,EAAE,IAAI,KAAK,MAAM,OAAO,WAAW,EAAE,IAAI;AAAA,EAC3F;AACF;AAEA,IAAI,QAAQ;AAAA,EACV,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS,CAAC;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,MAAM;AACJ,UAAM,UAAU,iBAAiB,QAAQ,kBAAkB,QAAQ,2BAA2B,WAAW,eAAe,IAAI,CAAC,SAAS;AACtI,WAAO,SAAS,UAAU,GAAG,IAAI,gBAAgB,IAAI,uCAA4C,WAAW,OAAO,IAAI,CAAC,OAAO,UAAU,GAAG,IAAI,+DAAoE,WAAW,OAAO,IAAI,CAAC,OAAO;AAAA,EACpP;AACF;AACA,IAAI,SAAS;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,KAAK;AAAA,EACL,SAAS;AAAA,EACT,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,UAAU;AAAA,EACV,oBAAoB;AAAA,EACpB,iBAAiB;AAAA,EACjB,MAAM;AAAA,EACN,WAAW;AAAA,EACX,WAAW;AACb;AACA,IAAI,SAAS;AAAA,EACX,KAAK;AAAA,EACL,KAAK;AAAA,EACL,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AACX;AACA,IAAI,OAAO;AAAA,EACT,KAAK;AAAA,EACL,KAAK;AACP;AACA,IAAI,UAAU;AAAA,EACZ,SAAS;AACX;AACA,IAAI,SAAS;AAAA,EACX,WAAW;AAAA,EACX,OAAO;AACT;AACA,IAAI,QAAQ;AAAA,EACV,KAAK;AAAA,EACL,KAAK;AAAA,EACL,QAAQ;AACV;AACA,IAAI,QAAQ;AAAA,EACV,SAAS,YAAU;AACjB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,UAAM,UAAU,KAAK,MAAM;AAC3B,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,UAAI,MAAM,SAAS;AAAS,eAAO,GAAG,IAAI,wDAAwD,OAAO,YAAY,MAAM,MAAM,iBAAiB,WAAW,OAAO,IAAI,CAAC;AACzK,UAAI,MAAM,SAAS;AAAS,eAAO,GAAG,IAAI,yDAAyD,OAAO,YAAY,MAAM,MAAM,iBAAiB,WAAW,OAAO,IAAI,CAAC;AAAA,IAC5K;AACA,WAAO,gBAAgB,YAAY,MAAM,SAAS,MAAM;AAAA,EAC1D;AACF;AACA,IAAI,SAAS,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAED,IAAM,WAAW,SAAO,OAAO,IAAI;AAEnC,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,OAAO,YAAY,MAAM,QAAQ;AAC/B,QAAI,CAAC,OAAO,QAAQ,CAAC,OAAO;AAAW,YAAM,IAAI,UAAU,oEAAoE;AAC/H,QAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,QAAQ,OAAO,OAAO,aAAa,KAAK,IAAI,WAAW,OAAO,MAAM,WAAS,UAAU,EAAE;AAC7F,WAAO,IAAI,WAAU,MAAM,CAAC,QAAQ,WAAW;AAC7C,UAAI;AACJ,UAAI,SAAS,MAAM,GAAG,MAAM,IAAI,OAAO;AACvC,cAAQ,UAAU,UAAU,OAAO,SAAS,OAAO,MAAM,MAAM,OAAO,UAAU;AAAA,IAClF,CAAC;AAAA,EACH;AAAA,EACA,YAAY,MAAM,SAAS;AACzB,SAAK,KAAK;AACV,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,KAAK;AAAA,EACZ;AAAA,EACA,QAAQ,MAAM,SAAS;AACrB,QAAI,SAAS,KAAK,KAAK,IAAI;AAAA;AAAA,MAE3B,IAAI,SAAS,WAAW,OAAO,SAAS,QAAQ,OAAO,WAAW,OAAO,SAAS,QAAQ,QAAQ,WAAW,OAAO,SAAS,QAAQ,OAAO;AAAA,KAAC;AAC7I,QAAI,SAAS,KAAK,GAAG,QAAQ,MAAM,OAAO;AAC1C,QAAI,WAAW;AAAA,IAEf,WAAW,MAAM;AACf,aAAO;AAAA,IACT;AACA,QAAI,CAAC,SAAS,MAAM;AAAG,YAAM,IAAI,UAAU,wCAAwC;AACnF,WAAO,OAAO,QAAQ,OAAO;AAAA,EAC/B;AACF;AAEA,IAAM,WAAW;AAAA,EACf,SAAS;AAAA,EACT,OAAO;AACT;AACA,SAAS,SAAS,KAAK,SAAS;AAC9B,SAAO,IAAI,UAAU,KAAK,OAAO;AACnC;AACA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,KAAK,UAAU,CAAC,GAAG;AAC7B,SAAK,MAAM;AACX,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,MAAM;AACX,QAAI,OAAO,QAAQ;AAAU,YAAM,IAAI,UAAU,gCAAgC,GAAG;AACpF,SAAK,MAAM,IAAI,KAAK;AACpB,QAAI,QAAQ;AAAI,YAAM,IAAI,UAAU,gCAAgC;AACpE,SAAK,YAAY,KAAK,IAAI,CAAC,MAAM,SAAS;AAC1C,SAAK,UAAU,KAAK,IAAI,CAAC,MAAM,SAAS;AACxC,SAAK,YAAY,CAAC,KAAK,aAAa,CAAC,KAAK;AAC1C,QAAI,SAAS,KAAK,YAAY,SAAS,UAAU,KAAK,UAAU,SAAS,QAAQ;AACjF,SAAK,OAAO,KAAK,IAAI,MAAM,OAAO,MAAM;AACxC,SAAK,SAAS,KAAK,YAAQ,6BAAO,KAAK,MAAM,IAAI;AACjD,SAAK,MAAM,QAAQ;AAAA,EACrB;AAAA,EACA,SAAS,OAAO,QAAQ,SAAS;AAC/B,QAAI,SAAS,KAAK,YAAY,UAAU,KAAK,UAAU,QAAQ;AAC/D,QAAI,KAAK;AAAQ,eAAS,KAAK,OAAO,UAAU,CAAC,CAAC;AAClD,QAAI,KAAK;AAAK,eAAS,KAAK,IAAI,MAAM;AACtC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,KAAK,OAAO,SAAS;AACnB,WAAO,KAAK,SAAS,OAAO,WAAW,OAAO,SAAS,QAAQ,QAAQ,WAAW,OAAO,SAAS,QAAQ,OAAO;AAAA,EACnH;AAAA,EACA,UAAU;AACR,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAO;AAAA,MACL,MAAM;AAAA,MACN,KAAK,KAAK;AAAA,IACZ;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,OAAO,KAAK,GAAG;AAAA,EACxB;AAAA,EACA,OAAO,MAAM,OAAO;AAClB,WAAO,SAAS,MAAM;AAAA,EACxB;AACF;AAGA,UAAU,UAAU,aAAa;AAEjC,IAAM,WAAW,WAAS,SAAS;AAEnC,SAAS,iBAAiB,QAAQ;AAChC,WAAS,SAAS;AAAA,IAChB;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG,OAAO,MAAM;AACd,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA,aAAa,OAAO,KAAK;AAAA,MACzB,oBAAoB,OAAO,KAAK;AAAA,IAClC,IAAI;AACJ,UAAM,iBAAiB;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,aAAS,YAAY,YAAY,CAAC,GAAG;AACnC,YAAM,aAAa,cAAc,OAAO,OAAO;AAAA,QAC7C;AAAA,QACA;AAAA,QACA,OAAO,OAAO,KAAK;AAAA,QACnB,MAAM,UAAU,QAAQ;AAAA,QACxB,MAAM,OAAO;AAAA,QACb,mBAAmB,UAAU,qBAAqB;AAAA,MACpD,GAAG,QAAQ,UAAU,MAAM,GAAG,cAAc;AAC5C,YAAM,QAAQ,IAAI,gBAAgB,gBAAgB,YAAY,UAAU,WAAW,SAAS,UAAU,GAAG,OAAO,WAAW,MAAM,UAAU,QAAQ,MAAM,WAAW,iBAAiB;AACrL,YAAM,SAAS;AACf,aAAO;AAAA,IACT;AACA,UAAM,UAAU,aAAa,QAAQ;AACrC,QAAI,MAAM;AAAA,MACR;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,MAAM,QAAQ;AAAA,MACd;AAAA,MACA,QAAQ,MAAM;AACZ,eAAO,gBAAgB,MAAM,cAAc;AAAA,MAC7C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,UAAM,eAAe,kBAAgB;AACnC,UAAI,gBAAgB,QAAQ,YAAY;AAAG,gBAAQ,YAAY;AAAA,eAAW,CAAC;AAAc,gBAAQ,YAAY,CAAC;AAAA;AAAO,aAAK,IAAI;AAAA,IAChI;AACA,UAAM,cAAc,SAAO;AACzB,UAAI,gBAAgB,QAAQ,GAAG;AAAG,gBAAQ,GAAG;AAAA;AAAO,cAAM,GAAG;AAAA,IAC/D;AACA,UAAM,aAAa,cAAc,SAAS,KAAK;AAC/C,QAAI,YAAY;AACd,aAAO,aAAa,IAAI;AAAA,IAC1B;AACA,QAAI;AACJ,QAAI;AACF,UAAI;AACJ,eAAS,KAAK,KAAK,KAAK,OAAO,GAAG;AAClC,UAAI,SAAS,UAAU,WAAW,OAAO,SAAS,QAAQ,UAAU,YAAY;AAC9E,YAAI,QAAQ,MAAM;AAChB,gBAAM,IAAI,MAAM,6BAA6B,IAAI,IAAI,gHAAqH;AAAA,QAC5K;AACA,eAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,cAAc,WAAW;AAAA,MAC/D;AAAA,IACF,SAAS,KAAK;AACZ,kBAAY,GAAG;AACf;AAAA,IACF;AACA,iBAAa,MAAM;AAAA,EACrB;AACA,WAAS,UAAU;AACnB,SAAO;AACT;AAGA,SAAS,cAAc,QAAQ,SAAS;AACtC,MAAI,CAAC;AAAQ,WAAO;AACpB,aAAW,OAAO,OAAO,KAAK,MAAM,GAAG;AACrC,WAAO,GAAG,IAAI,gBAAgB,OAAO,GAAG,GAAG,OAAO;AAAA,EACpD;AACA,SAAO;AACT;AACA,SAAS,gBAAgB,MAAM,SAAS;AACtC,SAAO,UAAU,MAAM,IAAI,IAAI,KAAK,SAAS,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,OAAO,IAAI;AACjG;AAEA,SAAS,MAAM,QAAQ,MAAM,OAAO,UAAU,OAAO;AACnD,MAAI,QAAQ,UAAU;AAGtB,MAAI,CAAC;AAAM,WAAO;AAAA,MAChB;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AACA,oCAAQ,MAAM,CAAC,OAAO,WAAWE,aAAY;AAC3C,QAAI,OAAO,YAAY,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,IAAI;AAC1D,aAAS,OAAO,QAAQ;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,QAAI,UAAU,OAAO,SAAS;AAC9B,QAAI,MAAMA,WAAU,SAAS,MAAM,EAAE,IAAI;AACzC,QAAI,OAAO,aAAa,SAAS;AAC/B,UAAI,WAAW,CAACA;AAAS,cAAM,IAAI,MAAM,uEAAuE,aAAa,uDAAuD,aAAa,MAAM;AACvM,UAAI,SAAS,OAAO,MAAM,QAAQ;AAChC,cAAM,IAAI,MAAM,oDAAoD,KAAK,kBAAkB,IAAI,6CAAkD;AAAA,MACnJ;AACA,eAAS;AACT,cAAQ,SAAS,MAAM,GAAG;AAC1B,eAAS,UAAU,OAAO,KAAK,MAAM,GAAG,IAAI,OAAO;AAAA,IACrD;AAMA,QAAI,CAACA,UAAS;AACZ,UAAI,CAAC,OAAO,UAAU,CAAC,OAAO,OAAO,IAAI;AAAG,cAAM,IAAI,MAAM,yCAAyC,IAAI,iBAAsB,aAAa,sBAAsB,OAAO,IAAI,IAAI;AACjL,eAAS;AACT,cAAQ,SAAS,MAAM,IAAI;AAC3B,eAAS,OAAO,OAAO,IAAI;AAAA,IAC7B;AACA,eAAW;AACX,oBAAgB,YAAY,MAAM,QAAQ,MAAM,MAAM;AAAA,EACxD,CAAC;AACD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,YAAY;AAAA,EACd;AACF;AAKA,IAAM,eAAN,MAAM,sBAAqB,IAAI;AAAA,EAC7B,WAAW;AACT,UAAM,cAAc,CAAC;AACrB,eAAW,QAAQ,KAAK,OAAO,GAAG;AAChC,kBAAY,KAAK,UAAU,MAAM,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI;AAAA,IACjE;AACA,WAAO;AAAA,EACT;AAAA,EACA,WAAW,SAAS;AAClB,QAAI,SAAS,CAAC;AACd,eAAW,QAAQ,KAAK,OAAO,GAAG;AAChC,aAAO,KAAK,QAAQ,IAAI,CAAC;AAAA,IAC3B;AACA,WAAO;AAAA,EACT;AAAA,EACA,QAAQ;AACN,WAAO,IAAI,cAAa,KAAK,OAAO,CAAC;AAAA,EACvC;AAAA,EACA,MAAM,UAAU,aAAa;AAC3B,UAAM,OAAO,KAAK,MAAM;AACxB,aAAS,QAAQ,WAAS,KAAK,IAAI,KAAK,CAAC;AACzC,gBAAY,QAAQ,WAAS,KAAK,OAAO,KAAK,CAAC;AAC/C,WAAO;AAAA,EACT;AACF;AAGA,SAAS,MAAM,KAAK,OAAO,oBAAI,IAAI,GAAG;AACpC,MAAI,SAAS,GAAG,KAAK,CAAC,OAAO,OAAO,QAAQ;AAAU,WAAO;AAC7D,MAAI,KAAK,IAAI,GAAG;AAAG,WAAO,KAAK,IAAI,GAAG;AACtC,MAAI;AACJ,MAAI,eAAe,MAAM;AAEvB,WAAO,IAAI,KAAK,IAAI,QAAQ,CAAC;AAC7B,SAAK,IAAI,KAAK,IAAI;AAAA,EACpB,WAAW,eAAe,QAAQ;AAEhC,WAAO,IAAI,OAAO,GAAG;AACrB,SAAK,IAAI,KAAK,IAAI;AAAA,EACpB,WAAW,MAAM,QAAQ,GAAG,GAAG;AAE7B,WAAO,IAAI,MAAM,IAAI,MAAM;AAC3B,SAAK,IAAI,KAAK,IAAI;AAClB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAK,WAAK,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,IAAI;AAAA,EACnE,WAAW,eAAe,KAAK;AAE7B,WAAO,oBAAI,IAAI;AACf,SAAK,IAAI,KAAK,IAAI;AAClB,eAAW,CAACC,IAAGC,EAAC,KAAK,IAAI,QAAQ;AAAG,WAAK,IAAID,IAAG,MAAMC,IAAG,IAAI,CAAC;AAAA,EAChE,WAAW,eAAe,KAAK;AAE7B,WAAO,oBAAI,IAAI;AACf,SAAK,IAAI,KAAK,IAAI;AAClB,eAAWA,MAAK;AAAK,WAAK,IAAI,MAAMA,IAAG,IAAI,CAAC;AAAA,EAC9C,WAAW,eAAe,QAAQ;AAEhC,WAAO,CAAC;AACR,SAAK,IAAI,KAAK,IAAI;AAClB,eAAW,CAACD,IAAGC,EAAC,KAAK,OAAO,QAAQ,GAAG;AAAG,WAAKD,EAAC,IAAI,MAAMC,IAAG,IAAI;AAAA,EACnE,OAAO;AACL,UAAM,MAAM,mBAAmB,GAAG,EAAE;AAAA,EACtC;AACA,SAAO;AACT;AAOA,SAAS,mBAAmB,MAAM;AAChC,MAAI,EAAE,QAAQ,QAAQ,KAAK,SAAS;AAClC,WAAO;AAAA,EACT;AAGA,QAAM,WAAW,CAAC;AAElB,MAAI,iBAAiB;AAErB,MAAI,aAAa;AAEjB,MAAI,WAAW;AACf,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,OAAO,KAAK,CAAC;AACnB,QAAI,SAAS,OAAO,CAAC,UAAU;AAE7B,UAAI,gBAAgB;AAClB,iBAAS,KAAK,GAAG,eAAe,MAAM,GAAG,EAAE,OAAO,OAAO,CAAC;AAC1D,yBAAiB;AAAA,MACnB;AACA,mBAAa;AACb;AAAA,IACF;AACA,QAAI,SAAS,OAAO,CAAC,UAAU;AAC7B,UAAI,gBAAgB;AAElB,YAAI,QAAQ,KAAK,cAAc,GAAG;AAChC,mBAAS,KAAK,cAAc;AAAA,QAC9B,OAAO;AAEL,mBAAS,KAAK,eAAe,QAAQ,UAAU,EAAE,CAAC;AAAA,QACpD;AACA,yBAAiB;AAAA,MACnB;AACA,mBAAa;AACb;AAAA,IACF;AACA,QAAI,SAAS,KAAK;AAEhB,iBAAW,CAAC;AACZ;AAAA,IACF;AACA,QAAI,SAAS,OAAO,CAAC,cAAc,CAAC,UAAU;AAE5C,UAAI,gBAAgB;AAClB,iBAAS,KAAK,cAAc;AAC5B,yBAAiB;AAAA,MACnB;AACA;AAAA,IACF;AACA,sBAAkB;AAAA,EACpB;AAGA,MAAI,gBAAgB;AAClB,aAAS,KAAK,GAAG,eAAe,MAAM,GAAG,EAAE,OAAO,OAAO,CAAC;AAAA,EAC5D;AACA,SAAO;AACT;AACA,SAAS,qBAAqB,OAAO,YAAY;AAC/C,QAAM,OAAO,aAAa,GAAG,UAAU,IAAI,MAAM,IAAI,KAAK,MAAM;AAChE,SAAO,MAAM,OAAO,IAAI,UAAQ;AAAA,IAC9B,SAAS;AAAA,IACT,MAAM,mBAAmB,IAAI;AAAA,EAC/B,EAAE;AACJ;AACA,SAAS,0BAA0B,OAAO,YAAY;AACpD,MAAI;AACJ,MAAI,GAAG,eAAe,MAAM,UAAU,QAAQ,aAAa,WAAW,MAAM,OAAO,QAAQ;AACzF,WAAO,qBAAqB,OAAO,UAAU;AAAA,EAC/C;AACA,QAAM,OAAO,aAAa,GAAG,UAAU,IAAI,MAAM,IAAI,KAAK,MAAM;AAChE,SAAO,MAAM,MAAM,QAAQ,SAAO,0BAA0B,KAAK,IAAI,CAAC;AACxE;AAIA,IAAM,SAAN,MAAa;AAAA,EACX,YAAY,SAAS;AACnB,SAAK,OAAO;AACZ,SAAK,OAAO,CAAC;AACb,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,aAAa,CAAC;AACnB,SAAK,UAAU;AACf,SAAK,gBAAgB,CAAC;AACtB,SAAK,aAAa,IAAI,aAAa;AACnC,SAAK,aAAa,IAAI,aAAa;AACnC,SAAK,iBAAiB,uBAAO,OAAO,IAAI;AACxC,SAAK,aAAa;AAClB,SAAK,OAAO;AACZ,SAAK,QAAQ,CAAC;AACd,SAAK,aAAa,CAAC;AACnB,SAAK,aAAa,MAAM;AACtB,WAAK,UAAU,MAAM,OAAO;AAAA,IAC9B,CAAC;AACD,SAAK,OAAO,QAAQ;AACpB,SAAK,aAAa,QAAQ;AAC1B,SAAK,OAAO,OAAO,OAAO;AAAA,MACxB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA,IACV,GAAG,WAAW,OAAO,SAAS,QAAQ,IAAI;AAC1C,SAAK,aAAa,OAAK;AACrB,QAAE,YAAY;AAAA,IAChB,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,MAAM;AACV,QAAI,KAAK,SAAS;AAChB,UAAI;AAAM,eAAO,OAAO,KAAK,MAAM,IAAI;AACvC,aAAO;AAAA,IACT;AAIA,UAAM,OAAO,OAAO,OAAO,OAAO,eAAe,IAAI,CAAC;AAGtD,SAAK,OAAO,KAAK;AACjB,SAAK,aAAa,KAAK;AACvB,SAAK,aAAa,KAAK,WAAW,MAAM;AACxC,SAAK,aAAa,KAAK,WAAW,MAAM;AACxC,SAAK,gBAAgB,OAAO,OAAO,CAAC,GAAG,KAAK,aAAa;AACzD,SAAK,iBAAiB,OAAO,OAAO,CAAC,GAAG,KAAK,cAAc;AAG3D,SAAK,OAAO,CAAC,GAAG,KAAK,IAAI;AACzB,SAAK,aAAa,CAAC,GAAG,KAAK,UAAU;AACrC,SAAK,QAAQ,CAAC,GAAG,KAAK,KAAK;AAC3B,SAAK,aAAa,CAAC,GAAG,KAAK,UAAU;AACrC,SAAK,OAAO,MAAM,OAAO,OAAO,CAAC,GAAG,KAAK,MAAM,IAAI,CAAC;AACpD,WAAO;AAAA,EACT;AAAA,EACA,MAAM,OAAO;AACX,QAAI,OAAO,KAAK,MAAM;AACtB,SAAK,KAAK,QAAQ;AAClB,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,MAAM;AACZ,QAAI,KAAK,WAAW;AAAG,aAAO,KAAK,KAAK;AACxC,QAAI,OAAO,KAAK,MAAM;AACtB,SAAK,KAAK,OAAO,OAAO,OAAO,KAAK,KAAK,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC;AAC5D,WAAO;AAAA,EACT;AAAA,EACA,aAAa,IAAI;AACf,QAAI,SAAS,KAAK;AAClB,SAAK,UAAU;AACf,QAAI,SAAS,GAAG,IAAI;AACpB,SAAK,UAAU;AACf,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ;AACb,QAAI,CAAC,UAAU,WAAW;AAAM,aAAO;AACvC,QAAI,OAAO,SAAS,KAAK,QAAQ,KAAK,SAAS;AAAS,YAAM,IAAI,UAAU,wDAAwD,KAAK,IAAI,QAAQ,OAAO,IAAI,EAAE;AAClK,QAAI,OAAO;AACX,QAAI,WAAW,OAAO,MAAM;AAC5B,UAAM,aAAa,OAAO,OAAO,CAAC,GAAG,KAAK,MAAM,SAAS,IAAI;AAC7D,aAAS,OAAO;AAChB,aAAS,gBAAgB,OAAO,OAAO,CAAC,GAAG,KAAK,eAAe,SAAS,aAAa;AAIrF,aAAS,aAAa,KAAK,WAAW,MAAM,OAAO,YAAY,OAAO,UAAU;AAChF,aAAS,aAAa,KAAK,WAAW,MAAM,OAAO,YAAY,OAAO,UAAU;AAGhF,aAAS,QAAQ,KAAK;AACtB,aAAS,iBAAiB,KAAK;AAI/B,aAAS,aAAa,UAAQ;AAC5B,aAAO,MAAM,QAAQ,QAAM;AACzB,aAAK,KAAK,GAAG,OAAO;AAAA,MACtB,CAAC;AAAA,IACH,CAAC;AACD,aAAS,aAAa,CAAC,GAAG,KAAK,YAAY,GAAG,SAAS,UAAU;AACjE,WAAO;AAAA,EACT;AAAA,EACA,OAAOA,IAAG;AACR,QAAIA,MAAK,MAAM;AACb,UAAI,KAAK,KAAK,YAAYA,OAAM;AAAM,eAAO;AAC7C,UAAI,KAAK,KAAK,YAAYA,OAAM;AAAW,eAAO;AAClD,aAAO;AAAA,IACT;AACA,WAAO,KAAK,WAAWA,EAAC;AAAA,EAC1B;AAAA,EACA,QAAQ,SAAS;AACf,QAAI,SAAS;AACb,QAAI,OAAO,WAAW,QAAQ;AAC5B,UAAI,aAAa,OAAO;AACxB,eAAS,OAAO,MAAM;AACtB,aAAO,aAAa,CAAC;AACrB,eAAS,WAAW,OAAO,CAAC,YAAY,cAAc,UAAU,QAAQ,YAAY,OAAO,GAAG,MAAM;AACpG,eAAS,OAAO,QAAQ,OAAO;AAAA,IACjC;AACA,WAAO;AAAA,EACT;AAAA,EACA,eAAe,SAAS;AACtB,QAAI,iBAAiB,qBAAqB,oBAAoB;AAC9D,WAAO,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MAChC,MAAM,QAAQ,QAAQ,CAAC;AAAA,MACvB,SAAS,kBAAkB,QAAQ,WAAW,OAAO,kBAAkB,KAAK,KAAK;AAAA,MACjF,aAAa,sBAAsB,QAAQ,eAAe,OAAO,sBAAsB,KAAK,KAAK;AAAA,MACjG,YAAY,qBAAqB,QAAQ,cAAc,OAAO,qBAAqB,KAAK,KAAK;AAAA,MAC7F,oBAAoB,wBAAwB,QAAQ,sBAAsB,OAAO,wBAAwB,KAAK,KAAK;AAAA,IACrH,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAMA,KAAK,OAAO,UAAU,CAAC,GAAG;AACxB,QAAI,iBAAiB,KAAK,QAAQ,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MAC3D;AAAA;AAAA;AAAA,IAGF,CAAC,CAAC;AAEF,QAAI,mBAAmB,QAAQ,WAAW;AAC1C,QAAI,SAAS,eAAe,MAAM,OAAO,OAAO;AAChD,QAAI,QAAQ,WAAW,SAAS,CAAC,eAAe,OAAO,MAAM,GAAG;AAC9D,UAAI,oBAAoB,SAAS,MAAM,GAAG;AACxC,eAAO;AAAA,MACT;AACA,UAAI,iBAAiB,WAAW,KAAK;AACrC,UAAI,kBAAkB,WAAW,MAAM;AACvC,YAAM,IAAI,UAAU,gBAAgB,QAAQ,QAAQ,OAAO,kEAAuE,eAAe,IAAI;AAAA;AAAA,mBAAgC,cAAc;AAAA,KAAS,oBAAoB,iBAAiB,mBAAmB,eAAe,KAAK,GAAG;AAAA,IAC7R;AACA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,UAAU,SAAS;AACvB,QAAI,QAAQ,aAAa,SAAY,WAAW,KAAK,WAAW,OAAO,CAAC,WAAW,OAAO,GAAG,KAAK,MAAM,WAAW,UAAU,MAAM,OAAO,GAAG,QAAQ;AACrJ,QAAI,UAAU,QAAW;AACvB,cAAQ,KAAK,WAAW,OAAO;AAAA,IACjC;AACA,WAAO;AAAA,EACT;AAAA,EACA,UAAU,QAAQ,UAAU,CAAC,GAAG,OAAO,MAAM;AAC3C,QAAI;AAAA,MACF;AAAA,MACA,gBAAgB;AAAA,MAChB,SAAS,KAAK,KAAK;AAAA,IACrB,IAAI;AACJ,QAAI,QAAQ;AACZ,QAAI,CAAC,QAAQ;AACX,cAAQ,KAAK,MAAM,OAAO,OAAO,OAAO;AAAA,QACtC,QAAQ;AAAA,MACV,GAAG,OAAO,CAAC;AAAA,IACb;AACA,QAAI,eAAe,CAAC;AACpB,aAAS,QAAQ,OAAO,OAAO,KAAK,aAAa,GAAG;AAClD,UAAI;AAAM,qBAAa,KAAK,IAAI;AAAA,IAClC;AACA,SAAK,SAAS;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,IACT,GAAG,OAAO,mBAAiB;AAEzB,UAAI,cAAc,QAAQ;AACxB,eAAO,KAAK,eAAe,KAAK;AAAA,MAClC;AACA,WAAK,SAAS;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,KAAK;AAAA,MACd,GAAG,OAAO,IAAI;AAAA,IAChB,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS,YAAY,OAAO,MAAM;AAChC,QAAI,QAAQ;AACZ,QAAI;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,YAAY,SAAO;AACrB,UAAI;AAAO;AACX,cAAQ;AACR,YAAM,KAAK,KAAK;AAAA,IAClB;AACA,QAAI,WAAW,SAAO;AACpB,UAAI;AAAO;AACX,cAAQ;AACR,WAAK,KAAK,KAAK;AAAA,IACjB;AACA,QAAI,QAAQ,MAAM;AAClB,QAAI,eAAe,CAAC;AACpB,QAAI,CAAC;AAAO,aAAO,SAAS,CAAC,CAAC;AAC9B,QAAI,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACV;AACA,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAM,OAAO,MAAM,CAAC;AACpB,WAAK,MAAM,WAAW,SAAS,cAAc,KAAK;AAChD,YAAI,KAAK;AACP,gBAAM,QAAQ,GAAG,IAAI,aAAa,KAAK,GAAG,GAAG,IAAI,aAAa,KAAK,GAAG;AAAA,QACxE;AACA,YAAI,EAAE,SAAS,GAAG;AAChB,mBAAS,YAAY;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,aAAa;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG;AACD,UAAMD,KAAI,OAAO,OAAO,MAAM;AAC9B,QAAIA,MAAK,MAAM;AACb,YAAM,UAAU,sDAAsD;AAAA,IACxE;AACA,UAAME,WAAU,OAAOF,OAAM;AAC7B,QAAI,QAAQ,OAAOA,EAAC;AACpB,UAAM,cAAc,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA;AAAA;AAAA;AAAA,MAI7C,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA,eAAe,eAAeA,EAAC;AAAA;AAAA;AAAA,MAG/B,KAAK;AAAA;AAAA,MAEL,CAACE,WAAU,UAAU,KAAK,GAAGF;AAAA,MAC7B,MAAME,YAAWF,GAAE,SAAS,GAAG,IAAI,GAAG,cAAc,EAAE,IAAIE,WAAUF,KAAI,IAAIA,EAAC,GAAG,OAAO,aAAa,GAAG,UAAU,MAAM,MAAM;AAAA,IAC/H,CAAC;AACD,WAAO,CAAC,GAAG,OAAO,SAAS,KAAK,QAAQ,WAAW,EAAE,UAAU,OAAO,aAAa,OAAO,IAAI;AAAA,EAChG;AAAA,EACA,SAAS,OAAO,SAAS;AACvB,QAAI;AACJ,QAAI,SAAS,KAAK,QAAQ,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MACnD;AAAA,IACF,CAAC,CAAC;AACF,QAAI,qBAAqB,yBAAyB,WAAW,OAAO,SAAS,QAAQ,sBAAsB,OAAO,yBAAyB,OAAO,KAAK;AACvJ,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW,OAAO,UAAU,OAAO,SAAS,CAAC,OAAO,WAAW;AAC1F,UAAI,gBAAgB,QAAQ,KAAK;AAAG,cAAM,QAAQ;AAClD,aAAO,KAAK;AAAA,IACd,GAAG,CAAC,QAAQ,cAAc;AACxB,UAAI,OAAO;AAAQ,eAAO,IAAI,gBAAgB,QAAQ,WAAW,QAAW,QAAW,iBAAiB,CAAC;AAAA;AAAO,gBAAQ,SAAS;AAAA,IACnI,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,aAAa,OAAO,SAAS;AAC3B,QAAI;AACJ,QAAI,SAAS,KAAK,QAAQ,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MACnD;AAAA,IACF,CAAC,CAAC;AACF,QAAI;AACJ,QAAI,qBAAqB,yBAAyB,WAAW,OAAO,SAAS,QAAQ,sBAAsB,OAAO,yBAAyB,OAAO,KAAK;AACvJ,WAAO,UAAU,OAAO,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MACjD,MAAM;AAAA,IACR,CAAC,GAAG,CAAC,OAAO,WAAW;AACrB,UAAI,gBAAgB,QAAQ,KAAK;AAAG,cAAM,QAAQ;AAClD,YAAM;AAAA,IACR,GAAG,CAAC,QAAQ,cAAc;AACxB,UAAI,OAAO;AAAQ,cAAM,IAAI,gBAAgB,QAAQ,OAAO,QAAW,QAAW,iBAAiB;AACnG,eAAS;AAAA,IACX,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,OAAO,SAAS;AACtB,WAAO,KAAK,SAAS,OAAO,OAAO,EAAE,KAAK,MAAM,MAAM,SAAO;AAC3D,UAAI,gBAAgB,QAAQ,GAAG;AAAG,eAAO;AACzC,YAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,YAAY,OAAO,SAAS;AAC1B,QAAI;AACF,WAAK,aAAa,OAAO,OAAO;AAChC,aAAO;AAAA,IACT,SAAS,KAAK;AACZ,UAAI,gBAAgB,QAAQ,GAAG;AAAG,eAAO;AACzC,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EACA,YAAY,SAAS;AACnB,QAAI,eAAe,KAAK,KAAK;AAC7B,QAAI,gBAAgB,MAAM;AACxB,aAAO;AAAA,IACT;AACA,WAAO,OAAO,iBAAiB,aAAa,aAAa,KAAK,MAAM,OAAO,IAAI,MAAM,YAAY;AAAA,EACnG;AAAA,EACA,WAAW,SAET;AACA,QAAI,SAAS,KAAK,QAAQ,WAAW,CAAC,CAAC;AACvC,WAAO,OAAO,YAAY,OAAO;AAAA,EACnC;AAAA,EACA,QAAQ,KAAK;AACX,QAAI,UAAU,WAAW,GAAG;AAC1B,aAAO,KAAK,YAAY;AAAA,IAC1B;AACA,QAAI,OAAO,KAAK,MAAM;AAAA,MACpB,SAAS;AAAA,IACX,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,OAAO,WAAW,MAAM;AACtB,WAAO,KAAK,MAAM;AAAA,MAChB,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAAA,EACA,YAAY,UAAU,SAAS;AAC7B,UAAM,OAAO,KAAK,MAAM;AAAA,MACtB;AAAA,IACF,CAAC;AACD,SAAK,cAAc,WAAW,iBAAiB;AAAA,MAC7C;AAAA,MACA,MAAM;AAAA,MACN,KAAK,OAAO;AACV,eAAO,UAAU,OAAO,KAAK,OAAO,KAAK,WAAW;AAAA,MACtD;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,YAAY,UAAU,SAAS;AAC7B,UAAM,OAAO,KAAK,MAAM;AAAA,MACtB;AAAA,IACF,CAAC;AACD,SAAK,cAAc,cAAc,iBAAiB;AAAA,MAChD;AAAA,MACA,MAAM;AAAA,MACN,KAAK,OAAO;AACV,eAAO,UAAU,SAAY,KAAK,OAAO,KAAK,WAAW;AAAA,MAC3D;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,WAAW;AACT,WAAO,KAAK,YAAY,IAAI;AAAA,EAC9B;AAAA,EACA,QAAQ,UAAU,MAAM,SAAS;AAC/B,WAAO,KAAK,YAAY,OAAO,OAAO;AAAA,EACxC;AAAA,EACA,WAAW;AACT,WAAO,KAAK,YAAY,IAAI;AAAA,EAC9B;AAAA,EACA,YAAY,UAAU,MAAM,SAAS;AACnC,WAAO,KAAK,YAAY,OAAO,OAAO;AAAA,EACxC;AAAA,EACA,SAAS,UAAU,MAAM,UAAU;AACjC,WAAO,KAAK,MAAM,EAAE,aAAa,UAAQ,KAAK,YAAY,OAAO,EAAE,QAAQ,OAAO,CAAC;AAAA,EACrF;AAAA,EACA,cAAc;AACZ,WAAO,KAAK,MAAM,EAAE,aAAa,UAAQ,KAAK,SAAS,EAAE,SAAS,CAAC;AAAA,EACrE;AAAA,EACA,UAAU,IAAI;AACZ,QAAI,OAAO,KAAK,MAAM;AACtB,SAAK,WAAW,KAAK,EAAE;AACvB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,QAAQ,MAAM;AACZ,QAAI;AACJ,QAAI,KAAK,WAAW,GAAG;AACrB,UAAI,OAAO,KAAK,CAAC,MAAM,YAAY;AACjC,eAAO;AAAA,UACL,MAAM,KAAK,CAAC;AAAA,QACd;AAAA,MACF,OAAO;AACL,eAAO,KAAK,CAAC;AAAA,MACf;AAAA,IACF,WAAW,KAAK,WAAW,GAAG;AAC5B,aAAO;AAAA,QACL,MAAM,KAAK,CAAC;AAAA,QACZ,MAAM,KAAK,CAAC;AAAA,MACd;AAAA,IACF,OAAO;AACL,aAAO;AAAA,QACL,MAAM,KAAK,CAAC;AAAA,QACZ,SAAS,KAAK,CAAC;AAAA,QACf,MAAM,KAAK,CAAC;AAAA,MACd;AAAA,IACF;AACA,QAAI,KAAK,YAAY;AAAW,WAAK,UAAU,MAAM;AACrD,QAAI,OAAO,KAAK,SAAS;AAAY,YAAM,IAAI,UAAU,iCAAiC;AAC1F,QAAI,OAAO,KAAK,MAAM;AACtB,QAAI,WAAW,iBAAiB,IAAI;AACpC,QAAI,cAAc,KAAK,aAAa,KAAK,QAAQ,KAAK,eAAe,KAAK,IAAI,MAAM;AACpF,QAAI,KAAK,WAAW;AAClB,UAAI,CAAC,KAAK;AAAM,cAAM,IAAI,UAAU,mEAAmE;AAAA,IACzG;AACA,QAAI,KAAK;AAAM,WAAK,eAAe,KAAK,IAAI,IAAI,CAAC,CAAC,KAAK;AACvD,SAAK,QAAQ,KAAK,MAAM,OAAO,QAAM;AACnC,UAAI,GAAG,QAAQ,SAAS,KAAK,MAAM;AACjC,YAAI;AAAa,iBAAO;AACxB,YAAI,GAAG,QAAQ,SAAS,SAAS,QAAQ;AAAM,iBAAO;AAAA,MACxD;AACA,aAAO;AAAA,IACT,CAAC;AACD,SAAK,MAAM,KAAK,QAAQ;AACxB,WAAO;AAAA,EACT;AAAA,EACA,KAAKG,OAAM,SAAS;AAClB,QAAI,CAAC,MAAM,QAAQA,KAAI,KAAK,OAAOA,UAAS,UAAU;AACpD,gBAAUA;AACV,MAAAA,QAAO;AAAA,IACT;AACA,QAAI,OAAO,KAAK,MAAM;AACtB,QAAI,OAAO,QAAQA,KAAI,EAAE,IAAI,SAAO,IAAI,UAAU,GAAG,CAAC;AACtD,SAAK,QAAQ,SAAO;AAElB,UAAI,IAAI;AAAW,aAAK,KAAK,KAAK,IAAI,GAAG;AAAA,IAC3C,CAAC;AACD,SAAK,WAAW,KAAK,OAAO,YAAY,aAAa,IAAI,UAAU,MAAM,OAAO,IAAI,UAAU,YAAY,MAAM,OAAO,CAAC;AACxH,WAAO;AAAA,EACT;AAAA,EACA,UAAU,SAAS;AACjB,QAAI,OAAO,KAAK,MAAM;AACtB,SAAK,cAAc,YAAY,iBAAiB;AAAA,MAC9C;AAAA,MACA,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,YAAI,CAAC,KAAK,OAAO,WAAW,KAAK;AAAG,iBAAO,KAAK,YAAY;AAAA,YAC1D,QAAQ;AAAA,cACN,MAAM,KAAK,OAAO;AAAA,YACpB;AAAA,UACF,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,MAAM,OAAO,UAAU,MAAM,OAAO;AAClC,QAAI,OAAO,KAAK,MAAM;AACtB,UAAM,QAAQ,SAAO;AACnB,WAAK,WAAW,IAAI,GAAG;AACvB,WAAK,WAAW,OAAO,GAAG;AAAA,IAC5B,CAAC;AACD,SAAK,cAAc,YAAY,iBAAiB;AAAA,MAC9C;AAAA,MACA,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,YAAI,SAAS,KAAK,OAAO;AACzB,YAAI,WAAW,OAAO,WAAW,KAAK,OAAO;AAC7C,eAAO,SAAS,SAAS,KAAK,IAAI,OAAO,KAAK,YAAY;AAAA,UACxD,QAAQ;AAAA,YACN,QAAQ,MAAM,KAAK,MAAM,EAAE,KAAK,IAAI;AAAA,YACpC;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,SAAS,OAAO,UAAU,MAAM,UAAU;AACxC,QAAI,OAAO,KAAK,MAAM;AACtB,UAAM,QAAQ,SAAO;AACnB,WAAK,WAAW,IAAI,GAAG;AACvB,WAAK,WAAW,OAAO,GAAG;AAAA,IAC5B,CAAC;AACD,SAAK,cAAc,YAAY,iBAAiB;AAAA,MAC9C;AAAA,MACA,MAAM;AAAA,MACN,KAAK,OAAO;AACV,YAAI,WAAW,KAAK,OAAO;AAC3B,YAAI,WAAW,SAAS,WAAW,KAAK,OAAO;AAC/C,YAAI,SAAS,SAAS,KAAK;AAAG,iBAAO,KAAK,YAAY;AAAA,YACpD,QAAQ;AAAA,cACN,QAAQ,MAAM,KAAK,QAAQ,EAAE,KAAK,IAAI;AAAA,cACtC;AAAA,YACF;AAAA,UACF,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,QAAI,OAAO,KAAK,MAAM;AACtB,SAAK,KAAK,QAAQ;AAClB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAS,SAAS;AAChB,UAAM,QAAQ,UAAU,KAAK,QAAQ,OAAO,IAAI,MAAM,MAAM;AAC5D,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AACT,UAAM,cAAc;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS,KAAK,WAAW,OAAO;AAAA,MAChC,MAAM,KAAK;AAAA,MACX,OAAO,KAAK,WAAW,SAAS;AAAA,MAChC,UAAU,KAAK,WAAW,SAAS;AAAA,MACnC,OAAO,KAAK,MAAM,OAAO,CAACC,IAAG,KAAK,SAAS,KAAK,UAAU,OAAK,EAAE,QAAQ,SAASA,GAAE,QAAQ,IAAI,MAAM,GAAG,EAAE,IAAI,QAAM;AACnH,cAAM,SAAS,GAAG,QAAQ,UAAU,UAAU,cAAc,OAAO,OAAO,CAAC,GAAG,GAAG,QAAQ,MAAM,GAAG,OAAO,IAAI,GAAG,QAAQ;AACxH,eAAO;AAAA,UACL,MAAM,GAAG,QAAQ;AAAA,UACjB;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO;AAAA,EACT;AAAA,EACA,KAAK,WAAW,IAAI;AAClB,UAAM,SAAS;AACf,UAAM,WAAW;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,MAAM,SAAS,OAAO;AACpB,YAAI;AACF,gBAAM,SAAS,MAAM,OAAO,SAAS,OAAO;AAAA,YAC1C,YAAY;AAAA,UACd,CAAC;AACD,iBAAO;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF,SAAS,KAAK;AACZ,cAAI,eAAe,iBAAiB;AAClC,mBAAO;AAAA,cACL,QAAQ,0BAA0B,GAAG;AAAA,YACvC;AAAA,UACF;AACA,gBAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEA,OAAO,UAAU,kBAAkB;AACnC,WAAW,UAAU,CAAC,YAAY,cAAc;AAAG,SAAO,UAAU,GAAG,MAAM,IAAI,IAAI,SAAU,MAAM,OAAO,UAAU,CAAC,GAAG;AACxH,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,MAAM,MAAM,MAAM,OAAO,QAAQ,OAAO;AAC5C,WAAO,OAAO,MAAM,EAAE,UAAU,OAAO,UAAU,GAAG,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MAC7E;AAAA,MACA;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AACA,WAAW,SAAS,CAAC,UAAU,IAAI;AAAG,SAAO,UAAU,KAAK,IAAI,OAAO,UAAU;AACjF,WAAW,SAAS,CAAC,OAAO,MAAM;AAAG,SAAO,UAAU,KAAK,IAAI,OAAO,UAAU;AAEhF,IAAM,cAAc,MAAM;AAC1B,SAAS,SAAS,MAAM;AACtB,SAAO,IAAI,YAAY,IAAI;AAC7B;AACA,IAAM,cAAN,cAA0B,OAAO;AAAA,EAC/B,YAAY,MAAM;AAChB,UAAM,OAAO,SAAS,aAAa;AAAA,MACjC,MAAM;AAAA,MACN,OAAO;AAAA,IACT,IAAI,OAAO,OAAO;AAAA,MAChB,MAAM;AAAA,MACN,OAAO;AAAA,IACT,GAAG,IAAI,CAAC;AAAA,EACV;AACF;AACA,SAAS,YAAY,YAAY;AAEjC,SAAS,WAAW;AAClB,SAAO,IAAI,cAAc;AAC3B;AACA,IAAM,gBAAN,cAA4B,OAAO;AAAA,EACjC,cAAc;AACZ,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAMH,IAAG;AACP,YAAIA,cAAa;AAAS,UAAAA,KAAIA,GAAE,QAAQ;AACxC,eAAO,OAAOA,OAAM;AAAA,MACtB;AAAA,IACF,CAAC;AACD,SAAK,aAAa,MAAM;AACtB,WAAK,UAAU,CAAC,OAAO,SAAS;AAC9B,YAAI,KAAK,KAAK,UAAU,CAAC,KAAK,OAAO,KAAK,GAAG;AAC3C,cAAI,cAAc,KAAK,OAAO,KAAK,CAAC;AAAG,mBAAO;AAC9C,cAAI,eAAe,KAAK,OAAO,KAAK,CAAC;AAAG,mBAAO;AAAA,QACjD;AACA,eAAO;AAAA,MACT,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,OAAO,UAAU,QAAQ,SAAS;AAChC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA,KAAK,OAAO;AACV,eAAO,SAAS,KAAK,KAAK,UAAU;AAAA,MACtC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,UAAU,QAAQ,SAAS;AACjC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN,OAAO;AAAA,MACT;AAAA,MACA,KAAK,OAAO;AACV,eAAO,SAAS,KAAK,KAAK,UAAU;AAAA,MACtC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,KAAK;AACX,WAAO,MAAM,QAAQ,GAAG;AAAA,EAC1B;AAAA,EACA,QAAQ,KAAK;AACX,WAAO,MAAM,QAAQ,GAAG;AAAA,EAC1B;AAAA,EACA,WAAW;AACT,WAAO,MAAM,SAAS;AAAA,EACxB;AAAA,EACA,SAAS,KAAK;AACZ,WAAO,MAAM,SAAS,GAAG;AAAA,EAC3B;AAAA,EACA,cAAc;AACZ,WAAO,MAAM,YAAY;AAAA,EAC3B;AAAA,EACA,WAAW;AACT,WAAO,MAAM,SAAS;AAAA,EACxB;AAAA,EACA,YAAY,KAAK;AACf,WAAO,MAAM,YAAY,GAAG;AAAA,EAC9B;AAAA,EACA,MAAMA,IAAG;AACP,WAAO,MAAM,MAAMA,EAAC;AAAA,EACtB;AACF;AACA,SAAS,YAAY,cAAc;AAYnC,IAAM,SAAS;AACf,SAAS,aAAaI,OAAM;AAC1B,QAAM,SAAS,gBAAgBA,KAAI;AACnC,MAAI,CAAC;AAAQ,WAAO,KAAK,QAAQ,KAAK,MAAMA,KAAI,IAAI,OAAO;AAG3D,MAAI,OAAO,MAAM,UAAa,OAAO,cAAc,QAAW;AAC5D,WAAO,IAAI,KAAK,OAAO,MAAM,OAAO,OAAO,OAAO,KAAK,OAAO,MAAM,OAAO,QAAQ,OAAO,QAAQ,OAAO,WAAW,EAAE,QAAQ;AAAA,EAChI;AACA,MAAI,qBAAqB;AACzB,MAAI,OAAO,MAAM,OAAO,OAAO,cAAc,QAAW;AACtD,yBAAqB,OAAO,aAAa,KAAK,OAAO;AACrD,QAAI,OAAO,cAAc;AAAK,2BAAqB,IAAI;AAAA,EACzD;AACA,SAAO,KAAK,IAAI,OAAO,MAAM,OAAO,OAAO,OAAO,KAAK,OAAO,MAAM,OAAO,SAAS,oBAAoB,OAAO,QAAQ,OAAO,WAAW;AAC3I;AACA,SAAS,gBAAgBA,OAAM;AAC7B,MAAI,uBAAuB;AAC3B,QAAM,cAAc,OAAO,KAAKA,KAAI;AACpC,MAAI,CAAC;AAAa,WAAO;AAIzB,SAAO;AAAA,IACL,MAAM,SAAS,YAAY,CAAC,CAAC;AAAA,IAC7B,OAAO,SAAS,YAAY,CAAC,GAAG,CAAC,IAAI;AAAA,IACrC,KAAK,SAAS,YAAY,CAAC,GAAG,CAAC;AAAA,IAC/B,MAAM,SAAS,YAAY,CAAC,CAAC;AAAA,IAC7B,QAAQ,SAAS,YAAY,CAAC,CAAC;AAAA,IAC/B,QAAQ,SAAS,YAAY,CAAC,CAAC;AAAA,IAC/B,aAAa,YAAY,CAAC;AAAA;AAAA,MAE1B,SAAS,YAAY,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC;AAAA,QAAI;AAAA,IAC3C,YAAY,yBAAyB,gBAAgB,YAAY,CAAC,MAAM,OAAO,SAAS,cAAc,WAAW,OAAO,wBAAwB;AAAA,IAChJ,GAAG,YAAY,CAAC,KAAK;AAAA,IACrB,WAAW,YAAY,CAAC,KAAK;AAAA,IAC7B,YAAY,SAAS,YAAY,EAAE,CAAC;AAAA,IACpC,cAAc,SAAS,YAAY,EAAE,CAAC;AAAA,EACxC;AACF;AACA,SAAS,SAAS,KAAK,eAAe,GAAG;AACvC,SAAO,OAAO,GAAG,KAAK;AACxB;AAGA,IAAI;AAAA;AAAA,EAEJ;AAAA;AACA,IAAI;AAAA;AAAA,EAEJ;AAAA;AAGA,IAAI,QAAQ;AACZ,IAAI,eAAe;AACnB,IAAI,mBAAmB;AACvB,IAAI,YAAY;AAChB,IAAI,eAAe,IAAI,OAAO,GAAG,YAAY,IAAI,gBAAgB,aAAa,SAAS,GAAG;AAC1F,IAAI,YAAY,WAAS,SAAS,KAAK,KAAK,UAAU,MAAM,KAAK;AACjE,IAAI,eAAe,CAAC,EAAE,SAAS;AAC/B,SAAS,WAAW;AAClB,SAAO,IAAI,aAAa;AAC1B;AACA,IAAM,eAAN,cAA2B,OAAO;AAAA,EAChC,cAAc;AACZ,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,OAAO;AACX,YAAI,iBAAiB;AAAQ,kBAAQ,MAAM,QAAQ;AACnD,eAAO,OAAO,UAAU;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,SAAK,aAAa,MAAM;AACtB,WAAK,UAAU,CAAC,OAAO,SAAS;AAC9B,YAAI,CAAC,KAAK,KAAK,UAAU,KAAK,OAAO,KAAK;AAAG,iBAAO;AAGpD,YAAI,MAAM,QAAQ,KAAK;AAAG,iBAAO;AACjC,cAAM,WAAW,SAAS,QAAQ,MAAM,WAAW,MAAM,SAAS,IAAI;AAGtE,YAAI,aAAa;AAAc,iBAAO;AACtC,eAAO;AAAA,MACT,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,SAAS,SAAS;AAChB,WAAO,MAAM,SAAS,OAAO,EAAE,aAAa,YAAU,OAAO,KAAK;AAAA,MAChE,SAAS,WAAW,MAAM;AAAA,MAC1B,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,MAAM,WAAS,CAAC,CAAC,MAAM;AAAA,IACzB,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,cAAc;AACZ,WAAO,MAAM,YAAY,EAAE,aAAa,YAAU;AAChD,aAAO,QAAQ,OAAO,MAAM,OAAO,CAAAC,OAAKA,GAAE,QAAQ,SAAS,UAAU;AACrE,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,OAAO,QAAQ,UAAU,OAAO,QAAQ;AACtC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,MAAM,WAAW,KAAK,QAAQ,MAAM;AAAA,MAC7C;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,UAAU,OAAO,KAAK;AAC7B,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,MAAM,UAAU,KAAK,QAAQ,GAAG;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,UAAU,OAAO,KAAK;AAC7B,WAAO,KAAK,KAAK;AAAA,MACf,MAAM;AAAA,MACN,WAAW;AAAA,MACX;AAAA,MACA,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,MAAM,UAAU,KAAK,QAAQ,GAAG;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,OAAO,SAAS;AACtB,QAAI,qBAAqB;AACzB,QAAI;AACJ,QAAI;AACJ,QAAI,SAAS;AACX,UAAI,OAAO,YAAY,UAAU;AAC/B,SAAC;AAAA,UACC,qBAAqB;AAAA,UACrB;AAAA,UACA;AAAA,QACF,IAAI;AAAA,MACN,OAAO;AACL,kBAAU;AAAA,MACZ;AAAA,IACF;AACA,WAAO,KAAK,KAAK;AAAA,MACf,MAAM,QAAQ;AAAA,MACd,SAAS,WAAW,OAAO;AAAA,MAC3B,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,MAAM,WAAS,UAAU,MAAM,sBAAsB,MAAM,OAAO,KAAK,MAAM;AAAA,IAC/E,CAAC;AAAA,EACH;AAAA,EACA,MAAM,UAAU,OAAO,OAAO;AAC5B,WAAO,KAAK,QAAQ,QAAQ;AAAA,MAC1B,MAAM;AAAA,MACN;AAAA,MACA,oBAAoB;AAAA,IACtB,CAAC;AAAA,EACH;AAAA,EACA,IAAI,UAAU,OAAO,KAAK;AACxB,WAAO,KAAK,QAAQ,MAAM;AAAA,MACxB,MAAM;AAAA,MACN;AAAA,MACA,oBAAoB;AAAA,IACtB,CAAC;AAAA,EACH;AAAA,EACA,KAAK,UAAU,OAAO,MAAM;AAC1B,WAAO,KAAK,QAAQ,OAAO;AAAA,MACzB,MAAM;AAAA,MACN;AAAA,MACA,oBAAoB;AAAA,IACtB,CAAC;AAAA,EACH;AAAA,EACA,SAAS,SAAS;AAChB,QAAI,UAAU;AACd,QAAI;AACJ,QAAI;AACJ,QAAI,SAAS;AACX,UAAI,OAAO,YAAY,UAAU;AAC/B,SAAC;AAAA,UACC,UAAU;AAAA,UACV,cAAc;AAAA,UACd,YAAY;AAAA,QACd,IAAI;AAAA,MACN,OAAO;AACL,kBAAU;AAAA,MACZ;AAAA,IACF;AACA,WAAO,KAAK,QAAQ,cAAc;AAAA,MAChC,MAAM;AAAA,MACN,SAAS,WAAW,OAAO;AAAA,MAC3B,oBAAoB;AAAA,IACtB,CAAC,EAAE,KAAK;AAAA,MACN,MAAM;AAAA,MACN,SAAS,WAAW,OAAO;AAAA,MAC3B,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,MAAM,WAAS;AACb,YAAI,CAAC,SAAS;AAAa,iBAAO;AAClC,cAAM,SAAS,gBAAgB,KAAK;AACpC,YAAI,CAAC;AAAQ,iBAAO;AACpB,eAAO,CAAC,CAAC,OAAO;AAAA,MAClB;AAAA,IACF,CAAC,EAAE,KAAK;AAAA,MACN,MAAM;AAAA,MACN,SAAS,WAAW,OAAO;AAAA,MAC3B,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,MAAM,WAAS;AACb,YAAI,CAAC,SAAS,aAAa;AAAW,iBAAO;AAC7C,cAAM,SAAS,gBAAgB,KAAK;AACpC,YAAI,CAAC;AAAQ,iBAAO;AACpB,eAAO,OAAO,cAAc;AAAA,MAC9B;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,SAAS;AACP,WAAO,KAAK,QAAQ,EAAE,EAAE,UAAU,SAAO,QAAQ,OAAO,KAAK,GAAG;AAAA,EAClE;AAAA,EACA,KAAK,UAAU,OAAO,MAAM;AAC1B,WAAO,KAAK,UAAU,SAAO,OAAO,OAAO,IAAI,KAAK,IAAI,GAAG,EAAE,KAAK;AAAA,MAChE;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,UAAU,UAAU,OAAO,WAAW;AACpC,WAAO,KAAK,UAAU,WAAS,CAAC,SAAS,KAAK,IAAI,MAAM,YAAY,IAAI,KAAK,EAAE,KAAK;AAAA,MAClF;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,MAAM,WAAS,SAAS,KAAK,KAAK,UAAU,MAAM,YAAY;AAAA,IAChE,CAAC;AAAA,EACH;AAAA,EACA,UAAU,UAAU,OAAO,WAAW;AACpC,WAAO,KAAK,UAAU,WAAS,CAAC,SAAS,KAAK,IAAI,MAAM,YAAY,IAAI,KAAK,EAAE,KAAK;AAAA,MAClF;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,MAAM,WAAS,SAAS,KAAK,KAAK,UAAU,MAAM,YAAY;AAAA,IAChE,CAAC;AAAA,EACH;AACF;AACA,SAAS,YAAY,aAAa;AAMlC,IAAI,UAAU,WAAS,SAAS,CAAC;AACjC,SAAS,WAAW;AAClB,SAAO,IAAI,aAAa;AAC1B;AACA,IAAM,eAAN,cAA2B,OAAO;AAAA,EAChC,cAAc;AACZ,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,OAAO;AACX,YAAI,iBAAiB;AAAQ,kBAAQ,MAAM,QAAQ;AACnD,eAAO,OAAO,UAAU,YAAY,CAAC,QAAQ,KAAK;AAAA,MACpD;AAAA,IACF,CAAC;AACD,SAAK,aAAa,MAAM;AACtB,WAAK,UAAU,CAAC,OAAO,SAAS;AAC9B,YAAI,CAAC,KAAK,KAAK;AAAQ,iBAAO;AAC9B,YAAI,SAAS;AACb,YAAI,OAAO,WAAW,UAAU;AAC9B,mBAAS,OAAO,QAAQ,OAAO,EAAE;AACjC,cAAI,WAAW;AAAI,mBAAO;AAE1B,mBAAS,CAAC;AAAA,QACZ;AAIA,YAAI,KAAK,OAAO,MAAM,KAAK,WAAW;AAAM,iBAAO;AACnD,eAAO,WAAW,MAAM;AAAA,MAC1B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,UAAU,OAAO,KAAK;AAC7B,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,SAAS,KAAK,QAAQ,GAAG;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,UAAU,OAAO,KAAK;AAC7B,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,SAAS,KAAK,QAAQ,GAAG;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,SAAS,MAAM,UAAU,OAAO,UAAU;AACxC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,QAAQ,KAAK,QAAQ,IAAI;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,SAAS,MAAM,UAAU,OAAO,UAAU;AACxC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,QAAQ,KAAK,QAAQ,IAAI;AAAA,MAClC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,SAAS,MAAM,OAAO,UAAU;AAC9B,WAAO,KAAK,SAAS,GAAG,GAAG;AAAA,EAC7B;AAAA,EACA,SAAS,MAAM,OAAO,UAAU;AAC9B,WAAO,KAAK,SAAS,GAAG,GAAG;AAAA,EAC7B;AAAA,EACA,QAAQ,UAAU,OAAO,SAAS;AAChC,WAAO,KAAK,KAAK;AAAA,MACf,MAAM;AAAA,MACN;AAAA,MACA,YAAY;AAAA,MACZ,MAAM,SAAO,OAAO,UAAU,GAAG;AAAA,IACnC,CAAC;AAAA,EACH;AAAA,EACA,WAAW;AACT,WAAO,KAAK,UAAU,WAAS,CAAC,SAAS,KAAK,IAAI,QAAQ,IAAI,KAAK;AAAA,EACrE;AAAA,EACA,MAAM,QAAQ;AACZ,QAAI;AACJ,QAAI,QAAQ,CAAC,QAAQ,SAAS,SAAS,OAAO;AAC9C,eAAW,UAAU,WAAW,OAAO,SAAS,QAAQ,YAAY,MAAM;AAG1E,QAAI,WAAW;AAAS,aAAO,KAAK,SAAS;AAC7C,QAAI,MAAM,QAAQ,OAAO,YAAY,CAAC,MAAM;AAAI,YAAM,IAAI,UAAU,yCAAyC,MAAM,KAAK,IAAI,CAAC;AAC7H,WAAO,KAAK,UAAU,WAAS,CAAC,SAAS,KAAK,IAAI,KAAK,MAAM,EAAE,KAAK,IAAI,KAAK;AAAA,EAC/E;AACF;AACA,SAAS,YAAY,aAAa;AAMlC,IAAI,cAAc,oBAAI,KAAK,EAAE;AAC7B,IAAI,SAAS,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAC5D,SAAS,WAAW;AAClB,SAAO,IAAI,WAAW;AACxB;AACA,IAAM,aAAN,MAAM,oBAAmB,OAAO;AAAA,EAC9B,cAAc;AACZ,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAML,IAAG;AACP,eAAO,OAAOA,EAAC,KAAK,CAAC,MAAMA,GAAE,QAAQ,CAAC;AAAA,MACxC;AAAA,IACF,CAAC;AACD,SAAK,aAAa,MAAM;AACtB,WAAK,UAAU,CAAC,OAAO,SAAS;AAG9B,YAAI,CAAC,KAAK,KAAK,UAAU,KAAK,OAAO,KAAK,KAAK,UAAU;AAAM,iBAAO;AACtE,gBAAQ,aAAa,KAAK;AAG1B,eAAO,CAAC,MAAM,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,YAAW;AAAA,MACtD,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,aAAa,KAAK,MAAM;AACtB,QAAI;AACJ,QAAI,CAAC,UAAU,MAAM,GAAG,GAAG;AACzB,UAAI,OAAO,KAAK,KAAK,GAAG;AACxB,UAAI,CAAC,KAAK,WAAW,IAAI;AAAG,cAAM,IAAI,UAAU,KAAK,IAAI,+DAA+D;AACxH,cAAQ;AAAA,IACV,OAAO;AACL,cAAQ;AAAA,IACV;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,KAAK,UAAU,KAAK,KAAK;AAC3B,QAAI,QAAQ,KAAK,aAAa,KAAK,KAAK;AACxC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,SAAS,KAAK,QAAQ,KAAK;AAAA,MACpC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,UAAU,KAAK,KAAK;AAC3B,QAAI,QAAQ,KAAK,aAAa,KAAK,KAAK;AACxC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,SAAS,KAAK,QAAQ,KAAK;AAAA,MACpC;AAAA,IACF,CAAC;AAAA,EACH;AACF;AACA,WAAW,eAAe;AAC1B,SAAS,YAAY,WAAW;AAChC,SAAS,eAAe;AAGxB,SAAS,WAAW,QAAQ,gBAAgB,CAAC,GAAG;AAC9C,MAAI,QAAQ,CAAC;AACb,MAAI,QAAQ,oBAAI,IAAI;AACpB,MAAI,WAAW,IAAI,IAAI,cAAc,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AACjE,WAAS,QAAQ,SAAS,KAAK;AAC7B,QAAI,WAAO,4BAAM,OAAO,EAAE,CAAC;AAC3B,UAAM,IAAI,IAAI;AACd,QAAI,CAAC,SAAS,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE;AAAG,YAAM,KAAK,CAAC,KAAK,IAAI,CAAC;AAAA,EAC7D;AACA,aAAW,OAAO,OAAO,KAAK,MAAM,GAAG;AACrC,QAAI,QAAQ,OAAO,GAAG;AACtB,UAAM,IAAI,GAAG;AACb,QAAI,UAAU,MAAM,KAAK,KAAK,MAAM;AAAW,cAAQ,MAAM,MAAM,GAAG;AAAA,aAAW,SAAS,KAAK,KAAK,UAAU;AAAO,YAAM,KAAK,QAAQ,UAAQ,QAAQ,MAAM,GAAG,CAAC;AAAA,EACpK;AACA,SAAO,gBAAAM,QAAS,MAAM,MAAM,KAAK,KAAK,GAAG,KAAK,EAAE,QAAQ;AAC1D;AAEA,SAAS,UAAU,KAAK,KAAK;AAC3B,MAAI,MAAM;AACV,MAAI,KAAK,CAAC,KAAK,OAAO;AACpB,QAAI;AACJ,SAAK,YAAY,IAAI,SAAS,QAAQ,UAAU,SAAS,GAAG,GAAG;AAC7D,YAAM;AACN,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACD,SAAO;AACT;AACA,SAAS,eAAeJ,OAAM;AAC5B,SAAO,CAAC,GAAG,MAAM;AACf,WAAO,UAAUA,OAAM,CAAC,IAAI,UAAUA,OAAM,CAAC;AAAA,EAC/C;AACF;AAEA,IAAM,YAAY,CAAC,OAAO,GAAG,WAAW;AACtC,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO;AAAA,EACT;AACA,MAAI,SAAS;AACb,MAAI;AACF,aAAS,KAAK,MAAM,KAAK;AAAA,EAC3B,SAAS,KAAK;AAAA,EAEd;AACA,SAAO,OAAO,OAAO,MAAM,IAAI,SAAS;AAC1C;AAGA,SAAS,YAAY,QAAQ;AAC3B,MAAI,YAAY,QAAQ;AACtB,UAAM,UAAU,CAAC;AACjB,eAAW,CAAC,KAAK,WAAW,KAAK,OAAO,QAAQ,OAAO,MAAM,GAAG;AAC9D,cAAQ,GAAG,IAAI,YAAY,WAAW;AAAA,IACxC;AACA,WAAO,OAAO,UAAU,OAAO;AAAA,EACjC;AACA,MAAI,OAAO,SAAS,SAAS;AAC3B,UAAM,YAAY,OAAO,SAAS;AAClC,QAAI,UAAU;AAAW,gBAAU,YAAY,YAAY,UAAU,SAAS;AAC9E,WAAO;AAAA,EACT;AACA,MAAI,OAAO,SAAS,SAAS;AAC3B,WAAO,OAAO,SAAS,EAAE,MAAM;AAAA,MAC7B,OAAO,OAAO,KAAK,MAAM,IAAI,WAAW;AAAA,IAC1C,CAAC;AAAA,EACH;AACA,MAAI,cAAc,QAAQ;AACxB,WAAO,OAAO,SAAS;AAAA,EACzB;AACA,SAAO;AACT;AACA,IAAM,UAAU,CAAC,KAAKK,OAAM;AAC1B,QAAM,OAAO,CAAC,OAAG,oCAAcA,EAAC,CAAC;AACjC,MAAI,KAAK,WAAW;AAAG,WAAO,KAAK,CAAC,KAAK;AACzC,MAAI,OAAO,KAAK,IAAI;AACpB,MAAI,aAAS,iCAAO,2BAAK,IAAI,GAAG,IAAI,EAAE,GAAG;AACzC,SAAO,CAAC,EAAE,UAAU,QAAQ;AAC9B;AACA,IAAI,WAAW,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM;AAC9D,SAAS,QAAQ,KAAK,OAAO;AAC3B,MAAI,QAAQ,OAAO,KAAK,IAAI,MAAM;AAClC,SAAO,OAAO,KAAK,KAAK,EAAE,OAAO,SAAO,MAAM,QAAQ,GAAG,MAAM,EAAE;AACnE;AACA,IAAM,cAAc,eAAe,CAAC,CAAC;AACrC,SAAS,SAAS,MAAM;AACtB,SAAO,IAAI,aAAa,IAAI;AAC9B;AACA,IAAM,eAAN,cAA2B,OAAO;AAAA,EAChC,YAAY,MAAM;AAChB,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,OAAO;AACX,eAAO,SAAS,KAAK,KAAK,OAAO,UAAU;AAAA,MAC7C;AAAA,IACF,CAAC;AACD,SAAK,SAAS,uBAAO,OAAO,IAAI;AAChC,SAAK,cAAc;AACnB,SAAK,SAAS,CAAC;AACf,SAAK,iBAAiB,CAAC;AACvB,SAAK,aAAa,MAAM;AACtB,UAAI,MAAM;AACR,aAAK,MAAM,IAAI;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,MAAM,QAAQ,UAAU,CAAC,GAAG;AAC1B,QAAI;AACJ,QAAI,QAAQ,MAAM,MAAM,QAAQ,OAAO;AAGvC,QAAI,UAAU;AAAW,aAAO,KAAK,WAAW,OAAO;AACvD,QAAI,CAAC,KAAK,WAAW,KAAK;AAAG,aAAO;AACpC,QAAI,SAAS,KAAK;AAClB,QAAI,SAAS,wBAAwB,QAAQ,iBAAiB,OAAO,wBAAwB,KAAK,KAAK;AACvG,QAAI,QAAQ,CAAC,EAAE,OAAO,KAAK,QAAQ,OAAO,KAAK,KAAK,EAAE,OAAO,CAAAP,OAAK,CAAC,KAAK,OAAO,SAASA,EAAC,CAAC,CAAC;AAC3F,QAAI,oBAAoB,CAAC;AACzB,QAAI,eAAe,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,MAC5C,QAAQ;AAAA,MACR,cAAc,QAAQ,gBAAgB;AAAA,IACxC,CAAC;AACD,QAAI,YAAY;AAChB,eAAW,QAAQ,OAAO;AACxB,UAAI,QAAQ,OAAO,IAAI;AACvB,UAAI,SAAU,QAAQ;AACtB,UAAI,aAAa,MAAM,IAAI;AAC3B,UAAI,OAAO;AACT,YAAI;AAGJ,qBAAa,QAAQ,QAAQ,OAAO,GAAG,QAAQ,IAAI,MAAM,MAAM;AAC/D,gBAAQ,MAAM,QAAQ;AAAA,UACpB,OAAO;AAAA,UACP,SAAS,QAAQ;AAAA,UACjB,QAAQ;AAAA,QACV,CAAC;AACD,YAAI,YAAY,iBAAiB,SAAS,MAAM,OAAO;AACvD,YAAI,SAAS,aAAa,OAAO,SAAS,UAAU;AACpD,YAAI,aAAa,QAAQ,UAAU,OAAO;AACxC,sBAAY,aAAa,QAAQ;AACjC;AAAA,QACF;AACA,qBAAa,CAAC,QAAQ,gBAAgB,CAAC,SAAS,MAAM,KAAK,YAAY,YAAY,IAAI;AACvF,YAAI,eAAe,QAAW;AAC5B,4BAAkB,IAAI,IAAI;AAAA,QAC5B;AAAA,MACF,WAAW,UAAU,CAAC,OAAO;AAC3B,0BAAkB,IAAI,IAAI;AAAA,MAC5B;AACA,UAAI,WAAW,QAAQ,qBAAqB,kBAAkB,IAAI,MAAM,YAAY;AAClF,oBAAY;AAAA,MACd;AAAA,IACF;AACA,WAAO,YAAY,oBAAoB;AAAA,EACzC;AAAA,EACA,UAAU,QAAQ,UAAU,CAAC,GAAG,OAAO,MAAM;AAC3C,QAAI;AAAA,MACF,OAAO,CAAC;AAAA,MACR,gBAAgB;AAAA,MAChB,YAAY,KAAK,KAAK;AAAA,IACxB,IAAI;AACJ,YAAQ,OAAO,CAAC;AAAA,MACd,QAAQ;AAAA,MACR,OAAO;AAAA,IACT,GAAG,GAAG,IAAI;AAGV,YAAQ,eAAe;AACvB,YAAQ,gBAAgB;AACxB,UAAM,UAAU,QAAQ,SAAS,OAAO,CAAC,cAAc,UAAU;AAC/D,UAAI,CAAC,aAAa,CAAC,SAAS,KAAK,GAAG;AAClC,aAAK,cAAc,KAAK;AACxB;AAAA,MACF;AACA,sBAAgB,iBAAiB;AACjC,UAAI,QAAQ,CAAC;AACb,eAAS,OAAO,KAAK,QAAQ;AAC3B,YAAI,QAAQ,KAAK,OAAO,GAAG;AAC3B,YAAI,CAAC,SAAS,UAAU,MAAM,KAAK,GAAG;AACpC;AAAA,QACF;AACA,cAAM,KAAK,MAAM,aAAa;AAAA,UAC5B;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,QAAQ;AAAA,UACpB,gBAAgB;AAAA,QAClB,CAAC,CAAC;AAAA,MACJ;AACA,WAAK,SAAS;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,GAAG,OAAO,iBAAe;AACvB,aAAK,YAAY,KAAK,KAAK,WAAW,EAAE,OAAO,YAAY,GAAG,KAAK;AAAA,MACrE,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,MAAM,MAAM;AACV,UAAM,OAAO,MAAM,MAAM,IAAI;AAC7B,SAAK,SAAS,OAAO,OAAO,CAAC,GAAG,KAAK,MAAM;AAC3C,SAAK,SAAS,KAAK;AACnB,SAAK,iBAAiB,KAAK;AAC3B,SAAK,cAAc,KAAK;AACxB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ;AACb,QAAI,OAAO,MAAM,OAAO,MAAM;AAC9B,QAAI,aAAa,KAAK;AACtB,aAAS,CAAC,OAAO,WAAW,KAAK,OAAO,QAAQ,KAAK,MAAM,GAAG;AAC5D,YAAM,SAAS,WAAW,KAAK;AAC/B,iBAAW,KAAK,IAAI,WAAW,SAAY,cAAc;AAAA,IAC3D;AACA,WAAO,KAAK,aAAa;AAAA;AAAA,MAEzB,EAAE,UAAU,YAAY,CAAC,GAAG,KAAK,gBAAgB,GAAG,OAAO,cAAc,CAAC;AAAA,KAAC;AAAA,EAC7E;AAAA,EACA,YAAY,SAAS;AACnB,QAAI,aAAa,KAAK,MAAM;AAC1B,aAAO,MAAM,YAAY,OAAO;AAAA,IAClC;AAGA,QAAI,CAAC,KAAK,OAAO,QAAQ;AACvB,aAAO;AAAA,IACT;AACA,QAAI,MAAM,CAAC;AACX,SAAK,OAAO,QAAQ,SAAO;AACzB,UAAI;AACJ,YAAM,QAAQ,KAAK,OAAO,GAAG;AAC7B,UAAI,eAAe;AACnB,WAAK,gBAAgB,iBAAiB,QAAQ,cAAc,OAAO;AACjE,uBAAe,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,UAC7C,QAAQ,aAAa;AAAA,UACrB,OAAO,aAAa,MAAM,GAAG;AAAA,QAC/B,CAAC;AAAA,MACH;AACA,UAAI,GAAG,IAAI,SAAS,gBAAgB,QAAQ,MAAM,WAAW,YAAY,IAAI;AAAA,IAC/E,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,UAAU,OAAO,eAAe;AAC9B,QAAI,OAAO,KAAK,MAAM;AACtB,SAAK,SAAS;AACd,SAAK,SAAS,WAAW,OAAO,aAAa;AAC7C,SAAK,cAAc,eAAe,OAAO,KAAK,KAAK,CAAC;AAEpD,QAAI;AAAe,WAAK,iBAAiB;AACzC,WAAO;AAAA,EACT;AAAA,EACA,MAAM,WAAW,WAAW,CAAC,GAAG;AAC9B,WAAO,KAAK,MAAM,EAAE,aAAa,UAAQ;AACvC,UAAI,QAAQ,KAAK;AACjB,UAAI,SAAS,QAAQ;AACnB,YAAI,CAAC,MAAM,QAAQ,SAAS,CAAC,CAAC;AAAG,qBAAW,CAAC,QAAQ;AACrD,gBAAQ,CAAC,GAAG,KAAK,gBAAgB,GAAG,QAAQ;AAAA,MAC9C;AAGA,aAAO,KAAK,UAAU,OAAO,OAAO,KAAK,QAAQ,SAAS,GAAG,KAAK;AAAA,IACpE,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,UAAM,UAAU,CAAC;AACjB,eAAW,CAAC,KAAK,MAAM,KAAK,OAAO,QAAQ,KAAK,MAAM,GAAG;AACvD,cAAQ,GAAG,IAAI,cAAc,UAAU,OAAO,oBAAoB,WAAW,OAAO,SAAS,IAAI;AAAA,IACnG;AACA,WAAO,KAAK,UAAU,OAAO;AAAA,EAC/B;AAAA,EACA,cAAc;AACZ,UAAM,OAAO,YAAY,IAAI;AAC7B,WAAO;AAAA,EACT;AAAA,EACA,KAAKE,OAAM;AACT,UAAM,SAAS,CAAC;AAChB,eAAW,OAAOA,OAAM;AACtB,UAAI,KAAK,OAAO,GAAG;AAAG,eAAO,GAAG,IAAI,KAAK,OAAO,GAAG;AAAA,IACrD;AACA,WAAO,KAAK,UAAU,QAAQ,KAAK,eAAe,OAAO,CAAC,CAAC,GAAG,CAAC,MAAMA,MAAK,SAAS,CAAC,KAAKA,MAAK,SAAS,CAAC,CAAC,CAAC;AAAA,EAC5G;AAAA,EACA,KAAKA,OAAM;AACT,UAAM,YAAY,CAAC;AACnB,eAAW,OAAO,OAAO,KAAK,KAAK,MAAM,GAAG;AAC1C,UAAIA,MAAK,SAAS,GAAG;AAAG;AACxB,gBAAU,KAAK,GAAG;AAAA,IACpB;AACA,WAAO,KAAK,KAAK,SAAS;AAAA,EAC5B;AAAA,EACA,KAAK,MAAM,IAAI,OAAO;AACpB,QAAI,iBAAa,6BAAO,MAAM,IAAI;AAClC,WAAO,KAAK,UAAU,SAAO;AAC3B,UAAI,CAAC;AAAK,eAAO;AACjB,UAAI,SAAS;AACb,UAAI,QAAQ,KAAK,IAAI,GAAG;AACtB,iBAAS,OAAO,OAAO,CAAC,GAAG,GAAG;AAC9B,YAAI,CAAC;AAAO,iBAAO,OAAO,IAAI;AAC9B,eAAO,EAAE,IAAI,WAAW,GAAG;AAAA,MAC7B;AACA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,OAAO;AACL,WAAO,KAAK,UAAU,SAAS;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS;AACb,WAAO,KAAK,KAAK;AAAA,MACf,MAAM;AAAA,MACN,WAAW;AAAA,MACX,SAAS,WAAW,OAAO;AAAA,MAC3B,KAAK,OAAO;AACV,YAAI,SAAS;AAAM,iBAAO;AAC1B,cAAM,cAAc,QAAQ,KAAK,QAAQ,KAAK;AAC9C,eAAO,YAAY,WAAW,KAAK,KAAK,YAAY;AAAA,UAClD,QAAQ;AAAA,YACN,YAAY,YAAY,KAAK,IAAI;AAAA,UACnC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,eAAe;AACb,WAAO,KAAK,MAAM;AAAA,MAChB,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AAAA,EACA,UAAU,UAAU,MAAM,UAAU,OAAO,WAAW;AACpD,QAAI,OAAO,YAAY,WAAW;AAChC,gBAAU;AACV,gBAAU;AAAA,IACZ;AACA,QAAI,OAAO,KAAK,KAAK;AAAA,MACnB,MAAM;AAAA,MACN,WAAW;AAAA,MACX;AAAA,MACA,KAAK,OAAO;AACV,YAAI,SAAS;AAAM,iBAAO;AAC1B,cAAM,cAAc,QAAQ,KAAK,QAAQ,KAAK;AAC9C,eAAO,CAAC,WAAW,YAAY,WAAW,KAAK,KAAK,YAAY;AAAA,UAC9D,QAAQ;AAAA,YACN,SAAS,YAAY,KAAK,IAAI;AAAA,UAChC;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AACD,SAAK,KAAK,YAAY;AACtB,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,QAAQ,MAAM,UAAU,OAAO,WAAW;AAChD,WAAO,KAAK,UAAU,CAAC,OAAO,OAAO;AAAA,EACvC;AAAA,EACA,cAAc,IAAI;AAChB,WAAO,KAAK,UAAU,SAAO;AAC3B,UAAI,CAAC;AAAK,eAAO;AACjB,YAAM,SAAS,CAAC;AAChB,iBAAW,OAAO,OAAO,KAAK,GAAG;AAAG,eAAO,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG;AAC7D,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,YAAY;AACV,WAAO,KAAK,cAAc,0BAAS;AAAA,EACrC;AAAA,EACA,YAAY;AACV,WAAO,KAAK,cAAc,0BAAS;AAAA,EACrC;AAAA,EACA,eAAe;AACb,WAAO,KAAK,cAAc,aAAO,4BAAU,GAAG,EAAE,YAAY,CAAC;AAAA,EAC/D;AAAA,EACA,SAAS,SAAS;AAChB,UAAM,QAAQ,UAAU,KAAK,QAAQ,OAAO,IAAI,MAAM,MAAM;AAC5D,UAAM,OAAO,MAAM,SAAS,OAAO;AACnC,SAAK,SAAS,CAAC;AACf,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,KAAK,MAAM,GAAG;AACtD,UAAI;AACJ,UAAI,eAAe;AACnB,WAAK,iBAAiB,iBAAiB,QAAQ,eAAe,OAAO;AACnE,uBAAe,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,UAC7C,QAAQ,aAAa;AAAA,UACrB,OAAO,aAAa,MAAM,GAAG;AAAA,QAC/B,CAAC;AAAA,MACH;AACA,WAAK,OAAO,GAAG,IAAI,MAAM,SAAS,YAAY;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS,YAAY,aAAa;AAElC,SAAS,SAAS,MAAM;AACtB,SAAO,IAAI,YAAY,IAAI;AAC7B;AACA,IAAM,cAAN,cAA0B,OAAO;AAAA,EAC/B,YAAY,MAAM;AAChB,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,QACJ,OAAO;AAAA,MACT;AAAA,MACA,MAAMF,IAAG;AACP,eAAO,MAAM,QAAQA,EAAC;AAAA,MACxB;AAAA,IACF,CAAC;AAGD,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,MAAM,QAAQ,OAAO;AACnB,UAAM,QAAQ,MAAM,MAAM,QAAQ,KAAK;AAGvC,QAAI,CAAC,KAAK,WAAW,KAAK,KAAK,CAAC,KAAK,WAAW;AAC9C,aAAO;AAAA,IACT;AACA,QAAI,YAAY;AAChB,UAAM,YAAY,MAAM,IAAI,CAACA,IAAG,QAAQ;AACtC,YAAM,cAAc,KAAK,UAAU,KAAKA,IAAG,OAAO,OAAO,CAAC,GAAG,OAAO;AAAA,QAClE,MAAM,GAAG,MAAM,QAAQ,EAAE,IAAI,GAAG;AAAA,QAChC,QAAQ;AAAA,QACR,eAAeA;AAAA,QACf,OAAOA;AAAA,QACP,OAAO;AAAA,MACT,CAAC,CAAC;AACF,UAAI,gBAAgBA,IAAG;AACrB,oBAAY;AAAA,MACd;AACA,aAAO;AAAA,IACT,CAAC;AACD,WAAO,YAAY,YAAY;AAAA,EACjC;AAAA,EACA,UAAU,QAAQ,UAAU,CAAC,GAAG,OAAO,MAAM;AAC3C,QAAI;AAGJ,QAAI,YAAY,KAAK;AAErB,QAAI,aAAa,qBAAqB,QAAQ,cAAc,OAAO,qBAAqB,KAAK,KAAK;AAClG,YAAQ,iBAAiB,OAAO,QAAQ,gBAAgB;AACxD,UAAM,UAAU,QAAQ,SAAS,OAAO,CAAC,aAAa,UAAU;AAC9D,UAAI;AACJ,UAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,WAAW,KAAK,GAAG;AACvD,aAAK,aAAa,KAAK;AACvB;AAAA,MACF;AAGA,UAAI,QAAQ,IAAI,MAAM,MAAM,MAAM;AAClC,eAAS,QAAQ,GAAG,QAAQ,MAAM,QAAQ,SAAS;AACjD,YAAI;AACJ,cAAM,KAAK,IAAI,UAAU,aAAa;AAAA,UACpC;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,QAAQ;AAAA,UACpB,iBAAiB,wBAAwB,QAAQ,kBAAkB,OAAO,wBAAwB;AAAA,QACpG,CAAC;AAAA,MACH;AACA,WAAK,SAAS;AAAA,QACZ;AAAA,QACA;AAAA,QACA,gBAAgB,yBAAyB,QAAQ,kBAAkB,OAAO,yBAAyB;AAAA,QACnG;AAAA,MACF,GAAG,OAAO,qBAAmB,KAAK,gBAAgB,OAAO,WAAW,GAAG,KAAK,CAAC;AAAA,IAC/E,CAAC;AAAA,EACH;AAAA,EACA,MAAM,MAAM;AACV,UAAM,OAAO,MAAM,MAAM,IAAI;AAE7B,SAAK,YAAY,KAAK;AACtB,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,OAAO;AACL,WAAO,KAAK,UAAU,SAAS;AAAA,EACjC;AAAA,EACA,OAAO,QAAQ;AACb,QAAI,OAAO,MAAM,OAAO,MAAM;AAG9B,SAAK,YAAY,KAAK;AACtB,QAAI,OAAO;AAET,WAAK,YAAY,KAAK;AAAA;AAAA,QAEtB,KAAK,UAAU,OAAO,OAAO,SAAS;AAAA,UAAI,OAAO;AACnD,WAAO;AAAA,EACT;AAAA,EACA,GAAG,QAAQ;AAET,QAAI,OAAO,KAAK,MAAM;AACtB,QAAI,CAAC,SAAS,MAAM;AAAG,YAAM,IAAI,UAAU,6DAA6D,WAAW,MAAM,CAAC;AAG1H,SAAK,YAAY;AACjB,SAAK,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,MAAM;AAAA,MACvC,OAAO;AAAA,IACT,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ,UAAU,MAAM,QAAQ;AACrC,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,MAAM,WAAW,KAAK,QAAQ,MAAM;AAAA,MAC7C;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,SAAS;AAChB,cAAU,WAAW,MAAM;AAC3B,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA;AAAA,MAEZ,KAAK,OAAO;AACV,eAAO,MAAM,UAAU,KAAK,QAAQ,GAAG;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,IAAI,KAAK,SAAS;AAChB,cAAU,WAAW,MAAM;AAC3B,WAAO,KAAK,KAAK;AAAA,MACf;AAAA,MACA,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,MACF;AAAA,MACA,YAAY;AAAA,MACZ,KAAK,OAAO;AACV,eAAO,MAAM,UAAU,KAAK,QAAQ,GAAG;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,SAAS;AACP,WAAO,KAAK,QAAQ,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,KAAK,aAAa;AAEzD,UAAI,KAAK,WAAW,GAAG;AAAG,eAAO;AACjC,aAAO,YAAY,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,QAAQ;AAAA,IACnD,CAAC;AAAA,EACH;AAAA,EACA,QAAQ,UAAU;AAChB,QAAI,SAAS,CAAC,WAAW,CAAAA,OAAK,CAAC,CAACA,KAAI,CAACA,IAAG,GAAG,MAAM,CAAC,SAASA,IAAG,GAAG,CAAC;AAClE,WAAO,KAAK,UAAU,YAAU,UAAU,OAAO,OAAO,OAAO,MAAM,IAAI,MAAM;AAAA,EACjF;AAAA,EACA,SAAS,SAAS;AAChB,UAAM,QAAQ,UAAU,KAAK,QAAQ,OAAO,IAAI,MAAM,MAAM;AAC5D,UAAM,OAAO,MAAM,SAAS,OAAO;AACnC,QAAI,KAAK,WAAW;AAClB,UAAI;AACJ,UAAI,eAAe;AACnB,WAAK,gBAAgB,iBAAiB,QAAQ,cAAc,OAAO;AACjE,uBAAe,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,UAC7C,QAAQ,aAAa;AAAA,UACrB,OAAO,aAAa,MAAM,CAAC;AAAA,QAC7B,CAAC;AAAA,MACH;AACA,WAAK,YAAY,KAAK,UAAU,SAAS,YAAY;AAAA,IACvD;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS,YAAY,YAAY;AAGjC,SAAS,SAAS,SAAS;AACzB,SAAO,IAAI,YAAY,OAAO;AAChC;AACA,IAAM,cAAN,cAA0B,OAAO;AAAA,EAC/B,YAAY,SAAS;AACnB,UAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,QACJ,OAAO;AAAA,MACT;AAAA,MACA,MAAMA,IAAG;AACP,cAAM,QAAQ,KAAK,KAAK;AACxB,eAAO,MAAM,QAAQA,EAAC,KAAKA,GAAE,WAAW,MAAM;AAAA,MAChD;AAAA,IACF,CAAC;AACD,SAAK,aAAa,MAAM;AACtB,WAAK,UAAU,MAAM,OAAO;AAAA,IAC9B,CAAC;AAAA,EACH;AAAA,EACA,MAAM,YAAY,SAAS;AACzB,UAAM;AAAA,MACJ;AAAA,IACF,IAAI,KAAK;AACT,UAAM,QAAQ,MAAM,MAAM,YAAY,OAAO;AAC7C,QAAI,CAAC,KAAK,WAAW,KAAK,GAAG;AAC3B,aAAO;AAAA,IACT;AACA,QAAI,YAAY;AAChB,UAAM,YAAY,MAAM,IAAI,CAAC,MAAM,QAAQ;AACzC,YAAM,cAAc,KAAK,KAAK,MAAM,GAAG,GAAG,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QACnE,MAAM,GAAG,QAAQ,QAAQ,EAAE,IAAI,GAAG;AAAA,QAClC,QAAQ;AAAA,QACR,eAAe,MAAM,GAAG;AAAA,QACxB,OAAO,MAAM,GAAG;AAAA,QAChB,OAAO;AAAA,MACT,CAAC,CAAC;AACF,UAAI,gBAAgB,MAAM,GAAG;AAAG,oBAAY;AAC5C,aAAO;AAAA,IACT,CAAC;AACD,WAAO,YAAY,YAAY;AAAA,EACjC;AAAA,EACA,UAAU,QAAQ,UAAU,CAAC,GAAG,OAAO,MAAM;AAC3C,QAAI,YAAY,KAAK,KAAK;AAC1B,UAAM,UAAU,QAAQ,SAAS,OAAO,CAAC,aAAa,UAAU;AAC9D,UAAI;AAEJ,UAAI,CAAC,KAAK,WAAW,KAAK,GAAG;AAC3B,aAAK,aAAa,KAAK;AACvB;AAAA,MACF;AACA,UAAI,QAAQ,CAAC;AACb,eAAS,CAAC,OAAO,UAAU,KAAK,UAAU,QAAQ,GAAG;AACnD,YAAI;AACJ,cAAM,KAAK,IAAI,WAAW,aAAa;AAAA,UACrC;AAAA,UACA;AAAA,UACA,QAAQ;AAAA,UACR,YAAY,QAAQ;AAAA,UACpB,iBAAiB,wBAAwB,QAAQ,kBAAkB,OAAO,wBAAwB;AAAA,QACpG,CAAC;AAAA,MACH;AACA,WAAK,SAAS;AAAA,QACZ;AAAA,QACA;AAAA,QACA,gBAAgB,yBAAyB,QAAQ,kBAAkB,OAAO,yBAAyB;AAAA,QACnG;AAAA,MACF,GAAG,OAAO,qBAAmB,KAAK,gBAAgB,OAAO,WAAW,GAAG,KAAK,CAAC;AAAA,IAC/E,CAAC;AAAA,EACH;AAAA,EACA,SAAS,SAAS;AAChB,UAAM,QAAQ,UAAU,KAAK,QAAQ,OAAO,IAAI,MAAM,MAAM;AAC5D,UAAM,OAAO,MAAM,SAAS,OAAO;AACnC,SAAK,YAAY,KAAK,KAAK,MAAM,IAAI,CAAC,QAAQ,UAAU;AACtD,UAAI;AACJ,UAAI,eAAe;AACnB,WAAK,gBAAgB,iBAAiB,QAAQ,cAAc,OAAO;AACjE,uBAAe,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,UAC7C,QAAQ,aAAa;AAAA,UACrB,OAAO,aAAa,MAAM,KAAK;AAAA,QACjC,CAAC;AAAA,MACH;AACA,aAAO,OAAO,SAAS,YAAY;AAAA,IACrC,CAAC;AACD,WAAO;AAAA,EACT;AACF;AACA,SAAS,YAAY,YAAY;;;ACx5EjC,IAAI,oBAAoB,SAASQ,mBAAkB,OAAO;AACzD,SAAO,gBAAgB,KAAK,KACxB,CAAC,UAAU,KAAK;AACrB;AAEA,SAAS,gBAAgB,OAAO;AAC/B,SAAO,CAAC,CAAC,SAAS,OAAO,UAAU;AACpC;AAEA,SAAS,UAAU,OAAO;AACzB,MAAI,cAAc,OAAO,UAAU,SAAS,KAAK,KAAK;AAEtD,SAAO,gBAAgB,qBACnB,gBAAgB,mBAChB,eAAe,KAAK;AACzB;AAGA,IAAI,eAAe,OAAO,WAAW,cAAc,OAAO;AAC1D,IAAI,qBAAqB,eAAe,OAAO,IAAI,eAAe,IAAI;AAEtE,SAAS,eAAe,OAAO;AAC9B,SAAO,MAAM,aAAa;AAC3B;AAEA,SAAS,YAAY,KAAK;AACzB,SAAO,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;AACnC;AAEA,SAAS,8BAA8B,OAAO,SAAS;AACtD,SAAQ,QAAQ,UAAU,SAAS,QAAQ,kBAAkB,KAAK,IAC/D,UAAU,YAAY,KAAK,GAAG,OAAO,OAAO,IAC5C;AACJ;AAEA,SAAS,kBAAkB,QAAQ,QAAQ,SAAS;AACnD,SAAO,OAAO,OAAO,MAAM,EAAE,IAAI,SAAS,SAAS;AAClD,WAAO,8BAA8B,SAAS,OAAO;AAAA,EACtD,CAAC;AACF;AAEA,SAAS,YAAY,QAAQ,QAAQ,SAAS;AAC7C,MAAI,cAAc,CAAC;AACnB,MAAI,QAAQ,kBAAkB,MAAM,GAAG;AACtC,WAAO,KAAK,MAAM,EAAE,QAAQ,SAAS,KAAK;AACzC,kBAAY,GAAG,IAAI,8BAA8B,OAAO,GAAG,GAAG,OAAO;AAAA,IACtE,CAAC;AAAA,EACF;AACA,SAAO,KAAK,MAAM,EAAE,QAAQ,SAAS,KAAK;AACzC,QAAI,CAAC,QAAQ,kBAAkB,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG;AAC5D,kBAAY,GAAG,IAAI,8BAA8B,OAAO,GAAG,GAAG,OAAO;AAAA,IACtE,OAAO;AACN,kBAAY,GAAG,IAAI,UAAU,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,OAAO;AAAA,IAC/D;AAAA,EACD,CAAC;AACD,SAAO;AACR;AAEA,SAAS,UAAU,QAAQ,QAAQ,SAAS;AAC3C,YAAU,WAAW,CAAC;AACtB,UAAQ,aAAa,QAAQ,cAAc;AAC3C,UAAQ,oBAAoB,QAAQ,qBAAqB;AAEzD,MAAI,gBAAgB,MAAM,QAAQ,MAAM;AACxC,MAAI,gBAAgB,MAAM,QAAQ,MAAM;AACxC,MAAI,4BAA4B,kBAAkB;AAElD,MAAI,CAAC,2BAA2B;AAC/B,WAAO,8BAA8B,QAAQ,OAAO;AAAA,EACrD,WAAW,eAAe;AACzB,WAAO,QAAQ,WAAW,QAAQ,QAAQ,OAAO;AAAA,EAClD,OAAO;AACN,WAAO,YAAY,QAAQ,QAAQ,OAAO;AAAA,EAC3C;AACD;AAEA,UAAU,MAAM,SAAS,aAAaC,QAAO,SAAS;AACrD,MAAI,CAAC,MAAM,QAAQA,MAAK,GAAG;AAC1B,UAAM,IAAI,MAAM,mCAAmC;AAAA,EACpD;AAEA,SAAOA,OAAM,OAAO,SAAS,MAAM,MAAM;AACxC,WAAO,UAAU,MAAM,MAAM,OAAO;AAAA,EACrC,GAAG,CAAC,CAAC;AACN;AAEA,IAAI,cAAc;AAElB,IAAO,aAAQ;;;ACvFf,IAAI,aAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU;AAEpF,IAAO,qBAAQ;;;ACAf,IAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,IAAI,OAAO,sBAAc,YAAY,SAAS,aAAa,EAAE;AAE7D,IAAO,eAAQ;;;ACLf,IAAIC,UAAS,aAAK;AAElB,IAAO,iBAAQA;;;ACFf,IAAI,cAAc,OAAO;AAGzB,IAAI,iBAAiB,YAAY;AAOjC,IAAI,uBAAuB,YAAY;AAGvC,IAAI,iBAAiB,iBAAS,eAAO,cAAc;AASnD,SAAS,UAAU,OAAO;AACxB,MAAI,QAAQ,eAAe,KAAK,OAAO,cAAc,GACjD,MAAM,MAAM,cAAc;AAE9B,MAAI;AACF,UAAM,cAAc,IAAI;AACxB,QAAI,WAAW;AAAA,EACjB,SAASC,IAAG;AAAA,EAAC;AAEb,MAAI,SAAS,qBAAqB,KAAK,KAAK;AAC5C,MAAI,UAAU;AACZ,QAAI,OAAO;AACT,YAAM,cAAc,IAAI;AAAA,IAC1B,OAAO;AACL,aAAO,MAAM,cAAc;AAAA,IAC7B;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AC5Cf,IAAIC,eAAc,OAAO;AAOzB,IAAIC,wBAAuBD,aAAY;AASvC,SAAS,eAAe,OAAO;AAC7B,SAAOC,sBAAqB,KAAK,KAAK;AACxC;AAEA,IAAO,yBAAQ;;;AChBf,IAAI,UAAU;AAAd,IACI,eAAe;AAGnB,IAAIC,kBAAiB,iBAAS,eAAO,cAAc;AASnD,SAAS,WAAW,OAAO;AACzB,MAAI,SAAS,MAAM;AACjB,WAAO,UAAU,SAAY,eAAe;AAAA,EAC9C;AACA,SAAQA,mBAAkBA,mBAAkB,OAAO,KAAK,IACpD,kBAAU,KAAK,IACf,uBAAe,KAAK;AAC1B;AAEA,IAAO,qBAAQ;;;ACnBf,SAAS,QAAQ,MAAM,WAAW;AAChC,SAAO,SAAS,KAAK;AACnB,WAAO,KAAK,UAAU,GAAG,CAAC;AAAA,EAC5B;AACF;AAEA,IAAO,kBAAQ;;;ACXf,IAAI,eAAe,gBAAQ,OAAO,gBAAgB,MAAM;AAExD,IAAO,uBAAQ;;;ACmBf,SAAS,aAAa,OAAO;AAC3B,SAAO,SAAS,QAAQ,OAAO,SAAS;AAC1C;AAEA,IAAO,uBAAQ;;;ACvBf,IAAI,YAAY;AAGhB,IAAI,YAAY,SAAS;AAAzB,IACIC,eAAc,OAAO;AAGzB,IAAI,eAAe,UAAU;AAG7B,IAAIC,kBAAiBD,aAAY;AAGjC,IAAI,mBAAmB,aAAa,KAAK,MAAM;AA8B/C,SAAS,cAAc,OAAO;AAC5B,MAAI,CAAC,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAK,WAAW;AAC1D,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,qBAAa,KAAK;AAC9B,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA,EACT;AACA,MAAI,OAAOC,gBAAe,KAAK,OAAO,aAAa,KAAK,MAAM;AAC9D,SAAO,OAAO,QAAQ,cAAc,gBAAgB,QAClD,aAAa,KAAK,IAAI,KAAK;AAC/B;AAEA,IAAO,wBAAQ;;;ACtDf,SAAS,iBAAiB;AACxB,OAAK,WAAW,CAAC;AACjB,OAAK,OAAO;AACd;AAEA,IAAO,yBAAQ;;;ACoBf,SAAS,GAAG,OAAO,OAAO;AACxB,SAAO,UAAU,SAAU,UAAU,SAAS,UAAU;AAC1D;AAEA,IAAO,aAAQ;;;AC1Bf,SAAS,aAAaC,QAAO,KAAK;AAChC,MAAI,SAASA,OAAM;AACnB,SAAO,UAAU;AACf,QAAI,WAAGA,OAAM,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG;AAC7B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACjBf,IAAI,aAAa,MAAM;AAGvB,IAAI,SAAS,WAAW;AAWxB,SAAS,gBAAgB,KAAK;AAC5B,MAAI,OAAO,KAAK,UACZ,QAAQ,qBAAa,MAAM,GAAG;AAElC,MAAI,QAAQ,GAAG;AACb,WAAO;AAAA,EACT;AACA,MAAI,YAAY,KAAK,SAAS;AAC9B,MAAI,SAAS,WAAW;AACtB,SAAK,IAAI;AAAA,EACX,OAAO;AACL,WAAO,KAAK,MAAM,OAAO,CAAC;AAAA,EAC5B;AACA,IAAE,KAAK;AACP,SAAO;AACT;AAEA,IAAO,0BAAQ;;;ACvBf,SAAS,aAAa,KAAK;AACzB,MAAI,OAAO,KAAK,UACZ,QAAQ,qBAAa,MAAM,GAAG;AAElC,SAAO,QAAQ,IAAI,SAAY,KAAK,KAAK,EAAE,CAAC;AAC9C;AAEA,IAAO,uBAAQ;;;ACPf,SAAS,aAAa,KAAK;AACzB,SAAO,qBAAa,KAAK,UAAU,GAAG,IAAI;AAC5C;AAEA,IAAO,uBAAQ;;;ACHf,SAAS,aAAa,KAAK,OAAO;AAChC,MAAI,OAAO,KAAK,UACZ,QAAQ,qBAAa,MAAM,GAAG;AAElC,MAAI,QAAQ,GAAG;AACb,MAAE,KAAK;AACP,SAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,EACxB,OAAO;AACL,SAAK,KAAK,EAAE,CAAC,IAAI;AAAA,EACnB;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACZf,SAAS,UAAU,SAAS;AAC1B,MAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,OAAK,MAAM;AACX,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,QAAQ,KAAK;AACzB,SAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EAC7B;AACF;AAGA,UAAU,UAAU,QAAQ;AAC5B,UAAU,UAAU,QAAQ,IAAI;AAChC,UAAU,UAAU,MAAM;AAC1B,UAAU,UAAU,MAAM;AAC1B,UAAU,UAAU,MAAM;AAE1B,IAAO,oBAAQ;;;ACtBf,SAAS,aAAa;AACpB,OAAK,WAAW,IAAI;AACpB,OAAK,OAAO;AACd;AAEA,IAAO,qBAAQ;;;ACLf,SAAS,YAAY,KAAK;AACxB,MAAI,OAAO,KAAK,UACZ,SAAS,KAAK,QAAQ,EAAE,GAAG;AAE/B,OAAK,OAAO,KAAK;AACjB,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACRf,SAAS,SAAS,KAAK;AACrB,SAAO,KAAK,SAAS,IAAI,GAAG;AAC9B;AAEA,IAAO,mBAAQ;;;ACJf,SAAS,SAAS,KAAK;AACrB,SAAO,KAAK,SAAS,IAAI,GAAG;AAC9B;AAEA,IAAO,mBAAQ;;;ACYf,SAASC,UAAS,OAAO;AACvB,MAAI,OAAO,OAAO;AAClB,SAAO,SAAS,SAAS,QAAQ,YAAY,QAAQ;AACvD;AAEA,IAAO,mBAAQA;;;AC1Bf,IAAI,WAAW;AAAf,IACI,UAAU;AADd,IAEI,SAAS;AAFb,IAGI,WAAW;AAmBf,SAAS,WAAW,OAAO;AACzB,MAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,WAAO;AAAA,EACT;AAGA,MAAI,MAAM,mBAAW,KAAK;AAC1B,SAAO,OAAO,WAAW,OAAO,UAAU,OAAO,YAAY,OAAO;AACtE;AAEA,IAAO,qBAAQ;;;ACjCf,IAAI,aAAa,aAAK,oBAAoB;AAE1C,IAAO,qBAAQ;;;ACFf,IAAI,aAAc,WAAW;AAC3B,MAAI,MAAM,SAAS,KAAK,sBAAc,mBAAW,QAAQ,mBAAW,KAAK,YAAY,EAAE;AACvF,SAAO,MAAO,mBAAmB,MAAO;AAC1C,EAAE;AASF,SAAS,SAAS,MAAM;AACtB,SAAO,CAAC,CAAC,cAAe,cAAc;AACxC;AAEA,IAAO,mBAAQ;;;AClBf,IAAIC,aAAY,SAAS;AAGzB,IAAIC,gBAAeD,WAAU;AAS7B,SAAS,SAAS,MAAM;AACtB,MAAI,QAAQ,MAAM;AAChB,QAAI;AACF,aAAOC,cAAa,KAAK,IAAI;AAAA,IAC/B,SAASC,IAAG;AAAA,IAAC;AACb,QAAI;AACF,aAAQ,OAAO;AAAA,IACjB,SAASA,IAAG;AAAA,IAAC;AAAA,EACf;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;AChBf,IAAI,eAAe;AAGnB,IAAI,eAAe;AAGnB,IAAIC,aAAY,SAAS;AAAzB,IACIC,eAAc,OAAO;AAGzB,IAAIC,gBAAeF,WAAU;AAG7B,IAAIG,kBAAiBF,aAAY;AAGjC,IAAI,aAAa;AAAA,EAAO,MACtBC,cAAa,KAAKC,eAAc,EAAE,QAAQ,cAAc,MAAM,EAC7D,QAAQ,0DAA0D,OAAO,IAAI;AAChF;AAUA,SAAS,aAAa,OAAO;AAC3B,MAAI,CAAC,iBAAS,KAAK,KAAK,iBAAS,KAAK,GAAG;AACvC,WAAO;AAAA,EACT;AACA,MAAI,UAAU,mBAAW,KAAK,IAAI,aAAa;AAC/C,SAAO,QAAQ,KAAK,iBAAS,KAAK,CAAC;AACrC;AAEA,IAAO,uBAAQ;;;ACtCf,SAAS,SAASC,SAAQ,KAAK;AAC7B,SAAOA,WAAU,OAAO,SAAYA,QAAO,GAAG;AAChD;AAEA,IAAO,mBAAQ;;;ACDf,SAAS,UAAUC,SAAQ,KAAK;AAC9B,MAAI,QAAQ,iBAASA,SAAQ,GAAG;AAChC,SAAO,qBAAa,KAAK,IAAI,QAAQ;AACvC;AAEA,IAAO,oBAAQ;;;ACZf,IAAIC,OAAM,kBAAU,cAAM,KAAK;AAE/B,IAAO,cAAQA;;;ACHf,IAAI,eAAe,kBAAU,QAAQ,QAAQ;AAE7C,IAAO,uBAAQ;;;ACIf,SAAS,YAAY;AACnB,OAAK,WAAW,uBAAe,qBAAa,IAAI,IAAI,CAAC;AACrD,OAAK,OAAO;AACd;AAEA,IAAO,oBAAQ;;;ACJf,SAAS,WAAW,KAAK;AACvB,MAAI,SAAS,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,SAAS,GAAG;AACtD,OAAK,QAAQ,SAAS,IAAI;AAC1B,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACbf,IAAI,iBAAiB;AAGrB,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAWjC,SAAS,QAAQ,KAAK;AACpB,MAAI,OAAO,KAAK;AAChB,MAAI,sBAAc;AAChB,QAAI,SAAS,KAAK,GAAG;AACrB,WAAO,WAAW,iBAAiB,SAAY;AAAA,EACjD;AACA,SAAOC,gBAAe,KAAK,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI;AACtD;AAEA,IAAO,kBAAQ;;;AC1Bf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAWjC,SAAS,QAAQ,KAAK;AACpB,MAAI,OAAO,KAAK;AAChB,SAAO,uBAAgB,KAAK,GAAG,MAAM,SAAaC,gBAAe,KAAK,MAAM,GAAG;AACjF;AAEA,IAAO,kBAAQ;;;ACnBf,IAAIC,kBAAiB;AAYrB,SAAS,QAAQ,KAAK,OAAO;AAC3B,MAAI,OAAO,KAAK;AAChB,OAAK,QAAQ,KAAK,IAAI,GAAG,IAAI,IAAI;AACjC,OAAK,GAAG,IAAK,wBAAgB,UAAU,SAAaA,kBAAiB;AACrE,SAAO;AACT;AAEA,IAAO,kBAAQ;;;ACTf,SAAS,KAAK,SAAS;AACrB,MAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,OAAK,MAAM;AACX,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,QAAQ,KAAK;AACzB,SAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EAC7B;AACF;AAGA,KAAK,UAAU,QAAQ;AACvB,KAAK,UAAU,QAAQ,IAAI;AAC3B,KAAK,UAAU,MAAM;AACrB,KAAK,UAAU,MAAM;AACrB,KAAK,UAAU,MAAM;AAErB,IAAO,eAAQ;;;ACpBf,SAAS,gBAAgB;AACvB,OAAK,OAAO;AACZ,OAAK,WAAW;AAAA,IACd,QAAQ,IAAI;AAAA,IACZ,OAAO,KAAK,eAAO;AAAA,IACnB,UAAU,IAAI;AAAA,EAChB;AACF;AAEA,IAAO,wBAAQ;;;ACbf,SAAS,UAAU,OAAO;AACxB,MAAI,OAAO,OAAO;AAClB,SAAQ,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YACvE,UAAU,cACV,UAAU;AACjB;AAEA,IAAO,oBAAQ;;;ACJf,SAAS,WAAW,KAAK,KAAK;AAC5B,MAAI,OAAO,IAAI;AACf,SAAO,kBAAU,GAAG,IAChB,KAAK,OAAO,OAAO,WAAW,WAAW,MAAM,IAC/C,KAAK;AACX;AAEA,IAAO,qBAAQ;;;ACNf,SAAS,eAAe,KAAK;AAC3B,MAAI,SAAS,mBAAW,MAAM,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,OAAK,QAAQ,SAAS,IAAI;AAC1B,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACNf,SAAS,YAAY,KAAK;AACxB,SAAO,mBAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AACtC;AAEA,IAAO,sBAAQ;;;ACJf,SAAS,YAAY,KAAK;AACxB,SAAO,mBAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AACtC;AAEA,IAAO,sBAAQ;;;ACHf,SAAS,YAAY,KAAK,OAAO;AAC/B,MAAI,OAAO,mBAAW,MAAM,GAAG,GAC3B,OAAO,KAAK;AAEhB,OAAK,IAAI,KAAK,KAAK;AACnB,OAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI;AACrC,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACRf,SAAS,SAAS,SAAS;AACzB,MAAI,QAAQ,IACR,SAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,OAAK,MAAM;AACX,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQ,QAAQ,KAAK;AACzB,SAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EAC7B;AACF;AAGA,SAAS,UAAU,QAAQ;AAC3B,SAAS,UAAU,QAAQ,IAAI;AAC/B,SAAS,UAAU,MAAM;AACzB,SAAS,UAAU,MAAM;AACzB,SAAS,UAAU,MAAM;AAEzB,IAAO,mBAAQ;;;AC1Bf,IAAI,mBAAmB;AAYvB,SAAS,SAAS,KAAK,OAAO;AAC5B,MAAI,OAAO,KAAK;AAChB,MAAI,gBAAgB,mBAAW;AAC7B,QAAI,QAAQ,KAAK;AACjB,QAAI,CAAC,eAAQ,MAAM,SAAS,mBAAmB,GAAI;AACjD,YAAM,KAAK,CAAC,KAAK,KAAK,CAAC;AACvB,WAAK,OAAO,EAAE,KAAK;AACnB,aAAO;AAAA,IACT;AACA,WAAO,KAAK,WAAW,IAAI,iBAAS,KAAK;AAAA,EAC3C;AACA,OAAK,IAAI,KAAK,KAAK;AACnB,OAAK,OAAO,KAAK;AACjB,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACnBf,SAAS,MAAM,SAAS;AACtB,MAAI,OAAO,KAAK,WAAW,IAAI,kBAAU,OAAO;AAChD,OAAK,OAAO,KAAK;AACnB;AAGA,MAAM,UAAU,QAAQ;AACxB,MAAM,UAAU,QAAQ,IAAI;AAC5B,MAAM,UAAU,MAAM;AACtB,MAAM,UAAU,MAAM;AACtB,MAAM,UAAU,MAAM;AAEtB,IAAO,gBAAQ;;;ACjBf,SAAS,UAAUC,QAAO,UAAU;AAClC,MAAI,QAAQ,IACR,SAASA,UAAS,OAAO,IAAIA,OAAM;AAEvC,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,SAASA,OAAM,KAAK,GAAG,OAAOA,MAAK,MAAM,OAAO;AAClD;AAAA,IACF;AAAA,EACF;AACA,SAAOA;AACT;AAEA,IAAO,oBAAQ;;;ACnBf,IAAI,iBAAkB,WAAW;AAC/B,MAAI;AACF,QAAI,OAAO,kBAAU,QAAQ,gBAAgB;AAC7C,SAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AACf,WAAO;AAAA,EACT,SAASC,IAAG;AAAA,EAAC;AACf,EAAE;AAEF,IAAO,yBAAQ;;;ACCf,SAAS,gBAAgBC,SAAQ,KAAK,OAAO;AAC3C,MAAI,OAAO,eAAe,wBAAgB;AACxC,2BAAeA,SAAQ,KAAK;AAAA,MAC1B,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,SAAS;AAAA,MACT,YAAY;AAAA,IACd,CAAC;AAAA,EACH,OAAO;AACL,IAAAA,QAAO,GAAG,IAAI;AAAA,EAChB;AACF;AAEA,IAAO,0BAAQ;;;ACpBf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAYjC,SAAS,YAAYE,SAAQ,KAAK,OAAO;AACvC,MAAI,WAAWA,QAAO,GAAG;AACzB,MAAI,EAAED,gBAAe,KAAKC,SAAQ,GAAG,KAAK,WAAG,UAAU,KAAK,MACvD,UAAU,UAAa,EAAE,OAAOA,UAAU;AAC7C,4BAAgBA,SAAQ,KAAK,KAAK;AAAA,EACpC;AACF;AAEA,IAAO,sBAAQ;;;ACdf,SAAS,WAAW,QAAQ,OAAOC,SAAQ,YAAY;AACrD,MAAI,QAAQ,CAACA;AACb,EAAAA,YAAWA,UAAS,CAAC;AAErB,MAAI,QAAQ,IACR,SAAS,MAAM;AAEnB,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,MAAM,MAAM,KAAK;AAErB,QAAI,WAAW,aACX,WAAWA,QAAO,GAAG,GAAG,OAAO,GAAG,GAAG,KAAKA,SAAQ,MAAM,IACxD;AAEJ,QAAI,aAAa,QAAW;AAC1B,iBAAW,OAAO,GAAG;AAAA,IACvB;AACA,QAAI,OAAO;AACT,8BAAgBA,SAAQ,KAAK,QAAQ;AAAA,IACvC,OAAO;AACL,0BAAYA,SAAQ,KAAK,QAAQ;AAAA,IACnC;AAAA,EACF;AACA,SAAOA;AACT;AAEA,IAAO,qBAAQ;;;AC9Bf,SAAS,UAAUC,IAAG,UAAU;AAC9B,MAAI,QAAQ,IACR,SAAS,MAAMA,EAAC;AAEpB,SAAO,EAAE,QAAQA,IAAG;AAClB,WAAO,KAAK,IAAI,SAAS,KAAK;AAAA,EAChC;AACA,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACff,IAAI,UAAU;AASd,SAAS,gBAAgB,OAAO;AAC9B,SAAO,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAK;AACrD;AAEA,IAAO,0BAAQ;;;ACbf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAGjC,IAAI,uBAAuBA,aAAY;AAoBvC,IAAI,cAAc,wBAAgB,WAAW;AAAE,SAAO;AAAW,EAAE,CAAC,IAAI,0BAAkB,SAAS,OAAO;AACxG,SAAO,qBAAa,KAAK,KAAKC,gBAAe,KAAK,OAAO,QAAQ,KAC/D,CAAC,qBAAqB,KAAK,OAAO,QAAQ;AAC9C;AAEA,IAAO,sBAAQ;;;ACZf,IAAI,UAAU,MAAM;AAEpB,IAAO,kBAAQ;;;ACZf,SAAS,YAAY;AACnB,SAAO;AACT;AAEA,IAAO,oBAAQ;;;ACbf,IAAI,cAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,IAAI,aAAa,eAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,IAAI,gBAAgB,cAAc,WAAW,YAAY;AAGzD,IAAIC,UAAS,gBAAgB,aAAK,SAAS;AAG3C,IAAI,iBAAiBA,UAASA,QAAO,WAAW;AAmBhD,IAAI,WAAW,kBAAkB;AAEjC,IAAO,mBAAQ;;;ACpCf,IAAI,mBAAmB;AAGvB,IAAI,WAAW;AAUf,SAAS,QAAQ,OAAO,QAAQ;AAC9B,MAAI,OAAO,OAAO;AAClB,WAAS,UAAU,OAAO,mBAAmB;AAE7C,SAAO,CAAC,CAAC,WACN,QAAQ,YACN,QAAQ,YAAY,SAAS,KAAK,KAAK,OACrC,QAAQ,MAAM,QAAQ,KAAK,KAAK,QAAQ;AACjD;AAEA,IAAO,kBAAQ;;;ACvBf,IAAIC,oBAAmB;AA4BvB,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,SAAS,YACrB,QAAQ,MAAM,QAAQ,KAAK,KAAK,SAASA;AAC7C;AAEA,IAAO,mBAAQ;;;AC7Bf,IAAIC,WAAU;AAAd,IACI,WAAW;AADf,IAEI,UAAU;AAFd,IAGI,UAAU;AAHd,IAII,WAAW;AAJf,IAKIC,WAAU;AALd,IAMI,SAAS;AANb,IAOI,YAAY;AAPhB,IAQIC,aAAY;AARhB,IASI,YAAY;AAThB,IAUI,SAAS;AAVb,IAWI,YAAY;AAXhB,IAYI,aAAa;AAEjB,IAAI,iBAAiB;AAArB,IACI,cAAc;AADlB,IAEI,aAAa;AAFjB,IAGI,aAAa;AAHjB,IAII,UAAU;AAJd,IAKI,WAAW;AALf,IAMI,WAAW;AANf,IAOI,WAAW;AAPf,IAQI,kBAAkB;AARtB,IASI,YAAY;AAThB,IAUI,YAAY;AAGhB,IAAI,iBAAiB,CAAC;AACtB,eAAe,UAAU,IAAI,eAAe,UAAU,IACtD,eAAe,OAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,QAAQ,IAAI,eAAe,QAAQ,IAClD,eAAe,eAAe,IAAI,eAAe,SAAS,IAC1D,eAAe,SAAS,IAAI;AAC5B,eAAeF,QAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,cAAc,IAAI,eAAe,OAAO,IACvD,eAAe,WAAW,IAAI,eAAe,OAAO,IACpD,eAAe,QAAQ,IAAI,eAAeC,QAAO,IACjD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAeC,UAAS,IAAI,eAAe,SAAS,IACpD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,UAAU,IAAI;AAS7B,SAAS,iBAAiB,OAAO;AAC/B,SAAO,qBAAa,KAAK,KACvB,iBAAS,MAAM,MAAM,KAAK,CAAC,CAAC,eAAe,mBAAW,KAAK,CAAC;AAChE;AAEA,IAAO,2BAAQ;;;ACpDf,SAAS,UAAU,MAAM;AACvB,SAAO,SAAS,OAAO;AACrB,WAAO,KAAK,KAAK;AAAA,EACnB;AACF;AAEA,IAAO,oBAAQ;;;ACVf,IAAIC,eAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,IAAIC,cAAaD,gBAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,IAAIE,iBAAgBD,eAAcA,YAAW,YAAYD;AAGzD,IAAI,cAAcE,kBAAiB,mBAAW;AAG9C,IAAI,WAAY,WAAW;AACzB,MAAI;AAEF,QAAI,QAAQD,eAAcA,YAAW,WAAWA,YAAW,QAAQ,MAAM,EAAE;AAE3E,QAAI,OAAO;AACT,aAAO;AAAA,IACT;AAGA,WAAO,eAAe,YAAY,WAAW,YAAY,QAAQ,MAAM;AAAA,EACzE,SAASE,IAAG;AAAA,EAAC;AACf,EAAE;AAEF,IAAO,mBAAQ;;;ACxBf,IAAI,mBAAmB,oBAAY,iBAAS;AAmB5C,IAAI,eAAe,mBAAmB,kBAAU,gBAAgB,IAAI;AAEpE,IAAO,uBAAQ;;;AClBf,IAAIC,eAAc,OAAO;AAGzB,IAAIC,kBAAiBD,aAAY;AAUjC,SAAS,cAAc,OAAO,WAAW;AACvC,MAAI,QAAQ,gBAAQ,KAAK,GACrB,QAAQ,CAAC,SAAS,oBAAY,KAAK,GACnC,SAAS,CAAC,SAAS,CAAC,SAAS,iBAAS,KAAK,GAC3C,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,qBAAa,KAAK,GAC1D,cAAc,SAAS,SAAS,UAAU,QAC1C,SAAS,cAAc,kBAAU,MAAM,QAAQ,MAAM,IAAI,CAAC,GAC1D,SAAS,OAAO;AAEpB,WAAS,OAAO,OAAO;AACrB,SAAK,aAAaC,gBAAe,KAAK,OAAO,GAAG,MAC5C,EAAE;AAAA,KAEC,OAAO;AAAA,IAEN,WAAW,OAAO,YAAY,OAAO;AAAA,IAErC,WAAW,OAAO,YAAY,OAAO,gBAAgB,OAAO;AAAA,IAE7D,gBAAQ,KAAK,MAAM,KAClB;AACN,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,wBAAQ;;;AC/Cf,IAAIC,gBAAc,OAAO;AASzB,SAAS,YAAY,OAAO;AAC1B,MAAI,OAAO,SAAS,MAAM,aACtB,QAAS,OAAO,QAAQ,cAAc,KAAK,aAAcA;AAE7D,SAAO,UAAU;AACnB;AAEA,IAAO,sBAAQ;;;ACdf,IAAI,aAAa,gBAAQ,OAAO,MAAM,MAAM;AAE5C,IAAO,qBAAQ;;;ACDf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,kBAAiBD,cAAY;AASjC,SAAS,SAASE,SAAQ;AACxB,MAAI,CAAC,oBAAYA,OAAM,GAAG;AACxB,WAAO,mBAAWA,OAAM;AAAA,EAC1B;AACA,MAAI,SAAS,CAAC;AACd,WAAS,OAAO,OAAOA,OAAM,GAAG;AAC9B,QAAID,gBAAe,KAAKC,SAAQ,GAAG,KAAK,OAAO,eAAe;AAC5D,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACDf,SAAS,YAAY,OAAO;AAC1B,SAAO,SAAS,QAAQ,iBAAS,MAAM,MAAM,KAAK,CAAC,mBAAW,KAAK;AACrE;AAEA,IAAO,sBAAQ;;;ACAf,SAAS,KAAKC,SAAQ;AACpB,SAAO,oBAAYA,OAAM,IAAI,sBAAcA,OAAM,IAAI,iBAASA,OAAM;AACtE;AAEA,IAAO,eAAQ;;;ACxBf,SAAS,WAAWC,SAAQ,QAAQ;AAClC,SAAOA,WAAU,mBAAW,QAAQ,aAAK,MAAM,GAAGA,OAAM;AAC1D;AAEA,IAAO,qBAAQ;;;ACPf,SAAS,aAAaC,SAAQ;AAC5B,MAAI,SAAS,CAAC;AACd,MAAIA,WAAU,MAAM;AAClB,aAAS,OAAO,OAAOA,OAAM,GAAG;AAC9B,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACdf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AASjC,SAAS,WAAWE,SAAQ;AAC1B,MAAI,CAAC,iBAASA,OAAM,GAAG;AACrB,WAAO,qBAAaA,OAAM;AAAA,EAC5B;AACA,MAAI,UAAU,oBAAYA,OAAM,GAC5B,SAAS,CAAC;AAEd,WAAS,OAAOA,SAAQ;AACtB,QAAI,EAAE,OAAO,kBAAkB,WAAW,CAACD,iBAAe,KAAKC,SAAQ,GAAG,KAAK;AAC7E,aAAO,KAAK,GAAG;AAAA,IACjB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,qBAAQ;;;ACLf,SAAS,OAAOC,SAAQ;AACtB,SAAO,oBAAYA,OAAM,IAAI,sBAAcA,SAAQ,IAAI,IAAI,mBAAWA,OAAM;AAC9E;AAEA,IAAO,iBAAQ;;;ACnBf,SAAS,aAAaC,SAAQ,QAAQ;AACpC,SAAOA,WAAU,mBAAW,QAAQ,eAAO,MAAM,GAAGA,OAAM;AAC5D;AAEA,IAAO,uBAAQ;;;ACbf,IAAIC,eAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,IAAIC,cAAaD,gBAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,IAAIE,iBAAgBD,eAAcA,YAAW,YAAYD;AAGzD,IAAIG,UAASD,iBAAgB,aAAK,SAAS;AAA3C,IACI,cAAcC,UAASA,QAAO,cAAc;AAUhD,SAAS,YAAY,QAAQ,QAAQ;AACnC,MAAI,QAAQ;AACV,WAAO,OAAO,MAAM;AAAA,EACtB;AACA,MAAI,SAAS,OAAO,QAChB,SAAS,cAAc,YAAY,MAAM,IAAI,IAAI,OAAO,YAAY,MAAM;AAE9E,SAAO,KAAK,MAAM;AAClB,SAAO;AACT;AAEA,IAAO,sBAAQ;;;AC1Bf,SAAS,UAAU,QAAQC,QAAO;AAChC,MAAI,QAAQ,IACR,SAAS,OAAO;AAEpB,EAAAA,WAAUA,SAAQ,MAAM,MAAM;AAC9B,SAAO,EAAE,QAAQ,QAAQ;AACvB,IAAAA,OAAM,KAAK,IAAI,OAAO,KAAK;AAAA,EAC7B;AACA,SAAOA;AACT;AAEA,IAAO,oBAAQ;;;ACVf,SAAS,YAAYC,QAAO,WAAW;AACrC,MAAI,QAAQ,IACR,SAASA,UAAS,OAAO,IAAIA,OAAM,QACnC,WAAW,GACX,SAAS,CAAC;AAEd,SAAO,EAAE,QAAQ,QAAQ;AACvB,QAAI,QAAQA,OAAM,KAAK;AACvB,QAAI,UAAU,OAAO,OAAOA,MAAK,GAAG;AAClC,aAAO,UAAU,IAAI;AAAA,IACvB;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACNf,SAAS,YAAY;AACnB,SAAO,CAAC;AACV;AAEA,IAAO,oBAAQ;;;AClBf,IAAIC,gBAAc,OAAO;AAGzB,IAAIC,wBAAuBD,cAAY;AAGvC,IAAI,mBAAmB,OAAO;AAS9B,IAAI,aAAa,CAAC,mBAAmB,oBAAY,SAASE,SAAQ;AAChE,MAAIA,WAAU,MAAM;AAClB,WAAO,CAAC;AAAA,EACV;AACA,EAAAA,UAAS,OAAOA,OAAM;AACtB,SAAO,oBAAY,iBAAiBA,OAAM,GAAG,SAAS,QAAQ;AAC5D,WAAOD,sBAAqB,KAAKC,SAAQ,MAAM;AAAA,EACjD,CAAC;AACH;AAEA,IAAO,qBAAQ;;;AClBf,SAAS,YAAY,QAAQC,SAAQ;AACnC,SAAO,mBAAW,QAAQ,mBAAW,MAAM,GAAGA,OAAM;AACtD;AAEA,IAAO,sBAAQ;;;ACPf,SAAS,UAAUC,QAAO,QAAQ;AAChC,MAAI,QAAQ,IACR,SAAS,OAAO,QAChB,SAASA,OAAM;AAEnB,SAAO,EAAE,QAAQ,QAAQ;AACvB,IAAAA,OAAM,SAAS,KAAK,IAAI,OAAO,KAAK;AAAA,EACtC;AACA,SAAOA;AACT;AAEA,IAAO,oBAAQ;;;ACbf,IAAIC,oBAAmB,OAAO;AAS9B,IAAI,eAAe,CAACA,oBAAmB,oBAAY,SAASC,SAAQ;AAClE,MAAI,SAAS,CAAC;AACd,SAAOA,SAAQ;AACb,sBAAU,QAAQ,mBAAWA,OAAM,CAAC;AACpC,IAAAA,UAAS,qBAAaA,OAAM;AAAA,EAC9B;AACA,SAAO;AACT;AAEA,IAAO,uBAAQ;;;ACbf,SAAS,cAAc,QAAQC,SAAQ;AACrC,SAAO,mBAAW,QAAQ,qBAAa,MAAM,GAAGA,OAAM;AACxD;AAEA,IAAO,wBAAQ;;;ACDf,SAAS,eAAeC,SAAQ,UAAU,aAAa;AACrD,MAAI,SAAS,SAASA,OAAM;AAC5B,SAAO,gBAAQA,OAAM,IAAI,SAAS,kBAAU,QAAQ,YAAYA,OAAM,CAAC;AACzE;AAEA,IAAO,yBAAQ;;;ACRf,SAAS,WAAWC,SAAQ;AAC1B,SAAO,uBAAeA,SAAQ,cAAM,kBAAU;AAChD;AAEA,IAAO,qBAAQ;;;ACHf,SAAS,aAAaC,SAAQ;AAC5B,SAAO,uBAAeA,SAAQ,gBAAQ,oBAAY;AACpD;AAEA,IAAO,uBAAQ;;;ACZf,IAAI,WAAW,kBAAU,cAAM,UAAU;AAEzC,IAAO,mBAAQ;;;ACFf,IAAIC,WAAU,kBAAU,cAAM,SAAS;AAEvC,IAAO,kBAAQA;;;ACFf,IAAIC,OAAM,kBAAU,cAAM,KAAK;AAE/B,IAAO,cAAQA;;;ACFf,IAAIC,WAAU,kBAAU,cAAM,SAAS;AAEvC,IAAO,kBAAQA;;;ACGf,IAAIC,UAAS;AAAb,IACIC,aAAY;AADhB,IAEI,aAAa;AAFjB,IAGIC,UAAS;AAHb,IAIIC,cAAa;AAEjB,IAAIC,eAAc;AAGlB,IAAI,qBAAqB,iBAAS,gBAAQ;AAA1C,IACI,gBAAgB,iBAAS,WAAG;AADhC,IAEI,oBAAoB,iBAAS,eAAO;AAFxC,IAGI,gBAAgB,iBAAS,WAAG;AAHhC,IAII,oBAAoB,iBAAS,eAAO;AASxC,IAAI,SAAS;AAGb,IAAK,oBAAY,OAAO,IAAI,iBAAS,IAAI,YAAY,CAAC,CAAC,CAAC,KAAKA,gBACxD,eAAO,OAAO,IAAI,aAAG,KAAKJ,WAC1B,mBAAW,OAAO,gBAAQ,QAAQ,CAAC,KAAK,cACxC,eAAO,OAAO,IAAI,aAAG,KAAKE,WAC1B,mBAAW,OAAO,IAAI,iBAAO,KAAKC,aAAa;AAClD,WAAS,SAAS,OAAO;AACvB,QAAI,SAAS,mBAAW,KAAK,GACzB,OAAO,UAAUF,aAAY,MAAM,cAAc,QACjD,aAAa,OAAO,iBAAS,IAAI,IAAI;AAEzC,QAAI,YAAY;AACd,cAAQ,YAAY;AAAA,QAClB,KAAK;AAAoB,iBAAOG;AAAA,QAChC,KAAK;AAAe,iBAAOJ;AAAA,QAC3B,KAAK;AAAmB,iBAAO;AAAA,QAC/B,KAAK;AAAe,iBAAOE;AAAA,QAC3B,KAAK;AAAmB,iBAAOC;AAAA,MACjC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AAEA,IAAO,iBAAQ;;;ACxDf,IAAIE,gBAAc,OAAO;AAGzB,IAAIC,mBAAiBD,cAAY;AASjC,SAAS,eAAeE,QAAO;AAC7B,MAAI,SAASA,OAAM,QACf,SAAS,IAAIA,OAAM,YAAY,MAAM;AAGzC,MAAI,UAAU,OAAOA,OAAM,CAAC,KAAK,YAAYD,iBAAe,KAAKC,QAAO,OAAO,GAAG;AAChF,WAAO,QAAQA,OAAM;AACrB,WAAO,QAAQA,OAAM;AAAA,EACvB;AACA,SAAO;AACT;AAEA,IAAO,yBAAQ;;;ACtBf,IAAIC,cAAa,aAAK;AAEtB,IAAO,qBAAQA;;;ACIf,SAAS,iBAAiB,aAAa;AACrC,MAAI,SAAS,IAAI,YAAY,YAAY,YAAY,UAAU;AAC/D,MAAI,mBAAW,MAAM,EAAE,IAAI,IAAI,mBAAW,WAAW,CAAC;AACtD,SAAO;AACT;AAEA,IAAO,2BAAQ;;;ACLf,SAAS,cAAc,UAAU,QAAQ;AACvC,MAAI,SAAS,SAAS,yBAAiB,SAAS,MAAM,IAAI,SAAS;AACnE,SAAO,IAAI,SAAS,YAAY,QAAQ,SAAS,YAAY,SAAS,UAAU;AAClF;AAEA,IAAO,wBAAQ;;;ACdf,IAAI,UAAU;AASd,SAAS,YAAY,QAAQ;AAC3B,MAAI,SAAS,IAAI,OAAO,YAAY,OAAO,QAAQ,QAAQ,KAAK,MAAM,CAAC;AACvE,SAAO,YAAY,OAAO;AAC1B,SAAO;AACT;AAEA,IAAO,sBAAQ;;;ACbf,IAAI,cAAc,iBAAS,eAAO,YAAY;AAA9C,IACI,gBAAgB,cAAc,YAAY,UAAU;AASxD,SAAS,YAAY,QAAQ;AAC3B,SAAO,gBAAgB,OAAO,cAAc,KAAK,MAAM,CAAC,IAAI,CAAC;AAC/D;AAEA,IAAO,sBAAQ;;;ACPf,SAAS,gBAAgB,YAAY,QAAQ;AAC3C,MAAI,SAAS,SAAS,yBAAiB,WAAW,MAAM,IAAI,WAAW;AACvE,SAAO,IAAI,WAAW,YAAY,QAAQ,WAAW,YAAY,WAAW,MAAM;AACpF;AAEA,IAAO,0BAAQ;;;ACRf,IAAIC,WAAU;AAAd,IACIC,WAAU;AADd,IAEIC,UAAS;AAFb,IAGIC,aAAY;AAHhB,IAIIC,aAAY;AAJhB,IAKIC,UAAS;AALb,IAMIC,aAAY;AANhB,IAOI,YAAY;AAEhB,IAAIC,kBAAiB;AAArB,IACIC,eAAc;AADlB,IAEIC,cAAa;AAFjB,IAGIC,cAAa;AAHjB,IAIIC,WAAU;AAJd,IAKIC,YAAW;AALf,IAMIC,YAAW;AANf,IAOIC,YAAW;AAPf,IAQIC,mBAAkB;AARtB,IASIC,aAAY;AAThB,IAUIC,aAAY;AAchB,SAAS,eAAeC,SAAQ,KAAK,QAAQ;AAC3C,MAAI,OAAOA,QAAO;AAClB,UAAQ,KAAK;AAAA,IACX,KAAKX;AACH,aAAO,yBAAiBW,OAAM;AAAA,IAEhC,KAAKlB;AAAA,IACL,KAAKC;AACH,aAAO,IAAI,KAAK,CAACiB,OAAM;AAAA,IAEzB,KAAKV;AACH,aAAO,sBAAcU,SAAQ,MAAM;AAAA,IAErC,KAAKT;AAAA,IAAY,KAAKC;AAAA,IACtB,KAAKC;AAAA,IAAS,KAAKC;AAAA,IAAU,KAAKC;AAAA,IAClC,KAAKC;AAAA,IAAU,KAAKC;AAAA,IAAiB,KAAKC;AAAA,IAAW,KAAKC;AACxD,aAAO,wBAAgBC,SAAQ,MAAM;AAAA,IAEvC,KAAKhB;AACH,aAAO,IAAI;AAAA,IAEb,KAAKC;AAAA,IACL,KAAKG;AACH,aAAO,IAAI,KAAKY,OAAM;AAAA,IAExB,KAAKd;AACH,aAAO,oBAAYc,OAAM;AAAA,IAE3B,KAAKb;AACH,aAAO,IAAI;AAAA,IAEb,KAAK;AACH,aAAO,oBAAYa,OAAM;AAAA,EAC7B;AACF;AAEA,IAAO,yBAAQ;;;ACzEf,IAAI,eAAe,OAAO;AAU1B,IAAI,aAAc,WAAW;AAC3B,WAASC,UAAS;AAAA,EAAC;AACnB,SAAO,SAAS,OAAO;AACrB,QAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,aAAO,CAAC;AAAA,IACV;AACA,QAAI,cAAc;AAChB,aAAO,aAAa,KAAK;AAAA,IAC3B;AACA,IAAAA,QAAO,YAAY;AACnB,QAAI,SAAS,IAAIA;AACjB,IAAAA,QAAO,YAAY;AACnB,WAAO;AAAA,EACT;AACF,EAAE;AAEF,IAAO,qBAAQ;;;AClBf,SAAS,gBAAgBC,SAAQ;AAC/B,SAAQ,OAAOA,QAAO,eAAe,cAAc,CAAC,oBAAYA,OAAM,IAClE,mBAAW,qBAAaA,OAAM,CAAC,IAC/B,CAAC;AACP;AAEA,IAAO,0BAAQ;;;ACbf,IAAIC,UAAS;AASb,SAAS,UAAU,OAAO;AACxB,SAAO,qBAAa,KAAK,KAAK,eAAO,KAAK,KAAKA;AACjD;AAEA,IAAO,oBAAQ;;;ACZf,IAAI,YAAY,oBAAY,iBAAS;AAmBrC,IAAI,QAAQ,YAAY,kBAAU,SAAS,IAAI;AAE/C,IAAO,gBAAQ;;;ACtBf,IAAIC,UAAS;AASb,SAAS,UAAU,OAAO;AACxB,SAAO,qBAAa,KAAK,KAAK,eAAO,KAAK,KAAKA;AACjD;AAEA,IAAO,oBAAQ;;;ACZf,IAAI,YAAY,oBAAY,iBAAS;AAmBrC,IAAI,QAAQ,YAAY,kBAAU,SAAS,IAAI;AAE/C,IAAO,gBAAQ;;;ACFf,IAAI,kBAAkB;AAAtB,IACI,kBAAkB;AADtB,IAEI,qBAAqB;AAGzB,IAAIC,WAAU;AAAd,IACIC,YAAW;AADf,IAEIC,WAAU;AAFd,IAGIC,WAAU;AAHd,IAIIC,YAAW;AAJf,IAKIC,WAAU;AALd,IAMIC,UAAS;AANb,IAOIC,UAAS;AAPb,IAQIC,aAAY;AARhB,IASIC,aAAY;AAThB,IAUIC,aAAY;AAVhB,IAWIC,UAAS;AAXb,IAYIC,aAAY;AAZhB,IAaIC,aAAY;AAbhB,IAcIC,cAAa;AAEjB,IAAIC,kBAAiB;AAArB,IACIC,eAAc;AADlB,IAEIC,cAAa;AAFjB,IAGIC,cAAa;AAHjB,IAIIC,WAAU;AAJd,IAKIC,YAAW;AALf,IAMIC,YAAW;AANf,IAOIC,YAAW;AAPf,IAQIC,mBAAkB;AARtB,IASIC,aAAY;AAThB,IAUIC,aAAY;AAGhB,IAAI,gBAAgB,CAAC;AACrB,cAAczB,QAAO,IAAI,cAAcC,SAAQ,IAC/C,cAAcc,eAAc,IAAI,cAAcC,YAAW,IACzD,cAAcd,QAAO,IAAI,cAAcC,QAAO,IAC9C,cAAcc,WAAU,IAAI,cAAcC,WAAU,IACpD,cAAcC,QAAO,IAAI,cAAcC,SAAQ,IAC/C,cAAcC,SAAQ,IAAI,cAAcd,OAAM,IAC9C,cAAcC,UAAS,IAAI,cAAcC,UAAS,IAClD,cAAcC,UAAS,IAAI,cAAcC,OAAM,IAC/C,cAAcC,UAAS,IAAI,cAAcC,UAAS,IAClD,cAAcS,SAAQ,IAAI,cAAcC,gBAAe,IACvD,cAAcC,UAAS,IAAI,cAAcC,UAAS,IAAI;AACtD,cAAcrB,SAAQ,IAAI,cAAcC,QAAO,IAC/C,cAAcS,WAAU,IAAI;AAkB5B,SAAS,UAAU,OAAO,SAAS,YAAY,KAAKY,SAAQ,OAAO;AACjE,MAAI,QACA,SAAS,UAAU,iBACnB,SAAS,UAAU,iBACnB,SAAS,UAAU;AAEvB,MAAI,YAAY;AACd,aAASA,UAAS,WAAW,OAAO,KAAKA,SAAQ,KAAK,IAAI,WAAW,KAAK;AAAA,EAC5E;AACA,MAAI,WAAW,QAAW;AACxB,WAAO;AAAA,EACT;AACA,MAAI,CAAC,iBAAS,KAAK,GAAG;AACpB,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,gBAAQ,KAAK;AACzB,MAAI,OAAO;AACT,aAAS,uBAAe,KAAK;AAC7B,QAAI,CAAC,QAAQ;AACX,aAAO,kBAAU,OAAO,MAAM;AAAA,IAChC;AAAA,EACF,OAAO;AACL,QAAI,MAAM,eAAO,KAAK,GAClB,SAAS,OAAOrB,YAAW,OAAOC;AAEtC,QAAI,iBAAS,KAAK,GAAG;AACnB,aAAO,oBAAY,OAAO,MAAM;AAAA,IAClC;AACA,QAAI,OAAOG,cAAa,OAAOT,YAAY,UAAU,CAAC0B,SAAS;AAC7D,eAAU,UAAU,SAAU,CAAC,IAAI,wBAAgB,KAAK;AACxD,UAAI,CAAC,QAAQ;AACX,eAAO,SACH,sBAAc,OAAO,qBAAa,QAAQ,KAAK,CAAC,IAChD,oBAAY,OAAO,mBAAW,QAAQ,KAAK,CAAC;AAAA,MAClD;AAAA,IACF,OAAO;AACL,UAAI,CAAC,cAAc,GAAG,GAAG;AACvB,eAAOA,UAAS,QAAQ,CAAC;AAAA,MAC3B;AACA,eAAS,uBAAe,OAAO,KAAK,MAAM;AAAA,IAC5C;AAAA,EACF;AAEA,YAAU,QAAQ,IAAI;AACtB,MAAI,UAAU,MAAM,IAAI,KAAK;AAC7B,MAAI,SAAS;AACX,WAAO;AAAA,EACT;AACA,QAAM,IAAI,OAAO,MAAM;AAEvB,MAAI,cAAM,KAAK,GAAG;AAChB,UAAM,QAAQ,SAAS,UAAU;AAC/B,aAAO,IAAI,UAAU,UAAU,SAAS,YAAY,UAAU,OAAO,KAAK,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH,WAAW,cAAM,KAAK,GAAG;AACvB,UAAM,QAAQ,SAAS,UAAUC,MAAK;AACpC,aAAO,IAAIA,MAAK,UAAU,UAAU,SAAS,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,IAC7E,CAAC;AAAA,EACH;AAEA,MAAI,WAAW,SACV,SAAS,uBAAe,qBACxB,SAAS,iBAAS;AAEvB,MAAI,QAAQ,QAAQ,SAAY,SAAS,KAAK;AAC9C,oBAAU,SAAS,OAAO,SAAS,UAAUA,MAAK;AAChD,QAAI,OAAO;AACT,MAAAA,OAAM;AACN,iBAAW,MAAMA,IAAG;AAAA,IACtB;AAEA,wBAAY,QAAQA,MAAK,UAAU,UAAU,SAAS,YAAYA,MAAK,OAAO,KAAK,CAAC;AAAA,EACtF,CAAC;AACD,SAAO;AACT;AAEA,IAAO,oBAAQ;;;AClKf,IAAIC,mBAAkB;AAAtB,IACIC,sBAAqB;AAoBzB,SAAS,UAAU,OAAO;AACxB,SAAO,kBAAU,OAAOD,mBAAkBC,mBAAkB;AAC9D;AAEA,IAAO,oBAAQ;;;;;;;AC5Bf,IAAI,eAAe,QAAQ,IAAI,aAAa;AAC5C,SAAS,QAAQ,WAAW,SAAS;AACnC,MAAI,CAAC,cAAc;AACjB,QAAI,WAAW;AACb;AAAA,IACF;AAEA,QAAI,OAAO,cAAc;AAEzB,QAAI,OAAO,YAAY,aAAa;AAClC,cAAQ,KAAK,IAAI;AAAA,IACnB;AAEA,QAAI;AACF,YAAM,MAAM,IAAI;AAAA,IAClB,SAAS,GAAG;AAAA,IAAC;AAAA,EACf;AACF;AAEA,IAAO,2BAAQ;;;AChBf,IAAIC,sBAAqB;AA4BzB,SAASC,OAAM,OAAO;AACpB,SAAO,kBAAU,OAAOD,mBAAkB;AAC5C;AAEA,IAAO,gBAAQC;;;AC1Bf,SAAS,SAASC,QAAO,UAAU;AACjC,MAAI,QAAQ,IACR,SAASA,UAAS,OAAO,IAAIA,OAAM,QACnC,SAAS,MAAM,MAAM;AAEzB,SAAO,EAAE,QAAQ,QAAQ;AACvB,WAAO,KAAK,IAAI,SAASA,OAAM,KAAK,GAAG,OAAOA,MAAK;AAAA,EACrD;AACA,SAAO;AACT;AAEA,IAAO,mBAAQ;;;AChBf,IAAIC,aAAY;AAmBhB,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,SAAS,YACpB,qBAAa,KAAK,KAAK,mBAAW,KAAK,KAAKA;AACjD;AAEA,IAAO,mBAAQ;;;ACzBf,IAAI,kBAAkB;AA8CtB,SAAS,QAAQ,MAAM,UAAU;AAC/B,MAAI,OAAO,QAAQ,cAAe,YAAY,QAAQ,OAAO,YAAY,YAAa;AACpF,UAAM,IAAI,UAAU,eAAe;AAAA,EACrC;AACA,MAAI,WAAW,WAAW;AACxB,QAAI,OAAO,WACP,MAAM,WAAW,SAAS,MAAM,MAAM,IAAI,IAAI,KAAK,CAAC,GACpD,QAAQ,SAAS;AAErB,QAAI,MAAM,IAAI,GAAG,GAAG;AAClB,aAAO,MAAM,IAAI,GAAG;AAAA,IACtB;AACA,QAAI,SAAS,KAAK,MAAM,MAAM,IAAI;AAClC,aAAS,QAAQ,MAAM,IAAI,KAAK,MAAM,KAAK;AAC3C,WAAO;AAAA,EACT;AACA,WAAS,QAAQ,KAAK,QAAQ,SAAS;AACvC,SAAO;AACT;AAGA,QAAQ,QAAQ;AAEhB,IAAO,kBAAQ;;;ACrEf,IAAI,mBAAmB;AAUvB,SAAS,cAAc,MAAM;AAC3B,MAAI,SAAS,gBAAQ,MAAM,SAAS,KAAK;AACvC,QAAI,MAAM,SAAS,kBAAkB;AACnC,YAAM,MAAM;AAAA,IACd;AACA,WAAO;AAAA,EACT,CAAC;AAED,MAAI,QAAQ,OAAO;AACnB,SAAO;AACT;AAEA,IAAO,wBAAQ;;;ACtBf,IAAI,aAAa;AAGjB,IAAI,eAAe;AASnB,IAAI,eAAe,sBAAc,SAASC,SAAQ;AAChD,MAAI,SAAS,CAAC;AACd,MAAIA,QAAO,WAAW,CAAC,MAAM,IAAY;AACvC,WAAO,KAAK,EAAE;AAAA,EAChB;AACA,EAAAA,QAAO,QAAQ,YAAY,SAAS,OAAOC,SAAQ,OAAO,WAAW;AACnE,WAAO,KAAK,QAAQ,UAAU,QAAQ,cAAc,IAAI,IAAKA,WAAU,KAAM;AAAA,EAC/E,CAAC;AACD,SAAO;AACT,CAAC;AAED,IAAO,uBAAQ;;;ACvBf,IAAI,WAAW,IAAI;AASnB,SAAS,MAAM,OAAO;AACpB,MAAI,OAAO,SAAS,YAAY,iBAAS,KAAK,GAAG;AAC/C,WAAO;AAAA,EACT;AACA,MAAI,SAAU,QAAQ;AACtB,SAAQ,UAAU,OAAQ,IAAI,SAAU,CAAC,WAAY,OAAO;AAC9D;AAEA,IAAO,gBAAQ;;;ACdf,IAAIC,YAAW,IAAI;AAGnB,IAAIC,eAAc,iBAAS,eAAO,YAAY;AAA9C,IACIC,kBAAiBD,eAAcA,aAAY,WAAW;AAU1D,SAAS,aAAa,OAAO;AAE3B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,gBAAQ,KAAK,GAAG;AAElB,WAAO,iBAAS,OAAO,YAAY,IAAI;AAAA,EACzC;AACA,MAAI,iBAAS,KAAK,GAAG;AACnB,WAAOC,kBAAiBA,gBAAe,KAAK,KAAK,IAAI;AAAA,EACvD;AACA,MAAI,SAAU,QAAQ;AACtB,SAAQ,UAAU,OAAQ,IAAI,SAAU,CAACF,YAAY,OAAO;AAC9D;AAEA,IAAO,uBAAQ;;;ACbf,SAASG,UAAS,OAAO;AACvB,SAAO,SAAS,OAAO,KAAK,qBAAa,KAAK;AAChD;AAEA,IAAO,mBAAQA;;;ACFf,SAAS,OAAO,OAAO;AACrB,MAAI,gBAAQ,KAAK,GAAG;AAClB,WAAO,iBAAS,OAAO,aAAK;AAAA,EAC9B;AACA,SAAO,iBAAS,KAAK,IAAI,CAAC,KAAK,IAAI,kBAAU,qBAAa,iBAAS,KAAK,CAAC,CAAC;AAC5E;AAEA,IAAO,iBAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC5BFC,gBAAgBC,gBAAAA,eAC3BC,MAD2B;AAG7BF,cAAcG,cAAc;IAEfC,iBAAiBJ,cAAcK;IAC/BC,iBAAiBN,cAAcO;SAE5BC,mBAAAA;AACd,MAAMC,SAASR,YAA4CD,aAA5C;AAEf,GACE,CAAC,CAACS,SADJ,QAAA,IAAA,aAAA,eAAAC,yBAAS,OAAA,iHAAA,IAATA,yBAAS,KAAA,IAAT;AAKA,SAAOD;AACR;ACdD,IAAaE,eAAe,SAAfA,cAAgBC,OAAD;AAAA,SAC1BC,MAAMC,QAAQF,KAAd,KAAwBA,MAAMG,WAAW;AADf;AAI5B,IAAaC,cAAa,SAAbA,YAAcC,KAAD;AAAA,SACxB,OAAOA,QAAQ;AADS;AAI1B,IAAaC,YAAW,SAAXA,UAAYD,KAAD;AAAA,SACtBA,QAAQ,QAAQ,OAAOA,QAAQ;AADT;AAIxB,IAAaE,YAAY,SAAZA,WAAaF,KAAD;AAAA,SACvBG,OAAOC,KAAKC,MAAMC,OAAON,GAAD,CAAjB,CAAD,MAA8BA;AADb;AAIzB,IAAaO,WAAW,SAAXA,UAAYP,KAAD;AAAA,SACtBQ,OAAOC,UAAUC,SAASC,KAAKX,GAA/B,MAAwC;AADlB;AAQxB,IAAaY,kBAAkB,SAAlBA,iBAAmBC,UAAD;AAAA,SAC7BC,SAAeC,MAAMF,QAArB,MAAmC;AADN;AAI/B,IAAaG,YAAY,SAAZA,WAAaC,OAAD;AAAA,SACvBC,UAASD,KAAD,KAAWE,YAAWF,MAAMG,IAAP;AADN;AAkBzB,SAAgBC,iBAAiBC,KAAAA;AAC/BA,QAAMA,QAAQ,OAAOC,aAAa,cAAcA,WAAWC;AAC3D,MAAI,OAAOF,QAAQ,aAAa;AAC9B,WAAO;EACR;AACD,MAAI;AACF,WAAOA,IAAIG,iBAAiBH,IAAII;EACjC,SAAQC,IAAG;AACV,WAAOL,IAAII;EACZ;AACF;AAKD,SAAgBE,OACdC,KACAC,KACAC,KACAC,IAAAA;MAAAA,OAAAA,QAAAA;AAAAA,IAAAA,KAAY;;AAEZ,MAAMC,OAAOC,eAAOJ,GAAD;AACnB,SAAOD,OAAOG,KAAIC,KAAKE,QAAQ;AAC7BN,UAAMA,IAAII,KAAKD,IAAD,CAAL;EACV;AAGD,MAAIA,OAAMC,KAAKE,UAAU,CAACN,KAAK;AAC7B,WAAOE;EACR;AAED,SAAOF,QAAQL,SAAYO,MAAMF;AAClC;AA0BD,SAAgBO,MAAMP,KAAUI,MAAcI,OAAAA;AAC5C,MAAIC,MAAWC,cAAMV,GAAD;AACpB,MAAIW,SAAcF;AAClB,MAAIG,IAAI;AACR,MAAIC,YAAYR,eAAOD,IAAD;AAEtB,SAAOQ,IAAIC,UAAUP,SAAS,GAAGM,KAAK;AACpC,QAAME,cAAsBD,UAAUD,CAAD;AACrC,QAAIG,aAAkBhB,OAAMC,KAAKa,UAAUG,MAAM,GAAGJ,IAAI,CAAvB,CAAN;AAE3B,QAAIG,eAAeE,UAASF,UAAD,KAAgBG,MAAMC,QAAQJ,UAAd,IAA4B;AACrEJ,eAASA,OAAOG,WAAD,IAAgBJ,cAAMK,UAAD;IACrC,OAAM;AACL,UAAMK,WAAmBP,UAAUD,IAAI,CAAL;AAClCD,eAASA,OAAOG,WAAD,IACbO,UAAUD,QAAD,KAAcE,OAAOF,QAAD,KAAc,IAAI,CAAA,IAAK,CAAA;IACvD;EACF;AAGD,OAAKR,MAAM,IAAIZ,MAAMW,QAAQE,UAAUD,CAAD,CAAlC,MAA2CJ,OAAO;AACpD,WAAOR;EACR;AAED,MAAIQ,UAAUb,QAAW;AACvB,WAAOgB,OAAOE,UAAUD,CAAD,CAAV;EACd,OAAM;AACLD,WAAOE,UAAUD,CAAD,CAAV,IAAiBJ;EACxB;AAID,MAAII,MAAM,KAAKJ,UAAUb,QAAW;AAClC,WAAOc,IAAII,UAAUD,CAAD,CAAV;EACX;AAED,SAAOH;AACR;AASD,SAAgBc,sBACdC,SACAhB,OACAiB,SACAC,UAAAA;MADAD,YAAAA,QAAAA;AAAAA,cAAe,oBAAIE,QAAJ;;MACfD,aAAAA,QAAAA;AAAAA,eAAgB,CAAA;;AAEhB,WAAA,KAAA,GAAA,eAAcE,OAAOC,KAAKL,OAAZ,GAAd,KAAA,aAAA,QAAA,MAAmC;AAA9B,QAAIM,KAAC,aAAA,EAAA;AACR,QAAMC,MAAMP,QAAOM,EAAD;AAClB,QAAIb,UAASc,GAAD,GAAO;AACjB,UAAI,CAACN,QAAQO,IAAID,GAAZ,GAAkB;AACrBN,gBAAQQ,IAAIF,KAAK,IAAjB;AAIAL,iBAASI,EAAD,IAAMZ,MAAMC,QAAQY,GAAd,IAAqB,CAAA,IAAK,CAAA;AACxCR,8BAAsBQ,KAAKvB,OAAOiB,SAASC,SAASI,EAAD,CAA9B;MACtB;IACF,OAAM;AACLJ,eAASI,EAAD,IAAMtB;IACf;EACF;AAED,SAAOkB;AACR;AC5HD,SAASQ,cACPC,OACAC,KAFF;AAIE,UAAQA,IAAIC,MAAZ;IACE,KAAK;AACH,aAAA,SAAA,CAAA,GAAYF,OAAZ;QAAmBG,QAAQF,IAAIG;MAA/B,CAAA;IACF,KAAK;AACH,aAAA,SAAA,CAAA,GAAYJ,OAAZ;QAAmBK,SAASJ,IAAIG;MAAhC,CAAA;IACF,KAAK;AACH,cAAIE,0BAAAA,SAAQN,MAAMO,QAAQN,IAAIG,OAAnB,GAA6B;AACtC,eAAOJ;MACR;AAED,aAAA,SAAA,CAAA,GAAYA,OAAZ;QAAmBO,QAAQN,IAAIG;MAA/B,CAAA;IACF,KAAK;AACH,aAAA,SAAA,CAAA,GAAYJ,OAAZ;QAAmBQ,QAAQP,IAAIG;MAA/B,CAAA;IACF,KAAK;AACH,aAAA,SAAA,CAAA,GAAYJ,OAAZ;QAAmBS,cAAcR,IAAIG;MAArC,CAAA;IACF,KAAK;AACH,aAAA,SAAA,CAAA,GAAYJ,OAAZ;QAAmBU,cAAcT,IAAIG;MAArC,CAAA;IACF,KAAK;AACH,aAAA,SAAA,CAAA,GACKJ,OADL;QAEEG,QAAQ/B,MAAM4B,MAAMG,QAAQF,IAAIG,QAAQO,OAAOV,IAAIG,QAAQ/B,KAA9C;MAFf,CAAA;IAIF,KAAK;AACH,aAAA,SAAA,CAAA,GACK2B,OADL;QAEEK,SAASjC,MAAM4B,MAAMK,SAASJ,IAAIG,QAAQO,OAAOV,IAAIG,QAAQ/B,KAA/C;MAFhB,CAAA;IAIF,KAAK;AACH,aAAA,SAAA,CAAA,GACK2B,OADL;QAEEO,QAAQnC,MAAM4B,MAAMO,QAAQN,IAAIG,QAAQO,OAAOV,IAAIG,QAAQ/B,KAA9C;MAFf,CAAA;IAIF,KAAK;AACH,aAAA,SAAA,CAAA,GAAY2B,OAAUC,IAAIG,OAA1B;IACF,KAAK;AACH,aAAOH,IAAIG,QAAQJ,KAAZ;IACT,KAAK;AACH,aAAA,SAAA,CAAA,GACKA,OADL;QAEEK,SAASjB,sBACPY,MAAMG,QACN,IAF4B;QAI9BM,cAAc;QACdG,aAAaZ,MAAMY,cAAc;MAPnC,CAAA;IASF,KAAK;AACH,aAAA,SAAA,CAAA,GACKZ,OADL;QAEES,cAAc;MAFhB,CAAA;IAIF,KAAK;AACH,aAAA,SAAA,CAAA,GACKT,OADL;QAEES,cAAc;MAFhB,CAAA;IAIF;AACE,aAAOT;EAzDX;AA2DD;AAGD,IAAMa,cAAqC,CAAA;AAC3C,IAAMC,eAAuC,CAAA;AAU7C,SAAgBC,UAAAA,MAAAA;mCACdC,kBAAAA,mBAAAA,0BAAAA,SAAmB,OAAA,kDACnBC,gBAAAA,iBAAAA,wBAAAA,SAAiB,OAAA,iDACjBC,iBAAAA,kBAAAA,yBAAAA,SAAkB,QAAA,sBAClBC,iBAAAA,KAAAA,6CACAC,oBAAAA,qBAAAA,0BAAAA,SAAqB,QAAA,uBACrBC,WAAAA,KAAAA,UACGC,OAAAA,8BAAAA,MAAAA,CAAAA,oBAAAA,kBAAAA,mBAAAA,kBAAAA,sBAAAA,UAAAA,CAAAA;AAEH,MAAMC,QAAK,SAAA;IACTP;IACAC;IACAC;IACAG;EAJS,GAKNC,IALM;AAOX,MAAME,gBAAgBC,QAAaF,MAAMC,aAAnB;AACtB,MAAME,gBAAgBD,QAAaF,MAAMG,iBAAiBb,WAApC;AACtB,MAAMc,iBAAiBF,QAAaF,MAAMI,kBAAkBb,YAArC;AACvB,MAAMc,gBAAgBH,QAAaF,MAAMK,aAAnB;AACtB,MAAMC,YAAYJ,QAAsB,KAAtB;AAClB,MAAMK,gBAAgBL,QAA4B,CAAA,CAA5B;AACtB,MAAA,QAAA,IAAA,aAAA,cAAa;AAEXA,IAAAA,YAAgB,WAAA;AACd,QACE,OAAON,mBAAmB,eAD5B,QAAA,IAAA,aAAA,eAAAY,yBAAS,OAEP,2IAFO,IAATA,yBAAS,KAAA,IAAT;IAKD,GAAE,CAAA,CANH;EAOD;AAEDN,EAAAA,YAAgB,WAAA;AACdI,cAAUG,UAAU;AAEpB,WAAO,WAAA;AACLH,gBAAUG,UAAU;IACrB;EACF,GAAE,CAAA,CANH;wBAQyBP,WAAe,CAAf,GAAhBQ,eAAAA,gBAAAA,CAAAA;AACT,MAAMC,WAAWT,QAAkC;IACjDtB,QAAQgC,kBAAUZ,MAAMC,aAAP;IACjBjB,QAAQ4B,kBAAUZ,MAAMG,aAAP,KAAyBb;IAC1CR,SAAS8B,kBAAUZ,MAAMI,cAAP,KAA0Bb;IAC5CN,QAAQ2B,kBAAUZ,MAAMK,aAAP;IACjBnB,cAAc;IACdC,cAAc;IACdE,aAAa;EAPoC,CAAlC;AAUjB,MAAMZ,QAAQkC,SAASF;AAEvB,MAAMI,WAAWX,aAAkB,SAACY,QAAD;AACjC,QAAMC,OAAOJ,SAASF;AAEtBE,aAASF,UAAUjC,cAAcuC,MAAMD,MAAP;AAGhC,QAAIC,SAASJ,SAASF;AAASC,mBAAa,SAAAM,GAAC;AAAA,eAAIA,IAAI;MAAR,CAAF;EAC5C,GAAE,CAAA,CAPc;AASjB,MAAMC,qBAAqBf,aACzB,SAACtB,QAAgBQ,OAAjB;AACE,WAAO,IAAI8B,QAAQ,SAACC,SAASC,QAAV;AACjB,UAAMC,sBAAuBrB,MAAMsB,SAAiB1C,QAAQQ,KAA/B;AAC7B,UAAIiC,uBAAuB,MAAM;AAE/BF,gBAAQ7B,WAAD;MACR,WAAUiC,UAAUF,mBAAD,GAAuB;AACxCA,4BAAqCG,KACpC,SAAAxC,QAAM;AACJmC,kBAAQnC,UAAUM,WAAX;QACR,GACD,SAAAmC,iBAAe;AACb,cAAIC,QAAQC,IAAIC,aAAa,cAAc;AACzCC,oBAAQC,KAAR,mFAEEL,eAFF;UAID;AAEDL,iBAAOK,eAAD;QACP,CAbF;MAeF,OAAM;AACLN,gBAAQE,mBAAD;MACR;IACF,CAxBM;EAyBR,GACD,CAACrB,MAAMsB,QAAP,CA5ByB;AAkC3B,MAAMS,sBAAsB7B,aAC1B,SAACtB,QAAgBQ,OAAjB;AACE,QAAM4C,mBAAmBhC,MAAMgC;AAC/B,QAAMC,SAASC,YAAWF,gBAAD,IACrBA,iBAAiB5C,KAAD,IAChB4C;AACJ,QAAMG,UACJ/C,SAAS6C,OAAOG,aACZH,OAAOG,WAAWhD,OAAOR,MAAzB,IACAyD,kBAAkBzD,QAAQqD,MAAT;AACvB,WAAO,IAAIf,QAAQ,SAACC,SAASC,QAAV;AACjBe,cAAQX,KACN,WAAA;AACEL,gBAAQ7B,WAAD;MACR,GACD,SAACgD,KAAD;AAKE,YAAIA,IAAIC,SAAS,mBAAmB;AAClCpB,kBAAQqB,gBAAgBF,GAAD,CAAhB;QACR,OAAM;AAEL,cAAIZ,QAAQC,IAAIC,aAAa,cAAc;AACzCC,oBAAQC,KAAR,2FAEEQ,GAFF;UAID;AAEDlB,iBAAOkB,GAAD;QACP;MACF,CAtBH;IAwBD,CAzBM;EA0BR,GACD,CAACtC,MAAMgC,gBAAP,CArC0B;AAwC5B,MAAMS,gCAAgCvC,aACpC,SAACd,OAAetC,OAAhB;AACE,WAAO,IAAIoE,QAAQ,SAAAC,SAAO;AAAA,aACxBA,QAAQZ,cAAcE,QAAQrB,KAAtB,EAA6BkC,SAASxE,KAAtC,CAAD;IADiB,CAAnB;EAGR,GACD,CAAA,CANoC;AAStC,MAAM4F,2BAA2BxC,aAC/B,SAACtB,QAAD;AACE,QAAM+D,0BAAoCzE,OAAOC,KAC/CoC,cAAcE,OAD0B,EAExCmC,OAAO,SAAAC,GAAC;AAAA,aAAIX,YAAW3B,cAAcE,QAAQoC,CAAtB,EAAyBvB,QAA1B;IAAd,CAFgC;AAK1C,QAAMwB,mBACJH,wBAAwB/F,SAAS,IAC7B+F,wBAAwBI,IAAI,SAAAF,GAAC;AAAA,aAC3BJ,8BAA8BI,GAAGxG,OAAMuC,QAAQiE,CAAT,CAAT;IADF,CAA7B,IAGA,CAAC3B,QAAQC,QAAQ,iCAAhB,CAAD;AAEN,WAAOD,QAAQ8B,IAAIF,gBAAZ,EAA8BtB,KAAK,SAACyB,iBAAD;AAAA,aACxCA,gBAAgBC,OAAO,SAACnC,MAAMoC,MAAMC,OAAb;AACrB,YAAID,SAAS,mCAAmC;AAC9C,iBAAOpC;QACR;AACD,YAAIoC,MAAM;AACRpC,iBAAOlE,MAAMkE,MAAM4B,wBAAwBS,KAAD,GAASD,IAAvC;QACb;AACD,eAAOpC;MACR,GAAE,CAAA,CARH;IADwC,CAAnC;EAWR,GACD,CAAC0B,6BAAD,CA1B+B;AA8BjC,MAAMY,oBAAoBnD,aACxB,SAACtB,QAAD;AACE,WAAOsC,QAAQ8B,IAAI,CACjBN,yBAAyB9D,MAAD,GACxBoB,MAAMgC,mBAAmBD,oBAAoBnD,MAAD,IAAW,CAAA,GACvDoB,MAAMsB,WAAWL,mBAAmBrC,MAAD,IAAW,CAAA,CAH7B,CAAZ,EAIJ4C,KAAK,SAAA,OAAA;UAAE8B,cAAAA,MAAAA,CAAAA,GAAaC,eAAAA,MAAAA,CAAAA,GAAcC,iBAAAA,MAAAA,CAAAA;AACnC,UAAMC,iBAAiBC,WAAUV,IAC/B,CAACM,aAAaC,cAAcC,cAA5B,GACA;QAAEG;MAAF,CAFqB;AAIvB,aAAOF;IACR,CAVM;EAWR,GACD,CACEzD,MAAMsB,UACNtB,MAAMgC,kBACNU,0BACAzB,oBACAc,mBALF,CAdwB;AAwB1B,MAAM6B,+BAA+BC,iBACnC,SAACjF,QAAD;QAACA,WAAAA,QAAAA;AAAAA,eAAiBH,MAAMG;;AACtBiC,aAAS;MAAElC,MAAM;MAAoBE,SAAS;IAArC,CAAD;AACR,WAAOwE,kBAAkBzE,MAAD,EAAS4C,KAAK,SAAAiC,gBAAc;AAClD,UAAI,CAAC,CAACnD,UAAUG,SAAS;AACvBI,iBAAS;UAAElC,MAAM;UAAoBE,SAAS;QAArC,CAAD;AACRgC,iBAAS;UAAElC,MAAM;UAAcE,SAAS4E;QAA/B,CAAD;MACT;AACD,aAAOA;IACR,CANM;EAOR,CAVkD;AAarDvD,EAAAA,YAAgB,WAAA;AACd,QACEP,mBACAW,UAAUG,YAAY,YACtB1B,0BAAAA,SAAQkB,cAAcQ,SAAST,MAAMC,aAA9B,GACP;AACA2D,mCAA6B3D,cAAcQ,OAAf;IAC7B;EACF,GAAE,CAACd,iBAAiBiE,4BAAlB,CARH;AAUA,MAAME,YAAY5D,aAChB,SAAC6D,WAAD;AACE,QAAMnF,SACJmF,aAAaA,UAAUnF,SACnBmF,UAAUnF,SACVqB,cAAcQ;AACpB,QAAMzB,SACJ+E,aAAaA,UAAU/E,SACnB+E,UAAU/E,SACVmB,cAAcM,UACdN,cAAcM,UACdT,MAAMG,iBAAiB,CAAA;AAC7B,QAAMrB,UACJiF,aAAaA,UAAUjF,UACnBiF,UAAUjF,UACVsB,eAAeK,UACfL,eAAeK,UACfT,MAAMI,kBAAkB,CAAA;AAC9B,QAAMnB,SACJ8E,aAAaA,UAAU9E,SACnB8E,UAAU9E,SACVoB,cAAcI,UACdJ,cAAcI,UACdT,MAAMK;AACZJ,kBAAcQ,UAAU7B;AACxBuB,kBAAcM,UAAUzB;AACxBoB,mBAAeK,UAAU3B;AACzBuB,kBAAcI,UAAUxB;AAExB,QAAM+E,aAAa,SAAbA,cAAa;AACjBnD,eAAS;QACPlC,MAAM;QACNE,SAAS;UACPK,cAAc,CAAC,CAAC6E,aAAa,CAAC,CAACA,UAAU7E;UACzCF;UACAF;UACAG;UACAL;UACAO,cAAc,CAAC,CAAC4E,aAAa,CAAC,CAACA,UAAU5E;UACzCE,aACE,CAAC,CAAC0E,aACF,CAAC,CAACA,UAAU1E,eACZ,OAAO0E,UAAU1E,gBAAgB,WAC7B0E,UAAU1E,cACV;QAZC;MAFF,CAAD;IAiBT;AAED,QAAIW,MAAMiE,SAAS;AACjB,UAAMC,uBAAwBlE,MAAMiE,QAClCxF,MAAMG,QACNuF,iBAF4B;AAK9B,UAAI5C,UAAU2C,oBAAD,GAAwB;AAClCA,6BAAsC1C,KAAKwC,UAA3C;MACF,OAAM;AACLA,mBAAU;MACX;IACF,OAAM;AACLA,iBAAU;IACX;EACF,GACD,CAAChE,MAAMG,eAAeH,MAAMK,eAAeL,MAAMI,gBAAgBJ,MAAMiE,OAAvE,CAhEgB;AAmElB/D,EAAAA,YAAgB,WAAA;AACd,QACEI,UAAUG,YAAY,QACtB,KAAC1B,0BAAAA,SAAQkB,cAAcQ,SAAST,MAAMC,aAA9B,GACR;AACA,UAAIJ,oBAAoB;AACtBI,sBAAcQ,UAAUT,MAAMC;AAC9B6D,kBAAS;AACT,YAAInE,iBAAiB;AACnBiE,uCAA6B3D,cAAcQ,OAAf;QAC7B;MACF;IACF;EACF,GAAE,CACDZ,oBACAG,MAAMC,eACN6D,WACAnE,iBACAiE,4BALC,CAbH;AAqBA1D,EAAAA,YAAgB,WAAA;AACd,QACEL,sBACAS,UAAUG,YAAY,QACtB,KAAC1B,0BAAAA,SAAQoB,cAAcM,SAAST,MAAMG,aAA9B,GACR;AACAA,oBAAcM,UAAUT,MAAMG,iBAAiBb;AAC/CuB,eAAS;QACPlC,MAAM;QACNE,SAASmB,MAAMG,iBAAiBb;MAFzB,CAAD;IAIT;EACF,GAAE,CAACO,oBAAoBG,MAAMG,aAA3B,CAZH;AAcAD,EAAAA,YAAgB,WAAA;AACd,QACEL,sBACAS,UAAUG,YAAY,QACtB,KAAC1B,0BAAAA,SAAQqB,eAAeK,SAAST,MAAMI,cAA/B,GACR;AACAA,qBAAeK,UAAUT,MAAMI,kBAAkBb;AACjDsB,eAAS;QACPlC,MAAM;QACNE,SAASmB,MAAMI,kBAAkBb;MAF1B,CAAD;IAIT;EACF,GAAE,CAACM,oBAAoBG,MAAMI,cAA3B,CAZH;AAcAF,EAAAA,YAAgB,WAAA;AACd,QACEL,sBACAS,UAAUG,YAAY,QACtB,KAAC1B,0BAAAA,SAAQsB,cAAcI,SAAST,MAAMK,aAA9B,GACR;AACAA,oBAAcI,UAAUT,MAAMK;AAC9BQ,eAAS;QACPlC,MAAM;QACNE,SAASmB,MAAMK;MAFR,CAAD;IAIT;EACF,GAAE,CAACR,oBAAoBG,MAAMK,eAAeL,MAAMI,cAAhD,CAZH;AAcA,MAAMgE,gBAAgBP,iBAAiB,SAACtB,MAAD;AAKrC,QACEhC,cAAcE,QAAQ8B,IAAtB,KACAL,YAAW3B,cAAcE,QAAQ8B,IAAtB,EAA4BjB,QAA7B,GACV;AACA,UAAMxE,QAAQT,OAAMoC,MAAMG,QAAQ2D,IAAf;AACnB,UAAM8B,eAAe9D,cAAcE,QAAQ8B,IAAtB,EAA4BjB,SAASxE,KAArC;AACrB,UAAIyE,UAAU8C,YAAD,GAAgB;AAE3BxD,iBAAS;UAAElC,MAAM;UAAoBE,SAAS;QAArC,CAAD;AACR,eAAOwF,aACJ7C,KAAK,SAACR,GAAD;AAAA,iBAAYA;QAAZ,CADD,EAEJQ,KAAK,SAAC8C,OAAD;AACJzD,mBAAS;YACPlC,MAAM;YACNE,SAAS;cAAEO,OAAOmD;cAAMzF,OAAOwH;YAAtB;UAFF,CAAD;AAIRzD,mBAAS;YAAElC,MAAM;YAAoBE,SAAS;UAArC,CAAD;QACT,CARI;MASR,OAAM;AACLgC,iBAAS;UACPlC,MAAM;UACNE,SAAS;YACPO,OAAOmD;YACPzF,OAAOuH;UAFA;QAFF,CAAD;AAOR,eAAOnD,QAAQC,QAAQkD,YAAhB;MACR;IACF,WAAUrE,MAAMgC,kBAAkB;AACjCnB,eAAS;QAAElC,MAAM;QAAoBE,SAAS;MAArC,CAAD;AACR,aAAOkD,oBAAoBtD,MAAMG,QAAQ2D,IAAf,EACvBf,KAAK,SAACR,GAAD;AAAA,eAAYA;MAAZ,CADD,EAEJQ,KAAK,SAAC8C,OAAD;AACJzD,iBAAS;UACPlC,MAAM;UACNE,SAAS;YAAEO,OAAOmD;YAAMzF,OAAOT,OAAMiI,OAAO/B,IAAR;UAA3B;QAFF,CAAD;AAIR1B,iBAAS;UAAElC,MAAM;UAAoBE,SAAS;QAArC,CAAD;MACT,CARI;IASR;AAED,WAAOqC,QAAQC,QAAR;EACR,CA/CqC;AAiDtC,MAAMoD,gBAAgBrE,aAAkB,SAACqC,MAAD,OAAA;QAAiBjB,WAAAA,MAAAA;AACvDf,kBAAcE,QAAQ8B,IAAtB,IAA8B;MAC5BjB;IAD4B;EAG/B,GAAE,CAAA,CAJmB;AAMtB,MAAMkD,kBAAkBtE,aAAkB,SAACqC,MAAD;AACxC,WAAOhC,cAAcE,QAAQ8B,IAAtB;EACR,GAAE,CAAA,CAFqB;AAIxB,MAAMkC,aAAaZ,iBACjB,SAAC/E,SAAgC4F,gBAAjC;AACE7D,aAAS;MAAElC,MAAM;MAAeE,SAASC;IAAhC,CAAD;AACR,QAAM6F,eACJD,mBAAmBzI,SAAYyD,iBAAiBgF;AAClD,WAAOC,eACHf,6BAA6BnF,MAAMG,MAAP,IAC5BsC,QAAQC,QAAR;EACL,CARgC;AAWnC,MAAMyD,YAAY1E,aAAkB,SAAClB,QAAD;AAClC6B,aAAS;MAAElC,MAAM;MAAcE,SAASG;IAA/B,CAAD;EACT,GAAE,CAAA,CAFe;AAIlB,MAAM6F,YAAYhB,iBAChB,SAACjF,QAAsC8F,gBAAvC;AACE,QAAMI,iBAAiB5C,YAAWtD,MAAD,IAAWA,OAAOH,MAAMG,MAAP,IAAiBA;AAEnEiC,aAAS;MAAElC,MAAM;MAAcE,SAASiG;IAA/B,CAAD;AACR,QAAMH,eACJD,mBAAmBzI,SAAYwD,mBAAmBiF;AACpD,WAAOC,eACHf,6BAA6BkB,cAAD,IAC5B5D,QAAQC,QAAR;EACL,CAV+B;AAalC,MAAM4D,gBAAgB7E,aACpB,SAACd,OAAetC,OAAhB;AACE+D,aAAS;MACPlC,MAAM;MACNE,SAAS;QAAEO;QAAOtC;MAAT;IAFF,CAAD;EAIT,GACD,CAAA,CAPoB;AAUtB,MAAMkI,gBAAgBnB,iBACpB,SAACzE,OAAetC,OAAY4H,gBAA5B;AACE7D,aAAS;MACPlC,MAAM;MACNE,SAAS;QACPO;QACAtC;MAFO;IAFF,CAAD;AAOR,QAAM6H,eACJD,mBAAmBzI,SAAYwD,mBAAmBiF;AACpD,WAAOC,eACHf,6BAA6B/G,MAAM4B,MAAMG,QAAQQ,OAAOtC,KAAtB,CAAN,IAC5BoE,QAAQC,QAAR;EACL,CAdmC;AAiBtC,MAAM8D,gBAAgB/E,aACpB,SAACgF,kBAAmDC,WAApD;AAIE,QAAI/F,QAAQ+F;AACZ,QAAI9G,MAAM6G;AACV,QAAIE;AAGJ,QAAI,CAACC,SAASH,gBAAD,GAAoB;AAG/B,UAAKA,iBAAyBI,SAAS;AACpCJ,yBAA4CI,QAA5C;MACF;AACD,UAAMC,SAASL,iBAAiBK,SAC3BL,iBAA4CK,SAC5CL,iBAA4CM;AARlB,UAW7B7G,OAQE4G,OARF5G,MACA4D,OAOEgD,OAPFhD,MACAkD,KAMEF,OANFE,IACA3I,QAKEyI,OALFzI,OACA4I,UAIEH,OAJFG,SACAC,YAGEJ,OAHFI,WACAC,UAEEL,OAFFK,SACAC,WACEN,OADFM;AAGFzG,cAAQ+F,YAAYA,YAAY5C,OAAOA,OAAOkD;AAC9C,UAAI,CAACrG,SAAD,QAAA,IAAA,aAAA,cAAmB;AACrB0G,mCAA2B;UACzBC,aAAaJ;UACbK,yBAAyB;UACzBC,aAAa;QAHY,CAAD;MAK3B;AACD5H,YAAM,eAAe6H,KAAKvH,IAApB,KACAyG,SAASe,WAAWrJ,KAAD,GAAUsJ,MAAMhB,MAAD,IAAW,KAAKA,UACpD,WAAWc,KAAKvH,IAAhB,IACA0H,oBAAoBhK,OAAMoC,MAAMG,QAAQQ,KAAf,GAAwBsG,SAAS5I,KAAvC,IACnB8I,WAAWC,WACXS,kBAAkBV,OAAD,IACjB9I;IACL;AAED,QAAIsC,OAAO;AAET4F,oBAAc5F,OAAOf,GAAR;IACd;EACF,GACD,CAAC2G,eAAevG,MAAMG,MAAtB,CArDoB;AAwDtB,MAAM2H,eAAe1C,iBACnB,SACE2C,aADF;AAGE,QAAInB,SAASmB,WAAD,GAAe;AACzB,aAAO,SAAAC,OAAK;AAAA,eAAIxB,cAAcwB,OAAOD,WAAR;MAAjB;IACb,OAAM;AACLvB,oBAAcuB,WAAD;IACd;EACF,CATkC;AAYrC,MAAME,kBAAkB7C,iBACtB,SAACzE,OAAeN,SAAyB4F,gBAAzC;QAAgB5F,YAAAA,QAAAA;AAAAA,gBAAmB;;AACjC+B,aAAS;MACPlC,MAAM;MACNE,SAAS;QACPO;QACAtC,OAAOgC;MAFA;IAFF,CAAD;AAOR,QAAM6F,eACJD,mBAAmBzI,SAAYyD,iBAAiBgF;AAClD,WAAOC,eACHf,6BAA6BnF,MAAMG,MAAP,IAC5BsC,QAAQC,QAAR;EACL,CAdqC;AAiBxC,MAAMwF,cAAczG,aAClB,SAAC9D,IAAQM,MAAT;AACE,QAAIN,GAAEkJ,SAAS;AACblJ,MAAAA,GAAEkJ,QAAF;IACD;oBAC+BlJ,GAAEmJ,QAA1BhD,OAAAA,UAAAA,MAAMkD,KAAAA,UAAAA,IAAIE,YAAAA,UAAAA;AAClB,QAAMvG,QAAQ1C,OAAOA,OAAO6F,OAAOA,OAAOkD;AAE1C,QAAI,CAACrG,SAAD,QAAA,IAAA,aAAA,cAAmB;AACrB0G,iCAA2B;QACzBC,aAAaJ;QACbK,yBAAyB;QACzBC,aAAa;MAHY,CAAD;IAK3B;AAEDS,oBAAgBtH,OAAO,IAAR;EAChB,GACD,CAACsH,eAAD,CAlBkB;AAqBpB,MAAME,aAAa/C,iBACjB,SAACgD,eAAD;AACE,QAAIxB,SAASwB,aAAD,GAAiB;AAC3B,aAAO,SAAAJ,OAAK;AAAA,eAAIE,YAAYF,OAAOI,aAAR;MAAf;IACb,OAAM;AACLF,kBAAYE,aAAD;IACZ;EACF,CAPgC;AAUnC,MAAMC,iBAAiB5G,aACrB,SACE6G,WADF;AAKE,QAAI7E,YAAW6E,SAAD,GAAa;AACzBlG,eAAS;QAAElC,MAAM;QAAoBE,SAASkI;MAArC,CAAD;IACT,OAAM;AACLlG,eAAS;QAAElC,MAAM;QAAoBE,SAAS,SAAA,UAAA;AAAA,iBAAMkI;QAAN;MAArC,CAAD;IACT;EACF,GACD,CAAA,CAZqB;AAevB,MAAMC,YAAY9G,aAAkB,SAACjB,QAAD;AAClC4B,aAAS;MAAElC,MAAM;MAAcE,SAASI;IAA/B,CAAD;EACT,GAAE,CAAA,CAFe;AAIlB,MAAMgI,gBAAgB/G,aAAkB,SAAChB,cAAD;AACtC2B,aAAS;MAAElC,MAAM;MAAoBE,SAASK;IAArC,CAAD;EACT,GAAE,CAAA,CAFmB;AAItB,MAAMgI,aAAarD,iBAAiB,WAAA;AAClChD,aAAS;MAAElC,MAAM;IAAR,CAAD;AACR,WAAOiF,6BAA4B,EAAGpC,KACpC,SAACiC,gBAAD;AAQE,UAAM0D,oBAAoB1D,0BAA0B2D;AACpD,UAAMC,kBACJ,CAACF,qBAAqBjJ,OAAOC,KAAKsF,cAAZ,EAA4B7G,WAAW;AAC/D,UAAIyK,iBAAiB;AAWnB,YAAIC;AACJ,YAAI;AACFA,+BAAqBC,cAAa;AAGlC,cAAID,uBAAuBrL,QAAW;AACpC;UACD;QACF,SAAQqI,OAAO;AACd,gBAAMA;QACP;AAED,eAAOpD,QAAQC,QAAQmG,kBAAhB,EACJ9F,KAAK,SAAAgG,QAAM;AACV,cAAI,CAAC,CAAClH,UAAUG,SAAS;AACvBI,qBAAS;cAAElC,MAAM;YAAR,CAAD;UACT;AACD,iBAAO6I;QACR,CANI,EAAA,OAAA,EAOE,SAAAC,SAAO;AACZ,cAAI,CAAC,CAACnH,UAAUG,SAAS;AACvBI,qBAAS;cAAElC,MAAM;YAAR,CAAD;AAGR,kBAAM8I;UACP;QACF,CAdI;MAeR,WAAU,CAAC,CAACnH,UAAUG,SAAS;AAE9BI,iBAAS;UAAElC,MAAM;QAAR,CAAD;AAER,YAAIwI,mBAAmB;AACrB,gBAAM1D;QACP;MACF;AACD;IACD,CA3DI;EA6DR,CA/DkC;AAiEnC,MAAMiE,eAAe7D,iBACnB,SAACzH,IAAD;AACE,QAAIA,MAAKA,GAAEuL,kBAAkBzF,YAAW9F,GAAEuL,cAAH,GAAoB;AACzDvL,MAAAA,GAAEuL,eAAF;IACD;AAED,QAAIvL,MAAKA,GAAEwL,mBAAmB1F,YAAW9F,GAAEwL,eAAH,GAAqB;AAC3DxL,MAAAA,GAAEwL,gBAAF;IACD;AAMD,QAAI,QAAA,IAAA,aAAA,gBAAW,OAAO5L,aAAa,aAAa;AAE9C,UAAME,gBAAgBJ,iBAAgB;AACtC,UACEI,kBAAkB,QAClBA,yBAAyB2L,mBACzB;AACA,UACE3L,cAAc4L,cACZ5L,cAAc4L,WAAWC,aAAa,MAAtC,KAFJ,QAAA,IAAA,aAAA,eAAAvH,yBAAS,OAGP,yMAHO,IAATA,yBAAS,KAAA,IAAT;MAKD;IACF;AAED0G,eAAU,EAAA,OAAA,EAAS,SAAAc,QAAM;AACvBnG,cAAQC,KAAR,4DAEEkG,MAFF;IAID,CALD;EAMD,CAnCkC;AAsCrC,MAAM7D,oBAA2C;IAC/CL;IACAmE,cAAcrE;IACdQ;IACAQ;IACAG;IACA2B;IACA1B;IACAgC;IACAC;IACAxC;IACAI;IACAiC;IACAI;EAb+C;AAgBjD,MAAMK,gBAAgB1D,iBAAiB,WAAA;AACrC,WAAO/D,SAASrB,MAAMG,QAAQuF,iBAAf;EAChB,CAFqC;AAItC,MAAM+D,cAAcrE,iBAAiB,SAAAzH,IAAC;AACpC,QAAIA,MAAKA,GAAEuL,kBAAkBzF,YAAW9F,GAAEuL,cAAH,GAAoB;AACzDvL,MAAAA,GAAEuL,eAAF;IACD;AAED,QAAIvL,MAAKA,GAAEwL,mBAAmB1F,YAAW9F,GAAEwL,eAAH,GAAqB;AAC3DxL,MAAAA,GAAEwL,gBAAF;IACD;AAED9D,cAAS;EACV,CAVmC;AAYpC,MAAMqE,eAAejI,aACnB,SAACqC,MAAD;AACE,WAAO;MACLzF,OAAOT,OAAMoC,MAAMG,QAAQ2D,IAAf;MACZ+B,OAAOjI,OAAMoC,MAAMO,QAAQuD,IAAf;MACZzD,SAAS,CAAC,CAACzC,OAAMoC,MAAMK,SAASyD,IAAhB;MAChB6F,cAAc/L,OAAM4D,cAAcQ,SAAS8B,IAAxB;MACnBnC,gBAAgB,CAAC,CAAC/D,OAAM+D,eAAeK,SAAS8B,IAAzB;MACvB8F,cAAchM,OAAM8D,cAAcM,SAAS8B,IAAxB;IANd;EAQR,GACD,CAAC9D,MAAMO,QAAQP,MAAMK,SAASL,MAAMG,MAApC,CAXmB;AAcrB,MAAM0J,kBAAkBpI,aACtB,SAACqC,MAAD;AACE,WAAO;MACLgG,UAAU,SAAA,SAACzL,OAAY4H,gBAAb;AAAA,eACRM,cAAczC,MAAMzF,OAAO4H,cAAd;MADL;MAEVD,YAAY,SAAAA,YAAC3H,OAAgB4H,gBAAjB;AAAA,eACVgC,gBAAgBnE,MAAMzF,OAAO4H,cAAd;MADL;MAEZ8D,UAAU,SAAA,SAAC1L,OAAD;AAAA,eAAgBiI,cAAcxC,MAAMzF,KAAP;MAA7B;IALL;EAOR,GACD,CAACkI,eAAe0B,iBAAiB3B,aAAjC,CAVsB;AAaxB,MAAM0D,gBAAgBvI,aACpB,SAACwI,eAAD;AACE,QAAMC,aAAapL,UAASmL,aAAD;AAC3B,QAAMnG,OAAOoG,aACRD,cAAmCnG,OACpCmG;AACJ,QAAME,aAAavM,OAAMoC,MAAMG,QAAQ2D,IAAf;AAExB,QAAMnD,QAA8B;MAClCmD;MACAzF,OAAO8L;MACPC,UAAUtC;MACVuC,QAAQlC;IAJ0B;AAMpC,QAAI+B,YAAY;AAAA,UAEZhK,OAIE+J,cAJF/J,MACOoK,YAGLL,cAHF5L,OACIkM,KAEFN,cAFFO,IACApD,WACE6C,cADF7C;AAGF,UAAIlH,SAAS,YAAY;AACvB,YAAIoK,cAAc9M,QAAW;AAC3BmD,gBAAMsG,UAAU,CAAC,CAACkD;QACnB,OAAM;AACLxJ,gBAAMsG,UAAU,CAAC,EACflI,MAAMC,QAAQmL,UAAd,KAA6B,CAACA,WAAWM,QAAQH,SAAnB;AAEhC3J,gBAAMtC,QAAQiM;QACf;MACF,WAAUpK,SAAS,SAAS;AAC3BS,cAAMsG,UAAUkD,eAAeG;AAC/B3J,cAAMtC,QAAQiM;MACf,WAAUC,OAAO,YAAYnD,UAAU;AACtCzG,cAAMtC,QAAQsC,MAAMtC,SAAS,CAAA;AAC7BsC,cAAMyG,WAAW;MAClB;IACF;AACD,WAAOzG;EACR,GACD,CAACwH,YAAYL,cAAc9H,MAAMG,MAAjC,CAzCoB;AA4CtB,MAAMuK,QAAQjJ,SACZ,WAAA;AAAA,WAAM,KAACnB,0BAAAA,SAAQkB,cAAcQ,SAAShC,MAAMG,MAA9B;EAAd,GACA,CAACqB,cAAcQ,SAAShC,MAAMG,MAA9B,CAFY;AAKd,MAAMwK,UAAUlJ,SACd,WAAA;AAAA,WACE,OAAON,mBAAmB,cACtBuJ,QACE1K,MAAMO,UAAUd,OAAOC,KAAKM,MAAMO,MAAlB,EAA0BpC,WAAW,IACrDgD,mBAAmB,SAASsC,YAAWtC,cAAD,IACrCA,eAA4DI,KAAD,IAC3DJ,iBACHnB,MAAMO,UAAUd,OAAOC,KAAKM,MAAMO,MAAlB,EAA0BpC,WAAW;EAP3D,GAQA,CAACgD,gBAAgBuJ,OAAO1K,MAAMO,QAAQgB,KAAtC,CATc;AAYhB,MAAMqJ,MAAG,SAAA,CAAA,GACJ5K,OADI;IAEPwB,eAAeA,cAAcQ;IAC7BN,eAAeA,cAAcM;IAC7BL,gBAAgBA,eAAeK;IAC/BJ,eAAeA,cAAcI;IAC7BmG;IACAL;IACA2B;IACAR;IACA5D;IACAc;IACAkC;IACAJ;IACA1B;IACAD;IACAiC;IACAC;IACAxC;IACAI;IACAqC;IACAe,cAAcrE;IACdQ;IACAgF;IACAD;IACA3E;IACAD;IACAkE;IACAN;IACAG;IACA5I;IACAD;IACAE;EAhCO,CAAA;AAmCT,SAAO0J;AACR;AAyCD,SAASC,2BAAT,OAAA;MACEC,cAAAA,MAAAA,aACAC,0BAAAA,MAAAA,yBACAC,cAAAA,MAAAA;AAMAC,UAAQC,KAAR,6BAC8BF,cAD9B,+EAEIF,cAFJ,+GAGwGC,0BAHxG,MAAA;AAMD;AAKD,SAAgBI,gBAAwBC,UAAAA;AACtC,MAAIC,SAA+B,CAAA;AACnC,MAAID,SAASE,OAAO;AAClB,QAAIF,SAASE,MAAMC,WAAW,GAAG;AAC/B,aAAOC,MAAMH,QAAQD,SAASK,MAAML,SAASM,OAAjC;IACb;AACD,aAAA,YAAgBN,SAASE,OAAzB,WAAA,MAAA,QAAA,SAAA,GAAA,KAAA,GAAA,YAAA,WAAA,YAAA,UAAA,OAAA,QAAA,EAAA,OAAgC;AAAA,UAAA;AAAA,UAAA,UAAA;AAAA,YAAA,MAAA,UAAA;AAAA;AAAA,gBAAA,UAAA,IAAA;MAAA,OAAA;AAAA,aAAA,UAAA,KAAA;AAAA,YAAA,GAAA;AAAA;AAAA,gBAAA,GAAA;MAAA;AAAA,UAAvBK,MAAuB;AAC9B,UAAI,CAACC,OAAMP,QAAQM,IAAIF,IAAb,GAAoB;AAC5BJ,iBAASG,MAAMH,QAAQM,IAAIF,MAAME,IAAID,OAAvB;MACf;IACF;EACF;AACD,SAAOL;AACR;AAKD,SAAgBQ,kBACdC,QACAC,QACAC,MACAC,SAAAA;MADAD,SAAAA,QAAAA;AAAAA,WAAgB;;AAGhB,MAAME,mBAAiCC,yBAAyBL,MAAD;AAE/D,SAAOC,OAAOC,OAAO,iBAAiB,UAAzB,EAAqCE,kBAAkB;IAClEE,YAAY;IACZH,SAASA,WAAWC;EAF8C,CAA7D;AAIR;AAKD,SAAgBC,yBACdL,QAAAA;AAEA,MAAIO,OAAqBC,MAAMC,QAAQT,MAAd,IAAwB,CAAA,IAAK,CAAA;AACtD,WAASU,MAAKV,QAAQ;AACpB,QAAIW,OAAOC,UAAUC,eAAeC,KAAKd,QAAQU,EAA7C,GAAiD;AACnD,UAAMK,MAAMC,OAAON,EAAD;AAClB,UAAIF,MAAMC,QAAQT,OAAOe,GAAD,CAApB,MAA+B,MAAM;AACvCR,aAAKQ,GAAD,IAAQf,OAAOe,GAAD,EAAME,IAAI,SAACC,OAAD;AAC1B,cAAIV,MAAMC,QAAQS,KAAd,MAAyB,QAAQC,sBAAcD,KAAD,GAAS;AACzD,mBAAOb,yBAAyBa,KAAD;UAChC,OAAM;AACL,mBAAOA,UAAU,KAAKA,QAAQE;UAC/B;QACF,CANW;MAOb,WAAUD,sBAAcnB,OAAOe,GAAD,CAAP,GAAe;AACrCR,aAAKQ,GAAD,IAAQV,yBAAyBL,OAAOe,GAAD,CAAP;MACrC,OAAM;AACLR,aAAKQ,GAAD,IAAQf,OAAOe,GAAD,MAAU,KAAKf,OAAOe,GAAD,IAAQK;MAChD;IACF;EACF;AACD,SAAOb;AACR;AAMD,SAASc,WAAWC,QAAeC,QAAeC,SAAlD;AACE,MAAMC,cAAcH,OAAOI,MAAP;AAEpBH,SAAOI,QAAQ,SAASC,MAAMC,IAAQC,GAAvB;AACb,QAAI,OAAOL,YAAYK,CAAD,MAAQ,aAAa;AACzC,UAAMC,iBAAiBP,QAAQQ,UAAU;AACzC,UAAMC,cAAcF,kBAAkBP,QAAQU,kBAAkBL,EAA1B;AACtCJ,kBAAYK,CAAD,IAAMG,cACbE,WAAU3B,MAAMC,QAAQoB,EAAd,IAAmB,CAAA,IAAK,CAAA,GAAIA,IAAGL,OAAhC,IACTK;IACL,WAAUL,QAAQU,kBAAkBL,EAA1B,GAA8B;AACvCJ,kBAAYK,CAAD,IAAMK,WAAUb,OAAOQ,CAAD,GAAKD,IAAGL,OAAf;IAC3B,WAAUF,OAAOc,QAAQP,EAAf,MAAsB,IAAI;AACnCJ,kBAAYY,KAAKR,EAAjB;IACD;EACF,CAZD;AAaA,SAAOJ;AACR;AAGD,SAASa,kBAAkBd,SAA3B;AACE,SAAOhB,MAAM+B,KAAKf,OAAX,EACJgB,OAAO,SAAAC,IAAE;AAAA,WAAIA,GAAGC;EAAP,CADL,EAEJzB,IAAI,SAAAwB,IAAE;AAAA,WAAIA,GAAGvB;EAAP,CAFF;AAGR;AAGD,SAASyB,oBACPC,cACAC,SACAC,WAHF;AAME,MAAI,OAAOF,iBAAiB,WAAW;AACrC,WAAOG,QAAQF,OAAD;EACf;AAGD,MAAIG,uBAAuB,CAAA;AAC3B,MAAIC,iBAAiB;AACrB,MAAIC,QAAQ;AAEZ,MAAI,CAAC1C,MAAMC,QAAQmC,YAAd,GAA6B;AAEhC,QAAI,CAACE,aAAaA,aAAa,UAAUA,aAAa,SAAS;AAC7D,aAAOC,QAAQF,OAAD;IACf;EACF,OAAM;AAELG,2BAAuBJ;AACvBM,YAAQN,aAAaR,QAAQU,SAArB;AACRG,qBAAiBC,SAAS;EAC3B;AAGD,MAAIL,WAAWC,aAAa,CAACG,gBAAgB;AAC3C,WAAOD,qBAAqBG,OAAOL,SAA5B;EACR;AAGD,MAAI,CAACG,gBAAgB;AACnB,WAAOD;EACR;AAGD,SAAOA,qBACJtB,MAAM,GAAGwB,KADL,EAEJC,OAAOH,qBAAqBtB,MAAMwB,QAAQ,CAAnC,CAFH;AAGR;AAMD,IAAME,4BACJ,OAAOC,WAAW,eAClB,OAAOA,OAAOC,aAAa,eAC3B,OAAOD,OAAOC,SAASC,kBAAkB,cACrCC,kBACAA;AAEN,SAASC,iBAAoDC,IAA7D;AACE,MAAMC,MAAWH,QAAaE,EAAb;AAGjBN,4BAA0B,WAAA;AACxBO,QAAIC,UAAUF;EACf,CAFwB;AAIzB,SAAOF,aACL,WAAA;AAAA,aAAA,OAAA,UAAA,QAAIK,OAAJ,IAAA,MAAA,IAAA,GAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAIA,WAAJ,IAAA,IAAA,UAAA,IAAA;IAAA;AAAA,WAAoBF,IAAIC,QAAQE,MAAM,QAAQD,IAA1B;EAApB,GACA,CAAA,CAFK;AAIR;IElrCYE,OAAOC,gBAAAA,aAClB,SAACC,OAAwBC,KAAzB;MAGUC,SAAoBF,MAApBE,QAAWC,OAAAA,8BAASH,OAAAA,CAAAA,QAAAA,CAAAA;AAC5B,MAAMI,UAAUF,UAAH,OAAGA,SAAU;0BACYG,iBAAgB,GAA9CC,cAAAA,kBAAAA,aAAaC,eAAAA,kBAAAA;AACrB,SACER,cAAA,QAAA,SAAA;IACES,UAAUD;IACVN;IACAQ,SAASH;IACTJ,QAAQE;EAJV,GAKMD,IALN,CAAA;AAQH,CAhBiB;AAmBpBL,KAAKY,cAAc;AGmCnB,IAAaC,OAAO,SAAPA,MAAYC,QAAYC,MAAcC,IAA/B;AAClB,MAAMC,OAAOC,cAAcJ,MAAD;AAC1B,MAAMK,QAAQF,KAAKF,IAAD;AAClBE,OAAKG,OAAOL,MAAM,CAAlB;AACAE,OAAKG,OAAOJ,IAAI,GAAGG,KAAnB;AACA,SAAOF;AACR;AAED,IAAaI,OAAO,SAAPA,MACXC,WACAC,QACAC,QAHkB;AAKlB,MAAMP,OAAOC,cAAcI,SAAD;AAC1B,MAAMG,IAAIR,KAAKM,MAAD;AACdN,OAAKM,MAAD,IAAWN,KAAKO,MAAD;AACnBP,OAAKO,MAAD,IAAWC;AACf,SAAOR;AACR;AAED,IAAaS,SAAS,SAATA,QACXJ,WACAK,OACAR,OAHoB;AAKpB,MAAMF,OAAOC,cAAcI,SAAD;AAC1BL,OAAKG,OAAOO,OAAO,GAAGR,KAAtB;AACA,SAAOF;AACR;AAED,IAAaW,UAAU,SAAVA,SACXN,WACAK,OACAR,OAHqB;AAKrB,MAAMF,OAAOC,cAAcI,SAAD;AAC1BL,OAAKU,KAAD,IAAUR;AACd,SAAOF;AACR;AAED,IAAMC,gBAAgB,SAAhBA,eAAiBI,WAAD;AACpB,MAAI,CAACA,WAAW;AACd,WAAO,CAAA;EACR,WAAUO,MAAMC,QAAQR,SAAd,GAA0B;AACnC,WAAA,CAAA,EAAA,OAAWA,SAAX;EACD,OAAM;AACL,QAAMS,WAAWC,OAAOC,KAAKX,SAAZ,EACdY,IAAI,SAAAC,KAAG;AAAA,aAAIC,SAASD,GAAD;IAAZ,CADO,EAEdE,OAAO,SAACC,KAAKC,IAAN;AAAA,aAAcA,KAAKD,MAAMC,KAAKD;IAA9B,GAAoC,CAF7B;AAGjB,WAAOT,MAAMd,KAAN,SAAA,CAAA,GAAgBO,WAAhB;MAA2BkB,QAAQT,WAAW;IAA9C,CAAA,CAAA;EACR;AACF;AAED,IAAMU,0BAA0B,SAA1BA,yBACJC,YACAC,iBAF8B;AAI9B,MAAMC,KAAK,OAAOF,eAAe,aAAaA,aAAaC;AAE3D,SAAO,SAACE,MAAD;AACL,QAAIhB,MAAMC,QAAQe,IAAd,KAAuBC,UAASD,IAAD,GAAQ;AACzC,UAAME,SAAQ7B,cAAc2B,IAAD;AAC3B,aAAOD,GAAGG,MAAD;IACV;AAID,WAAOF;EACR;AACF;IAEKG,kBAAAA,yBAAAA,kBAAAA;;AAQJ,WAAAA,iBAAYC,OAAZ;;AACE,YAAA,iBAAA,KAAA,MAAMA,KAAN,KAAA;UAsBFC,mBAAmB,SACjBN,IACAO,cACAC,aAHiB;wBASb,MAAKH,OAHPI,OAAAA,YAAAA,MAEUC,iBAAAA,YAAVC,OAAUD;AAGZA,qBAAe,SAACE,WAAD;AACb,YAAIC,eAAehB,wBAAwBW,aAAaR,EAAd;AAC1C,YAAIc,gBAAgBjB,wBAAwBU,cAAcP,EAAf;AAI3C,YAAIe,SAASC,MACXJ,UAAUG,QACVN,MACAT,GAAGiB,OAAML,UAAUG,QAAQN,IAAnB,CAAN,CAHc;AAMlB,YAAIS,aAAaV,cACbK,aAAaI,OAAML,UAAUO,QAAQV,IAAnB,CAAN,IACZW;AACJ,YAAIC,eAAed,eACfO,cAAcG,OAAML,UAAUU,SAASb,IAApB,CAAN,IACbW;AAEJ,YAAIG,aAAaL,UAAD,GAAc;AAC5BA,uBAAaE;QACd;AACD,YAAIG,aAAaF,YAAD,GAAgB;AAC9BA,yBAAeD;QAChB;AAED,eAAA,SAAA,CAAA,GACKR,WADL;UAEEG;UACAI,QAAQX,cACJQ,MAAMJ,UAAUO,QAAQV,MAAMS,UAAzB,IACLN,UAAUO;UACdG,SAASf,eACLS,MAAMJ,UAAUU,SAASb,MAAMY,YAA1B,IACLT,UAAUU;QARhB,CAAA;MAUD,CApCa;IAqCf;UAEDE,OAAO,SAACjD,OAAD;AAAA,aACL,MAAK+B,iBACH,SAAC5B,WAAD;AAAA,eAAA,CAAA,EAAA,OACKJ,cAAcI,SAAD,GADlB,CAEE+C,kBAAUlD,KAAD,CAFX,CAAA;MAAA,GAIA,OACA,KANF;IADK;UAUPmD,aAAa,SAACnD,OAAD;AAAA,aAAgB,WAAA;AAAA,eAAM,MAAKiD,KAAKjD,KAAV;MAAN;IAAhB;UAEbE,OAAO,SAACE,QAAgBC,QAAjB;AAAA,aACL,MAAK0B,iBACH,SAACpC,QAAD;AAAA,eAAkBO,KAAKP,QAAOS,QAAQC,MAAhB;MAAtB,GACA,MACA,IAHF;IADK;UAOP+C,aAAa,SAAChD,QAAgBC,QAAjB;AAAA,aAAoC,WAAA;AAAA,eAC/C,MAAKH,KAAKE,QAAQC,MAAlB;MAD+C;IAApC;UAGbX,OAAO,SAACE,MAAcC,IAAf;AAAA,aACL,MAAKkC,iBAAiB,SAACpC,QAAD;AAAA,eAAkBD,KAAKC,QAAOC,MAAMC,EAAd;MAAtB,GAAyC,MAAM,IAArE;IADK;UAGPwD,aAAa,SAACzD,MAAcC,IAAf;AAAA,aAA8B,WAAA;AAAA,eAAM,MAAKH,KAAKE,MAAMC,EAAhB;MAAN;IAA9B;UAEbU,SAAS,SAACC,OAAeR,OAAhB;AAAA,aACP,MAAK+B,iBACH,SAACpC,QAAD;AAAA,eAAkBY,OAAOZ,QAAOa,OAAOR,KAAf;MAAxB,GACA,SAACL,QAAD;AAAA,eAAkBY,OAAOZ,QAAOa,OAAO,IAAf;MAAxB,GACA,SAACb,QAAD;AAAA,eAAkBY,OAAOZ,QAAOa,OAAO,IAAf;MAAxB,CAHF;IADO;UAOT8C,eAAe,SAAC9C,OAAeR,OAAhB;AAAA,aAA+B,WAAA;AAAA,eAAM,MAAKO,OAAOC,OAAOR,KAAnB;MAAN;IAA/B;UAEfS,UAAU,SAACD,OAAeR,OAAhB;AAAA,aACR,MAAK+B,iBACH,SAACpC,QAAD;AAAA,eAAkBc,QAAQd,QAAOa,OAAOR,KAAf;MAAzB,GACA,OACA,KAHF;IADQ;UAOVuD,gBAAgB,SAAC/C,OAAeR,OAAhB;AAAA,aAA+B,WAAA;AAAA,eAC7C,MAAKS,QAAQD,OAAOR,KAApB;MAD6C;IAA/B;UAGhBwD,UAAU,SAACxD,OAAD;AACR,UAAIqB,SAAS;AACb,YAAKU,iBACH,SAACpC,QAAD;AACE,YAAM8D,MAAM9D,SAAK,CAAIK,KAAJ,EAAA,OAAcL,MAAd,IAAuB,CAACK,KAAD;AAExCqB,iBAASoC,IAAIpC;AAEb,eAAOoC;MACR,GACD,SAAC9D,QAAD;AACE,eAAOA,SAAK,CAAI,IAAJ,EAAA,OAAaA,MAAb,IAAsB,CAAC,IAAD;MACnC,GACD,SAACA,QAAD;AACE,eAAOA,SAAK,CAAI,IAAJ,EAAA,OAAaA,MAAb,IAAsB,CAAC,IAAD;MACnC,CAbH;AAgBA,aAAO0B;IACR;UAEDqC,gBAAgB,SAAC1D,OAAD;AAAA,aAAgB,WAAA;AAAA,eAAM,MAAKwD,QAAQxD,KAAb;MAAN;IAAhB;UA6BhB2D,eAAe,SAACnD,OAAD;AAAA,aAAmB,WAAA;AAAA,eAAM,MAAKoD,OAAYpD,KAAjB;MAAN;IAAnB;UAqBfqD,YAAY,WAAA;AAAA,aAAM,WAAA;AAAA,eAAM,MAAKC,IAAL;MAAN;IAAN;AA1LV,UAAKF,SAAS,MAAKA,OAAOG,KAAZ,uBAAA,KAAA,CAAA;AACd,UAAKD,MAAM,MAAKA,IAAIC,KAAT,uBAAA,KAAA,CAAA;;EACZ;;SAEDC,qBAAA,SAAA,mBACEC,WADF;AAGE,QACE,KAAKnC,MAAMoC,oBACX,KAAKpC,MAAMM,OAAO8B,oBAClB,KAACC,0BAAAA,SACCzB,OAAMuB,UAAU7B,OAAOI,QAAQyB,UAAU/B,IAApC,GACLQ,OAAM,KAAKZ,MAAMM,OAAOI,QAAQ,KAAKV,MAAMI,IAAtC,CAFC,GAIR;AACA,WAAKJ,MAAMM,OAAOgC,aAAa,KAAKtC,MAAMM,OAAOI,MAAjD;IACD;EACF;SAyHDoB,SAAA,SAAA,OAAUpD,OAAV;AAEE,QAAI6D;AACJ,SAAKtC;;MAEH,SAACpC,QAAD;AACE,YAAMG,OAAOH,SAAQI,cAAcJ,MAAD,IAAU,CAAA;AAC5C,YAAI,CAAC0E,QAAQ;AACXA,mBAASvE,KAAKU,KAAD;QACd;AACD,YAAI8D,YAAWxE,KAAKG,MAAN,GAAe;AAC3BH,eAAKG,OAAOO,OAAO,CAAnB;QACD;AAED,eAAO8D,YAAWxE,KAAKyE,KAAN,IACbzE,KAAKyE,MAAM,SAAAC,IAAC;AAAA,iBAAIA,OAAM3B;QAAV,CAAZ,IACE,CAAA,IACA/C,OACFA;MACL;MACD;MACA;IAlBF;AAqBA,WAAOuE;EACR;SAIDP,MAAA,SAAA,MAAA;AAEE,QAAIO;AACJ,SAAKtC;;MAEH,SAACpC,QAAD;AACE,YAAM8E,MAAM9E,OAAM+E,MAAN;AACZ,YAAI,CAACL,QAAQ;AACXA,mBAASI,OAAOA,IAAIX,OAAOW,IAAIX,IAAJ;QAC5B;AACD,eAAOW;MACR;MACD;MACA;IAVF;AAaA,WAAOJ;EACR;SAIDM,SAAA,SAAA,SAAA;AACE,QAAMC,eAA6B;MACjC3B,MAAM,KAAKA;MACXa,KAAK,KAAKA;MACV5D,MAAM,KAAKA;MACXR,MAAM,KAAKA;MACXa,QAAQ,KAAKA;MACbE,SAAS,KAAKA;MACd+C,SAAS,KAAKA;MACdI,QAAQ,KAAKA;MACbT,YAAY,KAAKA;MACjBU,WAAW,KAAKA;MAChBT,YAAY,KAAKA;MACjBC,YAAY,KAAKA;MACjBC,cAAc,KAAKA;MACnBC,eAAe,KAAKA;MACpBG,eAAe,KAAKA;MACpBC,cAAc,KAAKA;IAhBc;uBA6B/B,KAAK7B,OATP+C,YAAAA,aAAAA,WACAF,UAAAA,aAAAA,QACAG,WAAAA,aAAAA,UACA5C,OAAAA,aAAAA,yCACAE,QAGK2C,eAAAA,8BAAAA,qBAAAA,CAAAA,YAAAA,kBAAAA,CAAAA;AAIP,QAAMjD,QAAK,SAAA,CAAA,GACN8C,cADM;MAETI,MAAMD;MACN7C;IAHS,CAAA;AAMX,WAAO2C,YACHI,cAAoBJ,WAAkB/C,KAAtC,IACA6C,UACCA,QAAe7C,KAAD,IACfgD,WACA,OAAOA,aAAa,aACjBA,SAAiBhD,KAAD,IACjB,CAACoD,gBAAgBJ,QAAD,IAChBG,SAAeE,KAAKL,QAApB,IACA,OACF;EACL;;EAzPwCG,SAAAA;AAArCpD,gBAIGuD,eAAe;EACpBlB,kBAAkB;AADE;;;AlI1IxB,SAAS,KAAK,QAAQ,MAAM,YAAY;AACxC,SAAS,UAAAmB,SAAQ,QAAAC,OAA8C,eAAAC,cAAa,SAAAC,cAAa;AACzF,SAAS,2BAA2B;;;AqIapC,SAAgB,qBAAqB;;;ACpBrC,SAAO,iBAAiB,GAAE,cAAc,GAAE,WAAW,GAAE,YAAY,GAAE,aAAa,SAAM;AAA4G,SAAO,OAAO,SAAM;AAAoB,IAAM,IAAE,EAAE,MAAM;AAA4e,SAAS,IAAG;AAAC,QAAMC,KAAE,EAAE,CAAC;AAAE,MAAG,CAACA;AAAE,UAAM,IAAI,MAAM,MAAM;AAAE,SAAOA;AAAC;AAAkb,SAAS,IAAG;AAAC,SAAO,EAAE,EAAE;AAAM;;;ADsBxvC,SAAS,iBAAiB;AAC1B,SAAS,UAAAC,eAAc;AACvB,SAAS,aAAa;AAkChB,SACE,OAAAC,OADF,QAAAC,cAAA;AA1BC,IAAM,mBAAoD,CAAC;AAAA,EAChE,UAAU;AACZ,MAAM;AACJ,QAAM,gBAAgB,EAAU;AAChC,QAAM,SAAS,UAAU;AACzB,QAAM,CAAC,WAAW,eAAe,IAAI,cAAc;AAEnD,QAAM,uBAAuB,CAAC,cAA+B;AAC3D,QAAI,cAAc;AAAe;AAEjC,oBAAgB,MAAM;AAEpB,eAAS,SAAS,eAAe,SAAS;AAG1C,UAAI,OAAO,WAAW,aAAa;AACjC,qBAAa,QAAQ,4BAA4B,SAAS;AAAA,MAC5D;AAGA,aAAO,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH;AAEA,MAAI,YAAY,WAAW;AACzB,WACE,gBAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD;AAAA,QAACD;AAAA,QAAA;AAAA,UACC,SAAS,kBAAkB,OAAO,YAAY;AAAA,UAC9C,MAAK;AAAA,UACL,SAAS,MAAM,qBAAqB,IAAI;AAAA,UACxC,UAAU;AAAA,UACV,WAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,MACA,gBAAAC;AAAA,QAACD;AAAA,QAAA;AAAA,UACC,SAAS,kBAAkB,OAAO,YAAY;AAAA,UAC9C,MAAK;AAAA,UACL,SAAS,MAAM,qBAAqB,IAAI;AAAA,UACxC,UAAU;AAAA,UACV,WAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAE,OAAC,SAAI,WAAU,2BACb;AAAA,oBAAAD,MAAC,SAAM,WAAU,8BAA6B;AAAA,IAC9C,gBAAAA;AAAA,MAACD;AAAA,MAAA;AAAA,QACC,SAAS,kBAAkB,OAAO,YAAY;AAAA,QAC9C,MAAK;AAAA,QACL,SAAS,MAAM,qBAAqB,IAAI;AAAA,QACxC,UAAU;AAAA,QACV,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,IACA,gBAAAC;AAAA,MAACD;AAAA,MAAA;AAAA,QACC,SAAS,kBAAkB,OAAO,YAAY;AAAA,QAC9C,MAAK;AAAA,QACL,SAAS,MAAM,qBAAqB,IAAI;AAAA,QACxC,UAAU;AAAA,QACV,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,IACC,aACC,gBAAAC,MAAC,SAAI,WAAU,yFAAwF;AAAA,KAE3G;AAEJ;;;ArI7BM,gBAAAE,OA+DE,QAAAC,cA/DF;AArDN,IAAM,YAAsC,CAAC;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,UAAU;AAAA,EACV;AACF,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAIC,WAAS,KAAK;AAC9C,QAAMC,KAAI,oBAAoB;AAG9B,QAAM,mBAAuB,SAAO;AAAA,IAClC,OAAW,SAAO,EACf,MAAMA,GAAE,oBAAoB,CAAC,EAC7B,SAASA,GAAE,oBAAoB,CAAC;AAAA,IACnC,UAAc,SAAO,EAClB,IAAI,GAAGA,GAAE,uBAAuB,CAAC,EACjC,SAASA,GAAE,uBAAuB,CAAC;AAAA,EACxC,CAAC;AAED,QAAM,aAAa,UAAyB;AAAA,IAC1C,oBAAoB;AAAA,IACpB,eAAe;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,IACA,UAAU,OAAO,WAA0B;AACzC,UAAI;AACF,YAAI,SAAS;AACX,gBAAM,QAAQ,MAAM;AAAA,QACtB,OAAO;AAEL,kBAAQ,IAAI,eAAe,MAAM;AAAA,QACnC;AAAA,MACF,SAASC,QAAO;AACd,gBAAQ,MAAM,iBAAiBA,MAAK;AAAA,MACtC;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,eAAe,CAACC,OAAuB;AAC3C,IAAAA,GAAE,eAAe;AACjB,eAAW,aAAa;AAAA,EAC1B;AAEA,QAAM,2BAA2B,MAAM;AACrC,gBAAY,CAAC,QAAQ;AAAA,EACvB;AAEA,SACE,gBAAAJ,OAAC,SAAI,WAAU,oIACb;AAAA,oBAAAD,MAAC,WAAM,KAAG,MAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA+BV;AAAA,IAGF,gBAAAA,MAAC,SAAI,WAAU,wCAAuC,OAAO;AAAA,MAC3D,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,SAAS;AAAA,IACX,GAAG;AAAA,IAGH,gBAAAA,MAAC,SAAI,WAAU,yHAAwH;AAAA,IACvI,gBAAAA,MAAC,SAAI,WAAU,4HAA2H;AAAA,IAC1I,gBAAAA,MAAC,SAAI,WAAU,8HAA6H;AAAA,IAC5I,gBAAAA,MAAC,SAAI,WAAU,6HAA4H;AAAA,IAG3I,gBAAAA,MAAC,SAAI,WAAU,kJAAiJ,OAAO;AAAA,MACrK,WAAW;AAAA,MACX,iBAAiB;AAAA,IACnB,GAAG;AAAA,IACH,gBAAAA,MAAC,SAAI,WAAU,sJAAqJ,OAAO;AAAA,MACzK,WAAW;AAAA,MACX,iBAAiB;AAAA,IACnB,GAAG;AAAA,IAGH,gBAAAA,MAAC,SAAI,WAAU,+BACb,0BAAAA,MAAC,oBAAiB,SAAQ,WAAU,GACtC;AAAA,IAEA,gBAAAC,OAAC,SAAI,WAAU,iCAEb;AAAA,sBAAAA,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,gBACb,0BAAAA,MAAC,SAAI,WAAU,uFACb,0BAAAA,MAAC,UAAK,WAAU,iCAAgC,eAAC,GACnD,GACF;AAAA,QACA,gBAAAA,MAAC,QAAG,WAAU,yCACX,oBAAU,iBAAiBG,GAAE,aAAa,GAC7C;AAAA,QACA,gBAAAH,MAAC,OAAE,WAAU,iDACV,oBAAU,gCAAgCG,GAAE,gBAAgB,GAC/D;AAAA,SACF;AAAA,MAGA,gBAAAH,MAACM,OAAA,EAAK,WAAU,kEACd,0BAAAN,MAACO,cAAA,EAAY,WAAU,OACrB,0BAAAN,OAAC,UAAK,UAAU,cAAc,WAAU,aACrC;AAAA,iBACC,gBAAAA,OAAC,SAAI,WAAU,8FACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,gBAAe,0BAAE;AAAA,UAC/B;AAAA,WACH;AAAA,QAGF,gBAAAC,OAAC,SAAI,WAAU,aAEb;AAAA,0BAAAA,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDACd,UAAAG,GAAE,aAAa,GAClB;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAC,QAAK,WAAU,4EAA2E;AAAA,cAC3F,gBAAAA;AAAA,gBAACQ;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,aAAaL,GAAE,aAAa;AAAA,kBAC5B,WAAU;AAAA,kBACV,UAAU,CAACE,OAAM;AACf,+BAAW,aAAaA,EAAC;AACzB,oCAAgB;AAAA,kBAClB;AAAA,kBACA,QAAQ,WAAW;AAAA,kBACnB,OAAO,WAAW,OAAO,SAAS;AAAA,kBAClC,MAAK;AAAA;AAAA,cACP;AAAA,eACF;AAAA,YACC,WAAW,QAAQ,SAAS,WAAW,OAAO,SAC7C,gBAAAL,MAAC,OAAE,WAAU,6BACV,qBAAW,OAAO,OACrB;AAAA,aAEJ;AAAA,UAGA,gBAAAC,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDACd,UAAAG,GAAE,gBAAgB,GACrB;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAC,QAAK,WAAU,4EAA2E;AAAA,cAC3F,gBAAAA;AAAA,gBAACQ;AAAA,gBAAA;AAAA,kBACC,MAAM,WAAW,SAAS;AAAA,kBAC1B,aAAaL,GAAE,gBAAgB;AAAA,kBAC/B,WAAU;AAAA,kBACV,UAAU,CAACE,OAAM;AACf,+BAAW,aAAaA,EAAC;AACzB,oCAAgB;AAAA,kBAClB;AAAA,kBACA,QAAQ,WAAW;AAAA,kBACnB,OAAO,WAAW,OAAO,YAAY;AAAA,kBACrC,MAAK;AAAA;AAAA,cACP;AAAA,cACA,gBAAAL;AAAA,gBAACS;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,WAAU;AAAA,kBAET,qBAAW,gBAAAT,MAAC,UAAO,WAAU,WAAU,IAAK,gBAAAA,MAAC,OAAI,WAAU,WAAU;AAAA;AAAA,cACxE;AAAA,eACF;AAAA,YACC,WAAW,QAAQ,YAAY,WAAW,OAAO,YAChD,gBAAAA,MAAC,OAAE,WAAU,6BACV,qBAAW,OAAO,UACrB;AAAA,aAEJ;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,qBACb;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAK;AAAA,kBACL,IAAG;AAAA,kBACH,WAAU;AAAA;AAAA,cACZ;AAAA,cACA,gBAAAA,MAAC,WAAM,SAAQ,YAAW,WAAU,0CACjC,UAAAG,GAAE,kBAAkB,GACvB;AAAA,eACF;AAAA,YACA,gBAAAH;AAAA,cAACS;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,SAAS,MAAM,aAAa,kBAAkB;AAAA,gBAC9C,WAAU;AAAA,gBAET,UAAAN,GAAE,sBAAsB;AAAA;AAAA,YAC3B;AAAA,aACF;AAAA,UAGA,gBAAAH;AAAA,YAACS;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU;AAAA,cAET,oBACC,gBAAAR,OAAC,SAAI,WAAU,oCACb;AAAA,gCAAAD,MAAC,SAAI,WAAU,kEAAiE;AAAA,gBAC/EG,GAAE,mBAAmB;AAAA,gBAAE;AAAA,iBAC1B,IAEAA,GAAE,mBAAmB;AAAA;AAAA,UAEzB;AAAA,WACF;AAAA,SACF,GACF,GACF;AAAA,MAGA,gBAAAH,MAAC,SAAI,WAAU,oBACZ,WAAC,WACA,gBAAAC,OAAC,OAAE,WAAU,2BACV;AAAA,QAAAE,GAAE,iBAAiB;AAAA,QAAG;AAAA,QACvB,gBAAAH;AAAA,UAACS;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,aAAa,WAAW;AAAA,YACvC,WAAU;AAAA,YAET,UAAAN,GAAE,cAAc;AAAA;AAAA,QACnB;AAAA,SACF,GAEJ;AAAA,MAGA,gBAAAH,MAAC,SAAI,WAAU,oBACb,0BAAAC,OAAC,OAAE,WAAU,yBAAwB;AAAA;AAAA,SAChC,oBAAI,KAAK,GAAE,YAAY;AAAA,QAAE;AAAA,QAAE,UAAU,qBAAqB;AAAA,QAAa;AAAA,QAAe;AAAA,QACzF,gBAAAD,MAAC,UAAK,WAAU,gBAAe,oBAAC;AAAA,QAAO;AAAA,SACzC,GACF;AAAA,OACF;AAAA,KACF;AAEJ;AAEA,IAAO,oBAAQ;;;AuIzSf,SAAgB,YAAAU,kBAAgB;AAChC,SAAS,aAAAC,kBAAiB;AAG1B,SAAS,OAAAC,MAAK,UAAAC,SAAQ,QAAAC,OAAM,QAAAC,OAAM,QAAAC,OAAM,OAAO,OAAO,eAAAC,eAAa,cAAc;AACjF,SAAS,eAAe;AACxB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAEK;AACP;AAAA,EACE,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,mBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,YAAAC;AAAA,OACK;AACP,SAAS,uBAAAC,4BAA2B;AA0N1B,SAuCI,YAAAC,WAvCJ,OAAAC,OAYE,QAAAC,cAZF;AA3LV,IAAM,eAA4C,CAAC;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,SAASC,WAAU;AACzB,QAAM,CAAC,UAAU,WAAW,IAAIC,WAAS,KAAK;AAC9C,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAC5D,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAS,CAAC;AAChD,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAoC,CAAC,CAAC;AAC5E,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AACtD,QAAM,EAAE,cAAc,YAAY,YAAY,IAAIN,UAAS;AAC3D,QAAMO,KAAIN,qBAAoB;AAG9B,QAAM,wBAA4B,SAAO;AAAA,IACvC,OAAW,SAAO,EACf,MAAMM,GAAE,oBAAoB,CAAC,EAC7B,SAASA,GAAE,wBAAwB,CAAC;AAAA,IACvC,UAAc,SAAO,EAClB,IAAI,GAAGA,GAAE,4BAA4B,CAAC,EACtC,IAAI,IAAIA,GAAE,4BAA4B,CAAC,EACvC,SAASA,GAAE,2BAA2B,CAAC;AAAA,IAC1C,iBAAqB,SAAO,EACzB,MAAM,CAAK,SAAI,UAAU,CAAC,GAAGA,GAAE,2BAA2B,CAAC,EAC3D,SAASA,GAAE,kCAAkC,CAAC;AAAA,IACjD,WAAe,SAAO,EACnB,IAAI,GAAGA,GAAE,4BAA4B,CAAC,EACtC,SAASA,GAAE,4BAA4B,CAAC;AAAA,IAC3C,UAAc,SAAO,EAClB,IAAI,GAAGA,GAAE,2BAA2B,CAAC,EACrC,SAASA,GAAE,2BAA2B,CAAC;AAAA,IAC1C,OAAW,SAAO,EACf,QAAQ,mBAAmBA,GAAE,uBAAuB,CAAC,EACrD,IAAI,IAAIA,GAAE,yBAAyB,CAAC,EACpC,SAASA,GAAE,wBAAwB,CAAC;AAAA,EACzC,CAAC;AAGD,QAAM,wBAA4B,SAAO;AAAA,IACvC,cAAkB,SAAO,EACtB,IAAI,GAAGA,GAAE,gCAAgC,CAAC,EAC1C,SAASA,GAAE,+BAA+B,CAAC;AAAA,IAC9C,cAAkB,SAAO,EACtB,MAAM,CAAC,YAAY,WAAW,aAAa,SAAS,GAAGA,GAAE,+BAA+B,CAAC,EACzF,SAASA,GAAE,+BAA+B,CAAC;AAAA,IAC9C,aAAiB,SAAO,EACrB,MAAM,CAAC,SAAS,UAAU,OAAO,GAAGA,GAAE,8BAA8B,CAAC,EACrE,SAASA,GAAE,8BAA8B,CAAC;AAAA,IAC7C,SAAa,SAAO,EACjB,IAAI,GAAGA,GAAE,2BAA2B,CAAC,EACrC,SAASA,GAAE,0BAA0B,CAAC;AAAA,IACzC,MAAU,SAAO,EACd,IAAI,GAAGA,GAAE,wBAAwB,CAAC,EAClC,SAASA,GAAE,uBAAuB,CAAC;AAAA,IACtC,OAAW,SAAO,EACf,IAAI,GAAGA,GAAE,yBAAyB,CAAC,EACnC,SAASA,GAAE,wBAAwB,CAAC;AAAA,IACvC,SAAa,SAAO,EACjB,QAAQ,0BAA0BA,GAAE,yBAAyB,CAAC,EAC9D,SAASA,GAAE,0BAA0B,CAAC;AAAA,IACzC,SAAa,SAAO,EACjB,IAAI,GAAGA,GAAE,2BAA2B,CAAC,EACrC,SAASA,GAAE,0BAA0B,CAAC;AAAA,IACzC,uBAA2B,SAAQ,EAChC,MAAM,CAAC,IAAI,GAAGA,GAAE,uBAAuB,CAAC,EACxC,SAASA,GAAE,uBAAuB,CAAC;AAAA,EACxC,CAAC;AAED,QAAM,SAAS,UAA4B;AAAA,IACzC,eAAe;AAAA,MACb,OAAO;AAAA,MACP,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,OAAO;AAAA,MACP,cAAc;AAAA,MACd,cAAc;AAAA,MACd,aAAa;AAAA,MACb,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS,kBAAkB,EAAE;AAAA,MAC7B,uBAAuB;AAAA,MACvB,MAAM;AAAA,IACR;AAAA,IACA,kBAAkB,gBAAgB,IAAI,wBAAwB;AAAA,IAC9D,UAAU,OAAO,WAA6B;AAE5C,UAAI,cAAc;AAChB;AAAA,MACF;AAEA,sBAAgB,IAAI;AAGpB,YAAM,YAAY,WAAW,MAAM;AACjC,wBAAgB,KAAK;AAAA,MACvB,GAAG,GAAK;AAER,UAAI,gBAAgB,GAAG;AAErB,uBAAe;AAAA,UACb,OAAO,OAAO;AAAA,UACd,UAAU,OAAO;AAAA,UACjB,iBAAiB,OAAO;AAAA,UACxB,WAAW,OAAO;AAAA,UAClB,UAAU,OAAO;AAAA,UACjB,OAAO,OAAO;AAAA,UACd,MAAM,OAAO;AAAA,QACf,CAAC;AACD,uBAAe,CAAC;AAChB;AAAA,MACF;AAGA,YAAM,eAAe,EAAE,GAAG,aAAa,GAAG,OAAO;AAEjD,UAAI;AAGF,cAAM,mBAAmB;AAAA,UACvB,MAAM,GAAG,aAAa,SAAS,IAAI,aAAa,QAAQ;AAAA,UACxD,OAAO,aAAa;AAAA,UACpB,UAAU,aAAa;AAAA,UACvB,WAAW,aAAa;AAAA,UACxB,UAAU,aAAa;AAAA,UACvB,OAAO,aAAa;AAAA,UACpB,MAAM,aAAa;AAAA,UACnB,cAAc,OAAO;AAAA,UACrB,cAAc,OAAO;AAAA,UACrB,aAAa,OAAO;AAAA,UACpB,SAAS,OAAO;AAAA,UAChB,MAAM,OAAO;AAAA,UACb,OAAO,OAAO;AAAA,UACd,SAAS,OAAO;AAAA,UAChB,SAAS,OAAO;AAAA,QAClB;AAEA,cAAM,SAAS,MAAM,QAAQ,SAAS,gBAAgB;AAEtD,YAAI,CAAC,OAAO,SAAS;AAEnB,gBAAM,IAAI,MAAM,OAAO,WAAW,OAAO,SAAS,qBAAqB;AAAA,QACzE;AAGA,YAAI,OAAO,MAAM,OAAO;AACtB,gBAAM,EAAE,cAAc,IAAI,MAAM,OAAO,mBAAmB;AAC1D,wBAAc,OAAO,KAAK,OAAO,OAAO,KAAK,IAAI;AAAA,QACnD;AAEA,qBAAaA,GAAE,+BAA+B,GAAGA,GAAE,qCAAqC,CAAC;AAGzF,eAAO,UAAU;AACjB,uBAAe,CAAC;AAChB,uBAAe,CAAC,CAAC;AAGjB,mBAAW,MAAM;AAEf,cAAI,YAAY;AACd,uBAAW,QAAQ;AAAA,UACrB,OAAO;AACL,mBAAO,KAAK,QAAQ;AAAA,UACtB;AAAA,QACF,GAAG,GAAI;AAAA,MACT,SAAS,OAAY;AACnB;AAAA,UACEA,GAAE,6BAA6B;AAAA,UAC/B,MAAM,WAAWA,GAAE,6BAA6B;AAAA,QAClD;AAAA,MACF,UAAE;AACA,qBAAa,SAAS;AACtB,wBAAgB,KAAK;AAAA,MACvB;AAAA,IACF;AAAA,EACF,CAAC;AAED,SACE,gBAAAH,OAAC,SAAI,WAAU,yCACb;AAAA,oBAAAA,OAACf,OAAA,EAAK,WAAU,oDACd;AAAA,sBAAAe,OAACd,aAAA,EAAW,WAAU,eACpB;AAAA,wBAAAa,MAACZ,YAAA,EAAU,WAAU,oCAClB,UAAAgB,GAAE,gCAAgC,GACrC;AAAA,QACA,gBAAAJ,MAACX,kBAAA,EAAgB,WAAU,iBACxB,0BAAgB,IACbe,GAAE,gBAAgB,IAClBA,GAAE,gBAAgB,GAExB;AAAA,QAGA,gBAAAH,OAAC,SAAI,WAAU,mDACb;AAAA,0BAAAA,OAAC,SAAI,WAAW,qBAAqB,eAAe,IAAI,kBAAkB,eAAe,IACvF;AAAA,4BAAAD,MAAC,SAAI,WAAW,6EACd,eAAe,IAAI,2BAA2B,2BAChD,IAAI,eAEJ;AAAA,YACA,gBAAAA,MAAC,UAAK,WAAU,4BAA4B,UAAAI,GAAE,kBAAkB,GAAE;AAAA,aACpE;AAAA,UACA,gBAAAJ,MAAC,SAAI,WAAW,aAAa,eAAe,IAAI,gBAAgB,aAAa,IAAI;AAAA,UACjF,gBAAAC,OAAC,SAAI,WAAW,qBAAqB,eAAe,IAAI,kBAAkB,eAAe,IACvF;AAAA,4BAAAD,MAAC,SAAI,WAAW,6EACd,eAAe,IAAI,2BAA2B,2BAChD,IAAI,eAEJ;AAAA,YACA,gBAAAA,MAAC,UAAK,WAAU,4BAA4B,UAAAI,GAAE,mBAAmB,GAAE;AAAA,aACrE;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAJ,MAACV,cAAA,EACC,0BAAAW,OAAC,UAAK,UAAU,CAACI,OAAM;AACrB,QAAAA,GAAE,eAAe;AACjB,eAAO,aAAaA,EAAC;AAAA,MACvB,GAAG,WAAU,aAEV;AAAA,wBAAgB,KACf,gBAAAJ,OAAAF,WAAA,EAEE;AAAA,0BAAAE,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,SAAQ,SAAQ,WAAU,qCAC9B,UAAAI,GAAE,gBAAgB,GACrB;AAAA,YACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAACnB,OAAA,EAAK,WAAU,4EAA2E;AAAA,cAC3F,gBAAAmB;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,yBAAyB;AAAA,kBACxC,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,SAAS,OAAO,OAAO,SAAS,OAAO,QAAQ,QAAQ,mBAAmB,EAAE;AAAA;AAAA,cACzF;AAAA,eACF;AAAA,YACC,OAAO,OAAO,SAAS,OAAO,QAAQ,SACrC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,OAAM;AAAA,aAE7D;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,SAAQ,YAAW,WAAU,qCACjC,UAAAI,GAAE,mBAAmB,GACxB;AAAA,YACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAClB,OAAA,EAAK,WAAU,4EAA2E;AAAA,cAC3F,gBAAAkB;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAM,WAAW,SAAS;AAAA,kBAC1B,aAAaa,GAAE,yBAAyB;AAAA,kBACxC,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,eAAe,OAAO,OAAO,YAAY,OAAO,QAAQ,WAAW,mBAAmB,EAAE;AAAA;AAAA,cACrG;AAAA,cACA,gBAAAJ;AAAA,gBAACf;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,SAAS,MAAM,YAAY,CAAC,QAAQ;AAAA,kBACpC,WAAU;AAAA,kBAET,qBAAW,gBAAAe,MAACpB,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAoB,MAACrB,MAAA,EAAI,WAAU,WAAU;AAAA;AAAA,cACxE;AAAA,eACF;AAAA,YACC,OAAO,OAAO,YAAY,OAAO,QAAQ,YACxC,gBAAAqB,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,UAAS;AAAA,aAEhE;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,SAAQ,mBAAkB,WAAU,qCACxC,UAAAI,GAAE,0BAA0B,GAC/B;AAAA,YACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAClB,OAAA,EAAK,WAAU,4EAA2E;AAAA,cAC3F,gBAAAkB;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAM,kBAAkB,SAAS;AAAA,kBACjC,aAAaa,GAAE,8BAA8B;AAAA,kBAC7C,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,eAAe,OAAO,OAAO,mBAAmB,OAAO,QAAQ,kBAAkB,mBAAmB,EAAE;AAAA;AAAA,cACnH;AAAA,cACA,gBAAAJ;AAAA,gBAACf;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,SAAS,MAAM,mBAAmB,CAAC,eAAe;AAAA,kBAClD,WAAU;AAAA,kBAET,4BAAkB,gBAAAe,MAACpB,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAoB,MAACrB,MAAA,EAAI,WAAU,WAAU;AAAA;AAAA,cAC/E;AAAA,eACF;AAAA,YACC,OAAO,OAAO,mBAAmB,OAAO,QAAQ,mBAC/C,gBAAAqB,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,iBAAgB;AAAA,aAEvE;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,yCAEb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,SAAQ,aAAY,WAAU,qCAClC,UAAAI,GAAE,oBAAoB,GACzB;AAAA,cACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,gCAAAD,MAACjB,OAAA,EAAK,WAAU,4EAA2E;AAAA,gBAC3F,gBAAAiB;AAAA,kBAACT;AAAA,kBAAA;AAAA,oBACC,IAAG;AAAA,oBACH,MAAK;AAAA,oBACL,MAAK;AAAA,oBACL,aAAaa,GAAE,yBAAyB;AAAA,oBACxC,OAAO,OAAO,OAAO;AAAA,oBACrB,UAAU,OAAO;AAAA,oBACjB,QAAQ,OAAO;AAAA,oBACf,WAAW,SAAS,OAAO,OAAO,aAAa,OAAO,QAAQ,YAAY,mBAAmB,EAAE;AAAA;AAAA,gBACjG;AAAA,iBACF;AAAA,cACC,OAAO,OAAO,aAAa,OAAO,QAAQ,aACzC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,WAAU;AAAA,eAEjE;AAAA,YAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,SAAQ,YAAW,WAAU,qCACjC,UAAAI,GAAE,mBAAmB,GACxB;AAAA,cACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,gCAAAD,MAACjB,OAAA,EAAK,WAAU,4EAA2E;AAAA,gBAC3F,gBAAAiB;AAAA,kBAACT;AAAA,kBAAA;AAAA,oBACC,IAAG;AAAA,oBACH,MAAK;AAAA,oBACL,MAAK;AAAA,oBACL,aAAaa,GAAE,wBAAwB;AAAA,oBACvC,OAAO,OAAO,OAAO;AAAA,oBACrB,UAAU,OAAO;AAAA,oBACjB,QAAQ,OAAO;AAAA,oBACf,WAAW,SAAS,OAAO,OAAO,YAAY,OAAO,QAAQ,WAAW,mBAAmB,EAAE;AAAA;AAAA,gBAC/F;AAAA,iBACF;AAAA,cACC,OAAO,OAAO,YAAY,OAAO,QAAQ,YACxC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,UAAS;AAAA,eAEhE;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,SAAQ,SAAQ,WAAU,qCAC9B,UAAAI,GAAE,gBAAgB,GACrB;AAAA,YACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAC,SAAM,WAAU,4EAA2E;AAAA,cAC5F,gBAAAA;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,2BAA2B;AAAA,kBAC1C,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,SAAS,OAAO,OAAO,SAAS,OAAO,QAAQ,QAAQ,mBAAmB,EAAE;AAAA;AAAA,cACzF;AAAA,eACF;AAAA,YACC,OAAO,OAAO,SAAS,OAAO,QAAQ,SACrC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,OAAM;AAAA,aAE7D;AAAA,UAGA,gBAAAA;AAAA,YAACf;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU;AAAA,cAET,yBAAemB,GAAE,qBAAqB,IAAIA,GAAE,iCAAiC;AAAA;AAAA,UAChF;AAAA,WACF;AAAA,QAID,gBAAgB,KACf,gBAAAH,OAAAF,WAAA,EAEE;AAAA,0BAAAE,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,SAAQ,gBAAe,WAAU,qCACrC,UAAAI,GAAE,uBAAuB,GAC5B;AAAA,YACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAC,SAAM,WAAU,4EAA2E;AAAA,cAC5F,gBAAAA;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,4BAA4B;AAAA,kBAC3C,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,SAAS,OAAO,OAAO,gBAAgB,OAAO,QAAQ,eAAe,mBAAmB,EAAE;AAAA;AAAA,cACvG;AAAA,eACF;AAAA,YACC,OAAO,OAAO,gBAAgB,OAAO,QAAQ,gBAC5C,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,cAAa;AAAA,aAEpE;AAAA,UAIA,gBAAAC,OAAC,SAAI,WAAU,aAEb;AAAA,4BAAAD,MAAC,SAAI,WAAU,sDACb,0BAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,8BAAAD,MAAC,SAAI,WAAU,iBACb,0BAAAA,MAAC,SAAI,WAAU,0BAAyB,SAAQ,aAAY,MAAK,gBAC/D,0BAAAA,MAAC,UAAK,UAAS,WAAU,GAAE,qNAAoN,UAAS,WAAU,GACpQ,GACF;AAAA,cACA,gBAAAC,OAAC,SAAI,WAAU,QACb;AAAA,gCAAAD,MAAC,QAAG,WAAU,sCACX,UAAAI,GAAE,0BAA0B,GAC/B;AAAA,gBACA,gBAAAJ,MAAC,SAAI,WAAU,+BACb,0BAAAA,MAAC,OAAG,UAAAI,GAAE,0BAA0B,GAAE,GACpC;AAAA,iBACF;AAAA,eACF,GACF;AAAA,YAEA,gBAAAH,OAAC,SAAI,WAAU,aAEb;AAAA,8BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,gCAAAA,OAAC,WAAM,SAAQ,gBAAe,WAAU,qCACrC;AAAA,kBAAAG,GAAE,uBAAuB;AAAA,kBAAE;AAAA,mBAC9B;AAAA,gBACA,gBAAAH;AAAA,kBAACT;AAAA,kBAAA;AAAA,oBACC,OAAO,OAAO,OAAO;AAAA,oBACrB,eAAe,CAAC,UAAU,OAAO,cAAc,gBAAgB,KAAK;AAAA,oBAEpE;AAAA,sCAAAQ,MAACL,gBAAA,EAAc,WAAW,UAAU,OAAO,OAAO,gBAAgB,OAAO,QAAQ,eAAe,mBAAmB,EAAE,IACnH,0BAAAK,MAACJ,cAAA,EAAY,aAAaQ,GAAE,6BAA6B,GAAG,GAC9D;AAAA,sBACA,gBAAAJ,MAACP,gBAAA,EACE,gCAAsB,IAAI,CAAC,WAC1B,gBAAAO,MAACN,aAAA,EAA8B,OAAO,OAAO,OAC3C,0BAAAO,OAAC,SAAI,WAAU,6BACb;AAAA,wCAAAD,MAAC,UAAK,WAAU,eACb,UAAAI,GAAE,0BAA0B,OAAO,MAAM,YAAY,CAAC,QAAQ,GACjE;AAAA,wBACA,gBAAAJ,MAAC,UAAK,WAAU,yBACb,UAAAI,GAAE,0BAA0B,OAAO,MAAM,YAAY,CAAC,cAAc,GACvE;AAAA,yBACF,KARe,OAAO,KASxB,CACD,GACH;AAAA;AAAA;AAAA,gBACF;AAAA,gBACC,OAAO,OAAO,gBAAgB,OAAO,QAAQ,gBAC5C,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,cAAa;AAAA,iBAEpE;AAAA,cAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,gCAAAA,OAAC,WAAM,SAAQ,eAAc,WAAU,qCACpC;AAAA,kBAAAG,GAAE,sBAAsB;AAAA,kBAAE;AAAA,mBAC7B;AAAA,gBACA,gBAAAH;AAAA,kBAACT;AAAA,kBAAA;AAAA,oBACC,OAAO,OAAO,OAAO;AAAA,oBACrB,eAAe,CAAC,UAAU,OAAO,cAAc,eAAe,KAAK;AAAA,oBAEnE;AAAA,sCAAAQ,MAACL,gBAAA,EAAc,WAAW,UAAU,OAAO,OAAO,eAAe,OAAO,QAAQ,cAAc,mBAAmB,EAAE,IACjH,0BAAAK,MAACJ,cAAA,EAAY,aAAaQ,GAAE,4BAA4B,GAAG,GAC7D;AAAA,sBACA,gBAAAJ,MAACP,gBAAA,EACE,+BAAqB,IAAI,CAAC,WACzB,gBAAAO,MAACN,aAAA,EAA8B,OAAO,OAAO,OAC3C,0BAAAO,OAAC,SAAI,WAAU,6BACb;AAAA,wCAAAD,MAAC,UAAK,WAAU,eACb,UAAAI,GAAE,yBAAyB,OAAO,MAAM,YAAY,CAAC,QAAQ,GAChE;AAAA,wBACA,gBAAAJ,MAAC,UAAK,WAAU,yBACb,UAAAI,GAAE,yBAAyB,OAAO,MAAM,YAAY,CAAC,cAAc,GACtE;AAAA,yBACF,KARe,OAAO,KASxB,CACD,GACH;AAAA;AAAA;AAAA,gBACF;AAAA,gBACC,OAAO,OAAO,eAAe,OAAO,QAAQ,eAC3C,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,aAAY;AAAA,iBAEnE;AAAA,eACF;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,MAAC,WAAM,SAAQ,WAAU,WAAU,qCAChC,UAAAI,GAAE,kBAAkB,GACvB;AAAA,YACA,gBAAAH,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAAC,UAAO,WAAU,4EAA2E;AAAA,cAC7F,gBAAAA;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,+BAA+B;AAAA,kBAC9C,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,SAAS,OAAO,OAAO,WAAW,OAAO,QAAQ,UAAU,mBAAmB,EAAE;AAAA;AAAA,cAC7F;AAAA,eACF;AAAA,YACC,OAAO,OAAO,WAAW,OAAO,QAAQ,WACvC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,SAAQ;AAAA,aAE/D;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,0BACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,SAAQ,QAAO,WAAU,qCAC7B,UAAAI,GAAE,eAAe,GACpB;AAAA,cACA,gBAAAJ;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,eAAe;AAAA,kBAC9B,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,OAAO,OAAO,QAAQ,OAAO,QAAQ,OAAO,mBAAmB;AAAA;AAAA,cAC5E;AAAA,cACC,OAAO,OAAO,QAAQ,OAAO,QAAQ,QACpC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,MAAK;AAAA,eAE5D;AAAA,YACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,SAAQ,SAAQ,WAAU,qCAC9B,UAAAI,GAAE,gBAAgB,GACrB;AAAA,cACA,gBAAAJ;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,gBAAgB;AAAA,kBAC/B,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,OAAO,OAAO,SAAS,OAAO,QAAQ,QAAQ,mBAAmB;AAAA;AAAA,cAC9E;AAAA,cACC,OAAO,OAAO,SAAS,OAAO,QAAQ,SACrC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,OAAM;AAAA,eAE7D;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,0BACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAD,MAAC,WAAM,SAAQ,WAAU,WAAU,qCAChC,UAAAI,GAAE,kBAAkB,GACvB;AAAA,cACA,gBAAAJ;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,aAAaa,GAAE,kBAAkB;AAAA,kBACjC,OAAO,OAAO,OAAO;AAAA,kBACrB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAW,OAAO,OAAO,WAAW,OAAO,QAAQ,UAAU,mBAAmB;AAAA;AAAA,cAClF;AAAA,cACC,OAAO,OAAO,WAAW,OAAO,QAAQ,WACvC,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,SAAQ;AAAA,eAE/D;AAAA,YACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,8BAAAA,OAAC,WAAM,SAAQ,WAAU,WAAU,qCAChC;AAAA,gBAAAG,GAAE,kBAAkB;AAAA,gBAAE;AAAA,iBACzB;AAAA,cACA,gBAAAH;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,OAAO,OAAO,OAAO;AAAA,kBACrB,eAAe,CAAC,UAAU,OAAO,cAAc,WAAW,KAAK;AAAA,kBAE/D;AAAA,oCAAAQ,MAACL,gBAAA,EAAc,WAAW,UAAU,OAAO,OAAO,WAAW,OAAO,QAAQ,UAAU,mBAAmB,EAAE,IACzG,0BAAAK,MAACJ,cAAA,EAAY,aAAaQ,GAAE,wBAAwB,GAAG,GACzD;AAAA,oBACA,gBAAAJ,MAACP,gBAAA,EACE,oBAAU,IAAI,CAAC,YACd,gBAAAO,MAACN,aAAA,EAA8B,OAAO,QAAQ,MAC5C,0BAAAO,OAAC,SAAI,WAAU,2BACb;AAAA,sCAAAD,MAAC,UAAM,kBAAQ,MAAK;AAAA,sBACpB,gBAAAA,MAAC,UAAM,kBAAQ,MAAK;AAAA,uBACtB,KAJe,QAAQ,IAKzB,CACD,GACH;AAAA;AAAA;AAAA,cACF;AAAA,cACC,OAAO,OAAO,WAAW,OAAO,QAAQ,WACvC,gBAAAA,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,SAAQ;AAAA,eAE/D;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,OAAC,WAAM,WAAU,8BACf;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,SAAS,OAAO,OAAO;AAAA,kBACvB,UAAU,OAAO;AAAA,kBACjB,QAAQ,OAAO;AAAA,kBACf,WAAU;AAAA;AAAA,cACZ;AAAA,cACA,gBAAAC,OAAC,UAAK,WAAU,yBACb;AAAA,gBAAAG,GAAE,sBAAsB;AAAA,gBAAG;AAAA,gBAC5B,gBAAAJ,MAAC,OAAE,MAAK,UAAS,WAAU,+CACxB,UAAAI,GAAE,yBAAyB,GAC9B;AAAA,gBAAK;AAAA,gBACJA,GAAE,cAAc;AAAA,gBAAG;AAAA,gBACpB,gBAAAJ,MAAC,OAAE,MAAK,YAAW,WAAU,+CAC1B,UAAAI,GAAE,wBAAwB,GAC7B;AAAA,iBACF;AAAA,eACF;AAAA,YACC,OAAO,OAAO,yBAAyB,OAAO,QAAQ,yBACrD,gBAAAJ,MAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAO,uBAAsB;AAAA,aAE7E;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,oDACb;AAAA,4BAAAD,MAAC,QAAG,WAAU,0CAA0C,UAAAI,GAAE,4BAA4B,GAAE;AAAA,YACxF,gBAAAH,OAAC,QAAG,WAAU,mCACZ;AAAA,8BAAAA,OAAC,QAAG,WAAU,qBACZ;AAAA,gCAAAD,MAAChB,eAAA,EAAY,WAAU,8BAA6B;AAAA,gBACnDoB,GAAE,kCAAkC;AAAA,iBACvC;AAAA,cACA,gBAAAH,OAAC,QAAG,WAAU,qBACZ;AAAA,gCAAAD,MAAChB,eAAA,EAAY,WAAU,8BAA6B;AAAA,gBACnDoB,GAAE,wBAAwB;AAAA,gBAAE;AAAA,gBAAI,OAAO,OAAO,gBAAgB;AAAA,gBAAgB;AAAA,iBACjF;AAAA,cACA,gBAAAH,OAAC,QAAG,WAAU,qBACZ;AAAA,gCAAAD,MAAChB,eAAA,EAAY,WAAU,8BAA6B;AAAA,gBACnDoB,GAAE,0BAA0B;AAAA,iBAC/B;AAAA,cACA,gBAAAH,OAAC,QAAG,WAAU,qBACZ;AAAA,gCAAAD,MAAChB,eAAA,EAAY,WAAU,8BAA6B;AAAA,gBACnDoB,GAAE,+BAA+B;AAAA,iBACpC;AAAA,eACF;AAAA,aACF;AAAA,UAGA,gBAAAH,OAAC,SAAI,WAAU,kBACb;AAAA,4BAAAD;AAAA,cAACf;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,SAAS,MAAM,eAAe,CAAC;AAAA,gBAC/B,WAAU;AAAA,gBAET,UAAAmB,GAAE,eAAe;AAAA;AAAA,YACpB;AAAA,YACA,gBAAAJ;AAAA,cAACf;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,WAAU;AAAA,gBACV,UAAU;AAAA,gBAET,yBAAemB,GAAE,0BAA0B,IAAIA,GAAE,yBAAyB;AAAA;AAAA,YAC7E;AAAA,aACF;AAAA,WACF;AAAA,QAID,qBACC,gBAAAJ,MAAC,SAAI,WAAU,mFACZ,6BACH;AAAA,QAIF,gBAAAA,MAAC,SAAI,WAAU,eACb,0BAAAC,OAAC,OAAE,WAAU,yBACV;AAAA,UAAAG,GAAE,qBAAqB;AAAA,UAAG;AAAA,UAC3B,gBAAAJ;AAAA,YAACf;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,aAAa,QAAQ;AAAA,cACpC,WAAU;AAAA,cAET,UAAAmB,GAAE,iBAAiB;AAAA;AAAA,UACtB;AAAA,WACF,GACF;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAAO;AAAA,KAAI;AAEjB;AAEA,IAAO,uBAAQ;;;AC3wBf,SAAgB,YAAAE,kBAAgB;AAGhC,SAAS,QAAAC,OAAM,aAAAC,YAAW,eAAAC,qBAAmB;AAC7C,SAAS,UAAAC,UAAQ,QAAAC,OAAM,cAAAC,aAAY,aAAAC,YAAW,mBAAAC,kBAAiB,eAAAC,cAAa,SAAAC,cAAa;AACzF,SAAS,uBAAAC,4BAA2B;AAgE1B,SAGM,OAAAC,OAHN,QAAAC,cAAA;AAjDV,IAAM,qBAAwD,CAAC;AAAA,EAC7D;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,UAAU;AACZ,MAAM;AACJ,QAAM,CAAC,WAAW,YAAY,IAAIC,WAAS,KAAK;AAChD,QAAMC,KAAIJ,qBAAoB;AAG9B,QAAM,mBAAuB,SAAO;AAAA,IAClC,OAAW,SAAO,EACf,MAAMI,GAAE,oBAAoB,CAAC,EAC7B,SAASA,GAAE,oBAAoB,CAAC;AAAA,EACrC,CAAC;AAED,QAAM,aAAa,UAAkC;AAAA,IACnD,oBAAoB;AAAA,IACpB,eAAe;AAAA,MACb,OAAO;AAAA,IACT;AAAA,IACA;AAAA,IACA,UAAU,OAAO,WAAmC;AAClD,UAAI;AACF,YAAI,iBAAiB;AACnB,gBAAM,gBAAgB,MAAM;AAC5B,uBAAa,IAAI;AAAA,QACnB,OAAO;AAEL,kBAAQ,IAAI,wBAAwB,MAAM;AAC1C,uBAAa,IAAI;AAAA,QACnB;AAAA,MACF,SAASC,QAAO;AACd,gBAAQ,MAAM,0BAA0BA,MAAK;AAAA,MAC/C;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,eAAe,CAACC,OAAuB;AAC3C,IAAAA,GAAE,eAAe;AACjB,eAAW,aAAa;AAAA,EAC1B;AAEA,MAAI,aAAa,SAAS;AACxB,WACE,gBAAAL,MAAC,SAAI,WAAU,2GACb,0BAAAC,OAAC,SAAI,WAAU,mBAEb;AAAA,sBAAAA,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,gBACb,0BAAAA,MAAC,SAAI,WAAU,6EACb,0BAAAA,MAAC,UAAK,WAAU,gCAA+B,eAAC,GAClD,GACF;AAAA,QACA,gBAAAA,MAAC,QAAG,WAAU,yCACX,UAAAG,GAAE,2BAA2B,GAChC;AAAA,QACA,gBAAAH,MAAC,OAAE,WAAU,8BACV,UAAAG,GAAE,2BAA2B,GAChC;AAAA,SACF;AAAA,MAGA,gBAAAH,MAACP,OAAA,EAAK,WAAU,aACd,0BAAAQ,OAACJ,cAAA,EAAY,WAAU,mBACrB;AAAA,wBAAAG,MAAC,SAAI,WAAU,mFACb,0BAAAA,MAACT,eAAA,EAAY,WAAU,0BAAyB,GAClD;AAAA,QACA,gBAAAS,MAAC,QAAG,WAAU,4CACX,UAAAG,GAAE,wBAAwB,GAC7B;AAAA,QACA,gBAAAF,OAAC,OAAE,WAAU,8BACV;AAAA,UAAAE,GAAE,2BAA2B;AAAA,UAAG;AAAA,UACjC,gBAAAH,MAAC,UAAK,WAAU,eAAe,qBAAW,OAAO,OAAM;AAAA,WACzD;AAAA,QACA,gBAAAA,MAAC,OAAE,WAAU,8BACV,UAAAG,GAAE,2BAA2B,GAChC;AAAA,QAEA,gBAAAF,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAS,MAAM;AACb,6BAAa,KAAK;AAClB,2BAAW,UAAU;AAAA,cACvB;AAAA,cACA,WAAU;AAAA,cAET,UAAAW,GAAE,2BAA2B;AAAA;AAAA,UAChC;AAAA,UACA,gBAAAH;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,SAAS,MAAM,aAAa,QAAQ;AAAA,cACpC,WAAU;AAAA,cAET,UAAAW,GAAE,4BAA4B;AAAA;AAAA,UACjC;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAGA,gBAAAH,MAAC,SAAI,WAAU,oBACb,0BAAAC,OAAC,OAAE,WAAU,yBAAwB;AAAA;AAAA,SAChC,oBAAI,KAAK,GAAE,YAAY;AAAA,QAAE;AAAA,QAA0B;AAAA,QACtD,gBAAAD,MAAC,UAAK,WAAU,gBAAe,oBAAC;AAAA,QAAO;AAAA,SACzC,GACF;AAAA,OACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,MAAC,SAAI,WAAU,2GACb,0BAAAC,OAAC,SAAI,WAAU,mBAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,oBACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,gBACb,0BAAAA,MAAC,SAAI,WAAU,6EACb,0BAAAA,MAAC,UAAK,WAAU,gCAA+B,eAAC,GAClD,GACF;AAAA,MACA,gBAAAA,MAAC,QAAG,WAAU,yCACX,UAAAG,GAAE,sBAAsB,GAC3B;AAAA,MACA,gBAAAH,MAAC,OAAE,WAAU,8BACV,UAAAG,GAAE,yBAAyB,GAC9B;AAAA,OACF;AAAA,IAGA,gBAAAF,OAACR,OAAA,EAAK,WAAU,aACd;AAAA,sBAAAQ,OAACP,aAAA,EAAW,WAAU,gEACpB;AAAA,wBAAAM,MAACL,YAAA,EAAU,WAAU,uCAClB,UAAAQ,GAAE,sBAAsB,GAC3B;AAAA,QACA,gBAAAH,MAACJ,kBAAA,EAAgB,WAAU,8BACxB,UAAAO,GAAE,yBAAyB,GAC9B;AAAA,SACF;AAAA,MACA,gBAAAH,MAACH,cAAA,EAAY,WAAU,OACrB,0BAAAI,OAAC,UAAK,UAAU,cACb;AAAA,iBACC,gBAAAA,OAAC,SAAI,WAAU,+FACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,gBAAe,0BAAE;AAAA,UAC/B;AAAA,WACH;AAAA,QAGF,gBAAAC,OAAC,SAAI,WAAU,aAEb;AAAA,0BAAAA,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDACd,UAAAG,GAAE,sBAAsB,GAC3B;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,YACb;AAAA,8BAAAD,MAACX,OAAA,EAAK,WAAU,+CAA8C;AAAA,cAC9D,gBAAAW;AAAA,gBAACF;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,aAAaK,GAAE,sBAAsB;AAAA,kBACrC,WAAU;AAAA,kBACV,UAAU,WAAW;AAAA,kBACrB,QAAQ,WAAW;AAAA,kBACnB,OAAO,WAAW,OAAO,SAAS;AAAA,kBAClC,MAAK;AAAA;AAAA,cACP;AAAA,eACF;AAAA,YACC,WAAW,QAAQ,SAAS,WAAW,OAAO,SAC7C,gBAAAH,MAAC,OAAE,WAAU,6BACV,qBAAW,OAAO,OACrB;AAAA,aAEJ;AAAA,UAGA,gBAAAA;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU;AAAA,cAET,oBACC,gBAAAS,OAAC,SAAI,WAAU,oCACb;AAAA,gCAAAD,MAAC,SAAI,WAAU,kEAAiE;AAAA,gBAC/EG,GAAE,2BAA2B;AAAA,gBAAE;AAAA,iBAClC,IAEAA,GAAE,2BAA2B;AAAA;AAAA,UAEjC;AAAA,WACF;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAH,MAAC,SAAI,WAAU,oBACb,0BAAAC;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,SAAS,MAAM,aAAa,QAAQ;AAAA,QACpC,WAAU;AAAA,QAEV;AAAA,0BAAAQ,MAACV,YAAA,EAAU,WAAU,gBAAe;AAAA,UACnCa,GAAE,4BAA4B;AAAA;AAAA;AAAA,IACjC,GACF;AAAA,IAGA,gBAAAH,MAAC,SAAI,WAAU,oBACb,0BAAAC,OAAC,OAAE,WAAU,yBAAwB;AAAA;AAAA,OAChC,oBAAI,KAAK,GAAE,YAAY;AAAA,MAAE;AAAA,MAA0B;AAAA,MACtD,gBAAAD,MAAC,UAAK,WAAU,gBAAe,oBAAC;AAAA,MAAO;AAAA,OACzC,GACF;AAAA,KACF,GACF;AAEJ;AAEA,IAAO,6BAAQ;;;ACzNP,gBAAAM,OAGI,QAAAC,cAHJ;AAfD,IAAM,qBAAwD,CAAC;AAAA,EACpE;AAAA,EACA;AACF,MAAM;AACJ,QAAM,UAAU;AAAA,IACd,EAAE,KAAK,SAAS,OAAO,SAAS,MAAM,YAAK;AAAA,IAC3C,EAAE,KAAK,QAAQ,OAAO,aAAa,MAAM,YAAK;AAAA,IAC9C,EAAE,KAAK,SAAS,OAAO,cAAc,MAAM,YAAK;AAAA,IAChD,EAAE,KAAK,WAAW,OAAO,gBAAgB,MAAM,YAAK;AAAA,IACpD,EAAE,KAAK,QAAQ,OAAO,aAAa,MAAM,YAAK;AAAA,EAChD;AAEA,SACE,gBAAAD,MAAC,SAAI,WAAU,QACb,0BAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,oBAAAD,MAAC,QAAG,WAAU,uCAAsC,+BAAiB;AAAA,IACrE,gBAAAA,MAAC,SAAI,WAAU,kBACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAC;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,kBAAkB,OAAO,MAAM,YAAY;AAAA,QACpD,MAAK;AAAA,QACL,SAAS,MAAM,eAAe,OAAO,GAAG;AAAA,QACxC,WAAU;AAAA,QAEV;AAAA,0BAAAD,MAAC,UAAM,iBAAO,MAAK;AAAA,UACnB,gBAAAA,MAAC,UAAM,iBAAO,OAAM;AAAA;AAAA;AAAA,MAPf,OAAO;AAAA,IAQd,CACD,GACH;AAAA,KACF,GACF;AAEJ;;;AC9BM,SACE,OAAAE,OADF,QAAAC,cAAA;AAHC,SAAS,gBAAgB,EAAE,QAAQ,eAAe,GAAyB;AAChF,SACE,gBAAAA,OAAC,SAAI,WAAU,uFACb;AAAA,oBAAAA,OAAC,SACC;AAAA,sBAAAD,MAAC,QAAG,WAAU,mEAAkE,uBAEhF;AAAA,MACA,gBAAAA,MAAC,OAAE,WAAU,oCAAmC,0DAEhD;AAAA,OACF;AAAA,IAEA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,eAAe;AAAA,QACf;AAAA;AAAA,IACF;AAAA,KACF;AAEJ;;;AC+BU,SACE,OAAAE,OADF,QAAAC,cAAA;AAlDH,SAAS,eAAe,EAAE,MAAM,GAAwB;AAC7D,QAAM,YAAY;AAAA,IAChB;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AAAA,MACb,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO,IAAI,MAAM,aAAa,eAAe,CAAC;AAAA,MAC9C,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AAAA,MACb,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AAAA,MACb,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AAAA,MACb,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,OAAO,MAAM;AAAA,MACb,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,aAAa;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAD,MAAC,SAAI,WAAU,wDACZ,oBAAU,IAAI,CAAC,MAAM,UACpB,gBAAAC,OAAC,QAAiB,WAAU,qCAC1B;AAAA,oBAAAA,OAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAD,MAAC,aAAU,WAAU,wDAClB,eAAK,OACR;AAAA,MACA,gBAAAA,MAAC,UAAK,WAAW,uBACf,KAAK,eAAe,aAChB,uCACA,gCACN,IACG,eAAK,QACR;AAAA,OACF;AAAA,IACA,gBAAAC,OAAC,eACC;AAAA,sBAAAD,MAAC,SAAI,WAAU,oDACZ,eAAK,OACR;AAAA,MACA,gBAAAA,MAAC,OAAE,WAAU,iDACV,eAAK,aACR;AAAA,OACF;AAAA,OApBS,KAqBX,CACD,GACH;AAEJ;;;AChFA,SAAS,yBAAAE,8BAA6B;AACtC,SAAS,mBAAmB,6BAA6B;AACzD;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AA+BC,gBAAAC,OAmCF,QAAAC,cAnCE;AAbD,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA,UAAU;AAAA,EACV,cAAc;AAAA,EACd,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,cAAc;AAAA,EACd,aAAa;AACf,MAAM;AACJ,QAAM,KAAKF,uBAAsB;AACjC,MAAI,SAAS;AACX,WACE,gBAAAC,MAAC,SAAI,WAAU,yCACb,0BAAAA,MAAC,SAAI,WAAU,iBAAiB,uBAAY,GAC9C;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAA,MAAC,SAAI,WAAU,yCACb,0BAAAA,MAAC,SAAI,WAAU,iBAAiB,sBAAW,GAC7C;AAAA,EAEJ;AAGA,QAAM,YAAY,KAAK,IAAI,UAAQ;AAEjC,UAAM,kBAAkB,eAAe,SACnC,sBAAsB,KAAK,MAAM,IACjC,kBAAkB,KAAK,MAAM;AAEjC,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,CAAC,WAAW,GAAG,KAAK;AAAA,MACpB,CAAC,cAAc,GAAG,KAAK;AAAA,IACzB;AAAA,EACF,CAAC;AAGD,QAAM,gBAAgB,CAAC,OAAe,SAAiB;AAAA,IACrD,IAAI,MAAM,eAAe,CAAC;AAAA,IAC1B;AAAA,EACF;AAEA,SACE,gBAAAA,MAAC,uBAAoB,OAAM,QAAO,QAAQ,KACxC,0BAAAC,OAAC,YAAS,MAAM,WAAW,QAAQ,EAAE,KAAK,IAAI,OAAO,IAAI,MAAM,IAAI,QAAQ,EAAE,GAC3E;AAAA,oBAAAD,MAAC,iBAAc,iBAAgB,OAAM;AAAA,IACrC,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAM,EAAE,UAAU,GAAG;AAAA,QACrB,OAAO;AAAA,QACP,YAAW;AAAA,QACX,QAAQ;AAAA;AAAA,IACV;AAAA,IACA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,eAAe,CAAC,UAAU,KAAK,QAAQ,KAAM,QAAQ,CAAC,CAAC;AAAA,QACvD,MAAM,EAAE,UAAU,GAAG;AAAA;AAAA,IACvB;AAAA,IACA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,WAAW;AAAA,QACX,YAAY,EAAE,OAAO,UAAU;AAAA;AAAA,IACjC;AAAA,IACA,gBAAAA,MAAC,UAAO;AAAA,IACR,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAS;AAAA,QACT,MAAK;AAAA,QACL,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,QACnB,MAAM;AAAA;AAAA,IACR;AAAA,IACA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAS;AAAA,QACT,MAAK;AAAA,QACL,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,QACnB,MAAM;AAAA;AAAA,IACR;AAAA,KACF,GACF;AAEJ;;;AC9GA,SAAS,yBAAAE,8BAA6B;AACtC,SAAS,qBAAAC,oBAAmB,yBAAAC,8BAA6B;AACzD;AAAA,EACE;AAAA,EACA;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,WAAAC;AAAA,EACA,UAAAC;AAAA,EACA,uBAAAC;AAAA,OACK;AA2BC,gBAAAC,OAiCF,QAAAC,cAjCE;AAXD,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA,UAAU;AAAA,EACV,cAAc;AAAA,EACd,eAAe;AAAA,EACf,aAAa;AACf,MAAM;AACJ,QAAM,KAAKV,uBAAsB;AACjC,MAAI,SAAS;AACX,WACE,gBAAAS,MAAC,SAAI,WAAU,yCACb,0BAAAA,MAAC,SAAI,WAAU,iBAAgB,mCAAqB,GACtD;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAA,MAAC,SAAI,WAAU,yCACb,0BAAAA,MAAC,SAAI,WAAU,iBAAgB,+BAAiB,GAClD;AAAA,EAEJ;AAGA,QAAM,YAAY,KAAK,IAAI,UAAQ;AAEjC,UAAM,kBAAkB,eAAe,SACnCP,uBAAsB,KAAK,MAAM,IACjCD,mBAAkB,KAAK,MAAM;AAEjC,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,CAAC,WAAW,GAAG,KAAK;AAAA,IACtB;AAAA,EACF,CAAC;AAGD,QAAM,gBAAgB,CAAC,OAAe,SAAiB;AACrD,WAAO,CAAC,GAAG,MAAM,eAAe,CAAC,IAAI,YAAY,IAAI,WAAW;AAAA,EAClE;AAEA,SACE,gBAAAQ,MAACD,sBAAA,EAAoB,OAAM,QAAO,QAAQ,KACxC,0BAAAE,OAAC,aAAU,MAAM,WAAW,QAAQ,EAAE,KAAK,IAAI,OAAO,IAAI,MAAM,IAAI,QAAQ,EAAE,GAC5E;AAAA,oBAAAD,MAACJ,gBAAA,EAAc,iBAAgB,OAAM;AAAA,IACrC,gBAAAI;AAAA,MAACN;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAM,EAAE,UAAU,GAAG;AAAA,QACrB,OAAO;AAAA,QACP,YAAW;AAAA,QACX,QAAQ;AAAA;AAAA,IACV;AAAA,IACA,gBAAAM;AAAA,MAACL;AAAA,MAAA;AAAA,QACC,eAAe,CAAC,UAAU,GAAG,KAAK;AAAA,QAClC,MAAM,EAAE,UAAU,GAAG;AAAA,QACrB,QAAQ,CAAC,GAAG,SAAS;AAAA,QACrB,eAAe;AAAA,QACf,WAAW;AAAA;AAAA,IACb;AAAA,IACA,gBAAAK;AAAA,MAACH;AAAA,MAAA;AAAA,QACC,WAAW;AAAA,QACX,YAAY,EAAE,OAAO,UAAU;AAAA;AAAA,IACjC;AAAA,IACA,gBAAAG,MAACF,SAAA,EAAO;AAAA,IACR,gBAAAE;AAAA,MAAC;AAAA;AAAA,QACC,MAAK;AAAA,QACL,SAAS;AAAA,QACT,QAAO;AAAA,QACP,aAAa;AAAA,QACb,KAAK,EAAE,MAAM,WAAW,aAAa,GAAG,GAAG,EAAE;AAAA,QAC7C,WAAW,EAAE,GAAG,EAAE;AAAA;AAAA,IACpB;AAAA,KACF,GACF;AAEJ;;;ACxGA;AAAA,EACE,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,uBAAAE;AAAA,EACA,WAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AAkBC,gBAAAC,OA2BA,QAAAC,cA3BA;AAJD,IAAM,WAAoC,CAAC,EAAE,MAAM,OAAO,UAAU,MAAM,MAAM;AACrF,MAAI,SAAS;AACX,WACE,gBAAAD,MAAC,SAAI,WAAU,yCACb,0BAAAA,MAAC,SAAI,WAAU,iBAAgB,mCAAqB,GACtD;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAA,MAAC,SAAI,WAAU,yCACb,0BAAAA,MAAC,SAAI,WAAU,iBAAgB,+BAAiB,GAClD;AAAA,EAEJ;AAGA,QAAM,gBAAgB,CAAC,OAAe,SAAiB;AAAA,IACrD,GAAG,KAAK,MAAO,QAAQ,KAAK,OAAO,CAAC,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC,IAAK,KAAK,QAAQ,CAAC,CAAC;AAAA,IACzF;AAAA,EACF;AAEA,SACE,gBAAAC,OAAC,SAAI,WAAU,iBACZ;AAAA,aACC,gBAAAD,MAAC,SAAI,WAAU,QACb,0BAAAA,MAAC,QAAG,WAAU,uCAAuC,iBAAM,GAC7D;AAAA,IAEF,gBAAAA,MAACH,sBAAA,EAAoB,OAAM,QAAO,QAAQ,KACxC,0BAAAI,OAAC,oBACC;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,IAAG;AAAA,UACH,IAAG;AAAA,UACH,WAAW;AAAA,UACX,OAAO,CAAC,EAAE,MAAM,QAAQ,MAAM,GAAG,IAAI,KAAK,UAAU,KAAK,QAAQ,CAAC,CAAC;AAAA,UACnE,aAAa;AAAA,UACb,MAAK;AAAA,UACL,SAAQ;AAAA,UAEP,eAAK,IAAI,CAAC,OAAO,UAChB,gBAAAA,MAAC,QAA2B,MAAM,MAAM,SAA7B,QAAQ,KAAK,EAAuB,CAChD;AAAA;AAAA,MACH;AAAA,MACA,gBAAAA,MAACF,UAAA,EAAQ,WAAW,eAAe;AAAA,MACnC,gBAAAE,MAACD,SAAA,EAAO;AAAA,OACV,GACF;AAAA,KACF;AAEJ;;;ACfQ,SACE,OAAAG,OADF,QAAAC,cAAA;AAvCR,IAAM,iBAAiB,CAAC,UAAkB;AACxC,QAAM,SAAS;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAO,OAAO,QAAQ,OAAO,MAAM;AACrC;AAEA,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEO,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,WAAW;AACb,MAAM;AACJ,MAAI,SAAS;AACX,WACE,gBAAAD,OAAC,QAAK,WAAU,8DACd;AAAA,sBAAAA,OAAC,cAAW,WAAU,QACpB;AAAA,wBAAAD,MAAC,aAAU,WAAU,mCAAmC,iBAAM;AAAA,QAC7D,YAAY,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,SAC9D;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,MACxC,gBAAAC,OAAC,SAAY,WAAU,6CACrB;AAAA,wBAAAD,MAAC,SAAI,WAAU,oCAAmC;AAAA,QAClD,gBAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,UAC/C,gBAAAA,MAAC,SAAI,WAAU,iCAAgC;AAAA,WACjD;AAAA,WALQ,CAMV,CACD,GACH,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAC,OAAC,QAAK,WAAU,8DACd;AAAA,sBAAAA,OAAC,cAAW,WAAU,QACpB;AAAA,wBAAAD,MAAC,aAAU,WAAU,mCAAmC,iBAAM;AAAA,QAC7D,YAAY,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,SAC9D;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAC,OAAC,SAAI,WAAU,mCACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,QACjC,gBAAAA,MAAC,OAAE,WAAU,WAAU,+BAAiB;AAAA,SAC1C,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,OAAC,QAAK,WAAU,8DACd;AAAA,oBAAAA,OAAC,cAAW,WAAU,QACpB;AAAA,sBAAAD,MAAC,aAAU,WAAU,mCAAmC,iBAAM;AAAA,MAC7D,YAAY,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,OAC9D;AAAA,IACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,eAAK,MAAM,GAAG,QAAQ,EAAE,IAAI,CAAC,MAAM,UAClC,gBAAAC,OAAC,SAAkB,WAAU,6JAC3B;AAAA,sBAAAD,MAAC,SAAI,WAAU,iFAAgF;AAAA,MAC/F,gBAAAA,MAAC,SAAI,WAAU,OACb,0BAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,SAAI,WAAW,0CAA0C,eAAe,KAAK,CAAC,4EAC5E,kBAAQ,GACX;AAAA,UACA,gBAAAC,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,+EACV,eAAK,OACR;AAAA,YACC,KAAK,YACJ,gBAAAA,MAAC,OAAE,WAAU,6BAA6B,eAAK,UAAS;AAAA,aAE5D;AAAA,WACF;AAAA,QACA,gBAAAC,OAAC,SAAI,WAAU,cACZ;AAAA,eAAK,SACJ,gBAAAD,MAAC,OAAE,WAAU,mCAAmC,eAAK,OAAM;AAAA,UAE5D,KAAK,UACJ,gBAAAA,MAAC,UAAK,WAAW,oEAAoEE,gBAAe,KAAK,MAAM,CAAC,IAC7G,eAAK,QACR;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,SA5BQ,KAAK,EA6Bf,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;AChHQ,SACE,OAAAC,OADF,QAAAC,cAAA;AAVD,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,WAAW;AACb,MAAM;AACJ,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,QACC;AAAA,sBAAAA,OAAC,cACC;AAAA,wBAAAD,MAAC,aAAW,iBAAM;AAAA,QACjB,YAAY,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,SAC9D;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,MACxC,gBAAAC,OAAC,SAAY,WAAU,6CACrB;AAAA,wBAAAD,MAAC,SAAI,WAAU,+BAA8B;AAAA,QAC7C,gBAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,UAC/C,gBAAAA,MAAC,SAAI,WAAU,iCAAgC;AAAA,WACjD;AAAA,WALQ,CAMV,CACD,GACH,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAC,OAAC,QACC;AAAA,sBAAAA,OAAC,cACC;AAAA,wBAAAD,MAAC,aAAW,iBAAM;AAAA,QACjB,YAAY,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,SAC9D;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,kCAAiC,+BAEhD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,OAAC,QAAK,WAAU,sBACd;AAAA,oBAAAA,OAAC,cAAW,WAAU,QACpB;AAAA,sBAAAD,MAAC,aAAU,WAAU,yBAAyB,iBAAM;AAAA,MACnD,YAAY,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,OAC9D;AAAA,IACA,gBAAAA,MAAC,eAAY,WAAU,QACrB,0BAAAA,MAAC,SAAI,WAAU,aACZ,eAAK,MAAM,GAAG,QAAQ,EAAE,IAAI,CAAC,MAAM,UAClC,gBAAAC,OAAC,SAAkB,WAAU,sHAC3B;AAAA,sBAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,iGACZ,kBAAQ,GACX;AAAA,QACA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,MAAC,OAAE,WAAU,qCAAqC,eAAK,OAAM;AAAA,UAC5D,KAAK,YACJ,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,eAAK,UAAS;AAAA,WAExD;AAAA,SACF;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,cACZ;AAAA,aAAK,SACJ,gBAAAD,MAAC,OAAE,WAAU,qCAAqC,eAAK,OAAM;AAAA,QAE9D,KAAK,UACJ,gBAAAA,MAAC,UAAK,WAAW,iCACf,KAAK,WAAW,WAAW,6BAC3B,KAAK,WAAW,YAAY,2BAC5B,0BACF,IACG,eAAK,QACR;AAAA,SAEJ;AAAA,SAzBQ,KAAK,EA0Bf,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;ACnFU,gBAAAE,OAOM,QAAAC,cAPN;AALH,IAAM,eAA4C,CAAC,EAAE,MAAM,UAAU,MAAM,MAAM;AACtF,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,2BAAa,GAC1B;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAC,OAAC,SAAY,WAAU,6CACrB;AAAA,wBAAAD,MAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,UAC/C,gBAAAA,MAAC,SAAI,WAAU,iCAAgC;AAAA,WACjD;AAAA,WALQ,CAMV,CACD,GACH,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAC,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,2BAAa,GAC1B;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,kCAAiC,wCAEhD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,OAAC,QACC;AAAA,oBAAAA,OAAC,cACC;AAAA,sBAAAD,MAAC,aAAU,2BAAa;AAAA,MACxB,gBAAAA,MAAC,OAAE,WAAU,yBAAwB,4DAErC;AAAA,OACF;AAAA,IACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,eAAK,MAAM,GAAG,EAAE,EAAE,IAAI,CAAC,UAAU,UAChC,gBAAAC,OAAC,SAAsB,WAAU,iFAE/B;AAAA,sBAAAD,MAAC,SAAI,WAAU,+IACZ,kBAAQ,GACX;AAAA,MAGA,gBAAAA,MAAC,SAAI,WAAU,+IACZ,mBAAS,KAAK,MAAM,GAAG,EAAE,IAAI,CAAAE,OAAKA,GAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,YAAY,GAChE;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,QAAG,WAAU,8CACX,mBAAS,MACZ;AAAA,UACA,gBAAAC,OAAC,SAAM,SAAQ,WAAU,WAAU,WAChC;AAAA,qBAAS;AAAA,YAAW;AAAA,aACvB;AAAA,WACF;AAAA,QACA,gBAAAA,OAAC,SAAI,WAAU,0DACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,YAAY,mBAAS,OAAM;AAAA,UAC3C,gBAAAA,MAAC,UAAK,WAAU,YAAY,mBAAS,OAAM;AAAA,UAC3C,gBAAAC,OAAC,UAAK,WAAU,6BAA4B;AAAA;AAAA,YACxC,SAAS,WAAW,eAAe;AAAA,aACvC;AAAA,WACF;AAAA,QACC,SAAS,YACR,gBAAAA,OAAC,SAAI,WAAU,uCAAsC;AAAA;AAAA,UAC/C,SAAS;AAAA,WACf;AAAA,SAEJ;AAAA,SAjCQ,SAAS,EAkCnB,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;ACrFU,gBAAAE,OAOM,QAAAC,cAPN;AALH,IAAM,cAA0C,CAAC,EAAE,MAAM,UAAU,MAAM,MAAM;AACpF,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,0BAAY,GACzB;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAC,OAAC,SAAY,WAAU,6CACrB;AAAA,wBAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,QAC/C,gBAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,UAC/C,gBAAAA,MAAC,SAAI,WAAU,iCAAgC;AAAA,WACjD;AAAA,WALQ,CAMV,CACD,GACH,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAC,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,0BAAY,GACzB;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,kCAAiC,uCAEhD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,OAAC,QACC;AAAA,oBAAAA,OAAC,cACC;AAAA,sBAAAD,MAAC,aAAU,0BAAY;AAAA,MACvB,gBAAAA,MAAC,OAAE,WAAU,yBAAwB,uDAErC;AAAA,OACF;AAAA,IACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,eAAK,MAAM,GAAG,EAAE,EAAE,IAAI,CAAC,SAAS,UAC/B,gBAAAC,OAAC,SAAqB,WAAU,iFAE9B;AAAA,sBAAAD,MAAC,SAAI,WAAU,mJACZ,kBAAQ,GACX;AAAA,MAGA,gBAAAA,MAAC,SAAI,WAAU,mGACZ,kBAAQ,QACP,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,KAAK,QAAQ;AAAA,UACb,KAAK,QAAQ;AAAA,UACb,WAAU;AAAA;AAAA,MACZ,IAEA,gBAAAA,MAAC,SAAI,WAAU,yBAAwB,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAC/E,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,mEAAkE,GACzI,GAEJ;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,QAAG,WAAU,8CACX,kBAAQ,MACX;AAAA,UACA,gBAAAA,MAAC,SAAM,SAAQ,WAAU,WAAU,WAChC,kBAAQ,UACX;AAAA,WACF;AAAA,QACA,gBAAAC,OAAC,SAAI,WAAU,0DACb;AAAA,0BAAAA,OAAC,UAAK;AAAA;AAAA,YAAE,QAAQ;AAAA,YAAU;AAAA,aAAI;AAAA,UAC9B,gBAAAA,OAAC,UAAM;AAAA,oBAAQ;AAAA,YAAY;AAAA,aAAQ;AAAA,UACnC,gBAAAA,OAAC,UAAK,WAAU,8BAA6B;AAAA;AAAA,YACzC,QAAQ,aAAa,eAAe;AAAA,aACxC;AAAA,WACF;AAAA,SACF;AAAA,SAtCQ,QAAQ,EAuClB,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;AC/GA,SAAS,2BAA2B;AA6C1B,gBAAAC,OAOM,QAAAC,cAPN;AAtBV,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,SAAO,oBAAoB,MAA0C,KAAK;AAC5E;AAEA,IAAM,oBAAoB,CAAC,cAAsB;AAC/C,UAAQ,UAAU,YAAY,GAAG;AAAA,IAC/B,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEO,IAAM,eAA4C,CAAC,EAAE,MAAM,UAAU,MAAM,MAAM;AACtF,MAAI,SAAS;AACX,WACE,gBAAAD,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,2BAAa,GAC1B;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAC,OAAC,SAAY,WAAU,6CACrB;AAAA,wBAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,QAC/C,gBAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,iCAAgC;AAAA,UAC/C,gBAAAA,MAAC,SAAI,WAAU,iCAAgC;AAAA,WACjD;AAAA,WALQ,CAMV,CACD,GACH,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,MAAI,CAAC,QAAQ,KAAK,WAAW,GAAG;AAC9B,WACE,gBAAAC,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,2BAAa,GAC1B;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,kCAAiC,8BAEhD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,QAAMG,eAAa,CAAC,eAAuB;AACzC,WAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,MACtD,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAEA,SACE,gBAAAF,OAAC,QACC;AAAA,oBAAAA,OAAC,cACC;AAAA,sBAAAD,MAAC,aAAU,2BAAa;AAAA,MACxB,gBAAAA,MAAC,OAAE,WAAU,yBAAwB,mCAErC;AAAA,OACF;AAAA,IACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,aACZ,eAAK,MAAM,GAAG,EAAE,EAAE,IAAI,CAAC,UACtB,gBAAAC,OAAC,SAAmB,WAAU,gFAE5B;AAAA,sBAAAD,MAAC,SAAI,WAAU,mGACZ,gBAAM,eACL,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,KAAK,MAAM;AAAA,UACX,KAAK,MAAM;AAAA,UACX,WAAU;AAAA;AAAA,MACZ,IAEA,gBAAAA,MAAC,SAAI,WAAU,yBAAwB,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAC/E,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,8CAA6C,GACpH,GAEJ;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,oCACb;AAAA,0BAAAD,MAAC,QAAG,WAAU,qCACX,gBAAM,aACT;AAAA,UACA,gBAAAA,MAAC,SAAM,SAAQ,WAAU,WAAW,WAAW,kBAAkB,MAAM,SAAS,CAAC,IAC9E,gBAAM,UAAU,YAAY,GAC/B;AAAA,UACA,gBAAAA,MAAC,SAAM,SAAQ,WAAU,WAAW,WAAWE,gBAAe,MAAM,MAAM,CAAC,IACxE,gBAAM,OAAO,YAAY,GAC5B;AAAA,WACF;AAAA,QAEA,gBAAAD,OAAC,SAAI,WAAU,8BACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,eAAe,gBAAM,cAAa;AAAA,UAClD,gBAAAA,MAAC,UAAK,WAAU,QAAO,oBAAC;AAAA,UACxB,gBAAAA,MAAC,UAAM,gBAAM,cAAa;AAAA,WAC5B;AAAA,QAEA,gBAAAC,OAAC,SAAI,WAAU,2DACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,4BAAAA,OAAC,UAAK;AAAA;AAAA,cAAE,MAAM,YAAY,eAAe;AAAA,eAAE;AAAA,YAC3C,gBAAAA,OAAC,UAAK;AAAA;AAAA,cAAI,MAAM;AAAA,eAAU;AAAA,YAC1B,gBAAAD,MAAC,UAAM,UAAAG,aAAW,MAAM,SAAS,GAAE;AAAA,aACrC;AAAA,UAEC,MAAM,gBACL,gBAAAF,OAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,YAC5BE,aAAW,MAAM,YAAY;AAAA,aACxC;AAAA,WAEJ;AAAA,SACF;AAAA,SAjDQ,MAAM,EAkDhB,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;AC5HM,SAEI,OAAAC,OAFJ,QAAAC,cAAA;AAjBC,SAAS,gBAAgB,EAAE,WAAW,WAAW,GAAyB;AAE/E,QAAM,uBAAsC,UAAU,IAAI,CAAC,OAAO,WAAW;AAAA,IAC3E,QAAQ,MAAM;AAAA,IACd,QAAQ,MAAM;AAAA,IACd,WAAW,MAAM,UAAU;AAAA;AAAA,EAC7B,EAAE;AAGF,QAAM,wBAAuC,WAAW,IAAI,CAAC,QAAQ,WAAW;AAAA,IAC9E,QAAQ,OAAO;AAAA,IACf,QAAQ,OAAO;AAAA,IACf,WAAW,OAAO,SAAS;AAAA;AAAA,EAC7B,EAAE;AAEF,SACE,gBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,0BAAY,GACzB;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,cAAW,MAAM,sBAAsB,GAC1C;AAAA,OACF;AAAA,IAEA,gBAAAC,OAAC,QACC;AAAA,sBAAAD,MAAC,cACC,0BAAAA,MAAC,aAAU,gCAAkB,GAC/B;AAAA,MACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,eAAY,MAAM,uBAAuB,GAC5C;AAAA,OACF;AAAA,KACF;AAEJ;;;AC5BM,SACE,OAAAE,OADF,QAAAC,cAAA;AAhBC,SAAS,eAAe,EAAE,MAAM,GAAwB;AAC7D,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAD,OAAC,QACC;AAAA,oBAAAA,OAAC,cACC;AAAA,sBAAAD,MAAC,aAAU,2BAAa;AAAA,MACxB,gBAAAA,MAAC,OAAE,WAAU,4CAA2C,gDAExD;AAAA,OACF;AAAA,IACA,gBAAAA,MAAC,eACC,0BAAAC,OAAC,SAAI,WAAU,aACZ;AAAA,YAAM,IAAI,CAAC,MAAM,UAChB,gBAAAA,OAAC,SAAgB,WAAU,yFACzB;AAAA,wBAAAD,MAAC,SAAI,WAAU,iBACb,0BAAAA,MAAC,SAAI,WAAW,wBACd,KAAK,WAAW,cAAc,iBAC9B,KAAK,WAAW,gBAAgB,gBAAgB,eAClD,IAAI,GACN;AAAA,QAEA,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,OAAE,WAAU,qDACV,eAAK,UACR;AAAA,YACA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,WAAWE,iBAAe,KAAK,MAAM;AAAA,gBAEpC,eAAK,OAAO,QAAQ,KAAK,GAAG;AAAA;AAAA,YAC/B;AAAA,aACF;AAAA,UAEA,gBAAAF,MAAC,OAAE,WAAU,iDACV,eAAK,aACR;AAAA,UAEC,KAAK,YACJ,gBAAAC,OAAC,OAAE,WAAU,iDAAgD;AAAA;AAAA,YAChD,KAAK;AAAA,aAClB;AAAA,WAEJ;AAAA,WA9BQ,KA+BV,CACD;AAAA,MAEA,MAAM,WAAW,KAChB,gBAAAA,OAAC,SAAI,WAAU,qDACb;AAAA,wBAAAD,MAAC,OAAE,sCAAwB;AAAA,QAC3B,gBAAAA,MAAC,OAAE,WAAU,WAAU,qDAAuC;AAAA,SAChE;AAAA,OAEJ,GACF;AAAA,KACF;AAEJ;;;ACtBM,SACE,OAAAG,OADF,QAAAC,cAAA;AAhDC,SAAS,iBAAiB,EAAE,cAAc,GAA0B;AACzE,QAAM,UAAU;AAAA,IACd;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAA,OAAC,QACC;AAAA,oBAAAA,OAAC,cACC;AAAA,sBAAAD,MAAC,aAAU,2BAAa;AAAA,MACxB,gBAAAA,MAAC,OAAE,WAAU,4CAA2C,wCAExD;AAAA,OACF;AAAA,IACA,gBAAAA,MAAC,eACC,0BAAAA,MAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,OAAO;AAAA,QAChB,WAAU;AAAA,QACV,SAAS,MAAM,cAAc,OAAO,EAAE;AAAA,QAEtC,0BAAAC,OAAC,SAAI,WAAU,sCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,WAAW,iBAAO,MAAK;AAAA,UACvC,gBAAAC,OAAC,SAAI,WAAU,UACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,eAAe,iBAAO,OAAM;AAAA,YAC3C,gBAAAA,MAAC,SAAI,WAAU,sBAAsB,iBAAO,aAAY;AAAA,aAC1D;AAAA,WACF;AAAA;AAAA,MAXK,OAAO;AAAA,IAYd,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;ACpDc,SACE,OAAAE,OADF,QAAAC,cAAA;AAxBP,SAAS,oBAAoB,EAAE,UAAU,GAA6B;AAC3E,QAAM,OAAO;AAAA,IACX,EAAE,IAAI,YAAY,OAAO,YAAY,aAAa,2BAA2B;AAAA,IAC7E,EAAE,IAAI,UAAU,OAAO,UAAU,aAAa,gCAAgC;AAAA,IAC9E,EAAE,IAAI,aAAa,OAAO,aAAa,aAAa,6BAA6B;AAAA,IACjF,EAAE,IAAI,YAAY,OAAO,YAAY,aAAa,kCAAkC;AAAA,IACpF,EAAE,IAAI,aAAa,OAAO,aAAa,aAAa,+BAA+B;AAAA,IACnF,EAAE,IAAI,WAAW,OAAO,WAAW,aAAa,4BAA4B;AAAA,EAC9E;AAEA,SACE,gBAAAD,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAA,MAAC,SAAI,WAAU,gEACZ,eAAK,IAAI,CAAC,QACT,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC,SAAS,cAAc,IAAI,KAAK,YAAY;AAAA,MAC5C,WAAW,oDACT,cAAc,IAAI,KACd,6CACA,4DACN;AAAA,MAEA,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,eAAe,cAAI,OAAM;AAAA,QACxC,gBAAAA,MAAC,SAAI,WAAU,sBAAsB,cAAI,aAAY;AAAA,SACvD;AAAA;AAAA,IAXK,IAAI;AAAA,EAYX,CACD,GACH,GACF,GACF;AAEJ;;;AC/BQ,SACE,OAAAE,OADF,QAAAC,cAAA;AALD,SAAS,mBAAmB;AACjC,SACE,gBAAAA,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,SAC9D;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,+CAA8C;AAAA,QAC7D,gBAAAA,MAAC,SAAI,WAAU,+CAA8C;AAAA,SAC/D;AAAA,OACF;AAAA,IAGA,gBAAAA,MAAC,iBAAc;AAAA,IAGf,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,oDAAmD;AAAA,SACpE;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,oDAAmD;AAAA,SACpE;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,MAC5D,gBAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAC,OAAC,SAAY,WAAU,iDACrB;AAAA,wBAAAD,MAAC,SAAI,WAAU,kDAAiD;AAAA,QAChE,gBAAAC,OAAC,SAAI,WAAU,oBACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,UAC5D,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,WAC9D;AAAA,QACA,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,WANpD,CAOV,CACD,GACH;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,MAC5D,gBAAAA,MAAC,gBAAa,OAAO,GAAG;AAAA,OAC1B;AAAA,KACF;AAEJ;AAEO,SAAS,wBAAwB;AACtC,SACE,gBAAAC,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,MAC5D,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,OAC9D;AAAA,IAGA,gBAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAC,OAAC,SAAY,WAAU,yBACrB;AAAA,sBAAAA,OAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,SAC9D;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,gDAA+C;AAAA,QAC9D,gBAAAA,MAAC,SAAI,WAAU,+CAA8C;AAAA,SAC/D;AAAA,SARQ,CASV,CACD,GACH;AAAA,KACF;AAEJ;;;ACtFA,SAAgB,YAAAE,kBAAgB;;;ACAhC,SAAgB,aAAAC,mBAAiB;AACjC,OAAOC,WAAU;AACjB,SAAS,aAAAC,kBAAiB;AAC1B,SAAS,MAAAC,WAAU;AACnB,SAAS,UAAAC,UAAQ,QAAAC,cAAY;AAC7B,SAAS,eAAAC,cAAa,gBAAAC,eAAkD,iBAA2B;AAEnG,SAAS,+BAA+B;AAwBlC,SAkFF,YAAAC,WAjFI,OAAAC,OADF,QAAAC,cAAA;AALN,IAAM,YAAwB;AAAA,EAC5B;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAA,OAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE;AAAA,sBAAAD,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,qEAAoE;AAAA,MACzI,gBAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,yCAAwC;AAAA,OAC/G;AAAA,EAEJ;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,0QAAyQ,GAChV;AAAA,EAEJ;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,mEAAkE,GACzI;AAAA,EAEJ;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,8CAA6C,GACpH;AAAA,IAEF,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAA,MAAC,aAAU,WAAU,WAAU;AAAA,EAEnC;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAA,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,2HAA0H,GACjM;AAAA,EAEJ;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MACE,gBAAAC,OAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE;AAAA,sBAAAD,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,ueAAse;AAAA,MAC3iB,gBAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,oCAAmC;AAAA,OAC1G;AAAA,EAEJ;AACF;AAEO,IAAM,UAAkC,CAAC;AAAA,EAC9C;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,cAAc;AAAA,EACd;AACF,MAAM;AACJ,QAAM,SAASP,WAAU;AACzB,QAAM,EAAE,UAAU,aAAa,IAAI,wBAAwB;AAG3D,EAAAF,YAAU,MAAM;AACd,cAAU,QAAQ,UAAQ;AACxB,aAAO,SAAS,KAAK,IAAI;AAAA,IAC3B,CAAC;AAAA,EACH,GAAG,CAAC,MAAM,CAAC;AAEX,SACE,gBAAAU,OAAAF,WAAA,EAEG;AAAA,cACC,gBAAAC;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS;AAAA;AAAA,IACX;AAAA,IAOF,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,WAAWN;AAAA,UACT;AAAA,UACA,SAAS,kBAAkB;AAAA,UAC3B,cAAc,SAAS;AAAA,QACzB;AAAA,QAEA,0BAAAO,OAAC,SAAI,WAAU,wBAEb;AAAA,0BAAAA,OAAC,SAAI,WAAU,wEACb;AAAA,4BAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAS,MAAM,SAAS,YAAY;AAAA,gBACpC,WAAU;AAAA,gBAEV;AAAA,kCAAAD,MAAC,SAAI,WAAU,kFACb,0BAAAA,MAAC,UAAK,WAAU,gCAA+B,eAAC,GAClD;AAAA,kBACC,CAAC,eACA,gBAAAA,MAAC,UAAK,WAAU,iDAAgD,wBAAU;AAAA;AAAA;AAAA,YAE9E;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,+BAEZ;AAAA,kCACC,gBAAAD;AAAA,gBAACL;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,WAAU;AAAA,kBACV,OAAO,cAAc,mBAAmB;AAAA,kBAEvC,wBACC,gBAAAK,MAACF,eAAA,EAAa,WAAU,WAAU,IAElC,gBAAAE,MAACH,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA,cAErC;AAAA,cAIF,gBAAAG;AAAA,gBAACL;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,WAAU;AAAA,kBAEV,0BAAAK,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,wBAAuB,GAC9F;AAAA;AAAA,cACF;AAAA,eACF;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,8CAEb;AAAA,4BAAAD,MAAC,SAAI,WAAU,UACZ,oBAAU,IAAI,CAAC,SACd,gBAAAA,MAACR,OAAA,EAAmC,MAAM,KAAK,MAAM,UAAU,MAC5D,eAAK,SADG,YAAY,KAAK,IAAI,EAEhC,CACD,GACH;AAAA,YAEC,UAAU,IAAI,CAAC,SAAS;AACvB,oBAAM,WAAW,gBAAgB,KAAK;AACtC,oBAAM,eAAe,iBAAiB,KAAK;AAC3C,oBAAM,kBAAkB,YAAY;AAEpC,qBACE,gBAAAS;AAAA,gBAAC;AAAA;AAAA,kBAEC,SAAS,CAACC,OAAM;AACd,oBAAAA,GAAE,eAAe;AACjB,6BAAS,KAAK,IAAI;AAAA,kBACpB;AAAA,kBACA,cAAc,MAAM;AAElB,2BAAO,SAAS,KAAK,IAAI;AAAA,kBAC3B;AAAA,kBACA,WAAWR;AAAA,oBACT;AAAA,oBACA,kBACI,4DACA;AAAA;AAAA,oBAEJ,iBAAiB,KAAK,QAAQ;AAAA,kBAChC;AAAA,kBACA,OAAO,cAAc,KAAK,QAAQ;AAAA,kBAElC;AAAA,oCAAAO,OAAC,SAAI,WAAU,+BACb;AAAA,sCAAAD,MAAC,UAAK,WAAWN;AAAA,wBACf;AAAA,wBACA,kBAAkB,mBAAmB;AAAA,sBACvC,GACG,eAAK,MACR;AAAA,sBACC,CAAC,eACA,gBAAAM,MAAC,UAAK,WAAWN;AAAA,wBACf;AAAA,wBACA,kBAAkB,gBAAgB;AAAA,sBACpC,GAAI,eAAK,OAAM;AAAA,uBAEnB;AAAA,oBAEC,CAAC,eAAe,KAAK,SACpB,gBAAAM,MAAC,UAAK,WAAU,uHACb,eAAK,OACR;AAAA;AAAA;AAAA,gBArCG,KAAK;AAAA,cAuCZ;AAAA,YAEJ,CAAC;AAAA,aACH;AAAA,UAGC,QACC,gBAAAA,MAAC,SAAI,WAAU,gCACb,0BAAAC,OAACL,QAAA,EAAK,WAAU,OACd;AAAA,4BAAAK,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD,MAAC,SAAI,WAAU,sFACb,0BAAAA,MAAC,UAAK,WAAU,gCACb,eAAK,YAAY,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,KAC7C,GACF;AAAA,cACC,CAAC,eACA,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,gCAAAD,MAAC,OAAE,WAAU,8CACV,eAAK,aAAa,KAAK,WACpB,GAAG,KAAK,SAAS,IAAI,KAAK,QAAQ,KAClC,KAAK,SAAS,QAEpB;AAAA,gBACA,gBAAAA,MAAC,OAAE,WAAU,kCACV,eAAK,QAAQ,QAChB;AAAA,iBACF;AAAA,eAEJ;AAAA,YAEC,CAAC,eACA,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,8BAAAD;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAS,MAAM,SAAS,UAAU;AAAA,kBAClC,WAAU;AAAA,kBAEV,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,oCAAAD,MAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,uEAAsE,GAC7I;AAAA,oBACA,gBAAAA,MAAC,UAAK,qBAAO;AAAA,qBACf;AAAA;AAAA,cACF;AAAA,cAEA,gBAAAC;AAAA,gBAACN;AAAA,gBAAA;AAAA,kBACC,SAAS;AAAA,kBACT,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,WAAU;AAAA,kBAEV;AAAA,oCAAAK,MAAC,SAAI,WAAU,gBAAe,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACtE,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,6FAA4F,GACnK;AAAA,oBAAM;AAAA;AAAA;AAAA,cAER;AAAA,eACF;AAAA,aAEJ,GACF;AAAA,WAEJ;AAAA;AAAA,IACF;AAAA,KACF;AAEJ;;;ADlRI,SAEI,OAAAG,OAFJ,QAAAC,cAAA;AAfW,SAAR,iBAAkC;AAAA,EACvC;AAAA,EACA;AAAA,EACA,WAAW,MAAM;AAAA,EAAC;AAAA,EAClB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,gBAAgB;AAClB,GAA0B;AACxB,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAE9D,QAAM,uBAAuB,MAAM;AACjC,wBAAoB,CAAC,gBAAgB;AAAA,EACvC;AAEA,SACE,gBAAAD,OAAC,SAAI,WAAU,4BACZ;AAAA,KAAC,eACA,gBAAAD;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb,kBAAkB,gBAAgB,uBAAuB;AAAA;AAAA,IAC3D;AAAA,IAEF,gBAAAA,MAAC,UAAK,WAAW,0BAA0B,CAAC,cAAc,4CAA4C,EAAE,IACtG,0BAAAA,MAAC,SAAI,WAAU,OACZ,UACH,GACF;AAAA,KACF;AAEJ;;;AExBQ,gBAAAG,OAOA,QAAAC,cAPA;AAJD,SAAS,UAAU,EAAE,MAAM,gBAAgB,cAAc,GAAmB;AACjF,SACE,gBAAAD,MAAC,oBACC,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAD;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ,KAAK;AAAA,QACb;AAAA;AAAA,IACF;AAAA,IAEA,gBAAAA,MAAC,kBAAe,OAAO,KAAK,OAAO;AAAA,IAEnC,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,WAAW,KAAK;AAAA,UAChB,YAAY,KAAK;AAAA;AAAA,MACnB;AAAA,MACA,gBAAAA,MAAC,kBAAe,OAAO,KAAK,aAAa;AAAA,OAC3C;AAAA,IAEA,gBAAAA,MAAC,oBAAiB,eAA8B;AAAA,IAChD,gBAAAA,MAAC,uBAAoB,WAAW,KAAK,WAAW;AAAA,KAClD,GACF;AAEJ;AAEA,IAAO,oBAAQ;;;AC1Cf,OAAOE,aAAW;;;ACkBR,SAOE,OAAAC,OAPF,QAAAC,cAAA;AAVH,SAAS,cAAc,EAAE,eAAe,UAAU,iBAAiB,GAAuB;AAC/F,QAAM,YAA+B;AAAA,IACnC,EAAE,OAAO,QAAQ,OAAO,aAAa,MAAM,SAAI;AAAA,IAC/C,EAAE,OAAO,SAAS,OAAO,cAAc,MAAM,SAAI;AAAA,EACnD;AAEA,SACE,gBAAAD,MAAC,SAAI,WAAU,uFACb,0BAAAA,MAAC,SAAI,WAAU,+BACZ,oBAAU,IAAI,CAAC,SACd,gBAAAC;AAAA,IAAC;AAAA;AAAA,MAEC,SAAS,aAAa,KAAK,QAAQ,YAAY;AAAA,MAC/C,MAAK;AAAA,MACL,SAAS,MAAM,iBAAiB,KAAK,KAAK;AAAA,MAC1C,WAAU;AAAA,MAEV;AAAA,wBAAAD,MAAC,UAAK,WAAU,WAAW,eAAK,MAAK;AAAA,QACrC,gBAAAA,MAAC,UAAK,WAAU,oBAAoB,eAAK,OAAM;AAAA;AAAA;AAAA,IAP1C,KAAK;AAAA,EAQZ,CACD,GACH,GACF;AAEJ;;;ACHI,gBAAAE,OAGI,QAAAC,cAHJ;AAjBG,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AACF,MAAM;AACJ,QAAM,aAAa,MAAM;AACvB,QAAI,QAAQ;AACV,aAAO;AAAA,IACT,WAAW,SAAS;AAClB,aAAO,SAAS,OAAO;AAAA,IACzB;AAAA,EACF;AAEA,SACE,gBAAAD,MAAC,SAAI,WAAU,QAEX,qBAAU,YACV,gBAAAC;AAAA,IAAC;AAAA;AAAA,MACC,SAAS;AAAA,MACT,SAAQ;AAAA,MACR,WAAU;AAAA,MACX;AAAA;AAAA,QACG;AAAA;AAAA;AAAA,EACJ,GAEJ;AAEJ;;;AC1CA,SAAgB,eAAAC,oBAAmB;AACnC,SAAS,SAAAC,QAAO,UAAAC,gBAAc;AAC9B,SAAS,UAAAC,SAAQ,iBAAAC,gBAAe,cAAAC,aAAY,iBAAAC,gBAAe,eAAAC,oBAAmB;AAG9E,SAAS,gBAAgB,mBAAmB,0BAAAC,yBAAwB,yBAAAC,8BAA6B;AAoE7F,qBAAAC,YAIM,OAAAC,OADF,QAAAC,cAHJ;AA7CG,SAAS,eAAe,EAAE,SAAS,iBAAiB,gBAAgB,eAAe,GAAwB;AAEhH,QAAMC,KAAIL,wBAAuB;AACjC,QAAM,KAAKC,uBAAsB;AAGjC,QAAM,EAAE,SAAS,SAAS,eAAe,IAAI,eAAe;AAC5D,QAAM,EAAE,YAAY,SAAS,kBAAkB,IAAI,kBAAkB;AAGrE,UAAQ,IAAI,8CAAuC;AAAA,IACjD;AAAA,IACA,SAAS,MAAM,QAAQ,UAAU;AAAA,IACjC,OAAO,YAAY,UAAU;AAAA,IAC7B,SAAS;AAAA,IACT,eAAe,aAAa,CAAC,GAAG,QAAQ;AAAA,EAC1C,CAAC;AAMD,QAAM,qBAAqBT,aAAY,CAACc,OAA2C;AACjF,UAAM,QAAQA,GAAE,OAAO;AACvB,mBAAe,KAAK;AAAA,EACtB,GAAG,CAAC,cAAc,CAAC;AAEnB,QAAM,qBAAqBd,aAAY,CAAC,UAAkB;AACxD,UAAM,WAAW,UAAU,QAAQ,SAAY,SAAS,KAAK;AAC7D,oBAAgB,EAAE,SAAS,CAAC;AAAA,EAC9B,GAAG,CAAC,eAAe,CAAC;AAEpB,QAAM,uBAAuBA,aAAY,CAAC,UAAkB;AAC1D,UAAM,aAAa,UAAU,QAAQ,SAAY,SAAS,KAAK;AAC/D,oBAAgB,EAAE,WAAW,CAAC;AAAA,EAChC,GAAG,CAAC,eAAe,CAAC;AAGpB,QAAM,mBAAmB,CAAC,EAAE,QAAQ,UAAU,QAAQ,YAAY,QAAQ;AAM1E,SACE,gBAAAY,OAAAF,YAAA,EAEE;AAAA,oBAAAC,MAAC,SAAI,WAAU,wBACb,0BAAAC,OAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACV;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAaY,GAAE,oBAAoB;AAAA,UACnC,OAAO,QAAQ,UAAU;AAAA,UACzB,UAAU;AAAA,UACV,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,OAAO,QAAQ,UAAU,SAAS,KAAK;AAAA,QACvC,eAAe;AAAA,QACf,UAAU;AAAA,QAEV;AAAA,0BAAAQ,MAACL,gBAAA,EAAc,WAAU,kBACvB,0BAAAK,MAACJ,cAAA,EAAY,aAAaM,GAAE,qBAAqB,GAAG,GACtD;AAAA,UACA,gBAAAD,OAACR,gBAAA,EACC;AAAA,4BAAAO,MAACN,aAAA,EAAW,OAAM,OAAO,UAAAQ,GAAE,oBAAoB,GAAE;AAAA,YAChD,QAAQ,IAAI,CAAC,WACZ,gBAAAF,MAACN,aAAA,EAA2B,OAAO,OAAO,GAAG,SAAS,GACnD,iBAAO,QADO,OAAO,EAExB,CACD;AAAA,aACH;AAAA;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAO;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,OAAO,QAAQ,YAAY,SAAS,KAAK;AAAA,QACzC,eAAe;AAAA,QACf,UAAU;AAAA,QAEV;AAAA,0BAAAQ,MAACL,gBAAA,EAAc,WAAU,kBACvB,0BAAAK,MAACJ,cAAA,EAAY,aAAaM,GAAE,uBAAuB,GAAG,GACxD;AAAA,UACA,gBAAAD,OAACR,gBAAA,EACC;AAAA,4BAAAO,MAACN,aAAA,EAAW,OAAM,OAAO,UAAAQ,GAAE,uBAAuB,GAAE;AAAA,YACnD,WAAW,IAAI,CAAC,aACf,gBAAAF,MAACN,aAAA,EAA6B,OAAO,SAAS,GAAG,SAAS,GACvD,mBAAS,QADK,SAAS,EAE1B,CACD;AAAA,aACH;AAAA;AAAA;AAAA,IACF;AAAA,IAGC,oBAAoB,kBACnB,gBAAAM;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QAET,UAAAW,GAAE,eAAe;AAAA;AAAA,IACpB;AAAA,KAEJ;AAEJ;;;ACvJA,SAAgB,YAAAE,kBAAgB;;;ACAhC,SAAgB,YAAAC,kBAAgB;AAIhC,SAAoB,WAAAC,gBAAe;AACnC,SAAS,0BAA0B;AA8IvB,SA2GE,YAAAC,YA3GF,OAAAC,OA0BA,QAAAC,cA1BA;AA3GL,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV;AAAA;AAAA,EAEA,aAAa,CAAC;AAAA,EACd,UAAU,CAAC;AAAA,EACX,aAAa;AAAA,EACb;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAG9D,QAAM,kBAAkB,CAACC,YAA2D;AAClF,QAAI,CAACA;AAAQ,aAAO,CAAC;AACrB,QAAI,MAAM,QAAQA,OAAM;AAAG,aAAOA,QAAO,OAAO,OAAO;AACvD,QAAI,OAAOA,YAAW,UAAU;AAC9B,UAAI;AACF,cAAM,SAAS,KAAK,MAAMA,OAAM;AAChC,eAAO,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,OAAO,IAAIA,QAAO,MAAM,GAAG,EAAE,OAAO,OAAO;AAAA,MAC1F,QAAQ;AACN,eAAOA,QAAO,MAAM,GAAG,EAAE,OAAO,OAAO;AAAA,MACzC;AAAA,IACF;AACA,WAAO,CAAC;AAAA,EACV;AAEA,QAAM,aAAa,gBAAgB,MAAM;AAGzC,QAAM,cAAc;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,YAAY,mBAAmB,WAAkB;AACvD,QAAM,YAAY,WAAW,SAAS,KAAK,aAAa,UAAU,KAAK,MAAM;AAC7E,QAAM,cAAc,YAAY;AAGhC,QAAM,aAAa,MAAM;AACvB,QAAI,WAAW,SAAS,KAAK,QAAQ,SAAS,KAAK,YAAY;AAC7D,0BAAoB,IAAI;AAAA,IAC1B,WAAW,QAAQ;AAEjB,aAAO,EAAE;AAAA,IACX;AAAA,EACF;AAGA,QAAM,oBAAoB,OAA2B;AAAA,IACnD;AAAA,IACA;AAAA,IACA,aAAa,eAAe;AAAA,IAC5B,SAAS;AAAA,IACT,YAAY;AAAA;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ,QAAQ,MAAM,QAAQ,MAAM,IAAI,OAAO,KAAK,GAAG,IAAK,OAAO,WAAW,WAAW,SAAS;AAAA,IAC1F,UAAU;AAAA,IACV,aAAa,CAAC;AAAA,MACZ,IAAI;AAAA;AAAA,MACJ,UAAU;AAAA;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ,EAAE,IAAI,GAAG,MAAM,OAAO,MAAM,YAAY,cAAc,EAAE;AAAA,IAClE,CAAC;AAAA,IACD,UAAU,EAAE,IAAI,GAAG,MAAM,SAAS,KAAK;AAAA,IACvC,UAAU,EAAE,IAAI,OAAO,eAAe,WAAW,aAAa,GAAG,MAAM,GAAG;AAAA,IAC1E,WAAW,oBAAI,KAAK;AAAA,IACpB,WAAW,oBAAI,KAAK;AAAA,EACtB;AAEA,QAAM,gBAAgB,CAAC,mBAAuC;AAC5D,uBAAmB,cAAc;AACjC,wBAAoB,KAAK;AAAA,EAC3B;AAEA,QAAM,cAAc,CAAC,UAAkB;AACrC,cAAU,KAAK;AAAA,EACjB;AAEA,SACE,gBAAAH,MAAAD,YAAA,EACE,0BAAAE,OAAC,QAAK,WAAWG,IAAG,kDAAkD,SAAS,GAE7E;AAAA,oBAAAH,OAAC,SAAI,WAAU,sDACZ;AAAA,kBACC,gBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,KAAK;AAAA,UACL,KAAK;AAAA,UACL,WAAU;AAAA,UACV,SAAS,CAACK,OAAM;AACd,kBAAM,SAASA,GAAE;AACjB,mBAAO,MAAM,UAAU;AACvB,mBAAO,oBAAoB,UAAU,OAAO,QAAQ;AAAA,UACtD;AAAA;AAAA,MACF,IACE;AAAA,MAEJ,gBAAAL,MAAC,SAAI,WAAW,GAAG,YAAY,WAAW,EAAE,+DAC1C,0BAAAA,MAACF,UAAA,EAAQ,WAAU,2BAA0B,GAC/C;AAAA,MACC,CAAC,eACA,gBAAAE,MAAC,SAAI,WAAU,iEACb,0BAAAA,MAAC,UAAK,WAAU,oCAAmC,0BAAY,GACjE;AAAA,MAEF,gBAAAA,MAAC,SAAI,WAAU,yBACb,0BAAAA,MAAC,UAAK,WAAU,qEACb,mBAAS,MACZ,GACF;AAAA,MACC,YAAY,WACX,gBAAAC,OAAC,SAAI,WAAU,qCACZ;AAAA,kBACC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QAED,YACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS,MAAM,SAAS,EAAE;AAAA,YAC1B,WAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,SAEJ;AAAA,OAEJ;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,OACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,MAAC,QAAG,WAAU,oDAAoD,gBAAK;AAAA,QACvE,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,iBAAO,MAAK;AAAA,SACpD;AAAA,MAEC,eACC,gBAAAA,MAAC,OAAE,WAAU,2CAA2C,uBAAY;AAAA,MAItE,gBAAAC,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,gCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,iBAAgB,0BAAY;AAAA,UAC5C,gBAAAA,MAAC,UAAK,WAAU,eAAe,iBAAM;AAAA,WACvC;AAAA,QACA,gBAAAC,OAAC,SAAI,WAAU,gCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,iBAAgB,+BAAiB;AAAA,UACjD,gBAAAA,MAAC,UAAK,WAAU,+BAA+B,mBAAQ;AAAA,WACzD;AAAA,QACA,gBAAAC,OAAC,SAAI,WAAU,gCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,iBAAgB,wBAAU;AAAA,UAC1C,gBAAAA,MAAC,UAAK,WAAWI,IAAG,eAAe,cAAc,mBAAmB,cAAc,GAC/E,qBACH;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAH,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,yBAAwB,yBAAW;AAAA,UACnD,gBAAAC,OAAC,UAAK,WAAU,uCAAsC;AAAA;AAAA,YAClD,UAAU,QAAQ,CAAC;AAAA,YAAE;AAAA,aACzB;AAAA,WACF;AAAA,QACC,aACC,gBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,yBAAwB,yBAAW;AAAA,UACnD,gBAAAC,OAAC,UAAK,WAAU,gCAA+B;AAAA;AAAA,YAC3C,UAAU,QAAQ,CAAC;AAAA,aACvB;AAAA,WACF;AAAA,QAEF,gBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,yBAAwB,sBAAQ;AAAA,UAChD,gBAAAC,OAAC,UAAK,WAAU,6BAA4B;AAAA;AAAA,YACxC,QAAQ,QAAQ,CAAC;AAAA,aACrB;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAA,OAAC,SAAI,WAAU,cACZ;AAAA,oBAAY,YACX,gBAAAA,OAAAF,YAAA,EACG;AAAA,oBACC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,EAAE;AAAA,cACxB,WAAU;AAAA,cACX;AAAA;AAAA,UAED;AAAA,UAED,UAAU,eACT,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,EAAE;AAAA,cACxB,WAAU;AAAA,cACV,UAAU,CAAC;AAAA,cACZ;AAAA;AAAA,UAED;AAAA,WAEJ;AAAA,QAGD,YAAY,YACX,gBAAAC,OAAAF,YAAA,EACG;AAAA,oBACC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,EAAE;AAAA,cACxB,WAAU;AAAA,cACX;AAAA;AAAA,UAED;AAAA,UAED,UAAU,eACT,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,EAAE;AAAA,cACxB,WAAU;AAAA,cACV,UAAU,CAAC;AAAA,cACZ;AAAA;AAAA,UAED;AAAA,WAEJ;AAAA,QAGD,YAAY,WACX,gBAAAC,OAAAF,YAAA,EACG;AAAA,oBACC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,EAAE;AAAA,cACxB,WAAU;AAAA,cACX;AAAA;AAAA,UAED;AAAA,UAED,UACC,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS;AAAA,cACT,WAAU;AAAA,cACX;AAAA;AAAA,UAED;AAAA,WAEJ;AAAA,SAEJ;AAAA,OACF;AAAA,KACF,GAGF;AAEJ;;;ADpRQ,SAoBJ,YAAAM,YAnBM,OAAAC,OADF,QAAAC,cAAA;AArCD,SAAS,YAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA,aAAa,CAAC;AAAA,EACd,UAAU,CAAC;AAAA,EACX,aAAa;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB;AAClB,GAAqB;AACnB,QAAM,CAAC,iBAAiB,kBAAkB,IAAIC,WAAS,KAAK;AAE5D,QAAM,mBAAmB,MAAM;AAC7B,uBAAmB,IAAI;AAAA,EACzB;AAEA,QAAM,oBAAoB,MAAM;AAC9B,uBAAmB,KAAK;AAAA,EAC1B;AAEA,QAAM,gBAAgB,CAAC,YAAgC;AACrD,QAAI,kBAAkB;AACpB,uBAAiB,OAAO;AAAA,IAC1B;AACA,uBAAmB,KAAK;AAAA,EAC1B;AAEA,QAAM,cAAc,CAAC,UAAkB;AACrC,QAAI,SAAS;AACX,cAAQ,KAAK;AAAA,IACf;AAAA,EACF;AAEA,MAAI,SAAS,WAAW,GAAG;AACzB,WACE,gBAAAF,MAAC,SAAI,WAAU,qBACb,0BAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,MAAC,QAAG,WAAU,4BAA2B,+BAAiB;AAAA,MAC1D,gBAAAA,MAAC,OAAE,WAAU,gBAAe,6EAE5B;AAAA,MACC,iBAAiB,WAAW,SAAS,KAAK,QAAQ,SAAS,KAAK,cAC/D,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,WAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,OAEJ,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,MAAAD,YAAA,EACE,0BAAAC,MAAC,SAAI,WAAU,uEACZ,mBAAS,IAAI,CAAC,YACb,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC,IAAI,QAAQ;AAAA,MACZ,MAAM,QAAQ;AAAA,MACd,aAAa,QAAQ;AAAA,MACrB,OAAO,QAAQ;AAAA,MACf,SAAS,QAAQ;AAAA,MACjB,WAAW,QAAQ;AAAA,MACnB,WAAW,QAAQ;AAAA,MACnB,SAAS,QAAQ;AAAA,MACjB,QAAQ,QAAQ,UAAU,CAAC;AAAA,MAC3B,UAAU,EAAE,MAAM,QAAQ,SAAS;AAAA,MACnC,QAAQ,EAAE,MAAM,QAAQ,WAAW;AAAA,MACnC,QAAQ,CAAC,cAAc,gBAAgB,QAAQ,SAAS;AAAA,MACxD,QAAQ,CAAC,cAAc,gBAAgB,QAAQ,SAAS;AAAA,MACxD,UAAU,CAAC,cAAc,gBAAgB,UAAU,SAAS;AAAA,MAC5D,SAAQ;AAAA,MAER;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IArBK,QAAQ;AAAA,EAsBf,CACD,GACH,GAGF;AAEJ;;;AE9GA,SAAgB,YAAAG,kBAAgB;AAWhC,SAAS,qBAAAC,0BAAyB;AAClC,SAAS,0BAAAC,yBAAwB,yBAAAC,8BAA6B;AAE9D,SAAS,sBAAAC,2BAA0B;AACnC,SAAS,OAAAC,MAAK,QAAAC,OAAM,gBAAAC,eAAc,UAAAC,SAAQ,cAAc,WAAAC,gBAAe;AAmC7D,SACE,OAAAC,OADF,QAAAC,cAAA;AAzBH,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAsB;AACpB,QAAM,CAAC,gBAAgB,iBAAiB,IAAIC,WAAwB,IAAI;AAGxE,QAAM,cAAcX,mBAAkB;AACtC,QAAMY,KAAIX,wBAAuB;AACjC,QAAM,KAAKC,uBAAsB;AAGjC,UAAQ,IAAI,8CAAuC;AAAA,IACjD,SAAS,MAAM,QAAQ,QAAQ;AAAA,IAC/B,QAAQ,UAAU;AAAA,IAClB,cAAc,WAAW,CAAC,GAAG;AAAA,EAC/B,CAAC;AAED,MAAI,SAAS,WAAW,GAAG;AACzB,WACE,gBAAAO,MAAC,QAAK,WAAU,kDACd,0BAAAA,MAAC,eAAY,WAAU,qBACrB,0BAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,MAAC,QAAG,WAAU,4BAA4B,UAAAG,GAAE,qBAAqB,GAAE;AAAA,MACnE,gBAAAH,MAAC,OAAE,WAAU,WACV,UAAAG,GAAE,gCAAgC,GACrC;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAM,iBAAiB,CAAC,aAAsB;AAC5C,WAAO,WACL,gBAAAJ,MAAC,SAAM,WAAU,qEACd,UAAAG,GAAE,eAAe,GACpB,IAEA,gBAAAH,MAAC,SAAM,WAAU,iEACd,UAAAG,GAAE,iBAAiB,GACtB;AAAA,EAEJ;AAEA,QAAM,uBAAuB,CAAC,WAAmB,UAAkB;AACjE,QAAI,cAAc,GAAG;AACnB,aAAO,gBAAAH,MAAC,SAAM,WAAU,6DAA6D,UAAAG,GAAE,mBAAmB,GAAE;AAAA,IAC9G;AACA,QAAI,YAAY,GAAG;AACjB,aAAO,gBAAAH,MAAC,SAAM,WAAU,yEAAyE,UAAAG,GAAE,iBAAiB,GAAE;AAAA,IACxH;AACA,WAAO,gBAAAH,MAAC,SAAM,WAAU,qEAAqE,UAAAG,GAAE,gBAAgB,GAAE;AAAA,EACnH;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,QAAI,QAAQ;AACV,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAH,MAAC,QAAK,WAAU,8EACd,0BAAAA,MAAC,SAAI,WAAU,wBACb,0BAAAC,OAAC,WAAM,WAAU,yBAEf;AAAA,oBAAAD,MAAC,WAAM,WAAU,+FACf,0BAAAC,OAAC,QAEC;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,MAAM;AAAA,UAChC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAE,GAAE,aAAa;AAAA,YACf,WAAW,UACV,gBAAAH,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,qGACX,aAAG,iBAAiB,GACvB;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,qGACX,aAAG,cAAc,GACpB;AAAA,MAaA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,WAAW;AAAA,UACrC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,eAAG,kBAAkB;AAAA,YACrB,WAAW,eACV,gBAAAD,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,sGACX,aAAG,gBAAgB,GACtB;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,MAAC,WAAM,WAAU,2EACd,mBAAS,IAAI,CAAC,YACb,gBAAAC,OAAC,QAAoB,WAAU,2CAE7B;AAAA,sBAAAD,MAAC,QAAG,WAAU,aACZ,0BAAAC,OAAC,SAAI,WAAU,2BAEb;AAAA,wBAAAA,OAAC,SAAI,WAAU,0BACX;AAAA,iBAAM;AACN,kBAAM,WAAWP,oBAAmB,OAAO;AAC3C,kBAAM,gBAAgB,YAAY,SAAS,KAAK,MAAM,MAAM,QAAQ,UAAU,QAAQ,OAAO,SAAS;AAEtG,mBAAO,gBACL,gBAAAM;AAAA,cAAC;AAAA;AAAA,gBACC,KAAK;AAAA,gBACL,KAAK,QAAQ;AAAA,gBACb,WAAU;AAAA,gBACV,SAAS,CAACK,OAAM;AACd,wBAAM,SAASA,GAAE;AACjB,yBAAO,MAAM,UAAU;AACvB,yBAAO,oBAAoB,UAAU,OAAO,QAAQ;AAAA,gBACtD;AAAA;AAAA,YACF,IACE;AAAA,UACN,GAAG;AAAA,UAEH,gBAAAL,MAAC,SAAI,WAAW,IAAI,MAAM;AACxB,kBAAM,WAAWN,oBAAmB,OAAO;AAC3C,kBAAM,gBAAgB,YAAY,SAAS,KAAK,MAAM,MAAM,QAAQ,UAAU,QAAQ,OAAO,SAAS;AACtG,mBAAO,gBAAgB,WAAW;AAAA,UACpC,GAAG,CAAC,gIACF,0BAAAM,MAACD,UAAA,EAAQ,WAAU,yBAAwB,GAC7C;AAAA,WACF;AAAA,QACA,gBAAAE,OAAC,SAAI,WAAU,WACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,6CACZ,kBAAQ,MACX;AAAA,UACC,QAAQ,WACP,gBAAAC,OAAC,SAAI,WAAU,4CAA2C;AAAA;AAAA,YAClD,QAAQ;AAAA,aAChB;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,MAGA,gBAAAD,MAAC,QAAG,WAAU,+BACZ,0BAAAA,MAAC,SAAI,WAAU,yCACX,kBAAgB,UAAU,QAAQ,OACtC,GACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,+BACZ,0BAAAC,OAAC,SAAI,WAAU,WACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,6CACZ,sBAAY,QAAQ,aAAa,CAAC,GACrC;AAAA,QACC,QAAQ,aAAa,QAAQ,YAAY,KACxC,gBAAAC,OAAC,SAAI,WAAU,4CACZ;AAAA,UAAAE,GAAE,YAAY;AAAA,UAAE;AAAA,UAAG,YAAY,QAAQ,SAAS;AAAA,WACnD;AAAA,SAEJ,GACF;AAAA,MAyBA,gBAAAH,MAAC,QAAG,WAAU,+BACZ,0BAAAA,MAAC,SAAI,WAAU,yCACZ,kBAAQ,YAAY,IAAI,KAAK,QAAQ,SAAS,EAAE,mBAAmB,SAAS;AAAA,QAC3E,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,MACP,CAAC,IAAI,OACP,GACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,8DACZ,0BAAAC,OAAC,gBACC;AAAA,wBAAAD,MAAC,uBAAoB,SAAO,MAC1B,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,WAAU;AAAA,YACV,SAAS,MAAM,kBAAkB,QAAQ,EAAE;AAAA,YAE3C,0BAAAA,MAAC,gBAAa,WAAU,WAAU;AAAA;AAAA,QACpC,GACF;AAAA,QACA,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAM,mBAAmB,QAAQ;AAAA,YACjC,cAAc,CAAC,SAAkB,kBAAkB,OAAO,QAAQ,KAAK,IAAI;AAAA,YAE3E;AAAA,8BAAAA,OAAC,oBAAiB,SAAS,MAAM;AAC/B,gCAAgB,QAAQ,QAAQ,EAAE;AAClC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,MAACL,MAAA,EAAI,WAAU,gBAAe;AAAA,gBAC7BQ,GAAE,qBAAqB;AAAA,iBAC1B;AAAA,cACA,gBAAAF,OAAC,oBAAiB,SAAS,MAAM;AAC/B,gCAAgB,QAAQ,QAAQ,EAAE;AAClC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,MAACJ,OAAA,EAAK,WAAU,gBAAe;AAAA,gBAC9BO,GAAE,cAAc;AAAA,iBACnB;AAAA,cACA,gBAAAF,OAAC,oBAAiB,SAAS,MAAM;AAC/B,gCAAgB,eAAe,QAAQ,EAAE;AACzC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,MAACH,eAAA,EAAa,WAAU,gBAAe;AAAA,gBACtCM,GAAE,oBAAoB;AAAA,iBACzB;AAAA,cASA,gBAAAH,MAAC,yBAAsB;AAAA,cACvB,gBAAAC;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAS,MAAM;AACb,oCAAgB,UAAU,QAAQ,EAAE;AACpC,sCAAkB,IAAI;AAAA,kBACxB;AAAA,kBACA,WAAU;AAAA,kBAEV;AAAA,oCAAAD,MAACF,SAAA,EAAO,WAAU,gBAAe;AAAA,oBAChCK,GAAE,gBAAgB;AAAA;AAAA;AAAA,cACrB;AAAA;AAAA;AAAA,QACF;AAAA,SACF,GACF;AAAA,SA/JO,QAAQ,EAgKjB,CACD,GACH;AAAA,KACF,GACF,GACF;AAEJ;;;ACxUA,SAAgB,YAAAG,kBAAgB;AAGhC,SAAS,mBAAmB;;;ACH5B,SAAgB,YAAAC,kBAAgB;;;ACAhC,SAAgB,YAAAC,kBAAgB;AAQhC,SAAoB,QAAAC,OAAM,WAAAC,UAAS,eAAAC,oBAAmB;AAEtD,SAAS,YAAAC,iBAAgB;AACzB,SAAS,0BAAAC,yBAAwB,yBAAAC,8BAA6B;AAoFhD,qBAAAC,YACE,OAAAC,OADF,QAAAC,cAAA;AAvEP,IAAM,iBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,qBAAqB;AACvB,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIC,WAAS,KAAK;AACtD,QAAM,EAAE,cAAc,WAAW,IAAIN,UAAS;AAC9C,QAAMO,KAAIN,wBAAuB;AACjC,QAAM,KAAKC,uBAAsB;AAEjC,QAAM,eAAe,OAAO,MAAW,UAAmB;AACxD,oBAAgB,IAAI;AAEpB,QAAI;AAEF,YAAM,kBAAsC;AAAA,QAC1C,MAAM,KAAK;AAAA,QACX,aAAa,KAAK;AAAA,QAClB,SAAS,KAAK;AAAA,QACd,YAAY,KAAK;AAAA,QACjB,WAAW,KAAK;AAAA,QAChB,WAAW,KAAK;AAAA,QAChB,SAAS,KAAK;AAAA,QACd,YAAY,KAAK;AAAA,QACjB,QAAQ,qBAAqB,CAAC,IAAK,MAAM,QAAQ,KAAK,MAAM,IAAI,KAAK,OAAO,KAAK,GAAG,IAAK,KAAK,UAAU;AAAA,QACxG,aAAa,KAAK;AAAA,MACpB;AAEA,UAAI,sBAAsB,OAAO;AAC/B,cAAM,OAAO,iBAAiB,KAAK;AAAA,MACrC,OAAO;AACL,cAAM,OAAO,eAAe;AAAA,MAC9B;AAAA,IAMF,SAAS,KAAK;AACZ,cAAQ,MAAM,iDAA4C,GAAG;AAC7D,iBAAWK,GAAE,uBAAuB,GAAG,eAAe,QAAQ,IAAI,UAAUA,GAAE,uBAAuB,CAAC;AAAA,IACxG,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,aAAS;AAAA,EACX;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAU,aAET;AAAA,oBAAAD;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,UAAU;AAAA,QACV,SAAS;AAAA,QACT,MAAK;AAAA,QACL;AAAA,QACA,YAAY;AAAA,QACZ,kBAAkB;AAAA,QAClB,QAAO;AAAA,QACP;AAAA,QACA,YAAY,eACV,gBAAAC,OAAAF,YAAA,EACE;AAAA,0BAAAC,MAACI,UAAA,EAAQ,WAAU,6BAA4B;AAAA,UAAE;AAAA,WAEnD,IAEA,gBAAAH,OAAAF,YAAA,EACE;AAAA,0BAAAC,MAACK,OAAA,EAAK,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEnC;AAAA;AAAA,IAEJ;AAAA,IAEJ,gBAAAJ,OAAC,SAAI,WAAU,aAEZ;AAAA,cAAQ,WAAW,KAClB,gBAAAD,MAAC,SAAI,WAAU,wDACb,0BAAAC,OAAC,SAAI,WAAU,qBACb;AAAA,wBAAAD,MAACM,cAAA,EAAY,WAAU,gCAA+B;AAAA,QACtD,gBAAAL,OAAC,SACC;AAAA,0BAAAD,MAAC,QAAG,WAAU,uCAAuC,UAAAG,GAAE,6BAA6B,GAAE;AAAA,UACtF,gBAAAH,MAAC,OAAE,WAAU,gCACV,UAAAG,GAAE,0BAA0B,GAC/B;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAGF,gBAAAF,OAAC,SAAI,WAAU,8BACb;AAAA,wBAAAD,MAAC,UAAO,SAAQ,WAAU,SAAS,cAAc,UAAU,cACxD,aAAG,gBAAgB,GACtB;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,UAAU,gBAAgB,QAAQ,WAAW;AAAA,YAC7C,WAAU;AAAA,YACV,OAAO,QAAQ,WAAW,IAAIG,GAAE,0BAA0B,IAAI;AAAA,YAE7D,yBACC,gBAAAF,OAAAF,YAAA,EACE;AAAA,8BAAAC,MAACI,UAAA,EAAQ,WAAU,6BAA4B;AAAA,cAC9C,GAAG,kBAAkB;AAAA,eACxB,IAEA,gBAAAH,OAAAF,YAAA,EACE;AAAA,8BAAAC,MAACK,OAAA,EAAK,WAAU,gBAAe;AAAA,cAC9BF,GAAE,eAAe;AAAA,eACpB;AAAA;AAAA,QAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ADpFQ,SACE,OAAAI,OADF,QAAAC,cAAA;AA5CD,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIC,WAAS,KAAK;AAEtD,UAAQ,IAAI,oDAA6C,IAAI;AAE7D,QAAM,aAAa,OAAO,gBAAqB;AAC7C,QAAI;AACF,sBAAgB,IAAI;AAIpB,UAAI,kBAAkB;AACpB,cAAM,iBAAiB,WAAW;AAAA,MACpC;AAGA,mBAAa,KAAK;AAAA,IAEpB,SAAS,OAAO;AACd,cAAQ,MAAM,4CAAuC,KAAK;AAC1D,UAAI,SAAS;AACX,gBAAQ,iBAAiB,QAAQ,MAAM,UAAU,0BAA0B;AAAA,MAC7E;AAAA,IACF,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAF,MAAC,UAAO,MAAY,cAClB,0BAAAC,OAAC,iBAAc,WAAU,8CACvB;AAAA,oBAAAA,OAAC,gBAAa,WAAU,sCACtB;AAAA,sBAAAD,MAAC,eAAY,WAAU,uCAAsC,6BAE7D;AAAA,MACA,gBAAAA,MAAC,qBAAkB,kEAEnB;AAAA,OACF;AAAA,IAEA,gBAAAA,MAAC,SAAI,WAAU,OACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,UAAU;AAAA;AAAA,IACZ,GACF;AAAA,KACF,GACF;AAEJ;;;ADuCI,qBAAAG,YAYc,OAAAC,OACA,QAAAC,cAbd;AA5GG,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAwB;AAEtB,QAAM,EAAE,MAAM,iBAAiB,mBAAmB,oBAAoB,IAAI,YAAY;AACtF,QAAM,CAAC,iBAAiB,kBAAkB,IAAIC,WAAS,KAAK;AAC5D,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAoC,IAAI;AAEpF,QAAM,mBAAmB,MAAM;AAC7B,YAAQ,IAAI,mDAA4C;AACxD,sBAAkB,IAAI;AACtB,uBAAmB,IAAI;AACvB,YAAQ,IAAI,oDAA6C;AAAA,EAC3D;AAEA,QAAM,oBAAoB,CAAC,YAAgC;AACzD,sBAAkB,OAAO;AACzB,uBAAmB,IAAI;AAAA,EACzB;AAEA,QAAM,oBAAoB,MAAM;AAC9B,uBAAmB,KAAK;AACxB,sBAAkB,IAAI;AAAA,EACxB;AAEA,QAAM,gBAAgB,CAAC,YAAgC;AACrD,QAAI,gBAAgB;AAClB,yBAAmB,OAAO;AAAA,IAC5B,OAAO;AACL,yBAAmB,OAAO;AAAA,IAC5B;AACA,uBAAmB,KAAK;AAAA,EAC1B;AAEA,QAAM,cAAc,CAAC,UAAkB;AACrC,cAAU,KAAK;AAAA,EACjB;AAGA,QAAM,aAAa;AAAA,IACjB;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO,oBAAoB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IACxC;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,MAAM,SAAS,iBAAiB;AAAA,MACzC,OAAO,oBAAoB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IACxC;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,MAAM,SAAS,iBAAiB;AAAA,MACzC,OAAO,CAAC,KAAK;AAAA;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,MAAM,SAAS,WAAW;AAAA,MACnC,OAAO,oBAAoB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IACxC;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,MAAM,SAAS,mBAAmB;AAAA,MAC3C,OAAO,sBAAsB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,MAAM,SAAS,iBAAiB;AAAA,MACzC,OAAO,CAAC,SAAS,YAAY,gBAAgB,cAAc;AAAA;AAAA,IAC7D;AAAA,EACF;AAGA,QAAM,UAAU,WAAW;AAAA,IAAO,YAChC,CAAC,OAAO,SAAS,OAAO,MAAM,SAAS;AAAA,EACzC,EAAE,IAAI,CAAC,EAAE,OAAO,GAAG,OAAO,MAAM,MAAM;AAEtC,SACE,gBAAAD,OAAAF,YAAA,EACE;AAAA,oBAAAC,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAA,MAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,OAAO;AAAA,QAChB,WAAU;AAAA,QACV,SAAS,OAAO;AAAA,QAEhB,0BAAAC,OAAC,SAAI,WAAU,sCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,WAAW,iBAAO,MAAK;AAAA,UACvC,gBAAAC,OAAC,SAAI,WAAU,UACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,uBAAuB,iBAAO,OAAM;AAAA,YACnD,gBAAAA,MAAC,SAAI,WAAU,sBAAsB,iBAAO,aAAY;AAAA,aAC1D;AAAA,WACF;AAAA;AAAA,MAXK,OAAO;AAAA,IAYd,CACD,GACH,GACF,GACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd;AAAA,QACA;AAAA,QACA,YAAY,OAAO,UAAU;AAAA,QAC7B;AAAA,QACA;AAAA;AAAA,IACF;AAAA,KAEF;AAEJ;;;AG5JI,SAEE,OAAAG,OAFF,QAAAC,cAAA;AAFG,SAAS,kBAAkB;AAChC,SACE,gBAAAA,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,MAAC,iBAAc;AAAA,IAGf,gBAAAA,MAAC,kBAAe;AAAA,IAGhB,gBAAAA,MAAC,gBAAa,OAAO,GAAG;AAAA,IAGxB,gBAAAA,MAAC,sBAAmB;AAAA,KACtB;AAEJ;AAEO,SAAS,uBAAuB;AACrC,SACE,gBAAAC,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,SAC9D;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,+CAA8C;AAAA,QAC7D,gBAAAA,MAAC,SAAI,WAAU,+CAA8C;AAAA,SAC/D;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAD,MAAC,SAAI,WAAU,iBACb,0BAAAA,MAAC,SAAI,WAAU,6DAA4D,GAC7E;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,UAC5D,gBAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,MAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,WACF;AAAA,QAEA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,UAC5D,gBAAAA,MAAC,SAAI,WAAU,0BACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,MAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACnEA,SAAS,aAAAE,kBAAiB;AAS1B,SAAS,0BAAAC,yBAAwB,yBAAAC,8BAA6B;AAE9D;AAAA,EACE,WAAAC;AAAA,OAoBK;;;AC9BP,SAAS,kBAAAC,uBAAsB;;;ADiGnB,gBAAAC,OAIE,QAAAC,cAJF;AAtDL,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,YAAY;AACd,MAAM;AACJ,QAAM,SAASC,WAAU;AACzB,QAAMC,KAAIC,wBAAuB;AACjC,QAAM,KAAKC,uBAAsB;AAGjC,QAAM,kBAAkB,CAAC,WAA2D;AAClF,QAAI,CAAC;AAAQ,aAAO,CAAC;AAErB,QAAI;AACF,UAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAO,OAAO,OAAO,OAAO;AAAA,MAC9B,WAAW,OAAO,WAAW,UAAU;AAErC,YAAI;AACF,gBAAM,SAAS,KAAK,MAAM,MAAM;AAChC,iBAAO,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,OAAO,IAAI,OAAO,MAAM,GAAG,EAAE,OAAO,OAAO;AAAA,QAC1F,QAAQ;AACN,iBAAO,OAAO,MAAM,GAAG,EAAE,OAAO,OAAO;AAAA,QACzC;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV,QAAQ;AACN,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AAEA,QAAM,aAAa,gBAAgB,QAAQ,MAAM;AAGjD,QAAM,mBAAmB,CAACC,OAA8C;AACtE,IAAAA,GAAE,cAAc,MAAM,UAAU;AAAA,EAClC;AAEA,QAAM,iBAAiB,QAAQ,YAAY,OAAO,CAAC,KAAK,OAAO,MAAM,GAAG,WAAW,CAAC;AACpF,QAAM,eAAe,QAAQ,YAAY,OAAO,CAAC,KAAK,OAAO,MAAM,GAAG,SAAS,CAAC;AAChF,QAAM,aAAa,QAAQ,YAAY,OAAO,CAAC,KAAK,OAAO,MAAM,GAAG,OAAO,CAAC;AAI5E,SACE,gBAAAL,OAAC,SAAI,WAAW,aAAa,SAAS,IAEpC;AAAA,oBAAAD,MAAC,SAAI,WAAU,kDACb,0BAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,UAEb;AAAA,wBAAAD,MAAC,QAAG,WAAU,6CAA6C,kBAAQ,MAAK;AAAA,QAGxE,gBAAAC,OAAC,SAAI,WAAU,0DACb;AAAA,0BAAAA,OAAC,UAAK;AAAA;AAAA,YAAK,QAAQ;AAAA,aAAG;AAAA,UACrB,QAAQ,WAAW,gBAAAA,OAAC,UAAM;AAAA,YAAAE,GAAE,gBAAgB;AAAA,YAAE;AAAA,YAAG,QAAQ;AAAA,aAAQ;AAAA,UAClE,gBAAAF,OAAC,UAAM;AAAA,eAAG,iBAAiB;AAAA,YAAE;AAAA,YAAG,QAAQ,UAAU,QAAQ;AAAA,aAAgB;AAAA,WAC5E;AAAA,QAGC,QAAQ,eACP,gBAAAD,MAAC,SAAI,WAAU,QACb,0BAAAA,MAAC,OAAE,WAAU,iBAAiB,kBAAQ,aAAY,GACpD;AAAA,QAIF,gBAAAA,MAAC,SAAI,WAAU,uCACb,0BAAAC,OAAC,SACC;AAAA,0BAAAA,OAAC,UAAK,WAAU,iBAAiB;AAAA,eAAG,iBAAiB;AAAA,YAAE;AAAA,aAAC;AAAA,UACxD,gBAAAD,MAAC,UAAK,WAAU,sBAAsB,kBAAQ,UAAU,QAAQ,WAAU;AAAA,WAC5E,GACF;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,sDACb;AAAA,0BAAAA,OAAC,SACC;AAAA,4BAAAA,OAAC,UAAK,WAAU,iBAAiB;AAAA,iBAAG,kBAAkB;AAAA,cAAE;AAAA,eAAC;AAAA,YACzD,gBAAAD,MAAC,UAAK,WAAU,sBAAsB,qBAAW,QAAQ,SAAS,GAAE;AAAA,aACtE;AAAA,UACA,gBAAAC,OAAC,SACC;AAAA,4BAAAA,OAAC,UAAK,WAAU,iBAAiB;AAAA,iBAAG,kBAAkB;AAAA,cAAE;AAAA,eAAC;AAAA,YACzD,gBAAAD,MAAC,UAAK,WAAU,sBAAsB,qBAAW,QAAQ,SAAS,GAAE;AAAA,aACtE;AAAA,WACF;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,yDACb;AAAA,0BAAAD,MAAC,QAAG,WAAU,0CAA0C,UAAAG,GAAE,wBAAwB,GAAE;AAAA,UACpF,gBAAAF,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,eACb;AAAA,8BAAAD,MAAC,SAAI,WAAU,oCAAoC,sBAAW;AAAA,cAC9D,gBAAAA,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,sBAAsB,GAAE;AAAA,eACpE;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,eACb;AAAA,8BAAAD,MAAC,SAAI,WAAU,qCAAqC,0BAAe;AAAA,cACnE,gBAAAA,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,0BAA0B,GAAE;AAAA,eACxE;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,eACb;AAAA,8BAAAD,MAAC,SAAI,WAAU,oCAAoC,wBAAa;AAAA,cAChE,gBAAAA,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,gBAAgB,GAAE;AAAA,eAC9D;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAF,OAAC,SAAI,WAAU,mBACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,yCACZ,UAAAO,gBAAe,QAAQ,SAAS,GACnC;AAAA,QACA,gBAAAP,MAAC,SAAI,WAAU,8BAA8B,UAAAG,GAAE,kBAAkB,GAAE;AAAA,QAElE,QAAQ,aAAa,QAAQ,YAAY,KACxC,gBAAAF,OAAC,SAAI,WAAU,QACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,wCACZ,UAAAO,gBAAe,QAAQ,SAAS,GACnC;AAAA,UACA,gBAAAP,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,kBAAkB,GAAE;AAAA,WAChE;AAAA,QAGF,gBAAAF,OAAC,SAAI,WAAU,QACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,qCACZ,UAAAO,gBAAe,QAAQ,OAAO,GACjC;AAAA,UACA,gBAAAP,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,gBAAgB,GAAE;AAAA,WAC9D;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAGC,qBACC,gBAAAF,OAAC,SAAI,WAAU,8CACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,sCACb;AAAA,wBAAAD,MAAC,QAAG,WAAU,uCAAuC,UAAAG,GAAE,mCAAmC,GAAE;AAAA,QAC5F,gBAAAH,MAAC,OAAE,WAAU,8BAA8B,UAAAG,GAAE,2BAA2B,GAAE;AAAA,SAC5E;AAAA,MAEA,gBAAAH,MAAC,SAAI,WAAU,OACZ,kBAAQ,eAAe,QAAQ,YAAY,SAAS,IACnD,QAAQ,YAAY,IAAI,CAAC,aAAa,UACtC,gBAAAA,MAAC,SAA4D,WAAW,GAAG,QAAQ,IAAI,uCAAuC,EAAE,IAC9H,0BAAAA,MAAC,SAAI,WAAU,QACb,0BAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,QAAG,WAAU,qCACX,sBAAY,QAAQ,QAAQ,kBAC/B;AAAA,UACC,YAAY,QAAQ,UACnB,gBAAAA,MAAC,OAAE,WAAU,8BAA8B,sBAAY,OAAO,SAAQ,IAEtE,gBAAAA,MAAC,OAAE,WAAU,qCAAoC,kCAAoB;AAAA,WAEzE;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,gCACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,4BACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,mCAAmC,sBAAY,OAAM;AAAA,YACpE,gBAAAA,MAAC,SAAI,WAAU,yBAAyB,aAAG,cAAc,GAAE;AAAA,aAC7D;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,4BACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,mCAAmC,sBAAY,WAAU;AAAA,YACxE,gBAAAA,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,kBAAkB,GAAE;AAAA,aAChE;AAAA,UAEA,gBAAAF,OAAC,SAAI,WAAU,4BACb;AAAA,4BAAAD,MAAC,SAAI,WAAU,oCAAoC,sBAAY,SAAQ;AAAA,YACvE,gBAAAA,MAAC,SAAI,WAAU,0BAA0B,UAAAG,GAAE,gBAAgB,GAAE;AAAA,aAC/D;AAAA,WACF;AAAA,SACF,GACF,KAhCQ,YAAY,QAAQ,MAAM,YAAY,MAAM,KAiCtD,CACD,IAEC,gBAAAF,OAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,sBAAsB,UAAAG,GAAE,yBAAyB,GAAE;AAAA,QAClE,gBAAAH,MAAC,SAAI,WAAU,yBAAyB,UAAAG,GAAE,gCAAgC,GAAE;AAAA,SAC9E,GAEJ;AAAA,OACF;AAAA,IAID,WAAW,SAAS,KACnB,gBAAAF,OAAC,SAAI,WAAU,8CACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,sCACb,0BAAAA,MAAC,QAAG,WAAU,uCAAuC,UAAAG,GAAE,eAAe,GAAE,GAC1E;AAAA,MAEA,gBAAAH,MAAC,SAAI,WAAU,OAEb,0BAAAA,MAAC,SAAI,WAAU,uEACZ,qBAAW,SAAS,IACnB,WAAW,IAAI,CAAC,OAAe,UAC7B,gBAAAA;AAAA,QAAC;AAAA;AAAA,UAEC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,0BACb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,KAAK;AAAA,gBACL,KAAK,GAAG,QAAQ,IAAI,IAAI,QAAQ,CAAC;AAAA,gBACjC,WAAU;AAAA,gBACV,SAAS,CAACM,OAAM;AACd,wBAAM,SAASA,GAAE;AACjB,yBAAO,MAAM,UAAU;AACvB,yBAAO,oBAAoB,UAAU,OAAO,QAAQ;AAAA,gBACtD;AAAA;AAAA,YACF;AAAA,YAEA,gBAAAN,MAAC,SAAI,WAAU,sFACb,0BAAAA,MAACQ,UAAA,EAAQ,WAAU,yBAAwB,GAC7C;AAAA,aACF;AAAA;AAAA,QAlBK;AAAA,MAmBP,CACD,IAED,gBAAAR,MAAC,SAAI,WAAU,qEACb,0BAAAA,MAAC,UAAK,iCAAmB,GAC3B,GAEJ,GACF;AAAA,OACF;AAAA,KAIJ;AAEJ;;;AEvQI,gBAAAS,aAAA;AATG,IAAM,2BAAoE,CAAC;AAAA,EAChF;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,YAAY;AACd,MAAM;AACJ,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,EACF;AAEJ;;;AC/BA,SAAgB,YAAAC,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EAKE,UAAAC;AAAA,OACK;AACP,SAAS,YAAAC,iBAAgB;AACzB,SAAS,0BAAAC,yBAAwB,yBAAAC,+BAA6B;AAC9D,SAAoB,QAAAC,OAAM,WAAAC,gBAAe;AAwHnC,SA0BM,YAAAC,YA1BN,OAAAC,OA0BM,QAAAC,cA1BN;AA1GC,IAAM,cAA8C,CAAC;AAAA,EAC1D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIC,WAAS,KAAK;AACtD,QAAM,EAAE,cAAc,WAAW,IAAIC,UAAS;AAC9C,QAAMC,KAAIC,wBAAuB;AACjC,QAAM,KAAKC,wBAAsB;AAGjC,EAAAC,YAAU,MAAM;AACd,YAAQ,IAAI,yCAAkC,OAAO;AACrD,YAAQ,IAAI,6CAAsC,QAAQ,QAAQ;AAClE,YAAQ,IAAI,gDAAyC,QAAQ,WAAW;AACxE,YAAQ,IAAI,oCAA6B,OAAO;AAChD,YAAQ,IAAI,wCAAiC,OAAO,MAAM;AAC1D,YAAQ,IAAI,mCAA4B,MAAM;AAC9C,YAAQ,IAAI,0CAAmC,OAAO,QAAQ;AAC9D,YAAQ,IAAI,uCAAgC,UAAU;AAAA,EACxD,GAAG,CAAC,SAAS,SAAS,QAAQ,UAAU,UAAU,CAAC;AAGnD,QAAM,kBAAkB;AAAA,IACtB,MAAM,QAAQ;AAAA,IACd,aAAa,QAAQ,eAAe;AAAA,IACpC,SAAS,QAAQ,WAAW;AAAA,IAC5B,YAAY,QAAQ,UAAU,MAAM,QAAQ;AAAA,IAC5C,WAAW,QAAQ;AAAA,IACnB,WAAY,QAAgB,aAAa;AAAA;AAAA,IACzC,SAAS,QAAQ;AAAA,IACjB,aAAa,MAAM;AAEjB,YAAM,QAAQ,QAAQ,OAAO,CAAC,KAAK,WAAW;AAC5C,cAAM,gBAAgB,QAAQ,YAAY,KAAK,QAAM,GAAG,QAAQ,OAAO,OAAO,EAAE,GAAG,SAAS;AAC5F,eAAO,MAAM;AAAA,MACf,GAAG,CAAC;AACJ,cAAQ,IAAI,kDAA2C,OAAO,qBAAqB,QAAQ,MAAM;AACjG,aAAO;AAAA,IACT,GAAG;AAAA,IACH,SAAS,MAAM;AACb,cAAQ,IAAI,2CAAoC,QAAQ,MAAM;AAC9D,cAAQ,IAAI,kDAA2C,OAAO,QAAQ,MAAM;AAC5E,cAAQ,IAAI,0DAAmD,MAAM,QAAQ,QAAQ,MAAM,CAAC;AAC5F,aAAO,MAAM,QAAQ,QAAQ,MAAM,IAAI,QAAQ,SAAS,CAAC;AAAA,IAC3D,GAAG;AAAA,IACH,UAAU,QAAQ;AAAA,IAClB,cAAc,MAAM;AAClB,cAAQ,IAAI,gDAAyC,QAAQ,WAAW;AACxE,cAAQ,IAAI,8CAAuC,OAAO;AAG1D,YAAM,mBAAmB,oBAAI,IAAI;AACjC,cAAQ,YAAY,QAAQ,QAAM;AAChC,cAAM,WAAW,GAAG,QAAQ,MAAM;AAClC,YAAI,WAAW,GAAG;AAChB,2BAAiB,IAAI,UAAU,GAAG,SAAS,CAAC;AAAA,QAC9C;AAAA,MACF,CAAC;AAGD,YAAM,iBAAiB,QAAQ,IAAI,YAAU;AAC3C,cAAM,gBAAgB,iBAAiB,IAAI,OAAO,EAAE,KAAK;AACzD,cAAM,SAAS;AAAA,UACb,UAAU,OAAO;AAAA,UACjB,OAAO;AAAA,QACT;AACA,gBAAQ,IAAI,kCAA2B,OAAO,IAAI,SAAS,OAAO,EAAE,uBAAuB,aAAa,EAAE;AAC1G,eAAO;AAAA,MACT,CAAC;AAED,cAAQ,IAAI,mEAA4D,cAAc;AACtF,aAAO;AAAA,IACT,GAAG;AAAA,IACH,KAAK,QAAQ,WAAW;AAAA,EAC1B;AAEA,QAAM,eAAe,OAAO,SAAuB;AACjD,oBAAgB,IAAI;AAEpB,QAAI;AACF,UAAI,OAAO,WAAW,YAAY;AAChC,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAC9D;AACA,YAAM,OAAO,IAAI;AAAA,IAEnB,SAAS,KAAK;AACZ,cAAQ,MAAM,8CAAyC,GAAG;AAC1D,iBAAWH,GAAE,uBAAuB,GAAG,eAAe,QAAQ,IAAI,UAAU,0BAA0B;AAAA,IACxG,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,aAAS;AAAA,EACX;AAEA,SACE,gBAAAH,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD;AAAA,MAAC;AAAA;AAAA,QACC,aAAa;AAAA,QACb;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,UAAU;AAAA,QACV,SAAS;AAAA,QACT,MAAK;AAAA,QACL;AAAA,QACA,YAAY;AAAA,QACZ,kBAAkB;AAAA,QAClB,QAAO;AAAA;AAAA,IACT;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,8BACb;AAAA,sBAAAD,MAACQ,UAAA,EAAO,SAAQ,WAAU,SAAS,cAAc,UAAU,cACxD,aAAG,gBAAgB,GACtB;AAAA,MACA,gBAAAR;AAAA,QAACQ;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,MAAK;AAAA,UACL,UAAU;AAAA,UACV,WAAU;AAAA,UAET,yBACC,gBAAAP,OAAAF,YAAA,EACE;AAAA,4BAAAC,MAACS,UAAA,EAAQ,WAAU,6BAA4B;AAAA,YAC9CL,GAAE,mBAAmB;AAAA,aACxB,IAEA,gBAAAH,OAAAF,YAAA,EACE;AAAA,4BAAAC,MAACU,OAAA,EAAK,WAAU,gBAAe;AAAA,YAC9BN,GAAE,wBAAwB;AAAA,aAC7B;AAAA;AAAA,MAEJ;AAAA,OACF;AAAA,KACF;AAEJ;;;AC1KA,SAAgB,YAAAO,YAAU,aAAAC,mBAAiB;AAe3C;AAAA,EACE,WAAAC;AAAA,EACA,cAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,cAAAC;AAAA,EAKA;AAAA,EACA,aAAAC;AAAA,EAKA,aAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AAEP,SAAS,wBAAAC,uBAAsB,yBAAAC,+BAA6B;;;ACpC5D,OAAOC,aAAW;AAClB,SAAS,QAAAC,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AAEzD,SAAS,wBAAAC,6BAA4B;AA8CzB,gBAAAC,OAIF,QAAAC,cAJE;AAtCL,IAAM,cAAcP,QAAM,KAAK,SAASQ,aAAY,EAAE,aAAa,OAAO,YAAY,KAAK,GAAqB;AACrH,QAAMC,KAAIJ,sBAAqB;AAE/B,UAAQ,IAAI,+BAA+B,KAAK;AAChD,UAAQ,IAAI,qCAAqC,WAAW;AAE5D,QAAMK,mBAAiB,CAAC,WAAuC;AAC7D,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,UAAU,CAAC;AAAA,EACvB;AAGA,QAAM,YAAY;AAAA,IAChB,aAAa,OAAO,eAAe;AAAA,IACnC,cAAc,OAAO,gBAAgB;AAAA,IACrC,eAAe,OAAO,iBAAiB;AAAA,IACvC,eAAe,OAAO,iBAAiB;AAAA,IACvC,gBAAgB,OAAO,kBAAkB;AAAA,IACzC,iBAAiB,OAAO,mBAAmB;AAAA,IAC3C,iBAAiB,OAAO,mBAAmB;AAAA,IAC3C,mBAAmB,OAAO,qBAAqB;AAAA,EACjD;AAGA,MAAI,CAAC,WAAW;AACd,WAAO;AAAA,EACT;AAEA,SACE,gBAAAJ,MAAC,SAAI,WAAU,aAEb,0BAAAC,OAAC,SAAI,WAAU,wDACb;AAAA,oBAAAA,OAACN,QAAA,EACC;AAAA,sBAAAK,MAACH,cAAA,EAAW,WAAU,6DACpB,0BAAAG,MAACF,aAAA,EAAU,WAAU,wDAClB,UAAAK,GAAE,mBAAmB,GACxB,GACF;AAAA,MACA,gBAAAF,OAACL,eAAA,EACC;AAAA,wBAAAI,MAAC,SAAI,WAAU,oDACX,qBAAU,eAAe,GAAG,eAAe,GAC/C;AAAA,QACA,gBAAAA,MAAC,OAAE,WAAU,4CACV,UAAAG,GAAE,qBAAqB,GAC1B;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAF,OAACN,QAAA,EACC;AAAA,sBAAAK,MAACH,cAAA,EAAW,WAAU,6DACpB,0BAAAG,MAACF,aAAA,EAAU,WAAU,wDAClB,UAAAK,GAAE,qBAAqB,GAC1B,GACF;AAAA,MACA,gBAAAF,OAACL,eAAA,EACC;AAAA,wBAAAI,MAAC,SAAI,WAAU,uDACX,qBAAU,iBAAiB,GAAG,eAAe,GACjD;AAAA,QACA,gBAAAA,MAAC,OAAE,WAAU,4CACV,UAAAG,GAAE,yBAAyB,GAC9B;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAF,OAACN,QAAA,EACC;AAAA,sBAAAK,MAACH,cAAA,EAAW,WAAU,6DACpB,0BAAAG,MAACF,aAAA,EAAU,WAAU,wDAClB,UAAAK,GAAE,oBAAoB,GACzB,GACF;AAAA,MACA,gBAAAF,OAACL,eAAA,EACC;AAAA,wBAAAI,MAAC,SAAI,WAAU,yDACZ,UAAAI,iBAAe,UAAU,gBAAgB,CAAC,GAC7C;AAAA,QACA,gBAAAJ,MAAC,OAAE,WAAU,4CACV,UAAAG,GAAE,uBAAuB,GAC5B;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAF,OAACN,QAAA,EACC;AAAA,sBAAAK,MAACH,cAAA,EAAW,WAAU,6DACpB,0BAAAG,MAACF,aAAA,EAAU,WAAU,wDAClB,UAAAK,GAAE,uBAAuB,GAC5B,GACF;AAAA,MACA,gBAAAF,OAACL,eAAA,EACC;AAAA,wBAAAI,MAAC,SAAI,WAAU,2DACX,qBAAU,mBAAmB,GAAG,eAAe,GACnD;AAAA,QACA,gBAAAC,OAAC,OAAE,WAAU,4CACV;AAAA,UAAAG,iBAAe,UAAU,qBAAqB,CAAC;AAAA,UAAE;AAAA,UAAED,GAAE,gBAAgB;AAAA,WACxE;AAAA,SACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ,CAAC;;;AC/GD,OAAOE,WAAS,YAAAC,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,SAAAC,QAAO,UAAAC,gBAAc;AAC9B,SAAS,UAAAC,SAAQ,iBAAAC,gBAAe,cAAAC,aAAY,iBAAAC,gBAAe,eAAAC,oBAAmB;AAG9E,SAAS,kBAAkB;AAC3B,SAAS,cAAc,kBAAkB;AACzC,SAAS,wBAAAC,uBAAsB,yBAAAC,+BAA6B;AA4GxD,qBAAAC,YAKU,OAAAC,OADF,QAAAC,cAJR;AAvFG,IAAM,eAAed,QAAM,KAAK,SAASe,cAAa;AAAA,EAC3D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAsB;AAEpB,QAAMC,KAAIN,sBAAqB;AAC/B,QAAM,KAAKC,wBAAsB;AAOjC,QAAM,CAAC,aAAa,cAAc,IAAIV,WAAS,QAAQ,UAAU,EAAE;AAGnE,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAmB,CAAC,CAAC;AACnD,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,KAAK;AAC1D,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAwB,IAAI;AAMlE,EAAAC,YAAU,MAAM;AAEd,UAAM,iBAAiB,QAAQ,UAAU;AACzC,QAAI,mBAAmB,aAAa;AAClC,cAAQ,IAAI,yDAAkD,cAAc;AAC5E,qBAAe,cAAc;AAAA,IAC/B;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,CAAC;AAMnB,EAAAA,YAAU,MAAM;AACd,UAAM,eAAe,YAAY;AAC/B,UAAI;AACF,0BAAkB,IAAI;AACtB,uBAAe,IAAI;AACnB,cAAM,SAAS,MAAM,WAAW,WAAW;AAC3C,YAAI,OAAO,WAAW,OAAO,MAAM,SAAS;AAC1C,qBAAW,OAAO,KAAK,OAAO;AAAA,QAChC,OAAO;AACL,yBAAe,wBAAwB;AACvC,qBAAW,CAAC,CAAC;AAAA,QACf;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,MAAM,2BAA2B,KAAK;AAC9C,uBAAe,wBAAwB;AACvC,mBAAW,CAAC,CAAC;AAAA,MACf,UAAE;AACA,0BAAkB,KAAK;AAAA,MACzB;AAAA,IACF;AAEA,iBAAa;AAAA,EACf,GAAG,CAAC,CAAC;AAML,QAAM,oBAAoB,CAAC,UAAkB;AAC3C,YAAQ,IAAI,oDAA0C,KAAK;AAE3D,mBAAe,KAAK;AAEpB,mBAAe,KAAK;AAAA,EACtB;AAEA,QAAM,qBAAqB,CAAC,KAA6B,UAAe;AACtE,oBAAgB;AAAA,MACd,GAAG;AAAA,MACH,CAAC,GAAG,GAAG;AAAA,IACT,CAAC;AAAA,EACH;AAMA,SACE,gBAAAY,OAAAF,YAAA,EAGM;AAAA,oBAAAC,MAAC,SAAI,WAAU,wBACb,0BAAAC,OAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACV;AAAA,QAAA;AAAA,UACC,aAAaa,GAAE,oBAAoB;AAAA,UACnC,OAAO;AAAA,UACP,UAAU,CAACC,OAAM,kBAAkBA,GAAE,OAAO,KAAK;AAAA,UACjD,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,OAAQ,QAAQ,UAAqB;AAAA,QACrC,eAAe,CAAC,UAAU,mBAAmB,UAAU,UAAU,QAAQ,SAAY,KAAK;AAAA,QAE1F;AAAA,0BAAAQ,MAACL,gBAAA,EAAc,WAAU,kBACvB,0BAAAK,MAACJ,cAAA,EAAY,aAAaO,GAAE,qBAAqB,GAAG,GACtD;AAAA,UACA,gBAAAF,OAACR,gBAAA,EACC;AAAA,4BAAAO,MAACN,aAAA,EAAW,OAAM,OAAO,UAAAS,GAAE,mBAAmB,GAAE;AAAA,YAChD,gBAAAH,MAACN,aAAA,EAAW,OAAO,aAAa,UAAW,UAAAS,GAAE,iBAAiB,GAAE;AAAA,YAChE,gBAAAH,MAACN,aAAA,EAAW,OAAO,aAAa,UAAW,UAAAS,GAAE,iBAAiB,GAAE;AAAA,YAChE,gBAAAH,MAACN,aAAA,EAAW,OAAO,aAAa,UAAW,UAAAS,GAAE,iBAAiB,GAAE;AAAA,YAChE,gBAAAH,MAACN,aAAA,EAAW,OAAO,aAAa,WAAY,UAAAS,GAAE,kBAAkB,GAAE;AAAA,YAClE,gBAAAH,MAACN,aAAA,EAAW,OAAO,aAAa,WAAY,UAAAS,GAAE,kBAAkB,GAAE;AAAA,aACpE;AAAA;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAF;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,OAAO,QAAQ,aAAa;AAAA,QAC5B,eAAe,CAAC,UAAU,mBAAmB,aAAa,UAAU,QAAQ,SAAY,KAAK;AAAA,QAE7F;AAAA,0BAAAQ,MAACL,gBAAA,EAAc,WAAU,kBACvB,0BAAAK,MAACJ,cAAA,EAAY,aAAaO,GAAE,mBAAmB,GAAG,GACpD;AAAA,UACA,gBAAAF,OAACR,gBAAA,EACC;AAAA,4BAAAO,MAACN,aAAA,EAAW,OAAM,OAAO,UAAAS,GAAE,kBAAkB,GAAE;AAAA,YAC/C,gBAAAH,MAACN,aAAA,EAAW,OAAO,WAAW,MAAO,UAAAS,GAAE,gBAAgB,GAAE;AAAA,YACzD,gBAAAH,MAACN,aAAA,EAAW,OAAO,WAAW,MAAO,UAAAS,GAAE,gBAAgB,GAAE;AAAA,aAC3D;AAAA;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAF;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,OAAO,QAAQ,WAAW,QAAQ,SAAS,SAAS,IAAI;AAAA,QACxD,eAAe,CAAC,UAAU;AACxB,gBAAM,WAAW,UAAU,QAAQ,SAAY,SAAS,KAAK;AAC7D,6BAAmB,YAAY,QAAQ;AAAA,QACzC;AAAA,QAEA;AAAA,0BAAAQ,MAACL,gBAAA,EAAc,WAAU,kBACvB,0BAAAK,MAACJ,cAAA,EAAY,aAAaO,GAAE,qBAAqB,GAAG,GACtD;AAAA,UACA,gBAAAF,OAACR,gBAAA,EACC;AAAA,4BAAAO,MAACN,aAAA,EAAW,OAAM,OAAO,UAAAS,GAAE,oBAAoB,GAAE;AAAA,YAChD,iBACC,gBAAAH,MAACN,aAAA,EAAW,OAAM,WAAU,UAAQ,MAAE,UAAAS,GAAE,iBAAiB,GAAE,IACzD,cACF,gBAAAH,MAACN,aAAA,EAAW,OAAM,SAAQ,UAAQ,MAAE,UAAAS,GAAE,eAAe,GAAE,IACrD,QAAQ,WAAW,IACrB,gBAAAH,MAACN,aAAA,EAAW,OAAM,SAAQ,UAAQ,MAAE,UAAAS,GAAE,mBAAmB,GAAE,IAE3D,QAAQ,IAAI,CAAC,WACX,gBAAAH,MAACN,aAAA,EAA2B,OAAO,OAAO,GAAG,SAAS,GACnD,iBAAO,QADO,OAAO,EAExB,CACD;AAAA,aAEL;AAAA;AAAA;AAAA,IACF;AAAA,IAGH,mBAAmB,QAAQ,UAAU,QAAQ,aAAa,QAAQ,YAAY,gBAC7E,gBAAAM;AAAA,MAACT;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QAET,UAAAY,GAAE,eAAe;AAAA;AAAA,IACpB;AAAA,KAEJ;AAEJ,CAAC;;;ACzND,SAAS,YAAAE,WAAU,SAAAC,QAAO,cAAAC,aAAY,eAAAC,oBAAmB;AA2F7C,SAyEE,YAAAC,YAzEF,OAAAC,OAsCF,QAAAC,cAtCE;AApEL,SAAS,kBAAkB;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAChB,GAA2B;AACzB,QAAM,MAAM,oBAAI,KAAK;AAGrB,QAAM,eAAe,CAAC,SAA6C;AACjE,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAE5B,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI;AACpC,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AAEzB,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAEA,QAAM,gBAAgB,MAAkC;AACtD,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAC5B,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAEA,QAAM,mBAAmB,MAAkC;AACzD,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,MAAM,MAAM,OAAO;AACzB,UAAM,OAAO,MAAM,QAAQ,IAAI,OAAO,QAAQ,IAAI,KAAK;AACvD,UAAM,QAAQ,IAAI;AAClB,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AAEzB,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAC5B,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAEA,QAAM,oBAAoB,MAAkC;AAC1D,UAAM,QAAQ,IAAI,KAAK,IAAI,YAAY,GAAG,IAAI,SAAS,GAAG,CAAC;AAC3D,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAC5B,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAEA,QAAM,sBAAsB,MAAkC;AAC5D,UAAM,UAAU,KAAK,MAAM,IAAI,SAAS,IAAI,CAAC;AAC7C,UAAM,QAAQ,IAAI,KAAK,IAAI,YAAY,GAAG,UAAU,GAAG,CAAC;AACxD,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAC5B,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAGA,QAAM,aAAa,cAAc;AACjC,QAAM,YAAY,iBAAiB;AACnC,QAAM,aAAa,aAAa,EAAE;AAClC,QAAM,eAAe,oBAAoB;AAEzC,QAAM,eAAoC;AAAA,IACxC;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAAD,MAACJ,QAAA,EAAM,WAAU,eAAc;AAAA,MACrC,WAAW,WAAW;AAAA,MACtB,SAAS,WAAW;AAAA,MACpB,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAAI,MAACL,WAAA,EAAS,WAAU,eAAc;AAAA,MACxC,WAAW,UAAU;AAAA,MACrB,SAAS,UAAU;AAAA,MACnB,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAAK,MAACH,aAAA,EAAW,WAAU,eAAc;AAAA,MAC1C,WAAW,WAAW;AAAA,MACtB,SAAS,WAAW;AAAA,MACpB,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAM,gBAAAG,MAACL,WAAA,EAAS,WAAU,eAAc;AAAA,MACxC,WAAW,aAAa;AAAA,MACxB,SAAS,aAAa;AAAA,MACtB,aAAa;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAM,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,MAAC,UAAK,WAAU,2CAA0C,4BAAc;AAAA,MAEvE,aAAa,IAAI,CAAC,WACjB,gBAAAC;AAAA,QAAC;AAAA;AAAA,UAEC,SAAS,iBAAiB,OAAO,KAAK,YAAY;AAAA,UAClD,MAAK;AAAA,UACL,SAAS,MAAM,eAAe,MAAM;AAAA,UACpC,WAAU;AAAA,UAET;AAAA,mBAAO;AAAA,YACP,OAAO;AAAA;AAAA;AAAA,QAPH,OAAO;AAAA,MAQd,CACD;AAAA,MAEA,gBACC,gBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM,eAAe,IAAI;AAAA,UAClC,WAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,OAEJ;AAAA,IAGC,kBAAkB,UAAa,cAAc,KAC5C,gBAAAC,OAAC,SAAI,WAAW,kDACd,cACI,+CACA,sCACN,IACG;AAAA,qBAAe,gBAAAD,MAACF,cAAA,EAAY,WAAU,2CAA0C;AAAA,MAEjF,gBAAAE,MAAC,SAAI,WAAU,0CACZ,yBACC,gBAAAC,OAAAF,YAAA,EACE;AAAA,wBAAAC,MAAC,UAAK,WAAU,uBAAsB,qBAAO;AAAA,QAC7C,gBAAAA,MAAC,SAAM,SAAQ,WAAU,WAAU,iBAChC,wBAAc,eAAe,GAChC;AAAA,QACA,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,gBAAE;AAAA,QACxC,gBAAAA,MAAC,SAAM,SAAQ,WACZ,sBAAY,eAAe,GAC9B;AAAA,QACA,gBAAAA,MAAC,UAAK,WAAU,uBAAsB,0BAAY;AAAA,SACpD,IAEA,gBAAAA,MAAAD,YAAA,EACG,wBACC,gBAAAE,OAAAF,YAAA,EACE;AAAA,wBAAAE,OAAC,UAAK,WAAU,iCAAgC;AAAA;AAAA,UAC9B,YAAY,eAAe;AAAA,UAAE;AAAA,WAC/C;AAAA,QACA,gBAAAD,MAAC,UAAK,WAAU,sBAAqB,wDAErC;AAAA,SACF,IAEA,gBAAAC,OAAAF,YAAA,EACE;AAAA,wBAAAC,MAAC,UAAK,WAAU,uBAAsB,2BAAa;AAAA,QACnD,gBAAAA,MAAC,SAAM,SAAQ,WAAU,WAAU,iBAChC,sBAAY,eAAe,GAC9B;AAAA,SACF,GAEJ,GAEJ;AAAA,MAEC,gBACC,gBAAAA,MAAC,UAAK,WAAU,8BACb,uBAAa,KAAK,OAAK,EAAE,OAAO,YAAY,GAAG,aAClD;AAAA,OAEJ;AAAA,KAEJ;AAEJ;;;AC/MA,SAAgB,YAAAE,kBAAgB;AAiBhC,SAAS,YAAAC,WAAU,eAAAC,oBAAmB;AA4HlC,qBAAAC,YAMU,OAAAC,OADF,QAAAC,cALR;AAvGG,SAAS,qBAAqB;AAAA,EACnC,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAChB,GAA8B;AAC5B,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAC9D,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAS,EAAE;AACjD,QAAM,CAAC,WAAW,YAAY,IAAIA,WAAS,EAAE;AAM7C,QAAM,eAAe,CAAC,SAAiB;AACrC,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAC5B,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI;AACpC,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAEA,QAAM,aAAa,MAAM;AACvB,UAAM,QAAQ,IAAI,KAAK,MAAM,GAAG,CAAC;AACjC,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAC5B,WAAO,EAAE,OAAO,IAAI;AAAA,EACtB;AAMA,QAAM,mBAAsC;AAAA,IAC1C;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM,aAAa,EAAE;AAAA,MAC/B,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM,aAAa,EAAE;AAAA,MAC/B,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,MAAM,aAAa,GAAG;AAAA,MAChC,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU,OAAO,EAAE,OAAO,oBAAI,KAAK,GAAG,KAAK,oBAAI,KAAK,EAAE;AAAA,MACtD,aAAa;AAAA,IACf;AAAA,EACF;AAMA,QAAM,oBAAoB,CAAC,YAAoB;AAC7C,QAAI,YAAY,UAAU;AACxB,0BAAoB,IAAI;AACxB;AAAA,IACF;AAEA,UAAM,SAAS,iBAAiB,KAAK,SAAO,IAAI,OAAO,OAAO;AAC9D,QAAI,QAAQ;AACV,YAAM,EAAE,OAAO,IAAI,IAAI,OAAO,SAAS;AACvC,oBAAc,SAAS,OAAO,GAAG;AAAA,IACnC;AAAA,EACF;AAEA,QAAM,oBAAoB,MAAM;AAC9B,QAAI,CAAC,eAAe,CAAC;AAAW;AAEhC,UAAM,QAAQ,IAAI,KAAK,WAAW;AAClC,UAAM,SAAS,GAAG,GAAG,GAAG,CAAC;AACzB,UAAM,MAAM,IAAI,KAAK,SAAS;AAC9B,QAAI,SAAS,IAAI,IAAI,IAAI,GAAG;AAE5B,kBAAc,UAAU,OAAO,GAAG;AAClC,wBAAoB,KAAK;AACzB,mBAAe,EAAE;AACjB,iBAAa,EAAE;AAAA,EACjB;AAEA,QAAM,gBAAgB,iBAAiB,KAAK,SAAO,IAAI,OAAO,WAAW;AAEzE,SACE,gBAAAD,OAAAF,YAAA,EAEE;AAAA,oBAAAE,OAAC,UAAO,OAAO,aAAa,eAAe,mBACzC;AAAA,sBAAAD,MAAC,iBAAc,WAAU,aACvB,0BAAAA,MAAC,eAAY,aAAY,cACvB,0BAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,MAACH,WAAA,EAAS,WAAU,eAAc;AAAA,QACjC,eAAe,SAAS;AAAA,SAC3B,GACF,GACF;AAAA,MACA,gBAAAI,OAAC,iBACC;AAAA,wBAAAD,MAAC,cAAW,OAAM,SAChB,0BAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,MAAC,UAAK,0BAAY;AAAA,UAClB,gBAAAA,MAAC,SAAM,SAAQ,WAAU,WAAU,yBAAwB,qBAAO;AAAA,WACpE,GACF;AAAA,QACA,gBAAAA,MAAC,cAAW,OAAM,UAAS,0BAAY;AAAA,QACvC,gBAAAA,MAAC,cAAW,OAAM,QAAO,4BAAc;AAAA,QAGvC,gBAAAA,MAAC,SAAI,WAAU,uBAAsB;AAAA,QAGrC,gBAAAA,MAAC,cAAW,OAAM,OAChB,0BAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,MAAC,UAAK,sBAAQ;AAAA,UACb,cAAc,OACb,gBAAAA,MAACF,cAAA,EAAY,WAAU,6BAA4B;AAAA,WAEvD,GACF;AAAA,QACA,gBAAAE,MAAC,cAAW,OAAM,UAChB,0BAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,MAACH,WAAA,EAAS,WAAU,WAAU;AAAA,UAC9B,gBAAAG,MAAC,UAAK,6BAAe;AAAA,WACvB,GACF;AAAA,SACF;AAAA,OACF;AAAA,IAGC,eAAe,gBAAgB,SAC9B,gBAAAC,OAAC,SAAI,WAAU,2FACb;AAAA,sBAAAD,MAACF,cAAA,EAAY,WAAU,2CAA0C;AAAA,MACjE,gBAAAG,OAAC,UAAK,WAAU,yCAAwC;AAAA;AAAA,QACzC,YAAY,eAAe;AAAA,QAAE;AAAA,SAC5C;AAAA,OACF;AAAA,IAIF,gBAAAD,MAAC,UAAO,MAAM,kBAAkB,cAAc,qBAC5C,0BAAAC,OAAC,iBAAc,WAAU,eACvB;AAAA,sBAAAD,MAAC,gBACC,0BAAAC,OAAC,eAAY,WAAU,2BACrB;AAAA,wBAAAD,MAACH,WAAA,EAAS,WAAU,WAAU;AAAA,QAAE;AAAA,SAElC,GACF;AAAA,MAEA,gBAAAI,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAACG,QAAA,EAAM,SAAQ,cAAa,wBAAU;AAAA,UACtC,gBAAAH;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO;AAAA,cACP,UAAU,CAACI,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,cAC9C,KAAK,cAAa,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA;AAAA,UACzD;AAAA,WACF;AAAA,QAEA,gBAAAH,OAAC,SACC;AAAA,0BAAAD,MAACG,QAAA,EAAM,SAAQ,YAAW,sBAAQ;AAAA,UAClC,gBAAAH;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO;AAAA,cACP,UAAU,CAACI,OAAM,aAAaA,GAAE,OAAO,KAAK;AAAA,cAC5C,KAAK;AAAA,cACL,MAAK,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA;AAAA,UAC5C;AAAA,WACF;AAAA,QAEA,gBAAAH,OAAC,SAAI,WAAU,6DAA4D;AAAA;AAAA,UACtE,gBAAAD,MAAC,YAAO,kBAAI;AAAA,UAAS;AAAA,WAC1B;AAAA,SACF;AAAA,MAEA,gBAAAC,OAAC,gBACC;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM;AACb,kCAAoB,KAAK;AACzB,6BAAe,EAAE;AACjB,2BAAa,EAAE;AAAA,YACjB;AAAA,YACD;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU,CAAC,eAAe,CAAC;AAAA,YAC5B;AAAA;AAAA,QAED;AAAA,SACF;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACjQA,OAAOK,aAAW;AAIlB,SAAS,qBAAAC,0BAAyB;AAClC,SAAS,wBAAAC,6BAA4B;AACrC,SAAS,4BAA4B;AACrC,SAAS,uBAAAC,sBAAqB,yBAAyB;AACvD,SAAS,OAAAC,MAAK,QAAAC,aAAY;AAqChB,SACE,OAAAC,OADF,QAAAC,cAAA;AA1BH,IAAM,aAAaC,QAAM,KAAK,SAASC,YAAW;AAAA,EACvD;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAoB;AAElB,QAAM,cAAcR,mBAAkB;AACtC,QAAMS,KAAIR,sBAAqB;AAG/B,EAAAM,QAAM,UAAU,MAAM;AACpB,QAAI,OAAO,SAAS,GAAG;AACrB,cAAQ,IAAI,0CAAmC,OAAO,IAAI,CAAAG,QAAM;AAAA,QAC9D,aAAaA,GAAE;AAAA,QACf,QAAQA,GAAE;AAAA,QACV,SAASA,GAAE,WAAW;AAAA,MACxB,EAAE,CAAC;AAAA,IACL;AAAA,EACF,GAAG,CAAC,MAAM,CAAC;AAEX,MAAI,OAAO,WAAW,GAAG;AACvB,WACE,gBAAAL,MAAC,QAAK,WAAU,kDACd,0BAAAA,MAAC,eAAY,WAAU,qBACrB,0BAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,MAAC,QAAG,WAAU,4BAA4B,UAAAI,GAAE,mBAAmB,GAAE;AAAA,MACjE,gBAAAJ,MAAC,OAAE,WAAU,WACV,UAAAI,GAAE,8BAA8B,GACnC;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,WACE,gBAAAJ,MAAC,SAAM,SAAQ,WAAU,WAAWH,qBAAoB,MAA0C,GAC/F,UAAAO,GAAE,UAAU,MAAM,EAAE,GACvB;AAAA,EAEJ;AAEA,QAAM,oBAAoB,CAAC,SAAiB;AAC1C,WACE,gBAAAJ,MAAC,SAAM,SAAQ,WAAU,WAAW,kBAAkB,IAAsC,GACzF,UAAAI,GAAE,aAAa,IAAI,EAAE,GACxB;AAAA,EAEJ;AAEA,QAAME,eAAa,CAAC,eAA0C;AAC5D,QAAI,CAAC;AAAY,aAAO;AAExB,WAAO,qBAAqB,UAAU;AAAA,EACxC;AAEA,QAAM,eAAe,MAAM;AACzB,WACE,gBAAAN,MAAC,SAAI,WAAU,+IACb,0BAAAA,MAAC,SAAI,WAAU,4CAA2C,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAClG,0BAAAA,MAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,wHAAuH,GAC9L,GACF;AAAA,EAEJ;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,QAAI,QAAQ;AACV,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAA,MAAC,QAAK,WAAU,8EACd,0BAAAA,MAAC,SAAI,WAAU,wBACb,0BAAAC,OAAC,WAAM,WAAU,yBAEf;AAAA,oBAAAD,MAAC,WAAM,WAAU,+FACf,0BAAAC,OAAC,QACC;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,aAAa;AAAA,UACvC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAG,GAAE,aAAa;AAAA,YACf,WAAW,iBACV,gBAAAJ,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,MAAC,QAAG,WAAU,qGACX,UAAAI,GAAE,iBAAiB,GACtB;AAAA,MACA,gBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,QAAQ;AAAA,UAClC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAG,GAAE,cAAc;AAAA,YAChB,WAAW,YACV,gBAAAJ,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,MAAC,QAAG,WAAU,qGACX,UAAAI,GAAE,gBAAgB,GACrB;AAAA,MACA,gBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,aAAa;AAAA,UACvC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAG,GAAE,cAAc;AAAA,YAChB,WAAW,iBACV,gBAAAJ,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,cAAc;AAAA,UACxC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAG,GAAE,kBAAkB;AAAA,YACpB,WAAW,kBACV,gBAAAJ,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,WAAW;AAAA,UACrC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAG,GAAE,mBAAmB;AAAA,YACrB,WAAW,eACV,gBAAAJ,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,MAAC,QAAG,WAAU,sGACX,UAAAI,GAAE,eAAe,GACpB;AAAA,OACF,GACF;AAAA,IAGA,gBAAAJ,MAAC,WAAM,WAAU,2EACd,iBAAO,IAAI,CAAC,UACX,gBAAAC,OAAC,QAAkB,WAAU,2CAE3B;AAAA,sBAAAD,MAAC,QAAG,WAAU,+BACZ,0BAAAA,MAAC,SAAI,WAAU,qDACZ,gBAAM,aACT,GACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,+BACX,4BAAkB,MAAM,SAAS,GACpC;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,+BACX,yBAAe,MAAM,MAAM,GAC9B;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,aACZ,0BAAAC,OAAC,SAAI,WAAU,WACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,6CACZ,gBAAM,gBAAgB,OACzB;AAAA,QACA,gBAAAA,MAAC,SAAI,WAAU,4CACZ,gBAAM,iBAAiB,OAC1B;AAAA,SACF,GACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,+BACZ,0BAAAC,OAAC,SAAI,WAAU,WACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,6CAA6C,sBAAY,MAAM,WAAW,GAAE;AAAA,QAC1F,MAAM,gBAAgB,KACrB,gBAAAC,OAAC,SAAI,WAAU,4CACZ;AAAA,UAAAG,GAAE,gBAAgB;AAAA,UAAE;AAAA,UAAG,YAAY,MAAM,aAAa;AAAA,WACzD;AAAA,SAEJ,GACF;AAAA,MAGA,gBAAAH,OAAC,QAAG,WAAU,+BACZ;AAAA,wBAAAD,MAAC,SAAI,WAAU,yCACZ,UAAAM,aAAW,MAAM,YAAY,GAChC;AAAA,QACC,MAAM,gBACL,gBAAAL,OAAC,SAAI,WAAU,4CACZ;AAAA,UAAAG,GAAE,mBAAmB;AAAA,UAAE;AAAA,UAAGE,aAAW,MAAM,YAAY;AAAA,WAC1D;AAAA,SAEJ;AAAA,MAGA,gBAAAN,MAAC,QAAG,WAAU,wEACX,UAAAM,aAAW,MAAM,SAAS,GAC7B;AAAA,MAGA,gBAAAN,MAAC,QAAG,WAAU,kDACZ,0BAAAC,OAAC,SAAI,WAAU,uCACb;AAAA,wBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,QAAQ,MAAM,WAAW;AAAA,YACtD,WAAU;AAAA,YAEV;AAAA,8BAAAD,MAACF,MAAA,EAAI,WAAU,gBAAe;AAAA,cAC7BM,GAAE,cAAc;AAAA;AAAA;AAAA,QACnB;AAAA,QAGA,gBAAAH;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,QAAQ,MAAM,WAAW;AAAA,YACtD,UAAU,MAAM,WAAW;AAAA,YAC3B,WAAU;AAAA,YACV,OAAO,MAAM,WAAW,aAAaG,GAAE,0BAA0B,IAAI;AAAA,YAErE;AAAA,8BAAAJ,MAACD,OAAA,EAAK,WAAU,gBAAe;AAAA,cAC9BK,GAAE,cAAc;AAAA;AAAA;AAAA,QACnB;AAAA,SACF,GACF;AAAA,SArFO,MAAM,EAsFf,CACD,GACH;AAAA,KACF,GACF,GACF;AAEJ,CAAC;;;ACxQD,SAAS,UAAAG,gBAAc;AACvB,SAAS,QAAAC,QAAM,eAAAC,qBAAmB;AAgElB,gBAAAC,OACA,QAAAC,cADA;AA1DT,SAAS,aAAa,EAAE,SAAS,GAAsB;AAC5D,QAAM,UAAU;AAAA,IACd;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAD,MAACF,QAAA,EACC,0BAAAE,MAACD,eAAA,EAAY,WAAU,OACrB,0BAAAC,MAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,IAACH;AAAA,IAAA;AAAA,MAEC,SAAS,OAAO;AAAA,MAChB,WAAU;AAAA,MACV,SAAS,MAAM,SAAS,OAAO,EAAE;AAAA,MAEjC,0BAAAI,OAAC,SAAI,WAAU,sCACb;AAAA,wBAAAD,MAAC,UAAK,WAAU,WAAW,iBAAO,MAAK;AAAA,QACvC,gBAAAC,OAAC,SAAI,WAAU,UACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,uBAAuB,iBAAO,OAAM;AAAA,UACnD,gBAAAA,MAAC,SAAI,WAAU,sBAAsB,iBAAO,aAAY;AAAA,WAC1D;AAAA,SACF;AAAA;AAAA,IAXK,OAAO;AAAA,EAYd,CACD,GACH,GACF,GACF;AAEJ;;;AC7EA,SAAS,QAAAE,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AACzD,SAAS,SAAAC,cAAa;AAoCd,SACE,OAAAC,OADF,QAAAC,cAAA;AA7BD,SAAS,WAAW,EAAE,MAAM,GAAoB;AACrD,QAAMC,mBAAiB,CAAC,WAA2B;AACjD,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAM,wBAAwB,MAAM;AAClC,UAAM,QAAQ,MAAM;AACpB,QAAI,UAAU;AAAG,aAAO,CAAC;AAGzB,UAAM,iBAAiB,KAAK,IAAI,GAAG,QAAQ,MAAM,gBAAgB,MAAM,kBAAkB,MAAM,eAAe;AAE9G,WAAO;AAAA,MACL,EAAE,OAAO,YAAY,OAAO,gBAAgB,YAAa,iBAAiB,QAAS,KAAK,OAAO,aAAa;AAAA,MAC5G,EAAE,OAAO,YAAY,OAAO,MAAM,eAAe,YAAa,MAAM,gBAAgB,QAAS,KAAK,OAAO,gBAAgB;AAAA,MACzH,EAAE,OAAO,aAAa,OAAO,MAAM,iBAAiB,YAAa,MAAM,kBAAkB,QAAS,KAAK,OAAO,eAAe;AAAA,MAC7H,EAAE,OAAO,aAAa,OAAO,MAAM,iBAAiB,YAAa,MAAM,kBAAkB,QAAS,KAAK,OAAO,aAAa;AAAA,IAC7H;AAAA,EACF;AAEA,SACE,gBAAAD,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAACN,QAAA,EACC;AAAA,sBAAAM,OAACJ,cAAA,EACC;AAAA,wBAAAG,MAACF,aAAA,EAAU,uCAAyB;AAAA,QACpC,gBAAAE,MAAC,OAAE,WAAU,4CAA2C,mDAExD;AAAA,SACF;AAAA,MACA,gBAAAA,MAACJ,eAAA,EACC,0BAAAI,MAAC,SAAI,WAAU,aACZ,gCAAsB,EAAE,IAAI,CAAC,WAC5B,gBAAAC,OAAC,SAAuB,WAAU,aAChC;AAAA,wBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,MAAC,UAAK,WAAU,wDACb,iBAAO,OACV;AAAA,UACA,gBAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,4BAAAA,OAAC,UAAK,WAAU,4CACb;AAAA,qBAAO;AAAA,cAAM;AAAA,eAChB;AAAA,YACA,gBAAAA,OAAC,UAAK,WAAU,uBACb;AAAA,qBAAO,WAAW,QAAQ,CAAC;AAAA,cAAE;AAAA,eAChC;AAAA,aACF;AAAA,WACF;AAAA,QACA,gBAAAD,MAAC,SAAI,WAAU,wDACb,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAW,oBAAoB,OAAO,KAAK;AAAA,YAC3C,OAAO,EAAE,OAAO,GAAG,OAAO,UAAU,IAAI;AAAA;AAAA,QAC1C,GACF;AAAA,WAnBQ,OAAO,KAoBjB,CACD,GACH,GACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAACN,QAAA,EACC;AAAA,wBAAAK,MAACH,cAAA,EACC,0BAAAG,MAACF,aAAA,EAAU,6BAAe,GAC5B;AAAA,QACA,gBAAAE,MAACJ,eAAA,EACC,0BAAAK,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,2BAAa;AAAA,YACxE,gBAAAA,MAAC,UAAK,WAAU,0DACb,UAAAE,iBAAe,MAAM,YAAY,GACpC;AAAA,aACF;AAAA,UAEA,gBAAAD,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,4BAAc;AAAA,YACzE,gBAAAA,MAAC,UAAK,WAAU,gDACb,UAAAE,iBAAe,MAAM,aAAa,GACrC;AAAA,aACF;AAAA,UAEA,gBAAAD,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,iCAAmB;AAAA,YAC9E,gBAAAA,MAAC,UAAK,WAAU,eACb,UAAAE,iBAAe,MAAM,iBAAiB,GACzC;AAAA,aACF;AAAA,UAEA,gBAAAD,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,6BAAe;AAAA,YAC1E,gBAAAA,MAAC,SAAI,WAAU,+BACb,0BAAAC,OAACF,QAAA,EAAM,SAAQ,WAAU,WAAU,6DAChC;AAAA,oBAAM;AAAA,cAAe;AAAA,eACxB,GACF;AAAA,aACF;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAEA,gBAAAE,OAACN,QAAA,EACC;AAAA,wBAAAK,MAACH,cAAA,EACC,0BAAAG,MAACF,aAAA,EAAU,0BAAY,GACzB;AAAA,QACA,gBAAAE,MAACJ,eAAA,EACC,0BAAAK,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,0BAAY;AAAA,YACvE,gBAAAA,MAAC,UAAK,WAAU,uBACb,gBAAM,YAAY,eAAe,GACpC;AAAA,aACF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,4BAAc;AAAA,YACzE,gBAAAA,MAAC,SAAI,WAAU,+BACb,0BAAAC,OAACF,QAAA,EAAM,SAAQ,WAAU,WAAU,iEAChC;AAAA,oBAAM;AAAA,cAAc;AAAA,eACvB,GACF;AAAA,aACF;AAAA,UAEA,gBAAAE,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,8BAAgB;AAAA,YAC3E,gBAAAA,MAAC,UAAK,WAAU,kDACb,gBAAM,iBACT;AAAA,aACF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,MAAC,UAAK,WAAU,4CAA2C,8BAAgB;AAAA,YAC3E,gBAAAA,MAAC,UAAK,WAAU,8CACb,gBAAM,iBACT;AAAA,aACF;AAAA,WACF,GACF;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAACN,QAAA,EACC;AAAA,sBAAAK,MAACH,cAAA,EACC,0BAAAG,MAACF,aAAA,EAAU,kCAAoB,GACjC;AAAA,MACA,gBAAAE,MAACJ,eAAA,EACC,0BAAAK,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,0DACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2DACZ;AAAA,kBAAM,cAAc,KAAM,MAAM,gBAAgB,MAAM,cAAe,KAAK,QAAQ,CAAC,IAAI;AAAA,YAAE;AAAA,aAC5F;AAAA,UACA,gBAAAD,MAAC,SAAI,WAAU,4CAA2C,gCAE1D;AAAA,WACF;AAAA,QAEA,gBAAAC,OAAC,SAAI,WAAU,0DACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,yDACZ;AAAA,kBAAM,cAAc,KAAM,MAAM,kBAAkB,MAAM,cAAe,KAAK,QAAQ,CAAC,IAAI;AAAA,YAAE;AAAA,aAC9F;AAAA,UACA,gBAAAD,MAAC,SAAI,WAAU,4CAA2C,6BAE1D;AAAA,WACF;AAAA,QAEA,gBAAAC,OAAC,SAAI,WAAU,0DACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2DACZ;AAAA,kBAAM,cAAc,KAAM,MAAM,kBAAkB,MAAM,cAAe,KAAK,QAAQ,CAAC,IAAI;AAAA,YAAE;AAAA,aAC9F;AAAA,UACA,gBAAAD,MAAC,SAAI,WAAU,4CAA2C,+BAE1D;AAAA,WACF;AAAA,SACF,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AC/LA,SAAS,cAAAG,mBAAkB;AAgBvB,gBAAAC,aAAA;AAPG,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAyB;AACvB,SACE,gBAAAA;AAAA,IAACD;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP;AAAA,MACA,UAAS;AAAA;AAAA,EACX;AAEJ;;;AC1BA;AAAA,EACE,iBAAAE;AAAA,EACA,kBAAAC;AAAA,EACA,sBAAAC;AAAA,EACA,iBAAAC;AAAA,OACK;AAIH,SAEE,OAAAC,OAFF,QAAAC,cAAA;AAFG,SAAS,gBAAgB;AAC9B,SACE,gBAAAA,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,MAACD,gBAAA,EAAc;AAAA,IAGf,gBAAAC,MAACH,iBAAA,EAAe;AAAA,IAGhB,gBAAAG,MAACJ,gBAAA,EAAc,MAAM,GAAG,SAAS,GAAG;AAAA,IAGpC,gBAAAI,MAACF,qBAAA,EAAmB;AAAA,KACtB;AAEJ;AAEO,SAAS,qBAAqB;AACnC,SACE,gBAAAG,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,8CAA6C;AAAA,SAC9D;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,+CAA8C;AAAA,QAC7D,gBAAAA,MAAC,SAAI,WAAU,+CAA8C;AAAA,SAC/D;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,MAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,SACF;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,MAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,MAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,8CAA6C;AAAA,MAC5D,gBAAAA,MAACJ,gBAAA,EAAc,MAAM,GAAG,SAAS,GAAG;AAAA,OACtC;AAAA,KACF;AAEJ;;;ATzBA,SAAS,cAAAM,mBAAkB;AAC3B,SAAS,iBAAiB;AA8NlB,SA4BA,YAAAC,YA5BA,OAAAC,OAeI,QAAAC,cAfJ;AA1MD,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,aAAa;AAAA,EACb;AACF,MAAM;AACJ,QAAMC,KAAIC,sBAAqB;AAC/B,QAAM,KAAKC,wBAAsB;AAEjC,QAAM,CAAC,QAAQ,SAAS,IAAIC,WAA6B,CAAC,CAAC;AAC3D,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAIA,WAAwB,IAAI;AACtD,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAS,CAAC;AAChD,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,CAAC;AAG9C,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAuB;AAAA,IACnD,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,EACb,CAAC;AAGD,EAAAC,YAAU,MAAM;AACd,UAAM,qBAAqB,YAAY;AACrC,UAAI;AACF,mBAAW,IAAI;AAEf,cAAM,WAAW,MAAM,UAAU,mBAAmB,SAAS,SAAS,CAAC;AAEvE,gBAAQ,IAAI,8CAAuC,QAAQ;AAE3D,YAAI,SAAS,WAAW,SAAS,MAAM;AAErC,gBAAM,aAAa,MAAM,QAAQ,SAAS,IAAI,IAC1C,SAAS,OACR,SAAS,KAAa,UAAU,CAAC;AACtC,gBAAMC,cAAa,MAAM,QAAQ,SAAS,IAAI,IAC1C,IACC,SAAS,KAAa,cAAc;AACzC,kBAAQ,IAAI,gDAAyC,UAAU;AAC/D,kBAAQ,IAAI,6CAAsCA,WAAU;AAC5D,oBAAU,UAAgC;AAC1C,wBAAcA,WAAU;AAAA,QAC1B,OAAO;AACL,kBAAQ,IAAI,+DAAwD;AACpE,oBAAU,CAAC,CAAC;AACZ,wBAAc,CAAC;AAAA,QACjB;AAAA,MACF,SAAS,KAAK;AACZ,gBAAQ,MAAM,4DAAuD,GAAG;AACxE,iBAAS,gCAAgC;AACzC,kBAAU,CAAC,CAAC;AAAA,MACd,UAAE;AACA,mBAAW,KAAK;AAAA,MAClB;AAAA,IACF;AACA,uBAAmB;AAAA,EACrB,GAAG,CAAC,SAAS,CAAC;AAGd,QAAM,WAAW;AAAA,IACf,aAAa,MAAM,QAAQ,MAAM,IAAI,OAAO,SAAS;AAAA,IACrD,eAAe,MAAM,QAAQ,MAAM,IAAI,OAAO;AAAA,MAAO,CAAC,KAAK,UACzD,OAAO,MAAM,YAAY,OAAO,CAAC,SAAS,SAAS,WAAW,KAAK,YAAY,IAAI,CAAC,KAAK;AAAA,MAAI;AAAA,IAC/F,IAAI;AAAA,IACJ,YAAY,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,CAAC,KAAK,UAAU,OAAO,MAAM,eAAe,IAAI,CAAC,IAAI;AAAA,IACvG,eAAe,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,CAAC,KAAK,UAAU,OAAO,MAAM,iBAAiB,IAAI,CAAC,IAAI;AAAA,IAC5G,eAAe,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,WAAS,MAAM,WAAW,UAAU,EAAE,SAAS;AAAA,IACpG,iBAAiB,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,WAAS,MAAM,WAAW,WAAW,EAAE,SAAS;AAAA,IACvG,eAAe,MAAM,QAAQ,MAAM,IAAI,OAAO,OAAO,WAAS,MAAM,WAAW,UAAU,EAAE,SAAS;AAAA,EACtG;AAGA,UAAQ,IAAI,qDAA8C,MAAM;AAChE,QAAM,YAAY;AAAA,IAChB,QAAQ,MAAM,QAAQ,MAAM,IAAI,OAAO,IAAI,YAAU;AAAA,MACnD,IAAI,OAAO,MAAM,OAAO,WAAW,SAAS,MAAM,EAAE,IAAI,MAAM;AAAA;AAAA,MAC9D,aAAa,MAAM;AAAA,MACnB,WAAW,MAAM;AAAA,MACjB,QAAQ,MAAM;AAAA,MACd,cAAc,MAAM,WAAW,GAAG,MAAM,SAAS,SAAS,IAAI,MAAM,SAAS,QAAQ,KAAK;AAAA,MAC1F,eAAe,MAAM,UAAU,SAAS;AAAA,MACxC,YAAY,MAAM,OAAO;AAAA,MACzB,cAAc,MAAM,OAAO,UAAU,QAAQ;AAAA,MAC7C,aAAa,MAAM;AAAA,MACnB,eAAe,MAAM;AAAA,MACrB,WAAW,IAAI,KAAK,MAAM,SAAS;AAAA,MACnC,cAAc,MAAM,eAAe,IAAI,KAAK,MAAM,YAAY,IAAI;AAAA,MAClE,cAAc,MAAM,eAAe,IAAI,KAAK,MAAM,YAAY,IAAI;AAAA,MAClE,YAAY,MAAM,aAAa,IAAI,KAAK,MAAM,UAAU,IAAI;AAAA,MAC5D,YAAY,MAAM,aAAa,IAAI,KAAK,MAAM,UAAU,IAAI;AAAA,MAC5D,kBAAmB,MAAc,oBAAoB;AAAA,IACvD,EAAE,IAAI,CAAC;AAAA,IACP,OAAO,MAAM,QAAQ,MAAM,IAAI,OAAO,SAAS;AAAA,IAC/C;AAAA,IACA;AAAA,IACA,OAAO,QAAQ,SAAS;AAAA,IACxB,OAAO;AAAA,MACL,aAAa,SAAS;AAAA,MACtB,cAAc,SAAS;AAAA,MACvB,eAAe,SAAS;AAAA,MACxB,eAAe,SAAS;AAAA,MACxB,gBAAgB;AAAA;AAAA,MAChB,iBAAiB,SAAS;AAAA,MAC1B,iBAAiB;AAAA;AAAA,MACjB,mBAAmB,SAAS,cAAc,IAAI,SAAS,aAAa,SAAS,cAAc;AAAA,IAC7F;AAAA,EACF;AAEA,UAAQ,IAAI,iDAA0C,SAAS;AAE/D,QAAM,sBAAsB,CAAC,eAA6B;AACxD,eAAW,UAAU;AACrB,mBAAe,CAAC;AAAA,EAClB;AAEA,QAAM,qBAAqB,CAAC,gBAAwB;AAClD,eAAW,CAAC,UAAwB,EAAE,GAAG,MAAM,QAAQ,YAAY,EAAE;AACrE,mBAAe,CAAC;AAAA,EAClB;AAEA,QAAM,qBAAqB,MAAM;AAC/B,eAAW;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,WAAW;AAAA,IACb,CAAC;AACD,mBAAe,CAAC;AAAA,EAClB;AAEA,QAAM,oBAAoB,CAAC,QAAgB,YAAoB;AAC7D,YAAQ,IAAI,iBAAiB,QAAQ,OAAO;AAAA,EAE9C;AAEA,QAAM,mBAAmB,CAAC,SAAiB;AACzC,mBAAe,IAAI;AAAA,EACrB;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,UAAM,eAAe,QAAQ,WAAW,UAAU,QAAQ,cAAc,QAAQ,SAAS;AACzF,eAAW,CAAC,UAAwB;AAAA,MAClC,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,WAAW;AAAA,IACb,EAAE;AAAA,EACJ;AAEA,QAAM,gBAAgB,MAAM;AAC1B,mBAAe,CAAC;AAChB,aAAS,IAAI;AAEb,UAAM,qBAAqB,YAAY;AACrC,UAAI;AACF,mBAAW,IAAI;AACf,cAAM,WAAW,MAAM,UAAU,mBAAmB,SAAS,SAAS,CAAC;AAEvE,YAAI,SAAS,WAAW,SAAS,MAAM;AACrC,oBAAU,SAAS,IAA0B;AAC7C,wBAAc,CAAC;AAAA,QACjB,OAAO;AACL,oBAAU,CAAC,CAAC;AACZ,wBAAc,CAAC;AAAA,QACjB;AAAA,MACF,SAAS,KAAK;AACZ,iBAAS,gCAAgC;AACzC,gBAAQ,MAAM,oCAAoC,GAAG;AAAA,MACvD,UAAE;AACA,mBAAW,KAAK;AAAA,MAClB;AAAA,IACF;AACA,uBAAmB;AAAA,EACrB;AAEA,QAAM,eAAe,MAAM;AAEzB,YAAQ,IAAI,8BAA8B,SAAS;AAAA,EAErD;AAEA,MAAI,SAAS;AACX,WACE,gBAAAP,MAAC,SAAI,WAAW,aAAa,SAAS,IACpC,0BAAAA,MAAC,mBAAgB,GACnB;AAAA,EAEJ;AAEA,MAAI,OAAO;AACT,WACE,gBAAAA,MAAC,SAAI,WAAW,aAAa,SAAS,IACpC,0BAAAA,MAAC,QACC,0BAAAC,OAAC,eAAY,WAAU,mBACrB;AAAA,sBAAAD,MAAC,SAAI,WAAU,qBACb,0BAAAA,MAACQ,YAAA,EAAU,WAAU,qBAAoB,GAC3C;AAAA,MACA,gBAAAR,MAAC,QAAG,WAAU,8BAA8B,UAAAE,GAAE,6BAA6B,GAAE;AAAA,MAC7E,gBAAAF,MAAC,OAAE,WAAU,sBAAsB,iBAAM;AAAA,MACzC,gBAAAC,OAAC,UAAO,SAAS,MAAM,OAAO,SAAS,OAAO,GAC5C;AAAA,wBAAAD,MAACS,YAAA,EAAU,WAAU,gBAAe;AAAA,QACnC,GAAG,kBAAkB;AAAA,SACxB;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAR,OAAC,SAAI,WAAW,aAAa,SAAS,IACnC;AAAA,kBACC,gBAAAA,OAAAF,YAAA,EAEE;AAAA,sBAAAE,OAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,MAAC,QAAG,WAAU,oCAAoC,UAAAE,GAAE,qBAAqB,GAAE;AAAA,UAC3E,gBAAAF,MAAC,OAAE,WAAU,iBAAiB,UAAAE,GAAE,2BAA2B,GAAE;AAAA,WAC/D;AAAA,QACA,gBAAAD,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAA,OAAC,UAAO,SAAQ,WAAU,SAAS,cACjC;AAAA,4BAAAD,MAAC,YAAS,WAAU,gBAAe;AAAA,YAClC,GAAG,gBAAgB;AAAA,aACtB;AAAA,UACA,gBAAAC,OAAC,UAAO,SAAS,eACf;AAAA,4BAAAD,MAACS,YAAA,EAAU,WAAU,gBAAe;AAAA,YACnC,GAAG,iBAAiB;AAAA,aACvB;AAAA,UACC,WACC,gBAAAR,OAAC,UAAO,SAAQ,WAAU,SAAS,SACjC;AAAA,4BAAAD,MAACU,YAAA,EAAU,WAAU,gBAAe;AAAA,YACnCR,GAAE,8BAA8B;AAAA,aACnC;AAAA,WAEJ;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,wDACb;AAAA,wBAAAD,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,8BACb,0BAAAA,MAACW,eAAA,EAAa,WAAU,yBAAwB,GAClD;AAAA,UACA,gBAAAV,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,mBAAmB,GAAE;AAAA,YAC7D,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,mBAAS,aAAY;AAAA,aACxE;AAAA,WACF,GACF,GACF;AAAA,QAEA,gBAAAA,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,+BACb,0BAAAA,MAACY,WAAA,EAAQ,WAAU,0BAAyB,GAC9C;AAAA,UACA,gBAAAX,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,6BAA6B,GAAE;AAAA,YACvE,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,mBAAS,eAAc;AAAA,aAC1E;AAAA,WACF,GACF,GACF;AAAA,QAEA,gBAAAA,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,gCACb,0BAAAA,MAACa,aAAA,EAAW,WAAU,2BAA0B,GAClD;AAAA,UACA,gBAAAZ,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,0BAA0B,GAAE;AAAA,YACpE,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,UAAAc,gBAAe,SAAS,UAAU,GAAE;AAAA,aACvF;AAAA,WACF,GACF,GACF;AAAA,QAEA,gBAAAd,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,MAAC,SAAI,WAAU,gCACb,0BAAAA,MAACe,aAAA,EAAW,WAAU,2BAA0B,GAClD;AAAA,UACA,gBAAAd,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,qBAAqB,GAAE;AAAA,YAC/D,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,mBAAS,eAAc;AAAA,aAC1E;AAAA,WACF,GACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAD,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,eACb;AAAA,0BAAAD,MAAC,OAAE,WAAU,8BAA8B,UAAAE,GAAE,qBAAqB,GAAE;AAAA,UACpE,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,UAAAc,gBAAe,SAAS,aAAa,GAAE;AAAA,WAC1F,GACF,GACF;AAAA,QAEA,gBAAAd,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,eACb;AAAA,0BAAAD,MAAC,OAAE,WAAU,8BAA8B,UAAAE,GAAE,uBAAuB,GAAE;AAAA,UACtE,gBAAAF,MAAC,OAAE,WAAU,mCAAmC,mBAAS,iBAAgB;AAAA,WAC3E,GACF,GACF;AAAA,QAEA,gBAAAA,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,eACG;AAAA,0BAAAD,MAAC,OAAE,WAAU,8BAA8B,UAAAE,GAAE,8BAA8B,GAAE;AAAA,UAC/F,gBAAAF,MAAC,OAAE,WAAU,kCAAkC,mBAAS,eAAc;AAAA,WACtE,GACF,GACF;AAAA,SACF;AAAA,OACF;AAAA,IAID,iBACC,gBAAAC,OAAC,SAAI,WAAU,wDACb;AAAA,sBAAAD,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8BACb,0BAAAA,MAACY,WAAA,EAAQ,WAAU,yBAAwB,GAC7C;AAAA,QACA,gBAAAX,OAAC,SACC;AAAA,0BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,0BAA0B,GAAE;AAAA,UACpE,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,wBAAc,YAAW;AAAA,UAC1E,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,kCAAkC,GAAE;AAAA,WAC9E;AAAA,SACF,GACF,GACF;AAAA,MAEA,gBAAAF,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,8BACb,0BAAAA,MAACY,WAAA,EAAQ,WAAU,yBAAwB,GAC7C;AAAA,QACA,gBAAAX,OAAC,SACC;AAAA,0BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,+BAA+B,GAAE;AAAA,UACzE,gBAAAF,MAAC,OAAE,WAAU,oCAAoC,wBAAc,cAAa;AAAA,UAC5E,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,2BAA2B,GAAE;AAAA,WACvE;AAAA,SACF,GACF,GACF;AAAA,MAEA,gBAAAF,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,+BACb,0BAAAA,MAACY,WAAA,EAAQ,WAAU,0BAAyB,GAC9C;AAAA,QACA,gBAAAX,OAAC,SACC;AAAA,0BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,4BAA4B,GAAE;AAAA,UACtE,gBAAAF,MAAC,OAAE,WAAU,qCAAqC,wBAAc,gBAAe;AAAA,UAC/E,gBAAAA,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,2BAA2B,GAAE;AAAA,WACvE;AAAA,SACF,GACF,GACF;AAAA,MAEA,gBAAAF,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,gCACb,0BAAAA,MAACa,aAAA,EAAW,WAAU,2BAA0B,GAClD;AAAA,QACA,gBAAAZ,OAAC,SACC;AAAA,0BAAAD,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,oBAAoB,GAAE;AAAA,UAC9D,gBAAAF,MAAC,OAAE,WAAU,sCAAsC,UAAAc,gBAAe,SAAS,UAAU,GAAE;AAAA,UACvF,gBAAAd,MAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,+BAA+B,GAAE;AAAA,WAC3E;AAAA,SACF,GACF,GACF;AAAA,OACF;AAAA,IAIF,gBAAAD,OAAC,SAAI,WAAU,aAIb;AAAA,sBAAAD,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAA,MAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,UAChB,gBAAgB;AAAA;AAAA,MAClB,GACF,GACF,GACF;AAAA,MAGA,gBAAAA,MAAC,QACC,0BAAAA,MAAC,eAAY,WAAU,OACrB,0BAAAA,MAAC,SAAI,WAAU,mBACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC,QAAQ,UAAU;AAAA,UAClB,eAAe;AAAA,UACf,QAAQ,QAAQ;AAAA,UAChB,WAAW,QAAQ;AAAA,UACnB,QAAQ;AAAA;AAAA,MACV,GACF,GACF,GACF;AAAA,MAGC,UAAU,QAAQ,UAAU,SAC3B,gBAAAA;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,aAAa,UAAU;AAAA,UACvB,YAAY,UAAU;AAAA,UACtB,OAAO,UAAU;AAAA,UACjB,OAAO,UAAU;AAAA,UACjB,cAAc;AAAA,UACd,UAAS;AAAA;AAAA,MACX;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AUvgBA,SAAgB,YAAAkB,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,SAAAC;AAAA,EACA;AAAA,OACK;AACP;AAAA,EACE,gBAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,WAAAC;AAAA,EACA,KAAAC;AAAA,OACK;AAEP,SAAS,aAAAC,kBAAiB;AAC1B,SAAS,wBAAAC,8BAA4B;AA6E/B,gBAAAC,OA6BQ,QAAAC,cA7BR;AArEC,SAAS,oBAAoB,EAAE,MAAM,cAAc,QAAQ,GAA6B;AAC7F,QAAMC,KAAIH,uBAAqB;AAC/B,QAAM,CAAC,QAAQ,SAAS,IAAIpB,WAA6B,CAAC,CAAC;AAC3D,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAIA,WAAwB,IAAI;AAEtD,EAAAC,YAAU,MAAM;AACd,QAAI,QAAQ,SAAS;AACnB,yBAAmB;AAAA,IACrB;AAAA,EACF,GAAG,CAAC,MAAM,OAAO,CAAC;AAElB,QAAM,qBAAqB,YAAY;AACrC,QAAI,CAAC;AAAS;AAEd,QAAI;AACF,iBAAW,IAAI;AACf,eAAS,IAAI;AAGb,YAAM,WAAW,MAAMkB,WAAU,aAAa;AAAA,QAC5C,WAAW,QAAQ;AAAA,QACnB,OAAO;AAAA,MACT,CAAC;AAED,UAAI,SAAS,WAAW,SAAS,MAAM;AACrC,kBAAU,SAAS,KAAK,UAAU,CAAC,CAAC;AAAA,MACtC,OAAO;AACL,iBAAS,wBAAwB;AAAA,MACnC;AAAA,IACF,SAASK,QAAO;AACd,cAAQ,MAAM,kCAAkCA,MAAK;AACrD,eAAS,wBAAwB;AAAA,IACnC,UAAE;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAMC,eAAa,CAACC,UAAwB;AAC1C,UAAM,UAAU,OAAOA,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAC5D,WAAO,QAAQ,mBAAmB,SAAS;AAAA,MACzC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,eAAe;AAAA,MACnB,YAAY,EAAE,OAAO,6BAA6B,MAAM,WAAW;AAAA,MACnE,YAAY,EAAE,OAAO,+BAA+B,MAAM,YAAY;AAAA,MACtE,YAAY,EAAE,OAAO,6BAA6B,MAAM,WAAW;AAAA,MACnE,aAAa,EAAE,OAAO,+BAA+B,MAAM,YAAY;AAAA,MACvE,aAAa,EAAE,OAAO,2BAA2B,MAAM,YAAY;AAAA,IACrE;AAEA,UAAM,SAAS,aAAa,MAAmC,KAAK,aAAa,UAAU;AAE3F,WACE,gBAAAN,MAACT,QAAA,EAAM,WAAW,OAAO,OACtB,iBAAO,MACV;AAAA,EAEJ;AAEA,QAAM,oBAAoB,CAAC,cAAsB;AAC/C,UAAM,aAAa;AAAA,MACjB,QAAQ,EAAE,OAAO,iCAAiC,MAAM,SAAS;AAAA,MACjE,QAAQ,EAAE,OAAO,+BAA+B,MAAM,OAAO;AAAA,IAC/D;AAEA,UAAM,SAAS,WAAW,SAAoC,KAAK,WAAW,MAAM;AAEpF,WACE,gBAAAS,MAACT,QAAA,EAAM,WAAW,OAAO,OACtB,iBAAO,MACV;AAAA,EAEJ;AAEA,MAAI,CAAC;AAAS,WAAO;AAErB,SACE,gBAAAS,MAACnB,SAAA,EAAO,MAAY,cAClB,0BAAAoB,OAACnB,gBAAA,EAAc,WAAU,wDACvB;AAAA,oBAAAkB,MAACjB,eAAA,EACC,0BAAAkB,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SACC;AAAA,wBAAAA,OAACjB,cAAA,EAAY,WAAU,2BACrB;AAAA,0BAAAgB,MAACR,eAAA,EAAa,WAAU,WAAU;AAAA,UAAE;AAAA,UACxB,QAAQ;AAAA,WACtB;AAAA,QACA,gBAAAQ,MAACf,oBAAA,EAAkB,qDAEnB;AAAA,SACF;AAAA,MACA,gBAAAe;AAAA,QAACd;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM,aAAa,KAAK;AAAA,UACjC,WAAU;AAAA,UAEV,0BAAAc,MAACH,IAAA,EAAE,WAAU,WAAU;AAAA;AAAA,MACzB;AAAA,OACF,GACF;AAAA,IAEA,gBAAAG,MAAC,SAAI,WAAU,0BACZ,oBACC,gBAAAC,OAAC,SAAI,WAAU,0CACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,sEAAqE;AAAA,MACpF,gBAAAA,MAAC,UAAK,WAAU,4BAA2B,+BAAiB;AAAA,OAC9D,IACE,QACF,gBAAAC,OAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,qBAAoB,oBAAC;AAAA,MACpC,gBAAAA,MAAC,QAAG,WAAU,8CAA6C,kCAAoB;AAAA,MAC/E,gBAAAA,MAAC,OAAE,WAAU,4BAA4B,iBAAM;AAAA,MAC/C,gBAAAA,MAACd,UAAA,EAAO,SAAS,oBAAoB,SAAQ,WAAU,uBAEvD;AAAA,OACF,IACE,OAAO,WAAW,IACpB,gBAAAc;AAAA,MAAC;AAAA;AAAA,QACC,MAAMR;AAAA,QACN,OAAOU,GAAE,6BAA6B;AAAA,QACtC,aAAaA,GAAE,wCAAwC;AAAA;AAAA,IACzD,IAEA,gBAAAF,MAAC,SAAI,WAAU,aACZ,iBAAO,IAAI,CAAC,UACX,gBAAAC,OAACd,QAAA,EAAoB,WAAU,wBAC7B;AAAA,sBAAAa,MAACX,cAAA,EAAW,WAAU,QACpB,0BAAAY,OAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,OAACX,aAAA,EAAU,WAAU,WAAU;AAAA;AAAA,UACrB,MAAM;AAAA,WAChB;AAAA,QACA,gBAAAW,OAAC,SAAI,WAAU,2BACZ;AAAA,4BAAkB,MAAM,SAAS;AAAA,UACjC,eAAe,MAAM,MAAM;AAAA,WAC9B;AAAA,SACF,GACF;AAAA,MACA,gBAAAA,OAACb,eAAA,EACC;AAAA,wBAAAa,OAAC,SAAI,WAAU,yCAEb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAACN,OAAA,EAAK,WAAU,8BAA6B;AAAA,YAC7C,gBAAAO,OAAC,SACC;AAAA,8BAAAA,OAAC,OAAE,WAAU,yCACV;AAAA,sBAAM,UAAU;AAAA,gBAAU;AAAA,gBAAE,MAAM,UAAU;AAAA,iBAC/C;AAAA,cACA,gBAAAD,MAAC,OAAE,WAAU,+BACV,gBAAM,UAAU,OACnB;AAAA,eACF;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAACP,WAAA,EAAS,WAAU,8BAA6B;AAAA,YACjD,gBAAAQ,OAAC,SACC;AAAA,8BAAAD,MAAC,OAAE,WAAU,yCACV,UAAAK,aAAW,MAAM,SAAS,GAC7B;AAAA,cACA,gBAAAL,MAAC,OAAE,WAAU,+BAA8B,qBAE3C;AAAA,eACF;AAAA,aACF;AAAA,UAGA,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,MAACL,aAAA,EAAW,WAAU,8BAA6B;AAAA,YACnD,gBAAAM,OAAC,SACC;AAAA,8BAAAD,MAAC,OAAE,WAAU,yCACV,UAAAI,iBAAe,MAAM,WAAW,GACnC;AAAA,cACA,gBAAAJ,MAAC,OAAE,WAAU,+BAA8B,0BAE3C;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,QAGE,MAAc,cAAe,MAAc,WAAW,SAAS,KAC/D,gBAAAC,OAAC,SAAI,WAAU,oCACb;AAAA,0BAAAD,MAAC,QAAG,WAAU,8CAA6C,0BAAY;AAAA,UACvE,gBAAAA,MAAC,SAAI,WAAU,aACX,gBAAc,WAAW,IAAI,CAAC,MAAW,UACzC,gBAAAC,OAAC,SAAgB,WAAU,6CACzB;AAAA,4BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,MAACJ,WAAA,EAAQ,WAAU,8BAA6B;AAAA,cAChD,gBAAAI,MAAC,UAAK,WAAU,qBACb,eAAK,SAAS,QAAQ,mBACzB;AAAA,cACA,gBAAAC,OAAC,UAAK,WAAU,uBAAsB;AAAA;AAAA,gBAC7B,KAAK;AAAA,gBAAS;AAAA,iBACvB;AAAA,eACF;AAAA,YACA,gBAAAD,MAAC,UAAK,WAAU,iCACb,UAAAI,iBAAe,KAAK,UAAU,GACjC;AAAA,eAZQ,KAaV,CACD,GACH;AAAA,WACF;AAAA,QAID,MAAM,cAAc,UACnB,gBAAAJ,MAAC,SAAI,WAAU,oCACb,0BAAAC,OAAC,SAAI,WAAU,iDACZ;AAAA,gBAAM,gBACL,gBAAAA,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,uBAAsB,0BAAY;AAAA,YAC/C,gBAAAA,MAAC,OAAE,WAAU,iCACV,UAAAK,aAAW,MAAM,YAAY,GAChC;AAAA,aACF;AAAA,UAED,MAAM,gBACL,gBAAAJ,OAAC,SACC;AAAA,4BAAAD,MAAC,OAAE,WAAU,uBAAsB,0BAAY;AAAA,YAC/C,gBAAAA,MAAC,OAAE,WAAU,iCACV,UAAAK,aAAW,MAAM,YAAY,GAChC;AAAA,aACF;AAAA,WAEJ,GACF;AAAA,SAEJ;AAAA,SAtGS,MAAM,EAuGjB,CACD,GACH,GAEJ;AAAA,IAEA,gBAAAL,MAAC,SAAI,WAAU,gDACb,0BAAAA,MAACd,UAAA,EAAO,SAAS,MAAM,aAAa,KAAK,GAAG,SAAQ,WAAU,mBAE9D,GACF;AAAA,KACF,GACF;AAEJ;;;AzB7RA;AAAA,EAGE,cAAAqB;AAAA,EACA,cAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AAKP,SAAS,eAAAC,cAAa,0BAAAC,+BAA8B;AACpD;AAAA,EACE,WAAW;AAAA,EACX,YAAAC;AAAA,OACK;AAuGK,SAIE,OAAAC,OAJF,QAAAC,cAAA;AApEL,SAAS,SAAS;AAAA;AAAA,EAEvB;AAAA,EACA,UAAU,CAAC;AAAA,EACX,kBAAkB,MAAM;AAAA,EAAC;AAAA,EACzB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,kBAAkB,MAAM;AAAA,EAAC;AAAA,EACzB,eAAe,MAAM;AAAA,EAAC;AAAA,EACtB,SAAS,MAAM;AAAA,EAAC;AAAA;AAAA,EAGhB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAkB;AAGhB,QAAM,EAAE,kBAAkB,IAAIJ,aAAY,WAAW;AAGrD,QAAMK,KAAIJ,wBAAuB;AAGjC,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX,OAAO;AACL,cAAQ,IAAI,sCAAsC;AAAA,IACpD;AAAA,EACF;AAGA,QAAM,mBAAmB,MAAM;AAC7B,YAAQ,IAAI,yDAAyD;AAAA,EACvE;AAGA,QAAM,WAAW,MAAM,YAAY,CAAC;AACpC,QAAM,gBAAgB,MAAM,SAAS;AACrC,QAAM,cAAc,MAAM,QAAQ;AAClC,QAAM,aAAa,MAAM,cAAc;AACvC,QAAM,QAAQ,MAAM,SAAS;AAG7B,QAAM,0BAA0BK,QAAM,YAAY,iBAAiB,CAAC,eAAe,CAAC;AACpF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,0BAA0BA,QAAM,YAAY,iBAAiB,CAAC,eAAe,CAAC;AACpF,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,QAAM,YAAY,QAAQ,CAAC,MAAM,CAAC;AAEzD,SACE,gBAAAF,OAAC,SAAI,WAAW,wBAAwB,SAAS,IAE/C;AAAA,oBAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,sBAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UAEC;AAAA,6BAAiB,qBAChB,gBAAAA;AAAA,cAACP;AAAA,cAAA;AAAA,gBACC,SAAS;AAAA,gBACT,WAAU;AAAA,gBAEV;AAAA,kCAAAM,MAAC,eAAY,WAAU,WAAU;AAAA,kBACjC,gBAAAA,MAAC,UAAM,yBAAc;AAAA;AAAA;AAAA,YACvB;AAAA,YAED,oBACC,gBAAAC;AAAA,cAACP;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,SAAS;AAAA,gBACT,WAAU;AAAA,gBAEV;AAAA,kCAAAM,MAACD,WAAA,EAAS,WAAU,WAAU;AAAA,kBAC9B,gBAAAC,MAAC,UAAM,4BAAiB;AAAA;AAAA;AAAA,YAC1B;AAAA;AAAA;AAAA,MAEJ;AAAA,MAGA,gBAAAA,MAACL,QAAA,EAAK,WAAU,2BACd,0BAAAK,MAACJ,eAAA,EAAY,WAAU,aACrB,0BAAAI,MAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,UAChB,gBAAgB;AAAA;AAAA,MAClB,GACF,GACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAA,MAAC,SAAI,WAAU,uBACZ,mBAAS,SAAS,IACjB,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,iBAAiB;AAAA,QACjB,QAAQ,QAAQ,UAAU;AAAA,QAC1B,WAAW,QAAQ,aAAa;AAAA,QAChC,QAAQ;AAAA;AAAA,IACV,IAEA,gBAAAA;AAAA,MAACP;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,OAAOS,GAAE,qBAAqB;AAAA,QAC9B,aACE,QAAQ,UAAU,QAAQ,cAAc,QAAQ,WAC5CA,GAAE,6BAA6B,IAC/BA,GAAE,qBAAqB;AAAA;AAAA,IAE/B,GAEJ;AAAA,IAGC,SAAS,SAAS,KAAK,gBAAgB,SACtC,gBAAAF,MAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAACR;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ;AAEA,IAAO,mBAAQ;;;A0BzMf,OAAOY,aAAW;AAClB;AAAA,EAGE,cAAAC;AAAA,EACA,cAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,OACK;;;ACXP,OAAOC,aAAW;AAClB,SAAS,UAAAC,gBAAc;AACvB,SAAS,QAAAC,QAAM,eAAAC,qBAAmB;AAClC;AAAA,EACE,gBAAAC;AAAA,EACA,uBAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,uBAAAC;AAAA,EACA,yBAAAC;AAAA,OACK;AAEP,SAAS,OAAAC,MAAK,QAAAC,OAAM,UAAAC,SAAQ,aAAa,gBAAAC,qBAAoB;AAC7D,SAAS,2BAAAC,gCAA+B;AAwB9B,SACE,OAAAC,OADF,QAAAC,cAAA;AAdH,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAuB;AACrB,QAAMC,KAAIH,yBAAwB;AAClC,QAAM,CAAC,gBAAgB,iBAAiB,IAAIb,QAAM,SAAwB,IAAI;AAE9E,MAAI,UAAU,WAAW,GAAG;AAC1B,WACE,gBAAAc,MAACZ,QAAA,EAAK,WAAU,kDACd,0BAAAY,MAACX,eAAA,EAAY,WAAU,qBACrB,0BAAAY,OAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,MAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,MAAC,QAAG,WAAU,4BACX,UAAAE,GAAE,sBAAsB,GAC3B;AAAA,MACA,gBAAAF,MAAC,OAAE,WAAU,WACV,UAAAE,GAAE,iCAAiC,GACtC;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,QAAMC,eAAa,CAAC,eAA0C;AAC5D,QAAI,CAAC;AAAY,aAAOD,GAAE,aAAa;AACvC,UAAME,QAAO,OAAO,eAAe,WAAW,IAAI,KAAK,UAAU,IAAI;AACrE,WAAOA,MAAK,mBAAmB,SAAS;AAAA,MACtC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,QAAI,QAAQ;AACV,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAJ,MAACZ,QAAA,EAAK,WAAU,8EACd,0BAAAY,MAAC,SAAI,WAAU,wBACb,0BAAAC,OAAC,WAAM,WAAU,wBAEf;AAAA,oBAAAD,MAAC,WAAM,WAAU,+FACf,0BAAAC,OAAC,QACC;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,IAAI;AAAA,UAC9B,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAC,GAAE,WAAW;AAAA,YACb,WAAW,QACV,gBAAAF,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,MAAM;AAAA,UAChC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAC,GAAE,aAAa;AAAA,YACf,WAAW,UACV,gBAAAF,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,MAAC,QAAG,WAAU,qGACX,UAAAE,GAAE,gBAAgB,GACrB;AAAA,MACA,gBAAAF,MAAC,QAAG,WAAU,qGACX,UAAAE,GAAE,iBAAiB,GACtB;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,WAAW;AAAA,UACrC,WAAU;AAAA,UAEV,0BAAAC,OAAC,SAAI,WAAU,2BACZ;AAAA,YAAAC,GAAE,kBAAkB;AAAA,YACpB,WAAW,eACV,gBAAAF,MAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,MAAC,QAAG,WAAU,sGACX,UAAAE,GAAE,eAAe,GACpB;AAAA,OACF,GACF;AAAA,IAGA,gBAAAF,MAAC,WAAM,WAAU,2EACd,oBAAU,IAAI,CAAC,aACd,gBAAAC,OAAC,QAAqB,WAAU,2CAE9B;AAAA,sBAAAD,MAAC,QAAG,WAAU,+BACZ,0BAAAC,OAAC,SAAI,WAAU,qDAAoD;AAAA;AAAA,QAC/D,SAAS;AAAA,SACb,GACF;AAAA,MAGA,gBAAAD,MAAC,QAAG,WAAU,+BACZ,0BAAAA,MAAC,SAAI,WAAU,WACb,0BAAAC,OAAC,SAAI,WAAU,6CACZ;AAAA,iBAAS;AAAA,QAAU;AAAA,QAAE,SAAS;AAAA,SACjC,GACF,GACF;AAAA,MAGA,gBAAAD,MAAC,QAAG,WAAU,aACZ,0BAAAC,OAAC,SAAI,WAAU,WACb;AAAA,wBAAAD,MAAC,SAAI,WAAU,6CAA6C,mBAAS,OAAM;AAAA,QAC3E,gBAAAA,MAAC,SAAI,WAAU,4CAA4C,mBAAS,OAAM;AAAA,SAC5E,GACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,aACZ,0BAAAA,MAAC,SAAI,WAAU,yCACZ,mBAAS,QAAQ,SAAS,QACzB,gBAAAC,OAAC,SACC;AAAA,wBAAAA,OAAC,SAAK;AAAA,mBAAS;AAAA,UAAK;AAAA,UAAG,SAAS;AAAA,WAAM;AAAA,QACrC,SAAS,WACR,gBAAAD,MAAC,SAAI,WAAU,4CAA4C,mBAAS,SAAQ;AAAA,SAEhF,IAEA,gBAAAA,MAAC,UAAK,WAAU,oCAAmC,iBAAG,GAE1D,GACF;AAAA,MAGA,gBAAAA,MAAC,QAAG,WAAU,+BACZ,0BAAAA,MAAC,SAAI,WAAU,yCACZ,UAAAG,aAAW,SAAS,SAAS,GAChC,GACF;AAAA,MAGA,gBAAAH,MAAC,QAAG,WAAU,8DACZ,0BAAAC,OAACX,eAAA,EACC;AAAA,wBAAAU,MAACP,sBAAA,EACC,0BAAAO;AAAA,UAACb;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,WAAU;AAAA,YACV,SAAS,MAAM,kBAAkB,SAAS,EAAE;AAAA,YAE5C,0BAAAa,MAACF,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,QACpC,GACF;AAAA,QACA,gBAAAG;AAAA,UAACV;AAAA,UAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAM,mBAAmB,SAAS;AAAA,YAClC,cAAc,CAAC,SAAkB,kBAAkB,OAAO,SAAS,KAAK,IAAI;AAAA,YAE5E;AAAA,8BAAAU,OAACT,mBAAA,EAAiB,SAAS,MAAM;AAC/B,iCAAiB,QAAQ,SAAS,EAAE;AACpC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAQ,MAACL,MAAA,EAAI,WAAU,gBAAe;AAAA,gBAC7BO,GAAE,cAAc;AAAA,iBACnB;AAAA,cACA,gBAAAD,OAACT,mBAAA,EAAiB,SAAS,MAAM;AAC/B,iCAAiB,QAAQ,SAAS,EAAE;AACpC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAQ,MAACJ,OAAA,EAAK,WAAU,gBAAe;AAAA,gBAC9BM,GAAE,sBAAsB;AAAA,iBAC3B;AAAA,cACA,gBAAAD,OAACT,mBAAA,EAAiB,SAAS,MAAM;AAC/B,iCAAiB,cAAc,SAAS,EAAE;AAC1C,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAQ,MAAC,eAAY,WAAU,gBAAe;AAAA,gBACrCE,GAAE,oBAAoB;AAAA,iBACzB;AAAA,cACA,gBAAAF,MAACN,wBAAA,EAAsB;AAAA,cACvB,gBAAAO;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,SAAS,MAAM;AACb,qCAAiB,UAAU,SAAS,EAAE;AACtC,sCAAkB,IAAI;AAAA,kBACxB;AAAA,kBACA,WAAU;AAAA,kBAEV;AAAA,oCAAAQ,MAACH,SAAA,EAAO,WAAU,gBAAe;AAAA,oBAChCK,GAAE,wBAAwB;AAAA;AAAA;AAAA,cAC7B;AAAA;AAAA;AAAA,QACF;AAAA,SACF,GACF;AAAA,SApGO,SAAS,EAqGlB,CACD,GACH;AAAA,KACF,GACF,GACF;AAEJ;;;ACnOA,SAAgB,YAAAG,YAAU,aAAAC,mBAAiB;AAW3C,SAAS,UAAAC,eAAc;AAEvB,SAAS,2BAAAC,0BAAyB,yBAAAC,+BAA6B;AAmG3D,qBAAAC,YAKU,OAAAC,OADF,QAAAC,cAJR;AA1FG,IAAM,uBAA4D,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIL,yBAAwB;AAClC,QAAM,KAAKC,wBAAsB;AACjC,QAAM,CAAC,YAAY,aAAa,IAAIK,WAAS,KAAK;AAClD,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,UAAU,WAAW,IAAIA,WAA0B,IAAI;AAC9D,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAGhE,EAAAC,YAAU,MAAM;AACd,UAAM,gBAAgB,YAAY;AAChC,UAAI,CAAC,UAAU,YAAY;AACzB,gBAAQ,IAAI,qEAA8D,QAAQ;AAClF,oBAAY,IAAI;AAChB;AAAA,MACF;AAEA,UAAI;AACF,6BAAqB,IAAI;AACzB,gBAAQ,IAAI,8DAAuD,SAAS,UAAU;AAEtF,cAAM,EAAE,cAAAC,cAAa,IAAI,MAAM,OAAO,mBAAmB;AACzD,cAAM,WAAW,MAAMA,cAAa,gBAAgB,SAAS,UAAU;AAEvE,gBAAQ,IAAI,0DAAmD,QAAQ;AAEvE,YAAI,SAAS,WAAW,SAAS,MAAM;AACrC,kBAAQ,IAAI,+DAA0D,SAAS,IAAI;AACnF,sBAAY,SAAS,IAAW;AAAA,QAClC,OAAO;AACL,kBAAQ,MAAM,oDAA+C,SAAS,KAAK;AAC3E,sBAAY,IAAI;AAAA,QAClB;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,MAAM,yDAAoD,KAAK;AACvE,oBAAY,IAAI;AAAA,MAClB,UAAE;AACA,6BAAqB,KAAK;AAAA,MAC5B;AAAA,IACF;AAEA,kBAAc;AAAA,EAChB,GAAG,CAAC,UAAU,UAAU,CAAC;AAEzB,MAAI,CAAC;AAAU,WAAO;AAEtB,QAAMC,eAAa,CAACC,UAAwB;AAC1C,QAAI,CAACA;AAAM,aAAOL,GAAE,aAAa;AACjC,UAAM,UAAU,OAAOK,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAC5D,WAAO,QAAQ,mBAAmB,SAAS;AAAA,MACzC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,sBAAsB,CAAC,aAAsB;AACjD,QAAI,UAAU;AACZ,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAEA,QAAM,uBAAuB,CAAC,aAAsB;AAClD,WAAO,WAAWL,GAAE,eAAe,IAAIA,GAAE,iBAAiB;AAAA,EAC5D;AAEA,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC,YAAY,CAAC;AAAU;AAE5B,QAAI;AACF,oBAAc,IAAI;AAClB,YAAM,SAAS,SAAS,EAAE;AAC1B,2BAAqB,KAAK;AAC1B,mBAAa,KAAK;AAAA,IACpB,SAAS,OAAO;AACd,cAAQ,MAAM,4BAA4B,KAAK;AAAA,IAEjD,UAAE;AACA,oBAAc,KAAK;AAAA,IACrB;AAAA,EACF;AAEA,SACE,gBAAAD,OAAAF,YAAA,EACE;AAAA,oBAAAC,MAAC,UAAO,MAAY,cAClB,0BAAAC,OAAC,iBAAc,WAAU,0CACvB;AAAA,sBAAAD,MAAC,gBACC,0BAAAC,OAAC,SACC;AAAA,wBAAAD,MAAC,eAAY,WAAU,yBACpB,UAAAE,GAAE,iBAAiB,GACtB;AAAA,QACA,gBAAAF,MAAC,qBAAkB,WAAU,8BAC1B,UAAAE,GAAE,kBAAkB,GACvB;AAAA,SACF,GACF;AAAA,MAEA,gBAAAF,MAAC,QACC,0BAAAC,OAAC,eAAY,WAAU,OAErB;AAAA,wBAAAA,OAAC,SAAI,WAAU,yCACf;AAAA,0BAAAA,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,iBAAiB,GAAE;AAAA,YACtF,gBAAAF,MAAC,OAAE,WAAU,6BAA6B,aAAG,SAAS,SAAS,IAAI,SAAS,QAAQ,IAAG;AAAA,aACzF;AAAA,UACA,gBAAAC,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,YACnF,gBAAAF,MAAC,OAAE,WAAU,iBAAiB,mBAAS,OAAM;AAAA,aAC/C;AAAA,UACA,gBAAAC,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,YACnF,gBAAAF,MAAC,OAAE,WAAU,iBAAiB,mBAAS,OAAM;AAAA,aAC/C;AAAA,UACA,gBAAAC,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,oBAAoB,GAAE;AAAA,YACzF,gBAAAF,MAAC,OAAE,WAAU,iBACV,mBAAS,cAAcM,aAAW,SAAS,WAAW,IAAIJ,GAAE,oBAAoB,GACnF;AAAA,aACF;AAAA,UAaA,gBAAAD,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,mBAAmB,GAAE;AAAA,YACxF,gBAAAF,MAAC,OAAE,WAAU,iBAAiB,UAAAM,aAAW,SAAS,SAAS,GAAE;AAAA,aAC/D;AAAA,UACA,gBAAAL,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,oBAAoB,GAAE;AAAA,YACzF,gBAAAF,MAAC,OAAE,WAAU,iBAAiB,UAAAM,aAAW,SAAS,SAAS,GAAE;AAAA,aAC/D;AAAA,UACA,gBAAAL,OAAC,SACC;AAAA,4BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,iBAAiB,GAAE;AAAA,YACtF,gBAAAF,MAAC,OAAE,WAAU,iBACV,8BACC,gBAAAA,MAAC,UAAK,WAAU,iBAAiB,UAAAE,GAAE,gBAAgB,GAAE,IACnD,WACF,SAAS,OAET,gBAAAD,OAAC,UAAK,WAAU,iBACb;AAAA,cAAAC,GAAE,qBAAqB;AAAA,cAAE;AAAA,cAAE,SAAS,aAAa,QAAQ,SAAS,UAAU,MAAM;AAAA,eACrF,GAEJ;AAAA,aACF;AAAA,WACF;AAAA,QAGA,gBAAAD,OAAC,SAAI,WAAU,sBACb;AAAA,0BAAAD,MAAC,QAAG,WAAU,0CAA0C,UAAAE,GAAE,oBAAoB,GAAE;AAAA,UAChF,gBAAAD,OAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,iBACb;AAAA,8BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,sBAAsB,GAAE;AAAA,cAC3F,gBAAAF,MAAC,OAAE,WAAU,iBACV,mBAAS,WAAWE,GAAE,kBAAkB,GAC3C;AAAA,eACF;AAAA,YACA,gBAAAD,OAAC,SACC;AAAA,8BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,aAAa,GAAE;AAAA,cAClF,gBAAAF,MAAC,OAAE,WAAU,iBACV,mBAAS,QAAQE,GAAE,qBAAqB,GAC3C;AAAA,eACF;AAAA,YACA,gBAAAD,OAAC,SACC;AAAA,8BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,cACnF,gBAAAF,MAAC,OAAE,WAAU,iBACV,mBAAS,SAASE,GAAE,qBAAqB,GAC5C;AAAA,eACF;AAAA,YACA,gBAAAD,OAAC,SACC;AAAA,8BAAAD,MAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,gBAAgB,GAAE;AAAA,cACrF,gBAAAF,MAAC,OAAE,WAAU,iBACV,mBAAS,WAAWE,GAAE,qBAAqB,GAC9C;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACA,GACF;AAAA,MAEA,gBAAAD,OAAC,gBAAa,WAAU,wBACtB;AAAA,wBAAAD,MAAC,SACE,sBACC,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,qBAAqB,IAAI;AAAA,YACxC,UAAU;AAAA,YACV,WAAU;AAAA,YAEV;AAAA,8BAAAD,MAACJ,SAAA,EAAO,WAAU,WAAU;AAAA,cAC5B,gBAAAI,MAAC,UAAM,UAAAE,GAAE,wBAAwB,GAAE;AAAA;AAAA;AAAA,QACrC,GAEJ;AAAA,QACA,gBAAAF,MAAC,SAAI,WAAU,kBACb,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,aAAa,KAAK;AAAA,YAEhC,aAAG,eAAe;AAAA;AAAA,QACrB,GACF;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,MAAC,UAAO,MAAM,mBAAmB,cAAc,sBAC7C,0BAAAC,OAAC,iBAAc,WAAU,YACvB;AAAA,sBAAAA,OAAC,gBACC;AAAA,wBAAAD,MAAC,eAAY,WAAU,sCACpB,UAAAE,GAAE,wBAAwB,GAC7B;AAAA,QACA,gBAAAF,MAAC,qBAAkB,WAAU,yBAC1B,UAAAE,GAAE,+BAA+B,EAAE,QAAQ,UAAU,GAAG,UAAU,SAAS,IAAI,UAAU,QAAQ,EAAE,GACtG;AAAA,SACF;AAAA,MACA,gBAAAD,OAAC,gBAAa,WAAU,8BACtB;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,qBAAqB,KAAK;AAAA,YACzC,UAAU;AAAA,YAET,aAAG,gBAAgB;AAAA;AAAA,QACtB;AAAA,QACA,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YACV,WAAU;AAAA,YAEV;AAAA,8BAAAD,MAACJ,SAAA,EAAO,WAAU,WAAU;AAAA,cAC5B,gBAAAI,MAAC,UAAM,uBAAaE,GAAE,UAAU,IAAIA,GAAE,wBAAwB,GAAE;AAAA;AAAA;AAAA,QAClE;AAAA,SACF;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACnRA,SAAS,QAAAM,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AACzD,SAAS,UAAAC,gBAAc;AACvB;AAAA,EAME,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AAGP,SAAS,2BAAAC,gCAA+B;AAqD9B,gBAAAC,QAME,QAAAC,cANF;AAvCH,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,YAAY;AACd,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAElC,QAAMI,eAAa,CAACC,UAAwB;AAC1C,QAAI,CAACA;AAAM,aAAOF,GAAE,aAAa;AACjC,UAAM,UAAU,OAAOE,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAC5D,WAAO,QAAQ,mBAAmB,SAAS;AAAA,MACzC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,gBAAgB,MAAM;AAC1B,QAAI,CAAC;AAAU,aAAOF,GAAE,kBAAkB;AAE1C,UAAM,QAAQ;AAAA,MACZ,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,IACX,EAAE,OAAO,OAAO;AAEhB,WAAO,MAAM,SAAS,IAAI,MAAM,KAAK,IAAI,IAAIA,GAAE,kBAAkB;AAAA,EACnE;AAGA,MAAI,WAAW;AACb,WACE,gBAAAD,OAACV,QAAA,EACC;AAAA,sBAAAS,OAACP,cAAA,EACC,0BAAAO,OAACN,aAAA,EAAU,WAAU,uCAClB,UAAAQ,GAAE,qBAAqB,GAC1B,GACF;AAAA,MACA,gBAAAF,OAACR,eAAA,EACC,0BAAAQ,OAAC,SAAI,WAAU,aACb,0BAAAC,OAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAA,OAAC,SAAI,WAAU,iCAAgC;AAAA,SACjD,GACF,GACF;AAAA,OACF;AAAA,EAEJ;AAGA,MAAI,CAAC,UAAU;AACb,WACE,gBAAAC,OAACV,QAAA,EACC;AAAA,sBAAAS,OAACP,cAAA,EACC,0BAAAO,OAACN,aAAA,EAAU,WAAU,uCAClB,UAAAQ,GAAE,qBAAqB,GAC1B,GACF;AAAA,MACA,gBAAAF,OAACR,eAAA,EACC,0BAAAQ,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,iBAAiB,UAAAE,GAAE,iBAAiB,GAAE,GACrD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAD,OAACV,QAAA,EACC;AAAA,oBAAAU,OAACR,cAAA,EACC;AAAA,sBAAAQ,OAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAACN,aAAA,EAAU,WAAU,uCAClB,UAAAQ,GAAE,qBAAqB,GAC1B;AAAA,QAGC,eACC,gBAAAD,OAAC,SAAI,WAAU,+BACZ;AAAA,oBACC,gBAAAA;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,WAAU;AAAA,cAEV;AAAA,gCAAAK,OAACJ,OAAA,EAAK,WAAU,WAAU;AAAA,gBAC1B,gBAAAI,OAAC,UAAM,UAAAE,GAAE,cAAc,GAAE;AAAA;AAAA;AAAA,UAC3B;AAAA,UAGD,gBACC,gBAAAD;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,WAAU;AAAA,cAEV;AAAA,gCAAAK,OAACH,cAAA,EAAY,WAAU,WAAU;AAAA,gBACjC,gBAAAG,OAAC,UAAM,UAAAE,GAAE,gBAAgB,GAAE;AAAA;AAAA;AAAA,UAC7B;AAAA,UAGD,YACC,gBAAAD;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,SAAS;AAAA,cACT,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,WAAU;AAAA,cAEV;AAAA,gCAAAK,OAACF,SAAA,EAAO,WAAU,WAAU;AAAA,gBAC5B,gBAAAE,OAAC,UAAM,UAAAE,GAAE,gBAAgB,GAAE;AAAA;AAAA;AAAA,UAC7B;AAAA,WAEJ;AAAA,SAEJ;AAAA,MACA,gBAAAF,OAAC,SAAI,WAAU,iCAAgC;AAAA,OACjD;AAAA,IAEA,gBAAAA,OAACR,eAAA,EACC,0BAAAS,OAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,aACb,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,iBAAiB,GAAE;AAAA,UACtF,gBAAAD,OAAC,OAAE,WAAU,uCAAuC;AAAA,qBAAS;AAAA,YAAU;AAAA,YAAE,SAAS;AAAA,aAAS;AAAA,WAC7F;AAAA,QAEA,gBAAAA,OAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,UACnF,gBAAAF,OAAC,OAAE,WAAU,2BAA2B,mBAAS,OAAM;AAAA,WACzD;AAAA,QAEA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,UACnF,gBAAAF,OAAC,OAAE,WAAU,2BAA2B,mBAAS,OAAM;AAAA,WACzD;AAAA,SACF,GACF;AAAA,MAGA,gBAAAA,OAAC,SAAI,WAAU,aACb,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,gBAAgB,GAAE;AAAA,UACrF,gBAAAF,OAAC,OAAE,WAAU,2BAA2B,wBAAc,GAAE;AAAA,WAC1D;AAAA,QAEA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,mBAAmB,GAAE;AAAA,UACxF,gBAAAF,OAAC,OAAE,WAAU,2BAA2B,UAAAG,aAAW,SAAS,SAAS,GAAE;AAAA,WACzE;AAAA,SACF,GACF;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACnMA,SAAS,QAAAE,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AAqD/C,gBAAAC,QAME,QAAAC,cANF;AA7BH,IAAM,4BAAsE,CAAC;AAAA,EAClF;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AACJ,QAAMC,eAAa,CAACC,UAAwB;AAC1C,QAAI,CAACA;AAAM,aAAO;AAClB,UAAM,UAAU,OAAOA,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAC5D,WAAO,QAAQ,mBAAmB,SAAS;AAAA,MACzC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAGA,MAAI,WAAW;AACb,WACE,gBAAAH,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EACC,0BAAAE,OAACD,aAAA,EAAU,WAAU,uCAAsC,qCAE3D,GACF;AAAA,MACA,gBAAAC,OAACH,eAAA,EACC,0BAAAG,OAAC,SAAI,WAAU,aACb,0BAAAC,OAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,QACpD,gBAAAA,OAAC,SAAI,WAAU,iCAAgC;AAAA,SACjD,GACF,GACF;AAAA,OACF;AAAA,EAEJ;AAGA,MAAI,CAAC,UAAU;AACb,WACE,gBAAAC,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EACC,0BAAAE,OAACD,aAAA,EAAU,WAAU,uCAAsC,qCAE3D,GACF;AAAA,MACA,gBAAAC,OAACH,eAAA,EACC,0BAAAG,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,iBAAgB,wCAA0B,GACzD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,oBAAAA,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EAAW,WAAU,6DACpB,0BAAAE,OAACD,aAAA,EAAU,WAAU,wDAAuD,0BAE5E,GACF;AAAA,MACA,gBAAAE,OAACJ,eAAA,EACC;AAAA,wBAAAG,OAAC,SAAI,WAAU,oDACX,uBAAY,eAAe,GAAG,eAAe,GACjD;AAAA,QACA,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,6BAExD;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAC,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EAAW,WAAU,6DACpB,0BAAAE,OAACD,aAAA,EAAU,WAAU,wDAAuD,2BAE5E,GACF;AAAA,MACA,gBAAAE,OAACJ,eAAA,EACC;AAAA,wBAAAG,OAAC,SAAI,WAAU,yDACZ,UAAAI,iBAAe,YAAY,gBAAgB,CAAC,GAC/C;AAAA,QACA,gBAAAJ,OAAC,OAAE,WAAU,4CAA2C,8BAExD;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AC5HA,SAAS,UAAAK,gBAAc;AA4BnB,gBAAAC,QAGI,QAAAC,cAHJ;AAjBG,IAAM,qBAAwD,CAAC;AAAA,EACpE;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AACF,MAAM;AACJ,QAAM,aAAa,MAAM;AACvB,QAAI,QAAQ;AACV,aAAO;AAAA,IACT,WAAW,SAAS;AAClB,aAAO,SAAS,OAAO;AAAA,IACzB;AAAA,EACF;AAEA,SACE,gBAAAD,OAAC,SAAI,WAAU,QAEX,qBAAU,YACV,gBAAAC;AAAA,IAACF;AAAA,IAAA;AAAA,MACC,SAAS;AAAA,MACT,SAAQ;AAAA,MACR,WAAU;AAAA,MACX;AAAA;AAAA,QACI;AAAA;AAAA;AAAA,EACL,GAEJ;AAEJ;;;AC1CA,SAAgB,YAAAG,kBAAgB;AAShC,SAAS,2BAAAC,gCAA+B;AAgDlC,SAEI,OAAAC,QAFJ,QAAAC,cAAA;AAvCC,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAClC,QAAM,CAAC,cAAc,eAAe,IAAII,WAAS,KAAK;AAEtD,QAAM,aAAa,OAAO,iBAAsC;AAC9D,QAAI;AACF,sBAAgB,IAAI;AAIpB,UAAI,mBAAmB;AACrB,cAAM,kBAAkB,YAAY;AAAA,MACtC;AAGA,mBAAa,KAAK;AAAA,IAEpB,SAAS,OAAO;AACd,cAAQ,MAAM,6CAAwC,KAAK;AAC3D,UAAI,SAAS;AACX,gBAAQ,iBAAiB,QAAQ,MAAM,UAAU,2BAA2B;AAAA,MAC9E;AAAA,IACF,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAH,OAAC,UAAO,MAAY,cAClB,0BAAAC,OAAC,iBAAc,WAAU,8CACvB;AAAA,oBAAAD,OAAC,gBAAa,WAAU,sCACtB,0BAAAA,OAAC,eAAY,WAAU,uCACpB,UAAAE,GAAE,gBAAgB,GACrB,GACF;AAAA,IAEA,gBAAAF,OAAC,SAAI,WAAU,OACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR,UAAU;AAAA,QACV;AAAA;AAAA,IACF,GACF;AAAA,KACF,GACF;AAEJ;;;AC1EA;AAAA,EACE,YAAAI;AAAA,EACA,aAAAC;AAAA,EACA,cAAAC;AAAA,EACA,uBAAAC;AAAA,OACK;AACP,SAAS,QAAAC,OAAM,KAAAC,UAAS;AACxB,SAAS,UAAAC,gBAAc;AACvB,SAAS,SAAAC,eAAa;AACtB,SAAS,SAAAC,cAAa;AACtB,SAAS,QAAAC,QAAM,eAAAC,qBAAmB;AAElC;AAAA,EACE,2BAAAC;AAAA,EACA,yBAAAC;AAAA,OACK;AA6MS,gBAAAC,QAOA,QAAAC,cAPA;AA/LT,IAAM,mBAAmBZ;AAAA,EAI9B,CACE;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd,cAAc;AAAA,EAChB,GACA,QACG;AACH,UAAMa,KAAIJ,yBAAwB;AAClC,UAAM,KAAKC,wBAAsB;AAEjC,UAAM,CAAC,UAAU,WAAW,IAAIZ,WAAS;AAAA,MACvC,WAAW,SAAS;AAAA,MACpB,UAAU,SAAS;AAAA,MACnB,OAAO,SAAS;AAAA,MAChB,OAAO,SAAS;AAAA,MAChB,aAAc,SAAiB,eAAe;AAAA,MAC9C,SAAS,SAAS,WAAW;AAAA,MAC7B,MAAM,SAAS,QAAQ;AAAA,MACvB,OAAO,SAAS,SAAS;AAAA,MACzB,SAAS,SAAS,WAAW;AAAA,MAC7B,SAAS,SAAS,WAAW;AAAA;AAAA,MAC7B,QAAS,SAAiB;AAAA,MAC1B,iBAAkB,SAAiB;AAAA,IACrC,CAAC;AAED,UAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,UAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAAS,KAAK;AACtE,UAAM,CAAC,cAAc,eAAe,IAAIA,WAAwB,IAAI;AAGpE,UAAM,eACJ,yBAAyB,SACrB,uBACA;AAGN,IAAAC,YAAU,MAAM;AACd,kBAAY;AAAA,QACV,WAAW,SAAS;AAAA,QACpB,UAAU,SAAS;AAAA,QACnB,OAAO,SAAS;AAAA,QAChB,OAAO,SAAS;AAAA,QAChB,aAAc,SAAiB,eAAe;AAAA,QAC9C,SAAS,SAAS,WAAW;AAAA,QAC7B,MAAM,SAAS,QAAQ;AAAA,QACvB,OAAO,SAAS,SAAS;AAAA,QACzB,SAAS,SAAS,WAAW;AAAA,QAC7B,SAAS,SAAS,WAAW;AAAA;AAAA,QAC7B,QAAS,SAAiB;AAAA,QAC1B,iBAAkB,SAAiB;AAAA,MACrC,CAAC;AAAA,IACH,GAAG,CAAC,QAAQ,CAAC;AAEb,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AAEA,UAAM,oBAAoB,CAAC,OAAe,UAAkB;AAC1D,cAAQ,IAAI,8CAAuC,EAAE,OAAO,MAAM,CAAC;AACnE,kBAAY,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAGnD,UAAI,OAAO,KAAK,GAAG;AACjB,kBAAU,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,MAChD;AAGA,UAAI,cAAc;AAChB,wBAAgB,IAAI;AAAA,MACtB;AAAA,IACF;AAEA,UAAM,eAAe,MAAe;AAClC,YAAM,YAAoC,CAAC;AAG3C,UAAI,CAAC,SAAS,UAAU,KAAK,GAAG;AAC9B,kBAAU,YAAYc,GAAE,8BAA8B;AAAA,MACxD,WAAW,SAAS,UAAU,KAAK,EAAE,SAAS,GAAG;AAC/C,kBAAU,YAAYA,GAAE,+BAA+B;AAAA,MACzD;AAGA,UAAI,CAAC,SAAS,SAAS,KAAK,GAAG;AAC7B,kBAAU,WAAWA,GAAE,6BAA6B;AAAA,MACtD,WAAW,SAAS,SAAS,KAAK,EAAE,SAAS,GAAG;AAC9C,kBAAU,WAAWA,GAAE,8BAA8B;AAAA,MACvD;AAGA,UACE,SAAS,SACT,SAAS,MAAM,KAAK,KACpB,CAAC,eAAe,KAAK,SAAS,KAAK,GACnC;AACA,kBAAU,QAAQA,GAAE,yBAAyB;AAAA,MAC/C;AAGA,UAAI,CAAC,SAAS,SAAS,CAAC,SAAS,MAAM,KAAK,GAAG;AAC7C,kBAAU,QAAQA,GAAE,0BAA0B;AAAA,MAChD,WAAW,CAAC,kBAAkB,KAAK,SAAS,MAAM,KAAK,CAAC,GAAG;AACzD,kBAAU,QAAQA,GAAE,yBAAyB;AAAA,MAC/C,WAAW,SAAS,MAAM,KAAK,EAAE,SAAS,GAAG;AAC3C,kBAAU,QAAQA,GAAE,2BAA2B;AAAA,MACjD;AAEA,gBAAU,SAAS;AACnB,aAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,IAC3C;AAEA,UAAM,eAAe,OAAOC,OAAuB;AACjD,MAAAA,GAAE,eAAe;AAEjB,cAAQ,IAAI,4CAAqC;AAEjD,UAAI,CAAC,aAAa,GAAG;AACnB,gBAAQ,IAAI,4CAAuC;AACnD;AAAA,MACF;AAEA,UAAI;AACF,gCAAwB,IAAI;AAC5B,wBAAgB,IAAI;AAGpB,cAAM,gBAAqC,EAAE,IAAI,SAAS,GAAG;AAC7D,eAAO,KAAK,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AACrC,gBAAM,QAAQ;AACd,cAAI,SAAS,KAAK,MAAM,SAAS,KAAuB,GAAG;AACzD,YAAC,cAAsB,KAAK,IAAI,SAAS,KAAK;AAAA,UAChD;AAAA,QACF,CAAC;AAGD,YAAI,OAAO,KAAK,aAAa,EAAE,WAAW,GAAG;AAC3C,kBAAQ,IAAI,iDAA0C;AACtD;AAAA,QACF;AAEA,gBAAQ;AAAA,UACN;AAAA,UACA;AAAA,QACF;AAEA,cAAM,OAAO,aAAa;AAE1B,gBAAQ,IAAI,wDAAmD;AAAA,MACjE,SAAS,OAAO;AACd,gBAAQ,MAAM,qDAAgD,KAAK;AACnE,cAAMC,gBACJ,iBAAiB,QACb,MAAM,UACN;AACN,wBAAgBA,aAAY;AAAA,MAC9B,UAAE;AACA,gCAAwB,KAAK;AAAA,MAC/B;AAAA,IACF;AAEA,UAAM,eAAe,MAAM;AACzB,UAAI,UAAU;AACZ,iBAAS;AAAA,MACX;AAAA,IACF;AAEA,IAAAd,qBAAoB,KAAK,OAAO;AAAA,MAC9B,YAAY,MAAM;AAEhB,cAAM,iBAAiB;AAAA,UACrB,gBAAgB,MAAM;AAAA,UAAC;AAAA,QACzB;AACA,qBAAa,cAAc;AAAA,MAC7B;AAAA,IACF,EAAE;AAEF,WACE,gBAAAU,OAAC,UAAK,UAAU,cACd,0BAAAA,OAACJ,QAAA,EACC,0BAAAK,OAACJ,eAAA,EAAY,WAAU,iBAEpB;AAAA,sBACC,gBAAAG,OAAC,SAAI,WAAU,kDACb,0BAAAA,OAAC,OAAE,WAAU,wBAAwB,wBAAa,GACpD;AAAA,MAIF,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAA,OAACN,QAAA,EAAM,SAAQ,aAAa;AAAA,YAAAO,GAAE,kBAAkB;AAAA,YAAE;AAAA,aAAE;AAAA,UACpD,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACS,OACT,kBAAkB,aAAaA,GAAE,OAAO,KAAK;AAAA,cAE/C,aAAaD,GAAE,6BAA6B;AAAA,cAC5C,WAAW,OAAO,YAAY,mBAAmB;AAAA;AAAA,UACnD;AAAA,UACC,OAAO,aACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,WAE1D;AAAA,QAEA,gBAAAC,OAAC,SACC;AAAA,0BAAAA,OAACN,QAAA,EAAM,SAAQ,YAAY;AAAA,YAAAO,GAAE,iBAAiB;AAAA,YAAE;AAAA,aAAE;AAAA,UAClD,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACS,OACT,kBAAkB,YAAYA,GAAE,OAAO,KAAK;AAAA,cAE9C,aAAaD,GAAE,4BAA4B;AAAA,cAC3C,WAAW,OAAO,WAAW,mBAAmB;AAAA;AAAA,UAClD;AAAA,UACC,OAAO,YACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,UAAS;AAAA,WAEzD;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,OAACL,QAAA,EAAM,SAAQ,SAAS,UAAAO,GAAE,cAAc,GAAE;AAAA,UAC1C,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS,SAAS;AAAA,cACzB,UAAU,CAACS,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,cAC1D,aAAaD,GAAE,yBAAyB;AAAA,cACxC,WAAW,OAAO,QAAQ,mBAAmB;AAAA;AAAA,UAC/C;AAAA,UACC,OAAO,SACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,WAEtD;AAAA,QAEA,gBAAAC,OAAC,SACC;AAAA,0BAAAD,OAACL,QAAA,EAAM,SAAQ,SAAS,UAAAO,GAAE,cAAc,GAAE;AAAA,UAC1C,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS,SAAS;AAAA,cACzB,UAAU,CAACS,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,cAC1D,aAAaD,GAAE,yBAAyB;AAAA,cACxC,WAAW,OAAO,QAAQ,mBAAmB;AAAA;AAAA,UAC/C;AAAA,UACC,OAAO,SACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,WAEtD;AAAA,SACF;AAAA,MAGA,gBAAAC,OAAC,SACC;AAAA,wBAAAD,OAACL,QAAA,EAAM,SAAQ,eAAe,UAAAO,GAAE,oBAAoB,GAAE;AAAA,QACtD,gBAAAF;AAAA,UAACN;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACS,OACT,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,YAEjD,aAAaD,GAAE,+BAA+B;AAAA;AAAA,QAChD;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SACC;AAAA,wBAAAD,OAACL,QAAA,EAAM,SAAQ,WAAW,UAAAO,GAAE,sBAAsB,GAAE;AAAA,QACpD,gBAAAF;AAAA,UAACN;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACS,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,YAC5D,aAAaD,GAAE,iCAAiC;AAAA;AAAA,QAClD;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,OAAC,SACC;AAAA,0BAAAD,OAACL,QAAA,EAAM,SAAQ,QAAQ,UAAAO,GAAE,aAAa,GAAE;AAAA,UACxC,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACS,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,cACzD,aAAaD,GAAE,wBAAwB;AAAA;AAAA,UACzC;AAAA,WACF;AAAA,QAEA,gBAAAD,OAAC,SACC;AAAA,0BAAAD,OAACL,QAAA,EAAM,SAAQ,SAAS,UAAAO,GAAE,cAAc,GAAE;AAAA,UAC1C,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACS,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,cAC1D,aAAaD,GAAE,yBAAyB;AAAA;AAAA,UAC1C;AAAA,WACF;AAAA,QAEA,gBAAAD,OAAC,SACC;AAAA,0BAAAD,OAACL,QAAA,EAAM,SAAQ,WAAW,UAAAO,GAAE,gBAAgB,GAAE;AAAA,UAC9C,gBAAAF;AAAA,YAACN;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACS,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,cAC5D,aAAaD,GAAE,2BAA2B;AAAA;AAAA,UAC5C;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,4CACb;AAAA,wBAAAA;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YAEV;AAAA,8BAAAO,OAACR,IAAA,EAAE,WAAU,gBAAe;AAAA,cAC3B,GAAG,gBAAgB;AAAA;AAAA;AAAA,QACtB;AAAA,QAEA,gBAAAS,OAACR,UAAA,EAAO,MAAK,UAAS,UAAU,cAC9B;AAAA,0BAAAO,OAACT,OAAA,EAAK,WAAU,gBAAe;AAAA,UAC9B,eAAeW,GAAE,UAAU,IAAIA,GAAE,gBAAgB;AAAA,WACpD;AAAA,SACF;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AACF;AAEA,iBAAiB,cAAc;;;AC5X/B,SAAgB,YAAAG,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,QAAAC,OAAM,KAAAC,UAAS;AACxB,SAAS,UAAAC,gBAAc;AACvB,SAAS,SAAAC,eAAa;AACtB,SAAS,SAAAC,cAAa;AACtB,SAAS,UAAAC,SAAQ,iBAAAC,gBAAe,cAAAC,aAAY,iBAAAC,gBAAe,eAAAC,oBAAmB;AAC9E,SAAS,QAAAC,QAAM,eAAAC,qBAAmB;AAoJtB,SACE,OAAAC,QADF,QAAAC,cAAA;AAxIL,IAAM,eAA4C,CAAC;AAAA,EACxD,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AACF,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAIf,WAAS;AAAA,IACvC,WAAW;AAAA,IACX,UAAU;AAAA,IACV,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,SAAS;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,aAAa;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,CAAC;AAED,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AACtD,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAG/D,EAAAC,YAAU,MAAM;AACd,QAAI,SAAS,UAAU,UAAU;AAC/B,kBAAY;AAAA,QACV,WAAW,SAAS,aAAa;AAAA,QACjC,UAAU,SAAS,YAAY;AAAA,QAC/B,OAAO,SAAS,SAAS;AAAA,QACzB,OAAO,SAAS,SAAS;AAAA,QACzB,aAAc,SAAiB,eAAe;AAAA,QAC9C,SAAS,SAAS,WAAW;AAAA,QAC7B,MAAM,SAAS,QAAQ;AAAA,QACvB,OAAO,SAAS,SAAS;AAAA,QACzB,SAAS,SAAS,WAAW;AAAA,QAC7B,SAAS,SAAS,WAAW;AAAA,QAC7B,aAAa,SAAS,cAAc,IAAI,KAAK,SAAS,WAAW,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAAA,QACjG,UAAU,SAAS,YAAY;AAAA,QAC/B,QAAQ,SAAS,UAAU;AAAA,QAC3B,OAAO,SAAS,SAAS;AAAA,MAC3B,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,MAAM,QAAQ,CAAC;AAEnB,QAAM,oBAAoB,CAAC,OAAe,UAAkB;AAC1D,gBAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAEjD,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,IAC9C;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,UAAU,KAAK,GAAG;AAC9B,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,CAAC,SAAS,SAAS,KAAK,GAAG;AAC7B,gBAAU,WAAW;AAAA,IACvB;AAEA,QAAI,CAAC,SAAS,MAAM,KAAK,GAAG;AAC1B,gBAAU,QAAQ;AAAA,IACpB;AAEA,QAAI,SAAS,SAAS,SAAS,MAAM,KAAK,GAAG;AAC3C,YAAM,aAAa;AACnB,UAAI,CAAC,WAAW,KAAK,SAAS,KAAK,GAAG;AACpC,kBAAU,QAAQ;AAAA,MACpB;AAAA,IACF;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOe,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,oBAAgB,IAAI;AACpB,QAAI;AACF,YAAM,eAAe;AAAA,QACnB,GAAI,SAAS,UAAU,WAAW,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC;AAAA,QACzD,WAAW,SAAS,UAAU,KAAK;AAAA,QACnC,UAAU,SAAS,SAAS,KAAK;AAAA,QACjC,OAAO,SAAS,MAAM,KAAK,KAAK;AAAA,QAChC,OAAO,SAAS,MAAM,KAAK;AAAA,QAC3B,aAAa,SAAS,YAAY,KAAK,KAAK;AAAA,QAC5C,SAAS,SAAS,QAAQ,KAAK,KAAK;AAAA,QACpC,MAAM,SAAS,KAAK,KAAK,KAAK;AAAA,QAC9B,OAAO,SAAS,MAAM,KAAK,KAAK;AAAA,QAChC,SAAS,SAAS,QAAQ,KAAK,KAAK;AAAA,QACpC,SAAS,SAAS,QAAQ,KAAK,KAAK;AAAA,QACpC,aAAa,SAAS,cAAc,IAAI,KAAK,SAAS,WAAW,IAAI;AAAA,QACrE,UAAU,SAAS,SAAS,KAAK,KAAK;AAAA,QACtC,QAAQ,SAAS;AAAA,QACjB,OAAO,SAAS,MAAM,KAAK,KAAK;AAAA;AAAA;AAAA,MAGlC;AAEA,YAAM,OAAO,YAAY;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,0BAA0B,KAAK;AAAA,IAE/C,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX;AAAA,EACF;AAEA,QAAM,mBAAmB,gBAAgB;AAEzC,SACE,gBAAAD,OAAC,UAAK,UAAU,cAAc,WAAU,aACtC;AAAA,oBAAAD,OAACF,QAAA,EACC,0BAAAG,OAACF,eAAA,EAAY,WAAU,QACrB;AAAA,sBAAAE,OAAC,SAAI,WAAU,yCAEb;AAAA,wBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,aAAY,0BAAY;AAAA,UACvC,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,aAAaA,GAAE,OAAO,KAAK;AAAA,cAC9D,aAAY;AAAA,cACZ,WAAW,OAAO,YAAY,mBAAmB;AAAA,cACjD,UAAU;AAAA;AAAA,UACZ;AAAA,UACC,OAAO,aACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,WAE1D;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,YAAW,yBAAW;AAAA,UACrC,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,YAAYA,GAAE,OAAO,KAAK;AAAA,cAC7D,aAAY;AAAA,cACZ,WAAW,OAAO,WAAW,mBAAmB;AAAA,cAChD,UAAU;AAAA;AAAA,UACZ;AAAA,UACC,OAAO,YACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,UAAS;AAAA,WAEzD;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,SAAQ,mBAAK;AAAA,UAC5B,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,cAC1D,aAAY;AAAA,cACZ,WAAW,OAAO,QAAQ,mBAAmB;AAAA,cAC7C,UAAU;AAAA;AAAA,UACZ;AAAA,UACC,OAAO,SACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,WAEtD;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,SAAQ,qBAAO;AAAA,UAC9B,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,cAC1D,aAAY;AAAA,cACZ,WAAW,OAAO,QAAQ,mBAAmB;AAAA,cAC7C,UAAU;AAAA;AAAA,UACZ;AAAA,UACC,OAAO,SACN,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,WAEtD;AAAA,QAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,eAAc,0BAAY;AAAA,UACzC,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,cAChE,aAAY;AAAA,cACZ,UAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,QAGA,gBAAAD,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,eAAc,2BAAa;AAAA,UAC1C,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,cAChE,UAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,QAGA,gBAAAD,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,UAAS,qBAAO;AAAA,UAC/B,gBAAAS;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,eAAe,CAAC,UAAU,kBAAkB,UAAU,KAAK;AAAA,cAC3D,UAAU;AAAA,cAEV;AAAA,gCAAAO,OAACJ,gBAAA,EACC,0BAAAI,OAACH,cAAA,EAAY,aAAY,kBAAiB,GAC5C;AAAA,gBACA,gBAAAI,OAACP,gBAAA,EACC;AAAA,kCAAAM,OAACL,aAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,kBACrC,gBAAAK,OAACL,aAAA,EAAW,OAAM,mBAAkB,8BAAgB;AAAA,kBACpD,gBAAAK,OAACL,aAAA,EAAW,OAAM,eAAc,yBAAW;AAAA,kBAC3C,gBAAAK,OAACL,aAAA,EAAW,OAAM,SAAQ,mBAAK;AAAA,mBACjC;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAGA,gBAAAM,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,YAAW,uBAAS;AAAA,UACnC,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,YAAYA,GAAE,OAAO,KAAK;AAAA,cAC7D,aAAY;AAAA,cACZ,UAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAD,OAACR,QAAA,EAAM,SAAQ,WAAU,qBAAO;AAAA,QAChC,gBAAAQ;AAAA,UAACT;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,SAAS;AAAA,YAChB,UAAU,CAACW,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,YAC5D,aAAY;AAAA,YACZ,UAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,MAEA,gBAAAD,OAAC,SAAI,WAAU,8CAEb;AAAA,wBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,QAAO,kBAAI;AAAA,UAC1B,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,cACzD,aAAY;AAAA,cACZ,UAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,QAGA,gBAAAD,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,SAAQ,mBAAK;AAAA,UAC5B,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,cAC1D,aAAY;AAAA,cACZ,UAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,QAGA,gBAAAD,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,WAAU,sBAAQ;AAAA,UACjC,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO,SAAS;AAAA,cAChB,UAAU,CAACW,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,cAC5D,aAAY;AAAA,cACZ,UAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAD,OAACR,QAAA,EAAM,SAAQ,WAAU,qBAAO;AAAA,QAChC,gBAAAQ;AAAA,UAACT;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,SAAS;AAAA,YAChB,UAAU,CAACW,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,YAC5D,aAAY;AAAA,YACZ,UAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,kBACb;AAAA,wBAAAD,OAACR,QAAA,EAAM,SAAQ,SAAQ,mBAAK;AAAA,QAC5B,gBAAAQ;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,SAAS;AAAA,YAChB,UAAU,CAACE,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,YAC1D,aAAY;AAAA,YACZ,WAAU;AAAA,YACV,MAAM;AAAA,YACN,UAAU;AAAA;AAAA,QACZ;AAAA,SACF;AAAA,OAEF,GACF;AAAA,IAGA,gBAAAD,OAAC,SAAI,WAAU,8BACb;AAAA,sBAAAA;AAAA,QAACX;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAEV;AAAA,4BAAAU,OAACX,IAAA,EAAE,WAAU,gBAAe;AAAA,YAAE;AAAA;AAAA;AAAA,MAEhC;AAAA,MACA,gBAAAY;AAAA,QAACX;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU;AAAA,UAEV;AAAA,4BAAAU,OAACZ,OAAA,EAAK,WAAU,gBAAe;AAAA,YAC9B,mBAAmB,cAAc,SAAS,WAAW,oBAAoB;AAAA;AAAA;AAAA,MAC5E;AAAA,OACF;AAAA,KACF;AAEJ;;;ACvXA,SAAgB,YAAAe,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,aAAAC,kBAAiB;AAG1B,SAAS,QAAAC,OAAa,UAAAC,eAAc;AAoG1B,SAME,OAAAC,QANF,QAAAC,cAAA;AAxFH,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAyB;AACvB,QAAM,CAAC,iBAAiB,kBAAkB,IAAIC,WAAS,KAAK;AAC5D,QAAM,SAASC,WAAU;AAGzB,EAAAC,YAAU,MAAM;AACd,UAAM,uBAAuB,CAAC,UAAuB;AACnD,YAAM,EAAE,QAAQ,SAAS,IAAI,MAAM;AAEnC,UAAI,CAAC;AAAU;AAEf,cAAQ,QAAQ;AAAA,QACd,KAAK;AAEH,cAAI,SAAS,IAAI;AACf,mBAAO,KAAK,cAAc,SAAS,EAAE,EAAE;AAAA,UACzC,OAAO;AACL,oBAAQ,MAAM,uCAAuC,QAAQ;AAAA,UAC/D;AACA;AAAA,QAEF,KAAK;AAEH,cAAI,SAAS,IAAI;AACf,mBAAO,KAAK,cAAc,SAAS,EAAE,OAAO;AAAA,UAC9C,OAAO;AACL,oBAAQ,MAAM,uCAAuC,QAAQ;AAAA,UAC/D;AACA;AAAA,QAEF;AACE,kBAAQ,IAAI,4BAA4B,MAAM;AAAA,MAClD;AAAA,IACF;AAEA,UAAM,yBAAyB,CAAC,UAAuB;AACrD,YAAM,EAAE,YAAY,SAAS,IAAI,MAAM;AAEvC,UAAI,YAAY,SAAS,IAAI;AAE3B,eAAO,KAAK,cAAc,SAAS,EAAE,SAAS;AAAA,MAChD,WAAW,cAAc;AAEvB,qBAAa,UAAU;AAAA,MACzB;AAAA,IACF;AAEA,WAAO,iBAAiB,mBAAmB,oBAAqC;AAChF,WAAO,iBAAiB,wBAAwB,sBAAuC;AAEvF,WAAO,MAAM;AACX,aAAO,oBAAoB,mBAAmB,oBAAqC;AACnF,aAAO,oBAAoB,wBAAwB,sBAAuC;AAAA,IAC5F;AAAA,EACF,GAAG,CAAC,QAAQ,YAAY,CAAC;AAEzB,QAAM,oBAAoB,MAAM;AAC9B,uBAAmB,IAAI;AAAA,EACzB;AAEA,QAAM,UAAU;AAAA,IACd;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAMC;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,MAAMC;AAAA,MACN,SAAS,MAAM,SAAS,gBAAgB,CAAC;AAAA,MACzC,SAAS;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAL,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAD,OAAC,SAAI,WAAU,wBACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAC;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,OAAO;AAAA,QAChB,SAAS,OAAO;AAAA,QAChB,WAAU;AAAA,QAEV;AAAA,0BAAAD,OAAC,OAAO,MAAP,EAAY,WAAU,WAAU;AAAA,UACjC,gBAAAA,OAAC,UAAM,iBAAO,OAAM;AAAA;AAAA;AAAA,MANf,OAAO;AAAA,IAOd,CACD,GACH;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd;AAAA,QACA;AAAA;AAAA,IACF;AAAA,KACF;AAEJ;;;AC9HA,SAAS,QAAAO,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AA2B7C,gBAAAC,QAIF,QAAAC,cAJE;AAnBL,SAAS,eAAe,EAAE,gBAAgB,MAAM,GAAwB;AAC7E,QAAMC,mBAAiB,CAAC,WAA2B;AACjD,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAGA,QAAM,kBAAkB,MAAM,aAAa;AAC3C,QAAM,eAAe,MAAM,aAAa,OAAO,CAAC,KAAK,aAAa,MAAM,SAAS,YAAY,CAAC;AAE9F,SACE,gBAAAF,OAAC,SAAI,WAAU,aACb,0BAAAC,OAAC,SAAI,WAAU,wDACb;AAAA,oBAAAA,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EAAW,WAAU,6DACpB,0BAAAE,OAACD,aAAA,EAAU,WAAU,wDAAuD,6BAE5E,GACF;AAAA,MACA,gBAAAE,OAACJ,eAAA,EACC;AAAA,wBAAAG,OAAC,SAAI,WAAU,oDACZ,gBAAM,eAAe,eAAe,GACvC;AAAA,QACA,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,gCAExD;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAC,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EAAW,WAAU,6DACpB,0BAAAE,OAACD,aAAA,EAAU,WAAU,wDAAuD,8BAE5E,GACF;AAAA,MACA,gBAAAE,OAACJ,eAAA,EACC;AAAA,wBAAAG,OAAC,SAAI,WAAU,yDACZ,0BAAgB,eAAe,GAClC;AAAA,QACA,gBAAAC,OAAC,OAAE,WAAU,4CACR;AAAA,6BAAkB,MAAM,iBAAkB,KAAK,QAAQ,CAAC;AAAA,UAAE;AAAA,WAC/D;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAA,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EAAW,WAAU,6DACpB,0BAAAE,OAACD,aAAA,EAAU,WAAU,wDAAuD,4BAE5E,GACF;AAAA,MACA,gBAAAE,OAACJ,eAAA,EACC;AAAA,wBAAAG,OAAC,SAAI,WAAU,uDACZ,gBAAM,sBAAsB,eAAe,GAC9C;AAAA,QACA,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,4BAExD;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAC,OAACL,QAAA,EACC;AAAA,sBAAAI,OAACF,cAAA,EAAW,WAAU,6DACpB,0BAAAE,OAACD,aAAA,EAAU,WAAU,wDAAuD,2BAE5E,GACF;AAAA,MACA,gBAAAE,OAACJ,eAAA,EACC;AAAA,wBAAAG,OAAC,SAAI,WAAU,oDACZ,UAAAE,iBAAe,YAAY,GAC9B;AAAA,QACA,gBAAAF,OAAC,OAAE,WAAU,4CAA2C,gCAExD;AAAA,SACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC3FA,SAAS,SAAAG,SAAO,UAAAC,gBAAc;AAE9B,SAAS,2BAAAC,0BAAyB,yBAAAC,+BAA6B;AAwB3D,qBAAAC,YAIM,OAAAC,QADF,QAAAC,cAHJ;AATG,SAAS,eAAe,EAAE,SAAS,iBAAiB,gBAAgB,eAAe,GAAwB;AAChH,QAAMC,KAAIL,yBAAwB;AAClC,QAAM,KAAKC,wBAAsB;AAEjC,QAAM,oBAAoB,CAACK,OAA2C;AACpE,mBAAeA,GAAE,OAAO,KAAK;AAAA,EAC/B;AAEA,SACE,gBAAAF,OAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,OAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,aAAaO,GAAE,oBAAoB;AAAA,UACnC,OAAO,QAAQ,UAAU;AAAA,UACzB,UAAU;AAAA,UACV,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGC,QAAQ,UAAU,kBACjB,gBAAAA;AAAA,MAACJ;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QAET,aAAG,eAAe;AAAA;AAAA,IACrB;AAAA,KAEJ;AAEJ;;;ACjEA,SAAS,QAAAQ,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AACzD,SAAS,SAAAC,cAAa;AAkCd,SACE,OAAAC,QADF,QAAAC,cAAA;AA3BD,SAAS,cAAc,EAAE,MAAM,GAAuB;AAC3D,QAAMC,mBAAiB,CAAC,WAA2B;AACjD,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAMC,eAAa,CAAC,eAA+B;AACjD,WAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,MACtD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAGA,QAAM,kBAAkB,MAAM,aAAa;AAC3C,QAAM,eAAe,MAAM,aAAa,OAAO,CAAC,KAAK,aAAa,MAAM,SAAS,YAAY,CAAC;AAC9F,QAAM,oBAAoB,kBAAkB,IAAI,eAAe,kBAAkB;AAEjF,SACE,gBAAAF,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAACN,QAAA,EACC;AAAA,sBAAAM,OAACJ,cAAA,EACC;AAAA,wBAAAG,OAACF,aAAA,EAAU,2BAAa;AAAA,QACxB,gBAAAE,OAAC,OAAE,WAAU,4CAA2C,mDAExD;AAAA,SACF;AAAA,MACA,gBAAAA,OAACJ,eAAA,EACC,0BAAAK,OAAC,SAAI,WAAU,aACZ;AAAA,cAAM,aAAa,IAAI,CAAC,UAAU,UACjC,gBAAAA,OAAC,SAAsB,WAAU,gGAC/B;AAAA,0BAAAA,OAAC,SAAI,WAAU,+BACb;AAAA,4BAAAA,OAAC,SAAI,WAAW,2EACd,UAAU,IAAI,kCACd,UAAU,IAAI,8BACd,UAAU,IAAI,kCACd,2BACF,IAAI;AAAA;AAAA,cACA,QAAQ;AAAA,eACZ;AAAA,YACA,gBAAAA,OAAC,SACC;AAAA,8BAAAD,OAAC,SAAI,WAAU,6CACZ,mBAAS,MACZ;AAAA,cACA,gBAAAC,OAAC,SAAI,WAAU,4CACZ;AAAA,yBAAS;AAAA,gBAAW;AAAA,iBACvB;AAAA,eACF;AAAA,aACF;AAAA,UAEA,gBAAAA,OAAC,SAAI,WAAU,cACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,6CACZ,UAAAE,iBAAe,SAAS,UAAU,GACrC;AAAA,YACA,gBAAAD,OAAC,SAAI,WAAU,4CAA2C;AAAA;AAAA,cAC1C,SAAS;AAAA,eACzB;AAAA,aACF;AAAA,aA3BQ,SAAS,EA4BnB,CACD;AAAA,QAEA,MAAM,aAAa,WAAW,KAC7B,gBAAAD,OAAC,SAAI,WAAU,qDACb,0BAAAA,OAAC,OAAE,wCAA0B,GAC/B;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAACN,QAAA,EACC;AAAA,wBAAAK,OAACH,cAAA,EACC,0BAAAG,OAACF,aAAA,EAAU,mCAAqB,GAClC;AAAA,QACA,gBAAAE,OAACJ,eAAA,EACC,0BAAAK,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,4CAA2C,oBAAM;AAAA,YACjE,gBAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD,OAAC,SAAI,WAAU,sDACb,0BAAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAU;AAAA,kBACV,OAAO,EAAE,OAAO,GAAI,kBAAkB,MAAM,iBAAkB,GAAG,IAAI;AAAA;AAAA,cACvE,GACF;AAAA,cACA,gBAAAA,OAAC,UAAK,WAAU,uBAAuB,2BAAgB;AAAA,eACzD;AAAA,aACF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,4CAA2C,sBAAQ;AAAA,YACnE,gBAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD,OAAC,SAAI,WAAU,sDACb,0BAAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAU;AAAA,kBACV,OAAO,EAAE,OAAO,IAAK,MAAM,iBAAiB,mBAAmB,MAAM,iBAAkB,GAAG,IAAI;AAAA;AAAA,cAChG,GACF;AAAA,cACA,gBAAAA,OAAC,UAAK,WAAU,uBAAuB,gBAAM,iBAAiB,iBAAgB;AAAA,eAChF;AAAA,aACF;AAAA,UAEA,gBAAAC,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,4CAA2C,4BAAc;AAAA,YACzE,gBAAAC,OAAC,SAAI,WAAU,+BACb;AAAA,8BAAAD,OAAC,SAAI,WAAU,sDACb,0BAAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,WAAU;AAAA,kBACV,OAAO,EAAE,OAAO,GAAI,MAAM,wBAAwB,MAAM,iBAAkB,GAAG,IAAI;AAAA;AAAA,cACnF,GACF;AAAA,cACA,gBAAAA,OAAC,UAAK,WAAU,uBAAuB,gBAAM,uBAAsB;AAAA,eACrE;AAAA,aACF;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAEA,gBAAAC,OAACN,QAAA,EACC;AAAA,wBAAAK,OAACH,cAAA,EACC,0BAAAG,OAACF,aAAA,EAAU,iCAAmB,GAChC;AAAA,QACA,gBAAAE,OAACJ,eAAA,EACC,0BAAAK,OAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,4CAA2C,iCAAmB;AAAA,YAC9E,gBAAAA,OAAC,UAAK,WAAU,eAAe,UAAAE,iBAAe,iBAAiB,GAAE;AAAA,aACnE;AAAA,UAEA,gBAAAD,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,4CAA2C,4BAAc;AAAA,YACzE,gBAAAA,OAAC,SAAI,WAAU,+BACb,0BAAAC,OAACF,QAAA,EAAM,SAAQ,WAAU,WAAU,iEAAgE;AAAA;AAAA,cAC/F,MAAM;AAAA,eACV,GACF;AAAA,aACF;AAAA,UAEA,gBAAAE,OAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,4CAA2C,2BAAa;AAAA,YACxE,gBAAAA,OAAC,UAAK,WAAU,uBAAuB,UAAAE,iBAAe,YAAY,GAAE;AAAA,aACtE;AAAA,WACF,GACF;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACnKA,SAAgB,YAAAE,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,UAAAC,SAAQ,iBAAAC,gBAAe,gBAAAC,eAAc,eAAAC,cAAa,qBAAAC,0BAAyB;AACpF,SAAS,QAAAC,QAAM,eAAAC,eAAa,cAAAC,cAAY,aAAAC,mBAAiB;AACzD,SAAS,SAAAC,cAAa;AAEtB,SAAS,WAAAC,WAAS,YAAAC,WAAU,cAAAC,aAAY,QAAAC,OAAM,UAAAC,SAAQ,SAAAC,cAAa;AACnE,SAAS,uBAAAC,4BAA2B;AACpC,SAAS,wBAAAC,8BAA4B;AAsG/B,gBAAAC,QAuDM,QAAAC,cAvDN;AA/EC,IAAM,uBAA4D,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,uBAAqB;AAC/B,QAAM,CAAC,QAAQ,SAAS,IAAInB,WAA0B,CAAC,CAAC;AACxD,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAS,KAAK;AAC5C,QAAM,CAAC,OAAO,QAAQ,IAAIA,WAAwB,IAAI;AAEtD,EAAAC,YAAU,MAAM;AACd,QAAI,QAAQ,UAAU;AACpB,0BAAoB,SAAS,EAAE;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,MAAM,QAAQ,CAAC;AAEnB,QAAM,sBAAsB,OAAO,eAAuB;AACxD,eAAW,IAAI;AACf,aAAS,IAAI;AAEb,QAAI;AAEF,YAAM,aAA8B;AAAA,QAClC;AAAA,UACE,IAAI;AAAA,UACJ,aAAa;AAAA,UACb,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,eAAe;AAAA,UACf,cAAc,oBAAI,KAAK,YAAY;AAAA,UACnC,cAAc,oBAAI,KAAK,YAAY;AAAA,UACnC,YAAY,oBAAI,KAAK,YAAY;AAAA,UACjC,YAAY;AAAA,UACZ,WAAW,oBAAI,KAAK,YAAY;AAAA,UAChC,YAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,aAAa;AAAA,UACb,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,eAAe;AAAA,UACf,cAAc;AAAA,UACd,cAAc;AAAA,UACd,YAAY,oBAAI,KAAK,YAAY;AAAA,UACjC,YAAY;AAAA,UACZ,WAAW,oBAAI,KAAK,YAAY;AAAA,UAChC,YAAY;AAAA,QACd;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,aAAa;AAAA,UACb,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,eAAe;AAAA,UACf,cAAc,oBAAI,KAAK,YAAY;AAAA,UACnC,cAAc,oBAAI,KAAK,YAAY;AAAA,UACnC,YAAY,oBAAI,KAAK,YAAY;AAAA,UACjC,YAAY;AAAA,UACZ,WAAW,oBAAI,KAAK,YAAY;AAAA,UAChC,YAAY;AAAA,QACd;AAAA,MACF;AAEA,gBAAU,UAAU;AAAA,IACtB,SAAS,KAAK;AACZ,eAAS,iCAAiC;AAC1C,cAAQ,MAAM,mCAAmC,GAAG;AAAA,IACtD,UAAE;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,SAASiB,qBAAoB,MAA0C,KAAK;AAClF,WACE,gBAAAE,OAACT,QAAA,EAAM,SAAQ,WAAU,WAAW,QACjC,kBACH;AAAA,EAEJ;AAEA,QAAM,oBAAoB,CAAC,cAAsB;AAC/C,UAAM,WAAW;AAAA,MACf,MAAM;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,IACf;AAEA,WACE,gBAAAS,OAACT,QAAA,EAAM,SAAQ,WAAU,WAAW,SAAS,SAAkC,KAAK,SAAS,MAC1F,qBACH;AAAA,EAEJ;AAEA,QAAMY,mBAAiB,CAAC,WAAmB;AACzC,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,uBAAuB;AAAA,IACzB,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAMC,eAAa,CAACC,UAA2B;AAC7C,QAAI,CAACA;AAAM,aAAO;AAClB,WAAOA,MAAK,mBAAmB,SAAS;AAAA,MACtC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,iBAAiB,CAAC,eAAiC;AACvD,QAAI,CAAC;AAAY,aAAO;AACxB,UAAM,QAAQ,oBAAI,KAAK;AACvB,UAAM,WAAW,MAAM,QAAQ,IAAI,WAAW,QAAQ;AACtD,UAAM,WAAW,KAAK,KAAK,YAAY,MAAO,KAAK,KAAK,GAAG;AAC3D,WAAO,WAAW,IAAI,WAAW;AAAA,EACnC;AAEA,MAAI,CAAC;AAAU,WAAO;AAEtB,SACE,gBAAAL,OAAClB,SAAA,EAAO,MAAY,cAClB,0BAAAmB,OAAClB,gBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAiB,OAAChB,eAAA,EACC,0BAAAiB,OAAC,SACC;AAAA,sBAAAD,OAACf,cAAA,EAAY,WAAU,yBAAwB,6BAE/C;AAAA,MACA,gBAAAgB,OAACf,oBAAA,EAAkB,WAAU,8BAA6B;AAAA;AAAA,QACnC,SAAS;AAAA,QAAU;AAAA,QAAE,SAAS;AAAA,SACrD;AAAA,OACF,GACF;AAAA,IAEA,gBAAAe,OAAC,SAAI,WAAU,QAEb;AAAA,sBAAAA,OAACd,QAAA,EAAK,WAAU,QACd;AAAA,wBAAAa,OAACX,cAAA,EAAW,WAAU,QACpB,0BAAAW,OAACV,aAAA,EAAU,WAAU,WAAU,kCAAoB,GACrD;AAAA,QACA,gBAAAU,OAACZ,eAAA,EACC,0BAAAa,OAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACL,OAAA,EAAK,WAAU,yBAAwB;AAAA,YACxC,gBAAAM,OAAC,SACC;AAAA,8BAAAA,OAAC,OAAE,WAAU,eAAe;AAAA,yBAAS;AAAA,gBAAU;AAAA,gBAAE,SAAS;AAAA,iBAAS;AAAA,cACnE,gBAAAD,OAAC,OAAE,WAAU,yBAAyB,mBAAS,OAAM;AAAA,eACvD;AAAA,aACF;AAAA,UACA,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACR,WAAA,EAAQ,WAAU,yBAAwB;AAAA,YAC3C,gBAAAS,OAAC,SACC;AAAA,8BAAAA,OAAC,OAAE,WAAU,eAAe;AAAA,uBAAO;AAAA,gBAAO;AAAA,iBAAO;AAAA,cACjD,gBAAAD,OAAC,OAAE,WAAU,yBAAwB,0BAAY;AAAA,eACnD;AAAA,aACF;AAAA,UACA,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACN,aAAA,EAAW,WAAU,yBAAwB;AAAA,YAC9C,gBAAAO,OAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,eACV,UAAAG,iBAAe,OAAO,OAAO,CAAC,KAAK,UAAU,MAAM,MAAM,aAAa,CAAC,CAAC,GAC3E;AAAA,cACA,gBAAAH,OAAC,OAAE,WAAU,yBAAwB,yBAAW;AAAA,eAClD;AAAA,aACF;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGC,UACC,gBAAAA,OAACb,QAAA,EACC,0BAAAa,OAACZ,eAAA,EAAY,WAAU,qBACrB,0BAAAa,OAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAACR,WAAA,EAAQ,WAAU,qCAAoC;AAAA,QACvD,gBAAAQ,OAAC,OAAE,+BAAiB;AAAA,SACtB,GACF,GACF,IACE,QACF,gBAAAA,OAACb,QAAA,EACC,0BAAAa,OAACZ,eAAA,EAAY,WAAU,qBACrB,0BAAAa,OAAC,SAAI,WAAU,gBACb;AAAA,wBAAAD,OAACR,WAAA,EAAQ,WAAU,wBAAuB;AAAA,QAC1C,gBAAAQ,OAAC,OAAG,iBAAM;AAAA,SACZ,GACF,GACF,IACE,OAAO,WAAW,IACpB,gBAAAA,OAACb,QAAA,EACC,0BAAAa,OAACZ,eAAA,EAAY,WAAU,qBACrB,0BAAAa,OAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAACR,WAAA,EAAQ,WAAU,wBAAuB;AAAA,QAC1C,gBAAAQ,OAAC,OAAG,UAAAE,GAAE,8BAA8B,GAAE;AAAA,SACxC,GACF,GACF,IAEA,gBAAAF,OAAC,SAAI,WAAU,aACZ,iBAAO,IAAI,CAAC,UACX,gBAAAA,OAACb,QAAA,EAAoB,WAAU,qCAC7B,0BAAAa,OAACZ,eAAA,EAAY,WAAU,OACrB,0BAAAa,OAAC,SAAI,WAAU,oCACb;AAAA,wBAAAA,OAAC,SAAI,WAAU,UACb;AAAA,0BAAAA,OAAC,SAAI,WAAU,gCACb;AAAA,4BAAAA,OAAC,QAAG,WAAU,yBAAwB;AAAA;AAAA,cAAE,MAAM;AAAA,eAAY;AAAA,YACzD,eAAe,MAAM,MAAM;AAAA,YAC3B,kBAAkB,MAAM,SAAS;AAAA,YACjC,MAAM,WAAW,cAAc,MAAM,gBAAgB,oBAAI,KAAK,IAAI,MAAM,gBACvE,gBAAAA,OAACV,QAAA,EAAM,SAAQ,WAAU,WAAU,yCAChC;AAAA,6BAAe,MAAM,YAAY;AAAA,cAAE;AAAA,eACtC;AAAA,aAEJ;AAAA,UAEA,gBAAAU,OAAC,SAAI,WAAU,gEACb;AAAA,4BAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACJ,SAAA,EAAO,WAAU,yBAAwB;AAAA,cAC1C,gBAAAI,OAAC,UAAK,WAAU,iBAAiB,gBAAM,YAAW;AAAA,eACpD;AAAA,YAEA,gBAAAC,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACP,WAAA,EAAS,WAAU,yBAAwB;AAAA,cAC5C,gBAAAQ,OAAC,UAAK,WAAU,iBAAgB;AAAA;AAAA,gBACpBG,aAAW,MAAM,SAAS;AAAA,iBACtC;AAAA,eACF;AAAA,YAEC,MAAM,gBACL,gBAAAH,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACR,WAAA,EAAQ,WAAU,yBAAwB;AAAA,cAC3C,gBAAAS,OAAC,UAAK,WAAU,iBAAgB;AAAA;AAAA,gBACrBG,aAAW,MAAM,YAAY;AAAA,iBACxC;AAAA,eACF;AAAA,YAGD,MAAM,gBACL,gBAAAH,OAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACH,QAAA,EAAM,WAAU,yBAAwB;AAAA,cACzC,gBAAAI,OAAC,UAAK,WAAU,iBAAgB;AAAA;AAAA,gBACrBG,aAAW,MAAM,YAAY;AAAA,iBACxC;AAAA,eACF;AAAA,aAEJ;AAAA,WACF;AAAA,QAEA,gBAAAH,OAAC,SAAI,WAAU,mBACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,uCACZ,UAAAG,iBAAe,MAAM,WAAW,GACnC;AAAA,UACC,MAAM,gBAAgB,KACrB,gBAAAF,OAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,YAC3BE,iBAAe,MAAM,aAAa;AAAA,aAC9C;AAAA,WAEJ;AAAA,SACF,GACF,KA3DS,MAAM,EA4DjB,CACD,GACH;AAAA,OAEJ;AAAA,KACF,GACF;AAEJ;;;AClTA;AAAA,EACE,iBAAAG;AAAA,EACA,kBAAAC;AAAA,EACA,sBAAAC;AAAA,EACA,iBAAAC;AAAA,OACK;AAIH,SAEE,OAAAC,QAFF,QAAAC,cAAA;AAFG,SAAS,mBAAmB;AACjC,SACE,gBAAAA,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,OAACD,gBAAA,EAAc;AAAA,IAGf,gBAAAC,OAACH,iBAAA,EAAe;AAAA,IAGhB,gBAAAG,OAACJ,gBAAA,EAAc,MAAM,GAAG,SAAS,GAAG;AAAA,IAGpC,gBAAAI,OAACF,qBAAA,EAAmB;AAAA,KACtB;AAEJ;AAEO,SAAS,wBAAwB;AACtC,SACE,gBAAAG,OAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,OAAC,SAAI,WAAU,8CAA6C;AAAA,SAC9D;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,+CAA8C;AAAA,QAC7D,gBAAAA,OAAC,SAAI,WAAU,+CAA8C;AAAA,SAC/D;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,SACF;AAAA,MACA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,MAC5D,gBAAAA,OAACJ,gBAAA,EAAc,MAAM,GAAG,SAAS,GAAG;AAAA,OACtC;AAAA,KACF;AAEJ;;;AdtDA;AAAA,EACE,QAAQ;AAAA,EACR,YAAAM;AAAA,OACK;AAEP,SAAS,eAAAC,cAAa,2BAAAC,gCAA+B;AAkHzC,SAIE,OAAAC,QAJF,QAAAC,cAAA;AApEL,IAAM,YAAsC,CAAC;AAAA;AAAA,EAElD;AAAA,EACA,UAAU,CAAC;AAAA,EACX,kBAAkB,MAAM;AAAA,EAAC;AAAA,EACzB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,mBAAmB,MAAM;AAAA,EAAC;AAAA,EAC1B,eAAe,MAAM;AAAA,EAAC;AAAA,EACtB,SAAS,MAAM;AAAA,EAAC;AAAA;AAAA,EAGhB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AAGJ,QAAM,EAAE,eAAe,IAAIH,aAAY,WAAW;AAGlD,QAAMI,KAAIH,yBAAwB;AAGlC,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX,OAAO;AACL,cAAQ,IAAI,sCAAsC;AAAA,IACpD;AAAA,EACF;AAGA,QAAM,oBAAoB,MAAM;AAC9B,YAAQ,IAAI,0DAA0D;AAAA,EACxE;AAGA,QAAM,YAAY,MAAM,aAAa,CAAC;AACtC,QAAM,iBAAiB,MAAM,SAAS;AACtC,QAAM,cAAc,MAAM,QAAQ;AAClC,QAAM,aAAa,MAAM,cAAc;AACvC,QAAM,QAAQ,MAAM,SAAS;AAG7B,QAAM,0BAA0BI,QAAM,YAAY,iBAAiB,CAAC,eAAe,CAAC;AACpF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,2BAA2BA,QAAM,YAAY,kBAAkB,CAAC,gBAAgB,CAAC;AACvF,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,QAAM,YAAY,QAAQ,CAAC,MAAM,CAAC;AAEzD,SACE,gBAAAF,OAAC,SAAI,WAAW,wBAAwB,SAAS,IAE/C;AAAA,oBAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,sBAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UAEC;AAAA,6BAAiB,kBAChB,gBAAAA;AAAA,cAACG;AAAA,cAAA;AAAA,gBACC,SAAS;AAAA,gBACT,WAAU;AAAA,gBAEV;AAAA,kCAAAJ,OAAC,YAAS,WAAU,WAAU;AAAA,kBAC9B,gBAAAA,OAAC,UAAM,yBAAc;AAAA;AAAA;AAAA,YACvB;AAAA,YAED,oBACC,gBAAAC;AAAA,cAACG;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,SAAS;AAAA,gBACT,WAAU;AAAA,gBAEV;AAAA,kCAAAJ,OAACH,WAAA,EAAS,WAAU,WAAU;AAAA,kBAC9B,gBAAAG,OAAC,UAAM,4BAAiB;AAAA;AAAA;AAAA,YAC1B;AAAA;AAAA;AAAA,MAEJ;AAAA,MAGA,gBAAAA,OAACK,QAAA,EAAK,WAAU,2BACd,0BAAAL,OAACM,eAAA,EAAY,WAAU,aACrB,0BAAAN,OAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,UAChB,gBAAgB;AAAA;AAAA,MAClB,GACF,GACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,uBACZ,oBAAU,SAAS,IAClB,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,kBAAkB;AAAA,QAClB,QAAQ,QAAQ,UAAU;AAAA,QAC1B,WAAW,QAAQ,aAAa;AAAA,QAChC,QAAQ;AAAA;AAAA,IACV,IAEA,gBAAAA;AAAA,MAACO;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,OAAOL,GAAE,sBAAsB;AAAA,QAC/B,aACE,QAAQ,UAAU,QAAQ,IACtBA,GAAE,6BAA6B,IAC/BA,GAAE,qBAAqB;AAAA;AAAA,IAE/B,GAEJ;AAAA,IAGC,UAAU,SAAS,KAAK,iBAAiB,SACxC,gBAAAF,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAACQ;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ;AAEA,IAAO,oBAAQ;;;Ae/Mf,OAAOC,aAAW;AAWlB,SAAS,cAAAC,aAAY,QAAAC,QAAM,eAAAC,qBAAmB;AAC9C,SAAS,eAAAC,oBAAmB;AAE5B,SAAS,wBAAAC,8BAA4B;AAiE7B,gBAAAC,QASI,QAAAC,cATJ;AA9CD,IAAM,SAASC,QAAM,KAAK,SAASC,QAAO;AAAA,EAC/C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,mBAAmB;AAAA,EACnB,cAAc;AAAA;AAChB,GAAgB;AACd,QAAMC,KAAIL,uBAAqB;AAG/B,EAAAG,QAAM,UAAU,MAAM;AACpB,YAAQ,IAAI,iDAA0C;AAAA,MACpD,aAAa,KAAK,OAAO;AAAA,MACzB,YAAY,QAAQ;AAAA,MACpB,cAAc,QAAQ;AAAA,MACtB,YAAY,KAAK,OAAO,CAAC,GAAG;AAAA,IAC9B,CAAC;AAAA,EACH,GAAG,CAAC,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,CAAC;AAIhD,QAAM,0BAA0BA,QAAM,YAAY,iBAAiB,CAAC,eAAe,CAAC;AACpF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,yBAAyBA,QAAM,YAAY,mBAAmB,MAAM;AAAA,EAAC,IAAI,CAAC,cAAc,CAAC;AAC/F,QAAM,wBAAwBA,QAAM,YAAY,eAAe,CAAC,aAAa,CAAC;AAC9E,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,QAAM,YAAY,WAAW,MAAM;AAAA,EAAC,IAAI,CAAC,MAAM,CAAC;AACvE,QAAM,8BAA8BA,QAAM,YAAY,wBAAwB,MAAM;AAAA,EAAC,IAAI,CAAC,mBAAmB,CAAC;AAC9G,QAAM,4BAA4BA,QAAM,YAAY,sBAAsB,MAAM;AAAA,EAAC,IAAI,CAAC,iBAAiB,CAAC;AAGxG,QAAM,0BAA0B,sBAAsB,SAAS,KAAK,QAAQ;AAE5E,SACE,gBAAAD,OAAC,SAAI,WAAU,wBAEb;AAAA,oBAAAA,OAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,aAAa,KAAK;AAAA,UAClB,OAAO,KAAK;AAAA,UACZ;AAAA;AAAA,MACF;AAAA,MAGA,gBAAAA,OAACJ,QAAA,EAAK,WAAU,2BACd,0BAAAI,OAACH,eAAA,EAAY,WAAU,aACrB,0BAAAI,OAAC,SAAI,WAAU,qCAEZ;AAAA,4BAAoB,gBAAgB,cACnC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,aAAa;AAAA,YACb,aAAa,KAAK;AAAA,YAClB,eAAe,QAAQ,aAAa,QAAQ,UAAU,KAAK,QAAQ;AAAA,YACnE,eAAe;AAAA,YACf,aAAa;AAAA;AAAA,QACf;AAAA,QAIF,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA,iBAAiB;AAAA,YACjB,gBAAgB;AAAA,YAChB,gBAAgB;AAAA;AAAA,QAClB;AAAA,SACF,GACF,GACF;AAAA,MAGC,2BACC,gBAAAC,OAAC,SAAI,WAAU,2FACb;AAAA,wBAAAD,OAACF,cAAA,EAAY,WAAU,2CAA0C;AAAA,QACjE,gBAAAG,OAAC,UAAK,WAAU,yCACb;AAAA,UAAAG,GAAE,2BAA2B;AAAA,UAAE;AAAA,UAAE,KAAK,MAAM,eAAe;AAAA,UAAE;AAAA,UAAEA,GAAE,oBAAoB;AAAA,WACxF;AAAA,SACF;AAAA,OAEJ;AAAA,IAGA,gBAAAJ,OAAC,SAAI,WAAU,uBACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ,KAAK;AAAA,QACb,eAAe;AAAA,QACf,QAAQ,QAAQ;AAAA,QAChB,WAAW,QAAQ;AAAA,QACnB,QAAQ;AAAA;AAAA,IACV,GACF;AAAA,IAGC,KAAK,QAAQ,KAAK,KAAK,SAAS,KAAK,SAAS,OAC7C,gBAAAA,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAACL;AAAA,MAAA;AAAA,QACC,aAAa,KAAK;AAAA,QAClB,YAAY,KAAK;AAAA,QACjB,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK,SAAS;AAAA,QACrB,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ,CAAC;AAED,IAAO,iBAAQ;;;ACpJf,SAAgB,YAAAU,YAAU,aAAAC,mBAAiB;AAC3C,SAAoE,UAAAC,UAAe,SAAAC,QAAuC,mBAAAC,wBAAuB;AACjJ,SAAS,iBAAiB,wBAAwC;AAClE,SAAS,wBAAAC,8BAA4B;AA0K/B,SACU,OAAAC,QADV,QAAAC,cAAA;AA7JC,IAAMC,wBAA4D,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIJ,uBAAqB;AAE/B,QAAM,CAAC,eAAe,gBAAgB,IAAIL;AAAA,IAAsB,MAC9D,mBAAmB,IAAI,KAAK,gBAAgB,IAAI;AAAA,EAClD;AACA,QAAM,CAAC,aAAa,cAAc,IAAIA;AAAA,IAAsB,MAC1D,iBAAiB,IAAI,KAAK,cAAc,IAAI;AAAA,EAC9C;AACA,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAc,IAAI;AAClE,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAiB,EAAE;AAErE,QAAM,SAAS,gBAAgB,0BAA0B,SAAS,QAAQ;AAG1E,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAiB,MAAM;AACzD,QAAI,kBAAkB;AACpB,aAAO,IAAI,KAAK,gBAAgB,EAAE,SAAS;AAAA,IAC7C;AACA,WAAO;AAAA,EACT,CAAC;AACD,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAiB,MAAM;AACzD,QAAI,gBAAgB;AAClB,aAAO,IAAI,KAAK,cAAc,EAAE,SAAS;AAAA,IAC3C;AACA,WAAO;AAAA,EACT,CAAC;AAGD,UAAQ,IAAI,4CAAqC;AAAA,IAC/C,aAAa,OAAO;AAAA,IACpB,aAAa,QAAQ;AAAA,IACrB,sBAAsB,SAAS;AAAA,EACjC,CAAC;AAED,EAAAC,YAAU,MAAM;AACd,QAAI,iBAAiB,aAAa;AAEhC,YAAM,kBAAkB,GAAG,cAAc,YAAY,CAAC,IAAI,YAAY,YAAY,CAAC;AAGnF,UAAI,oBAAoB,mBAAmB;AACzC,gBAAQ,IAAI,iDAA0C;AAAA,UACpD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAGD,6BAAqB,eAAe;AAGpC,uBAAe,eAAe,WAAW;AAGzC,cAAM,aAAa,iBAAiB;AAAA,UAClC;AAAA,UAAS;AAAA,UAAU;AAAA,UAAe;AAAA,UAAa;AAAA,QACjD;AACA,4BAAoB,UAAU;AAE9B,gBAAQ,IAAI,gCAAyB,UAAU;AAG/C,YAAI,WAAW,WAAW,eAAe;AACvC,cAAI;AACF,kBAAM,UAAU,gBAAgB;AAAA,cAC9B;AAAA,cAAS;AAAA,cAAU;AAAA,cAAe;AAAA,cAAa;AAAA,YACjD;AACA,0BAAc,OAAO;AAAA,UACvB,SAAS,OAAO;AACd,oBAAQ,MAAM,4BAA4B,KAAK;AAAA,UACjD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EAEF,GAAG,CAAC,eAAe,WAAW,CAAC;AAE/B,QAAM,mBAAmB,CAAC,UAAkB,SAAkC;AAC5E,UAAM,MAAM,oBAAI,KAAK;AACrB,QAAI;AAEJ,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,kBAAU,IAAI,KAAK,IAAI,QAAQ,IAAK,WAAW,KAAK,KAAK,GAAK;AAC9D;AAAA,MACF,KAAK;AACH,kBAAU,IAAI,KAAK,IAAI,QAAQ,IAAK,WAAW,KAAK,KAAK,KAAK,GAAK;AACnE;AAAA,MACF,KAAK;AACH,kBAAU,IAAI,KAAK,IAAI,QAAQ,IAAK,WAAW,IAAI,KAAK,KAAK,KAAK,GAAK;AACvE;AAAA,MACF;AACE,kBAAU;AAAA,IACd;AAEA,qBAAiB,GAAG;AACpB,mBAAe,OAAO;AAAA,EACxB;AAEA,QAAM,oBAAoB,CAAC,OAAa,KAAW,gBAAqC;AACtF,UAAM,aAAa,IAAI,QAAQ,IAAI,MAAM,QAAQ;AAEjD,YAAQ,aAAa;AAAA,MACnB,KAAK;AACH,cAAM,QAAQ,KAAK,KAAK,cAAc,MAAO,KAAK,GAAG;AACrD,eAAO,GAAG,KAAK,QAAQ,QAAQ,IAAI,MAAM,EAAE;AAAA,MAC7C,KAAK;AACH,cAAM,OAAO,KAAK,KAAK,cAAc,MAAO,KAAK,KAAK,GAAG;AACzD,eAAO,GAAG,IAAI,OAAO,OAAO,IAAI,MAAM,EAAE;AAAA,MAC1C,KAAK;AACH,cAAM,QAAQ,KAAK,KAAK,cAAc,MAAO,KAAK,KAAK,KAAK,EAAE;AAC9D,eAAO,GAAG,KAAK,QAAQ,QAAQ,IAAI,MAAM,EAAE;AAAA,MAC7C;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,sBAAsB,MAAc;AACxC,QAAI,CAAC,iBAAiB,CAAC;AAAa,aAAO;AAE3C,QAAI;AACF,YAAM,UAAU,gBAAgB;AAAA,QAC9B;AAAA,QAAS;AAAA,QAAU;AAAA,QAAe;AAAA,QAAa;AAAA,MACjD;AACA,aAAO,QAAQ;AAAA,IACjB,SAAS,OAAO;AACd,aAAO;AAAA,IACT;AAAA,EACF;AAGA,QAAM,kBAAkB,MAAM;AAC5B,YAAQ,OAAO,aAAa;AAAA,MAC1B,KAAK;AACH,eAAO,oBAAoB;AAAA,MAC7B,KAAK;AACH,eAAO,mBAAmB;AAAA,MAC5B,KAAK;AACH,eAAO,oBAAoB;AAAA,MAC7B,KAAK;AAAA,MACL;AACE,eAAO,mBAAmB;AAAA,IAC9B;AAAA,EACF;AAGA,QAAM,mBAAmB,CAAC,OAAe,iBACvC,gBAAAM,OAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,OAACJ,QAAA,EAAM,WAAU,uBACd;AAAA;AAAA,MAAM;AAAA,MAAC,gBAAAG,OAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,OAC1C;AAAA,IACA,gBAAAA;AAAA,MAACF;AAAA,MAAA;AAAA,QACC,OAAO;AAAA,UACL,MAAM,iBAAiB;AAAA,UACvB,IAAI,eAAe;AAAA,QACrB;AAAA,QACA,UAAU,CAAC,UAAU;AACnB,cAAI,OAAO;AAAM,6BAAiB,MAAM,IAAI;AAC5C,cAAI,OAAO;AAAI,2BAAe,MAAM,EAAE;AAAA,QACxC;AAAA,QACA,aAAY;AAAA,QACZ,SAAS,oBAAI,KAAK;AAAA,QAClB,aAAa;AAAA;AAAA,IACf;AAAA,IAGC,gBAAgB,aAAa,SAAS,KACrC,gBAAAE,OAAC,SAAI,WAAU,wBACZ,uBAAa,IAAI,CAAC,QACjB,gBAAAA;AAAA,MAACJ;AAAA,MAAA;AAAA,QAEC,MAAK;AAAA,QACL,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,iBAAiB,IAAI,OAAO,IAAI,IAAI;AAAA,QAElD,cAAI;AAAA;AAAA,MANA,IAAI;AAAA,IAOX,CACD,GACH;AAAA,KAEJ;AAIF,QAAM,qBAAqB,MAAM,iBAAiB,eAAe;AAGjE,QAAM,sBAAsB,MAAM;AAEhC,UAAM,oBAAoB,CAAC,QAAgB,YAAoB;AAC7D,UAAI,eAAe;AACjB,cAAM,WAAW,IAAI,KAAK,aAAa;AACvC,iBAAS,SAAS,QAAQ,GAAG,GAAG,CAAC;AACjC,yBAAiB,QAAQ;AAEzB,cAAM,SAAS,IAAI,KAAK,aAAa;AACrC,eAAO,SAAS,SAAS,GAAG,GAAG,CAAC;AAChC,uBAAe,MAAM;AAAA,MACvB;AAAA,IACF;AAEA,WACE,gBAAAK,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,OAACJ,QAAA,EAAM,WAAU,uBAAsB;AAAA;AAAA,QACd,gBAAAG,OAAC,UAAK,WAAU,gBAAe,eAAC;AAAA,SACzD;AAAA,MAGA,gBAAAA,OAAC,SAAI,WAAU,aACb,0BAAAA;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,OAAO;AAAA,YACL,MAAM,iBAAiB;AAAA,YACvB,IAAI,iBAAiB;AAAA;AAAA,UACvB;AAAA,UACA,UAAU,CAAC,UAAU;AACnB,gBAAI,OAAO,MAAM;AACf,oBAAM,eAAe,IAAI,KAAK,MAAM,IAAI;AACxC,oBAAM,WAAW,IAAI,KAAK,YAAY;AACtC,uBAAS,SAAS,YAAY,GAAG,GAAG,CAAC;AACrC,+BAAiB,QAAQ;AAEzB,oBAAM,SAAS,IAAI,KAAK,YAAY;AACpC,qBAAO,SAAS,YAAY,GAAG,GAAG,CAAC;AACnC,6BAAe,MAAM;AAAA,YACvB;AAAA,UACF;AAAA,UACA,aAAY;AAAA,UACZ,SAAS,oBAAI,KAAK;AAAA,UAClB,aAAa;AAAA;AAAA,MACf,GACF;AAAA,MAGA,gBAAAG,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,QAAA,EAAM,WAAU,qCAAoC,yBAAW;AAAA,QAChE,gBAAAG,OAAC,SAAI,WAAU,0BACZ,gBAAM,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,SAC5C,gBAAAA;AAAA,UAACJ;AAAA,UAAA;AAAA,YAEC,MAAK;AAAA,YACL,SAAS,eAAe,OAAO,YAAY;AAAA,YAC3C,MAAK;AAAA,YACL,SAAS,MAAM;AACb,4BAAc,IAAI;AAClB,gCAAkB,MAAM,UAAU;AAAA,YACpC;AAAA,YACA,UAAU,CAAC;AAAA,YACX,WAAU;AAAA,YAET,eAAK,SAAS,EAAE,SAAS,GAAG,GAAG;AAAA;AAAA,UAX3B;AAAA,QAYP,CACD,GACH;AAAA,SACF;AAAA,MAGA,gBAAAK,OAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,QAAA,EAAM,WAAU,qCAAoC,yBAAW;AAAA,QAChE,gBAAAG,OAAC,SAAI,WAAU,0BACZ,gBAAM,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,SAC5C,gBAAAA;AAAA,UAACJ;AAAA,UAAA;AAAA,YAEC,MAAK;AAAA,YACL,SAAS,eAAe,OAAO,YAAY;AAAA,YAC3C,MAAK;AAAA,YACL,SAAS,MAAM;AACb,4BAAc,IAAI;AAClB,gCAAkB,YAAY,IAAI;AAAA,YACpC;AAAA,YACA,UAAU,CAAC,iBAAiB,QAAQ;AAAA,YACpC,WAAU;AAAA,YAET,eAAK,SAAS,EAAE,SAAS,GAAG,GAAG;AAAA;AAAA,UAX3B;AAAA,QAYP,CACD,GACH;AAAA,SACF;AAAA,MAGC,iBAAiB,eAChB,gBAAAI,OAAC,SAAI,WAAU,4DACb,0BAAAC,OAAC,SAAI,WAAU,wBACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,iBAAgB,uBAAS;AAAA,QACzC,gBAAAC,OAAC,UAAK,WAAU,6BACb;AAAA,eAAK,MAAM,YAAY,QAAQ,IAAI,cAAc,QAAQ,MAAM,MAAO,KAAK,GAAG;AAAA,UAAE;AAAA,WACnF;AAAA,SACF,GACF;AAAA,OAEJ;AAAA,EAEJ;AAGA,QAAM,qBAAqB,MAAM;AAAA,IAC/BE,GAAE,4BAA4B;AAAA,IAC9B,CAAC;AAAA;AAAA,EACH;AAGA,QAAM,sBAAsB,MAAM;AAAA,IAChCA,GAAE,6BAA6B;AAAA,IAC/B,CAAC;AAAA;AAAA,EACH;AAGA,SAAO,gBAAgB;AACzB;;;AC/UA,OAAOC,aAAW;;;ACElB,SAAS,SAAAC,QAAO,aAAAC,YAAuB,cAAAC,mBAAkB;AAc/C,SACE,OAAAC,QADF,QAAAC,cAAA;AANH,SAAS,eAAe,EAAE,UAAU,MAAM,GAAwB;AACvE,SACE,gBAAAA,OAAC,SAAI,WAAU,wDAEb;AAAA,oBAAAD,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,wDAAuD,sBAAQ;AAAA,MAC5E,gBAAAA,OAAC,OAAE,WAAU,qDAAqD,mBAAS,MAAK;AAAA,MAChF,gBAAAA,OAAC,OAAE,WAAU,4CAA4C,mBAAS,OAAM;AAAA,OAC1E,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAACF,YAAA,EAAU,WAAU,sCAAqC;AAAA,MAC1D,gBAAAE,OAAC,OAAE,WAAU,wDAAuD,2BAAa;AAAA,MACjF,gBAAAA,OAAC,OAAE,WAAU,oDAAoD,gBAAM,cAAa;AAAA,MACpF,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,gCAAkB;AAAA,OAC5E,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAACH,QAAA,EAAM,WAAU,wCAAuC;AAAA,MACxD,gBAAAG,OAAC,OAAE,WAAU,wDAAuD,yBAAW;AAAA,MAC/E,gBAAAA,OAAC,OAAE,WAAU,oDAAoD,gBAAM,YAAW;AAAA,MAClF,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,4BAAc;AAAA,OACxE,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,OAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAACD,aAAA,EAAW,WAAU,uCAAsC;AAAA,MAC5D,gBAAAC,OAAC,OAAE,WAAU,wDAAuD,2BAAa;AAAA,MACjF,gBAAAC,OAAC,OAAE,WAAU,oDAAmD;AAAA;AAAA,SAC3D,MAAM,gBAAgB,GAAG,eAAe;AAAA,SAC7C;AAAA,MACA,gBAAAD,OAAC,OAAE,WAAU,4CAA2C,+BAAiB;AAAA,OAC3E,GACF,GACF;AAAA,KACF;AAEJ;;;AC1CU,SACE,OAAAE,QADF,QAAAC,eAAA;AANH,SAAS,mBAAmB,EAAE,MAAM,GAA4B;AACrE,SACE,gBAAAA,QAAC,SAAI,WAAU,wDAEb;AAAA,oBAAAD,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,wDAAuD,6BAAe;AAAA,MACnF,gBAAAA,OAAC,OAAE,WAAU,oDAAoD,gBAAM,gBAAe;AAAA,MACtF,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,sCAAwB;AAAA,OAClF,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,wDAAuD,8BAAgB;AAAA,MACpF,gBAAAA,OAAC,OAAE,WAAU,oDAAoD,gBAAM,iBAAgB;AAAA,MACvF,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,uCAAyB;AAAA,OACnF,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,wDAAuD,4BAAc;AAAA,MAClF,gBAAAA,OAAC,OAAE,WAAU,oDAAoD,gBAAM,eAAc;AAAA,MACrF,gBAAAA,OAAC,OAAE,WAAU,4CAA2C,8BAAgB;AAAA,OAC1E,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,wDAAuD,2BAAa;AAAA,MACjF,gBAAAC,QAAC,OAAE,WAAU,oDAAmD;AAAA;AAAA,SAC3D,MAAM,gBAAgB,GAAG,eAAe;AAAA,SAC7C;AAAA,MACA,gBAAAD,OAAC,OAAE,WAAU,4CAA2C,+BAAiB;AAAA,OAC3E,GACF,GACF;AAAA,KACF;AAEJ;AAEA,IAAO,6BAAQ;;;ACvBX,qBAAAE,YAIM,OAAAC,QADF,QAAAC,eAHJ;AAnBG,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAyB;AACvB,QAAM,qBAAqB,CAACC,OAA2C;AACrE,mBAAeA,GAAE,OAAO,KAAK;AAAA,EAC/B;AAEA,QAAM,qBAAqB,CAAC,UAAkB;AAC5C,oBAAgB,EAAE,GAAG,SAAS,QAAQ,MAAM,CAAC;AAAA,EAC/C;AAEA,QAAM,mBAAmB,CAAC,UAAkB;AAC1C,oBAAgB,EAAE,GAAG,SAAS,MAAM,MAAM,CAAC;AAAA,EAC7C;AAEA,SACE,gBAAAD,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAY;AAAA,UACZ,OAAO,QAAQ;AAAA,UACf,UAAU;AAAA,UACV,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC,QAAC,UAAO,OAAO,QAAQ,QAAQ,eAAe,oBAC5C;AAAA,sBAAAD,OAAC,iBAAc,WAAU,kBACvB,0BAAAA,OAAC,eAAY,aAAY,UAAS,GACpC;AAAA,MACA,gBAAAC,QAAC,iBACC;AAAA,wBAAAD,OAAC,cAAW,OAAM,OAAM,wBAAU;AAAA,QAClC,gBAAAA,OAAC,cAAW,OAAM,UAAS,oBAAM;AAAA,QACjC,gBAAAA,OAAC,cAAW,OAAM,YAAW,sBAAQ;AAAA,QACrC,gBAAAA,OAAC,cAAW,OAAM,SAAQ,mBAAK;AAAA,QAC/B,gBAAAA,OAAC,cAAW,OAAM,WAAU,qBAAO;AAAA,SACrC;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,UAAO,OAAO,QAAQ,MAAM,eAAe,kBAC1C;AAAA,sBAAAD,OAAC,iBAAc,WAAU,kBACvB,0BAAAA,OAAC,eAAY,aAAY,QAAO,GAClC;AAAA,MACA,gBAAAC,QAAC,iBACC;AAAA,wBAAAD,OAAC,cAAW,OAAM,OAAM,uBAAS;AAAA,QACjC,gBAAAA,OAAC,cAAW,OAAM,SAAQ,mBAAK;AAAA,QAC/B,gBAAAA,OAAC,cAAW,OAAM,gBAAe,0BAAY;AAAA,QAC7C,gBAAAA,OAAC,cAAW,OAAM,cAAa,wBAAU;AAAA,SAC3C;AAAA,OACF;AAAA,IAGC,mBAAmB,QAAQ,UAAU,QAAQ,WAAW,SAAS,QAAQ,SAAS,UACjF,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,KAEJ;AAEJ;AAEA,IAAO,0BAAQ;;;ACjHf,SAAgB,YAAAG,kBAAgB;AAWhC;AAAA,EACE,OAAAC;AAAA,EACA,QAAAC;AAAA,EACA,gBAAAC;AAAA,OACK;AAwBM,gBAAAC,QAWH,QAAAC,eAXG;AAXN,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAuB;AACrB,QAAM,CAAC,YAAY,aAAa,IAAIC,WAAwB,IAAI;AAEhE,QAAM,iBAAiB,CAAC,aAAuB;AAC7C,QAAI,CAAC,SAAS,UAAU;AACtB,aAAO,gBAAAF,OAAC,eAAY,QAAO,YAAW,MAAK,UAAS,MAAK,MAAK;AAAA,IAChE;AAEA,UAAM,SAAS,SAAS,cAAc;AACtC,WAAO,gBAAAA,OAAC,eAAY,QAAgB,MAAK,gBAAe,MAAK,MAAK;AAAA,EACpE;AAEA,MAAI,UAAU,WAAW,GAAG;AAC1B,WACE,gBAAAA,OAAC,QAAK,WAAU,2BACd,0BAAAA,OAAC,eAAY,WAAU,qBACrB,0BAAAC,QAAC,SAAI,WAAU,sBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,OAAC,QAAG,WAAU,4BAA2B,gCAAkB;AAAA,MAC3D,gBAAAA,OAAC,OAAE,WAAU,WAAU,iFAEvB;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,QAAK,WAAU,gDACd,0BAAAA,OAAC,eAAY,WAAU,8BAErB,0BAAAA,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAAC,WAAM,WAAU,UACf;AAAA,oBAAAD,OAAC,WAAM,WAAU,4DACf,0BAAAC,QAAC,QACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,wFAAuF,2BAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,2BAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,wBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,wBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,sBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,yFAAwF,qBAEtG;AAAA,OACF,GACF;AAAA,IACA,gBAAAA,OAAC,WAAM,WAAU,qCACd,oBAAU,IAAI,CAAC,aACd,gBAAAC;AAAA,MAAC;AAAA;AAAA,QAEC,WAAU;AAAA,QAGV;AAAA,0BAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,gIACb,0BAAAA,OAAC,UAAK,WAAU,oCACb,mBAAS,KAAK,UAAU,GAAG,CAAC,EAAE,YAAY,GAC7C,GACF;AAAA,YACA,gBAAAC,QAAC,SACC;AAAA,8BAAAD,OAAC,SAAI,WAAU,yCACZ,mBAAS,MACZ;AAAA,cACA,gBAAAA,OAAC,SAAI,WAAU,8BACZ,mBAAS,SAAS,YACrB;AAAA,eACF;AAAA,aACF,GACF;AAAA,UAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,uBACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,yCACZ,mBAAS,cAAc,MAAM,QAAQ,WACxC;AAAA,YACC,eAAe,QAAQ;AAAA,aAC1B,GACF;AAAA,UAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,mBAAS,YACN,IAAI,KAAK,SAAS,SAAS,EAAE,mBAAmB,SAAS;AAAA,YACvD,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UACR,CAAC,IACD,OACN,GACF;AAAA,UAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,mBAAS,cAAc,qBACpB,IAAI,KAAK,SAAS,aAAa,kBAAkB,EAAE,mBAAmB,SAAS;AAAA,YAC7E,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UACR,CAAC,IACD,SAAS,YACT,IAAI,KAAK,SAAS,SAAS,EAAE,mBAAmB,SAAS;AAAA,YACvD,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UACR,CAAC,IACD,OACN,GACF;AAAA,UAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,mBAAS,cAAc,mBACpB,IAAI,KAAK,SAAS,aAAa,gBAAgB,EAAE,mBAAmB,SAAS;AAAA,YAC3E,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UACR,CAAC,IACD,SAAS,eACT,IAAI,KAAK,SAAS,YAAY,EAAE,mBAAmB,SAAS;AAAA,YAC1D,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UACR,CAAC,IACD,eACN,GACF;AAAA,UAGA,gBAAAA,OAAC,QAAG,WAAU,wBACZ,0BAAAC,QAAC,gBACC;AAAA,4BAAAD,OAAC,uBAAoB,SAAO,MAC1B,0BAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,SAAS,MAAM,cAAc,eAAe,SAAS,KAAK,OAAO,SAAS,EAAE;AAAA,gBAE5E,0BAAAA,OAACD,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,YACpC,GACF;AAAA,YACA,gBAAAE;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,MAAM,eAAe,SAAS;AAAA,gBAC9B,cAAc,CAAC,SAAkB,cAAc,OAAO,SAAS,KAAK,IAAI;AAAA,gBAExE;AAAA,kCAAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,SAAS,MAAM;AACb,yCAAiB,QAAQ,SAAS,EAAE;AACpC,sCAAc,IAAI;AAAA,sBACpB;AAAA,sBAEA;AAAA,wCAAAD,OAACH,MAAA,EAAI,WAAU,gBAAe;AAAA,wBAAE;AAAA;AAAA;AAAA,kBAElC;AAAA,kBACA,gBAAAI;AAAA,oBAAC;AAAA;AAAA,sBACC,SAAS,MAAM;AACb,yCAAiB,QAAQ,SAAS,EAAE;AACpC,sCAAc,IAAI;AAAA,sBACpB;AAAA,sBAEA;AAAA,wCAAAD,OAACF,OAAA,EAAK,WAAU,gBAAe;AAAA,wBAAE;AAAA;AAAA;AAAA,kBAEnC;AAAA;AAAA;AAAA,YACF;AAAA,aACF,GACF;AAAA;AAAA;AAAA,MAxHK,SAAS;AAAA,IAyHhB,CACD,GACH;AAAA,KACF,GACF,GACF,GACF;AAEJ;AAEA,IAAO,wBAAQ;;;AChOf,SAAgB,YAAAK,YAAU,aAAAC,mBAAiB;;;ACE3C,SAAgB,YAAAC,kBAAgB;AAgBhC;AAAA,EACE,OAAAC;AAAA,EACA,QAAAC;AAAA,EACA,YAAAC;AAAA,EACA,gBAAAC;AAAA,EACA;AAAA,OACK;;;ACvBP;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,kBAAAC,uBAAsB;AAC3C;AAAA,EACE,QAAAC;AAAA,EAEA;AAAA,EACA;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,EACA,KAAAC;AAAA,OACK;AAiFG,SACE,OAAAC,QADF,QAAAC,eAAA;AAlEH,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAgC;AAC9B,MAAI,CAAC;AAAc,WAAO;AAE1B,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,UAAMC,oBAAmB,OAAO,YAAY;AAC5C,YAAQA,mBAAkB;AAAA,MACxB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAS,eAAO;AAAA,MACrB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAW,eAAO;AAAA,MACvB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAGA,QAAM,mBAAmB,aAAa,OAAO,YAAY;AACzD,QAAM,WAAW,CAAC,UAAU,SAAS,UAAU,EAAE,SAAS,gBAAgB;AAC1E,QAAM,aAAa,CAAC,aAAa,UAAU,SAAS,EAAE,SAAS,gBAAgB;AAG/E,QAAM,YAAY,qBAAqB,aAAc,aAAa,WAAsB;AACxF,QAAM,iBAAiB,qBAAqB,YAAa,aAAa,WAAsB;AAG5F,QAAM,YAAY;AAElB,QAAM,YAAY,YAAY,CAAC,CAAC,WAAY,YAAY,CAAC,CAAC;AAC1D,QAAM,YAAY,YAAY,CAAC,CAAC,WAAY,YAAY,CAAC,CAAC;AAC1D,QAAM,gBAAgB,YAAY,CAAC,CAAC,eAAgB,YAAY,CAAC,CAAC;AAIlE,UAAQ,IAAI,iCAAiC;AAAA,IAC3C;AAAA,IACA,gBAAgB,aAAa;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,aAAa;AAAA,MACX,UAAU,CAAC,CAAC;AAAA,MACZ,UAAU,CAAC,CAAC;AAAA,MACZ,cAAc,CAAC,CAAC;AAAA,IAClB;AAAA,EACF,CAAC;AAED,SACE,gBAAAH,OAACnB,SAAA,EAAO,MAAM,QAAQ,cAAc,SAClC,0BAAAoB,QAACnB,gBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAmB,QAAClB,eAAA,EACC;AAAA,sBAAAkB,QAACjB,cAAA,EAAY,WAAU,2BACrB;AAAA,wBAAAgB,OAAC,UAAK,kCAAoB;AAAA,QAC1B,gBAAAA,OAACR,SAAA,EAAM,SAASU,iBAAe,aAAa,MAAM,GAC/C,uBAAa,QAChB;AAAA,SACF;AAAA,MACA,gBAAAD,QAAChB,oBAAA,EAAkB;AAAA;AAAA,QAC6B,aAAa,UAAU,QAAQ;AAAA,SAC/E;AAAA,OACF;AAAA,IAEA,gBAAAgB,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAA,QAACb,QAAA,EACC;AAAA,wBAAAY,OAACX,cAAA,EACC,0BAAAW,OAACV,aAAA,EAAU,+BAAiB,GAC9B;AAAA,QACA,gBAAAU,OAACT,eAAA,EAAY,WAAU,aACrB,0BAAAU,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,6BAAe;AAAA,YACpE,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,IAAG;AAAA,aAC1C;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,oBAAM;AAAA,YAC3D,gBAAAA,OAAC,SAAI,WAAU,2BACb,0BAAAA,OAACR,SAAA,EAAM,SAASU,iBAAe,aAAa,MAAM,GAC/C,uBAAa,QAChB,GACF;AAAA,aACF;AAAA,UACA,gBAAAD,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,kBAAI;AAAA,YACzD,gBAAAA,OAAC,OAAE,WAAU,uBAAuB,uBAAa,MAAM,QAAQ,gBAAe;AAAA,aAChF;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,oBAAM;AAAA,YAC3D,gBAAAA,OAAC,OAAE,WAAU,uBACV,UAAAL,gBAAe,aAAa,QAAS,aAAa,MAAM,YAAY,KAAa,GACpF;AAAA,aACF;AAAA,UACA,gBAAAM,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,8BAAgB;AAAA,YACrE,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,mBAAmB,SAAQ;AAAA,aAClE;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,sBAAQ;AAAA,YAC7D,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,MAAM,YAAY,OAAM;AAAA,aAC/D;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAACb,QAAA,EACC;AAAA,wBAAAY,OAACX,cAAA,EACC,0BAAAW,OAACV,aAAA,EAAU,kCAAoB,GACjC;AAAA,QACA,gBAAAU,OAACT,eAAA,EAAY,WAAU,aACrB,0BAAAU,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,yBAAW;AAAA,YAChE,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,YAAW;AAAA,aAClD;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,2BAAa;AAAA,YAClE,gBAAAA,OAAC,OAAE,WAAU,uBAAuB,uBAAa,UAAU,QAAQ,WAAU;AAAA,aAC/E;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,mBAAK;AAAA,YAC1D,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,UAAU,SAAS,WAAU;AAAA,aACpE;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,iCAAmB;AAAA,YACxE,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,UAAU,WAAU;AAAA,aAC3D;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAACb,QAAA,EACC;AAAA,wBAAAY,OAACX,cAAA,EACC,0BAAAW,OAACV,aAAA,EAAU,0BAAY,GACzB;AAAA,QACA,gBAAAU,OAACT,eAAA,EAAY,WAAU,aACrB,0BAAAU,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,qBAAO;AAAA,YAC5D,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,QAAO;AAAA,aAC9C;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,uBAAS;AAAA,YAC9D,gBAAAA,OAAC,OAAE,WAAU,uBAAuB,uBAAa,MAAM,QAAQ,WAAU;AAAA,aAC3E;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,wBAAU;AAAA,YAC/D,gBAAAA,OAAC,OAAE,WAAU,uBACV,uBAAa,OAAOL,gBAAe,aAAa,KAAK,WAAW,aAAa,KAAK,QAAe,IAAI,WACxG;AAAA,aACF;AAAA,UACA,gBAAAM,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,8BAAgB;AAAA,YACrE,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,mBAAmB,SAAQ;AAAA,aAClE;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,oBAAM;AAAA,YAC3D,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,UAAU,WAAU;AAAA,aAC3D;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,qBAAO;AAAA,YAC5D,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,UAAU,WAAU;AAAA,aAC3D;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAACb,QAAA,EACC;AAAA,wBAAAY,OAACX,cAAA,EACC,0BAAAW,OAACV,aAAA,EAAU,6BAAe,GAC5B;AAAA,QACA,gBAAAU,OAACT,eAAA,EAAY,WAAU,aACrB,0BAAAU,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,kCAAoB;AAAA,YACzE,gBAAAA,OAAC,OAAE,WAAU,WAAW,UAAAN,YAAW,aAAa,kBAAkB,GAAE;AAAA,aACtE;AAAA,UACA,gBAAAO,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,gCAAkB;AAAA,YACvE,gBAAAA,OAAC,OAAE,WAAU,WAAW,uBAAa,mBAAmBN,YAAW,aAAa,gBAAgB,IAAI,eAAc;AAAA,aACpH;AAAA,UACA,gBAAAO,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,yBAAW;AAAA,YAChE,gBAAAA,OAAC,OAAE,WAAU,WAAU,qCAAuB;AAAA,aAChD;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,uBAAS;AAAA,YAC9D,gBAAAA,OAAC,OAAE,WAAU,WAAU,qCAAuB;AAAA,aAChD;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,wBAAU;AAAA,YAC/D,gBAAAA,OAAC,OAAE,WAAU,WAAW,UAAAN,YAAW,aAAa,SAAS,GAAE;AAAA,aAC7D;AAAA,UACA,gBAAAO,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,wBAAU;AAAA,YAC/D,gBAAAA,OAAC,OAAE,WAAU,WAAW,UAAAN,YAAW,aAAa,SAAS,GAAE;AAAA,aAC7D;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGC,aAAa,WAAW,eACvB,gBAAAO,QAACb,QAAA,EACC;AAAA,wBAAAY,OAACX,cAAA,EACC,0BAAAW,OAACV,aAAA,EAAU,sCAAwB,GACrC;AAAA,QACA,gBAAAU,OAACT,eAAA,EAAY,WAAU,aACrB,0BAAAU,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,0BAAY;AAAA,YACjE,gBAAAA,OAAC,OAAE,WAAU,WAAW,UAAAN,YAAW,aAAa,SAAS,GAAE;AAAA,aAC7D;AAAA,UACA,gBAAAO,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,qCAAoC,iCAAmB;AAAA,YACxE,gBAAAA,OAAC,OAAE,WAAU,WAAU,gCAAkB;AAAA,aAC3C;AAAA,WACF,GACF;AAAA,SACF;AAAA,OAEJ;AAAA,IAEA,gBAAAA,OAACP,YAAA,EAAU;AAAA,IAEX,gBAAAQ,QAACf,eAAA,EAAa,WAAU,wBACtB;AAAA,sBAAAe,QAAC,SAAI,WAAU,wBACZ;AAAA,qBAAa,YACZ,gBAAAA;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,SAAS,YAAY;AAAA,YACpC,WAAU;AAAA,YAEV;AAAA,8BAAAa,OAACH,QAAA,EAAM,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAE/B;AAAA,QAED,iBAAiB,gBAChB,gBAAAI;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,aAAa,YAAY;AAAA,YACxC,WAAU;AAAA,YAEV;AAAA,8BAAAa,OAACF,aAAA,EAAW,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAEpC;AAAA,QAED,kBAAkB,aACjB,gBAAAG;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,UAAU,cAAc,+BAA+B;AAAA,YACtE,WAAU;AAAA,YAEV;AAAA,8BAAAa,OAAC,SAAM,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAE/B;AAAA,QAED,aAAa,WAAW,YAAY,gBACnC,gBAAAC;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,aAAa,YAAY;AAAA,YACxC,WAAU;AAAA,YAEV;AAAA,8BAAAa,OAAC,QAAK,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAE9B;AAAA,QAED,aAAa,YACZ,gBAAAC;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,SAAS,YAAY;AAAA,YACpC,WAAU;AAAA,YAEV;AAAA,8BAAAa,OAACD,KAAA,EAAE,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAE3B;AAAA,SAEJ;AAAA,MACA,gBAAAE,QAAC,SAAI,WAAU,cACZ;AAAA,kBACC,gBAAAA;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,OAAO,YAAY;AAAA,YAClC,WAAU;AAAA,YAEV;AAAA,8BAAAa,OAACJ,OAAA,EAAK,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAE9B;AAAA,QAEF,gBAAAI,OAACb,UAAA,EAAO,SAAQ,WAAU,SAAS,SAAS,mBAE5C;AAAA,SACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AClWA,SAAgB,YAAAiB,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,oBAAAC;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,kBAAAC,uBAAsB;AAC3C,SAAS,YAAAC,YAAU,cAAAC,aAAY,SAAAC,cAAa;AAmElC,SACE,OAAAC,QADF,QAAAC,eAAA;AAnDV,IAAM,oBAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEO,SAAS,yBAAyB;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAkC;AAChC,QAAM,CAAC,YAAY,aAAa,IAAItB,WAAS,EAAE;AAC/C,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAS,EAAE;AACvC,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAS,kBAAkB;AACvD,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAS,EAAE;AAEjD,QAAM,eAAe,MAAM;AACzB,QAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;AAAQ;AAE7C,UAAM,gBAAgB;AAAA,MACpB,YAAY,IAAI,KAAK,UAAU;AAAA,MAC/B,QAAQ,WAAW,MAAM;AAAA,MACzB;AAAA,MACA,aAAa,YAAY,KAAK,KAAK;AAAA,IACrC;AAEA,cAAU,cAAc,aAAa;AAAA,EACvC;AAEA,QAAM,cAAc,MAAM;AACxB,kBAAc,EAAE;AAChB,cAAU,EAAE;AACZ,cAAU,kBAAkB;AAC5B,mBAAe,EAAE;AACjB,YAAQ;AAAA,EACV;AAEA,MAAI,CAAC;AAAc,WAAO;AAE1B,QAAM,iBAAiB,aAAa,UAAU,IAAI,KAAK,aAAa,OAAO,IAAI,oBAAI,KAAK;AACxF,QAAM,WAAU,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AACrD,QAAM,mBAAmB,IAAI,KAAK,eAAe,QAAQ,IAAI,KAAK,KAAK,KAAK,KAAK,GAAI,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAEjH,SACE,gBAAAqB,OAACpB,SAAA,EAAO,MAAM,QAAQ,cAAc,aAClC,0BAAAqB,QAACpB,gBAAA,EAAc,WAAU,aACvB;AAAA,oBAAAoB,QAACnB,eAAA,EACC;AAAA,sBAAAmB,QAAClB,cAAA,EAAY,WAAU,2BACrB;AAAA,wBAAAiB,OAACH,YAAA,EAAS,WAAU,yBAAwB;AAAA,QAAE;AAAA,SAEhD;AAAA,MACA,gBAAAI,QAACjB,oBAAA,EAAkB;AAAA;AAAA,QACQ,aAAa,UAAU,QAAQ;AAAA,QAAmB;AAAA,SAE7E;AAAA,OACF;AAAA,IAEA,gBAAAiB,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAA,QAACd,QAAA,EACC;AAAA,wBAAAa,OAACZ,cAAA,EACC,0BAAAY,OAACX,aAAA,EAAU,kCAAoB,GACjC;AAAA,QACA,gBAAAW,OAACV,eAAA,EAAY,WAAU,aACrB,0BAAAW,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACR,QAAA,EAAM,WAAU,qCAAoC,kBAAI;AAAA,YACzD,gBAAAQ,OAAC,OAAE,WAAU,uBAAuB,uBAAa,MAAM,QAAQ,gBAAe;AAAA,aAChF;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAACR,QAAA,EAAM,WAAU,qCAAoC,4BAAc;AAAA,YACnE,gBAAAQ,OAAC,OAAE,WAAU,uBACV,UAAAJ,gBAAe,aAAa,QAAQ,aAAa,QAAQ,GAC5D;AAAA,aACF;AAAA,UACA,gBAAAK,QAAC,SACC;AAAA,4BAAAD,OAACR,QAAA,EAAM,WAAU,qCAAoC,8BAAgB;AAAA,YACrE,gBAAAQ,OAAC,OAAE,WAAU,WAAW,UAAAL,YAAW,aAAa,OAAQ,GAAE;AAAA,aAC5D;AAAA,UACA,gBAAAM,QAAC,SACC;AAAA,4BAAAD,OAACR,QAAA,EAAM,WAAU,qCAAoC,oBAAM;AAAA,YAC3D,gBAAAQ,OAAC,OAAE,WAAU,WAAW,uBAAa,QAAO;AAAA,aAC9C;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,0BACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACR,QAAA,EAAM,SAAQ,cAAa,4BAAc;AAAA,YAC1C,gBAAAQ;AAAA,cAACT;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,OAAO;AAAA,gBACP,UAAU,CAACW,OAAM,cAAcA,GAAE,OAAO,KAAK;AAAA,gBAC7C,KAAK;AAAA,gBACL,aAAa;AAAA,gBACb,WAAU;AAAA;AAAA,YACZ;AAAA,YACA,gBAAAD,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,cAC5B;AAAA,cAAiB;AAAA,eAC/B;AAAA,aACF;AAAA,UACA,gBAAAA,QAAC,SACC;AAAA,4BAAAD,OAACR,QAAA,EAAM,SAAQ,UAAS,gCAAkB;AAAA,YAC1C,gBAAAS,QAAC,SAAI,WAAU,iBACb;AAAA,8BAAAD,OAACF,aAAA,EAAW,WAAU,4EAA2E;AAAA,cACjG,gBAAAE;AAAA,gBAACT;AAAA,gBAAA;AAAA,kBACC,IAAG;AAAA,kBACH,MAAK;AAAA,kBACL,OAAO;AAAA,kBACP,UAAU,CAACW,OAAM,UAAUA,GAAE,OAAO,KAAK;AAAA,kBACzC,aAAa,aAAa,OAAO,SAAS;AAAA,kBAC1C,WAAU;AAAA,kBACV,MAAK;AAAA,kBACL,KAAI;AAAA;AAAA,cACN;AAAA,eACF;AAAA,YACA,gBAAAD,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,cACvBL,gBAAe,aAAa,QAAQ,aAAa,QAAQ;AAAA,eAC5E;AAAA,aACF;AAAA,WACF;AAAA,QAEA,gBAAAK,QAAC,SACC;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,UAAS,gCAAkB;AAAA,UAC1C,gBAAAQ;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO;AAAA,cACP,UAAU,CAACE,OAAM,UAAUA,GAAE,OAAO,KAAK;AAAA,cACzC,WAAU;AAAA,cAET,4BAAkB,IAAI,CAAC,MACtB,gBAAAF,OAAC,YAAe,OAAO,GACpB,YAAE,QAAQ,KAAK,GAAG,KADR,CAEb,CACD;AAAA;AAAA,UACH;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAACR,QAAA,EAAM,SAAQ,eAAc,oCAAsB;AAAA,UACnD,gBAAAQ;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO;AAAA,cACP,UAAU,CAACW,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,cAC9C,aAAY;AAAA,cACZ,WAAU;AAAA;AAAA,UACZ;AAAA,WACF;AAAA,SACF;AAAA,MAGC,cAAc,UACb,gBAAAD,QAACR,QAAA,EACC;AAAA,wBAAAO,OAACD,QAAA,EAAM,WAAU,WAAU;AAAA,QAC3B,gBAAAC,OAACN,mBAAA,EACC,0BAAAO,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,eAAc,gCAAkB;AAAA,UAC7C,gBAAAC,QAAC,SAAI,WAAU,kCACb;AAAA,4BAAAA,QAAC,SACC;AAAA,8BAAAD,OAAC,UAAK,WAAU,eAAc,0BAAY;AAAA,cAAO;AAAA,cAAEL,YAAW,aAAa,OAAQ;AAAA,eACrF;AAAA,YACA,gBAAAM,QAAC,SACC;AAAA,8BAAAD,OAAC,UAAK,WAAU,eAAc,sBAAQ;AAAA,cAAO;AAAA,cAAEL,YAAW,IAAI,KAAK,UAAU,CAAC;AAAA,eAChF;AAAA,YACA,gBAAAM,QAAC,SACC;AAAA,8BAAAD,OAAC,UAAK,WAAU,eAAc,+BAAiB;AAAA,cAAO;AAAA,cAAEJ,gBAAe,WAAW,MAAM,KAAK,GAAG,aAAa,QAAQ;AAAA,eACvH;AAAA,YACA,gBAAAK,QAAC,SACC;AAAA,8BAAAD,OAAC,UAAK,WAAU,eAAc,qBAAO;AAAA,cAAO;AAAA,cAAE,OAAO,QAAQ,KAAK,GAAG;AAAA,eACvE;AAAA,aACF;AAAA,WACF,GACF;AAAA,SACF;AAAA,OAEJ;AAAA,IAEA,gBAAAC,QAAChB,eAAA,EACC;AAAA,sBAAAe,OAACd,UAAA,EAAO,SAAQ,WAAU,SAAS,aAAa,UAAU,SAAS,oBAEnE;AAAA,MACA,gBAAAc;AAAA,QAACd;AAAA,QAAA;AAAA,UACC,SAAS;AAAA,UACT,UAAU,WAAW,CAAC,cAAc,CAAC;AAAA,UAEpC,oBAAU,iBAAiB;AAAA;AAAA,MAC9B;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC1OA,SAAgB,YAAAiB,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP,SAAqB,kBAAAC,wBAAsB;AAC3C,SAAS,cAAAC,aAAY,SAAAC,QAAO,KAAAC,WAA4B;AA2D9C,SACE,OAAAC,QADF,QAAAC,eAAA;AA/CH,SAAS,6BAA6B;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAsC;AACpC,QAAM,CAAC,gBAAgB,iBAAiB,IAAI1B,WAAwB,IAAI;AACxE,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAwB,CAAC;AAErE,QAAM,eAAe,MAAM;AACzB,QAAI,CAAC,gBAAgB,CAAC;AAAgB;AACtC,cAAU,cAAc,gBAAgB,cAAc;AAAA,EACxD;AAEA,QAAM,cAAc,MAAM;AACxB,sBAAkB,IAAI;AACtB,YAAQ;AAAA,EACV;AAEA,MAAI,CAAC;AAAc,WAAO;AAE1B,QAAM,cAAc,aAAa;AACjC,QAAM,eAAe,MAAM,KAAK,CAAA2B,OAAKA,GAAE,OAAO,cAAc;AAE5D,QAAM,uBAAuB,CAAC,SAAc,aAAkB;AAC5D,UAAMC,YAAW;AAAA,MACf,EAAE,KAAK,WAAW,OAAO,eAAe,SAAS,SAAS,QAAQ,SAAS,UAAU,UAAU,QAAQ,QAAQ;AAAA,MAC/G,EAAE,KAAK,SAAS,OAAO,aAAa,SAAS,SAAS,QAAQ,OAAO,UAAU,UAAU,QAAQ,MAAM;AAAA,MACvG,EAAE,KAAK,YAAY,OAAO,gBAAgB,SAAS,SAAS,QAAQ,UAAU,UAAU,UAAU,QAAQ,SAAS;AAAA,MACnH,EAAE,KAAK,aAAa,OAAO,iBAAiB,SAAS,SAAS,QAAQ,WAAW,UAAU,UAAU,QAAQ,UAAU;AAAA,IACzH;AAEA,WAAOA,UAAS,IAAI,cAAY;AAAA,MAC9B,GAAG;AAAA,MACH,QAAQ,QAAQ,WAAW,QAAQ,UAAU,YACrC,QAAQ,WAAW,QAAQ,UAAU,cAAc;AAAA,IAC7D,EAAE;AAAA,EACJ;AAEA,QAAM,WAAW,qBAAqB,aAAa,YAAY;AAE/D,SACE,gBAAAH,OAACxB,SAAA,EAAO,MAAM,QAAQ,cAAc,aAClC,0BAAAyB,QAACxB,gBAAA,EAAc,WAAU,aACvB;AAAA,oBAAAwB,QAACvB,eAAA,EACC;AAAA,sBAAAuB,QAACtB,cAAA,EAAY,WAAU,2BACrB;AAAA,wBAAAqB,OAACH,aAAA,EAAW,WAAU,yBAAwB;AAAA,QAAE;AAAA,SAElD;AAAA,MACA,gBAAAI,QAACrB,oBAAA,EAAkB;AAAA;AAAA,QACa,aAAa,UAAU,QAAQ;AAAA,QAAmB;AAAA,SAElF;AAAA,OACF;AAAA,IAEA,gBAAAqB,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAA,QAAClB,QAAA,EACC;AAAA,wBAAAiB,OAAChB,cAAA,EACC,0BAAAgB,OAACf,aAAA,EAAU,0BAAY,GACzB;AAAA,QACA,gBAAAe,OAACd,eAAA,EACC,0BAAAe,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,QAAG,WAAU,yBAAyB,uBAAa,QAAQ,gBAAe;AAAA,YAC3E,gBAAAA,OAAC,OAAE,WAAU,yBAAyB,uBAAa,eAAe,kBAAiB;AAAA,aACrF;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,cACb;AAAA,4BAAAD,OAAC,OAAE,WAAU,sBACV,wBAAcJ,iBAAe,YAAY,WAAW,YAAY,QAAQ,IAAI,WAC/E;AAAA,YACA,gBAAAI,OAAC,OAAE,WAAU,yBAAwB,uBAAS;AAAA,aAChD;AAAA,WACF,GACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACb,QAAA,EAAM,WAAU,yBAAwB,4BAAc;AAAA,QACvD,gBAAAc,QAACX,SAAA,EAAO,OAAO,eAAe,SAAS,GAAG,eAAe,CAAC,UAAU,kBAAkB,SAAS,KAAK,CAAkB,GACpH;AAAA,0BAAAU,OAACP,gBAAA,EAAc,WAAU,UACvB,0BAAAO,OAACN,cAAA,EAAY,aAAY,yBAAwB,GACnD;AAAA,UACA,gBAAAO,QAACV,gBAAA,EACC;AAAA,4BAAAS,OAACR,aAAA,EAAW,OAAM,KAAI,mCAAqB;AAAA,YAC3C,gBAAAQ,OAACR,aAAA,EAAW,OAAM,KAAI,sCAAwB;AAAA,YAC9C,gBAAAQ,OAACR,aAAA,EAAW,OAAM,MAAK,mCAAqB;AAAA,aAC9C;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAS,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACb,QAAA,EAAM,WAAU,yBAAwB,6BAAe;AAAA,QACxD,gBAAAa,OAAC,SAAI,WAAU,wDACZ,gBAAM,IAAI,CAAC,SAAS;AACnB,gBAAM,UAAU,KAAK,WAAW,CAAC;AACjC,gBAAM,YAAY,mBAAmB,IAAI,YAAY,mBAAmB,IAAI,cAAc;AAC1F,gBAAM,gBAAgB,QAAQ,SAAS,KAAK,EAAE,OAAO,KAAK,WAAW,UAAU,GAAG,iBAAiB,KAAK,WAAW,SAAS,EAAE;AAE9H,iBACE,gBAAAC;AAAA,YAAClB;AAAA,YAAA;AAAA,cAEC,WAAW,iCACT,mBAAmB,KAAK,KACpB,yCACA,uBACN;AAAA,cACA,SAAS,MAAM,kBAAkB,KAAK,EAAE;AAAA,cAExC;AAAA,gCAAAkB,QAACjB,cAAA,EACC;AAAA,kCAAAiB,QAAC,SAAI,WAAU,qCACb;AAAA,oCAAAD,OAACf,aAAA,EAAU,WAAU,WAAW,eAAK,MAAK;AAAA,oBACzC,mBAAmB,KAAK,MACvB,gBAAAe,OAACF,QAAA,EAAM,WAAU,yBAAwB;AAAA,qBAE7C;AAAA,kBACA,gBAAAE,OAAC,OAAE,WAAU,yBAAyB,eAAK,aAAY;AAAA,mBACzD;AAAA,gBACA,gBAAAA,OAACd,eAAA,EACC,0BAAAe,QAAC,SAAI,WAAU,aACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,eACb;AAAA,oCAAAD,OAAC,SAAI,WAAU,sBACZ,UAAAJ,iBAAe,cAAc,OAAO,KAAK,QAAQ,GACpD;AAAA,oBACA,gBAAAI,OAAC,SAAI,WAAU,yBACZ,6BAAmB,IAAI,cACvB,mBAAmB,IAAI,gBAAgB,YAC1C;AAAA,oBACC,cAAc,WAAW,KACxB,gBAAAC,QAAC,SAAI,WAAU,+CACb;AAAA,sCAAAA,QAACN,SAAA,EAAM,SAAQ,WAAU,WAAU,mCAChC;AAAA,sCAAc;AAAA,wBAAS;AAAA,yBAC1B;AAAA,sBACA,gBAAAM,QAAC,UAAK,WAAU,0BAAyB;AAAA;AAAA,wBACjCL,iBAAe,cAAc,SAAS,KAAK,QAAQ;AAAA,yBAC3D;AAAA,uBACF;AAAA,qBAEJ;AAAA,kBACA,gBAAAK,QAAC,SAAI,WAAU,qBACb;AAAA,oCAAAA,QAAC,SAAI;AAAA;AAAA,sBAAU,KAAK,OAAO,YAAY,KAAK,cAAc,KAAK,OAAO;AAAA,uBAAQ;AAAA,oBAC9E,gBAAAA,QAAC,SAAI;AAAA;AAAA,sBAAQ,KAAK,OAAO,UAAU,KAAK,cAAc,KAAK,OAAO;AAAA,uBAAM;AAAA,oBACxE,gBAAAA,QAAC,SAAI;AAAA;AAAA,sBAAW,KAAK,OAAO,aAAa,KAAK,cAAc,KAAK,OAAO;AAAA,uBAAS;AAAA,oBACjF,gBAAAA,QAAC,SAAI;AAAA;AAAA,sBAAY,KAAK,OAAO,cAAc,KAAK,cAAc,KAAK,OAAO;AAAA,uBAAU;AAAA,qBACtF;AAAA,mBACF,GACF;AAAA;AAAA;AAAA,YA7CK,KAAK;AAAA,UA8CZ;AAAA,QAEJ,CAAC,GACH;AAAA,SACF;AAAA,MAGC,gBACC,gBAAAA,QAAClB,QAAA,EACC;AAAA,wBAAAiB,OAAChB,cAAA,EACC,0BAAAgB,OAACf,aAAA,EAAU,6BAAe,GAC5B;AAAA,QACA,gBAAAe,OAACd,eAAA,EACC,0BAAAe,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,kCACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,eAAc,qBAAO;AAAA,YACpC,gBAAAA,OAAC,SAAI,WAAU,2BAA0B,qBAAO;AAAA,YAChD,gBAAAA,OAAC,SAAI,WAAU,2BAA0B,sBAAQ;AAAA,aACnD;AAAA,UACC,SAAS,IAAI,CAAC,YACb,gBAAAC,QAAC,SAAsB,WAAU,kCAC/B;AAAA,4BAAAD,OAAC,SAAK,kBAAQ,OAAM;AAAA,YACpB,gBAAAA,OAAC,SAAI,WAAU,eACZ,kBAAQ,YAAY,KAAK,cAAc,QAAQ,SAClD;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,sDACZ;AAAA,sBAAQ,aAAa,KAAK,cAAc,QAAQ;AAAA,cAChD,QAAQ,WAAW,aAClB,gBAAAD,OAACH,aAAA,EAAW,WAAU,0BAAyB;AAAA,cAEhD,QAAQ,WAAW,eAClB,gBAAAG,OAACD,KAAA,EAAE,WAAU,wBAAuB;AAAA,eAExC;AAAA,eAbQ,QAAQ,GAclB,CACD;AAAA,WACH,GACF;AAAA,SACF;AAAA,MAID,gBAAgB,eACf,gBAAAC,OAACZ,QAAA,EACC,0BAAAY,OAACX,mBAAA,EACC,0BAAAY,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,eAAc,6BAAe;AAAA,QAC1C,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,WAAU;AAAA;AAAA,YACjBL,iBAAe,YAAY,WAAW,YAAY,QAAQ;AAAA,YAAE;AAAA,aACrE;AAAA,UACA,gBAAAI,OAACH,aAAA,EAAW,WAAU,WAAU;AAAA,UAChC,gBAAAI,QAAC,UAAK,WAAU,uBAAsB;AAAA;AAAA,YAC/BL,iBAAe,aAAa,WAAW,aAAa,QAAQ;AAAA,YAAE;AAAA,aACrE;AAAA,WACF;AAAA,QACA,gBAAAI,OAAC,OAAE,WAAU,yBAAwB,mGAErC;AAAA,SACF,GACF,GACF;AAAA,OAEJ;AAAA,IAEA,gBAAAC,QAACpB,eAAA,EACC;AAAA,sBAAAmB,OAAClB,UAAA,EAAO,SAAQ,WAAU,SAAS,aAAa,UAAU,SAAS,oBAEnE;AAAA,MACA,gBAAAkB;AAAA,QAAClB;AAAA,QAAA;AAAA,UACC,SAAS;AAAA,UACT,UAAU,WAAW,CAAC;AAAA,UAErB,oBAAU,qBAAqB;AAAA;AAAA,MAClC;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC1QA,SAAgB,YAAAsB,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,MAAAC;AAAA,OACK;;;ACbP,SAAgB,YAAAC,YAAU,aAAAC,mBAAiB;AAoB3C;AAAA,EAEE,cAAAC;AAAA,EACA,SAAAC;AAAA,EACA;AAAA,EACA,cAAAC;AAAA,EACA,eAAAC;AAAA,OAEK;AA0PK,SACE,OAAAC,QADF,QAAAC,eAAA;AA5ML,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,cAAc;AAChB,GAA0B;AACxB,QAAM,CAAC,UAAU,WAAW,IAAIC,WAA+B;AAAA,IAC7D,YAAY,aAAa,cAAc;AAAA,IACvC,QAAQ,aAAa,UAAU;AAAA,IAC/B,QAAQ,aAAa,UAAU;AAAA,IAC/B,oBAAoB,aAAa,sBAAsB,oBAAI,KAAK;AAAA,IAChE,kBAAkB,aAAa,oBAAoB,oBAAI,KAAK;AAAA,IAC5D,YAAY,aAAa;AAAA,IACzB,UAAU,aAAa;AAAA,IACvB,QAAQ,aAAa,UAAU;AAAA,IAC/B,UAAU,aAAa,YAAY;AAAA,IACnC,UAAU,aAAa,YAAY;AAAA,IACnC,eAAe,aAAa,iBAAiB;AAAA,IAC7C,QAAQ,aAAa,UAAU;AAAA,IAC/B,UAAU,aAAa,YAAY;AAAA,IACnC,SAAS,aAAa,WAAW;AAAA,IACjC,UAAU,aAAa,YAAY;AAAA,IACnC,mBAAmB,aAAa,qBAAqB;AAAA,IACrD,YAAY,aAAa;AAAA,IACzB,cAAc,aAAa;AAAA,IAC3B,WAAW,aAAa,aAAa;AAAA,IACrC,cAAc,aAAa,gBAAgB;AAAA,EAC7C,CAAC;AAED,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAsB,IAAI;AAClE,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAgB,CAAC,CAAC;AAGhE,EAAAC,YAAU,MAAM;AACd,UAAM,UAAU,UAAU,IAAI,eAAa;AAAA,MACzC,OAAO,SAAS,GAAG,SAAS;AAAA,MAC5B,OAAO,SAAS;AAAA,MAChB,UAAU,SAAS;AAAA,MACnB,aAAa,GAAG,SAAS,IAAI,KAAK,SAAS,KAAK;AAAA,MAChD,MAAM;AAAA,IACR,EAAE;AACF,uBAAmB,OAAO;AAAA,EAC5B,GAAG,CAAC,SAAS,CAAC;AAGd,QAAM,uBAAuB,OAAO,UAAkB;AACpD,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,aAAO;AAAA,IACT;AAEA,UAAM,WAAW,gBAAgB;AAAA,MAAO,YACtC,OAAO,MAAM,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC,KACvD,OAAO,UAAU,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC,KAC3D,OAAO,aAAa,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC;AAAA,IAChE;AAEA,WAAO;AAAA,EACT;AAGA,EAAAA,YAAU,MAAM;AACd,UAAM,OAAO,MAAM,KAAK,CAAAC,OAAKA,GAAE,OAAO,SAAS,MAAM;AACrD,oBAAgB,QAAQ,IAAI;AAAA,EAC9B,GAAG,CAAC,SAAS,QAAQ,KAAK,CAAC;AAE3B,QAAM,eAAe,MAAe;AAClC,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,YAAY;AACxB,gBAAU,aAAa;AAAA,IACzB;AAEA,QAAI,CAAC,SAAS,QAAQ;AACpB,gBAAU,SAAS;AAAA,IACrB;AAEA,QAAI,CAAC,SAAS,UAAU,SAAS,UAAU,GAAG;AAC5C,gBAAU,SAAS;AAAA,IACrB;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOC,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,QAAI;AACF,YAAM,aAAa;AAAA,QACjB,YAAY,SAAS;AAAA,QACrB,QAAQ,SAAS;AAAA,QACjB,QAAQ,SAAS;AAAA,QACjB,oBAAoB,SAAS;AAAA,QAC7B,kBAAkB,SAAS;AAAA,QAC3B,YAAY,SAAS;AAAA,QACrB,UAAU,SAAS;AAAA,QACnB,QAAQ,SAAS;AAAA,QACjB,UAAU,SAAS;AAAA,QACnB,UAAU,SAAS;AAAA,QACnB,eAAe,SAAS;AAAA,QACxB,QAAQ,SAAS;AAAA,QACjB,UAAU,SAAS;AAAA,QACnB,SAAS,SAAS;AAAA,QAClB,UAAU,SAAS;AAAA,QACnB,mBAAmB,SAAS;AAAA,QAC5B,YAAY,SAAS;AAAA,QACrB,cAAc,SAAS;AAAA,QACvB,WAAW,SAAS;AAAA,QACpB,cAAc,SAAS;AAAA,MACzB;AAEA,YAAM,SAAS,UAAU;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,kCAAkC,KAAK;AAAA,IACvD;AAAA,EACF;AAGA,QAAMC,yBAAwB,CAAC,WAA2B;AACxD,UAAM,cAAsC;AAAA,MAC1C,GAAG;AAAA;AAAA,MACH,GAAG;AAAA;AAAA,MACH,GAAG;AAAA;AAAA,MACH,IAAI;AAAA;AAAA,IACN;AACA,WAAO,YAAY,MAAM,KAAK;AAAA,EAChC;AAGA,QAAM,+BAA+B,CAAC,WAAmB,WAAmB;AAC1E,UAAM,WAAWA,uBAAsB,MAAM;AAC7C,UAAM,cAAc;AACpB,UAAM,iBAAiB,YAAY;AACnC,UAAM,iBAAkB,iBAAiB,WAAY;AACrD,UAAM,aAAa,iBAAiB;AACpC,UAAM,oBAAoB,aAAa;AAEvC,WAAO;AAAA,MACL,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,QAAM,oBAAoB,CAAC,OAAmC,UAAe;AAC3E,gBAAY,UAAQ;AAClB,YAAM,UAAU,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM;AAG1C,UAAI,UAAU,YAAY;AACxB,cAAM,sBAAsD;AAAA,UAC1D,SAAS;AAAA,UACT,WAAW;AAAA,UACX,WAAW;AAAA,UACX,QAAQ;AAAA,QACV;AACA,gBAAQ,SAAS,oBAAoB,KAAK,KAAK;AAG/C,YAAI,cAAc;AAChB,gBAAM,UAAU,6BAA6B,aAAa,WAAW,QAAQ,MAAM;AACnF,kBAAQ,SAAS,QAAQ;AACzB,kBAAQ,WAAW,QAAQ;AAC3B,kBAAQ,UAAU,QAAQ;AAAA,QAC5B;AAAA,MACF;AAEA,aAAO;AAAA,IACT,CAAC;AAGD,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS;AAAA,QACjB,GAAG;AAAA,QACH,CAAC,KAAK,GAAG;AAAA,MACX,EAAE;AAAA,IACJ;AAAA,EACF;AAEA,QAAMC,mBAAiB,CAAC,QAAgB,WAAmB,UAAU;AACnE,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAM,cACJ,gBAAAN,QAAC,SAAI,WAAU,aAET;AAAA,oBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAACO,QAAA,EAAM,SAAQ,cAAa,WAAU,+BACpC;AAAA,wBAAAR,OAAC,YAAS,WAAU,WAAU;AAAA,QAC9B,gBAAAA,OAAC,UAAK,wBAAU;AAAA,SAClB;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS;AAAA,UAChB,UAAU,CAAC,UAAU,kBAAkB,cAAc,KAAK;AAAA,UAC1D,SAAS;AAAA,UACT,UAAU;AAAA,UACV,aAAY;AAAA,UACZ,mBAAkB;AAAA,UAClB,WAAU;AAAA,UACV,aAAY;AAAA,UACZ,WAAW,UAAU,OAAO,aAAa,mBAAmB,EAAE;AAAA;AAAA,MAChE;AAAA,MACC,OAAO,cACN,gBAAAC,QAAC,OAAE,WAAU,oDACX;AAAA,wBAAAD,OAACD,eAAA,EAAY,WAAU,WAAU;AAAA,QACjC,gBAAAC,OAAC,UAAM,iBAAO,YAAW;AAAA,SAC3B;AAAA,OAEJ;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAACO,QAAA,EAAM,SAAQ,UAAS,WAAU,+BAChC;AAAA,wBAAAR,OAACF,aAAA,EAAW,WAAU,WAAU;AAAA,QAChC,gBAAAE,OAAC,UAAK,oBAAM;AAAA,SACd;AAAA,MACA,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS,OAAO,SAAS;AAAA,UAChC,eAAe,CAAC,UAAU,kBAAkB,UAAU,SAAS,KAAK,CAAC;AAAA,UACrE,UAAU,SAAS;AAAA,UAEnB;AAAA,4BAAAD,OAAC,iBAAc,WAAW,UAAU,OAAO,SAAS,mBAAmB,EAAE,IACvE,0BAAAA,OAAC,eAAY,aAAY,iBAAgB,GAC3C;AAAA,YACA,gBAAAA,OAAC,iBACE,gBAAM,SAAS,IACd,MAAM,IAAI,UACR,gBAAAA,OAAC,cAAyB,OAAO,KAAK,GAAG,SAAS,GAChD,0BAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,eAAe,eAAK,MAAK;AAAA,cACzC,gBAAAC,QAAC,UAAK,WAAU,yBACb;AAAA,gBAAAM,iBAAe,KAAK,WAAW,KAAK,QAAQ;AAAA,gBAAE;AAAA,gBAAE,KAAK;AAAA,iBACxD;AAAA,eACF,KANe,KAAK,EAOtB,CACD,IAED,gBAAAP,OAAC,cAAW,OAAM,YAAW,UAAQ,MAAC,gCAEtC,GAEJ;AAAA;AAAA;AAAA,MACF;AAAA,MACC,OAAO,UACN,gBAAAC,QAAC,OAAE,WAAU,oDACX;AAAA,wBAAAD,OAACD,eAAA,EAAY,WAAU,WAAU;AAAA,QACjC,gBAAAC,OAAC,UAAM,iBAAO,QAAO;AAAA,SACvB;AAAA,OAEJ;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAACO,QAAA,EAAM,SAAQ,UAAS,WAAU,+BAChC;AAAA,wBAAAR,OAAC,eAAY,QAAQ,SAAS,QAAQ;AAAA,QACtC,gBAAAA,OAAC,UAAK,oBAAM;AAAA,SACd;AAAA,MACA,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS;AAAA,UAChB,eAAe,CAAC,UAAU,kBAAkB,UAAU,KAAK;AAAA,UAC3D,UAAU,SAAS;AAAA,UAEnB;AAAA,4BAAAD,OAAC,iBAAc,WAAU,UACvB,0BAAAA,OAAC,eAAY,aAAY,iBAAgB,GAC3C;AAAA,YACA,gBAAAC,QAAC,iBACC;AAAA,8BAAAD,OAAC,cAAW,OAAM,SAAQ,mBAAK;AAAA,cAC/B,gBAAAA,OAAC,cAAW,OAAM,UAAS,oBAAM;AAAA,cACjC,gBAAAA,OAAC,cAAW,OAAM,YAAW,sBAAQ;AAAA,cACrC,gBAAAA,OAAC,cAAW,OAAM,aAAY,uBAAS;AAAA,cACvC,gBAAAA,OAAC,cAAW,OAAM,UAAS,oBAAM;AAAA,eACnC;AAAA;AAAA;AAAA,MACF;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAACO,QAAA,EAAM,SAAQ,UAAS,WAAU,+BAChC;AAAA,wBAAAR,OAACJ,cAAA,EAAW,WAAU,WAAU;AAAA,QAChC,gBAAAI,OAAC,UAAK,sBAAQ;AAAA,SAChB;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,MAAK;AAAA,UACL,OAAO,SAAS;AAAA,UAChB,UAAU,CAACK,OAAM,kBAAkB,UAAU,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,UAC5E,aAAY;AAAA,UACZ,UAAU,SAAS;AAAA,UACnB,WAAW,UAAU,OAAO,SAAS,mBAAmB,EAAE;AAAA;AAAA,MAC5D;AAAA,MACC,OAAO,UACN,gBAAAJ,QAAC,OAAE,WAAU,oDACX;AAAA,wBAAAD,OAACD,eAAA,EAAY,WAAU,WAAU;AAAA,QACjC,gBAAAC,OAAC,UAAM,iBAAO,QAAO;AAAA,SACvB;AAAA,OAEJ;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAACQ,QAAA,EAAM,SAAQ,YAAW,sBAAQ;AAAA,MAClC,gBAAAP;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS;AAAA,UAChB,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,UAC7D,UAAU,SAAS;AAAA,UAEnB;AAAA,4BAAAD,OAAC,iBAAc,WAAU,UACvB,0BAAAA,OAAC,eAAY,aAAY,mBAAkB,GAC7C;AAAA,YACA,gBAAAC,QAAC,iBACC;AAAA,8BAAAD,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,cAC3B,gBAAAA,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,cAC3B,gBAAAA,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,eAC7B;AAAA;AAAA;AAAA,MACF;AAAA,OACF;AAAA,IAIA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAACO,QAAA,EAAM,SAAQ,YAAW,WAAU,+BAClC;AAAA,wBAAAR,OAACH,QAAA,EAAM,WAAU,WAAU;AAAA,QAC3B,gBAAAG,OAAC,UAAK,8BAAgB;AAAA,SACxB;AAAA,MACA,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS;AAAA,UAChB,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,UAC7D,UAAU,SAAS;AAAA,UAEnB;AAAA,4BAAAD,OAAC,iBAAc,WAAU,UACvB,0BAAAA,OAAC,eAAY,aAAY,2BAA0B,GACrD;AAAA,YACA,gBAAAC,QAAC,iBACC;AAAA,8BAAAD,OAAC,cAAW,OAAM,YAAW,sBAAQ;AAAA,cACrC,gBAAAA,OAAC,cAAW,OAAM,eAAc,yBAAW;AAAA,cAC3C,gBAAAA,OAAC,cAAW,OAAM,cAAa,0BAAY;AAAA,cAC3C,gBAAAA,OAAC,cAAW,OAAM,gBAAe,0BAAY;AAAA,cAC7C,gBAAAA,OAAC,cAAW,OAAM,iBAAgB,2BAAa;AAAA,eACjD;AAAA;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,+DAErC;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAACQ,QAAA,EAAM,SAAQ,YAAW,8BAAgB;AAAA,MAC1C,gBAAAP;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS;AAAA,UAChB,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,UAC7D,UAAU,SAAS;AAAA,UAEnB;AAAA,4BAAAD,OAAC,iBAAc,WAAU,UACvB,0BAAAA,OAAC,eAAY,aAAY,mBAAkB,GAC7C;AAAA,YACA,gBAAAC,QAAC,iBACC;AAAA,8BAAAD,OAAC,cAAW,OAAM,SAChB,0BAAAC,QAAC,SAAI,WAAU,4CACb;AAAA,gCAAAD,OAAC,UAAK,qBAAO;AAAA,gBACb,gBAAAA,OAAC,UAAK,WAAU,yBAAwB,2BAAa;AAAA,iBACvD,GACF;AAAA,cACA,gBAAAA,OAAC,cAAW,OAAM,WAChB,0BAAAC,QAAC,SAAI,WAAU,4CACb;AAAA,gCAAAD,OAAC,UAAK,uBAAS;AAAA,gBACf,gBAAAA,OAAC,UAAK,WAAU,sCAAqC,4BAAc;AAAA,iBACrE,GACF;AAAA,cACA,gBAAAA,OAAC,cAAW,OAAM,WAChB,0BAAAC,QAAC,SAAI,WAAU,4CACb;AAAA,gCAAAD,OAAC,UAAK,sBAAQ;AAAA,gBACd,gBAAAA,OAAC,UAAK,WAAU,sCAAqC,4BAAc;AAAA,iBACrE,GACF;AAAA,cACA,gBAAAA,OAAC,cAAW,OAAM,QAChB,0BAAAC,QAAC,SAAI,WAAU,4CACb;AAAA,gCAAAD,OAAC,UAAK,oBAAM;AAAA,gBACZ,gBAAAA,OAAC,UAAK,WAAU,sCAAqC,4BAAc;AAAA,iBACrE,GACF;AAAA,eACF;AAAA;AAAA;AAAA,MACF;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,SAAS,SAAS;AAAA,UAClB,iBAAiB,CAAC,YAAY,kBAAkB,aAAa,OAAO;AAAA,UACpE,UAAU,SAAS;AAAA;AAAA,MACrB;AAAA,MACA,gBAAAA,OAACQ,QAAA,EAAM,SAAQ,aAAY,wBAAU;AAAA,OACvC;AAAA,IAGC,SAAS,UACR,gBAAAP,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAACQ,QAAA,EAAM,SAAQ,gBAAe,2BAAa;AAAA,MAC3C,gBAAAR;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,SAAS,gBAAgB;AAAA,UAChC,UAAU,CAACK,OAAM,kBAAkB,gBAAgBA,GAAE,OAAO,KAAK;AAAA,UACjE,aAAY;AAAA,UACZ,MAAM;AAAA;AAAA,MACR;AAAA,OACF;AAAA,KAER;AAGF,SACE,gBAAAJ,QAAC,UAAK,UAAU,cAAc,WAAU,aACrC;AAAA,eACC,gBAAAA,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,+BACnB;AAAA,wBAAAD,OAACF,aAAA,EAAW,WAAU,WAAU;AAAA,QAChC,gBAAAE,OAAC,UAAM,oBAAU,SAAS,WAAW,wBAAwB,sBAAqB;AAAA,SACpF,GACF;AAAA,MACA,gBAAAA,OAAC,eACE,uBACH;AAAA,OACF,IAEA;AAAA,IAID,eAAe,SAAS,UACvB,gBAAAC,QAAC,SAAI,WAAU,8BACb;AAAA,sBAAAD,OAAC,UAAO,MAAK,UAAS,SAAQ,WAAU,SAAS,UAAU,UAAU,SAAS,oBAE9E;AAAA,MACA,gBAAAA,OAAC,UAAO,MAAK,UAAS,UAAU,SAC7B,oBAAU,cAAe,cAAc,QAC1C;AAAA,OACF;AAAA,KAEJ;AAEJ;;;ADtgBA,SAAS,kBAAAS,wBAAsB;AAC/B,SAAS,cAAAC,cAAY,cAAAC,aAAY,YAAAC,YAAU,eAAe;AA0HhD,gBAAAC,QACA,QAAAC,eADA;AAtFH,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAgC;AAC9B,QAAM,CAAC,UAAU,WAAW,IAAIC,WAAwC,CAAC,CAAC;AAG1E,EAAAC,YAAU,MAAM;AACd,QAAI,cAAc;AAChB,kBAAY;AAAA,QACV,QAAQ,SAAS,aAAa,MAAM;AAAA,QACpC,YAAY,SAAS,aAAa,UAAU;AAAA,QAC5C,QAAQ,aAAa;AAAA,QACrB,QAAQ,aAAa;AAAA,QACrB,UAAU,aAAa;AAAA,QACvB,UAAU,aAAa;AAAA,QACvB,eAAe,aAAa;AAAA,QAC5B,QAAQ,aAAa;AAAA,QACrB,UAAU,aAAa;AAAA,QACvB,SAAS,aAAa;AAAA,QACtB,UAAW,aAAqB,YAAY;AAAA,QAC5C,oBAAoB,aAAa;AAAA,QACjC,kBAAkB,aAAa;AAAA,QAC/B,YAAY,aAAa;AAAA,QACzB,UAAU,aAAa;AAAA,QACvB,mBAAmB,aAAa;AAAA,QAChC,YAAY,aAAa;AAAA,QACzB,cAAc,aAAa;AAAA,QAC3B,WAAW,CAAC,aAAa;AAAA,QACzB,cAAc;AAAA,MAChB,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,YAAY,CAAC;AAEjB,QAAM,eAAe,OAAO,SAAkC;AAC5D,QAAI;AACF,YAAM,OAAO,IAAI;AACjB,cAAQ;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,kCAAkC,KAAK;AAAA,IACvD;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,gBAAY,CAAC,CAAC;AACd,YAAQ;AAAA,EACV;AAGA,QAAM,6BAA6B,CAAC,WAAmB,aAAqB;AAC1E,UAAM,UAAU;AAAA,MACd,EAAE,UAAU,GAAG,OAAO,WAAW,UAAU,EAAE;AAAA,MAC7C,EAAE,UAAU,GAAG,OAAO,aAAa,UAAU,GAAG;AAAA,MAChD,EAAE,UAAU,GAAG,OAAO,YAAY,UAAU,GAAG;AAAA,MAC/C,EAAE,UAAU,IAAI,OAAO,UAAU,UAAU,GAAG;AAAA,IAChD;AAEA,WAAO,QAAQ,IAAI,YAAU;AAC3B,YAAM,kBAAkB,aAAa,IAAI,OAAO,WAAW;AAC3D,YAAM,eAAgB,YAAY,OAAO,WAAa,kBAAkB,OAAO;AAE/E,aAAO;AAAA,QACL,GAAG;AAAA,QACH,eAAe,YAAY,OAAO;AAAA,QAClC,iBAAiB,kBAAkB,OAAO;AAAA,QAC1C,cAAc;AAAA,QACd;AAAA,QACA,mBAAmB,OAAO;AAAA,MAC5B;AAAA,IACF,CAAC;AAAA,EACH;AAGA,QAAM,eAAe,MAAM,KAAK,UAAQ,KAAK,OAAO,SAAS,MAAM;AAEnE,MAAI,CAAC;AAAc,WAAO;AAE1B,SACE,gBAAAH,OAACI,SAAA,EAAO,MAAM,QAAQ,cAAc,cAClC,0BAAAH,QAACI,gBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAJ,QAACK,eAAA,EACC;AAAA,sBAAAN,OAACO,cAAA,EAAY,+BAAiB;AAAA,MAC9B,gBAAAN,QAACO,oBAAA,EAAkB;AAAA;AAAA,QACgB,aAAa,UAAU,QAAQ;AAAA,SAClE;AAAA,OACF;AAAA,IAEA,gBAAAP,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,UACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC,aAAa;AAAA,UACb;AAAA,UACA;AAAA,UACA,UAAU;AAAA,UACV,UAAU;AAAA,UACV;AAAA,UACA,MAAK;AAAA,UACL,OAAM;AAAA,UACN,YAAW;AAAA,UACX,UAAU;AAAA,UACV,aAAa;AAAA;AAAA,MACf,GACF;AAAA,MAGC,gBACC,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,aACf,0BAAAC,QAACQ,QAAA,EACC;AAAA,0BAAAT,OAACU,cAAA,EACC,0BAAAT,QAACU,aAAA,EAAU,WAAU,2BACnB;AAAA,4BAAAX,OAAC,WAAQ,WAAU,WAAU;AAAA,YAAE;AAAA,aAEjC,GACF;AAAA,UACA,gBAAAA,OAACY,eAAA,EACC,0BAAAZ,OAAC,SAAI,WAAU,aACZ,qCAA2B,aAAa,WAAW,SAAS,YAAY,KAAK,EAAE,IAAI,CAAC,WACnF,gBAAAC;AAAA,YAAC;AAAA;AAAA,cAEC,WAAWY;AAAA,gBACT;AAAA,gBACA,SAAS,WAAW,OAAO,WACvB,+BACA;AAAA,cACN;AAAA,cAEA;AAAA,gCAAAZ,QAAC,SAAI,WAAU,0CACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,oCAAAD,OAACD,YAAA,EAAS,WAAU,yBAAwB;AAAA,oBAC5C,gBAAAC,OAAC,UAAK,WAAU,+BAA+B,iBAAO,OAAM;AAAA,oBAC3D,OAAO,oBAAoB,KAC1B,gBAAAC,QAACa,SAAA,EAAM,WAAU,gDACd;AAAA,6BAAO;AAAA,sBAAkB;AAAA,uBAC5B;AAAA,qBAEJ;AAAA,kBACC,SAAS,WAAW,OAAO,YAC1B,gBAAAd,OAACc,SAAA,EAAM,WAAU,6CAA4C,qBAE7D;AAAA,mBAEJ;AAAA,gBAEA,gBAAAb,QAAC,SAAI,WAAU,kCACb;AAAA,kCAAAA,QAAC,SACC;AAAA,oCAAAD,OAAC,SAAI,WAAU,iBAAgB,2BAAa;AAAA,oBAC5C,gBAAAA,OAAC,SAAI,WAAU,iBACZ,UAAAJ,iBAAe,OAAO,cAAc,SAAS,QAAwB,GACxE;AAAA,qBACF;AAAA,kBACA,gBAAAK,QAAC,SACC;AAAA,oCAAAD,OAAC,SAAI,WAAU,iBAAgB,yBAAW;AAAA,oBAC1C,gBAAAA,OAAC,SAAI,WAAU,iBACZ,UAAAJ,iBAAe,OAAO,iBAAiB,SAAS,QAAwB,GAC3E;AAAA,qBACF;AAAA,mBACF;AAAA,gBAEC,OAAO,oBAAoB,KAC1B,gBAAAK,QAAC,SAAI,WAAU,sCACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,sCAAAD,OAACF,aAAA,EAAW,WAAU,0BAAyB;AAAA,sBAC/C,gBAAAE,OAAC,UAAK,WAAU,iBAAgB,2BAAa;AAAA,uBAC/C;AAAA,oBACA,gBAAAA,OAAC,SAAI,WAAU,gCACZ,UAAAJ,iBAAe,OAAO,cAAc,SAAS,QAAwB,GACxE;AAAA,qBACF;AAAA,kBACA,gBAAAK,QAAC,SAAI,WAAU,8BAA6B;AAAA;AAAA,oBACtCL,iBAAe,OAAO,eAAe,SAAS,QAAwB;AAAA,oBAAE;AAAA,qBAC9E;AAAA,mBACF;AAAA;AAAA;AAAA,YAtDG,OAAO;AAAA,UAwDd,CACD,GACH,GACF;AAAA,WACF,GACA;AAAA,QAGA,gBAAAI,OAAC,SAAI,WAAU,aACb,0BAAAC,QAACQ,QAAA,EACC;AAAA,0BAAAT,OAACU,cAAA,EACC,0BAAAT,QAACU,aAAA,EAAU,WAAU,2BACnB;AAAA,4BAAAX,OAACH,cAAA,EAAW,WAAU,WAAU;AAAA,YAAE;AAAA,aAEpC,GACF;AAAA,UACA,gBAAAG,OAACY,eAAA,EACC,0BAAAX,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,iBAAgB,kBAAI;AAAA,cACpC,gBAAAA,OAAC,UAAK,WAAU,iBAAiB,uBAAa,MAAK;AAAA,eACrD;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,iBAAgB,4BAAc;AAAA,cAC9C,gBAAAA,OAAC,UAAK,WAAU,iBACb,mBAAS,WAAW,IAAI,YACxB,SAAS,WAAW,IAAI,cACxB,SAAS,WAAW,IAAI,aACxB,SAAS,WAAW,KAAK,WACzB,GAAG,SAAS,UAAU,CAAC,WAC1B;AAAA,eACF;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,iBAAgB,4BAAc;AAAA,cAC9C,gBAAAA,OAAC,UAAK,WAAU,iBACb,UAAAJ,iBAAe,SAAS,UAAU,GAAG,SAAS,QAAwB,GACzE;AAAA,eACF;AAAA,YACA,gBAAAK,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,iBAAgB,8BAAgB;AAAA,cAChD,gBAAAC,QAAC,UAAK,WAAU,gCACb;AAAA,yBAAS,YAAY;AAAA,gBAAE;AAAA,iBAC1B;AAAA,eACF;AAAA,YACA,gBAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,iBAAgB,sBAAQ;AAAA,cACxC,gBAAAA,OAAC,UAAK,WAAU,iBACb,mBAAS,aAAa,aAAa,aACnC,SAAS,aAAa,gBAAgB,gBACtC,SAAS,aAAa,eAAe,iBACrC,SAAS,aAAa,iBAAiB,iBACvC,SAAS,aAAa,kBAAkB,kBACxC,gBACH;AAAA,eACF;AAAA,aACF,GACF;AAAA,WACF,GACF;AAAA,SACF;AAAA,OAEJ;AAAA,IAEA,gBAAAC,QAACc,eAAA,EAAa,WAAU,0BACtB;AAAA,sBAAAf,OAACgB,UAAA,EAAO,SAAQ,WAAU,SAAS,cAAc,UAAU,SAAS,oBAEpE;AAAA,MACA,gBAAAhB,OAACgB,UAAA,EAAO,SAAS,MAAM,aAAa,QAAmC,GAAG,UAAU,SACjF,oBAAU,cAAc,gBAC3B;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AJ5NW,SAiPmB,YAAAC,YAjPnB,OAAAC,QAgGC,QAAAC,eAhGD;AArCJ,SAAS,iBAAiB;AAAA,EAC/B,gBAAgB,CAAC;AAAA,EACjB,QAAQ,CAAC;AAAA,EACT,YAAY,CAAC;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV;AACF,GAA0B;AACxB,QAAM,CAAC,YAAY,aAAa,IAAIC,WAAwB,IAAI;AAGhE,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,KAAK;AAC1D,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,KAAK;AAC1D,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAC9D,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAAS,KAAK;AACtE,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAA8B,IAAI;AAG1F,QAAM,wBAAwB;AAE9B,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,YAAY;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAEA,UAAM,eAAe,UAAU,MAAgC,KAAK,OAAO,YAAY;AACvF,WAAO,gBAAAF,OAAC,eAAY,QAAQ,cAAc;AAAA,EAC5C;AAEA,QAAMG,eAAa,CAACC,UAAwB;AAC1C,WAAO,IAAI,KAAKA,KAAI,EAAE,mBAAmB,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAMC,mBAAiB,CAAC,QAAgB,WAAmB,UAAU;AACnE,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAM,iBAAiB,CAAC,YAAkC;AACxD,QAAI,CAAC;AAAS,aAAO;AACrB,UAAM,MAAM,IAAI,KAAK,OAAO;AAC5B,UAAM,MAAM,oBAAI,KAAK;AACrB,UAAM,kBAAkB,KAAK,MAAM,IAAI,QAAQ,IAAI,IAAI,QAAQ,MAAM,MAAO,KAAK,KAAK,GAAG;AACzF,WAAO,mBAAmB,KAAK,kBAAkB;AAAA,EACnD;AAEA,QAAM,YAAY,CAAC,YAAkC;AACnD,QAAI,CAAC;AAAS,aAAO;AACrB,WAAO,IAAI,KAAK,OAAO,IAAI,oBAAI,KAAK;AAAA,EACtC;AAGA,QAAM,aAAa,CAAC,iBAA+B;AACjD,4BAAwB,YAAY;AACpC,sBAAkB,IAAI;AAAA,EACxB;AAEA,QAAM,aAAa,CAAC,iBAA+B;AACjD,4BAAwB,YAAY;AACpC,sBAAkB,IAAI;AACtB,sBAAkB,KAAK;AAAA,EACzB;AAEA,QAAM,iBAAiB,OAAO,SAAc;AAC1C,QAAI,QAAQ;AACV,YAAM,OAAO,IAAI;AAAA,IACnB;AACA,sBAAkB,KAAK;AAAA,EACzB;AAEA,QAAM,eAAe,CAAC,iBAA+B;AACnD,eAAW,cAAc,EAAE;AAC3B,sBAAkB,KAAK;AAAA,EACzB;AAEA,QAAM,eAAe,CAAC,iBAA+B;AACnD,4BAAwB,YAAY;AACpC,wBAAoB,IAAI;AACxB,sBAAkB,KAAK;AAAA,EACzB;AAEA,QAAM,mBAAmB,CAAC,iBAA+B;AACvD,4BAAwB,YAAY;AACpC,4BAAwB,IAAI;AAC5B,sBAAkB,KAAK;AAAA,EACzB;AAIA,QAAM,sBAAsB,CAAC,cAA4B,SAAc;AACrE,eAAW,YAAY;AACvB,wBAAoB,KAAK;AACzB,sBAAkB,KAAK;AACvB,4BAAwB,IAAI;AAAA,EAC9B;AAEA,QAAM,0BAA0B,CAAC,cAA4B,WAAmB,WAA0B;AACxG,mBAAe,cAAc,WAAW,MAAM;AAC9C,4BAAwB,KAAK;AAC7B,sBAAkB,KAAK;AACvB,4BAAwB,IAAI;AAAA,EAC9B;AAEA,QAAM,YAAY,CAAC,iBAA+B,CAAC,UAAU,OAAO,EAAE,SAAS,aAAa,MAAM;AAClG,QAAM,YAAY,CAAC,iBAA+B,CAAC,UAAU,SAAS,UAAU,EAAE,SAAS,aAAa,MAAM;AAC9G,QAAM,gBAAgB,CAAC,iBAA+B,CAAC,UAAU,OAAO,EAAE,SAAS,aAAa,MAAM;AAEtG,SACE,gBAAAJ,QAAAF,YAAA,EACE;AAAA,oBAAAE,QAAC,QAAK,WAAU,gDACd;AAAA,sBAAAD,OAAC,cAAW,WAAU,iBACpB,0BAAAA,OAAC,aAAU,2BAAa,GAC1B;AAAA,MAEC,UACC,gBAAAA,OAAC,SAAI,WAAU,0CACb,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gEAA+D;AAAA,QAC9E,gBAAAA,OAAC,UAAK,sCAAwB;AAAA,SAChC,GACF,IACE,sBAAsB,WAAW,IACnC,gBAAAA,OAAC,SAAI,WAAU,qBACb,0BAAAC,QAAC,SAAI,WAAU,sBACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,QACjC,gBAAAA,OAAC,QAAG,WAAU,4BAA2B,oCAAsB;AAAA,QAC/D,gBAAAA,OAAC,OAAE,WAAU,WAAU,2DAEvB;AAAA,SACF,GACF;AAAA;AAAA,QAGA,gBAAAA,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,WAAM,WAAU,UAEb;AAAA,0BAAAD,OAAC,WAAM,WAAU,4DACf,0BAAAC,QAAC,QACC;AAAA,4BAAAD,OAAC,QAAG,WAAU,wFAAuF,sBAErG;AAAA,YACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,kBAErG;AAAA,YACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,YACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,YACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,YACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,0BAErG;AAAA,YACA,gBAAAA,OAAC,QAAG,WAAU,yFAAwF,qBAEtG;AAAA,aACF,GACF;AAAA,UAEA,gBAAAA,OAAC,WAAM,WAAU,qCACd,gCAAsB,IAAI,CAAC,iBAC1B,gBAAAC,QAAC,QAAyB,WAAU,2CAElC;AAAA,4BAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAAC,SAAI,WAAU,gIACb,0BAAAA,OAACM,WAAA,EAAS,WAAU,sBAAqB,GAC3C;AAAA,cACA,gBAAAN,OAAC,SACC,0BAAAA,OAAC,SAAI,WAAU,yCACZ,uBAAa,UAAU,QAAQ,oBAClC,GACF;AAAA,eACF,GACF;AAAA,YAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,uBAAa,MAAM,QAAQ,gBAC9B,GACF;AAAA,YAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SACC,0BAAAA,OAAC,SAAI,WAAU,yCACZ,UAAAK,iBAAe,aAAa,QAAQ,KAAK,GAC5C,GACF,GACF;AAAA,YAGA,gBAAAL,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,uBAAa,oBAAoB,UAAU,YAC3C,aAAa,oBAAoB,YAAY,cAC7C,aAAa,oBAAoB,SAAS,WAC1C,aAAa,oBAAoB,eAAe,gBAAgB,UACnE,GACF;AAAA,YAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACZ;AAAA,6BAAe,aAAa,MAAM;AAAA,cAClC,eAAe,aAAa,gBAAgB,KAC3C,gBAAAD,OAAC,SAAM,WAAU,iFAAgF,sBAEjG;AAAA,eAEJ,GACF;AAAA,YAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,UAAAG,aAAW,aAAa,gBAAgB,GAC3C,GACF;AAAA,YAGA,gBAAAH,OAAC,QAAG,WAAU,wBACZ,0BAAAC,QAAC,gBACC;AAAA,8BAAAD,OAAC,uBAAoB,SAAO,MAC1B,0BAAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS,MAAM,cAAc,eAAe,aAAa,KAAK,OAAO,aAAa,EAAE;AAAA,kBAEpF,0BAAAA,OAACO,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,cACpC,GACF;AAAA,cACA,gBAAAN;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAM;AAAA,kBACN,MAAM,eAAe,aAAa;AAAA,kBAClC,cAAc,CAAC,SAAkB,cAAc,OAAO,aAAa,KAAK,IAAI;AAAA,kBAC5E,WAAU;AAAA,kBAEV;AAAA,oCAAAA;AAAA,sBAAC;AAAA;AAAA,wBACC,SAAS,MAAM;AACb,qCAAW,YAAY;AACvB,wCAAc,IAAI;AAAA,wBACpB;AAAA,wBAEA;AAAA,0CAAAD,OAACQ,OAAA,EAAI,WAAU,gBAAe;AAAA,0BAAE;AAAA;AAAA;AAAA,oBAElC;AAAA,oBACA,gBAAAP;AAAA,sBAAC;AAAA;AAAA,wBACC,SAAS,MAAM;AACb,mCAAS,YAAY;AACrB,wCAAc,IAAI;AAAA,wBACpB;AAAA,wBAEA;AAAA,0CAAAD,OAACS,QAAA,EAAK,WAAU,gBAAe;AAAA,0BAAE;AAAA;AAAA;AAAA,oBAEnC;AAAA,oBACC,UAAU,YAAY,KACrB,gBAAAR,QAAAF,YAAA,EACE;AAAA,sCAAAC,OAAC,yBAAsB;AAAA,sBACvB,gBAAAC;AAAA,wBAAC;AAAA;AAAA,0BACC,SAAS,MAAM;AACb,yCAAa,YAAY;AACzB,0CAAc,IAAI;AAAA,0BACpB;AAAA,0BACA,WAAU;AAAA,0BAEV;AAAA,4CAAAD,OAAC,OAAI,WAAU,gBAAe;AAAA,4BAAE;AAAA;AAAA;AAAA,sBAElC;AAAA,uBACF;AAAA;AAAA;AAAA,cAEJ;AAAA,eACF,GACF;AAAA,eAjHO,aAAa,EAkHtB,CACD,GACH;AAAA,WACF,GACF;AAAA;AAAA,OAEJ;AAAA,IAGD,cAAc,sBAAsB,SAAS,KAAK,WAAW,QAAQ,WAAW,SAC/E,gBAAAA,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,aAAa,WAAW;AAAA,QACxB,YAAY,KAAK,KAAK,WAAW,QAAQ,WAAW,KAAK;AAAA,QACzD,OAAO,WAAW;AAAA,QAClB,OAAO,WAAW;AAAA,QAClB,cAAc,WAAW;AAAA;AAAA,IAC3B,GACF;AAAA,IAIF,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,SAAS,MAAM,kBAAkB,KAAK;AAAA,QACtC,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA,cAAc;AAAA;AAAA,IAChB;AAAA,IAEA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,cAAc;AAAA,QACd;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,SAAS,MAAM,kBAAkB,KAAK;AAAA,QACtC,QAAQ;AAAA,QACR;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,cAAc;AAAA,QACd,QAAQ;AAAA,QACR,SAAS,MAAM,oBAAoB,KAAK;AAAA,QACxC,WAAW;AAAA,QACX;AAAA;AAAA,IACF;AAAA,IAEA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,cAAc;AAAA,QACd;AAAA,QACA,QAAQ;AAAA,QACR,SAAS,MAAM,wBAAwB,KAAK;AAAA,QAC5C,WAAW;AAAA,QACX;AAAA;AAAA,IACF;AAAA,KACF;AAEJ;;;AMxZA,SAAgB,YAAAU,YAAU,aAAAC,mBAAiB;AAoB3C;AAAA,EACE,YAAAC;AAAA,EACA,cAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,cAAAC;AAAA,EACA,eAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AAqQI,gBAAAC,QAcD,QAAAC,eAdC;AArNJ,SAAS,iBAAiB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AAAA,EACA;AACF,GAA0B;AACxB,QAAM,CAAC,UAAU,WAAW,IAAIC,WAA+B;AAAA,IAC7D,YAAY,aAAa,cAAc;AAAA,IACvC,QAAQ,aAAa,UAAU;AAAA,IAC/B,QAAQ,aAAa,UAAU;AAAA,IAC/B,oBAAoB,aAAa,sBAAsB,oBAAI,KAAK;AAAA,IAChE,kBAAkB,aAAa,oBAAoB,oBAAI,KAAK;AAAA,IAC5D,YAAY,aAAa;AAAA,IACzB,UAAU,aAAa;AAAA,IACvB,QAAQ,aAAa,UAAU;AAAA,IAC/B,UAAU,aAAa,YAAY;AAAA,IACnC,UAAU,aAAa,YAAY;AAAA,IACnC,eAAe,aAAa,iBAAiB;AAAA,IAC7C,QAAQ,aAAa,UAAU;AAAA,IAC/B,UAAU,aAAa,YAAY;AAAA,IACnC,SAAS,aAAa,WAAW;AAAA,IACjC,UAAU,aAAa,YAAY;AAAA,IACnC,mBAAmB,aAAa,qBAAqB;AAAA,IACrD,YAAY,aAAa;AAAA,IACzB,cAAc,aAAa;AAAA,IAC3B,WAAW,aAAa,aAAa;AAAA,IACrC,cAAc,aAAa,gBAAgB;AAAA;AAAA,IAE3C,WAAW,aAAa,sBAAsB,oBAAI,KAAK;AAAA,IACvD,SAAS,aAAa,oBAAoB,oBAAI,KAAK;AAAA,IACnD,iBAAiB,aAAa,oBAAoB,oBAAI,KAAK;AAAA,EAC7D,CAAC;AAED,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAsB,IAAI;AAClE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAgB,CAAC,CAAC;AAC1D,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAgB,CAAC,CAAC;AAChE,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAc,IAAI;AAGlE,UAAQ,IAAI,iCAAiC,SAAS;AACtD,UAAQ,IAAI,6BAA6B,KAAK;AAG9C,EAAAC,YAAU,MAAM;AACd,UAAM,UAAU,UAAU,IAAI,eAAa;AAAA,MACzC,OAAO,SAAS,GAAG,SAAS;AAAA,MAC5B,OAAO,SAAS;AAAA,MAChB,UAAU,SAAS;AAAA,MACnB,aAAa,GAAG,SAAS,IAAI,KAAK,SAAS,KAAK;AAAA,MAChD,MAAM;AAAA,IACR,EAAE;AACF,uBAAmB,OAAO;AAG1B,QAAI,SAAS,cAAc,UAAU,SAAS,GAAG;AAC/C,YAAM,WAAW,UAAU,KAAK,OAAK,EAAE,OAAO,SAAS,WAAW,SAAS,CAAC;AAC5E,UAAI,UAAU;AACZ,4BAAoB;AAAA,UAClB,OAAO,SAAS,GAAG,SAAS;AAAA,UAC5B,OAAO,SAAS;AAAA,UAChB,UAAU,SAAS;AAAA,UACnB,aAAa,GAAG,SAAS,IAAI,KAAK,SAAS,KAAK;AAAA,UAChD,MAAM;AAAA,QACR,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,GAAG,CAAC,WAAW,SAAS,UAAU,CAAC;AAGnC,QAAM,uBAAuB,OAAO,UAAkB;AACpD,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,aAAO;AAAA,IACT;AAEA,UAAM,WAAW,gBAAgB;AAAA,MAAO,YACtC,OAAO,MAAM,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC,KACvD,OAAO,UAAU,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC,KAC3D,OAAO,aAAa,YAAY,EAAE,SAAS,MAAM,YAAY,CAAC;AAAA,IAChE;AAEA,WAAO;AAAA,EACT;AAGA,EAAAA,YAAU,MAAM;AACd,UAAM,OAAO,MAAM,KAAK,CAAAC,OAAKA,GAAE,OAAO,SAAS,MAAM;AACrD,oBAAgB,QAAQ,IAAI;AAE5B,QAAI,MAAM;AAGR,sBAAgB,CAAC,CAAC;AAGlB,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,QAAQ,KAAK;AAAA,QACb,UAAU,KAAK;AAAA,MACjB,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,SAAS,QAAQ,KAAK,CAAC;AAG3B,EAAAD,YAAU,MAAM;AACd,QAAI,gBAAgB,SAAS,WAAW,WAAW,aAAa,YAAY,GAAG;AAC7E,YAAM,UAAU,IAAI,KAAK,SAAS,aAAa,SAAS,kBAAkB;AAC1E,cAAQ,QAAQ,QAAQ,QAAQ,IAAI,aAAa,SAAS;AAE1D,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH;AAAA,QACA,iBAAiB;AAAA,QACjB,QAAQ;AAAA;AAAA,MACV,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,cAAc,SAAS,WAAW,SAAS,MAAM,CAAC;AAGtD,EAAAA,YAAU,MAAM;AACd,QAAI,SAAS,WAAW,YAAY,cAAc;AAChD,YAAM,UAAU,IAAI,KAAK,SAAS,aAAa,SAAS,kBAAkB;AAC1E,cAAQ,SAAS,QAAQ,SAAS,IAAI,CAAC;AAEvC,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH;AAAA,QACA,iBAAiB;AAAA,MACnB,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,SAAS,WAAW,SAAS,QAAQ,YAAY,CAAC;AAEtD,QAAM,eAAe,MAAe;AAClC,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,YAAY;AACxB,gBAAU,aAAa;AAAA,IACzB;AAEA,QAAI,CAAC,SAAS,QAAQ;AACpB,gBAAU,SAAS;AAAA,IACrB;AAEA,QAAI,CAAC,SAAS,WAAW;AACvB,gBAAU,YAAY;AAAA,IACxB;AAEA,QAAI,CAAC,SAAS,iBAAiB;AAC7B,gBAAU,kBAAkB;AAAA,IAC9B;AAEA,QAAI,SAAS,SAAS,GAAG;AACvB,gBAAU,SAAS;AAAA,IACrB;AAEA,QAAI,SAAS,WAAW,WAAW,CAAC,SAAS,SAAS;AACpD,gBAAU,UAAU;AAAA,IACtB;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOE,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,QAAI;AACF,YAAM,aAAa;AAAA,QACjB,GAAG;AAAA,QACH,WAAW,SAAS;AAAA,QACpB,SAAS,SAAS;AAAA,QAClB,iBAAiB,SAAS;AAAA,MAC5B;AAEA,YAAM,SAAS,UAAU;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,kCAAkC,KAAK;AAAA,IACvD;AAAA,EACF;AAEA,QAAM,oBAAoB,CAAC,OAAmC,UAAe;AAC3E,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,CAAC,KAAK,GAAG;AAAA,IACX,EAAE;AAGF,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS;AAAA,QACjB,GAAG;AAAA,QACH,CAAC,KAAK,GAAG;AAAA,MACX,EAAE;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,YAAY;AAAA,MAChB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,aAAa;AAAA,MACb,aAAa;AAAA,IACf;AAEA,UAAM,eAAe,UAAU,MAAgC,KAAK,OAAO,YAAY;AACvF,WAAO,gBAAAL,OAAC,eAAY,QAAQ,cAAc;AAAA,EAC5C;AAEA,QAAMM,mBAAiB,CAAC,QAAgB,WAAmB,UAAU;AACnE,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,SACE,gBAAAL,QAAC,UAAK,UAAU,cAAc,WAAU,aACtC;AAAA,oBAAAA,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,+BACnB;AAAA,wBAAAD,OAACH,aAAA,EAAW,WAAU,WAAU;AAAA,QAChC,gBAAAG,OAAC,UAAM,oBAAU,SAAS,WAAW,wBAAwB,sBAAqB;AAAA,SACpF,GACF;AAAA,MACA,gBAAAC,QAAC,eAAY,WAAU,aAErB;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,cAAa,WAAU,+BACpC;AAAA,4BAAAP,OAACJ,WAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAI,OAAC,UAAK,wBAAU;AAAA,aAClB;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,UAAU,CAAC,UAAU,kBAAkB,cAAc,KAAK;AAAA,cAC1D,SAAS;AAAA,cACT,UAAU;AAAA,cACV,aAAY;AAAA,cACZ,mBAAkB;AAAA,cAClB,WAAU;AAAA,cACV,aAAY;AAAA,cACZ,WAAW,OAAO,aAAa,mBAAmB;AAAA;AAAA,UACpD;AAAA,UACC,OAAO,cACN,gBAAAC,QAAC,OAAE,WAAU,oDACX;AAAA,4BAAAD,OAACF,eAAA,EAAY,WAAU,WAAU;AAAA,YACjC,gBAAAE,OAAC,UAAM,iBAAO,YAAW;AAAA,aAC3B;AAAA,WAEJ;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,UAAS,WAAU,+BAChC;AAAA,4BAAAP,OAACH,aAAA,EAAW,WAAU,WAAU;AAAA,YAChC,gBAAAG,OAAC,UAAK,oBAAM;AAAA,aACd;AAAA,UACA,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,OAAO,SAAS,OAAO,SAAS;AAAA,cAChC,eAAe,CAAC,UAAU,kBAAkB,UAAU,SAAS,KAAK,CAAC;AAAA,cACrE,UAAU,SAAS;AAAA,cAEnB;AAAA,gCAAAD,OAAC,iBAAc,WAAW,OAAO,SAAS,mBAAmB,IAC3D,0BAAAA,OAAC,eAAY,aAAY,iBAAgB,GAC3C;AAAA,gBACA,gBAAAA,OAAC,iBACE,gBAAM,IAAI,UACT,gBAAAA,OAAC,cAAyB,OAAO,KAAK,GAAG,SAAS,GAChD,0BAAAC,QAAC,SAAI,WAAU,4CACb;AAAA,kCAAAD,OAAC,UAAM,eAAK,MAAK;AAAA,kBACjB,gBAAAA,OAAC,UAAK,WAAU,8BACb,UAAAM,iBAAe,KAAK,WAAW,KAAK,QAAQ,GAC/C;AAAA,mBACF,KANe,KAAK,EAOtB,CACD,GACH;AAAA;AAAA;AAAA,UACF;AAAA,UACC,OAAO,UACN,gBAAAL,QAAC,OAAE,WAAU,oDACX;AAAA,4BAAAD,OAACF,eAAA,EAAY,WAAU,WAAU;AAAA,YACjC,gBAAAE,OAAC,UAAM,iBAAO,QAAO;AAAA,aACvB;AAAA,WAEJ;AAAA,QAGC,aAAa,SAAS,KACrB,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACO,QAAA,EAAM,SAAQ,iBAAgB,0BAAY;AAAA,UAC3C,gBAAAN;AAAA,YAAC;AAAA;AAAA,cACC,OAAO,SAAS,eAAe,SAAS,KAAK;AAAA,cAC7C,eAAe,CAAC,UAAU,kBAAkB,iBAAiB,QAAQ,SAAS,KAAK,IAAI,MAAS;AAAA,cAChG,UAAU,SAAS;AAAA,cAEnB;AAAA,gCAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,aAAY,yBAAwB,GACnD;AAAA,gBACA,gBAAAA,OAAC,iBACE,uBAAa,IAAI,aAChB,gBAAAC,QAAC,cAA4B,OAAO,QAAQ,GAAG,SAAS,GACrD;AAAA,0BAAQ;AAAA,kBAAK;AAAA,kBAAIK,iBAAe,QAAQ,OAAO,SAAS,QAAQ;AAAA,qBADlD,QAAQ,EAEzB,CACD,GACH;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAIF,gBAAAL,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,UAAS,WAAU,+BAChC;AAAA,4BAAAP,OAACD,eAAA,EAAY,WAAU,WAAU;AAAA,YACjC,gBAAAC,OAAC,UAAK,oBAAM;AAAA,aACd;AAAA,UACA,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,eAAe,CAAC,UAAU,kBAAkB,UAAU,KAAK;AAAA,cAC3D,UAAU,SAAS;AAAA,cAEnB;AAAA,gCAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,GACf;AAAA,gBACA,gBAAAC,QAAC,iBACC;AAAA,kCAAAD,OAAC,cAAW,OAAM,SAAQ,mBAAK;AAAA,kBAC/B,gBAAAA,OAAC,cAAW,OAAM,UAAS,oBAAM;AAAA,kBACjC,gBAAAA,OAAC,cAAW,OAAM,aAAY,uBAAS;AAAA,kBACvC,gBAAAA,OAAC,cAAW,OAAM,aAAY,uBAAS;AAAA,mBACzC;AAAA;AAAA;AAAA,UACF;AAAA,UACA,gBAAAA,OAAC,SAAI,WAAU,+BACZ,yBAAe,SAAS,MAAM,GACjC;AAAA,WACF;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAACM,QAAA,EAAM,SAAQ,sBAAqB,WAAU,+BAC5C;AAAA,8BAAAP,OAACP,YAAA,EAAS,WAAU,WAAU;AAAA,cAC9B,gBAAAO,OAAC,UAAK,0BAAY;AAAA,eACpB;AAAA,YACA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,OAAO,SAAS,WAAW,YAAY,EAAE,MAAM,GAAG,EAAE,KAAK;AAAA,gBACzD,UAAU,CAACK,OAAM,kBAAkB,aAAa,IAAI,KAAKA,GAAE,OAAO,KAAK,CAAC;AAAA,gBACxE,UAAU,SAAS;AAAA,gBACnB,WAAW,OAAO,YAAY,mBAAmB;AAAA;AAAA,YACnD;AAAA,YACC,OAAO,aACN,gBAAAJ,QAAC,OAAE,WAAU,oDACX;AAAA,8BAAAD,OAACF,eAAA,EAAY,WAAU,WAAU;AAAA,cACjC,gBAAAE,OAAC,UAAM,iBAAO,WAAU;AAAA,eAC1B;AAAA,aAEJ;AAAA,UAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAACM,QAAA,EAAM,SAAQ,mBAAkB,WAAU,+BACzC;AAAA,8BAAAP,OAACP,YAAA,EAAS,WAAU,WAAU;AAAA,cAC9B,gBAAAO,OAAC,UAAK,iCAAmB;AAAA,eAC3B;AAAA,YACA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,OAAO,SAAS,gBAAgB,YAAY,EAAE,MAAM,GAAG,EAAE;AAAA,gBACzD,UAAU,CAACK,OAAM,kBAAkB,mBAAmB,IAAI,KAAKA,GAAE,OAAO,KAAK,CAAC;AAAA,gBAC9E,UAAU,SAAS;AAAA,gBACnB,WAAW,OAAO,kBAAkB,mBAAmB;AAAA;AAAA,YACzD;AAAA,YACC,OAAO,mBACN,gBAAAJ,QAAC,OAAE,WAAU,oDACX;AAAA,8BAAAD,OAACF,eAAA,EAAY,WAAU,WAAU;AAAA,cACjC,gBAAAE,OAAC,UAAM,iBAAO,iBAAgB;AAAA,eAChC;AAAA,aAEJ;AAAA,WACF;AAAA,QAGC,SAAS,WAAW,WAAW,SAAS,WACvC,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,WAAU,WAAU,+BACjC;AAAA,4BAAAP,OAACP,YAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAO,OAAC,UAAK,4BAAc;AAAA,aACtB;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,SAAS,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE;AAAA,cACjD,UAAU,CAACK,OAAM,kBAAkB,WAAW,IAAI,KAAKA,GAAE,OAAO,KAAK,CAAC;AAAA,cACtE,UAAU,SAAS;AAAA,cACnB,WAAW,OAAO,UAAU,mBAAmB;AAAA;AAAA,UACjD;AAAA,UACC,OAAO,WACN,gBAAAJ,QAAC,OAAE,WAAU,oDACX;AAAA,4BAAAD,OAACF,eAAA,EAAY,WAAU,WAAU;AAAA,YACjC,gBAAAE,OAAC,UAAM,iBAAO,SAAQ;AAAA,aACxB;AAAA,WAEJ;AAAA,QAID,SAAS,WAAW,YAAY,SAAS,WACxC,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,WAAU,WAAU,+BACjC;AAAA,4BAAAP,OAACP,YAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAO,OAAC,UAAK,sBAAQ;AAAA,aAChB;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,SAAS,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE;AAAA,cACjD,UAAU,CAACK,OAAM,kBAAkB,WAAW,IAAI,KAAKA,GAAE,OAAO,KAAK,CAAC;AAAA,cACtE,UAAU,SAAS;AAAA;AAAA,UACrB;AAAA,WACF;AAAA,QAIF,gBAAAJ,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAACM,QAAA,EAAM,SAAQ,UAAS,WAAU,+BAChC;AAAA,8BAAAP,OAACN,cAAA,EAAW,WAAU,WAAU;AAAA,cAChC,gBAAAM,OAAC,UAAK,sBAAQ;AAAA,eAChB;AAAA,YACA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,KAAI;AAAA,gBACJ,OAAO,SAAS;AAAA,gBAChB,UAAU,CAACK,OAAM,kBAAkB,UAAU,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,gBAC5E,UAAU,SAAS,UAAU,SAAS,WAAW;AAAA,gBACjD,WAAW,OAAO,SAAS,mBAAmB;AAAA;AAAA,YAChD;AAAA,YACC,OAAO,UACN,gBAAAJ,QAAC,OAAE,WAAU,oDACX;AAAA,8BAAAD,OAACF,eAAA,EAAY,WAAU,WAAU;AAAA,cACjC,gBAAAE,OAAC,UAAM,iBAAO,QAAO;AAAA,eACvB;AAAA,aAEJ;AAAA,UAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,OAACO,QAAA,EAAM,SAAQ,YAAW,sBAAQ;AAAA,YAClC,gBAAAN;AAAA,cAAC;AAAA;AAAA,gBACC,OAAO,SAAS;AAAA,gBAChB,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,gBAC7D,UAAU,SAAS;AAAA,gBAEnB;AAAA,kCAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,GACf;AAAA,kBACA,gBAAAC,QAAC,iBACC;AAAA,oCAAAD,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,oBAC3B,gBAAAA,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,oBAC3B,gBAAAA,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,oBAC3B,gBAAAA,OAAC,cAAW,OAAM,OAAM,iBAAG;AAAA,qBAC7B;AAAA;AAAA;AAAA,YACF;AAAA,aACF;AAAA,WACF;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,YAAW,WAAU,+BAClC;AAAA,4BAAAP,OAACN,cAAA,EAAW,WAAU,WAAU;AAAA,YAChC,gBAAAM,OAAC,UAAK,wBAAU;AAAA,aAClB;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,KAAI;AAAA,cACJ,KAAI;AAAA,cACJ,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU,CAACK,OAAM,kBAAkB,YAAY,WAAWA,GAAE,OAAO,KAAK,KAAK,CAAC;AAAA,cAC9E,aAAY;AAAA,cACZ,UAAU,SAAS;AAAA,cACnB,WAAU;AAAA;AAAA,UACZ;AAAA,UACA,gBAAAL,OAAC,OAAE,WAAU,yBAAwB,gDAErC;AAAA,WACF;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAACM,QAAA,EAAM,SAAQ,YAAW,WAAU,+BAClC;AAAA,4BAAAP,OAACL,QAAA,EAAM,WAAU,WAAU;AAAA,YAC3B,gBAAAK,OAAC,UAAK,8BAAgB;AAAA,aACxB;AAAA,UACA,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,OAAO,SAAS;AAAA,cAChB,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,cAC7D,UAAU,SAAS;AAAA,cAEnB;AAAA,gCAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,aAAY,2BAA0B,GACrD;AAAA,gBACA,gBAAAC,QAAC,iBACC;AAAA,kCAAAD,OAAC,cAAW,OAAM,YAAW,sBAAQ;AAAA,kBACrC,gBAAAA,OAAC,cAAW,OAAM,eAAc,yBAAW;AAAA,kBAC3C,gBAAAA,OAAC,cAAW,OAAM,cAAa,0BAAY;AAAA,kBAC3C,gBAAAA,OAAC,cAAW,OAAM,gBAAe,0BAAY;AAAA,kBAC7C,gBAAAA,OAAC,cAAW,OAAM,iBAAgB,2BAAa;AAAA,mBACjD;AAAA;AAAA;AAAA,UACF;AAAA,UACA,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,+DAErC;AAAA,WACF;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,SAAS,SAAS;AAAA,cAClB,iBAAiB,CAAC,YAAY,kBAAkB,aAAa,OAAO;AAAA,cACpE,UAAU,SAAS;AAAA;AAAA,UACrB;AAAA,UACA,gBAAAA,OAACO,QAAA,EAAM,SAAQ,aAAY,qCAAuB;AAAA,WACpD;AAAA,QAGA,gBAAAN,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACO,QAAA,EAAM,SAAQ,gBAAe,2BAAa;AAAA,UAC3C,gBAAAP;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,aAAY;AAAA,cACZ,OAAO,SAAS,gBAAgB;AAAA,cAChC,UAAU,CAACK,OAAM,kBAAkB,gBAAgBA,GAAE,OAAO,KAAK;AAAA,cACjE,UAAU,SAAS;AAAA,cACnB,MAAM;AAAA;AAAA,UACR;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAJ,QAAC,SAAI,WAAU,2CACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,MACC,SAAS,UACR,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU;AAAA,UAET,oBAAU,cAAe,cAAc;AAAA;AAAA,MAC1C;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AC9nBA,SAAgB,YAAAQ,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,MAAAC;AAAA,OACK;AACP,SAAS,gBAAgB,kBAAAC,wBAAsB;AAE/C;AAAA,EACE,SAAAC;AAAA,EAGA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA;AAAA,EACA,OAAAC;AAAA,EACA;AAAA,EACA,cAAAC;AAAA,OAEK;AAwDM,SA0WS,YAAAC,YA1WT,OAAAC,QAiEH,QAAAC,eAjEG;AAhDN,IAAM,0BAAkE,CAAC;AAAA,EAC9E;AAAA,EACA,mBAAmB;AAAA,EACnB;AACF,MAAM;AACJ,QAAM,CAAC,OAAO,QAAQ,IAAIlB,WAAiB,CAAC,CAAC;AAC7C,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAS,IAAI;AAC3C,QAAM,CAAC,OAAO,QAAQ,IAAIA,WAAwB,IAAI;AACtD,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAsB,IAAI;AAClE,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAiB,CAAC;AAElE,EAAAC,YAAU,MAAM;AACd,eAAW;AAAA,EACb,GAAG,CAAC,CAAC;AAEL,QAAM,aAAa,YAAY;AAC7B,QAAI;AACF,iBAAW,IAAI;AACf,eAAS,IAAI;AAEb,YAAM,WAAW,MAAM,eAAe,2BAA2B;AAEjE,UAAI,SAAS,WAAW,SAAS,MAAM;AACrC,iBAAS,SAAS,IAAI;AAAA,MACxB,OAAO;AACL,iBAAS,SAAS,SAAS,uBAAuB;AAAA,MACpD;AAAA,IACF,SAAS,KAAK;AACZ,cAAQ,MAAM,yBAAyB,GAAG;AAC1C,eAAS,uBAAuB;AAAA,IAClC,UAAE;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,mBAAmB,CAAC,MAAY,aAAqB;AACzD,oBAAgB,IAAI;AACpB,wBAAoB,QAAQ;AAE5B,QAAI,cAAc;AAChB,mBAAa,MAAM,QAAQ;AAAA,IAC7B;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,YAAoB;AAC1C,UAAM,eAAe,QAAQ,YAAY;AAEzC,QAAI,aAAa,SAAS,QAAQ,KAAK,aAAa,SAAS,OAAO,GAAG;AACrE,aAAO,gBAAAgB,OAACL,QAAA,EAAM,WAAU,WAAU;AAAA,IACpC;AACA,QAAI,aAAa,SAAS,MAAM,KAAK,aAAa,SAAS,OAAO,GAAG;AACnE,aAAO,gBAAAK,OAACN,QAAA,EAAM,WAAU,WAAU;AAAA,IACpC;AACA,QAAI,aAAa,SAAS,SAAS,KAAK,aAAa,SAAS,WAAW,GAAG;AAC1E,aAAO,gBAAAM,OAACJ,WAAA,EAAQ,WAAU,WAAU;AAAA,IACtC;AACA,QAAI,aAAa,SAAS,UAAU,GAAG;AACrC,aAAO,gBAAAI,OAAC,aAAU,WAAU,WAAU;AAAA,IACxC;AACA,QAAI,aAAa,SAAS,WAAW,KAAK,aAAa,SAAS,QAAQ,GAAG;AACzE,aAAO,gBAAAA,OAACF,aAAA,EAAW,WAAU,WAAU;AAAA,IACzC;AACA,QAAI,aAAa,SAAS,UAAU,KAAK,aAAa,SAAS,QAAQ,GAAG;AACxE,aAAO,gBAAAE,OAAC,UAAO,WAAU,WAAU;AAAA,IACrC;AACA,QAAI,aAAa,SAAS,aAAa,KAAK,aAAa,SAAS,OAAO,GAAG;AAC1E,aAAO,gBAAAA,OAACH,MAAA,EAAI,WAAU,WAAU;AAAA,IAClC;AAEA,WAAO,gBAAAG,OAACP,QAAA,EAAM,WAAU,WAAU;AAAA,EACpC;AAEA,QAAM,kBAAkB,CAAC,aAAqB;AAC5C,QAAI,aAAa;AAAG,aAAO;AAC3B,QAAI,aAAa;AAAG,aAAO;AAC3B,QAAI,aAAa;AAAG,aAAO;AAC3B,QAAI,aAAa;AAAI,aAAO;AAC5B,WAAO,GAAG,QAAQ;AAAA,EACpB;AAEA,QAAM,wBAAwB,CAAC,aAAqB;AAClD,QAAI,YAAY;AAAI,aAAO;AAC3B,QAAI,YAAY;AAAI,aAAO;AAC3B,QAAI,WAAW;AAAG,aAAO;AACzB,WAAO;AAAA,EACT;AAEA,QAAM,yBAAyB,CAAC,aAAqB;AACnD,YAAQ,UAAU;AAAA,MAChB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAe,eAAO;AAAA,MAC3B,KAAK;AAAc,eAAO;AAAA,MAC1B,KAAK;AAAgB,eAAO;AAAA,MAC5B,KAAK;AAAiB,eAAO;AAAA,MAC7B;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,kBAAkB,CAAC,aAAqB;AAC5C,YAAQ,UAAU;AAAA,MAChB,KAAK;AAAY,eAAO,gBAAAO,OAACJ,WAAA,EAAQ,WAAU,WAAU;AAAA,MACrD,KAAK;AAAe,eAAO,gBAAAI,OAACH,MAAA,EAAI,WAAU,WAAU;AAAA,MACpD,KAAK;AAAc,eAAO,gBAAAG,OAAC,UAAO,WAAU,WAAU;AAAA,MACtD,KAAK;AAAgB,eAAO,gBAAAA,OAACF,aAAA,EAAW,WAAU,WAAU;AAAA,MAC5D,KAAK;AAAiB,eAAO,gBAAAE,OAACP,QAAA,EAAM,WAAU,WAAU;AAAA,MACxD;AAAS,eAAO,gBAAAO,OAAC,UAAO,WAAU,WAAU;AAAA,IAC9C;AAAA,EACF;AAEA,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,iCACb,0BAAAA,OAAC,SAAI,WAAU,0CACb,0BAAAC,QAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,0EAAyE;AAAA,MACxF,gBAAAA,OAAC,OAAE,WAAU,sBAAqB,2CAA6B;AAAA,OACjE,GACF,GACF;AAAA,EAEJ;AAEA,MAAI,OAAO;AACT,WACE,gBAAAA,OAAC,SAAI,WAAU,iCACb,0BAAAA,OAAC,SAAI,WAAU,0CACb,0BAAAA,OAAC,SAAI,WAAU,eACb,0BAAAC,QAAC,SAAI,WAAU,kDACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,gBAAgB,iBAAM;AAAA,MACnC,gBAAAA;AAAA,QAACX;AAAA,QAAA;AAAA,UACC,SAAS;AAAA,UACT,WAAU;AAAA,UACV,SAAQ;AAAA,UACT;AAAA;AAAA,MAED;AAAA,OACF,GACF,GACF,GACF;AAAA,EAEJ;AAGA,QAAM,YAAY,CAAC,GAAG,GAAG,GAAG,EAAE;AAG9B,QAAM,yBAAyB,CAAC,aAAqB;AACnD,QAAI,aAAa;AAAG,aAAO;AAC3B,QAAI,aAAa;AAAG,aAAO;AAC3B,QAAI,aAAa;AAAG,aAAO;AAC3B,QAAI,aAAa;AAAI,aAAO;AAC5B,WAAO;AAAA,EACT;AAGA,QAAM,uBAAuB,CAAC,MAAY,aAAqB;AAC7D,UAAM,YAAY,KAAK;AACvB,UAAM,WAAW,uBAAuB,QAAQ;AAChD,UAAM,kBAAkB,aAAa,IAAI,WAAW;AACpD,UAAM,eAAgB,YAAY,WAAa,kBAAkB;AAEjE,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,YAAY,kBAAkB;AAAA,IAChC;AAAA,EACF;AAEA,SACE,gBAAAW,OAAC,SAAI,WAAWT,IAAG,+BAA+B,SAAS,GACzD,0BAAAU,QAAC,SAAI,WAAU,0CAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,yCAAwC,2CAEtD;AAAA,MACA,gBAAAA,OAAC,OAAE,WAAU,2CAA0C,iGAEvD;AAAA,OACF;AAAA,IAGC,UAAU,SAAS,KAClB,gBAAAA,OAAC,SAAI,WAAU,6BACb,0BAAAA,OAAC,SAAI,WAAU,mCACZ,oBAAU,IAAI,CAAC,aAAa;AAC7B,YAAM,WAAW,uBAAuB,QAAQ;AAChD,YAAM,aAAa,qBAAqB;AACxC,aACE,gBAAAC;AAAA,QAACZ;AAAA,QAAA;AAAA,UACC,SAAS,aAAa,YAAY;AAAA,UAElC,SAAS,MAAM,oBAAoB,QAAQ;AAAA,UAC3C,WAAWE;AAAA,YACT;AAAA,YACA,aACI,qCACA;AAAA,UACN;AAAA,UAEA;AAAA,4BAAAU,QAAC,SAAI,WAAU,eACb;AAAA,8BAAAD,OAAC,SAAI,WAAU,iBACZ,uBAAa,IAAI,YACjB,aAAa,IAAI,cACjB,aAAa,IAAI,aACjB,aAAa,KAAK,WAClB,GAAG,QAAQ,WACd;AAAA,cACC,WAAW,IACV,gBAAAC,QAAC,SAAI,WAAU,kCAAiC;AAAA;AAAA,gBACxC;AAAA,gBAAS;AAAA,iBACjB,IAEA,gBAAAD,OAAC,SAAI,WAAU,sBAAqB,sBAEpC;AAAA,eAEJ;AAAA,YACC,WAAW,KACV,gBAAAA,OAAC,SAAI,WAAU,4BACb,0BAAAC,QAAC,SAAI,WAAU,mGACZ;AAAA;AAAA,cAAS;AAAA,eACZ,GACF;AAAA;AAAA;AAAA,QAhCG;AAAA,MAkCP;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,IAGA,gBAAAD,OAAC,SAAI,WAAU,8DACZ,gBAAM,IAAI,CAAC,SAAS;AAEnB,YAAM,UAAU,qBAAqB,MAAM,gBAAgB;AAE3D,aACE,gBAAAC;AAAA,QAAChB;AAAA,QAAA;AAAA,UAEC,WAAWM;AAAA,YACT;AAAA,YACA,KAAK,YACD,8BACA;AAAA,UACN;AAAA,UAEC;AAAA,iBAAK,aACJ,gBAAAS,OAAC,SAAI,WAAU,uDACb,0BAAAA,OAACV,SAAA,EAAM,WAAU,qEAAoE,0BAErF,GACF;AAAA,YAGF,gBAAAW,QAACf,cAAA,EAAW,WAAU,yBACpB;AAAA,8BAAAc,OAACb,aAAA,EAAU,WAAU,yCAClB,eAAK,MACR;AAAA,cACA,gBAAAa,OAAC,OAAE,WAAU,8BACV,eAAK,aACR;AAAA,cAGA,gBAAAA,OAAC,SAAI,WAAU,QACZ,eAAK,SAAS,UACb,gBAAAC,QAAC,SACC;AAAA,gCAAAD,OAAC,UAAK,WAAU,qCAAoC,kBAAI;AAAA,gBACxD,gBAAAA,OAAC,SAAI,WAAU,8BAA6B,0BAAY;AAAA,iBAC1D,IAEA,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,gCAAAA,QAAC,SAAI,WAAU,sCACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,oCACb,UAAAR,iBAAe,QAAQ,cAAc,KAAK,QAAwB,GACrE;AAAA,kBACA,gBAAAQ,OAAC,UAAK,WAAU,8BAA6B,oBAAM;AAAA,mBACrD;AAAA,gBAGC,QAAQ,WAAW,KAClB,gBAAAC,QAAC,SAAI,WAAU,yBACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,oCAAAA,QAAC,UAAK,WAAU,sCACb;AAAA,sBAAAT,iBAAe,QAAQ,WAAW,KAAK,QAAwB;AAAA,sBAAE;AAAA,uBACpE;AAAA,oBACA,gBAAAS,QAACX,SAAA,EAAM,WAAWC,IAAG,uBAAuB,sBAAsB,QAAQ,QAAQ,CAAC,GAChF;AAAA,8BAAQ;AAAA,sBAAS;AAAA,uBACpB;AAAA,qBACF;AAAA,kBACA,gBAAAU,QAAC,SAAI,WAAU,sCAAqC;AAAA;AAAA,oBAC5CT,iBAAe,QAAQ,cAAc,KAAK,QAAwB;AAAA,oBAAE;AAAA,qBAC5E;AAAA,mBACF;AAAA,gBAID,mBAAmB,KAClB,gBAAAS,QAAC,SAAI,WAAU,eACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,oBAC1B;AAAA,oBAAiB;AAAA,oBAAO,mBAAmB,IAAI,MAAM;AAAA,oBAAG;AAAA,qBACrE;AAAA,kBACA,gBAAAD,OAAC,SAAI,WAAU,uCACZ,UAAAR,iBAAe,QAAQ,YAAY,KAAK,QAAwB,GACnE;AAAA,mBACF;AAAA,iBAEJ,GAEJ;AAAA,eACF;AAAA,YAEA,gBAAAS,QAACb,eAAA,EAAY,WAAU,QAErB;AAAA,8BAAAa,QAAC,SAAI,WAAU,kBACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,qBAAO;AAAA,kBACvC,gBAAAA,OAAC,UAAK,WAAU,6BACb,eAAK,OAAO,YAAY,KAAK,cAAc,KAAK,OAAO,SAC1D;AAAA,mBACF;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,mBAAK;AAAA,kBACrC,gBAAAA,OAAC,UAAK,WAAU,6BACb,eAAK,OAAO,UAAU,KAAK,cAAc,KAAK,OAAO,OACxD;AAAA,mBACF;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,sBAAQ;AAAA,kBACxC,gBAAAA,OAAC,UAAK,WAAU,6BACb,eAAK,OAAO,aAAa,KAAK,cAAc,KAAK,OAAO,SAAS,eAAe,GACnF;AAAA,mBACF;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,uBAAS;AAAA,kBACzC,gBAAAA,OAAC,UAAK,WAAU,6BACb,eAAK,OAAO,cAAc,KAAK,cAAc,KAAK,OAAO,UAAU,eAAe,GACrF;AAAA,mBACF;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,0BAAY;AAAA,kBAC5C,gBAAAC,QAAC,UAAK,WAAU,6BACb;AAAA,yBAAK;AAAA,oBAAU;AAAA,qBAClB;AAAA,mBACF;AAAA,gBACA,gBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,sBAAQ;AAAA,kBACxC,gBAAAA,OAAC,UAAK,WAAU,6BACd,0BAAAC,QAAC,UAAK,WAAU,iDACb;AAAA,oCAAgB,YAAY;AAAA,oBAC5B,uBAAuB,YAAY;AAAA,qBACtC,GACF;AAAA,mBACF;AAAA,iBACF;AAAA,cAGC,KAAK,YAAY,KAAK,SAAS,SAAS,KACvC,gBAAAA,QAAC,SAAI,WAAU,kBACb;AAAA,gCAAAD,OAAC,QAAG,WAAU,4CAA2C,sBAAQ;AAAA,gBAChE,KAAK,SAAS,IAAI,CAAC,SAAS,UAC3B,gBAAAC,QAAC,SAAgB,WAAU,6CACzB;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAiB,mBAAQ;AAAA,kBACzC,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAFlC,KAGV,CACD;AAAA,iBACH;AAAA,cAIF,gBAAAQ,QAAC,SAAI,WAAU,kBACb;AAAA,gCAAAD,OAAC,QAAG,WAAU,4CAA2C,2BAAa;AAAA,gBACtE,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,8BAAgB;AAAA,kBAChD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,gCAAkB;AAAA,kBAClD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,iCAAmB;AAAA,kBACnD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,6BAAe;AAAA,kBAC/C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,wBAAU;AAAA,kBAC1C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,wBAAU;AAAA,kBAC1C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,0BAAY;AAAA,kBAC5C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAD,OAAC,UAAK,WAAU,iBAAgB,2BAAa;AAAA,kBAC7C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,mBAC5C;AAAA,gBACC,KAAK,SAAS,kBACb,gBAAAQ,QAAAF,YAAA,EACE;AAAA,kCAAAE,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,8BAAgB;AAAA,oBAChD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,kBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,wBAAU;AAAA,oBAC1C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,kBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,gCAAkB;AAAA,oBAClD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,mBACF;AAAA,gBAED,KAAK,SAAS,gBACb,gBAAAQ,QAAAF,YAAA,EACE;AAAA,kCAAAE,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,mCAAqB;AAAA,oBACrD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,kBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,6BAAe;AAAA,oBAC/C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,kBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,kCAAoB;AAAA,oBACpD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,kBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,uCAAyB;AAAA,oBACzD,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,kBACA,gBAAAQ,QAAC,SAAI,WAAU,6CACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,2BAAa;AAAA,oBAC7C,gBAAAA,OAACP,QAAA,EAAM,WAAU,0BAAyB;AAAA,qBAC5C;AAAA,mBACF;AAAA,iBAEJ;AAAA,cAGC,oBACC,gBAAAO;AAAA,gBAACX;AAAA,gBAAA;AAAA,kBACC,WAAU;AAAA,kBACV,SAAS,KAAK,YAAY,YAAY,KAAK,SAAS,UAAU,YAAY;AAAA,kBAC1E,SAAS,MAAM;AACb,qCAAiB,MAAM,gBAAgB;AAAA,kBACzC;AAAA,kBAEC,wBAAc,OAAO,KAAK,KAAK,aAC/B,KAAK,SAAS,UAAU,qBAAqB;AAAA;AAAA,cAChD;AAAA,eAEJ;AAAA;AAAA;AAAA,QA7NK,KAAK;AAAA,MA8NZ;AAAA,IAEJ,CAAC,GACH;AAAA,IAGC,gBACC,gBAAAY,QAAC,SAAI,WAAU,4DACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,4CAA2C,mCAEzD;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,wDACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,OAAE,WAAU,yBAAwB,kBAAI;AAAA,UACzC,gBAAAA,OAAC,OAAE,WAAU,6BAA6B,uBAAa,MAAK;AAAA,WAC9D;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,OAAE,WAAU,yBAAwB,4BAAc;AAAA,UACnD,gBAAAA,OAAC,OAAE,WAAU,6BACV,+BAAqB,IAAI,YACzB,qBAAqB,IAAI,cACzB,qBAAqB,IAAI,aACzB,qBAAqB,KAAK,WAC1B,GAAG,gBAAgB,WACtB;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,OAAE,WAAU,yBAAwB,2BAAa;AAAA,UAClD,gBAAAC,QAAC,OAAE,WAAU,6BACV;AAAA,YAAAT,iBAAe,qBAAqB,cAAc,gBAAgB,EAAE,cAAc,aAAa,QAAwB;AAAA,YACvH,qBAAqB,cAAc,gBAAgB,EAAE,WAAW,KAC/D,gBAAAS,QAAC,UAAK,WAAU,+BAA8B;AAAA;AAAA,cAC1C,qBAAqB,cAAc,gBAAgB,EAAE;AAAA,cAAS;AAAA,eAClE;AAAA,aAEJ;AAAA,WACF;AAAA,QACA,gBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,OAAE,WAAU,yBAAwB,yBAAW;AAAA,UAChD,gBAAAC,QAAC,OAAE,WAAU,6BACV;AAAA,YAAAT,iBAAe,qBAAqB,cAAc,gBAAgB,EAAE,YAAY,aAAa,QAAwB;AAAA,YACrH,qBAAqB,cAAc,gBAAgB,EAAE,WAAW,KAC/D,gBAAAS,QAAC,SAAI,WAAU,0BAAyB;AAAA;AAAA,cAChCT,iBAAe,qBAAqB,cAAc,gBAAgB,EAAE,cAAc,aAAa,QAAwB;AAAA,eAC/H;AAAA,aAEJ;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,IAIF,gBAAAQ,OAAC,SAAI,WAAU,mCACb,0BAAAA,OAAC,OAAE,WAAU,WAAU,2FAEvB,GACF;AAAA,KACF,GACF;AAEJ;;;AC9iBA,SAAgB,YAAAE,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,SAAAC;AAAA,EAEA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AACP;AAAA,EACE,SAAAC;AAAA,EACA,cAAAC;AAAA,EAGA,iBAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,OAAAC;AAAA,OACK;AA6IG,SACE,OAAAC,QADF,QAAAC,eAAA;AAjHV,IAAMC,kBAAuC;AAAA,EAC3C;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,aAAa;AAAA,EACf;AACF;AAMA,IAAM,kBAAkB;AAAA,EACtB,EAAE,OAAO,UAAU,OAAO,wBAAwB,MAAMP,YAAW;AAAA,EACnE,EAAE,OAAO,UAAU,OAAO,UAAU,MAAMA,YAAW;AAAA,EACrD,EAAE,OAAO,iBAAiB,OAAO,iBAAiB,MAAMA,YAAW;AAAA,EACnE,EAAE,OAAO,UAAU,OAAO,kBAAkB,MAAMA,YAAW;AAC/D;AAMO,IAAM,qBAAwD,CAAC;AAAA,EACpE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAInB,WAAsB,IAAI;AAClE,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAAuB,SAAS;AACxF,QAAM,CAAC,uBAAuB,wBAAwB,IAAIA,WAAiB,QAAQ;AACnF,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAiB,CAAC;AAGhE,EAAAC,YAAU,MAAM;AACd,QAAI,cAAc;AAChB,YAAM,eAAeyB,gBAAe,KAAK,QAAM,GAAG,UAAU,oBAAoB;AAChF,UAAI,cAAc;AAChB,cAAM,YAAY,aAAa;AAC/B,cAAM,WAAW,aAAa,WAAW;AACzC,cAAM,kBAAkB,aAAa,IAAI;AACzC,cAAM,aAAa,kBAAkB,aAAa;AAClD,2BAAmB,KAAK,MAAM,aAAa,GAAG,IAAI,GAAG;AAAA,MACvD;AAAA,IACF;AAAA,EACF,GAAG,CAAC,cAAc,oBAAoB,CAAC;AAEvC,QAAM,mBAAmB,CAAC,SAAe;AACvC,oBAAgB,IAAI;AAAA,EACtB;AAEA,QAAM,2BAA2B,CAAC,UAAkB;AAClD,4BAAwB,KAAqB;AAAA,EAC/C;AAEA,QAAM,4BAA4B,CAAC,UAAkB;AACnD,6BAAyB,KAAK;AAAA,EAChC;AAEA,QAAM,gBAAgB,MAAM;AAC1B,QAAI,cAAc;AAChB,mBAAa,aAAa,IAAI,oBAAoB;AAAA,IACpD;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,YAAoB;AAC1C,QAAI,QAAQ,YAAY,EAAE,SAAS,WAAW;AAAG,aAAOH;AACxD,QAAI,QAAQ,YAAY,EAAE,SAAS,UAAU,KAAK,QAAQ,YAAY,EAAE,SAAS,QAAQ;AAAG,aAAOD;AACnG,QAAI,QAAQ,YAAY,EAAE,SAAS,SAAS;AAAG,aAAOA;AACtD,WAAOJ;AAAA,EACT;AAEA,QAAM,cAAc,CAAC,OAAe,WAAmB,UAAU;AAC/D,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAEA,QAAM,sBAAsB,MAAM;AAChC,WAAOQ,gBAAe,KAAK,QAAM,GAAG,UAAU,oBAAoB;AAAA,EACpE;AAEA,SACE,gBAAAF,OAACtB,UAAA,EAAO,MAAM,QAAQ,cAAc,SAClC,0BAAAuB,QAACtB,iBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAqB,OAACpB,gBAAA,EACC,0BAAAqB,QAACpB,eAAA,EAAY,WAAU,2BACrB;AAAA,sBAAAmB,OAACJ,gBAAA,EAAc,WAAU,2BAA0B;AAAA,MAAE;AAAA,OAEvD,GACF;AAAA,IAEA,gBAAAK,QAAC,SAAI,WAAU,aAEZ;AAAA,qBACC,gBAAAD,OAACjB,QAAA,EAAK,WAAU,kCACd,0BAAAkB,QAACjB,eAAA,EAAY,WAAU,QACrB;AAAA,wBAAAiB,QAAC,SAAI,WAAU,2CACb;AAAA,0BAAAD,OAACH,SAAA,EAAM,WAAU,WAAU;AAAA,UAC3B,gBAAAI,QAAC,UAAK,WAAU,eAAc;AAAA;AAAA,YAAe,YAAY;AAAA,aAAK;AAAA,UAC9D,gBAAAD,OAACb,SAAA,EAAM,SAAQ,eAAc,qBAAO;AAAA,WACtC;AAAA,QACA,gBAAAa,OAAC,OAAE,WAAU,gCAA+B,oGAE5C;AAAA,SACF,GACF;AAAA,MAIF,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,yBAAwB,8BAAgB;AAAA,QACtD,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,IAAI,CAAC,SACV,gBAAAC;AAAA,UAAClB;AAAA,UAAA;AAAA,YAEC,WAAW,iDACT,cAAc,OAAO,KAAK,KACtB,yCACA,uBACN,IAAI,KAAK,YAAY,+BAA+B,EAAE;AAAA,YACtD,SAAS,MAAM,iBAAiB,IAAI;AAAA,YAEpC;AAAA,8BAAAkB,QAAChB,cAAA,EAAW,WAAU,QACpB;AAAA,gCAAAgB,QAAC,SAAI,WAAU,qCACb;AAAA,kCAAAD,OAACd,aAAA,EAAU,WAAU,WAAW,eAAK,MAAK;AAAA,kBACzC,KAAK,aACJ,gBAAAc,OAACb,SAAA,EAAM,WAAU,eAAc,0BAAY;AAAA,mBAE/C;AAAA,gBACA,gBAAAc,QAAC,SAAI,WAAU,oCACZ;AAAA,8BAAY,KAAK,OAAO,KAAK,QAAQ;AAAA,kBACtC,gBAAAA,QAAC,UAAK,WAAU,qCAAoC;AAAA;AAAA,oBAChD,KAAK;AAAA,qBACT;AAAA,mBACF;AAAA,gBACA,gBAAAD,OAAC,OAAE,WAAU,yBAAyB,eAAK,aAAY;AAAA,iBACzD;AAAA,cACA,gBAAAA,OAAChB,eAAA,EAAY,WAAU,QACrB,0BAAAgB,OAAC,SAAI,WAAU,aACX,kBAAO,KAAK,aAAa,WAAW,KAAK,MAAM,KAAK,QAAQ,IAAI,KAAK,YAAY,CAAC,GAAG,IAAI,CAAC,SAAiB,UAAkB;AAC7H,sBAAMG,QAAO,eAAe,OAAO;AACnC,uBACE,gBAAAF,QAAC,SAAgB,WAAU,mCACzB;AAAA,kCAAAD,OAACG,OAAA,EAAK,WAAU,0BAAyB;AAAA,kBACzC,gBAAAH,OAAC,UAAM,mBAAQ;AAAA,qBAFP,KAGV;AAAA,cAEJ,CAAC,GACH,GACF;AAAA;AAAA;AAAA,UAnCK,KAAK;AAAA,QAoCZ,CACD,GACH;AAAA,SACF;AAAA,MAGC,gBACC,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,yBAAwB,kCAAoB;AAAA,QAC1D,gBAAAA,OAAC,SAAI,WAAU,wDACZ,UAAAE,gBAAe,IAAI,CAAC,UACnB,gBAAAF;AAAA,UAACjB;AAAA,UAAA;AAAA,YAEC,WAAW,iDACT,yBAAyB,MAAM,QAC3B,yCACA,uBACN;AAAA,YACA,SAAS,MAAM,yBAAyB,MAAM,KAAK;AAAA,YAEnD,0BAAAiB,OAAChB,eAAA,EAAY,WAAU,QACrB,0BAAAiB,QAAC,SAAI,WAAU,eACb;AAAA,8BAAAD,OAAC,QAAG,WAAU,iBAAiB,gBAAM,OAAM;AAAA,cAC1C,MAAM,WAAW,KAChB,gBAAAC,QAACd,SAAA,EAAM,WAAU,qBAAoB;AAAA;AAAA,gBAC7B,MAAM;AAAA,gBAAS;AAAA,iBACvB;AAAA,cAEF,gBAAAa,OAAC,OAAE,WAAU,8BACV,gBAAM,aACT;AAAA,eACF,GACF;AAAA;AAAA,UApBK,MAAM;AAAA,QAqBb,CACD,GACH;AAAA,SACF;AAAA,MAID,gBACC,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,yBAAwB,4BAAc;AAAA,QACpD,gBAAAC,QAACb,UAAA,EAAO,OAAO,uBAAuB,eAAe,2BACnD;AAAA,0BAAAY,OAACT,iBAAA,EACC,0BAAAS,OAACR,eAAA,EAAY,aAAY,yBAAwB,GACnD;AAAA,UACA,gBAAAQ,OAACX,iBAAA,EACE,0BAAgB,IAAI,CAAC,WAAW;AAC/B,kBAAMc,QAAO,OAAO;AACpB,mBACE,gBAAAH,OAACV,cAAA,EAA8B,OAAO,OAAO,OAC3C,0BAAAW,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACG,OAAA,EAAK,WAAU,WAAU;AAAA,cACzB,OAAO;AAAA,eACV,KAJe,OAAO,KAKxB;AAAA,UAEJ,CAAC,GACH;AAAA,WACF;AAAA,SACF;AAAA,MAID,gBACC,gBAAAH,OAACjB,QAAA,EAAK,WAAU,cACd,0BAAAiB,OAAChB,eAAA,EAAY,WAAU,QACrB,0BAAAiB,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,eAAc,mBAAK;AAAA,UACnC,gBAAAA,OAAC,UAAM,uBAAa,MAAK;AAAA,WAC3B;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,eAAc,4BAAc;AAAA,UAC5C,gBAAAA,OAAC,UAAM,8BAAoB,GAAG,OAAM;AAAA,WACtC;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,eAAc,yBAAW;AAAA,UACzC,gBAAAA,OAAC,UAAM,sBAAY,aAAa,OAAO,aAAa,QAAQ,GAAE;AAAA,WAChE;AAAA,QACC,oBAAoB,GAAG,WAAW,KACjC,gBAAAC,QAAC,SAAI,WAAU,oDACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,eAAc;AAAA;AAAA,YAAW,oBAAoB,GAAG;AAAA,YAAS;AAAA,aAAG;AAAA,UAC5E,gBAAAA,QAAC,UAAK;AAAA;AAAA,YAAE,YAAY,aAAa,QAAQ,oBAAoB,EAAG,WAAW,KAAK,aAAa,QAAQ;AAAA,aAAE;AAAA,WACzG;AAAA,QAEF,gBAAAD,OAACP,YAAA,EAAU;AAAA,QACX,gBAAAQ,QAAC,SAAI,WAAU,uDACb;AAAA,0BAAAD,OAAC,UAAK,oBAAM;AAAA,UACZ,gBAAAA,OAAC,UAAK,WAAU,iBACb,sBAAY,iBAAiB,aAAa,QAAQ,GACrD;AAAA,WACF;AAAA,SACF,GACF,GACF;AAAA,MAIF,gBAAAC,QAAC,SAAI,WAAU,0BACb;AAAA,wBAAAD,OAAClB,UAAA,EAAO,SAAQ,WAAU,SAAS,SAAS,oBAE5C;AAAA,QACA,gBAAAkB;AAAA,UAAClB;AAAA,UAAA;AAAA,YACC,SAAS;AAAA,YACT,UAAU,CAAC,gBAAgB;AAAA,YAC3B,WAAU;AAAA,YAET,oBAAU,kBAAkB;AAAA;AAAA,QAC/B;AAAA,SACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC1VA;AAAA,EACE,iBAAAsB;AAAA,EACA,cAAAC;AAAA,EACA,YAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,WAAAC;AAAA,EACA,eAAAC;AAAA,EACA,QAAAC;AAAA,OACK;AACP,SAAS,iCAAiC;AAsCjB,gBAAAC,QAiCb,QAAAC,eAjCa;AA5BlB,SAAS,yBAAyB;AAAA,EACvC,YAAY;AAAA,EACZ,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA;AACF,GAAkC;AAChC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,0BAA0B;AAG9B,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,QAAMC,iBAAgB,MAAM;AAC1B,QAAI;AAAU,aAAO,gBAAAF,OAACH,UAAA,EAAQ,WAAU,WAAU;AAClD,QAAI;AAAY,aAAO,gBAAAG,OAACJ,SAAA,EAAO,WAAU,WAAU;AACnD,QAAI;AAAW,aAAO,gBAAAI,OAACL,SAAA,EAAM,WAAU,WAAU;AACjD,QAAI;AAAiB,aAAO,gBAAAK,OAACP,aAAA,EAAW,WAAU,WAAU;AAC5D,QAAI;AAAiB,aAAO,gBAAAO,OAACR,gBAAA,EAAc,WAAU,WAAU;AAC/D,WAAO,gBAAAQ,OAACD,OAAA,EAAK,WAAU,WAAU;AAAA,EACnC;AAEA,QAAM,mBAAmB,MAAM;AAC7B,YAAQ,aAAa;AAAA,MACnB,KAAK;AAAO,eAAO;AAAA,MACnB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAS,eAAO;AAAA,MACrB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,wBAAwB,MAAM;AAClC,YAAQ,aAAa;AAAA,MACnB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAY,eAAO;AAAA,MACxB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAEA,SACE,gBAAAC,OAAC,SAAM,WAAW,GAAG,SAAS,IAAI,iBAAiB,CAAC,IAClD,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,oBAAAA,QAAC,SAAI,WAAU,8BACZ;AAAA,MAAAC,eAAc;AAAA,MACf,gBAAAD,QAAC,SAAI,WAAU,UACb;AAAA,wBAAAA,QAAC,cAAW,WAAU,2BAA0B;AAAA;AAAA,UAE9C,gBAAAD,OAAC,SAAM,SAAS,sBAAsB,GACnC,sBAAY,YAAY,GAC3B;AAAA,WACF;AAAA,QACA,gBAAAA,OAAC,oBAAiB,WAAU,QACzB,yBACH;AAAA,QAEC,mBACC,gBAAAC,QAAC,SAAI,WAAU,sCACb;AAAA,0BAAAD,OAACL,SAAA,EAAM,WAAU,uBAAsB;AAAA,UAAE;AAAA,UACrB,gBAAgB,mBAAmB;AAAA,WACzD;AAAA,SAEJ;AAAA,OACF;AAAA,IAEC,eACC,gBAAAM,QAAC,SAAI,WAAU,oCACZ;AAAA,yBAAmB,aAClB,gBAAAA,QAAC,UAAO,MAAK,MAAK,SAAS,WACzB;AAAA,wBAAAD,OAACF,eAAA,EAAY,WAAU,gBAAe;AAAA,QAAE;AAAA,SAE1C;AAAA,MAGD,mBAAmB,aAClB,gBAAAG,QAAC,UAAO,MAAK,MAAK,SAAQ,WAAU,SAAS,WAC3C;AAAA,wBAAAD,OAACP,aAAA,EAAW,WAAU,gBAAe;AAAA,QAAE;AAAA,SAEzC;AAAA,MAGD,iBAAiB,YAChB,gBAAAQ,QAAC,UAAO,MAAK,MAAK,SAAQ,WAAU,SAAS,UAC3C;AAAA,wBAAAD,OAACN,WAAA,EAAS,WAAU,gBAAe;AAAA,QAAE;AAAA,SAEvC;AAAA,OAEJ;AAAA,KAEJ,GACF;AAEJ;AAUO,SAAS,uBAAuB;AAAA,EACrC,YAAY;AAAA,EACZ,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA;AACF,GAAgC;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,0BAA0B;AAG9B,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,QAAMQ,iBAAgB,MAAM;AAC1B,QAAI;AAAU,aAAO,gBAAAF,OAACH,UAAA,EAAQ,WAAU,wBAAuB;AAC/D,QAAI;AAAY,aAAO,gBAAAG,OAACJ,SAAA,EAAO,WAAU,2BAA0B;AACnE,QAAI;AAAW,aAAO,gBAAAI,OAACL,SAAA,EAAM,WAAU,2BAA0B;AACjE,QAAI;AAAiB,aAAO,gBAAAK,OAACP,aAAA,EAAW,WAAU,2BAA0B;AAC5E,QAAI;AAAiB,aAAO,gBAAAO,OAACR,gBAAA,EAAc,WAAU,wBAAuB;AAC5E,WAAO,gBAAAQ,OAACD,OAAA,EAAK,WAAU,yBAAwB;AAAA,EACjD;AAEA,QAAMI,mBAAiB,MAAM;AAC3B,YAAQ,aAAa;AAAA,MACnB,KAAK;AAAO,eAAO;AAAA,MACnB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAS,eAAO;AAAA,MACrB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAEA,SACE,gBAAAH,OAAC,QAAK,WAAW,GAAG,SAAS,IAAIG,iBAAe,CAAC,IAC/C,0BAAAH,OAAC,eAAY,WAAU,OACrB,0BAAAA,OAAC,SAAI,WAAU,oCACb,0BAAAC,QAAC,SAAI,WAAU,8BACZ;AAAA,IAAAC,eAAc;AAAA,IACf,gBAAAD,QAAC,SAAI,WAAU,UACb;AAAA,sBAAAA,QAAC,QAAG,WAAU,4CAA2C;AAAA;AAAA,QACjC,YAAY,YAAY;AAAA,SAChD;AAAA,MACA,gBAAAD,OAAC,OAAE,WAAU,sBACV,yBACH;AAAA,MAEC,mBACC,gBAAAC,QAAC,SAAI,WAAU,8BACb;AAAA,wBAAAD,OAACL,SAAA,EAAM,WAAU,uBAAsB;AAAA,QAAE;AAAA,QACrB,gBAAgB,mBAAmB;AAAA,SACzD;AAAA,MAGD,eACC,gBAAAM,QAAC,SAAI,WAAU,+BACZ;AAAA,2BAAmB,aAClB,gBAAAA,QAAC,UAAO,MAAK,MAAK,SAAS,WACzB;AAAA,0BAAAD,OAACF,eAAA,EAAY,WAAU,gBAAe;AAAA,UAAE;AAAA,WAE1C;AAAA,QAGD,mBAAmB,aAClB,gBAAAG,QAAC,UAAO,MAAK,MAAK,SAAQ,WAAU,SAAS,WAC3C;AAAA,0BAAAD,OAACP,aAAA,EAAW,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEzC;AAAA,QAGD,iBAAiB,YAChB,gBAAAQ,QAAC,UAAO,MAAK,MAAK,SAAQ,WAAU,SAAS,UAC3C;AAAA,0BAAAD,OAACN,WAAA,EAAS,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEvC;AAAA,SAEJ;AAAA,OAEJ;AAAA,KACF,GACF,GACF,GACF;AAEJ;;;AC9OA;AAAA,EACE,YAAAU;AAAA,EACA,SAAAC;AAAA,EAEA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA;AAAA,OACK;AACP,SAAS,0BAA0B,kCAA2D;AAsBnE,gBAAAC,QAgBjB,QAAAC,eAhBiB;AAZpB,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,YAAY;AACd,GAAgC;AAC9B,QAAM,YAAY,yBAAyB,MAAM;AACjD,QAAM,cAAc,2BAA2B,OAAO,WAAW,WAAW,YAAY,OAAO,aAAa;AAE5G,QAAMC,iBAAgB,MAAM;AAC1B,YAAQ,YAAY,MAAM;AAAA,MACxB,KAAK;AAAS,eAAO,gBAAAF,OAACL,SAAA,EAAM,WAAU,WAAU;AAAA,MAChD,KAAK;AAAkB,eAAO,gBAAAK,OAACJ,gBAAA,EAAc,WAAU,WAAU;AAAA,MACjE,KAAK;AAAgB,eAAO,gBAAAI,OAACH,eAAA,EAAY,WAAU,WAAU;AAAA,MAC7D,KAAK;AAAS,eAAO,gBAAAG,OAACF,QAAA,EAAM,WAAU,WAAU;AAAA,MAChD,KAAK;AAAY,eAAO,gBAAAE,OAACD,UAAA,EAAQ,WAAU,WAAU;AAAA,MACrD;AAAS,eAAO,gBAAAC,OAAC,eAAY,WAAU,WAAU;AAAA,IACnD;AAAA,EACF;AAEA,SACE,gBAAAC,QAAC,QAAK,WAAW,GAAG,SAAS,IAC3B;AAAA,oBAAAD,OAAC,cAAW,WAAU,QACpB,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,OAAC,aAAU,WAAU,yBAAwB,iCAE7C;AAAA,MACA,gBAAAC,QAAC,SAAM,WAAW,GAAG,YAAY,KAAK,4BACnC;AAAA,QAAAC,eAAc;AAAA,QACd,YAAY;AAAA,SACf;AAAA,OACF,GACF;AAAA,IAEA,gBAAAD,QAAC,eAAY,WAAU,aAEpB;AAAA,kBACC,gBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,qCAAoC,kBAAI;AAAA,QACxD,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,oBAAS;AAAA,SACpD;AAAA,MAID,WAAW,UACV,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,qCAAoC,oBAAM;AAAA,QAC1D,gBAAAC,QAAC,UAAK,WAAU,yBACb;AAAA;AAAA,UAAS;AAAA,UAAE,OAAO,QAAQ,CAAC;AAAA,WAC9B;AAAA,SACF;AAAA,MAIF,gBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAACN,YAAA,EAAS,WAAU,yBAAwB;AAAA,QAC5C,gBAAAO,QAAC,SAAI,WAAU,UACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,qCACZ,oBAAU,QACb;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,yBACZ;AAAA,mBAAO;AAAA,YAAS;AAAA,aACnB;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAACL,SAAA,EAAM,WAAU,yBAAwB;AAAA,QACzC,gBAAAM,QAAC,SAAI,WAAU,UACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,qCACZ,oBAAU,eACb;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,YACtB,UAAU;AAAA,aAC3B;AAAA,WACF;AAAA,SACF;AAAA,MAGC,OAAO,WAAW,OAAO,WACxB,gBAAAD,OAAC,SAAI,WAAU,oDACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAACL,SAAA,EAAM,WAAU,yBAAwB;AAAA,QACzC,gBAAAM,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,qCAAoC,0BAEnD;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,YACxB,UAAU;AAAA,aACzB;AAAA,WACF;AAAA,SACF,GACF;AAAA,OAEJ;AAAA,KACF;AAEJ;;;ACtHA,SAAS,qBAAqB;AAC9B,SAAS,QAAAE,OAAM,iBAAAC,uBAAwC;AA4B1C,SA4DS,YAAAC,YA5DT,OAAAC,QA+BT,QAAAC,eA/BS;AAlBN,SAAS,iBAAiB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAA0B;AACxB,QAAM,aAAa,cAAc,MAAM;AACvC,QAAM,aAAa,YAAY,CAAC;AAEhC,QAAM,qBAAqB,MAAM;AAC/B,QAAI;AAAc,aAAO;AAGzB,QAAI,OAAO,SAAS,QAAQ,KAAK,OAAO,SAAS,SAAS,GAAG;AAC3D,aAAO,gBAAAD,OAACH,OAAA,EAAK,WAAU,WAAU;AAAA,IACnC;AACA,WAAO,gBAAAG,OAACF,iBAAA,EAAc,WAAU,WAAU;AAAA,EAC5C;AAEA,QAAM,qBAAqB,MAAM;AAC/B,QAAI;AAAc,aAAO;AACzB,QAAI;AAAQ,aAAO;AAGnB,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAG;AAAA,IAAC;AAAA;AAAA,MACE,GAAG;AAAA,MACJ,UAAU;AAAA,MACV,SAAS,aAAa,YAAY,MAAM;AAAA,MACxC,WAAW,GAAG,MAAM,SAAS,IAAI,aAAa,kCAAkC,EAAE;AAAA,MAClF,OAAO,cAAc,cAAc,mBAAmB,IAAI;AAAA,MAEzD;AAAA,sBAAc,mBAAmB;AAAA,QACjC;AAAA;AAAA;AAAA,EACH;AAEJ;AASO,SAAS,iBAAiB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAA0B;AACxB,QAAM,aAAa,cAAc,MAAM;AAEvC,MAAI,CAAC,YAAY;AACf,WAAO,WAAW,gBAAAD,OAAAD,YAAA,EAAG,oBAAS,IAAM;AAAA,EACtC;AAEA,SAAO,gBAAAC,OAAAD,YAAA,EAAG,UAAS;AACrB;AAUO,SAAS,kBAAkB;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAA2B;AACzB,QAAM,aAAa,cAAc,MAAM;AAEvC,MAAI,CAAC,YAAY;AACf,WAAO,WAAW,gBAAAC,OAAC,SAAI,WAAuB,oBAAS,IAAS;AAAA,EAClE;AAEA,SAAO,gBAAAA,OAAC,SAAI,WAAuB,UAAS;AAC9C;;;ACzHA,SAAgB,YAAAE,kBAAgB;AAChC;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,kBAAAC,wBAAsB;AAC3C,SAAS,YAAAC,WAAU,UAAU,OAAAC,aAAmB;AAgDrC,SAoED,YAAAC,YApEC,OAAAC,QAuCH,QAAAC,eAvCG;AApBJ,SAAS,oBAAoB;AAAA,EAClC;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA;AACF,GAA6B;AAC3B,QAAM,CAAC,cAAc,eAAe,IAAId,WAAiB,KAAK;AAC9D,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAiB,KAAK;AAE9D,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,YAA6D;AAAA,MACjE,WAAW,EAAE,SAAS,WAAW,OAAO,OAAO;AAAA,MAC/C,SAAS,EAAE,SAAS,WAAW,OAAO,UAAU;AAAA,MAChD,QAAQ,EAAE,SAAS,UAAU,OAAO,SAAS;AAAA,MAC7C,UAAU,EAAE,SAAS,aAAa,OAAO,WAAW;AAAA,IACtD;AAEA,UAAM,SAAS,UAAU,MAAM,KAAK,EAAE,SAAS,WAAW,OAAO,OAAO;AACxE,WAAO,gBAAAa,OAACP,SAAA,EAAM,SAAS,OAAO,SAAU,iBAAO,OAAM;AAAA,EACvD;AAEA,QAAM,gBAAgB,CAAC,WAAmB;AACxC,YAAQ,OAAO,YAAY,GAAG;AAAA,MAC5B,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,cAAc,MAAM;AACxB,UAAM,MAAM;AAAA,MACV,CAAC,QAAQ,UAAU,UAAU,UAAU,gBAAgB,EAAE,KAAK,GAAG;AAAA,MACjE,GAAG,SAAS,IAAI,CAAAS,OAAK;AAAA,QACnBP,YAAWO,GAAE,WAAW,cAAc;AAAA,QACtCA,GAAE;AAAA,QACFA,GAAE;AAAA,QACFA,GAAE;AAAA,QACFA,GAAE;AAAA,MACJ,EAAE,KAAK,GAAG,CAAC;AAAA,IACb,EAAE,KAAK,IAAI;AAEX,UAAM,OAAO,IAAI,KAAK,CAAC,GAAG,GAAG,EAAE,MAAM,WAAW,CAAC;AACjD,UAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,UAAM,IAAI,SAAS,cAAc,GAAG;AACpC,MAAE,OAAO;AACT,MAAE,WAAW,mBAAmB,cAAc,IAAI,KAAK,IAAI,CAAC;AAC5D,MAAE,MAAM;AAAA,EACV;AAEA,MAAI,SAAS;AACX,WACE,gBAAAF,OAACZ,QAAA,EACC,0BAAAa,QAACV,eAAA,EAAY,WAAU,mBACrB;AAAA,sBAAAS,OAAC,SAAI,WAAU,2FAA0F;AAAA,MACzG,gBAAAA,OAAC,OAAE,WAAU,sBAAqB,wCAA0B;AAAA,OAC9D,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAACb,QAAA,EACC;AAAA,oBAAAY,OAACX,cAAA,EACC,0BAAAY,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,OAACV,aAAA,EAAU,uCAAkB;AAAA,MAC7B,gBAAAU,OAAC,SAAI,WAAU,cACb,0BAAAC,QAACT,UAAA,EAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,aAC3C;AAAA,wBAAAQ,OAACH,WAAA,EAAS,WAAU,gBAAe;AAAA,QAAE;AAAA,SAEvC,GACF;AAAA,OACF,GACF;AAAA,IAEA,gBAAAG,OAACT,eAAA,EACE,mBAAS,WAAW,IACnB,gBAAAU,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAAC,YAAS,WAAU,wCAAuC;AAAA,MAC3D,gBAAAA,OAAC,OAAE,WAAU,iBAAgB,oCAAsB;AAAA,OACrD,IAEA,gBAAAC,QAAAF,YAAA,EACE;AAAA,sBAAAC,OAAC,SAAI,WAAU,mBACb,0BAAAC,QAAC,WAAM,WAAU,UACf;AAAA,wBAAAD,OAAC,WAAM,WAAU,YACf,0BAAAC,QAAC,QAAG,WAAU,mCACZ;AAAA,0BAAAD,OAAC,QAAG,WAAU,oBAAmB,kBAAI;AAAA,UACrC,gBAAAA,OAAC,QAAG,WAAU,oBAAmB,oBAAM;AAAA,UACvC,gBAAAA,OAAC,QAAG,WAAU,oBAAmB,oBAAM;AAAA,UACvC,gBAAAA,OAAC,QAAG,WAAU,oBAAmB,oBAAM;AAAA,UACvC,gBAAAA,OAAC,QAAG,WAAU,oBAAmB,4BAAc;AAAA,UAC/C,gBAAAA,OAAC,QAAG,WAAU,oBAAmB,qBAAO;AAAA,UACxC,gBAAAA,OAAC,QAAG,WAAU,+BAA8B,qBAAO;AAAA,WACrD,GACF;AAAA,QACA,gBAAAA,OAAC,WACE,mBAAS,IAAI,CAAC,YACb,gBAAAC,QAAC,QAAoB,WAAU,6BAC7B;AAAA,0BAAAD,OAAC,QAAG,WAAU,gBACX,UAAAL,YAAW,IAAI,KAAK,QAAQ,SAAS,GAAG,cAAc,GACzD;AAAA,UACA,gBAAAK,OAAC,QAAG,WAAU,8BACX,UAAAJ,iBAAe,QAAQ,QAAQ,QAAQ,QAAQ,GAClD;AAAA,UACA,gBAAAI,OAAC,QAAG,WAAU,gBACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,UAAM,wBAAc,QAAQ,MAAM,GAAE;AAAA,YACrC,gBAAAA,OAAC,UAAK,WAAU,cACb,kBAAQ,OAAO,YAAY,GAC9B;AAAA,aACF,GACF;AAAA,UACA,gBAAAA,OAAC,QAAG,WAAU,gBACX,yBAAe,QAAQ,MAAM,GAChC;AAAA,UACA,gBAAAA,OAAC,QAAG,WAAU,0BACX,kBAAQ,eACX;AAAA,UACA,gBAAAA,OAAC,QAAG,WAAU,gBACX,kBAAQ,gBACP,gBAAAC;AAAA,YAACT;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,oBAAoB,OAAO;AAAA,cAE1C;AAAA,gCAAAQ,OAAC,YAAS,WAAU,gBAAe;AAAA,gBAClC,QAAQ;AAAA;AAAA;AAAA,UACX,IAEA,gBAAAA,OAAC,UAAK,WAAU,iBAAgB,iBAAG,GAEvC;AAAA,UACA,gBAAAA,OAAC,QAAG,WAAU,2BACZ,0BAAAA;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,gBAAgB,OAAO;AAAA,cAEtC,0BAAAQ,OAACF,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,UAC3B,GACF;AAAA,aA3CO,QAAQ,EA4CjB,CACD,GACH;AAAA,SACF,GACF;AAAA,MAEC,cAAc,WAAW,QAAQ,WAAW,SAC3C,gBAAAE,OAAC,SAAI,WAAU,QACb,0BAAAA;AAAA,QAACN;AAAA,QAAA;AAAA,UACC,aAAa,WAAW;AAAA,UACxB,YAAY,KAAK,KAAK,WAAW,QAAQ,WAAW,KAAK;AAAA,UACzD,cAAc,WAAW;AAAA;AAAA,MAC3B,GACF;AAAA,OAEJ,GAEJ;AAAA,KACF;AAEJ;;;AC/MA,SAAgB,YAAAS,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EAEA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,kBAAAC,wBAAsB;AAC3C;AAAA,EACE;AAAA,OAEK;AACP;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,aAAAC,YAAW,eAAAC,qBAAmB;AAkFzC,SACE,OAAAC,QADF,QAAAC,eAAA;AA1DH,SAAS,mBAAmB;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAA4B;AAC1B,QAAM,CAAC,QAAQ,SAAS,IAAItB,WAAgC,UAAU;AACtE,QAAM,CAAC,UAAU,WAAW,IAAIA,WAAwB,CAAC;AACzD,QAAM,CAAC,eAAe,gBAAgB,IAAIA,WAAS,EAAE;AACrD,QAAM,CAAC,WAAW,YAAY,IAAIA,WAAS,EAAE;AAC7C,QAAM,CAAC,aAAa,cAAc,IAAIA,WAAS,EAAE;AACjD,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAG/D,QAAM,iBAAiB,MAAM,sBAAsB,aAAa,QAAQ,QAAQ;AAChF,QAAM,aAAa,MAAM,iBAAiB,aAAa,QAAQ,QAAQ;AAEvE,QAAM,kBAAkB,IAAI,KAAK,aAAa,gBAAgB;AAC9D,QAAM,gBAAgB,IAAI,KAAK,eAAe;AAC9C,gBAAc,SAAS,cAAc,SAAS,IAAI,QAAQ;AAE1D,QAAM,WAAW,MAAe;AAC9B,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,cAAc,KAAK,GAAG;AACzB,gBAAU,gBAAgB;AAAA,IAC5B;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC,SAAS;AAAG;AAEjB,QAAI;AACF,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA;AAAA,QACA,WAAW,aAAa;AAAA,QACxB,aAAa,eAAe,GAAG,QAAQ,SAAS,WAAW,IAAI,MAAM,EAAE,2BAA2BgB,YAAW,oBAAI,KAAK,GAAG,WAAW,CAAC;AAAA,MACvI,CAAC;AAGD,uBAAiB,EAAE;AACnB,mBAAa,EAAE;AACf,qBAAe,EAAE;AACjB,cAAQ;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,mBAAmB,KAAK;AAAA,IACxC;AAAA,EACF;AAEA,SACE,gBAAAK,OAACpB,UAAA,EAAO,MAAM,QAAQ,cAAc,SAClC,0BAAAqB,QAACpB,iBAAA,EAAc,WAAU,wDACvB;AAAA,oBAAAoB,QAACnB,gBAAA,EAAa,WAAU,iBACtB;AAAA,sBAAAmB,QAAClB,eAAA,EAAY,WAAU,2BACrB;AAAA,wBAAAiB,OAACH,aAAA,EAAW,WAAU,0BAAyB;AAAA,QAAE;AAAA,SAEnD;AAAA,MACA,gBAAAI,QAACjB,oBAAA,EAAkB;AAAA;AAAA,QACQ,aAAa;AAAA,SACxC;AAAA,OACF;AAAA,IAEA,gBAAAiB,QAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,8BAA6B,0BAAY;AAAA,QACtD,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,yBAAyB,uBAAa,UAAS;AAAA,UAC5D,gBAAAC,QAAC,OAAE,WAAU,yBAAyB;AAAA,YAAAL,iBAAe,aAAa,QAAQ,aAAa,QAAQ;AAAA,YAAE;AAAA,aAAM;AAAA,WACzG;AAAA,QACA,gBAAAK,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,UAC9BN,YAAW,aAAa,kBAAkB,cAAc;AAAA,WACpE;AAAA,SACF;AAAA,MAGA,gBAAAM,QAAC,SACC;AAAA,wBAAAD,OAACZ,QAAA,EAAM,SAAQ,YAAW,8BAAgB;AAAA,QAC1C,gBAAAa;AAAA,UAACX;AAAA,UAAA;AAAA,YACC,OAAO,SAAS,SAAS;AAAA,YACzB,eAAe,CAAC,UAAU,YAAY,SAAS,KAAK,CAAkB;AAAA,YAEtE;AAAA,8BAAAU,OAACP,iBAAA,EACC,0BAAAO,OAACN,eAAA,EAAY,aAAY,4BAA2B,GACtD;AAAA,cACA,gBAAAM,OAACT,iBAAA,EACE,4BAAkB,IAAI,CAAC,WAAW;AACjC,sBAAM,WAAW,sBAAsB,OAAO,MAAM;AACpD,sBAAM,QAAQ,sBAAsB,aAAa,QAAQ,OAAO,MAAM;AACtE,sBAAM,UAAU,IAAI,KAAK,eAAe;AACxC,wBAAQ,SAAS,QAAQ,SAAS,IAAI,OAAO,MAAM;AAEnD,uBACE,gBAAAS,OAACR,cAAA,EAA+B,OAAO,OAAO,OAAO,SAAS,GAC5D,0BAAAS,QAAC,SAAI,WAAU,sBACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,oCAAAA,QAAC,UAAK,WAAU,eAAe;AAAA,6BAAO;AAAA,sBAAK;AAAA,sBAAG,OAAO;AAAA,sBAAM;AAAA,uBAAC;AAAA,oBAC5D,gBAAAD,OAAC,UAAK,WAAU,iBAAiB,UAAAJ,iBAAe,OAAO,aAAa,QAAQ,GAAE;AAAA,oBAC7E,WAAW,KACV,gBAAAK,QAAC,UAAK,WAAU,6DAA4D;AAAA;AAAA,sBACpE;AAAA,sBAAS;AAAA,uBACjB;AAAA,qBAEJ;AAAA,kBACA,gBAAAA,QAAC,UAAK,WAAU,gCAA+B;AAAA;AAAA,oBACpCN,YAAW,iBAAiB,QAAQ;AAAA,oBAAE;AAAA,oBAAIA,YAAW,SAAS,cAAc;AAAA,qBACvF;AAAA,mBACF,KAde,OAAO,MAexB;AAAA,cAEJ,CAAC,GACH;AAAA;AAAA;AAAA,QACF;AAAA,QACA,gBAAAK,OAAC,OAAE,WAAU,8BAA6B,2DAE1C;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,oDACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,kCAAiC,6BAAe;AAAA,QAC7D,gBAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,uBAAS;AAAA,YACf,gBAAAA,OAAC,UAAK,WAAU,eACb,4BAAkB,KAAK,CAAAE,OAAKA,GAAE,WAAW,QAAQ,GAAG,MACvD;AAAA,aACF;AAAA,UACA,gBAAAD,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,qBAAO;AAAA,YACb,gBAAAC,QAAC,UAAK,WAAU,eACb;AAAA,cAAAN,YAAW,iBAAiB,QAAQ;AAAA,cAAE;AAAA,cAAIA,YAAW,eAAe,cAAc;AAAA,eACrF;AAAA,aACF;AAAA,UACA,gBAAAM,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,yBAAW;AAAA,YACjB,gBAAAA,OAAC,UAAK,WAAU,eAAe,UAAAJ,iBAAe,aAAa,SAAS,UAAU,aAAa,QAAQ,GAAE;AAAA,aACvG;AAAA,UACC,WAAW,IAAI,KACd,gBAAAK,QAAC,SAAI,WAAU,uCACb;AAAA,4BAAAA,QAAC,UAAK;AAAA;AAAA,cAAW,sBAAsB,QAAQ;AAAA,cAAE;AAAA,eAAG;AAAA,YACpD,gBAAAA,QAAC,UAAK,WAAU,eAAc;AAAA;AAAA,cAAEL,iBAAe,WAAW,GAAG,aAAa,QAAQ;AAAA,eAAE;AAAA,aACtF;AAAA,UAEF,gBAAAK,QAAC,SAAI,WAAU,gDACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,iBAAgB,oBAAM;AAAA,YACtC,gBAAAA,OAAC,UAAK,WAAU,2BAA2B,UAAAJ,iBAAe,eAAe,GAAG,aAAa,QAAQ,GAAE;AAAA,aACrG;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAK,QAAC,SACC;AAAA,wBAAAD,OAACZ,QAAA,EAAM,8BAAgB;AAAA,QACvB,gBAAAa,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD;AAAA,YAACd;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,UAAU,UAAU;AAAA,cACnC,WAAW,yEACT,WAAW,aACP,+BACA,uCACN;AAAA,cAEA,0BAAAe,QAAC,SAAI,WAAU,2BACb;AAAA,gCAAAD,OAACF,YAAA,EAAU,WAAU,yBAAwB;AAAA,gBAC7C,gBAAAE,OAAC,UAAK,WAAU,eAAc,2BAAa;AAAA,iBAC7C;AAAA;AAAA,UACF;AAAA,UACA,gBAAAA;AAAA,YAACd;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,UAAU,QAAQ;AAAA,cACjC,WAAW,yEACT,WAAW,WACP,+BACA,uCACN;AAAA,cAEA,0BAAAe,QAAC,SAAI,WAAU,2BACb;AAAA,gCAAAD,OAACH,aAAA,EAAW,WAAU,yBAAwB;AAAA,gBAC9C,gBAAAG,OAAC,UAAK,WAAU,eAAc,oBAAM;AAAA,iBACtC;AAAA;AAAA,UACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SACC;AAAA,wBAAAA,QAACb,QAAA,EAAM,SAAQ,iBAAgB;AAAA;AAAA,UAE7B,gBAAAY,OAAC,UAAK,WAAU,0CACb,qBAAW,WAAW,2BAA2B,2BACpD;AAAA,WACF;AAAA,QACA,gBAAAA;AAAA,UAACb;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO;AAAA,YACP,UAAU,CAACgB,OAAM,iBAAiBA,GAAE,OAAO,KAAK;AAAA,YAChD,aAAa,WAAW,WAAW,mBAAmB;AAAA,YACtD,WAAW,OAAO,gBAAgB,mBAAmB;AAAA;AAAA,QACvD;AAAA,QACC,OAAO,iBACN,gBAAAF,QAAC,OAAE,WAAU,qDACX;AAAA,0BAAAD,OAACD,eAAA,EAAY,WAAU,WAAU;AAAA,UAChC,OAAO;AAAA,WACV;AAAA,SAEJ;AAAA,MAGA,gBAAAE,QAAC,SACC;AAAA,wBAAAD,OAACZ,QAAA,EAAM,SAAQ,aAAY,yCAA2B;AAAA,QACtD,gBAAAY;AAAA,UAACb;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO;AAAA,YACP,UAAU,CAACgB,OAAM,aAAaA,GAAE,OAAO,KAAK;AAAA,YAC5C,aAAY;AAAA;AAAA,QACd;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SACC;AAAA,wBAAAD,OAACZ,QAAA,EAAM,SAAQ,eAAc,oCAAsB;AAAA,QACnD,gBAAAY;AAAA,UAACX;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO;AAAA,YACP,UAAU,CAACc,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,YAC9C,aAAa,GAAG,QAAQ,SAAS,WAAW,IAAI,MAAM,EAAE,2BAA2BR,YAAW,oBAAI,KAAK,GAAG,WAAW,CAAC;AAAA,YACtH,MAAM;AAAA;AAAA,QACR;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAM,QAAChB,eAAA,EAAa,WAAU,oCACtB;AAAA,sBAAAe,OAACd,UAAA,EAAO,SAAQ,WAAU,SAAS,SAAS,UAAU,SAAS,oBAE/D;AAAA,MACA,gBAAAc,OAACd,UAAA,EAAO,SAAS,cAAc,UAAU,SACtC,oBAAU,kBAAkB,mBAC/B;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AChTA,SAAgB,YAAAkB,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,OACK;AACP,SAAS,cAAAC,aAAY,kBAAAC,wBAAsB;AAC3C,SAAS,SAAAC,QAAO,cAAAC,cAAY,aAAAC,YAAW,gBAAgB;AA+F/C,SA2NM,YAAAC,YA1NJ,OAAAC,QADF,QAAAC,eAAA;AAvED,SAAS,kBAAkB;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAA2B;AACzB,QAAM,CAAC,cAAc,eAAe,IAAIlB,WAAsB,IAAI;AAClE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAuC,OAAO;AACtF,QAAM,CAAC,eAAe,gBAAgB,IAAIA,WAAgC,QAAQ;AAGlF,EAAAC,YAAU,MAAM;AACd,QAAI,MAAM,SAAS,KAAK,CAAC,cAAc;AACrC,YAAM,gBAAgB,MAAM,KAAK,CAAAkB,OAAKA,GAAE,SAAS,WAAWA,GAAE,YAAY,CAAC;AAC3E,UAAI,eAAe;AACjB,wBAAgB,aAAa;AAAA,MAC/B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,YAAY,CAAC;AAExB,QAAM,iBAAiB,CAAC,WAAmB,UAAkB;AAC3D,YAAQ,OAAO;AAAA,MACb,KAAK;AACH,eAAO,YAAY,IAAI;AAAA,MACzB,KAAK;AACH,eAAO,YAAY,KAAK;AAAA,MAC1B;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,aAAa,CAAC,WAAmB,UAAkB;AACvD,UAAM,YAAY,UAAU,YAAY,YAAY,IAAI,UAAU,SAAS,YAAY,KAAK;AAC5F,UAAM,kBAAkB,eAAe,WAAW,KAAK;AACvD,WAAO,YAAY;AAAA,EACrB;AAEA,QAAM,qBAAqB,MAAM;AAC/B,UAAM,MAAM,oBAAI,KAAK;AACrB,UAAM,OAAO,IAAI,KAAK,GAAG;AACzB,YAAQ,cAAc;AAAA,MACpB,KAAK;AACH,aAAK,SAAS,KAAK,SAAS,IAAI,CAAC;AACjC;AAAA,MACF,KAAK;AACH,aAAK,YAAY,KAAK,YAAY,IAAI,CAAC;AACvC;AAAA,MACF;AACE,aAAK,SAAS,KAAK,SAAS,IAAI,CAAC;AAAA,IACrC;AACA,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC;AAAc;AAEnB,QAAI;AACF,YAAM,UAAU,aAAa,IAAI,cAAc,aAAa;AAC5D,cAAQ;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,mBAAmB,KAAK;AAAA,IACxC;AAAA,EACF;AAEA,QAAM,YAAY,MAAM,OAAO,CAAAA,OAAKA,GAAE,SAAS,WAAWA,GAAE,YAAY,CAAC;AAEzE,SACE,gBAAAF,OAACf,UAAA,EAAO,MAAM,QAAQ,cAAc,SAClC,0BAAAgB,QAACf,iBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAe,QAACd,gBAAA,EACC;AAAA,sBAAAa,OAACZ,eAAA,EAAY,4CAAuB;AAAA,MACpC,gBAAAY,OAACX,oBAAA,EAAkB,sEAEnB;AAAA,OACF;AAAA,IAEA,gBAAAY,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,wDACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,YAAS,WAAU,2BAA0B;AAAA,QAC9C,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,OAAE,WAAU,+BAA8B,gCAAkB;AAAA,UAC7D,gBAAAC,QAAC,OAAE,WAAU,2BAA0B;AAAA;AAAA,YAA+B,aAAa;AAAA,aAAa;AAAA,WAClG;AAAA,SACF,GACF;AAAA,MAGA,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACR,QAAA,EAAM,WAAU,yBAAwB,6BAAe;AAAA,QACxD,gBAAAQ,OAAC,SAAI,WAAU,yCACZ,oBAAU,IAAI,CAAC,SACd,gBAAAA;AAAA,UAACP;AAAA,UAAA;AAAA,YAEC,WAAW,iCACT,cAAc,OAAO,KAAK,KACtB,yCACA,uBACN,IAAI,KAAK,YAAY,yBAAyB,EAAE;AAAA,YAChD,SAAS,MAAM,gBAAgB,IAAI;AAAA,YAEnC,0BAAAQ,QAAC,SAAI,WAAU,iBACZ;AAAA,mBAAK,aACJ,gBAAAD,OAAC,SAAI,WAAU,2EAA0E,qBAEzF;AAAA,cAEF,gBAAAC,QAAC,SACC;AAAA,gCAAAD,OAAC,QAAG,WAAU,qBAAqB,eAAK,MAAK;AAAA,gBAC7C,gBAAAA,OAAC,OAAE,WAAU,yBAAyB,eAAK,aAAY;AAAA,iBACzD;AAAA,cACA,gBAAAC,QAAC,SAAI,WAAU,sBACZ;AAAA,gBAAAN,iBAAe,KAAK,WAAW,KAAK;AAAA,gBACrC,gBAAAK,OAAC,UAAK,WAAU,qCAAoC,oBAAM;AAAA,iBAC5D;AAAA,cACC,KAAK,UACJ,gBAAAC,QAAC,QAAG,WAAU,qBACZ;AAAA,gCAAAA,QAAC,QAAG;AAAA;AAAA,kBAAG,KAAK,OAAO,WAAW;AAAA,kBAAE;AAAA,mBAAQ;AAAA,gBACxC,gBAAAA,QAAC,QAAG;AAAA;AAAA,kBAAG,KAAK,OAAO,SAAS;AAAA,kBAAE;AAAA,mBAAM;AAAA,gBACpC,gBAAAA,QAAC,QAAG;AAAA;AAAA,kBAAG,KAAK,OAAO,aAAa,SAAS,cAAc,KAAK,OAAO;AAAA,kBAAS;AAAA,mBAAS;AAAA,iBACvF;AAAA,cAED,cAAc,OAAO,KAAK,MACzB,gBAAAA,QAAC,SAAI,WAAU,qDACb;AAAA,gCAAAD,OAACJ,QAAA,EAAM,WAAU,WAAU;AAAA,gBAAE;AAAA,iBAE/B;AAAA,eAEJ;AAAA;AAAA,UAnCK,KAAK;AAAA,QAoCZ,CACD,GACH;AAAA,SACF;AAAA,MAGC,gBACC,gBAAAK,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACR,QAAA,EAAM,WAAU,yBAAwB,6BAAe;AAAA,QACxD,gBAAAS,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,2FACT,iBAAiB,UAAU,+BAA+B,EAC5D;AAAA,cACA,SAAS,MAAM,gBAAgB,OAAO;AAAA,cAEtC,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,SAAS,iBAAiB;AAAA,oBAC1B,UAAU,MAAM,gBAAgB,OAAO;AAAA,oBACvC,WAAU;AAAA;AAAA,gBACZ;AAAA,gBACA,gBAAAC,QAAC,SACC;AAAA,kCAAAD,OAAC,OAAE,WAAU,eAAc,qBAAO;AAAA,kBAClC,gBAAAC,QAAC,OAAE,WAAU,yBAAyB;AAAA,oBAAAN,iBAAe,aAAa,WAAW,KAAK;AAAA,oBAAE;AAAA,qBAAM;AAAA,mBAC5F;AAAA,iBACF;AAAA;AAAA,UACF;AAAA,UAEA,gBAAAM;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,2FACT,iBAAiB,YAAY,+BAA+B,EAC9D;AAAA,cACA,SAAS,MAAM,gBAAgB,SAAS;AAAA,cAExC;AAAA,gCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAK;AAAA,sBACL,SAAS,iBAAiB;AAAA,sBAC1B,UAAU,MAAM,gBAAgB,SAAS;AAAA,sBACzC,WAAU;AAAA;AAAA,kBACZ;AAAA,kBACA,gBAAAC,QAAC,SACC;AAAA,oCAAAD,OAAC,OAAE,WAAU,eAAc,uBAAS;AAAA,oBACpC,gBAAAC,QAAC,OAAE,WAAU,yBAAyB;AAAA,sBAAAN,iBAAe,eAAe,aAAa,WAAW,SAAS,GAAG,KAAK;AAAA,sBAAE;AAAA,uBAAQ;AAAA,qBACzH;AAAA,mBACF;AAAA,gBACA,gBAAAK,OAAC,SAAI,WAAU,mEAAkE,sBAEjF;AAAA;AAAA;AAAA,UACF;AAAA,UAEA,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,2FACT,iBAAiB,SAAS,+BAA+B,EAC3D;AAAA,cACA,SAAS,MAAM,gBAAgB,MAAM;AAAA,cAErC;AAAA,gCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD;AAAA,oBAAC;AAAA;AAAA,sBACC,MAAK;AAAA,sBACL,SAAS,iBAAiB;AAAA,sBAC1B,UAAU,MAAM,gBAAgB,MAAM;AAAA,sBACtC,WAAU;AAAA;AAAA,kBACZ;AAAA,kBACA,gBAAAC,QAAC,SACC;AAAA,oCAAAD,OAAC,OAAE,WAAU,eAAc,oBAAM;AAAA,oBACjC,gBAAAC,QAAC,OAAE,WAAU,yBAAyB;AAAA,sBAAAN,iBAAe,eAAe,aAAa,WAAW,MAAM,GAAG,KAAK;AAAA,sBAAE;AAAA,uBAAK;AAAA,qBACnH;AAAA,mBACF;AAAA,gBACA,gBAAAK,OAAC,SAAI,WAAU,mEAAkE,sBAEjF;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,SACF;AAAA,MAID,gBACC,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACR,QAAA,EAAM,WAAU,yBAAwB,8BAAgB;AAAA,QACzD,gBAAAS,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,qFACT,kBAAkB,WAAW,+BAA+B,EAC9D;AAAA,cACA,SAAS,MAAM,iBAAiB,QAAQ;AAAA,cAExC;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,SAAS,kBAAkB;AAAA,oBAC3B,UAAU,MAAM,iBAAiB,QAAQ;AAAA,oBACzC,WAAU;AAAA;AAAA,gBACZ;AAAA,gBACA,gBAAAC,QAACT,QAAA,EAAM,WAAU,iDACf;AAAA,kCAAAQ,OAACH,cAAA,EAAW,WAAU,WAAU;AAAA,kBAChC,gBAAAG,OAAC,UAAK,mCAAqB;AAAA,mBAC7B;AAAA;AAAA;AAAA,UACF;AAAA,UACA,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,qFACT,kBAAkB,aAAa,+BAA+B,EAChE;AAAA,cACA,SAAS,MAAM,iBAAiB,UAAU;AAAA,cAE1C;AAAA,gCAAAD;AAAA,kBAAC;AAAA;AAAA,oBACC,MAAK;AAAA,oBACL,SAAS,kBAAkB;AAAA,oBAC3B,UAAU,MAAM,iBAAiB,UAAU;AAAA,oBAC3C,WAAU;AAAA;AAAA,gBACZ;AAAA,gBACA,gBAAAC,QAACT,QAAA,EAAM,WAAU,iDACf;AAAA,kCAAAQ,OAACF,YAAA,EAAU,WAAU,WAAU;AAAA,kBAC/B,gBAAAE,OAAC,UAAK,2BAAa;AAAA,mBACrB;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,SACF;AAAA,MAID,gBACC,gBAAAA,OAACP,QAAA,EAAK,WAAU,8BACd,0BAAAQ,QAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,iBAAgB,6BAAe;AAAA,QAC7C,gBAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,4BAAc;AAAA,YACpB,gBAAAC,QAAC,UAAK,WAAU,iBACb;AAAA,cAAAN,iBAAe,eAAe,aAAa,WAAW,YAAY,GAAG,KAAK;AAAA,cAC1E,iBAAiB,aAAa;AAAA,cAC9B,iBAAiB,UAAU;AAAA,eAC9B;AAAA,aACF;AAAA,UACA,gBAAAM,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,2BAAa;AAAA,YACnB,gBAAAA,OAAC,UAAM,UAAAN,YAAW,mBAAmB,GAAG,cAAc,GAAE;AAAA,aAC1D;AAAA,UACC,WAAW,aAAa,WAAW,YAAY,IAAI,KAClD,gBAAAO,QAAC,SAAI,WAAU,mDACb;AAAA,4BAAAD,OAAC,UAAK,uBAAS;AAAA,YACf,gBAAAA,OAAC,UAAM,UAAAL,iBAAe,WAAW,aAAa,WAAW,YAAY,GAAG,KAAK,GAAE;AAAA,aACjF;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,OAEJ;AAAA,IAEA,gBAAAM,QAACX,eAAA,EACC;AAAA,sBAAAU,OAACT,UAAA,EAAO,SAAQ,WAAU,SAAS,SAAS,UAAU,SAAS,oBAE/D;AAAA,MACA,gBAAAS,OAACT,UAAA,EAAO,SAAS,cAAc,UAAU,WAAW,CAAC,cAClD,oBACC,gBAAAU,QAAAF,YAAA,EACE;AAAA,wBAAAC,OAAC,SAAI,WAAU,qFAAoF;AAAA,QAAE;AAAA,SAEvG,IAEA,gBAAAA,OAAAD,YAAA,EAAE,mCAAc,GAEpB;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;ACnVA,OAAOI,aAAW;AASlB,SAAS,cAAAC,cAAY,kBAAAC,wBAAsB;AAC3C;AAAA,EACE,SAAAC;AAAA,EACA,cAAAC;AAAA,EAEA,aAAAC;AAAA,EACA,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,QAAAC;AAAA,EACA,YAAAC;AAAA,EACA,cAAAC;AAAA,EACA,eAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,WAAAC;AAAA,EACA;AAAA,EACA,YAAAC;AAAA,EACA;AAAA,OACK;AA0MI,gBAAAC,QAMH,QAAAC,eANG;AA9IJ,SAAS,6BAA6B;AAAA,EAC3C;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV;AACF,GAAsC;AAGpC,QAAM,WAAWC,QAAM,QAAQ,MAAM;AACnC,UAAM,QAAe,CAAC;AAGtB,eAAW,QAAQ,cAAY;AAC7B,YAAM,KAAK;AAAA,QACT,UAAU;AAAA,QACV,GAAG;AAAA,QACH,WAAW,IAAI,KAAK,SAAS,SAAS;AAAA,MACxC,CAAC;AAAA,IACH,CAAC;AAGD,aAAS,QAAQ,aAAW;AAC1B,YAAM,KAAK;AAAA,QACT,UAAU;AAAA,QACV,GAAG;AAAA,QACH,MAAM,QAAQ;AAAA;AAAA,QACd,WAAW,IAAI,KAAK,QAAQ,SAAS;AAAA,MACvC,CAAC;AAAA,IACH,CAAC;AAGD,WAAO,MAAM,KAAK,CAAC,GAAG,MAAM,EAAE,UAAU,QAAQ,IAAI,EAAE,UAAU,QAAQ,CAAC;AAAA,EAC3E,GAAG,CAAC,YAAY,QAAQ,CAAC;AAEzB,QAAM,kBAAkB,CAAC,WAAmB;AAC1C,YAAQ,OAAO,YAAY,GAAG;AAAA,MAC5B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOf;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AACH,eAAOG;AAAA,MACT,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AACH,eAAOV;AAAA,MACT,KAAK;AACH,eAAOW;AAAA,MACT,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAOC;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAOF;AAAA,MACT,KAAK;AACH,eAAOD;AAAA,MACT,KAAK;AACH,eAAOL;AAAA,MACT;AACE,eAAOL;AAAA,IACX;AAAA,EACF;AAEA,QAAM,mBAAmB,CAAC,WAAmB;AAC3C,YAAQ,OAAO,YAAY,GAAG;AAAA,MAC5B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,wBAAwB,CAAC,WAAmB;AAChD,UAAM,YAA6D;AAAA,MACjE,WAAW,EAAE,SAAS,WAAW,OAAO,OAAO;AAAA,MAC/C,SAAS,EAAE,SAAS,WAAW,OAAO,UAAU;AAAA,MAChD,QAAQ,EAAE,SAAS,UAAU,OAAO,SAAS;AAAA,IAC/C;AAEA,UAAM,SAAS,UAAU,MAAM,KAAK,EAAE,SAAS,WAAW,OAAO,OAAO;AACxE,WAAO,gBAAAc,OAAC,SAAM,SAAS,OAAO,SAAU,iBAAO,OAAM;AAAA,EACvD;AAEA,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,QACC,0BAAAC,QAAC,eAAY,WAAU,mBACrB;AAAA,sBAAAD,OAAC,SAAI,WAAU,2FAA0F;AAAA,MACzG,gBAAAA,OAAC,OAAE,WAAU,sBAAqB,yCAA2B;AAAA,OAC/D,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,QACC;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,OAAC,aAAU,+DAA0C;AAAA,MACpD,YACC,gBAAAC,QAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,UAC3C;AAAA,wBAAAD,OAACN,WAAA,EAAS,WAAU,gBAAe;AAAA,QAAE;AAAA,SAEvC;AAAA,OAEJ,GACF;AAAA,IAEA,gBAAAM,OAAC,eACE,mBAAS,WAAW,IACnB,gBAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAACd,SAAA,EAAM,WAAU,wCAAuC;AAAA,MACxD,gBAAAc,OAAC,OAAE,WAAU,iBAAgB,6BAAe;AAAA,OAC9C,IAEA,gBAAAC,QAAC,SAAI,WAAU,YAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,oDAAmD;AAAA,MAElE,gBAAAA,OAAC,SAAI,WAAU,aACZ,mBAAS,IAAI,CAAC,MAAM,UAAU;AAC7B,YAAI,KAAK,aAAa,YAAY;AAChC,gBAAMG,QAAO,gBAAgB,KAAK,IAAI;AACtC,gBAAM,aAAa,iBAAiB,KAAK,IAAI;AAE7C,iBACE,gBAAAF,QAAC,SAAyC,WAAU,kBAElD;AAAA,4BAAAD,OAAC,SAAI,WAAW,wCAAwC,UAAU,qCAChE,0BAAAA,OAACG,OAAA,EAAK,WAAU,WAAU,GAC5B;AAAA,YAGA,gBAAAH,OAAC,SAAI,WAAU,4CACb,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,8BAAAA,QAAC,SAAI,WAAU,UACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,gCACb;AAAA,kCAAAD,OAAC,QAAG,WAAU,+BACX,eAAK,aACR;AAAA,kBAEA,gBAAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,SACE,KAAK,UAAU,aAAa,UAAU,gBACtC,KAAK,UAAU,aAAa,YAAY,YACxC,KAAK,UAAU,aAAa,YAAY,YACxC;AAAA,sBAGD,eAAK,MAAM,QAAQ,MAAM,GAAG,EAAE,YAAY;AAAA;AAAA,kBAC7C;AAAA,mBACF;AAAA,gBAGC,KAAK,UAAU,eACd,gBAAAC,QAAC,OAAE,WAAU,8BACX;AAAA,kCAAAD,OAACP,OAAA,EAAK,WAAU,uBAAsB;AAAA,kBAAE;AAAA,kBACnC,KAAK,SAAS,YAAY;AAAA,kBAAK;AAAA,kBAAG,KAAK,SAAS,YAAY;AAAA,kBAAM;AAAA,kBACvE,gBAAAO,OAAC,UAAK,WAAU,gDACb,eAAK,SAAS,YAAY,MAC7B;AAAA,mBACF;AAAA,gBAID,KAAK,YACJ,gBAAAC,QAAC,SAAI,WAAU,wCAEZ;AAAA,uBAAK,SAAS,YACb,gBAAAA,QAAC,SAAI;AAAA;AAAA,oBAAQ,gBAAAD,OAAC,UAAK,WAAU,eAAe,eAAK,SAAS,UAAS;AAAA,qBAAO;AAAA,kBAI3E,KAAK,SAAS,WAAW,UACxB,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,iBAAiB,UAAAf,iBAAe,KAAK,SAAS,QAAQ,KAAK,SAAS,YAAY,KAAK,GAAE;AAAA,qBAAO;AAAA,kBAI9H,KAAK,SAAS,UACb,gBAAAgB,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,0BAA0B,eAAK,SAAS,OAAO,YAAY,GAAE;AAAA,qBAAO;AAAA,kBAIpG,KAAK,SAAS,iBACb,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,cAAc,eAAK,SAAS,cAAc,YAAY,GAAE;AAAA,qBAAO;AAAA,kBAI/F,KAAK,SAAS,iBACb,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAe,gBAAAD,OAAC,UAAK,WAAU,qBAAqB,eAAK,SAAS,eAAc;AAAA,qBAAO;AAAA,kBAI7F,KAAK,SAAS,iBACb,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAW,gBAAAD,OAAC,UAAK,WAAU,qBAAqB,eAAK,SAAS,eAAc;AAAA,qBAAO;AAAA,kBAIzF,KAAK,SAAS,WACb,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAY,gBAAAA,QAAC,UAAK,WAAU,eAAe;AAAA,2BAAK,SAAS,QAAQ;AAAA,sBAAK;AAAA,sBAAGhB,iBAAe,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,YAAY,KAAK;AAAA,sBAAE;AAAA,uBAAC;AAAA,qBAAO;AAAA,kBAIrK,KAAK,SAAS,gBACb,gBAAAgB,QAAC,SAAI;AAAA;AAAA,oBAAY,gBAAAA,QAAC,UAAK,WAAU,iBAAiB;AAAA,2BAAK,SAAS,aAAa;AAAA,sBAAK;AAAA,sBAAGhB,iBAAe,KAAK,SAAS,aAAa,QAAQ,KAAK,SAAS,YAAY,KAAK;AAAA,sBAAE;AAAA,uBAAC;AAAA,qBAAO;AAAA,kBAIjL,KAAK,SAAS,iBACb,gBAAAgB,QAAC,SAAI;AAAA;AAAA,oBAAa,gBAAAD,OAAC,UAAK,WAAU,eAAe,UAAAhB,aAAW,KAAK,SAAS,eAAe,cAAc,GAAE;AAAA,qBAAO;AAAA,kBAIjH,KAAK,SAAS,mBACb,gBAAAiB,QAAC,SAAI;AAAA;AAAA,oBAAgB,gBAAAD,OAAC,UAAK,WAAU,eAAe,UAAAhB,aAAW,KAAK,SAAS,iBAAiB,cAAc,GAAE;AAAA,qBAAO;AAAA,kBAItH,KAAK,SAAS,gBACb,gBAAAiB,QAAC,SAAI;AAAA;AAAA,oBAAc,gBAAAD,OAAC,UAAK,WAAU,eAAe,UAAAhB,aAAW,KAAK,SAAS,cAAc,cAAc,GAAE;AAAA,qBAAO;AAAA,kBAIjH,KAAK,SAAS,UACb,gBAAAiB,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,wBAAwB,eAAK,SAAS,QAAO;AAAA,qBAAO;AAAA,kBAIpF,KAAK,SAAS,UACb,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,yDAAyD,eAAK,SAAS,OAAO,QAAQ,MAAM,GAAG,EAAE,YAAY,GAAE;AAAA,qBAAO;AAAA,mBAEzJ;AAAA,iBAEJ;AAAA,cAEA,gBAAAC,QAAC,SAAI,WAAU,yCACZ;AAAA,gBAAAjB,aAAW,KAAK,WAAW,cAAc;AAAA,gBAC1C,gBAAAgB,OAAC,QAAG;AAAA,gBACHhB,aAAW,KAAK,WAAW,OAAO;AAAA,iBACrC;AAAA,eACF,GACF;AAAA,eAnHQ,YAAY,KAAK,EAAE,IAAI,KAAK,EAoHtC;AAAA,QAEJ,OAAO;AAEL,iBACE,gBAAAiB,QAAC,SAAwC,WAAU,kBAEjD;AAAA,4BAAAD,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACR,cAAA,EAAW,WAAU,WAAU,GAClC;AAAA,YAGA,gBAAAQ,OAAC,SAAI,WAAU,4CACb,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,8BAAAA,QAAC,SAAI,WAAU,UACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,gCACb;AAAA,kCAAAD,OAAC,QAAG,WAAU,+BAA8B,wCAE5C;AAAA,kBACC,sBAAsB,KAAK,MAAM;AAAA,mBACpC;AAAA,gBAEA,gBAAAC,QAAC,SAAI,WAAU,mCACb;AAAA,kCAAAA,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,iBAAiB,UAAAf,iBAAe,KAAK,QAAQ,KAAK,QAAQ,GAAE;AAAA,qBAAO;AAAA,kBACjG,KAAK,UAAU,gBAAAgB,QAAC,SAAI;AAAA;AAAA,oBAAU,gBAAAD,OAAC,UAAK,WAAU,cAAc,eAAK,OAAO,YAAY,GAAE;AAAA,qBAAO;AAAA,kBAC7F,KAAK,iBAAiB,gBAAAC,QAAC,SAAI;AAAA;AAAA,oBAAe,gBAAAD,OAAC,UAAK,WAAU,qBAAqB,eAAK,eAAc;AAAA,qBAAO;AAAA,kBACzG,KAAK,eACJ,gBAAAA,OAAC,SAAI,WAAU,sBAAsB,eAAK,aAAY;AAAA,mBAE1D;AAAA,iBACF;AAAA,cAEA,gBAAAC,QAAC,SAAI,WAAU,yCACZ;AAAA,gBAAAjB,aAAW,KAAK,WAAW,cAAc;AAAA,gBAC1C,gBAAAgB,OAAC,QAAG;AAAA,gBACHhB,aAAW,KAAK,WAAW,OAAO;AAAA,iBACrC;AAAA,eACF,GACF;AAAA,eAjCQ,WAAW,KAAK,EAAE,IAAI,KAAK,EAkCrC;AAAA,QAEJ;AAAA,MACF,CAAC,GACH;AAAA,OACF,GAEJ;AAAA,KACF;AAEJ;;;ACzbA,SAAgB,YAAAoB,YAAU,aAAAC,mBAAiB;AAE3C,SAAS,wBAAwB;AA+C3B,gBAAAC,cAAA;AAxCC,SAAS,0BAA0B;AAAA,EACxC;AAAA,EACA;AACF,GAAmC;AACjC,QAAM,CAAC,YAAY,aAAa,IAAIC,WAAgB,CAAC,CAAC;AACtD,QAAM,CAAC,UAAU,WAAW,IAAIA,WAAgB,CAAC,CAAC;AAClD,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAS,KAAK;AAE5C,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC;AAAgB;AAErB,eAAW,IAAI;AACf,QAAI;AACF,YAAM,CAAC,oBAAoB,gBAAgB,IAAI,MAAM,QAAQ,IAAI;AAAA,QAC/D,iBAAiB,cAAc,gBAAgB,EAAE;AAAA,QACjD,iBAAiB,YAAY,gBAAgB,EAAE;AAAA,MACjD,CAAC;AAED,UAAI,mBAAmB,WAAW,mBAAmB,MAAM;AACzD,sBAAc,mBAAmB,IAAI;AAAA,MACvC;AAEA,UAAI,iBAAiB,WAAW,iBAAiB,MAAM;AACrD,oBAAY,iBAAiB,IAAI;AAAA,MACnC;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,wCAAwC,KAAK;AAAA,IAC7D,UAAE;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF;AAEA,EAAAC,YAAU,MAAM;AACd,QAAI,gBAAgB;AAClB,mBAAa;AAAA,IACf;AAAA,EACF,GAAG,CAAC,cAAc,CAAC;AAEnB,MAAI,CAAC,gBAAgB;AACnB,WACE,gBAAAF,OAAC,SAAI,WAAU,kCAAiC,mCAEhD;AAAA,EAEJ;AAEA,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU,MAAM;AACd,gBAAQ,IAAI,6BAA6B;AAAA,MAC3C;AAAA;AAAA,EACF;AAEJ;;;AjBzCA;AAAA,EACE,cAAAG;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,KAAAC;AAAA,EACA;AAAA,OACK;AACP,SAAmC,0BAA0B;AAuTnD,SACE,OAAAC,QADF,QAAAC,eAAA;AArTV,IAAM,oBAAoB;AAAA,EACxB;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,UAAU;AAAA,EACZ;AACF;AAGA,IAAM,4BAA4B,MAAM,kBAAkB,OAAO,cAAY,SAAS,QAAQ;AAC9F,IAAMC,yBAAwB,CAAC,eAAuB;AACpD,QAAM,WAAW,kBAAkB,KAAK,OAAK,EAAE,OAAO,UAAU;AAChE,SAAO,UAAU,sBAAsB;AACzC;AACA,IAAMC,4BAA2B,CAAC,WAAmB,YAAoB,WAAmB,MAAM;AAChG,QAAM,WAAW,kBAAkB,KAAK,OAAK,EAAE,OAAO,UAAU;AAChE,MAAI,CAAC;AAAU,WAAO,YAAY;AAElC,QAAM,WAAW,SAAS,qBAAqB;AAC/C,QAAM,kBAAkB,aAAa,IAAI;AACzC,SAAO,kBAAkB;AAC3B;AACA,IAAM,wBAAwB,CAAC,eAAuB;AACpD,QAAM,WAAW,kBAAkB,KAAK,OAAK,EAAE,OAAO,UAAU;AAChE,MAAI,CAAC;AAAU,WAAO;AAEtB,QAAM,WAAW,SAAS,qBAAqB,IAC3C,KAAK,SAAS,kBAAkB,gBAChC;AAEJ,SAAO,GAAG,SAAS,IAAI,GAAG,QAAQ;AACpC;AA2CO,SAAS,uBAAuB;AAAA,EACrC;AAAA,EACA,gBAAgB,CAAC;AAAA,EACjB,QAAQ,CAAC;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV;AACF,GAAgC;AAE9B,QAAM,sBAAsB,SAAS,gBAAgB,cAAc,CAAC;AAGpE,UAAQ,IAAI,2CAAoC;AAAA,IAC9C,YAAY,SAAS;AAAA,IACrB,cAAc,SAAS;AAAA,IACvB,cAAc;AAAA,IACd,oBAAoB,qBAAqB;AAAA,EAC3C,CAAC;AAGD,QAAM,qBAAqB,oBAAoB,OAAO,YAAY;AAClE,QAAM,iBAAiB,uBAAuB,WAAW,uBAAuB;AAChF,QAAM,iBAAiB,uBAAuB,YAAY,uBAAuB,eAAe,uBAAuB;AACvH,QAAM,gBAAgB,uBAAuB;AAC7C,QAAM,qBAAqB,uBAAuB;AAClD,QAAM,WAAW,uBAAuB;AAGxC,QAAM,cAAc,oBAAoB,MAAM,MAAM,YAAY,MAAM,WAClD,oBAAoB,MAAM,cAAc;AAE5D,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAC9D,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAC9D,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAC9D,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAC9D,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,EAAE;AACnD,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAwC,eAAe;AAC3F,QAAM,CAAC,eAAe,gBAAgB,IAAIA,WAAS,EAAE;AACrD,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AACtD,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,KAAK;AAG1D,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAiB,EAAE;AAC/D,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,EAAE;AACnD,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,IAAI;AACzD,QAAM,CAAC,uBAAuB,wBAAwB,IAAIA,WAAiB,OAAO;AAGlF,QAAM,yBAAyB,MAAM;AACnC,wBAAoB,IAAI;AACxB,sBAAkB,EAAE;AACpB,oBAAgB,EAAE;AAClB,6BAAyB,OAAO;AAChC,sBAAkB,IAAI;AAAA,EACxB;AAGA,EAAAC,YAAU,MAAM;AACd,QAAI,oBAAoB,CAAC,uBAAuB;AAC9C,+BAAyB,OAAO;AAAA,IAClC;AAAA,EACF,GAAG,CAAC,kBAAkB,qBAAqB,CAAC;AAE5C,QAAM,cAAc,CAAC,OAAe,aAAqB;AACvD,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAEA,QAAMC,eAAa,CAACC,UAAwB;AAC1C,WAAO,IAAI,KAAKA,KAAI,EAAE,mBAAmB,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAGA,QAAM,mBAAmB,0BAA0B;AAEnD,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,YAAQ,OAAO,YAAY,GAAG;AAAA,MAC5B,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAS,eAAO;AAAA,MACrB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAY,eAAO;AAAA,MACxB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAGA,QAAM,gBAAgB,OAAO,gBAAqB;AAChD,QAAI,CAAC,uBAAuB,CAAC;AAAU;AAEvC,QAAI;AACF,wBAAkB,IAAI;AAGtB,YAAM,SAAS;AAAA,QACb,cAAc;AAAA,QACd,UAAU;AAAA,QACV,iBAAiB;AAAA,QACjB,UAAU;AAAA,QACV,YAAY,oBAAoB;AAAA,QAChC;AAAA;AAAA,MACF,CAAQ;AAER,0BAAoB,KAAK;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AACpD,YAAM;AAAA,IACR,UAAE;AACA,wBAAkB,KAAK;AAAA,IACzB;AAAA,EACF;AAEA,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC,uBAAuB,CAAC,aAAa,KAAK;AAAG;AAElD,oBAAgB,IAAI;AACpB,QAAI;AACF,YAAM,WAAW,qBAAqB,aAAa,KAAK,GAAG,UAAU;AACrE,0BAAoB,KAAK;AACzB,sBAAgB,EAAE;AAClB,oBAAc,eAAe;AAAA,IAC/B,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AAAA,IACtD,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,mBAAmB,YAAY;AACnC,QAAI,CAAC,kBAAkB,CAAC;AAAuB;AAE/C,oBAAgB,IAAI;AACpB,QAAI;AACF,YAAM,eAAe,MAAM,KAAK,CAAAC,OAAKA,GAAE,GAAG,SAAS,MAAM,cAAc;AACvE,YAAM,WAAWP,uBAAsB,qBAAqB;AAE5D,YAAM,iBAAiB;AAAA,QACrB,QAAQ,OAAO,cAAc;AAAA,QAC7B,QAAQ,aAAa,KAAK,KAAK;AAAA,QAC/B;AAAA,QACA,iBAAiB;AAAA,QACjB,UAAU;AAAA;AAAA,QACV;AAAA,QACA,YAAY,eAAeC,0BAAyB,aAAa,WAAW,uBAAuB,CAAC,IAAI;AAAA,MAC1G;AAEA,YAAM,eAAe,cAAc;AACnC,0BAAoB,KAAK;AAEzB,wBAAkB,EAAE;AACpB,sBAAgB,EAAE;AAClB,wBAAkB,IAAI;AACtB,+BAAyB,OAAO;AAAA,IAClC,SAAS,OAAO;AACd,cAAQ,MAAM,wBAAwB,KAAK;AAAA,IAC7C,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAGA,QAAM,gBAAgB,YAAY;AAChC,QAAI,CAAC,uBAAuB,CAAC,cAAc,KAAK;AAAG;AAEnD,oBAAgB,IAAI;AACpB,QAAI;AACF,YAAM,YAAY,qBAAqB,cAAc,KAAK,CAAC;AAC3D,2BAAqB,KAAK;AAC1B,uBAAiB,EAAE;AAAA,IACrB,SAAS,OAAO;AACd,cAAQ,MAAM,kCAAkC,KAAK;AAAA,IACvD,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,mBAAmB,YAAY;AACnC,QAAI,CAAC;AAAqB;AAE1B,oBAAgB,IAAI;AACpB,QAAI;AACF,YAAM,eAAe,mBAAmB;AACxC,0BAAoB,KAAK;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,oCAAoC,KAAK;AAAA,IACzD,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,MAAI,SAAS;AACX,WACE,gBAAAF,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,2BACnB;AAAA,wBAAAD,OAACP,cAAA,EAAW,WAAU,WAAU;AAAA,QAAE;AAAA,SAEpC,GACF;AAAA,MACA,gBAAAO,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,iCAAgC;AAAA,QAC/C,gBAAAA,OAAC,SAAI,WAAU,iCAAgC;AAAA,QAC/C,gBAAAA,OAAC,SAAI,WAAU,iCAAgC;AAAA,SACjD,GACF;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,QAAC,aAAU,WAAU,2BACnB;AAAA,0BAAAD,OAACP,cAAA,EAAW,WAAU,WAAU;AAAA,UAAE;AAAA,WAEpC;AAAA,QAGC,wBAAwB,oBAAoB,WAAW,oBAAoB,eAC1E,gBAAAQ;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,qBAAqB,IAAI;AAAA,YACxC,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAAC,WAAQ,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAEjC;AAAA,SAEJ,GACF;AAAA,MACA,gBAAAA,OAAC,eACE,gCACC,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,wBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,QAAG,WAAU,yBACX,+BAAqB,MAAM,QAAQ,oBACtC;AAAA,YACA,gBAAAA,OAAC,OAAE,WAAU,yBACV,gCACG,YAAY,oBAAoB,QAAQ,oBAAoB,QAAQ,IAAI,WACxE,wBAEN;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAI,WAAU,iCAEb,0BAAAA,OAAC,SAAI,WAAW,gDACd,qBAAqB,WAAW,WAAW,gCAC3C,qBAAqB,WAAW,UAAU,8BAC1C,qBAAqB,WAAW,WAAW,kCAC3C,qBAAqB,WAAW,cAAc,4BAC9C,qBAAqB,WAAW,YAAY,8BAC5C,2BACF,IACG,+BAAqB,UAAU,WAClC,GACF;AAAA,WACF;AAAA,QAGC,uBACC,gBAAAC,QAAC,SAAI,WAAU,8CACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,iBAAgB,qBAAO;AAAA,YACvC,gBAAAC,QAAC,UAAK,WAAU,eACb;AAAA,iCAAmB,oBAAoB,kBAAkB;AAAA,cAAE;AAAA,cAAI,mBAAmB,oBAAoB,gBAAgB;AAAA,eACzH;AAAA,aACF;AAAA,UAEA,gBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,iBAAgB,+BAAiB;AAAA,YACjD,gBAAAA,OAAC,UAAK,WAAU,0BACb,8BAAoB,YAAY,SACnC;AAAA,aACF;AAAA,UAEE,oBAA4B,oBAAoB,kBAAkB,UAClE,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,iBACZ,8BAA4B,WAAW,UAAU,mBAAmB,cACxE;AAAA,YACA,gBAAAC,QAAC,UAAK,WAAW,eACd,oBAA4B,oBAAoB,iBAAiB,IAC9D,oBACA,eACN,IACI;AAAA,kCAA4B,oBAAoB;AAAA,cAAc;AAAA,eAClE;AAAA,aACF;AAAA,WAEJ;AAAA,SAIA,oBAAoB,WAAW,oBAAoB,eACnD,gBAAAA,QAAC,SAAI,WAAU,0CAEZ;AAAA,yBACC,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS;AAAA,cACT,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACL,aAAA,EAAW,WAAU,WAAU;AAAA,gBAAE;AAAA;AAAA;AAAA,UAEpC;AAAA,UAID,CAAC,eACA,gBAAAM;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS;AAAA,cACT,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACL,aAAA,EAAW,WAAU,WAAU;AAAA,gBAAE;AAAA;AAAA;AAAA,UAEpC;AAAA,UAIH,uBAAuB,kBAAkB,CAAC,eACzC,gBAAAM;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,oBAAoB,IAAI;AAAA,cACvC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACF,OAAA,EAAK,WAAU,WAAU;AAAA,gBAAE;AAAA;AAAA;AAAA,UAE9B;AAAA,UAID,uBAAuB,sBACtB,gBAAAG;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,qBAAqB,IAAI;AAAA,cACxC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACJ,QAAA,EAAM,WAAU,WAAU;AAAA,gBAAE;AAAA;AAAA;AAAA,UAE/B;AAAA,UAID,uBAAuB,YACtB,gBAAAK;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,oBAAoB,IAAI;AAAA,cACvC,UAAU;AAAA,cACV,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACH,OAAA,EAAK,WAAU,WAAU;AAAA,gBAAE;AAAA;AAAA;AAAA,UAE9B;AAAA,UAID,wBAAwB,kBAAkB,mBACzC,gBAAAI;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,oBAAoB,IAAI;AAAA,cACvC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACD,KAAA,EAAE,WAAU,WAAU;AAAA,gBACtB,gBAAgB,cAAc;AAAA;AAAA;AAAA,UACjC;AAAA,WAEF;AAAA,SAEJ,IAEA,gBAAAE,QAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,OAACP,cAAA,EAAW,WAAU,wCAAuC;AAAA,QAC7D,gBAAAO,OAAC,QAAG,WAAU,0CAAyC,6BAAe;AAAA,QACtE,gBAAAA,OAAC,OAAE,WAAU,sBAAqB,gEAAkD;AAAA,SAElF,oBAAoB,WAAW,oBAAoB,eACnD,gBAAAC,QAAC,SAAI,WAAU,oDACb;AAAA,0BAAAA,QAAC,UAAO,SAAS,wBACf;AAAA,4BAAAD,OAACP,cAAA,EAAW,WAAU,gBAAe;AAAA,YAAE;AAAA,aAEzC;AAAA,UAGA,gBAAAQ;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS;AAAA,cACT,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACL,aAAA,EAAW,WAAU,WAAU;AAAA,gBAAE;AAAA;AAAA;AAAA,UAEpC;AAAA,WACF;AAAA,SAEJ,GAEJ;AAAA,OACF;AAAA,IAIC,cAAc,SAAS,KACtB,gBAAAM,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,2BACnB;AAAA,wBAAAD,OAACN,SAAA,EAAM,WAAU,WAAU;AAAA,QAAE;AAAA,SAE/B,GACF;AAAA,MACA,gBAAAM,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,wBAAc,MAAM,CAAC,EAAE,IAAI,CAAC,iBAC3B,gBAAAC,QAAC,SAA0B,WAAU,2DACnC;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,OAAE,WAAU,eAAgB,uBAAqB,YAAY,gBAAe;AAAA,UAC7E,gBAAAC,QAAC,OAAE,WAAU,yBACV;AAAA,YAAAK,aAAW,aAAa,kBAAkB;AAAA,YAAE;AAAA,YAAI,aAAa,mBAAmBA,aAAW,aAAa,gBAAgB,IAAI;AAAA,aAC/H;AAAA,UACE,aAAqB,gBACrB,gBAAAL,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,YAC9B,aAAqB;AAAA,aACjC;AAAA,WAEJ;AAAA,QACA,gBAAAA,QAAC,SAAI,WAAU,cACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,eACV,sBAAY,aAAa,QAAS,aAAqB,YAAY,KAAK,GAC3E;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,QAAQQ,iBAAe,aAAa,MAAM;AAAA,cAC1C,MAAK;AAAA;AAAA,UACP;AAAA,WACF;AAAA,WApBQ,aAAa,EAqBvB,CACD,GACH,GACF;AAAA,OACF;AAAA,IAKD,uBAAuB,CAAC,eACvB,gBAAAR;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR,SAAS,MAAM,oBAAoB,KAAK;AAAA,QACxC,cAAc;AAAA,UACZ,IAAI,oBAAoB;AAAA,UACxB,cAAc,SAAS;AAAA,UACvB,UAAU,oBAAoB,MAAM,QAAQ;AAAA,UAC5C,QAAQ,oBAAoB,MAAM,aAAa,oBAAoB,UAAU;AAAA,UAC7E,UAAU,oBAAoB,YAAY;AAAA,UAC1C,kBAAkB,oBAAoB,mBAClC,IAAI,KAAK,oBAAoB,gBAAgB,IAC7C,oBAAI,KAAK;AAAA,QACf;AAAA,QACA,SAAS;AAAA,QACT,SAAS;AAAA;AAAA,IACX;AAAA,IAIF,gBAAAA,OAAC,UAAO,MAAM,kBAAkB,cAAc,qBAC5C,0BAAAC,QAAC,iBAAc,WAAU,0CACvB;AAAA,sBAAAA,QAAC,gBACC;AAAA,wBAAAA,QAAC,eAAY,WAAU,2BACrB;AAAA,0BAAAD,OAACL,aAAA,EAAW,WAAU,yBAAwB;AAAA,UAAE;AAAA,WAElD;AAAA,QACA,gBAAAM,QAAC,qBAAkB;AAAA;AAAA,UACiB,SAAS;AAAA,WAC7C;AAAA,SACF;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,aAEZ;AAAA,6BAAqB,QACpB,gBAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,8BAA6B,0BAAY;AAAA,UACtD,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,OAAE,WAAU,yBAAyB,8BAAoB,KAAK,MAAK;AAAA,YACpE,gBAAAC,QAAC,OAAE,WAAU,yBAAyB;AAAA,0BAAY,oBAAoB,KAAK,WAAW,oBAAoB,KAAK,QAAQ;AAAA,cAAE;AAAA,eAAM;AAAA,aACjI;AAAA,WACF;AAAA,QAIF,gBAAAA,QAAC,SACC;AAAA,0BAAAD,OAACU,QAAA,EAAM,SAAQ,cAAa,wBAAU;AAAA,UACtC,gBAAAT,QAAC,UAAO,OAAO,gBAAgB,eAAe,mBAC5C;AAAA,4BAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,aAAY,oBAAmB,GAC9C;AAAA,YACA,gBAAAA,OAAC,iBACE,gBAAM,IAAI,CAAC,SACV,gBAAAC,QAAC,cAAyB,OAAO,KAAK,GAAG,SAAS,GAC/C;AAAA,mBAAK;AAAA,cAAK;AAAA,cAAK,KAAK;AAAA,cAAU;AAAA,iBADhB,KAAK,EAEtB,CACD,GACH;AAAA,aACF;AAAA,WACF;AAAA,QAGA,gBAAAA,QAAC,SACC;AAAA,0BAAAD,OAACU,QAAA,EAAM,SAAQ,yBAAwB,6BAAe;AAAA,UACtD,gBAAAT,QAAC,UAAO,OAAO,uBAAuB,eAAe,0BACnD;AAAA,4BAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,GACf;AAAA,YACA,gBAAAA,OAAC,iBACE,2BAAiB,IAAI,CAAC,aACrB,gBAAAA,OAAC,cAA6B,OAAO,SAAS,IAC3C,gCAAsB,SAAS,EAAE,KADnB,SAAS,EAE1B,CACD,GACH;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,OAAE,WAAU,8BAA6B,0DAE1C;AAAA,WACF;AAAA,QAGC,kBAAkB,yBACjB,gBAAAC,QAAC,SAAI,WAAU,oDACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,kCAAiC,6BAAe;AAAA,UAC7D,gBAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,uBAAS;AAAA,cACf,gBAAAA,OAAC,UAAK,WAAU,eACb,gBAAM,KAAK,CAAAS,OAAKA,GAAE,GAAG,SAAS,MAAM,cAAc,GAAG,MACxD;AAAA,eACF;AAAA,YACA,gBAAAR,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAAC,UAAK,sBAAQ;AAAA,cACd,gBAAAA,OAAC,UAAK,WAAU,eAAe,gCAAsB,qBAAqB,GAAE;AAAA,eAC9E;AAAA,YACCE,uBAAsB,qBAAqB,IAAI,KAC9C,gBAAAD,QAAC,SAAI,WAAU,uCACb;AAAA,8BAAAD,OAAC,UAAK,uBAAS;AAAA,cACf,gBAAAC,QAAC,UAAK,WAAU,eAAe;AAAA,gBAAAC,uBAAsB,qBAAqB;AAAA,gBAAE;AAAA,iBAAK;AAAA,eACnF;AAAA,YAEF,gBAAAD,QAAC,SAAI,WAAU,gDACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,iBAAgB,oBAAM;AAAA,cACtC,gBAAAC,QAAC,UAAK,WAAU,2BACZ;AAAA,uBAAM;AACN,wBAAM,eAAe,MAAM,KAAK,CAAAQ,OAAKA,GAAE,GAAG,SAAS,MAAM,cAAc;AACvE,sBAAI,CAAC;AAAc,2BAAO;AAC1B,wBAAM,WAAWP,uBAAsB,qBAAqB;AAC5D,wBAAM,kBAAkB,aAAa,aAAa,IAAI,WAAW;AACjE,yBAAO,YAAY,iBAAiB,aAAa,QAAQ;AAAA,gBAC3D,GAAG;AAAA,gBAAE;AAAA,gBACH;AAAA,iBACJ;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,QAIF,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACU,QAAA,EAAM,SAAQ,gBAAe,0CAA4B;AAAA,UAC1D,gBAAAV;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO;AAAA,cACP,UAAU,CAACW,OAAM,gBAAgBA,GAAE,OAAO,KAAK;AAAA,cAC/C,aAAY;AAAA,cACZ,MAAM;AAAA;AAAA,UACR;AAAA,WACF;AAAA,QAGA,gBAAAV,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,IAAG;AAAA,cACH,SAAS;AAAA,cACT,UAAU,CAACW,OAAM,kBAAkBA,GAAE,OAAO,OAAO;AAAA,cACnD,WAAU;AAAA;AAAA,UACZ;AAAA,UACA,gBAAAX,OAACU,QAAA,EAAM,SAAQ,kBAAiB,WAAU,WAAU,iDAEpD;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAT,QAAC,gBAAa,WAAU,iBACtB;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,oBAAoB,KAAK;AAAA,YACxC,UAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAS;AAAA,YACT,UAAU,CAAC,kBAAkB,CAAC,yBAAyB;AAAA,YAEtD,yBAAe,gBAAgB;AAAA;AAAA,QAClC;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAIA,gBAAAA,OAAC,UAAO,MAAM,kBAAkB,cAAc,qBAC5C,0BAAAC,QAAC,iBAAc,WAAU,uDACvB;AAAA,sBAAAA,QAAC,gBACC;AAAA,wBAAAA,QAAC,eAAY,WAAU,2BACrB;AAAA,0BAAAD,OAACD,KAAA,EAAE,WAAU,wBAAuB;AAAA,UAAE;AAAA,WAExC;AAAA,QACA,gBAAAE,QAAC,qBAAkB;AAAA;AAAA,UACwB,SAAS;AAAA,UAAK;AAAA,WACzD;AAAA,SACF;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kDACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACD,KAAA,EAAE,WAAU,wBAAuB;AAAA,UACpC,gBAAAC,OAAC,OAAE,WAAU,oCAAmC,oEAEhD;AAAA,WACF,GACF;AAAA,QAEA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAACU,QAAA,EAAM,SAAQ,cAAa,+BAAiB;AAAA,UAC7C,gBAAAT,QAAC,UAAO,OAAO,YAAY,eAAe,CAAC,UAAyC,cAAc,KAAK,GACrG;AAAA,4BAAAD,OAAC,iBACC,0BAAAA,OAAC,eAAY,GACf;AAAA,YACA,gBAAAC,QAAC,iBACC;AAAA,8BAAAD,OAAC,cAAW,OAAM,iBAAgB,iDAAmC;AAAA,cACrE,gBAAAA,OAAC,cAAW,OAAM,aAAY,oCAAsB;AAAA,eACtD;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,OAAE,WAAU,8BACV,yBAAe,kBACZ,4DACA,qCAEN;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAACU,QAAA,EAAM,SAAQ,gBAAe,qCAAuB;AAAA,UACrD,gBAAAV;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO;AAAA,cACP,UAAU,CAACW,OAAM,gBAAgBA,GAAE,OAAO,KAAK;AAAA,cAC/C,aAAY;AAAA,cACZ,MAAM;AAAA;AAAA,UACR;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAV,QAAC,gBACC;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,oBAAoB,KAAK;AAAA,YACxC,UAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU,CAAC,aAAa,KAAK,KAAK;AAAA,YAEjC,yBAAe,iBAAiB;AAAA;AAAA,QACnC;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,UAAO,MAAM,mBAAmB,cAAc,sBAC7C,0BAAAC,QAAC,iBAAc,WAAU,uDACvB;AAAA,sBAAAA,QAAC,gBACC;AAAA,wBAAAA,QAAC,eAAY,WAAU,2BACrB;AAAA,0BAAAD,OAACJ,QAAA,EAAM,WAAU,2BAA0B;AAAA,UAAE;AAAA,WAE/C;AAAA,QACA,gBAAAK,QAAC,qBAAkB;AAAA;AAAA,UACW,SAAS;AAAA,UAAK;AAAA,WAC5C;AAAA,SACF;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,wDACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACN,SAAA,EAAM,WAAU,2BAA0B;AAAA,UAC3C,gBAAAM,OAAC,OAAE,WAAU,uCAAsC,kFAEnD;AAAA,WACF,GACF;AAAA,QAEA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAACU,QAAA,EAAM,SAAQ,iBAAgB,gCAAkB;AAAA,UACjD,gBAAAV;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAO;AAAA,cACP,UAAU,CAACW,OAAM,iBAAiBA,GAAE,OAAO,KAAK;AAAA,cAChD,aAAY;AAAA,cACZ,MAAM;AAAA;AAAA,UACR;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAV,QAAC,gBACC;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,qBAAqB,KAAK;AAAA,YACzC,UAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU,CAAC,cAAc,KAAK,KAAK;AAAA,YAElC,yBAAe,eAAe;AAAA;AAAA,QACjC;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,UAAO,MAAM,kBAAkB,cAAc,qBAC5C,0BAAAC,QAAC,iBAAc,WAAU,uDACvB;AAAA,sBAAAA,QAAC,gBACC;AAAA,wBAAAA,QAAC,eAAY,WAAU,2BACrB;AAAA,0BAAAD,OAACH,OAAA,EAAK,WAAU,0BAAyB;AAAA,UAAE;AAAA,WAE7C;AAAA,QACA,gBAAAG,OAAC,qBAAkB,gEAEnB;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,sDACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,qCAAoC,mCAAqB;AAAA,UACvE,gBAAAC,QAAC,QAAG,WAAU,oCACZ;AAAA,4BAAAD,OAAC,QAAG,sEAAmD;AAAA,YACvD,gBAAAA,OAAC,QAAG,gEAA6C;AAAA,YACjD,gBAAAA,OAAC,QAAG,uEAAoD;AAAA,YACxD,gBAAAA,OAAC,QAAG,kDAA+B;AAAA,aACrC;AAAA,WACF;AAAA,QAEC,uBACC,gBAAAC,QAAC,SAAI,WAAU,sDACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,iBAAgB,mBAAK;AAAA,YACrC,gBAAAA,OAAC,UAAK,WAAU,eAAe,8BAAoB,MAAM,MAAK;AAAA,aAChE;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,iBAAgB,qBAAO;AAAA,YACvC,gBAAAC,QAAC,UAAK,WAAU,eAAe;AAAA,0BAAY,oBAAoB,QAAQ,oBAAoB,QAAQ;AAAA,cAAE;AAAA,eAAM;AAAA,aAC7G;AAAA,WACF;AAAA,SAEJ;AAAA,MAEA,gBAAAA,QAAC,gBAAa,WAAU,iBACtB;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,oBAAoB,KAAK;AAAA,YACxC,UAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YACV,WAAU;AAAA,YAET,yBAAe,gBAAgB;AAAA;AAAA,QAClC;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,UAAO,MAAM,mBAAmB,cAAc,sBAC7C,0BAAAC,QAAC,iBAAc,WAAU,0CACvB;AAAA,sBAAAA,QAAC,gBACC;AAAA,wBAAAA,QAAC,eAAY,WAAU,2BACrB;AAAA,0BAAAD,OAAC,WAAQ,WAAU,yBAAwB;AAAA,UAAE;AAAA,WAE/C;AAAA,QACA,gBAAAA,OAAC,qBAAkB,8EAEnB;AAAA,SACF;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,QACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC,gBAAgB,qBAAqB;AAAA,UACrC,YAAY,SAAS;AAAA;AAAA,MACvB,GACF;AAAA,MAEA,gBAAAA,OAAC,gBACC,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,MAAM,qBAAqB,KAAK;AAAA,UAC1C;AAAA;AAAA,MAED,GACF;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;AL34BM,SACE,OAAAY,QADF,QAAAC,eAAA;AAhCC,SAAS,UAAU;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAmB;AAGjB,UAAQ,IAAI,+CAAwC;AAAA,IAClD,OAAO,KAAK;AAAA,IACZ,aAAa,KAAK;AAAA,IAClB,YAAY,KAAK;AAAA,IACjB,gBAAgB,KAAK,WAAW;AAAA,IAChC,sBAAsB,KAAK,QAAQ;AAAA,IACnC,qBAAqB,oBAAoB,KAAK,KAAK,UAAU,KAAK,QAAQ,CAAC;AAAA,EAC7E,CAAC;AAGD,QAAM,0BAA0BC,QAAM,YAAY,iBAAiB,CAAC,eAAe,CAAC;AACpF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,yBAAyBA,QAAM,YAAY,mBAAmB,MAAM;AAAA,EAAC,IAAI,CAAC,cAAc,CAAC;AAC/F,QAAM,2BAA2BA,QAAM,YAAY,kBAAkB,CAAC,gBAAgB,CAAC;AACvF,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,QAAM,YAAY,WAAW,MAAM;AAAA,EAAC,IAAI,CAAC,MAAM,CAAC;AAEvE,SACE,gBAAAD,QAAC,SAAI,WAAU,wBAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD,OAAC,8BAAmB,OAAO,KAAK,OAAO;AAAA,MAGvC,gBAAAA,OAAC,QAAK,WAAU,2BACd,0BAAAA,OAAC,eAAY,WAAU,aACrB,0BAAAA,OAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,UAChB,gBAAgB;AAAA;AAAA,MAClB,GACF,GACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,uBACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,WAAW,KAAK;AAAA,QAChB,kBAAkB;AAAA,QAClB,QAAQ,QAAQ,UAAU;AAAA,QAC1B,WAAW,QAAQ,aAAa;AAAA,QAChC,QAAQ;AAAA;AAAA,IACV,GACF;AAAA,IAGC,KAAK,UAAU,SAAS,KAAK,KAAK,QAAQ,KAAK,SAC9C,gBAAAA,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,aAAa,KAAK,eAAe,KAAK,QAAQ;AAAA,QAC9C,YAAY,KAAK,cAAc;AAAA,QAC/B,OAAO,KAAK,SAAS,KAAK,UAAU;AAAA,QACpC,OAAO,KAAK,SAAS;AAAA,QACrB,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ;AAEA,IAAO,oBAAQ;;;AuBhIf,SAAS,aAAAG,kBAAiB;;;ACD1B,SAAgB,YAAAC,YAAU,aAAAC,mBAAiB;AAiB3C;AAAA,EAKE,SAAAC;AAAA,EAEA,WAAAC;AAAA,EACA,eAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,OACK;AA0FD,SA8BF,YAAAC,YA7BI,OAAAC,QADF,QAAAC,eAAA;AAlEC,SAAS,4BAA4B;AAAA,EAC1C;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAqC;AACnC,QAAM,CAAC,YAAY,aAAa,IAAIC,WAAgB,CAAC,CAAC;AACtD,QAAM,CAAC,UAAU,WAAW,IAAIA,WAAgB,CAAC,CAAC;AAClD,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,KAAK;AAC1D,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAEhE,EAAAC,YAAU,MAAM;AACd,QAAI,gBAAgB,mBAAmB;AACrC,mBAAa;AAAA,IACf;AAAA,EACF,GAAG,CAAC,cAAc,iBAAiB,CAAC;AAEpC,QAAM,eAAe,YAAY;AAC/B,QAAI,CAAC;AAAc;AAEnB,QAAI;AACF,wBAAkB,IAAI;AAGtB,YAAM,EAAE,kBAAAC,kBAAiB,IAAI,MAAM,OAAO,mBAAmB;AAG7D,UAAI;AACF,cAAM,mBAAmB,MAAMA,kBAAiB,cAAc,aAAa,IAAI,EAAE;AACjF,YAAI,iBAAiB,WAAW,iBAAiB,MAAM;AACrD,wBAAc,iBAAiB,QAAQ,CAAC,CAAC;AAAA,QAC3C;AAAA,MACF,SAAS,KAAK;AACZ,gBAAQ,IAAI,4CAA4C,GAAG;AAC3D,sBAAc,CAAC,CAAC;AAAA,MAClB;AAGA,UAAI;AACF,cAAM,iBAAiB,MAAMA,kBAAiB,YAAY,aAAa,IAAI,EAAE;AAC7E,YAAI,eAAe,WAAW,eAAe,MAAM;AACjD,sBAAY,eAAe,QAAQ,CAAC,CAAC;AAAA,QACvC;AAAA,MACF,SAAS,KAAK;AACZ,gBAAQ,IAAI,0CAA0C,GAAG;AACzD,oBAAY,CAAC,CAAC;AAAA,MAChB;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,2BAA2B,KAAK;AAAA,IAChD,UAAE;AACA,wBAAkB,KAAK;AAAA,IACzB;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,YAAwE;AAAA,MAC5E,QAAQ,EAAE,SAAS,WAAW,OAAO,UAAU,MAAMR,cAAY;AAAA,MACjE,OAAO,EAAE,SAAS,WAAW,OAAO,SAAS,MAAMC,QAAM;AAAA,MACzD,UAAU,EAAE,SAAS,UAAU,OAAO,YAAY,MAAMF,cAAY;AAAA,MACpE,QAAQ,EAAE,SAAS,aAAa,OAAO,UAAU,MAAMF,OAAM;AAAA,MAC7D,WAAW,EAAE,SAAS,UAAU,OAAO,aAAa,MAAMC,UAAQ;AAAA,IACpE;AAEA,UAAM,SAAS,UAAU,MAAM,KAAK,EAAE,SAAS,WAAW,OAAO,QAAQ,MAAMG,QAAM;AACrF,UAAMQ,QAAO,OAAO;AAEpB,WACE,gBAAAJ,QAAC,SAAM,SAAS,OAAO,SAAS,WAAU,2BACxC;AAAA,sBAAAD,OAACK,OAAA,EAAK,WAAU,WAAU;AAAA,MACzB,OAAO;AAAA,OACV;AAAA,EAEJ;AAEA,QAAM,mBAAmB,MAAM;AAC7B,QAAI,CAAC,gBAAgB,CAAC,aAAa;AAAkB,aAAO;AAE5D,QAAI;AACF,YAAM,MAAM,oBAAI,KAAK;AACrB,YAAM,MAAM,IAAI,KAAK,aAAa,gBAAgB;AAGlD,UAAI,MAAM,IAAI,QAAQ,CAAC;AAAG,eAAO;AAEjC,YAAM,OAAO,IAAI,QAAQ,IAAI,IAAI,QAAQ;AACzC,aAAO,KAAK,KAAK,QAAQ,MAAO,KAAK,KAAK,GAAG;AAAA,IAC/C,SAAS,OAAO;AACd,cAAQ,MAAM,qCAAqC,KAAK;AACxD,aAAO;AAAA,IACT;AAAA,EACF;AAEA,MAAI,CAAC,cAAc;AACjB,WAAO;AAAA,EACT;AAEA,SACE,gBAAAL,OAAAD,YAAA,EAEE,0BAAAC,OAAC,UAAO,MAAM,mBAAmB,cAAc,sBAC7C,0BAAAC,QAAC,iBAAc,WAAU,0CACvB;AAAA,oBAAAA,QAAC,gBACC;AAAA,sBAAAA,QAAC,eAAY,WAAU,2BACrB;AAAA,wBAAAD,OAACF,UAAA,EAAQ,WAAU,yBAAwB;AAAA,QAAE;AAAA,SAE/C;AAAA,MACA,gBAAAE,OAAC,qBAAkB,8EAEnB;AAAA,OACF;AAAA,IAEA,gBAAAA,OAAC,SAAI,WAAU,QACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,SAAS;AAAA,QACT,UAAU,MAAM;AACd,kBAAQ,IAAI,6BAA6B;AAAA,QAC3C;AAAA;AAAA,IACF,GACF;AAAA,IAEA,gBAAAA,OAAC,gBACC,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,SAAS,MAAM,qBAAqB,KAAK;AAAA,QAC1C;AAAA;AAAA,IAED,GACF;AAAA,KACF,GACF,GACF;AAEJ;;;ADpLA,SAAS,aAAAM,YAAW,SAAAC,QAAO,WAAAC,WAAS,gBAAAC,qBAAoB;AA2DlD,gBAAAC,QAcQ,QAAAC,eAdR;AA9BC,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA,QAAQ,CAAC;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAwB;AACtB,QAAM,SAASC,WAAU;AAEzB,QAAM,iBAAiB,CAAC,MAAc,OAAgB;AAEpD,UAAM,MAAM,KAAK,IAAI,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI;AAC5C,WAAO,KAAK,GAAG;AAAA,EACjB;AAEA,QAAM,wBAAwB,CAAC,MAAc,OAAgB;AAC3D,mBAAe,MAAM,EAAE;AAAA,EACzB;AAEA,SACE,gBAAAD,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD;AAAA,MAAC;AAAA;AAAA,QACC,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA;AAAA,IACd;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,0BAEb,0BAAAC,QAAC,QAAK,WAAU,kDACd;AAAA,sBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAU,+BAAiB,GAC9B;AAAA,MACA,gBAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,wDAAuD,kBAAI;AAAA,UAC5E,gBAAAA,OAAC,OAAE,WAAU,yCAAyC,eAAK,SAAS,MAAK;AAAA,WAC3E;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,wDAAuD,mBAAK;AAAA,UAC7E,gBAAAA,OAAC,OAAE,WAAU,yCAAyC,eAAK,SAAS,OAAM;AAAA,WAC5E;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,wDAAuD,mBAAK;AAAA,UAC7E,gBAAAA,OAAC,OAAE,WAAU,yCAAyC,eAAK,SAAS,SAAS,gBAAe;AAAA,WAC9F;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,wDAAuD,qBAAO;AAAA,UAC/E,gBAAAA,OAAC,OAAE,WAAU,yCAAyC,eAAK,SAAS,WAAW,gBAAe;AAAA,WAChG;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,wDAAuD,yBAAW;AAAA,UACnF,gBAAAA,OAAC,OAAE,WAAU,yCAAyC,eAAK,SAAS,eAAe,kBAAiB;AAAA,WACtG;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,wDAAuD,oBAAM;AAAA,UAC9E,gBAAAA,OAAC,OAAE,WAAW,WAAW,KAAK,SAAS,WAAW,mBAAmB,cAAc,IAChF,eAAK,SAAS,WAAW,WAAW,YACvC;AAAA,WACF;AAAA,SACF,GACF;AAAA,OACF,GAEF;AAAA,IAGC,gBACC,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,UAAU;AAAA,UACR,IAAI,KAAK,SAAS;AAAA,UAClB,MAAM,KAAK,SAAS;AAAA,UACpB,OAAO,KAAK,SAAS;AAAA,UACrB,aAAa,KAAK,SAAS,OAAO;AAAA,YAChC,IAAI,KAAK,SAAS,KAAK;AAAA,YACvB,MAAM,KAAK,SAAS,KAAK;AAAA,YACzB,OAAO,KAAK,SAAS,KAAK;AAAA,YAC1B,UAAU,KAAK,SAAS,KAAK;AAAA,UAC/B,IAAI;AAAA,UACJ,oBAAoB,KAAK,SAAS,cAAc,UAAU;AAAA,QAC5D;AAAA,QACA,eAAe,KAAK,SAAS,eAAe,CAAC,KAAK,SAAS,YAAY,IAAI,CAAC;AAAA,QAC5E;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,IAID,KAAK,SAAS,gBACb,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,YAAY,KAAK,SAAS;AAAA,QAC1B,cAAc,KAAK,SAAS;AAAA;AAAA,IAC9B;AAAA,IAIF,gBAAAC,QAAC,SAAI,WAAU,wDACb;AAAA,sBAAAA,QAAC,QAAK,WAAU,kDACd;AAAA,wBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,0BAAAD,OAAC,aAAU,WAAU,uBAAsB,4BAAc;AAAA,UACzD,gBAAAA,OAACJ,YAAA,EAAU,WAAU,yBAAwB;AAAA,WAC/C;AAAA,QACA,gBAAAI,OAAC,eACC,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,WAAU;AAAA,YACV,SAAS,MAAM,sBAAsB,eAAe,KAAK,SAAS,KAAK,UAAU;AAAA,YAClF;AAAA;AAAA,QAED,GACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,QAAK,WAAU,kDACd;AAAA,wBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,0BAAAD,OAAC,aAAU,WAAU,uBAAsB,6BAAe;AAAA,UAC1D,gBAAAA,OAACF,WAAA,EAAQ,WAAU,0BAAyB;AAAA,WAC9C;AAAA,QACA,gBAAAE,OAAC,eACC,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,WAAU;AAAA,YACV,SAAS,MAAM,sBAAsB,eAAe,KAAK,SAAS,KAAK,WAAW;AAAA,YACnF;AAAA;AAAA,QAED,GACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,QAAK,WAAU,kDACd;AAAA,wBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,0BAAAD,OAAC,aAAU,WAAU,uBAAsB,0BAAY;AAAA,UACvD,gBAAAA,OAACH,QAAA,EAAM,WAAU,2BAA0B;AAAA,WAC7C;AAAA,QACA,gBAAAG,OAAC,eACC,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,WAAU;AAAA,YACV,SAAS,MAAM,sBAAsB,eAAe,KAAK,SAAS,KAAK,QAAQ;AAAA,YAChF;AAAA;AAAA,QAED,GACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,QAAK,WAAU,kDACd;AAAA,wBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,0BAAAD,OAAC,aAAU,WAAU,uBAAsB,2BAAa;AAAA,UACxD,gBAAAA,OAACD,eAAA,EAAa,WAAU,2BAA0B;AAAA,WACpD;AAAA,QACA,gBAAAC,OAAC,eACC,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,WAAU;AAAA,YACV,SAAS,MAAM,sBAAsB,eAAe,KAAK,SAAS,KAAK,SAAS;AAAA,YACjF;AAAA;AAAA,QAED,GACF;AAAA,SACF;AAAA,OACF;AAAA,KACD;AAEL;;;AErNA,SAAgB,YAAAG,YAAU,aAAAC,aAAW,eAAAC,oBAAmB;;;ACDxD,SAAS,YAAAC,kBAAgB;AACzB,SAAS,+BAA+B;AAkB9B,gBAAAC,QAEF,QAAAC,eAFE;AAVH,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AACF,GAAwB;AACtB,QAAMC,KAAI,wBAAwB;AAClC,SACE,gBAAAD,QAAC,SAAI,WAAU,0CACb;AAAA,oBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,qEACb,0BAAAA,OAACD,YAAA,EAAS,WAAU,yBAAwB,GAC9C;AAAA,MACA,gBAAAE,QAAC,SACC;AAAA,wBAAAD,OAAC,QAAG,WAAU,oCAAoC,mBAASE,GAAE,OAAO,GAAE;AAAA,QACrE,YACC,gBAAAF,OAAC,OAAE,WAAU,yBAAyB,oBAAS;AAAA,SAEnD;AAAA,OACF;AAAA,IACC,YACC,gBAAAA,OAAC,SAAI,WAAU,+BACZ,UACH;AAAA,KAEJ;AAEJ;;;ACnCA,SAAS,eAAAG,cAAa,gBAAAC,eAAc,YAAY,oBAAoB;AAEpE,SAAS,2BAAAC,gCAA+B;AAgChC,gBAAAC,QACA,QAAAC,eADA;AAtBD,SAAS,mBAAmB;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAA4B;AAC1B,QAAMC,KAAIH,yBAAwB;AAElC,QAAM,aAAa;AAAA,IACjBG,GAAE,gBAAgB;AAAA,IAAGA,GAAE,iBAAiB;AAAA,IAAGA,GAAE,cAAc;AAAA,IAAGA,GAAE,cAAc;AAAA,IAC9EA,GAAE,YAAY;AAAA,IAAGA,GAAE,aAAa;AAAA,IAAGA,GAAE,aAAa;AAAA,IAAGA,GAAE,eAAe;AAAA,IACtEA,GAAE,kBAAkB;AAAA,IAAGA,GAAE,gBAAgB;AAAA,IAAGA,GAAE,iBAAiB;AAAA,IAAGA,GAAE,iBAAiB;AAAA,EACvF;AAEA,QAAM,eAAe,WAAW,YAAY,SAAS,CAAC;AACtD,QAAM,cAAc,YAAY,YAAY;AAE5C,SACE,gBAAAD,QAAC,SAAI,WAAW,qCAAqC,SAAS,IAE5D;AAAA,oBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,sBAAAD,OAAC,gBAAa,WAAU,yBAAwB;AAAA,MAChD,gBAAAC,QAAC,QAAG,WAAU,uCACX;AAAA;AAAA,QAAa;AAAA,QAAE;AAAA,SAClB;AAAA,OACF;AAAA,IAGA,gBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS;AAAA,UACT,cAAW;AAAA,UAEX,0BAAAA,OAACG,cAAA,EAAY,WAAU,yBAAwB;AAAA;AAAA,MACjD;AAAA,MAEA,gBAAAH;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAU;AAAA,UAET,UAAAE,GAAE,kBAAkB;AAAA;AAAA,MACvB;AAAA,MAEA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS;AAAA,UACT,cAAW;AAAA,UAEX,0BAAAA,OAACI,eAAA,EAAa,WAAU,yBAAwB;AAAA;AAAA,MAClD;AAAA,OACF;AAAA,KACF;AAEJ;;;ACtEA,SAAS,SAAAC,SAAO,eAAAC,eAAa,WAAAC,iBAAe;AAC5C,SAAS,2BAAAC,gCAA+B;AA2B5B,gBAAAC,QAEF,QAAAC,eAFE;AAhBL,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAuB;AACrB,QAAMC,KAAIH,yBAAwB;AAElC,SACE,gBAAAE,QAAC,SAAI,WAAW,yCAAyC,SAAS,IAEhE;AAAA,oBAAAD,OAAC,SAAI,WAAU,6BACb,0BAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAACJ,SAAA,EAAM,WAAU,yBAAwB,GAC3C;AAAA,MACA,gBAAAK,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,qCAAqC,UAAAE,GAAE,qBAAqB,GAAE;AAAA,QAC3E,gBAAAF,OAAC,OAAE,WAAU,oCAAoC,wBAAa;AAAA,SAChE;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,8BACb,0BAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAACH,eAAA,EAAY,WAAU,0BAAyB,GAClD;AAAA,MACA,gBAAAI,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,sCAAsC,UAAAE,GAAE,qBAAqB,GAAE;AAAA,QAC5E,gBAAAF,OAAC,OAAE,WAAU,qCAAqC,wBAAa;AAAA,SACjE;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAACF,WAAA,EAAQ,WAAU,2BAA0B,GAC/C;AAAA,MACA,gBAAAG,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,uCAAuC,UAAAE,GAAE,oBAAoB,GAAE;AAAA,QAC5E,gBAAAF,OAAC,OAAE,WAAU,sCAAsC,uBAAY;AAAA,SACjE;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACjEA,OAAOG,aAAW;AAElB,SAAS,2BAAAC,gCAA+B;AACxC,SAAS,qBAAqB;AAmHpB,gBAAAC,QA2CU,QAAAC,eA3CV;AAzGH,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAsB;AACpB,QAAMC,KAAIH,yBAAwB;AAElC,QAAM,eAAeD,QAAM,QAAQ,MAAM;AAEvC,UAAM,OAAO,YAAY,YAAY;AACrC,UAAM,QAAQ,YAAY,SAAS;AAGnC,UAAM,WAAW,IAAI,KAAK,MAAM,OAAO,CAAC;AACxC,UAAM,UAAU,IAAI,KAAK,MAAM,QAAQ,GAAG,CAAC;AAG3C,UAAM,YAAY,IAAI,KAAK,QAAQ;AACnC,cAAU,QAAQ,UAAU,QAAQ,IAAI,SAAS,OAAO,CAAC;AAGzD,UAAM,UAAU,IAAI,KAAK,OAAO;AAChC,YAAQ,QAAQ,QAAQ,QAAQ,KAAK,IAAI,QAAQ,OAAO,EAAE;AAE1D,UAAM,OAAsB,CAAC;AAC7B,UAAM,WAAW,IAAI,KAAK,SAAS;AAEnC,WAAO,YAAY,SAAS;AAC1B,YAAM,aAAa,SAAS,QAAQ;AACpC,YAAM,iBAAiB,SAAS,SAAS,MAAM;AAC/C,YAAM,UAAU,SAAS,aAAa,OAAM,oBAAI,KAAK,GAAE,aAAa;AACpE,YAAM,aAAa,cAAc,aAAa,MAAM,SAAS,aAAa;AAI1E,YAAM,iBAAiB,cAAc,QAAQ;AAE7C,YAAM,aAAa,OAAO,OAAO,WAAS;AACxC,cAAM,aAAa,IAAI,KAAM,MAAc,gBAAgB,MAAM,UAAU;AAC3E,cAAM,aAAa,IAAI,KAAM,MAAc,gBAAgB,MAAM,UAAU;AAI3E,cAAM,gBAAgB,cAAc,UAAU;AAC9C,cAAM,gBAAgB,cAAc,UAAU;AAE9C,cAAM,UACJ,kBAAkB,kBAClB,kBAAkB;AAIpB,YAAI,SAAS,QAAQ,KAAK,GAAG;AAC3B,kBAAQ,IAAI,yCAAkC;AAAA,YAC5C;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,aAAa,MAAM;AAAA,UACrB,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT,CAAC;AAID,YAAM,eAAe;AACrB,YAAM,eAAsB,CAAC;AAE7B,WAAK,KAAK;AAAA,QACR,MAAM,IAAI,KAAK,QAAQ;AAAA,QACvB,QAAQ,CAAC;AAAA;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW,WAAW,SAAS;AAAA,QAC/B,QAAQ;AAAA,QACR,aAAa,aAAa;AAAA,QAC1B,aAAa,aAAa;AAAA,MAC5B,CAAQ;AAER,eAAS,QAAQ,SAAS,QAAQ,IAAI,CAAC;AAAA,IACzC;AAEA,WAAO;AAAA,EACT,GAAG,CAAC,aAAa,QAAQ,YAAY,CAAC;AAGtC,QAAM,WAAW;AAAA,IACfI,GAAE,aAAa;AAAA,IAAGA,GAAE,aAAa;AAAA,IAAGA,GAAE,cAAc;AAAA,IAAGA,GAAE,gBAAgB;AAAA,IACzEA,GAAE,eAAe;AAAA,IAAGA,GAAE,aAAa;AAAA,IAAGA,GAAE,eAAe;AAAA,EACzD;AAEA,SACE,gBAAAD,QAAC,SAAI,WAAW,wEAAwE,SAAS,IAE/F;AAAA,oBAAAD,OAAC,SAAI,WAAU,wDACZ,mBAAS,IAAI,SACZ,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,WAAU;AAAA,QAET;AAAA;AAAA,MAHI;AAAA,IAIP,CACD,GACH;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,oBACZ,uBAAa,IAAI,CAAC,KAAK,UACtB,gBAAAC;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,MAAM,YAAY,IAAI,IAAI;AAAA,QACnC,WAAW;AAAA;AAAA,gBAEP,IAAI,iBAAiB,aAAa,YAAY;AAAA,gBAC9C,IAAI,UAAU,eAAe,EAAE;AAAA,gBAC/B,IAAI,aAAa,qCAAqC,EAAE;AAAA,gBACxD,IAAI,iBAAiB,qBAAqB,EAAE;AAAA;AAAA,QAIhD;AAAA,0BAAAD,OAAC,SAAI,WAAU,QACb,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW;AAAA;AAAA,oBAEP,IAAI,iBAAiB,kBAAkB,eAAe;AAAA,oBACtD,IAAI,UAAU,4BAA4B,EAAE;AAAA;AAAA,cAG9C,cAAY;AAAA;AAAA,UAChB,GACF;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,aAEX;AAAA,gBAAY,aACZ,gBAAAA,QAAC,SAAI,WAAU,aAEX;AAAA,kBAAY,cAAc,KAC1B,gBAAAA,QAAC,SAAI,WAAU,mGACb;AAAA,gCAAAD,OAAC,UAAK,WAAU,8BAA8B,UAAAE,GAAE,eAAe,GAAE;AAAA,gBACjE,gBAAAF,OAAC,UAAK,WAAU,4BAA6B,cAAY,aAAY;AAAA,iBACvE;AAAA,cAIA,IAAY,cAAc,KAC1B,gBAAAC,QAAC,SAAI,WAAU,iGACb;AAAA,gCAAAD,OAAC,UAAK,WAAU,6BAA6B,UAAAE,GAAE,eAAe,GAAE;AAAA,gBAChE,gBAAAF,OAAC,UAAK,WAAU,2BAA4B,cAAY,aAAY;AAAA,iBACtE;AAAA,eAEJ;AAAA,YAID,CAAE,IAAY,aAAa,IAAI,kBAC9B,gBAAAA,OAAC,SAAI,WAAU,0CACZ,UAAAE,GAAE,iBAAiB,GACtB;AAAA,aAEJ;AAAA;AAAA;AAAA,MApDK;AAAA,IAqDP,CACD,GACH;AAAA,KACF;AAEJ;;;ACpLY,gBAAAC,QAEE,QAAAC,eAFF;AAPL,SAAS,kBAAkB;AAChC,SACE,gBAAAA,QAAC,SAAI,WAAU,2BAEb;AAAA,oBAAAD,OAAC,SAAI,WAAU,4DACb,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gCAA+B;AAAA,QAC9C,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,oCAAmC;AAAA,YAClD,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,aAChD;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,oCAAmC;AAAA,YAClD,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,aAChD;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,oCAAmC;AAAA,QAClD,gBAAAA,OAAC,SAAI,WAAU,oCAAmC;AAAA,SACpD;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,wEAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,wDACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,aACrB,0BAAAA,OAAC,SAAI,WAAU,uCAAsC,KAD7C,CAEV,CACD,GACH;AAAA,MAGA,gBAAAA,OAAC,SAAI,WAAU,oBACZ,gBAAM,KAAK,EAAE,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,MAClC,gBAAAA;AAAA,QAAC;AAAA;AAAA,UAEC,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,+BAA8B;AAAA,YAC7C,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,YAC9C,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,aAChD;AAAA;AAAA,QAPK;AAAA,MAQP,CACD,GACH;AAAA,OACF;AAAA,KACF;AAEJ;AAEO,SAAS,uBAAuB;AACrC,SACE,gBAAAC,QAAC,SAAI,WAAU,2BAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gCAA+B;AAAA,QAC9C,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,SAChD;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,OAChD;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gCAA+B;AAAA,QAC9C,gBAAAA,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,oCAAb,CAA8C,CACzD,GACH;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gCAA+B;AAAA,QAC9C,gBAAAA,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,oCAAb,CAA8C,CACzD,GACH;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,gCAA+B;AAAA,MAC9C,gBAAAA,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAC,QAAC,SAAY,WAAU,iDACrB;AAAA,wBAAAD,OAAC,SAAI,WAAU,+BAA8B;AAAA,QAC7C,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,QAC9C,gBAAAA,OAAC,SAAI,WAAU,gCAA+B;AAAA,WAHtC,CAIV,CACD,GACH;AAAA,OACF;AAAA,KACF;AAEJ;;;ALPM,SACE,OAAAE,QADF,QAAAC,eAAA;AAtEC,SAAS,UAAU;AAAA,EACxB,SAAS,CAAC;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAmB;AACjB,QAAM,CAAC,aAAa,cAAc,IAAIC,WAAS,eAAe,oBAAI,KAAK,CAAC;AAGxE,EAAAC,YAAU,MAAM;AACd,QAAI,aAAa;AACf,qBAAe,WAAW;AAAA,IAC5B;AAAA,EACF,GAAG,CAAC,WAAW,CAAC;AAEhB,QAAM,CAAC,cAAc,eAAe,IAAID,WAAsB,IAAI;AAGlE,EAAAC,YAAU,MAAM;AACd,oBAAgB,WAAW;AAAA,EAC7B,GAAG,CAAC,aAAa,aAAa,CAAC;AAG/B,QAAM,oBAAoBC,aAAY,MAAM;AAC1C,mBAAe,UAAQ,IAAI,KAAK,KAAK,YAAY,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC;AAAA,EAC7E,GAAG,CAAC,CAAC;AAEL,QAAM,gBAAgBA,aAAY,MAAM;AACtC,mBAAe,UAAQ,IAAI,KAAK,KAAK,YAAY,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,CAAC;AAAA,EAC7E,GAAG,CAAC,CAAC;AAEL,QAAM,YAAYA,aAAY,MAAM;AAClC,UAAM,QAAQ,oBAAI,KAAK;AACvB,mBAAe,KAAK;AACpB,oBAAgB,KAAK;AAAA,EACvB,GAAG,CAAC,CAAC;AAGL,QAAM,kBAAkBA,aAAY,CAACC,UAAe;AAClD,oBAAgBA,KAAI;AACpB,mBAAeA,KAAI;AAAA,EACrB,GAAG,CAAC,YAAY,CAAC;AAGjB,QAAM,eAAe,YAAY,SAAS;AAC1C,QAAM,cAAc,YAAY,YAAY;AAE5C,QAAM,cAAc,OAAO,OAAO,WAAS;AACzC,UAAM,YAAY,IAAI,KAAM,MAAc,gBAAgB,MAAM,UAAU;AAC1E,WAAO,UAAU,SAAS,MAAM,gBAAgB,UAAU,YAAY,MAAM;AAAA,EAC9E,CAAC;AAID,QAAM,eAAe,YAAY;AACjC,QAAM,eAAe;AACrB,QAAM,cAAc,YAAY;AAGhC,MAAI,SAAS;AACX,WACE,gBAAAJ,QAAC,SAAI,WACH;AAAA,sBAAAD,OAAC,kBAAe;AAAA,MAChB,gBAAAA,OAAC,mBAAgB;AAAA,OACnB;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAW,aAAa,SAAS,IAEpC;AAAA,oBAAAD,OAAC,kBACC,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,SAAS;AAAA;AAAA,IACX,GACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA;AAAA,IACf;AAAA,KACF;AAEJ;;;AMxIA,SAAS,WAAAM,WAAS,QAAAC,QAAY,SAAAC,eAAa;AAG3C,SAAS,wBAAAC,8BAA4B;AAoB7B,gBAAAC,QAGE,QAAAC,eAHF;AAXD,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAoB;AAClB,QAAMC,KAAIH,uBAAqB;AAE/B,MAAI,OAAO,WAAW,GAAG;AACvB,WACE,gBAAAE,QAAC,SAAI,WAAW,kCAAkC,SAAS,IACzD;AAAA,sBAAAD,OAACJ,WAAA,EAAQ,WAAU,wCAAuC;AAAA,MAC1D,gBAAAI,OAAC,OAAE,WAAU,uBAAuB,UAAAE,GAAE,mBAAmB,GAAE;AAAA,MAC1D,gBACC,gBAAAD,QAAC,OAAE,WAAU,WAAU;AAAA;AAAA,QAAK,aAAa,mBAAmB;AAAA,SAAE;AAAA,OAElE;AAAA,EAEJ;AAEA,SACE,gBAAAA,QAAC,SAAI,WAAW,aAAa,SAAS,IACpC;AAAA,oBAAAA,QAAC,QAAG,WAAU,uCAAsC;AAAA;AAAA,MAC1C,gBAAgB,OAAO,aAAa,mBAAmB,CAAC;AAAA,OAClE;AAAA,IAEA,gBAAAD,OAAC,SAAI,WAAU,aACZ,iBAAO,IAAI,WACV,gBAAAC;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,MAAM,eAAe,KAAK;AAAA,QACnC,WAAU;AAAA,QAGV;AAAA,0BAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,4BAAAA,QAAC,QAAG,WAAU,+BAA8B;AAAA;AAAA,cACxC,MAAM;AAAA,eACV;AAAA,YACA,gBAAAD,OAAC,UAAK,WAAW,8CACf,MAAM,WAAW,aAAa,4BAC9B,MAAM,WAAW,aAAa,gCAC9B,2BACF,IACG,gBAAM,QACT;AAAA,aACF;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,qEACb,0BAAAA,OAACH,QAAA,EAAK,WAAU,yBAAwB,GAC1C;AAAA,YACA,gBAAAI,QAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,6BACV,gBAAM,iBAAiB,MAAM,WAC5B,GAAG,MAAM,SAAS,SAAS,IAAI,MAAM,SAAS,QAAQ,KACtD,qBAEJ;AAAA,cACA,gBAAAA,OAAC,OAAE,WAAU,yBACV,gBAAM,iBAAiB,MAAM,UAAU,SAAS,YACnD;AAAA,eACF;AAAA,aACF;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAACJ,WAAA,EAAQ,WAAU,yBAAwB;AAAA,YAC3C,gBAAAI,OAAC,UAAK,WAAU,yBACb,gBAAM,aACT;AAAA,aACF;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,2CACb;AAAA,4BAAAD,OAACF,SAAA,EAAM,WAAU,gBAAe;AAAA,YAChC,gBAAAE,OAAC,UAAK,WAAU,cAAc,gBAAM,QAAO;AAAA,aAC7C;AAAA;AAAA;AAAA,MAhDK,MAAM;AAAA,IAiDb,CACD,GACH;AAAA,KACF;AAEJ;;;AC9FA,OAAOG,aAAW;AAClB;AAAA,EAGE,cAAAC;AAAA,EACA,cAAAC;AAAA,EAEA,QAAAC;AAAA,EACA,eAAAC;AAAA,OACK;;;ACTP,SAAS,MAAM,MAAM,QAAAC,aAAY;AAYzB,SAIE,OAAAC,QAJF,QAAAC,eAAA;AAJD,SAAS,WAAW,EAAE,UAAU,kBAAkB,UAAU,GAAoB;AACrF,SACE,gBAAAA,QAAC,SAAI,WAAU,2CACb;AAAA,oBAAAD,OAAC,SAAI,WAAU,2BACb,0BAAAC;AAAA,MAAC;AAAA;AAAA,QACC,SAAS;AAAA,QACT,WAAU;AAAA,QAEV;AAAA,0BAAAD,OAACD,OAAA,EAAK,WAAU,gBAAe;AAAA,UAAE;AAAA;AAAA;AAAA,IAEnC,GACF;AAAA,IAEA,gBAAAE,QAAC,SAAI,WAAU,2BACb;AAAA,sBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,aAAa,UAAU,YAAY;AAAA,UAC5C,MAAK;AAAA,UACL,SAAS,MAAM,iBAAiB,OAAO;AAAA,UACvC,WAAU;AAAA,UAEV;AAAA,4BAAAD,OAAC,QAAK,WAAU,WAAU;AAAA,YAAE;AAAA;AAAA;AAAA,MAE9B;AAAA,MACA,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,aAAa,SAAS,YAAY;AAAA,UAC3C,MAAK;AAAA,UACL,SAAS,MAAM,iBAAiB,MAAM;AAAA,UACtC,WAAU;AAAA,UAEV;AAAA,4BAAAD,OAAC,QAAK,WAAU,WAAU;AAAA,YAAE;AAAA;AAAA;AAAA,MAE9B;AAAA,OACF;AAAA,KACF;AAEJ;;;AC5CA;AAAA,EACE,SAAAE;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AA0BH,qBAAAC,YAIM,OAAAC,QADF,QAAAC,eAHJ;AAbG,SAAS,YAAY,EAAE,SAAS,iBAAiB,gBAAgB,eAAe,GAAqB;AAC1G,QAAM,qBAAqB,CAAC,KAAwB,UAAkB;AACpE,oBAAgB;AAAA,MACd,GAAG;AAAA,MACH,CAAC,GAAG,GAAG;AAAA,IACT,CAAC;AAAA,EACH;AAEA,QAAM,oBAAoB,CAACC,OAA2C;AACpE,mBAAeA,GAAE,OAAO,KAAK;AAAA,EAC/B;AAEA,SACE,gBAAAD,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACR;AAAA,QAAA;AAAA,UACC,aAAY;AAAA,UACZ,OAAO,QAAQ,UAAU;AAAA,UACzB,UAAU;AAAA,UACV,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAQ;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC,QAACR,UAAA,EAAO,OAAO,QAAQ,QAAQ,OAAO,eAAe,CAAC,UAAU,mBAAmB,QAAQ,UAAU,QAAQ,KAAK,KAAK,GACrH;AAAA,sBAAAO,OAACJ,iBAAA,EAAc,WAAU,kBACvB,0BAAAI,OAACH,eAAA,EAAY,aAAY,QAAO,GAClC;AAAA,MACA,gBAAAI,QAACP,iBAAA,EACC;AAAA,wBAAAM,OAACL,cAAA,EAAW,OAAM,OAAM,uBAAS;AAAA,QACjC,gBAAAK,OAACL,cAAA,EAAW,OAAM,SAAQ,mBAAK;AAAA,QAC/B,gBAAAK,OAACL,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,QACrC,gBAAAK,OAACL,cAAA,EAAW,OAAM,gBAAe,0BAAY;AAAA,QAC7C,gBAAAK,OAACL,cAAA,EAAW,OAAM,gBAAe,0BAAY;AAAA,SAC/C;AAAA,OACF;AAAA,KAGE,QAAQ,UAAU,QAAQ,SAAS,kBACnC,gBAAAK;AAAA,MAACF;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,KAEJ;AAEJ;;;ACvFA,SAAS,QAAAK,QAA0C,SAAAC,SAAO,UAAAC,gBAAc;AACxE,SAAS,QAAAC,OAAM,SAAAC,QAAO,YAAAC,YAAU,YAAAC,WAAU,QAAQC,iBAAgB;AAsDpD,gBAAAC,QAEF,QAAAC,eAFE;AA9CP,SAAS,SAAS,EAAE,MAAM,aAAa,GAAkB;AAC9D,QAAM,sBAAsB,CAAC,SAAiB;AAC5C,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,qBAAqB,CAAC,SAAiB;AAC3C,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAMC,eAAa,CAAC,eAAuB;AACzC,WAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,MACtD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,SACE,gBAAAF,OAACR,QAAA,EAAK,WAAU,qDACd,0BAAAS,QAAC,SAAI,WAAU,OAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,uEACb,0BAAAA,OAACD,WAAA,EAAS,WAAU,yBAAwB,GAC9C;AAAA,QACA,gBAAAE,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,uCAAuC,eAAK,MAAK;AAAA,UAC/D,gBAAAA,OAACP,SAAA,EAAM,SAAS,oBAAoB,KAAK,IAAI,GAC1C,6BAAmB,KAAK,IAAI,GAC/B;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAO,OAACP,SAAA,EAAM,SAAS,KAAK,WAAW,YAAY,aACzC,eAAK,WAAW,WAAW,YAC9B;AAAA,OACF;AAAA,IAGA,gBAAAQ,QAAC,SAAI,WAAU,kBACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,iDACb;AAAA,wBAAAD,OAACL,OAAA,EAAK,WAAU,WAAU;AAAA,QAC1B,gBAAAK,OAAC,UAAM,eAAK,OAAM;AAAA,SACpB;AAAA,MAEC,KAAK,SACJ,gBAAAC,QAAC,SAAI,WAAU,iDACb;AAAA,wBAAAD,OAACJ,QAAA,EAAM,WAAU,WAAU;AAAA,QAC3B,gBAAAI,OAAC,UAAM,eAAK,OAAM;AAAA,SACpB;AAAA,MAGF,gBAAAC,QAAC,SAAI,WAAU,iDACb;AAAA,wBAAAD,OAACH,YAAA,EAAS,WAAU,WAAU;AAAA,QAC9B,gBAAAI,QAAC,UAAK;AAAA;AAAA,UAAQC,aAAW,KAAK,UAAU,SAAS,CAAC;AAAA,WAAE;AAAA,SACtD;AAAA,OACF;AAAA,IAGC,KAAK,YACJ,gBAAAD,QAAC,SAAI,WAAU,sDACb;AAAA,sBAAAD,OAACF,WAAA,EAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAE,OAAC,UAAM,eAAK,SAAS,MAAK;AAAA,OAC5B;AAAA,IAID,KAAK,UACJ,gBAAAC,QAAC,SAAI,WAAU,sDACb;AAAA,sBAAAD,OAACF,WAAA,EAAS,WAAU,WAAU;AAAA,MAC9B,gBAAAE,OAAC,UAAM,eAAK,OAAO,MAAK;AAAA,MACvB,KAAK,OAAO,YACX,gBAAAC,QAAC,UAAK,WAAU,iBAAgB;AAAA;AAAA,QAAI,KAAK,OAAO,SAAS;AAAA,SAAK;AAAA,OAElE;AAAA,IAIF,gBAAAD,OAAC,SAAI,WAAU,4BACb,0BAAAA;AAAA,MAACN;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,aAAa,QAAQ,KAAK,EAAE;AAAA,QAC3C,WAAU;AAAA,QACX;AAAA;AAAA,IAED,GACF;AAAA,KACF,GACF;AAEJ;;;AC1HA,SAAS,QAAAS,QAAM,eAAAC,qBAAmB;AAElC,SAAS,4BAA4B;AAc3B,SACE,OAAAC,QADF,QAAAC,eAAA;AAPH,SAAS,SAAS,EAAE,OAAO,aAAa,GAAkB;AAC/D,QAAMC,KAAI,qBAAqB;AAE/B,MAAI,MAAM,WAAW,GAAG;AACtB,WACE,gBAAAF,OAACF,QAAA,EAAK,WAAU,kDACd,0BAAAE,OAACD,eAAA,EAAY,WAAU,qBACrB,0BAAAE,QAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,OAAC,QAAG,WAAU,4BAA4B,UAAAE,GAAE,kBAAkB,GAAE;AAAA,MAChE,gBAAAF,OAAC,OAAE,WAAU,WACV,UAAAE,GAAE,6BAA6B,GAClC;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAU,uEACZ,gBAAM,IAAI,CAAC,SACV,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA;AAAA;AAAA,IAFK,KAAK;AAAA,EAGZ,CACD,GACH;AAEJ;;;ACzCA,OAAOG,aAAW;AAYlB,SAAS,OAAAC,OAAK,QAAAC,QAAM,UAAAC,SAAQ,gBAAAC,eAAc,aAAAC,YAAW,aAAa;AAClE,SAAS,wBAAAC,6BAA4B;AAwB3B,SACE,OAAAC,QADF,QAAAC,eAAA;AAdH,SAAS,UAAU;AAAA,EACxB;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAmB;AACjB,QAAMC,KAAIH,sBAAqB;AAC/B,QAAM,CAAC,gBAAgB,iBAAiB,IAAII,QAAM,SAAwB,IAAI;AAE9E,MAAI,MAAM,WAAW,GAAG;AACtB,WACE,gBAAAH,OAAC,QAAK,WAAU,2BACd,0BAAAA,OAAC,eAAY,WAAU,qBACrB,0BAAAC,QAAC,SAAI,WAAU,sBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,OAAC,QAAG,WAAU,4BAA4B,UAAAE,GAAE,kBAAkB,GAAE;AAAA,MAChE,gBAAAF,OAAC,OAAE,WAAU,WACV,UAAAE,GAAE,uBAAuB,GAC5B;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,QAAME,eAAa,CAAC,eAA0C;AAC5D,QAAI,CAAC;AAAY,aAAOF,GAAE,aAAa;AACvC,UAAMG,QAAO,OAAO,eAAe,WAAW,IAAI,KAAK,UAAU,IAAI;AACrE,WAAOA,MAAK,mBAAmB,SAAS;AAAA,MACtC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,eAAe,CAAC,SAAiB;AACrC,UAAM,WAAmC;AAAA,MACvC,OAAO;AAAA,MACP,UAAU;AAAA,MACV,cAAc;AAAA,MACd,cAAc;AAAA,IAChB;AAEA,UAAM,UAAU;AAChB,WACE,gBAAAL,OAAC,SAAM,WAAW,SAAS,IAAI,KAAK,SAAS,cAC1C,UAAAE,GAAE,SAAS,OAAO,EAAS,KAAK,KAAK,QAAQ,KAAK,GAAG,GACxD;AAAA,EAEJ;AAEA,QAAM,iBAAiB,CAAC,aAAsB;AAC5C,WAAO,WACL,gBAAAF,OAAC,SAAM,WAAU,qEACd,UAAAE,GAAE,eAAe,GACpB,IAEA,gBAAAF,OAAC,SAAM,WAAU,iEACd,UAAAE,GAAE,iBAAiB,GACtB;AAAA,EAEJ;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,QAAI,QAAQ;AACV,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAF,OAAC,QAAK,WAAU,gDACd,0BAAAA,OAAC,eAAY,WAAU,8BAErB,0BAAAA,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAAC,WAAM,WAAU,UAEf;AAAA,oBAAAD,OAAC,WAAM,WAAU,4DACf,0BAAAC,QAAC,QACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,wFACX,UAAAE,GAAE,aAAa,GAClB;AAAA,MACA,gBAAAF,OAAC,QAAG,WAAU,wFACX,UAAAE,GAAE,aAAa,GAClB;AAAA,MACA,gBAAAD,QAAC,QAAG,WAAU,wFACX;AAAA,QAAAC,GAAE,eAAe;AAAA,QAAE;AAAA,QAAIA,GAAE,iBAAiB;AAAA,SAC7C;AAAA,MACA,gBAAAF,OAAC,QAAG,WAAU,wFACX,UAAAE,GAAE,eAAe,GACpB;AAAA,MACA,gBAAAF,OAAC,QAAG,WAAU,wFACX,UAAAE,GAAE,kBAAkB,GACvB;AAAA,MACA,gBAAAF,OAAC,QAAG,WAAU,yFACX,UAAAE,GAAE,gBAAgB,GACrB;AAAA,OACF,GACF;AAAA,IAGA,gBAAAF,OAAC,WAAM,WAAU,qCACd,gBAAM,IAAI,CAAC,SACV,gBAAAC,QAAC,QAAiB,WAAU,2CAE1B;AAAA,sBAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gIACb,0BAAAC,QAAC,UAAK,WAAU,oCACb;AAAA,eAAK,WAAW,UAAU,GAAG,CAAC;AAAA,UAAG,KAAK,UAAU,UAAU,GAAG,CAAC;AAAA,WACjE,GACF;AAAA,QACA,gBAAAA,QAAC,SACC;AAAA,0BAAAA,QAAC,SAAI,WAAU,yCACZ;AAAA,iBAAK;AAAA,YAAU;AAAA,YAAE,KAAK;AAAA,aACzB;AAAA,UACA,gBAAAD,OAAC,SAAI,WAAU,8BAA8B,eAAK,OAAM;AAAA,WAC1D;AAAA,SACF,GACF;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,aACX,uBAAa,KAAK,IAAI,GACzB;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,eAAK,QAAQ,QAAQ,KAAK,UAAU,QAAQE,GAAE,aAAa,GAC9D,GACF;AAAA,MAGA,gBAAAF,OAAC,QAAG,WAAU,aACX,yBAAe,KAAK,QAAQ,GAC/B;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,UAAAI,aAAW,KAAK,SAAS,GAC5B,GACF;AAAA,MAIA,gBAAAJ,OAAC,QAAG,WAAU,wBACZ,0BAAAC,QAAC,gBACC;AAAA,wBAAAD,OAAC,uBAAoB,SAAO,MAC1B,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,kBAAkB,mBAAmB,KAAK,KAAK,OAAO,KAAK,EAAE;AAAA,YAE5E,0BAAAA,OAACH,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,QACpC,GACF;AAAA,QACA,gBAAAI;AAAA,UAAC;AAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAM,mBAAmB,KAAK;AAAA,YAC9B,cAAc,CAAC,SAAkB,kBAAkB,OAAO,KAAK,KAAK,IAAI;AAAA,YAExE;AAAA,8BAAAA,QAAC,oBAAiB,SAAS,MAAM;AAC/B,6BAAa,QAAQ,KAAK,EAAE;AAC5B,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,OAACN,OAAA,EAAI,WAAU,gBAAe;AAAA,gBAC7BQ,GAAE,qBAAqB;AAAA,iBAC1B;AAAA,cACA,gBAAAD,QAAC,oBAAiB,SAAS,MAAM;AAC/B,6BAAa,QAAQ,KAAK,EAAE;AAC5B,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,OAACL,QAAA,EAAK,WAAU,gBAAe;AAAA,gBAC9BO,GAAE,kBAAkB;AAAA,iBACvB;AAAA,cACA,gBAAAD,QAAC,oBAAiB,SAAS,MAAM;AAC/B,6BAAa,KAAK,WAAW,eAAe,YAAY,KAAK,EAAE;AAC/D,kCAAkB,IAAI;AAAA,cACxB,GACG;AAAA,qBAAK,WAAW,gBAAAD,OAAC,SAAM,WAAU,gBAAe,IAAK,gBAAAA,OAACF,YAAA,EAAU,WAAU,gBAAe;AAAA,gBACzF,KAAK,WAAWI,GAAE,oBAAoB,IAAIA,GAAE,kBAAkB;AAAA,iBACjE;AAAA,cACA,gBAAAF,OAAC,yBAAsB;AAAA,cACvB,gBAAAC;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAS,MAAM;AACb,iCAAa,UAAU,KAAK,EAAE;AAC9B,sCAAkB,IAAI;AAAA,kBACxB;AAAA,kBACA,WAAU;AAAA,kBAEV;AAAA,oCAAAD,OAACJ,SAAA,EAAO,WAAU,gBAAe;AAAA,oBAChCM,GAAE,gBAAgB;AAAA;AAAA;AAAA,cACrB;AAAA;AAAA;AAAA,QACF;AAAA,SACF,GACF;AAAA,SA9FO,KAAK,EA+Fd,CACD,GACH;AAAA,KACF,GACF,GACF,GACF;AAEJ;;;AC5NI,SAEE,OAAAI,QAFF,QAAAC,eAAA;AAFG,SAAS,eAAe;AAC7B,SACE,gBAAAA,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,OAAC,iBAAc;AAAA,IAGf,gBAAAA,OAAC,kBAAe;AAAA,IAGhB,gBAAAA,OAAC,iBAAc,MAAM,GAAG,SAAS,GAAG;AAAA,IAGpC,gBAAAA,OAAC,sBAAmB;AAAA,KACtB;AAEJ;;;ACrBA,SAAgB,YAAAE,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,aAAAC,kBAAiB;AAE1B,SAAS,sBAAAC,2BAA0B;;;ACHnC,SAAgB,YAAAC,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,gBAAAC;AAAA,OACK;AACP,SAAS,UAAAC,gBAAc;AACvB,SAAS,sBAAAC,2BAA0B;;;ACVnC,SAAgB,YAAAC,kBAAgB;;;ACDhC,SAAS,gBAAAC,qBAAoB;AAStB,IAAM,gBAAN,MAAoB;AAAA,EAGzB,YAAY,UAAkB,QAAQ;AACpC,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,MAAc,QACZ,UACA,UAAuB,CAAC,GACZ;AACZ,UAAM,MAAM,GAAG,KAAK,OAAO,GAAG,QAAQ;AAGtC,UAAM,QAAQA,cAAa,KAAK;AAEhC,UAAM,SAAsB;AAAA,MAC1B,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB,UAAU,KAAK;AAAA,QAChC,GAAG,QAAQ;AAAA,MACb;AAAA,MACA,GAAG;AAAA,IACL;AAEA,QAAI;AACF,YAAM,WAAW,MAAM,MAAM,KAAK,MAAM;AAExC,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,YAAY,MAAM,SAAS,KAAK,EAAE,MAAM,OAAO,CAAC,EAAE;AACxD,cAAM,IAAI,MAAM,UAAU,WAAW,uBAAuB,SAAS,MAAM,EAAE;AAAA,MAC/E;AAEA,aAAO,MAAM,SAAS,KAAK;AAAA,IAC7B,SAAS,OAAO;AACd,cAAQ,MAAM,0BAA0B,QAAQ,KAAK,KAAK;AAC1D,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,MAAM,SAAS,UAAe,CAAC,GAAG,UAAe,CAAC,GAA6B;AAC7E,UAAM,SAAS,IAAI,gBAAgB;AAGnC,QAAI,QAAQ;AAAQ,aAAO,OAAO,UAAU,QAAQ,MAAM;AAC1D,QAAI,QAAQ;AAAM,aAAO,OAAO,QAAQ,QAAQ,IAAI;AACpD,QAAI,QAAQ,aAAa;AAAW,aAAO,OAAO,YAAY,QAAQ,SAAS,SAAS,CAAC;AAGzF,QAAI,QAAQ;AAAM,aAAO,OAAO,QAAQ,QAAQ,KAAK,SAAS,CAAC;AAC/D,QAAI,QAAQ;AAAO,aAAO,OAAO,SAAS,QAAQ,MAAM,SAAS,CAAC;AAClE,QAAI,QAAQ;AAAQ,aAAO,OAAO,UAAU,QAAQ,MAAM;AAC1D,QAAI,QAAQ;AAAW,aAAO,OAAO,aAAa,QAAQ,SAAS;AAEnE,UAAM,cAAc,OAAO,SAAS;AACpC,UAAM,WAAW,SAAS,cAAc,IAAI,WAAW,KAAK,EAAE;AAE9D,WAAO,KAAK,QAAyB,QAAQ;AAAA,EAC/C;AAAA,EAEA,MAAM,YAAY,QAA0C;AAC1D,WAAO,KAAK,QAAyB,UAAU,MAAM,EAAE;AAAA,EACzD;AAAA,EAEA,MAAM,WAAW,UAAmD;AAClE,WAAO,KAAK,QAAyB,UAAU;AAAA,MAC7C,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,WAAW,QAAgB,UAAmD;AAClF,WAAO,KAAK,QAAyB,UAAU,MAAM,IAAI;AAAA,MACvD,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,eAAe,QAA0C;AAC7D,WAAO,KAAK,QAAyB,UAAU,MAAM,eAAe;AAAA,MAClE,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,UAAU,MAAM,CAAC;AAAA,IAC1C,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,aAAa,QAA0C;AAC3D,WAAO,KAAK,QAAyB,UAAU,MAAM,aAAa;AAAA,MAChE,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA,IACzC,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,eAAe,QAAgB,aAA+C;AAClF,WAAO,KAAK,QAAyB,UAAU,MAAM,oBAAoB;AAAA,MACvE,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU,EAAE,YAAY,CAAC;AAAA,IACtC,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,WAAW,QAA0C;AACzD,WAAO,KAAK,QAAyB,UAAU,MAAM,IAAI;AAAA,MACvD,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AACF;AAGO,IAAM,gBAAgB,IAAI,cAAc;;;ADtG/C,SAAS,OAAAC,OAAK,UAAAC,eAAc;AA8GlB,gBAAAC,QAGA,QAAAC,eAHA;AAnGH,IAAM,uBAA4D,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAIC,WAAS;AAAA,IACvC,aAAa;AAAA,IACb,iBAAiB;AAAA,EACnB,CAAC;AAED,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,QAAM,CAAC,WAAW,YAAY,IAAIA,WAAS,KAAK;AAChD,QAAM,CAAC,eAAe,gBAAgB,IAAIA,WAAS;AAAA,IACjD,KAAK;AAAA,IACL,SAAS;AAAA,EACX,CAAC;AAED,QAAM,oBAAoB,CAAC,OAAe,UAAkB;AAC1D,gBAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAEjD,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,IAC9C;AAAA,EACF;AAEA,QAAM,2BAA2B,CAAC,UAA6B;AAC7D,qBAAiB,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,EAAE,EAAE;AAAA,EAC/D;AAEA,QAAM,eAAe,MAAM;AACzB,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,YAAY,KAAK,GAAG;AAChC,gBAAU,cAAc;AAAA,IAC1B,WAAW,SAAS,YAAY,SAAS,GAAG;AAC1C,gBAAU,cAAc;AAAA,IAC1B;AAEA,QAAI,CAAC,SAAS,gBAAgB,KAAK,GAAG;AACpC,gBAAU,kBAAkB;AAAA,IAC9B,WAAW,SAAS,gBAAgB,SAAS,iBAAiB;AAC5D,gBAAU,kBAAkB;AAAA,IAC9B;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOC,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,iBAAa,IAAI;AACjB,QAAI;AACF,YAAM,WAAW,MAAM,cAAc;AAAA,QACnC;AAAA,QACA,SAAS;AAAA,MACX;AAEA,UAAI,SAAS,SAAS;AACpB,oBAAY;AACZ,qBAAa,KAAK;AAElB,oBAAY;AAAA,UACV,aAAa;AAAA,UACb,iBAAiB;AAAA,QACnB,CAAC;AACD,kBAAU,CAAC,CAAC;AAAA,MACd,OAAO;AACL,kBAAU,SAAS,SAAS,2BAA2B;AAAA,MACzD;AAAA,IACF,SAAS,OAAO;AACd,YAAM,eAAe,iBAAiB,QAAQ,MAAM,UAAU;AAC9D,gBAAU,YAAY;AAAA,IACxB,UAAE;AACA,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,iBAAa,KAAK;AAElB,gBAAY;AAAA,MACV,aAAa;AAAA,MACb,iBAAiB;AAAA,IACnB,CAAC;AACD,cAAU,CAAC,CAAC;AAAA,EACd;AAEA,SACE,gBAAAH,OAAC,UAAO,MAAY,cAClB,0BAAAC,QAAC,iBAAc,WAAU,YACvB;AAAA,oBAAAA,QAAC,gBACC;AAAA,sBAAAD,OAAC,eAAY,WAAU,yBAAwB,6BAE/C;AAAA,MACA,gBAAAC,QAAC,qBAAkB,WAAU,8BAA6B;AAAA;AAAA,QAC9B,gBAAAD,OAAC,UAAK,WAAU,eAAe,oBAAS;AAAA,SACpE;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,UAAK,UAAU,cACd;AAAA,sBAAAA,QAAC,SAAI,WAAU,kBAEb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACI,QAAA,EAAM,SAAQ,eAAc,4BAAc;AAAA,UAC3C,gBAAAH,QAAC,SAAI,WAAU,YACb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAM,cAAc,MAAM,SAAS;AAAA,gBACnC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAACG,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,gBAChE,aAAY;AAAA,gBACZ,WAAW,OAAO,cAAc,yBAAyB;AAAA;AAAA,YAC3D;AAAA,YACA,gBAAAH;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,SAAS,MAAM,yBAAyB,KAAK;AAAA,gBAC7C,WAAU;AAAA,gBAET,wBAAc,MAAM,gBAAAA,OAACD,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAC,OAACF,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,YACjF;AAAA,aACF;AAAA,UACC,OAAO,eACN,gBAAAE,OAAC,OAAE,WAAU,wBAAwB,iBAAO,aAAY;AAAA,UAE1D,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,yDAA2C;AAAA,WAClF;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAACI,QAAA,EAAM,SAAQ,mBAAkB,oCAAsB;AAAA,UACvD,gBAAAH,QAAC,SAAI,WAAU,YACb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAM,cAAc,UAAU,SAAS;AAAA,gBACvC,OAAO,SAAS;AAAA,gBAChB,UAAU,CAACG,OAAM,kBAAkB,mBAAmBA,GAAE,OAAO,KAAK;AAAA,gBACpE,aAAY;AAAA,gBACZ,WAAW,OAAO,kBAAkB,yBAAyB;AAAA;AAAA,YAC/D;AAAA,YACA,gBAAAH;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,SAAS,MAAM,yBAAyB,SAAS;AAAA,gBACjD,WAAU;AAAA,gBAET,wBAAc,UAAU,gBAAAA,OAACD,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAC,OAACF,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,YACrF;AAAA,aACF;AAAA,UACC,OAAO,mBACN,gBAAAE,OAAC,OAAE,WAAU,wBAAwB,iBAAO,iBAAgB;AAAA,WAEhE;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,gBAAa,WAAU,mCACtB;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,UAAU;AAAA,YACV,WAAU;AAAA,YAET,sBAAY,gBAAgB;AAAA;AAAA,QAC/B;AAAA,SACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AEjNA,SAAS,QAAAK,QAAM,eAAAC,eAAa,UAAAC,gBAAc;AAE1C,SAAS,wBAAAC,6BAA4B;AAkE3B,SAkDQ,YAAAC,YAlDR,OAAAC,QAEE,QAAAC,eAFF;AApDH,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AACJ,QAAMC,KAAIJ,sBAAqB;AAE/B,QAAM,oBAAoB,CAAC,SAAiB;AAC1C,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,sBAAsB,CAAC,aAAsB;AACjD,QAAI,UAAU;AACZ,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAEA,QAAM,qBAAqB,CAAC,SAAiB;AAC3C,UAAM,UAAU;AAChB,WAAOI,GAAE,SAAS,OAAO,EAAS,KAAK;AAAA,EACzC;AAEA,QAAM,uBAAuB,CAAC,aAAsB;AAClD,WAAO,WAAWA,GAAE,eAAe,IAAIA,GAAE,iBAAiB;AAAA,EAC5D;AAEA,SACE,gBAAAF,OAACL,QAAA,EACC,0BAAAM,QAACL,eAAA,EAAY,WAAU,iBAErB;AAAA,oBAAAK,QAAC,SACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CAA0C,UAAAE,GAAE,iBAAiB,GAAE;AAAA,MAC7E,gBAAAD,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,aAAa,GAAE;AAAA,UAClF,gBAAAF,OAAC,OAAE,WAAU,6BACV,aAAG,KAAK,aAAa,EAAE,IAAI,KAAK,YAAY,EAAE,GAAG,KAAK,KAAKE,GAAE,aAAa,GAC7E;AAAA,WACF;AAAA,QACA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,UACnF,gBAAAF,OAAC,OAAE,WAAU,iBAAiB,eAAK,OAAM;AAAA,WAC3C;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,cAAc,GAAE;AAAA,UACnF,gBAAAF,OAAC,OAAE,WAAU,iBAAiB,eAAK,SAASE,GAAE,aAAa,GAAE;AAAA,WAC/D;AAAA,QACA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,aAAa,GAAE;AAAA,UAClF,gBAAAF,OAAC,SAAI,WAAW,8EAA8E,kBAAkB,KAAK,IAAI,CAAC,IACvH,6BAAmB,KAAK,IAAI,GAC/B;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,eAAe,GAAE;AAAA,UACpF,gBAAAF,OAAC,SAAI,WAAW,8EAA8E,oBAAoB,KAAK,QAAQ,CAAC,IAC7H,+BAAqB,KAAK,QAAQ,GACrC;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,WAAW,GAAE;AAAA,UAChF,gBAAAF,OAAC,OAAE,WAAU,mCAAmC,eAAK,IAAG;AAAA,WAC1D;AAAA,SACF;AAAA,OACF;AAAA,IAGC,KAAK,UACJ,gBAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CAA0C,UAAAE,GAAE,mBAAmB,GAAE;AAAA,MAC/E,gBAAAF,OAAC,SAAI,WAAU,oCACb,0BAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,mBAAmB,GAAE;AAAA,UACxF,gBAAAF,OAAC,OAAE,WAAU,2BAA2B,eAAK,OAAO,MAAK;AAAA,WAC3D;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,iBAAiB,GAAE;AAAA,UACtF,gBAAAF,OAAC,OAAE,WAAU,mCAAmC,eAAK,OAAO,IAAG;AAAA,WACjE;AAAA,QACC,KAAK,OAAO,YACX,gBAAAC,QAAAF,YAAA,EACE;AAAA,0BAAAE,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,qBAAqB,GAAE;AAAA,YAC1F,gBAAAF,OAAC,OAAE,WAAU,2BAA2B,eAAK,OAAO,SAAS,MAAK;AAAA,aACpE;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,gDAAgD,UAAAE,GAAE,mBAAmB,GAAE;AAAA,YACxF,gBAAAF,OAAC,OAAE,WAAU,mCAAmC,eAAK,OAAO,SAAS,IAAG;AAAA,aAC1E;AAAA,WACF;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,IAID,eACC,gBAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CAA0C,UAAAE,GAAE,gBAAgB,GAAE;AAAA,MAC5E,gBAAAD,QAAC,SAAI,WAAU,yCACZ;AAAA,4BACC,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,6BAA6B,UAAAE,GAAE,oBAAoB,GAAE;AAAA,UACnE,gBAAAD;AAAA,YAACJ;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,SAAS;AAAA,cACT,WAAU;AAAA,cACV,UAAU;AAAA,cACX;AAAA;AAAA,gBACKK,GAAE,wBAAwB;AAAA;AAAA;AAAA,UAChC;AAAA,UACA,gBAAAF,OAAC,OAAE,WAAU,yBACV,UAAAE,GAAE,8BAA8B,GACnC;AAAA,WACF;AAAA,QAGF,gBAAAD,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,6BAA6B,UAAAE,GAAE,eAAe,GAAE;AAAA,UAC7D,KAAK,WACJ,gBACE,gBAAAF;AAAA,YAACH;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,SAAS;AAAA,cACT,WAAU;AAAA,cACV,UAAU,aAAa,KAAK,SAAS;AAAA,cAEpC,sBAAY,UAAKK,GAAE,sBAAsB,CAAC,KAAK,UAAKA,GAAE,2BAA2B,CAAC;AAAA;AAAA,UACrF,IAGF,cACE,gBAAAF;AAAA,YAACH;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,SAAS;AAAA,cACT,WAAU;AAAA,cACV,UAAU;AAAA,cAET,sBAAY,UAAKK,GAAE,oBAAoB,CAAC,KAAK,UAAKA,GAAE,yBAAyB,CAAC;AAAA;AAAA,UACjF;AAAA,UAGJ,gBAAAF,OAAC,OAAE,WAAU,yBACV,eAAK,WACFE,GAAE,8BAA8B,IAChCA,GAAE,4BAA4B,GAEpC;AAAA,UACC,KAAK,SAAS,WACb,gBAAAD,QAAC,SAAI,WAAU,0EAAyE;AAAA;AAAA,YAClFC,GAAE,qCAAqC;AAAA,aAC7C;AAAA,WAEJ;AAAA,QAEC,YACC,gBAAAD,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,6BAA6B,UAAAE,GAAE,YAAY,GAAE;AAAA,UAC3D,gBAAAF;AAAA,YAACH;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,SAAS;AAAA,cACT,WAAU;AAAA,cACV,UAAU,aAAa,KAAK,SAAS;AAAA,cAEpC,sBAAY,UAAKK,GAAE,kBAAkB,CAAC,KAAK,mBAAOA,GAAE,uBAAuB,CAAC;AAAA;AAAA,UAC/E;AAAA,UACA,gBAAAF,OAAC,OAAE,WAAU,yBACV,UAAAE,GAAE,iCAAiC,GACtC;AAAA,UACC,KAAK,SAAS,WACb,gBAAAD,QAAC,SAAI,WAAU,0EAAyE;AAAA;AAAA,YAClFC,GAAE,4BAA4B;AAAA,aACpC;AAAA,WAEJ;AAAA,SAEJ;AAAA,OACF;AAAA,KAEJ,GACF;AAEJ;;;AHjNA,SAAS,gBAAgB;AAEzB,SAAS,wBAAAC,uBAAsB,yBAAAC,+BAA6B;AAyGxD,qBAAAC,YAKU,OAAAC,QADF,QAAAC,eAJR;AA/FG,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIL,sBAAqB;AAC/B,QAAM,KAAKC,wBAAsB;AACjC,QAAM,CAAC,sBAAsB,uBAAuB,IAAIK,WAAS,KAAK;AACtE,QAAM,CAAC,yBAAyB,0BAA0B,IAAIA,WAAS,KAAK;AAC5E,QAAM,CAAC,uBAAuB,wBAAwB,IAAIA,WAAS,KAAK;AACxE,QAAM,CAAC,qBAAqB,sBAAsB,IAAIA,WAAS,KAAK;AACpE,QAAM,CAAC,WAAW,YAAY,IAAIA,WAAS,KAAK;AAEhD,MAAI,CAAC;AAAM,WAAO;AAIlB,QAAM,uBAAuB,YAAY;AACvC,iBAAa,IAAI;AACjB,QAAI;AACF,YAAM,WAAW,MAAM,SAAS,iBAAiB,KAAK,IAAI,UAAU;AAEpE,UAAI,SAAS,SAAS;AAEpB,cAAM,cAAc,EAAE,GAAG,MAAM,UAAU,MAAM;AAC/C,wBAAgB,WAAW;AAG3B,qBAAa,KAAK;AAAA,MACpB,OAAO;AACL,kBAAU,SAAS,SAAS,2BAA2B;AAAA,MACzD;AAAA,IACF,SAAS,OAAO;AACd,YAAM,eAAe,iBAAiB,QAAQ,MAAM,UAAU;AAC9D,gBAAU,YAAY;AAAA,IACxB,UAAE;AACA,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,qBAAqB,YAAY;AACrC,iBAAa,IAAI;AACjB,QAAI;AACF,YAAM,WAAW,MAAM,SAAS,iBAAiB,KAAK,IAAI,QAAQ;AAElE,UAAI,SAAS,SAAS;AAEpB,cAAM,cAAc,EAAE,GAAG,MAAM,UAAU,KAAK;AAC9C,wBAAgB,WAAW;AAG3B,qBAAa,KAAK;AAAA,MACpB,OAAO;AACL,kBAAU,SAAS,SAAS,yBAAyB;AAAA,MACvD;AAAA,IACF,SAAS,OAAO;AACd,YAAM,eAAe,iBAAiB,QAAQ,MAAM,UAAU;AAC9D,gBAAU,YAAY;AAAA,IACxB,UAAE;AACA,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,8BAA8B,MAAM;AAExC,YAAQ,IAAI,+BAA+B;AAAA,EAC7C;AAEA,QAAM,4BAA4B,CAAC,UAAkB;AACnD,cAAU,KAAK;AAAA,EACjB;AAEA,QAAM,mBAAmB,YAAY;AACnC,iBAAa,IAAI;AACjB,QAAI;AACF,YAAM,WAAW,MAAM,SAAS,qBAAqB,KAAK,EAAE;AAE5D,UAAI,SAAS,SAAS;AAEpB,qBAAa,KAAK;AAClB,wBAAgB,IAAI;AAAA,MACtB,OAAO;AACL,kBAAU,SAAS,SAAS,uBAAuB;AAAA,MACrD;AAAA,IACF,SAAS,OAAO;AACd,YAAM,eAAe,iBAAiB,QAAQ,MAAM,UAAU;AAC9D,gBAAU,YAAY;AAAA,IACxB,UAAE;AACA,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,SACE,gBAAAF,QAAAF,YAAA,EACE;AAAA,oBAAAC,OAACI,UAAA,EAAO,MAAY,cAClB,0BAAAH,QAACI,iBAAA,EAAc,WAAU,0CACvB;AAAA,sBAAAL,OAACM,gBAAA,EACC,0BAAAL,QAAC,SACC;AAAA,wBAAAD,OAACO,eAAA,EAAY,WAAU,yBACpB,UAAAL,GAAE,aAAa,GAClB;AAAA,QACA,gBAAAF,OAACQ,qBAAA,EAAkB,WAAU,8BAC1B,UAAAN,GAAE,cAAc,GACnB;AAAA,SACF,GACF;AAAA,MAEA,gBAAAF,OAAC,SAAI,WAAU,QACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,aAAa;AAAA,UACb,kBAAkB,MAAM,wBAAwB,IAAI;AAAA,UACpD,YAAY,MAAM,yBAAyB,IAAI;AAAA,UAC/C,cAAc,MAAM,2BAA2B,IAAI;AAAA,UACnD,UAAU,MAAM,uBAAuB,IAAI;AAAA,UAC3C;AAAA;AAAA,MACF,GACF;AAAA,MAEA,gBAAAA,OAACS,eAAA,EAAa,WAAU,8BACtB,0BAAAT;AAAA,QAACU;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,MAAM,aAAa,KAAK;AAAA,UAEhC,aAAG,eAAe;AAAA;AAAA,MACrB,GACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAV;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,QAAQ,KAAK;AAAA,QACb,UAAU,GAAG,KAAK,aAAa,EAAE,IAAI,KAAK,YAAY,EAAE,GAAG,KAAK;AAAA,QAChE,WAAW;AAAA,QACX,SAAS;AAAA;AAAA,IACX;AAAA,IAGA,gBAAAA;AAAA,MAACW;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAK;AAAA,QACL,OAAOT,GAAE,mCAAmC;AAAA,QAC5C,aAAa,GAAGA,GAAE,4BAA4B,CAAC,IAAI,GAAG,KAAK,aAAa,EAAE,IAAI,KAAK,YAAY,EAAE,GAAG,KAAK,CAAC,KAAKA,GAAE,mCAAmC,CAAC;AAAA,QACrJ,aAAaA,GAAE,2BAA2B;AAAA,QAC1C,YAAY,GAAG,gBAAgB;AAAA,QAC/B,WAAW;AAAA;AAAA,IACb;AAAA,IAGA,gBAAAF;AAAA,MAACW;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAK;AAAA,QACL,OAAOT,GAAE,iCAAiC;AAAA,QAC1C,aAAa,GAAGA,GAAE,0BAA0B,CAAC,IAAI,GAAG,KAAK,aAAa,EAAE,IAAI,KAAK,YAAY,EAAE,GAAG,KAAK,CAAC,KAAKA,GAAE,iCAAiC,CAAC;AAAA,QACjJ,aAAaA,GAAE,yBAAyB;AAAA,QACxC,YAAY,GAAG,gBAAgB;AAAA,QAC/B,WAAW;AAAA;AAAA,IACb;AAAA,IAGA,gBAAAF;AAAA,MAACW;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAK;AAAA,QACL,OAAOT,GAAE,+BAA+B;AAAA,QACxC,aAAa,GAAGA,GAAE,wBAAwB,CAAC,IAAI,GAAG,KAAK,aAAa,EAAE,IAAI,KAAK,YAAY,EAAE,GAAG,KAAK,CAAC,KAAKA,GAAE,+BAA+B,CAAC;AAAA,QAC7I,aAAaA,GAAE,uBAAuB;AAAA,QACtC,YAAY,GAAG,gBAAgB;AAAA,QAC/B,WAAW;AAAA;AAAA,IACb;AAAA,KACF;AAEJ;;;ADrFI,qBAAAU,YAEE,OAAAC,QAFF,QAAAC,eAAA;AAvGG,SAAS,YAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAqB;AACnB,QAAM,SAASC,WAAU;AACzB,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAC9D,QAAM,CAAC,wBAAwB,yBAAyB,IAAIA,WAAS,KAAK;AAC1E,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAsB,IAAI;AAClE,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAsB,IAAI;AAG1E,EAAAC,YAAU,MAAM;AACd,UAAM,mBAAmB,CAAC,UAAuB;AAC/C,YAAM,EAAE,QAAQ,QAAQ,KAAK,IAAI,MAAM;AACvC,cAAQ,IAAI,0CAAmC,EAAE,QAAQ,QAAQ,KAAK,CAAC;AAEvE,UAAI,WAAW,UAAU,MAAM;AAC7B,gBAAQ,IAAI,yDAAkD,IAAI;AAClE,wBAAgB,IAAI;AACpB,4BAAoB,IAAI;AAAA,MAC1B,WAAW,WAAW,UAAU,MAAM;AACpC,gBAAQ,IAAI,yDAAkD,IAAI;AAClE,gBAAQ,IAAI,sBAAe,KAAK,IAAI,SAAS,OAAO,KAAK,EAAE;AAC3D,gBAAQ,IAAI,+BAAwB,IAAI;AAExC,qBAAa,QAAQ,IAAI;AAAA,MAC3B,WAAW,WAAW,gBAAgB,MAAM;AAC1C,gBAAQ,IAAI,+DAAwD,IAAI;AACxE,4BAAoB,IAAI;AACxB,kCAA0B,IAAI;AAAA,MAChC;AAAA,IACF;AAEA,WAAO,iBAAiB,eAAe,gBAAiC;AACxE,WAAO,MAAM,OAAO,oBAAoB,eAAe,gBAAiC;AAAA,EAC1F,GAAG,CAAC,MAAM,CAAC;AAEX,QAAM,wBAAwB,MAAM;AAClC,wBAAoB,KAAK;AACzB,oBAAgB,IAAI;AAAA,EACtB;AAEA,QAAM,8BAA8B,MAAM;AACxC,8BAA0B,KAAK;AAC/B,wBAAoB,IAAI;AAAA,EAC1B;AAEA,QAAM,0BAA0B,MAAM;AACpC,QAAI,kBAAkB;AACpB,eAAS,cAAc,iBAAiB,EAAE;AAC1C,kCAA4B;AAAA,IAC9B;AAAA,EACF;AAIA,QAAM,iBAAiB,OAAO,aAA4B;AACxD,YAAQ,IAAI,iEAA0D;AAAA,EACxE;AAEA,QAAM,mBAAmB,OAAO,aAAgD;AAC9E,YAAQ,IAAI,mEAA4D;AAAA,EAC1E;AAEA,QAAM,eAAe,CAAC,QAAgB,SAAe;AACnD,YAAQ,IAAI,4CAAqC,EAAE,QAAQ,QAAQ,KAAK,GAAG,CAAC;AAE5E,YAAQ,QAAQ;AAAA,MACd,KAAK;AAEH,gBAAQ,IAAI,qDAA8C;AAAA,UACxD,IAAI,KAAK;AAAA,UACT,MAAM,OAAO,KAAK;AAAA,UAClB,SAAS,KAAK,MAAM,OAAO,KAAK,OAAO;AAAA,QACzC,CAAC;AAED,YAAI,KAAK,MAAM,OAAO,KAAK,OAAO,UAAU;AAC1C,gBAAM,cAAc,QAAQ,KAAK,GAAG,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC;AAC/D,kBAAQ,IAAI,mDAA4C,WAAW;AACnE,kBAAQ,IAAI,uBAAgB,UAAU,WAAW,EAAE;AACnD,iBAAO,KAAK,UAAU,WAAW,EAAE;AAAA,QACrC,OAAO;AACL,kBAAQ,MAAM,uDAAkD,IAAI;AACpE,kBAAQ,MAAM,qBAAgB,IAAI;AAElC,oBAAU,yCAAyC;AAAA,QACrD;AACA;AAAA,MAEF,KAAK;AACH,gBAAQ,IAAI,+CAAwC;AACpD,eAAO,KAAK,YAAY;AACxB;AAAA,MAEF;AACE,gBAAQ,KAAK,6CAAmC,MAAM;AAAA,IAC1D;AAAA,EACF;AAEA,SACE,gBAAAH,QAAAF,YAAA,EAEE;AAAA,oBAAAC;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAM;AAAA,QACN;AAAA,QACA;AAAA;AAAA,IACF;AAAA,IAGA,gBAAAA;AAAA,MAACK;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAK;AAAA,QACL,OAAM;AAAA,QACN,aAAa,uCAAuC,kBAAkB,IAAI;AAAA,QAC1E,aAAY;AAAA,QACZ,YAAW;AAAA,QACX,WAAW;AAAA;AAAA,IACb;AAAA,KACF;AAEJ;;;AK9IA,SAAgB,YAAAC,kBAAgB;;;ACAhC,SAAgB,YAAAC,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,QAAAC,OAAM,KAAAC,WAAwC;;;ACDvD,SAAgB,YAAAC,kBAAgB;AAChC,SAAS,OAAAC,OAAK,UAAAC,SAAQ,aAAAC,YAAW,SAAAC,cAAa;AAuCxC,SAkEM,YAAAC,YA9DJ,OAAAC,QAJF,QAAAC,eAAA;AAlBC,IAAM,YAAsC,CAAC;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,WAAW;AAAA,EACX;AAAA,EACA,OAAO;AAAA,EACP,qBAAqB;AACvB,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIC,WAAS,KAAK;AAEtD,QAAM,YAAY,SAAS,cAAc,eAAe,SAAS;AAEjE,SACE,gBAAAD,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,QAACE,QAAA,EAAM,SAAS,IACb;AAAA;AAAA,MAAM;AAAA,MAAE,YAAY;AAAA,OACvB;AAAA,IACA,gBAAAF,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,MAAM;AAAA,UACN;AAAA,UACA,UAAU,CAACI,OAAM,SAASA,GAAE,OAAO,KAAK;AAAA,UACxC;AAAA,UACA,WAAW,QAAQ,2DAA2D;AAAA,UAC9E;AAAA,UACA;AAAA;AAAA,MACF;AAAA,MACC,sBAAsB,SAAS,cAC9B,gBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,MAAK;AAAA,UACL,SAAS,MAAM,gBAAgB,CAAC,YAAY;AAAA,UAC5C,WAAU;AAAA,UACV;AAAA,UAEC,yBAAe,gBAAAA,OAACK,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAL,OAACM,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,MAC5E;AAAA,OAEJ;AAAA,IACC,SACC,gBAAAN,OAAC,OAAE,WAAU,wBAAwB,iBAAM;AAAA,KAE/C;AAEJ;AAUO,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AACF,MAAM;AACJ,UAAQ,IAAI,wCAAiC,OAAO,SAAS,OAAO,KAAK;AACzE,UAAQ,IAAI,4CAAqC,eAAe;AAChE,UAAQ,IAAI,2DAAoD,oBAAoB,UAAU,CAAC,SAAS,YAAY,gBAAgB,cAAc,IAAI,CAAC,gBAAgB,cAAc,CAAC;AAEtL,SACE,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAD,OAACG,QAAA,EAAM,SAAQ,QAAO,oBAAM;AAAA,IAC5B,gBAAAF;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,SAAS;AAAA,QAChB,eAAe;AAAA,QACf;AAAA,QAEA;AAAA,0BAAAD,OAAC,iBAAc,WAAW,QAAQ,2DAA2D,IAC3F,0BAAAA,OAAC,eAAY,aAAa,QAAQ,YAAY,KAAK,KAAK,eAAe,GACzE;AAAA,UACA,gBAAAC,QAAC,iBACE;AAAA,gCAAoB,WACnB,gBAAAA,QAAAF,YAAA,EACE;AAAA,8BAAAC,OAAC,cAAW,OAAM,SAAQ,0BAAY;AAAA,cACtC,gBAAAA,OAAC,cAAW,OAAM,YAAW,sBAAQ;AAAA,eACvC;AAAA,YAEF,gBAAAA,OAAC,cAAW,OAAM,gBAAe,0BAAY;AAAA,YAC7C,gBAAAA,OAAC,cAAW,OAAM,gBAAe,0BAAY;AAAA,aAC/C;AAAA;AAAA;AAAA,IACF;AAAA,IACC,SACC,gBAAAA,OAAC,OAAE,WAAU,wBAAwB,iBAAM;AAAA,KAE/C;AAEJ;AAaO,IAAM,iBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AACF,MAAM;AACJ,SACE,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,QAACE,QAAA,EAAM,SAAQ,YAAW,WAAU,2BAClC;AAAA,sBAAAH,OAACO,YAAA,EAAU,WAAU,WAAU;AAAA,MAAE;AAAA,MACvB,YAAY,MAAM;AAAA,OAC9B;AAAA,IACC,YACC,gBAAAP;AAAA,MAAC;AAAA;AAAA,QAEC,OAAO,QAAQ,OAAO,KAAK,IAAI;AAAA,QAC/B,UAAU,CAAC,QAAQ,SAAS,IAAI,SAAS,CAAC;AAAA,QAC1C,SAAS,UAAU,IAAI,eAAa;AAAA,UAClC,OAAO,SAAS,GAAG,SAAS;AAAA,UAC5B,OAAO,SAAS;AAAA,QAClB,EAAE;AAAA,QACF,aAAa,UAAU,yBAAyB;AAAA,QAChD,mBAAkB;AAAA,QAClB,WAAU;AAAA,QACV,WAAW,QAAQ,2DAA2D;AAAA;AAAA,MAVzE,YAAY,UAAU,MAAM;AAAA,IAWnC,IAEA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,aAAa,UAAU,QAAQ;AAAA,QACtC,UAAQ;AAAA,QACR,WAAU;AAAA,QACV,aAAY;AAAA;AAAA,IACd;AAAA,IAED,SACC,gBAAAA,OAAC,OAAE,WAAU,wBAAwB,iBAAM;AAAA,KAE/C;AAEJ;AAeO,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SACE,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,QAACE,QAAA,EAAM,SAAQ,UAAS,WAAU,2BAChC;AAAA,sBAAAH,OAACQ,QAAA,EAAM,WAAU,WAAU;AAAA,MAAE;AAAA,MACrB,YAAY,MAAM;AAAA,OAC5B;AAAA,IACC,YACC,gBAAAR;AAAA,MAAC;AAAA;AAAA,QAEC,OAAO,QAAQ,OAAO,KAAK,IAAI;AAAA,QAC/B,UAAU,CAAC,QAAQ,SAAS,IAAI,SAAS,CAAC;AAAA,QAC1C,SAAS,QAAQ,IAAI,aAAW;AAAA,UAC9B,OAAO,OAAO,GAAG,SAAS;AAAA,UAC1B,OAAO,OAAO;AAAA,QAChB,EAAE;AAAA,QACF,aACE,UAAU,uBACV,CAAC,cAAc,oBAAoB,0BACnC;AAAA,QAEF,mBAAkB;AAAA,QAClB,WAAU;AAAA,QACV,WAAW,QAAQ,2DAA2D;AAAA;AAAA,MAdzE,UAAU,QAAQ,MAAM,IAAI,UAAU;AAAA,IAe7C,IAEA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,aAAa,QAAQ,QAAQ;AAAA,QACpC,UAAQ;AAAA,QACR,WAAU;AAAA,QACV,aAAY;AAAA;AAAA,IACd;AAAA,IAED,SACC,gBAAAA,OAAC,OAAE,WAAU,wBAAwB,iBAAM;AAAA,KAE/C;AAEJ;;;ACnNO,IAAM,gBAAgB,CAAC,UAAiC;AAC7D,MAAI,CAAC,MAAM,KAAK,GAAG;AACjB,WAAO;AAAA,EACT;AACA,MAAI,CAAC,eAAe,KAAK,KAAK,GAAG;AAC/B,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEO,IAAM,gBAAgB,CAAC,UAAiC;AAC7D,MAAI,CAAC,MAAM,KAAK,GAAG;AACjB,WAAO;AAAA,EACT;AAGA,QAAM,aAAa,MAAM,QAAQ,OAAO,EAAE;AAE1C,MAAI,WAAW,SAAS,GAAG;AACzB,WAAO;AAAA,EACT;AACA,MAAI,WAAW,SAAS,IAAI;AAC1B,WAAO;AAAA,EACT;AAGA,QAAM,aAAa;AACnB,MAAI,CAAC,WAAW,KAAK,MAAM,KAAK,CAAC,GAAG;AAClC,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEO,IAAM,eAAe,CAAC,MAAc,YAAoB,WAA0B;AACvF,MAAI,CAAC,KAAK,KAAK,GAAG;AAChB,WAAO,GAAG,SAAS;AAAA,EACrB;AACA,MAAI,KAAK,KAAK,EAAE,SAAS,GAAG;AAC1B,WAAO,GAAG,SAAS;AAAA,EACrB;AACA,SAAO;AACT;AAEO,IAAM,mBAAmB,CAAC,aAAoC;AACnE,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AACA,MAAI,SAAS,SAAS,GAAG;AACvB,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEO,IAAM,0BAA0B,CAAC,UAAkB,oBAA2C;AACnG,MAAI,YAAY,aAAa,iBAAiB;AAC5C,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAGO,IAAM,0BAA0B,CAAC,SAAqD;AAC3F,QAAM,SAAiC,CAAC;AAExC,UAAQ,IAAI,0DAAmD,IAAI;AAGnE,QAAM,YAAY,KAAK,MAAM,KAAK,EAAE,MAAM,GAAG,KAAK,CAAC;AACnD,QAAM,YAAY,UAAU,CAAC,KAAK;AAClC,QAAM,WAAW,UAAU,MAAM,CAAC,EAAE,KAAK,GAAG,KAAK;AAEjD,UAAQ,IAAI,6CAAsC,EAAE,WAAW,SAAS,CAAC;AAEzE,QAAM,iBAAiB,aAAa,WAAW,YAAY;AAC3D,MAAI;AAAgB,WAAO,YAAY;AAGvC,QAAM,gBAAgB,WAAW,aAAa,UAAU,WAAW,IAAI;AACvE,MAAI;AAAe,WAAO,WAAW;AAGrC,QAAM,aAAa,cAAc,KAAK,SAAS,EAAE;AACjD,MAAI;AAAY,WAAO,QAAQ;AAG/B,QAAM,aAAa,cAAc,KAAK,SAAS,EAAE;AACjD,MAAI;AAAY,WAAO,QAAQ;AAG/B,MAAI,CAAC,KAAK,MAAM;AACd,WAAO,OAAO;AAAA,EAChB;AAGA,MAAI,KAAK,MAAM;AACb,QAAI,KAAK,SAAS,SAAS;AAAA,IAE3B,WAAW,KAAK,SAAS,YAAY;AAEnC,UAAI,CAAC,KAAK,YAAY;AACpB,eAAO,aAAa;AAAA,MACtB;AACA,UAAI,KAAK,UAAU;AACjB,eAAO,WAAW;AAAA,MACpB;AAAA,IACF,WAAW,KAAK,SAAS,kBAAkB,KAAK,SAAS,gBAAgB;AAEvE,UAAI,CAAC,KAAK,YAAY;AACpB,eAAO,aAAa;AAAA,MACtB;AACA,UAAI,CAAC,KAAK,UAAU;AAClB,eAAO,WAAW;AAAA,MACpB;AAAA,IACF;AAAA,EACF;AAGA,QAAM,gBAAgB,iBAAiB,KAAK,YAAY,EAAE;AAC1D,MAAI;AAAe,WAAO,WAAW;AAGrC,QAAM,uBAAuB,wBAAwB,KAAK,YAAY,IAAI,KAAK,mBAAmB,EAAE;AACpG,MAAI;AAAsB,WAAO,kBAAkB;AAEnD,UAAQ,IAAI,oDAA6C,MAAM;AAC/D,SAAO;AACT;AAGO,IAAM,0BAA0B,CAAC,SAAqD;AAC3F,QAAM,SAAiC,CAAC;AAExC,UAAQ,IAAI,0DAAmD,IAAI;AAGnE,QAAM,iBAAiB,aAAa,KAAK,aAAa,IAAI,YAAY;AACtE,MAAI;AAAgB,WAAO,YAAY;AAGvC,QAAM,gBAAgB,aAAa,KAAK,YAAY,IAAI,WAAW;AACnE,MAAI;AAAe,WAAO,WAAW;AAGrC,QAAM,aAAa,cAAc,KAAK,SAAS,EAAE;AACjD,MAAI;AAAY,WAAO,QAAQ;AAG/B,QAAM,aAAa,cAAc,KAAK,SAAS,EAAE;AACjD,MAAI;AAAY,WAAO,QAAQ;AAG/B,MAAI,CAAC,KAAK,MAAM;AACd,WAAO,OAAO;AAAA,EAChB;AAGA,MAAI,KAAK,MAAM;AACb,QAAI,KAAK,SAAS,SAAS;AAAA,IAE3B,WAAW,KAAK,SAAS,YAAY;AAEnC,UAAI,CAAC,KAAK,YAAY;AACpB,eAAO,aAAa;AAAA,MACtB;AACA,UAAI,KAAK,UAAU;AACjB,eAAO,WAAW;AAAA,MACpB;AAAA,IACF,WAAW,KAAK,SAAS,kBAAkB,KAAK,SAAS,gBAAgB;AAEvE,UAAI,CAAC,KAAK,YAAY;AACpB,eAAO,aAAa;AAAA,MACtB;AACA,UAAI,CAAC,KAAK,UAAU;AAClB,eAAO,WAAW;AAAA,MACpB;AAAA,IACF;AAAA,EACF;AAGA,UAAQ,IAAI,2DAAoD,MAAM;AACtE,SAAO;AACT;;;AF5MA,SAAS,cAAc,cAAAS,mBAAkB;AACzC,SAAS,wBAAAC,uBAAsB,yBAAAC,+BAA6B;AAmWhD,SAKE,YAAAC,YALF,OAAAC,QAKE,QAAAC,eALF;AA5TL,IAAM,WAAoC,CAAC;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AACF,MAAM;AACJ,QAAMC,KAAIL,sBAAqB;AAC/B,QAAM,KAAKC,wBAAsB;AACjC,QAAM,aAAa,SAAS;AAG5B,QAAM,CAAC,UAAU,WAAW,IAAIK,WAAuB,MAAM;AAC3D,YAAQ,IAAI,yDAAkD,YAAY,SAAS,IAAI;AACvF,QAAI,cAAc,MAAM;AACtB,YAAM,cAAc;AAAA,QAClB,WAAW,KAAK,aAAa;AAAA,QAC7B,UAAU,KAAK,YAAY;AAAA,QAC3B,OAAO,KAAK,SAAS;AAAA,QACrB,OAAO,KAAK,SAAS;AAAA;AAAA,QAErB,MAAM,KAAK,QAAoB;AAAA,QAC/B,YAAY,KAAK,YAAY,SAAS,KAAK;AAAA,QAC3C,UAAU,KAAK,UAAU,SAAS,KAAK;AAAA,MACzC;AACA,cAAQ,IAAI,qDAA8C,WAAW;AACrE,aAAO;AAAA,IACT,OAAO;AACL,YAAM,cAAc;AAAA,QAClB,MAAM;AAAA,QACN,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA;AAAA,QACN,UAAU;AAAA,QACV,UAAU;AAAA,QACV,iBAAiB;AAAA,QACjB,YAAY;AAAA,QACZ,UAAU;AAAA,MACZ;AACA,cAAQ,IAAI,uDAAgD,WAAW;AACvE,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAED,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAAS,KAAK;AAGtE,QAAM,CAAC,WAAW,YAAY,IAAIA,WAAgB,CAAC,CAAC;AACpD,QAAM,CAAC,SAAS,UAAU,IAAIA,WAAgB,CAAC,CAAC;AAChD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAC9D,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS,KAAK;AAG1D,QAAM,eAAe,yBAAyB,SAAY,uBAAuB;AAGjF,QAAM,oBAAoB,aAAa,SAAS;AAChD,QAAM,kBAAkB,aAAa,SAAS,WAAW,aAAa,SAAS;AAC/E,QAAM,oBAAoB,aAAa,SAAS,WAAW,aAAa,SAAS,cAAc,aAAa,SAAS,kBAAkB,aAAa,SAAS;AAC7J,QAAM,kBAAkB,aAAa,SAAS,WAAW,aAAa,SAAS,cAAc,aAAa,SAAS,kBAAkB,aAAa,SAAS;AAG3J,EAAAC,YAAU,MAAM;AACd,QAAI,cAAc,MAAM;AACtB,cAAQ,IAAI,6CAAsC,IAAI;AACtD,cAAQ,IAAI,kCAA2B,KAAK,MAAM,SAAS,OAAO,KAAK,IAAI;AAC3E,cAAQ,IAAI,wCAAiC,KAAK,YAAY,SAAS,OAAO,KAAK,UAAU;AAC7F,cAAQ,IAAI,sCAA+B,KAAK,UAAU,SAAS,OAAO,KAAK,QAAQ;AAGvF,YAAM,WAAW,KAAK;AACtB,YAAM,aAAyB,CAAC,SAAS,YAAY,gBAAgB,cAAc;AACnF,YAAM,OAAO,WAAW,SAAS,QAAQ,IAAI,WAAW;AAExD,YAAMC,YAAW;AAAA,QACf,WAAW,KAAK,aAAa;AAAA,QAC7B,UAAU,KAAK,YAAY;AAAA,QAC3B,OAAO,KAAK,SAAS;AAAA,QACrB,OAAO,KAAK,SAAS;AAAA,QACrB;AAAA,QACA,YAAY,KAAK,YAAY,SAAS,KAAK;AAAA,QAC3C,UAAU,KAAK,UAAU,SAAS,KAAK;AAAA,MACzC;AAEA,cAAQ,IAAI,8CAAuCA,SAAQ;AAC3D,cAAQ,IAAI,sCAA+BA,UAAS,MAAM,SAAS,OAAOA,UAAS,IAAI;AAEvF,kBAAYA,SAAQ;AACpB,gBAAU,CAAC,CAAC;AAEZ,cAAQ,IAAI,6DAAsD,IAAI;AACtE,cAAQ,IAAI,uCAAgCA,UAAS,IAAI;AAAA,IAC3D;AAAA,EACF,GAAG,CAAC,MAAM,UAAU,CAAC;AAGrB,EAAAD,YAAU,MAAM;AACd,QAAI,CAAC,cAAc,aAAa;AAC9B,YAAM,UAAuC,CAAC;AAG9C,YAAM,iBAAiB,YAAY,cAAc,YAAY,UAAU;AACvE,UAAI,CAAC,qBAAqB,gBAAgB;AACxC,gBAAQ,aAAa,eAAe,SAAS;AAAA,MAC/C;AAGA,YAAM,eAAe,YAAY,YAAY,YAAY,QAAQ;AACjE,UAAI,CAAC,mBAAmB,cAAc;AACpC,gBAAQ,WAAW,aAAa,SAAS;AAAA,MAC3C;AAEA,UAAI,OAAO,KAAK,OAAO,EAAE,SAAS,GAAG;AACnC,oBAAY,CAAC,UAAwB,EAAE,GAAG,MAAM,GAAG,QAAQ,EAAE;AAAA,MAC/D;AAAA,IACF;AAAA,EACF,GAAG,CAAC,aAAa,mBAAmB,iBAAiB,UAAU,CAAC;AAGhE,EAAAA,YAAU,MAAM;AACd,QAAI,CAAC,cAAc,mBAAmB;AACpC,0BAAoB,IAAI;AACxB,mBAAa,aAAa,EACvB,KAAK,CAAC,aAAkB;AACvB,YAAI,SAAS,WAAW,SAAS,MAAM;AACrC,uBAAa,SAAS,KAAK,aAAa,CAAC,CAAC;AAAA,QAC5C;AAAA,MACF,CAAC,EACA,MAAM,CAAC,UAAe;AACrB,gBAAQ,MAAM,4BAA4B,KAAK;AAAA,MACjD,CAAC,EACA,QAAQ,MAAM;AACb,4BAAoB,KAAK;AAAA,MAC3B,CAAC;AAAA,IACL,WAAW,CAAC,cAAc,aAAa,cAAc,aAAa,UAAU,IAAI;AAE9E,YAAM,iBAAiB,YAAY,cAAc,YAAY,UAAU;AACvE,mBAAa,CAAC;AAAA,QACZ,IAAI;AAAA,QACJ,MAAM,YAAY,UAAU,QAAQ;AAAA,MACtC,CAAC,CAAC;AACF,kBAAY,CAAC,UAAwB,EAAE,GAAG,MAAM,YAAY,gBAAgB,SAAS,KAAK,GAAG,EAAE;AAAA,IACjG;AAAA,EACF,GAAG,CAAC,mBAAmB,aAAa,UAAU,CAAC;AAG/C,EAAAA,YAAU,MAAM;AACd,QAAI,CAAC,cAAc,iBAAiB;AAClC,wBAAkB,IAAI;AACtB,YAAM,aAAa,oBAAqB,SAAiB,aAAc,aAAa,cAAc,aAAa,UAAU;AAEzH,cAAQ,IAAI,uDAAgD,YAAY,sBAAsB,iBAAiB;AAE/G,UAAI,YAAY;AACd,QAAAR,YAAW,qBAAqB,OAAO,UAAU,CAAC,EAC/C,KAAK,CAAC,aAAkB;AACvB,kBAAQ,IAAI,6CAAsC,QAAQ;AAC1D,cAAI,SAAS,WAAW,SAAS,MAAM;AACrC,kBAAM,cAAc,SAAS,KAAK,WAAW,SAAS,QAAQ,CAAC;AAC/D,oBAAQ,IAAI,wCAAiC,WAAW;AACxD,uBAAW,WAAW;AAAA,UACxB,OAAO;AACL,oBAAQ,KAAK,oDAA6C,QAAQ;AAClE,uBAAW,CAAC,CAAC;AAAA,UACf;AAAA,QACF,CAAC,EACA,MAAM,CAAC,UAAe;AACrB,kBAAQ,MAAM,8CAAuC,KAAK;AAC1D,qBAAW,CAAC,CAAC;AAAA,QACf,CAAC,EACA,QAAQ,MAAM;AACb,4BAAkB,KAAK;AAAA,QACzB,CAAC;AAAA,MACL,OAAO;AACL,gBAAQ,IAAI,qDAA8C;AAC1D,mBAAW,CAAC,CAAC;AACb,0BAAkB,KAAK;AAAA,MACzB;AAAA,IACF,WAAW,CAAC,cAAc,aAAa,UAAU;AAE/C,cAAQ,IAAI,+DAAwD,YAAY,QAAQ;AACxF,iBAAW,CAAC;AAAA,QACV,IAAI,YAAY;AAAA,QAChB,MAAM,YAAY,QAAQ,QAAQ;AAAA,MACpC,CAAC,CAAC;AACF,kBAAY,CAAC,UAAe,EAAE,GAAG,MAAM,UAAU,YAAY,UAAU,SAAS,KAAK,GAAG,EAAE;AAAA,IAC5F;AAAA,EACF,GAAG,CAAC,iBAAiB,mBAAoB,SAAiB,YAAY,aAAa,YAAY,aAAa,UAAU,UAAU,CAAC;AAGjI,EAAAQ,YAAU,MAAM;AACd,QAAI,CAAC,cAAc,qBAAsB,SAAgC,YAAY;AACnF,cAAQ,IAAI,8EAAuE;AACnF,kBAAY,CAAC,UAAwB,EAAE,GAAG,MAAM,UAAU,GAAG,EAAE;AAG/D,wBAAkB,IAAI;AACtB,MAAAR,YAAW,qBAAqB,OAAQ,SAAgC,UAAU,CAAC,EAChF,KAAK,CAAC,aAAkB;AACvB,gBAAQ,IAAI,2DAAoD,QAAQ;AACxE,YAAI,SAAS,WAAW,SAAS,MAAM;AACrC,gBAAM,cAAc,SAAS,KAAK,WAAW,SAAS,QAAQ,CAAC;AAC/D,qBAAW,WAAW;AAAA,QACxB,OAAO;AACL,qBAAW,CAAC,CAAC;AAAA,QACf;AAAA,MACF,CAAC,EACA,MAAM,CAAC,UAAe;AACrB,gBAAQ,MAAM,gDAAyC,KAAK;AAC5D,mBAAW,CAAC,CAAC;AAAA,MACf,CAAC,EACA,QAAQ,MAAM;AACb,0BAAkB,KAAK;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,EACF,GAAG,CAAE,SAAgC,YAAY,mBAAmB,UAAU,CAAC;AAE/E,QAAM,oBAAoB,CAAC,OAAe,UAA4B;AACpE,YAAQ,IAAI,sCAA+B,EAAE,OAAO,MAAM,CAAC;AAC3D,gBAAY,CAAC,UAAwB,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAGjE,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,IAC9C;AAAA,EACF;AAEA,QAAM,eAAe,MAAe;AAClC,QAAI;AAEJ,QAAI,YAAY;AACd,kBAAY,wBAAwB,QAA8B;AAAA,IACpE,OAAO;AACL,kBAAY,wBAAwB,QAA8B;AAAA,IACpE;AAEA,YAAQ,IAAI,0CAAmC,SAAS;AACxD,YAAQ,IAAI,kDAA2C,QAAQ;AAE/D,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOU,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,YAAQ,IAAI,mDAA4C;AAExD,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,QAAI,CAAC,sBAAsB;AACzB,8BAAwB,IAAI;AAAA,IAC9B;AAEA,QAAI;AACF,UAAI;AAEJ,UAAI,YAAY;AACd,cAAM,aAAa;AACnB,qBAAa;AAAA,UACX,IAAI,MAAM,MAAM;AAAA,UAChB,WAAW,WAAW,UAAU,KAAK;AAAA,UACrC,UAAU,WAAW,SAAS,KAAK;AAAA,UACnC,OAAO,WAAW,MAAM,KAAK,EAAE,YAAY;AAAA,UAC3C,OAAO,WAAW,MAAM,KAAK;AAAA,UAC7B,MAAM,WAAW;AAAA,UACjB,YAAY,WAAW,aAAa,OAAO,WAAW,UAAU,IAAI;AAAA,UACpE,UAAU,WAAW,WAAW,OAAO,WAAW,QAAQ,IAAI;AAAA,QAChE;AAAA,MACF,OAAO;AACL,cAAM,aAAa;AACnB,qBAAa;AAAA,UACX,WAAW,WAAW,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,CAAC,KAAK;AAAA,UACnD,UAAU,WAAW,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,KAAK;AAAA,UAClE,OAAO,WAAW,MAAM,KAAK,EAAE,YAAY;AAAA,UAC3C,OAAO,WAAW,MAAM,KAAK;AAAA,UAC7B,MAAM,WAAW;AAAA,UACjB,UAAU,WAAW;AAAA,UACrB,YAAY,WAAW,aAAa,OAAO,WAAW,UAAU,IAAI;AAAA,UACpE,UAAU,WAAW,WAAW,OAAO,WAAW,QAAQ,IAAI;AAAA,QAChE;AAAA,MACF;AAEA,cAAQ,IAAI,uDAAgD,UAAU;AACtE,cAAQ,IAAI,yCAAkC,aAAa,oBAAoB,iBAAiB;AAChG,cAAQ,IAAI,yCAAkC,OAAO,KAAK,UAAU,CAAC;AACrE,YAAM,OAAO,UAAU;AACvB,cAAQ,IAAI,wDAAmD;AAAA,IAEjE,SAAS,OAAY;AACnB,cAAQ,MAAM,6CAAwC,KAAK;AAAA,IAE7D,UAAE;AACA,UAAI,CAAC,sBAAsB;AACzB,gCAAwB,KAAK;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,YAAQ,IAAI,2CAAoC;AAChD,QAAI,UAAU;AACZ,eAAS;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAN,OAAC,UAAK,UAAU,cACd,0BAAAA,OAAC,QACC,0BAAAC,QAAC,eAAY,WAAU,iBAErB;AAAA,oBAAAA,QAAC,SACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CACX,uBAAaE,GAAE,yBAAyB,IAAIA,GAAE,4BAA4B,GAC7E;AAAA,MACF,gBAAAD,QAAC,SAAI,WAAU,yCACZ;AAAA,qBACC,gBAAAA,QAAAF,YAAA,EACE;AAAA,0BAAAC;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAOE,GAAE,kBAAkB;AAAA,cAC3B,OAAQ,SAAiB;AAAA,cACzB,UAAU,CAAC,UAAU,kBAAkB,aAAa,KAAK;AAAA,cACzD,OAAO,OAAO;AAAA,cACd,UAAU;AAAA,cACV,UAAQ;AAAA,cACR,aAAaA,GAAE,6BAA6B;AAAA;AAAA,UAC9C;AAAA,UAEA,gBAAAF;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,OAAOE,GAAE,iBAAiB;AAAA,cAC1B,OAAQ,SAAiB;AAAA,cACzB,UAAU,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,cACxD,OAAO,OAAO;AAAA,cACd,UAAU;AAAA,cACV,UAAQ;AAAA,cACR,aAAaA,GAAE,4BAA4B;AAAA;AAAA,UAC7C;AAAA,WACF,IAEA,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAOE,GAAE,iBAAiB;AAAA,YAC1B,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,QAAQ,KAAK;AAAA,YACpD,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,UAAQ;AAAA,YACR,aAAaA,GAAE,4BAA4B;AAAA;AAAA,QAC7C;AAAA,QAGF,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAOE,GAAE,cAAc;AAAA,YACvB,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,SAAS,KAAK;AAAA,YACrD,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,UAAQ;AAAA,YACR,MAAK;AAAA,YACL,aAAaA,GAAE,yBAAyB;AAAA;AAAA,QAC1C;AAAA,QAEA,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAOE,GAAE,cAAc;AAAA,YACvB,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,SAAS,KAAK;AAAA,YACrD,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,UAAQ;AAAA,YACR,aAAaA,GAAE,yBAAyB;AAAA;AAAA,QAC1C;AAAA,QAEC,QAAQ,IAAI,yCAAmC,SAAiB,MAAM,aAAa,QAAQ;AAAA,QAC5F,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU;AACnB,sBAAQ,IAAI,wCAAiC,KAAK;AAClD,gCAAkB,QAAQ,KAAK;AAAA,YACjC;AAAA,YACA,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,iBAAiB,aAAa;AAAA;AAAA,QAChC;AAAA,SACF;AAAA,OACA;AAAA,KAGE,qBAAqB,oBACrB,gBAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CACX,UAAAE,GAAE,wBAAwB,GAC7B;AAAA,MACF,gBAAAD,QAAC,SAAI,WAAU,yCACZ;AAAA,6BACC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,cAAc,KAAK;AAAA,YAC1D;AAAA,YACA,SAAS;AAAA,YACT,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,WAAW;AAAA,YACX;AAAA;AAAA,QACF;AAAA,QAGD,mBACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,YACxD;AAAA,YACA,SAAS;AAAA,YACT,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,WAAW;AAAA,YACX;AAAA,YACA,YAAa,SAAiB;AAAA,YAC9B;AAAA;AAAA,QACF;AAAA,SAEJ;AAAA,OACA;AAAA,IAID,CAAC,cACA,gBAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CACX,UAAAE,GAAE,kBAAkB,GACvB;AAAA,MACF,gBAAAD,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAOE,GAAE,iBAAiB;AAAA,YAC1B,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,YACxD,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,UAAQ;AAAA,YACR,MAAK;AAAA,YACL,aAAaA,GAAE,4BAA4B;AAAA,YAC3C,oBAAoB;AAAA;AAAA,QACtB;AAAA,QAEA,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAOE,GAAE,wBAAwB;AAAA,YACjC,OAAQ,SAAiB;AAAA,YACzB,UAAU,CAAC,UAAU,kBAAkB,mBAAmB,KAAK;AAAA,YAC/D,OAAO,OAAO;AAAA,YACd,UAAU;AAAA,YACV,MAAK;AAAA,YACL,aAAaA,GAAE,8BAA8B;AAAA,YAC7C,oBAAoB;AAAA;AAAA,QACtB;AAAA,SACF;AAAA,OACA;AAAA,IAID,cAAc,QACb,gBAAAD,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,0CACX,UAAAE,GAAE,wBAAwB,GAC7B;AAAA,MACF,gBAAAD,QAAC,SAAI,WAAU,iDACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAA,QAAC,UAAK,WAAU,6BAA6B;AAAA,YAAAC,GAAE,aAAa;AAAA,YAAE;AAAA,aAAC;AAAA,UAC/D,gBAAAF,OAAC,UAAK,WAAU,iEACb,UAAAE,GAAE,SAAS,KAAK,IAAI,EAAS,GAChC;AAAA,WACF;AAAA,QACA,gBAAAD,QAAC,SACC;AAAA,0BAAAA,QAAC,UAAK,WAAU,6BAA6B;AAAA,YAAAC,GAAE,eAAe;AAAA,YAAE;AAAA,aAAC;AAAA,UACjE,gBAAAF,OAAC,UAAK,WAAW,uCACf,KAAK,WACD,gCACA,yBACN,IACG,eAAK,WAAWE,GAAE,eAAe,IAAIA,GAAE,iBAAiB,GAC3D;AAAA,WACF;AAAA,QACC,KAAK,YACJ,gBAAAD,QAAC,SACC;AAAA,0BAAAA,QAAC,UAAK,WAAU,6BAA6B;AAAA,YAAAC,GAAE,iBAAiB;AAAA,YAAE;AAAA,aAAC;AAAA,UACnE,gBAAAF,OAAC,UAAK,WAAU,sBAAsB,eAAK,SAAS,MAAK;AAAA,WAC3D;AAAA,QAED,KAAK,UACJ,gBAAAC,QAAC,SACC;AAAA,0BAAAA,QAAC,UAAK,WAAU,6BAA6B;AAAA,YAAAC,GAAE,eAAe;AAAA,YAAE;AAAA,aAAC;AAAA,UACjE,gBAAAF,OAAC,UAAK,WAAU,sBAAsB,eAAK,OAAO,MAAK;AAAA,WACzD;AAAA,QAEF,gBAAAC,QAAC,SACC;AAAA,0BAAAA,QAAC,UAAK,WAAU,6BAA6B;AAAA,YAAAC,GAAE,SAAS;AAAA,YAAE;AAAA,aAAC;AAAA,UAC3D,gBAAAF,OAAC,UAAK,WAAU,sBACb,cAAI,KAAK,KAAK,SAAS,EAAE,mBAAmB,GAC/C;AAAA,WACF;AAAA,QACC,KAAK,eACJ,gBAAAC,QAAC,SACC;AAAA,0BAAAA,QAAC,UAAK,WAAU,6BAA6B;AAAA,YAAAC,GAAE,kBAAkB;AAAA,YAAE;AAAA,aAAC;AAAA,UACpE,gBAAAF,OAAC,UAAK,WAAU,sBACb,cAAI,KAAK,KAAK,WAAW,EAAE,mBAAmB,GACjD;AAAA,WACF;AAAA,SAEJ;AAAA,OACA;AAAA,IAID,OAAO,KAAK,MAAM,EAAE,SAAS,KAChC,gBAAAA,OAAC,SAAI,WAAU,wDACb,0BAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,UAAK,WAAU,2BAA0B,0BAAE,GAC9C;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,uCACX,UAAAE,GAAE,2BAA2B,GAChC;AAAA,QACA,gBAAAF,OAAC,SAAI,WAAU,gCACb,0BAAAA,OAAC,QAAG,WAAU,mCACX,iBAAO,QAAQ,MAAM,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,MACxC,gBAAAC,QAAC,QACC;AAAA,0BAAAA,QAAC,YAAQ;AAAA,kBAAM,OAAO,CAAC,EAAE,YAAY,IAAI,MAAM,MAAM,CAAC;AAAA,YAAE;AAAA,aAAC;AAAA,UAAS;AAAA,UAAE;AAAA,aAD7D,KAET,CACD,GACH,GACF;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAIE,gBAAAA,QAAC,SAAI,WAAU,4CACjB;AAAA,sBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAEV;AAAA,4BAAAD,OAACO,KAAA,EAAE,WAAU,gBAAe;AAAA,YAC3B,GAAG,gBAAgB;AAAA;AAAA;AAAA,MACtB;AAAA,MACA,gBAAAN;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU;AAAA,UAEV;AAAA,4BAAAD,OAACQ,OAAA,EAAK,WAAU,gBAAe;AAAA,YAC9B,eACI,aAAaN,GAAE,kBAAkB,IAAIA,GAAE,kBAAkB,IACzD,aAAaA,GAAE,oBAAoB,IAAIA,GAAE,oBAAoB;AAAA;AAAA;AAAA,MAEpE;AAAA,OACE;AAAA,KACF,GACF,GACF;AAEJ;;;ADjmBA,SAAS,wBAAAO,6BAA4B;AAkD/B,SAEI,OAAAC,QAFJ,QAAAC,eAAA;AAxCC,IAAM,gBAA8C,CAAC;AAAA,EAC1D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,sBAAqB;AAC/B,QAAM,CAAC,cAAc,eAAe,IAAII,WAAS,KAAK;AAEtD,QAAM,aAAa,OAAO,aAAoC;AAC5D,QAAI;AACF,sBAAgB,IAAI;AAIpB,UAAI,eAAe;AACjB,cAAM,cAAc,QAA2B;AAAA,MACjD;AAGA,mBAAa,KAAK;AAAA,IAEpB,SAAS,OAAO;AACd,cAAQ,MAAM,yCAAoC,KAAK;AACvD,UAAI,SAAS;AACX,gBAAQ,iBAAiB,QAAQ,MAAM,UAAU,uBAAuB;AAAA,MAC1E;AAAA,IACF,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAH,OAAC,UAAO,MAAY,cAClB,0BAAAC,QAAC,iBAAc,WAAU,8CACvB;AAAA,oBAAAD,OAAC,gBAAa,WAAU,sCACtB,0BAAAA,OAAC,eAAY,WAAU,uCACpB,UAAAE,GAAE,YAAY,GACjB,GACF;AAAA,IAEA,gBAAAF,OAAC,SAAI,WAAU,OACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAK;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,UAAU;AAAA,QACV;AAAA,QACA;AAAA;AAAA,IACF,GACF;AAAA,KACF,GACF;AAEJ;;;AIhFA;AAAA,EACE,QAAAI;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP;AAAA,EACE,OAAAC;AAAA,EACA,QAAAC;AAAA,EAEA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,OAGK;AA6EG,SAKE,OAAAC,QALF,QAAAC,eAAA;AAlEH,SAAS,QAAQ;AAAA,EACtB;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,UAAU,CAAC,QAAQ,MAAM;AAAA,EACzB,YAAY;AACd,GAAiB;AACf,QAAM,mBAAmB,CAAC,QAAgB,WAAmB;AAC3D,YAAQ,IAAI,+CAAwC,EAAE,QAAQ,QAAQ,KAAK,CAAC;AAC5E,iBAAa,QAAQ,MAAM;AAAA,EAC7B;AAEA,QAAM,oBAAoB,CAAC,SAAiB;AAC1C,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,qBAAqB,CAAC,SAAiB;AAC3C,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,sBAAsB,CAAC,aAAsB;AACjD,QAAI,UAAU;AACZ,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAEA,QAAM,uBAAuB,CAAC,aAAsB;AAClD,WAAO,WAAW,WAAW;AAAA,EAC/B;AAEA,QAAMC,eAAa,CAAC,eAAuB;AACzC,WAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,MACtD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,qBAAqB,CAAC,WAAmB;AAC7C,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eACE,gBAAAD;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,iBAAiB,QAAQ,KAAK,EAAE;AAAA,YAE/C;AAAA,8BAAAO,OAACN,OAAA,EAAI,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAElC;AAAA,MAEJ,KAAK;AACH,eACE,gBAAAO;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,iBAAiB,QAAQ,KAAK,EAAE;AAAA,YAE/C;AAAA,8BAAAO,OAACL,QAAA,EAAK,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAEnC;AAAA,MAEJ,KAAK;AACH,eACE,gBAAAK;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,iBAAiB,YAAY,KAAK,EAAE;AAAA,YACpD;AAAA;AAAA,QAED;AAAA,MAEJ,KAAK;AACH,eACE,gBAAAO;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,iBAAiB,cAAc,KAAK,EAAE;AAAA,YACtD;AAAA;AAAA,QAED;AAAA,MAEJ;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAO,OAACT,QAAA,EAAK,WAAU,kDACd,0BAAAS,OAACR,eAAA,EAAY,WACX,0BAAAS,QAAC,SAAI,WAAU,qCAEb;AAAA,oBAAAD,OAAC,SAAI,WAAU,UACb,0BAAAA,OAAC,SAAI,WAAU,2BACb,0BAAAC,QAAC,SAAI,WAAU,UACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,gCACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,2CACX,aAAG,KAAK,aAAa,EAAE,IAAI,KAAK,YAAY,EAAE,GAAG,KAAK,KAAK,KAAK,QAAQ,gBAC3E;AAAA,QACA,gBAAAA,OAAC,SAAI,WAAW,8EAA8E,kBAAkB,KAAK,IAAI,CAAC,IACvH,6BAAmB,KAAK,IAAI,GAC/B;AAAA,QACA,gBAAAA,OAAC,SAAI,WAAW,8EAA8E,oBAAoB,KAAK,QAAQ,CAAC,IAC7H,+BAAqB,KAAK,QAAQ,GACrC;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,uDACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACH,OAAA,EAAK,WAAU,WAAU;AAAA,UAC1B,gBAAAG,OAAC,UAAM,eAAK,OAAM;AAAA,WACpB;AAAA,QACC,KAAK,SACJ,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACF,QAAA,EAAM,WAAU,WAAU;AAAA,UAC3B,gBAAAE,OAAC,UAAM,eAAK,OAAM;AAAA,WACpB;AAAA,QAED,KAAK,UACJ,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACJ,QAAA,EAAM,WAAU,WAAU;AAAA,UAC3B,gBAAAI,OAAC,UAAM,eAAK,OAAO,MAAK;AAAA,UACvB,KAAK,OAAO,YACX,gBAAAC,QAAC,UAAK,WAAU,sBAAqB;AAAA;AAAA,YAAG,KAAK,OAAO,SAAS;AAAA,aAAK;AAAA,WAEtE;AAAA,QAEF,gBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACD,YAAA,EAAS,WAAU,WAAU;AAAA,UAC9B,gBAAAE,QAAC,UAAK;AAAA;AAAA,YAAQC,aAAW,OAAO,KAAK,cAAc,WAAW,KAAK,YAAY,KAAK,UAAU,YAAY,CAAC;AAAA,aAAE;AAAA,WAC/G;AAAA,SACF;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,2DACb;AAAA,wBAAAA,QAAC,UAAK;AAAA;AAAA,UAAa,KAAK,cAAcC,aAAW,OAAO,KAAK,gBAAgB,WAAW,KAAK,cAAc,KAAK,YAAY,YAAY,CAAC,IAAI;AAAA,WAAQ;AAAA,QACrJ,gBAAAD,QAAC,UAAK;AAAA;AAAA,UAAiB,KAAK,gBAAgB,QAAQ;AAAA,WAAK;AAAA,SAC3D;AAAA,OACF,GACF,GACF;AAAA,IAGC,eACC,gBAAAD,OAAC,SAAI,WAAU,2BACZ,kBAAQ,IAAI,CAAC,WAAW;AAEvB,UAAI,WAAW,cAAc,KAAK;AAAU,eAAO;AACnD,UAAI,WAAW,gBAAgB,CAAC,KAAK;AAAU,eAAO;AAEtD,aACE,gBAAAA,OAAC,SACE,6BAAmB,MAAM,KADlB,MAEV;AAAA,IAEJ,CAAC,GACH;AAAA,KAEJ,GACF,GACF;AAEJ;;;ACnNA,SAAS,UAAAG,gBAAc;AACvB,SAAS,QAAAC,OAAM,YAAAC,iBAAgB;AA8BrB,SAIE,OAAAC,QAJF,QAAAC,eAAA;AAhBH,SAAS,eAAe;AAAA,EAC7B,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,YAAY;AACd,GAAwB;AACtB,SACE,gBAAAD,OAAC,SAAI,WAAW,oCAAoC,SAAS,IAE3D,0BAAAC,QAAC,SAAI,WAAU,cACZ;AAAA,wBACC,gBAAAA;AAAA,MAACJ;AAAA,MAAA;AAAA,QACC,SAAS;AAAA,QACT,WAAU;AAAA,QAEV;AAAA,0BAAAG,OAACD,WAAA,EAAS,WAAU,gBAAe;AAAA,UAClC;AAAA;AAAA;AAAA,IACH;AAAA,IAGD,iBACC,gBAAAE;AAAA,MAACJ;AAAA,MAAA;AAAA,QACC,SAAS;AAAA,QACT,WAAU;AAAA,QAEV;AAAA,0BAAAG,OAACF,OAAA,EAAK,WAAU,gBAAe;AAAA,UAC9B;AAAA;AAAA;AAAA,IACH;AAAA,KAEJ,GACF;AAEJ;;;AC7CA,SAAS,aAAAI,YAAW,SAAAC,QAAO,UAAAC,gBAAc;AAqBjC,gBAAAC,QAME,QAAAC,eANF;AAVD,IAAM,wBAA8D,CAAC;AAAA,EAC1E;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SACE,gBAAAA,QAAC,SAAI,WAAU,8BACb;AAAA,oBAAAD,OAAC,SAAI,WAAU,sCACb,0BAAAA,OAAC,QAAG,WAAU,qCAAoC,gCAAkB,GACtE;AAAA,IAEA,gBAAAC,QAAC,SAAI,WAAU,uBAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+DACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,qCAAoC,4BAAc;AAAA,UAChE,gBAAAA,OAAC,OAAE,WAAU,yBACV,eAAK,WACF,oDACA,2DAEN;AAAA,WACF;AAAA,QAEA,gBAAAA,OAAC,SAAI,WAAU,cACZ,eAAK,WACJ,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAS;AAAA,YACT,SAAQ;AAAA,YACR,UAAU;AAAA,YACV,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACF,QAAA,EAAM,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAEpC,IAEA,gBAAAG;AAAA,UAAC;AAAA;AAAA,YACC,SAAS;AAAA,YACT,SAAQ;AAAA,YACR,UAAU;AAAA,YACV,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACH,YAAA,EAAU,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAExC,GAEJ;AAAA,SACF;AAAA,MAGA,gBAAAI,QAAC,SAAI,WAAU,oFACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,oCAAmC,4BAAc;AAAA,UAC/D,gBAAAA,OAAC,OAAE,WAAU,wBAAuB,yHAEpC;AAAA,WACF;AAAA,QAEA,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAS;AAAA,YACT,SAAQ;AAAA,YACR,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACD,UAAA,EAAO,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAErC;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AlB9EA;AAAA,EACE,QAAQG;AAAA,OAEH;AAEP,SAAS,eAAAC,cAAa,wBAAAC,6BAA4B;AA4H5C,SACE,OAAAC,QADF,QAAAC,eAAA;AA/EC,IAAMC,SAA8B,CAAC;AAAA;AAAA,EAE1C;AAAA,EACA,UAAU,CAAC;AAAA,EACX,kBAAkB,MAAM;AAAA,EAAC;AAAA,EACzB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,eAAe,MAAM;AAAA,EAAC;AAAA,EACtB,eAAe,MAAM;AAAA,EAAC;AAAA,EACtB,SAAS,MAAM;AAAA,EAAC;AAAA;AAAA,EAGhB,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AAGJ,QAAM,EAAE,eAAe,IAAIJ,aAAY,WAAW;AAGlD,QAAMK,KAAIJ,sBAAqB;AAG/B,UAAQ,IAAI,8CAAuC;AAAA,IACjD,SAAS,CAAC,CAAC;AAAA,IACX,YAAY,MAAM,OAAO,UAAU;AAAA,IACnC,OAAO,MAAM;AAAA,IACb,MAAM,MAAM;AAAA,IACZ;AAAA,EACF,CAAC;AAGD,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX,OAAO;AACL,cAAQ,IAAI,sCAAsC;AAAA,IACpD;AAAA,EACF;AAGA,QAAM,gBAAgB,MAAM;AAC1B,YAAQ,IAAI,sDAAsD;AAAA,EACpE;AAGA,QAAM,QAAQ,MAAM,SAAS,CAAC;AAC9B,QAAM,aAAa,MAAM,SAAS;AAClC,QAAM,cAAc,MAAM,QAAQ;AAClC,QAAM,aAAa,MAAM,cAAc;AACvC,QAAM,QAAQ,MAAM,SAAS;AAE7B,UAAQ,IAAI,+CAAwC;AAAA,IAClD,YAAY,MAAM;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAGD,QAAM,0BAA0BK,QAAM,YAAY,iBAAiB,CAAC,eAAe,CAAC;AACpF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,QAAM,YAAY,QAAQ,CAAC,MAAM,CAAC;AAEzD,SACE,gBAAAH,QAAC,SAAI,WAAW,wBAAwB,SAAS,IAE/C;AAAA,oBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA,eAAe,iBAAiB;AAAA,UAChC,UAAU;AAAA,UACV,OAAO;AAAA,UACP;AAAA,UACA;AAAA;AAAA,MACF;AAAA,MAGA,gBAAAA,OAACK,QAAA,EAAK,WAAU,2BACd,0BAAAL,OAACM,eAAA,EAAY,WAAU,aACrB,0BAAAN,OAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,iBAAiB;AAAA,UACjB,gBAAgB;AAAA,UAChB,gBAAgB;AAAA;AAAA,MAClB,GACF,GACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,uBACZ,gBAAM,SAAS,IACd,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,cAAc;AAAA,QACd,QAAQ,QAAQ,UAAU;AAAA,QAC1B,WAAW,QAAQ,aAAa;AAAA,QAChC,QAAQ;AAAA;AAAA,IACV,IAEA,gBAAAA;AAAA,MAACO;AAAA,MAAA;AAAA,QACC,MAAMV;AAAA,QACN,OAAOM,GAAE,kBAAkB;AAAA,QAC3B,aACE,QAAQ,UAAU,QAAQ,KAAK,QAAQ,OACnCA,GAAE,6BAA6B,IAC/BA,GAAE,qBAAqB;AAAA;AAAA,IAE/B,GAEJ;AAAA,IAGC,MAAM,SAAS,KAAK,aAAa,SAChC,gBAAAH,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAACQ;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ;AAEA,IAAO,gBAAQN;;;AmB/Mf,OAAOO,aAAW;AAClB;AAAA,EACE,cAAAC;AAAA,EACA,cAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,OACK;;;ACPP;AAAA,EACE,QAAAC;AAAA,EAEA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,OAMK;AACP;AAAA,EACE,aAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,OACK;AACP,SAAS,8BAA8B;AAuB7B,SACE,OAAAC,QADF,QAAAC,eAAA;AAbH,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAsB;AACpB,QAAMC,KAAI,uBAAuB;AAEjC,SACE,gBAAAF,OAACR,QAAA,EACC,0BAAAS,QAACR,cAAA,EAAW,WAAU,6DACpB;AAAA,oBAAAO,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAACP,aAAA,EAAU,WAAU,2BACnB;AAAA,sBAAAM,OAACJ,YAAA,EAAU,WAAU,WAAU;AAAA,MAC9BM,GAAE,OAAO;AAAA,MAAE;AAAA,MAAG;AAAA,MAAa;AAAA,OAC9B,GACF;AAAA,IACA,gBAAAD,QAAC,SAAI,WAAU,+BAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,qDACb;AAAA,wBAAAD;AAAA,UAACL;AAAA,UAAA;AAAA,YACC,SAAS,aAAa,SAAS,YAAY;AAAA,YAC3C,MAAK;AAAA,YACL,SAAS,MAAM,iBAAiB,MAAM;AAAA,YACtC,WAAU;AAAA,YAEV,0BAAAK,OAACH,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,QAC5B;AAAA,QACA,gBAAAG;AAAA,UAACL;AAAA,UAAA;AAAA,YACC,SAAS,aAAa,UAAU,YAAY;AAAA,YAC5C,MAAK;AAAA,YACL,SAAS,MAAM,iBAAiB,OAAO;AAAA,YACvC,WAAU;AAAA,YAEV,0BAAAK,OAACF,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,QAC5B;AAAA,SACF;AAAA,MAGA,gBAAAG,QAACN,UAAA,EAAO,SAAS,aACf;AAAA,wBAAAK,OAACD,OAAA,EAAK,WAAU,gBAAe;AAAA,QAC9BG,GAAE,WAAW;AAAA,SAChB;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC5EA;AAAA,EACE,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AAyBH,qBAAAC,YAIM,OAAAC,QADF,QAAAC,eAHJ;AAZG,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAuB;AACrB,QAAM,qBAAqB,CAAC,UAAkB;AAC5C,UAAM,SAAS,UAAU,QAAQ,SAAY;AAC7C,oBAAgB,EAAE,GAAG,SAAS,OAAO,CAAC;AAAA,EACxC;AAEA,SACE,gBAAAA,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACR;AAAA,QAAA;AAAA,UACC,aAAY;AAAA,UACZ,OAAO,QAAQ,UAAU;AAAA,UACzB,UAAU,CAACU,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,UAC9C,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC;AAAA,MAACR;AAAA,MAAA;AAAA,QACC,OAAO,QAAQ,UAAU;AAAA,QACzB,eAAe;AAAA,QAEf;AAAA,0BAAAO,OAACJ,iBAAA,EAAc,WAAU,kBACvB,0BAAAI,OAACH,eAAA,EAAY,aAAY,UAAS,GACpC;AAAA,UACA,gBAAAI,QAACP,iBAAA,EACC;AAAA,4BAAAM,OAACL,cAAA,EAAW,OAAM,OAAM,wBAAU;AAAA,YAClC,gBAAAK,OAACL,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,YACjC,gBAAAK,OAACL,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,aACvC;AAAA;AAAA;AAAA,IACF;AAAA,KAGE,QAAQ,UAAU,QAAQ,WAAW,kBACrC,gBAAAK;AAAA,MAACF;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,KAEJ;AAEJ;;;ACvFA;AAAA,EACE,QAAAK;AAAA,EACA,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AACP;AAAA,EACE,aAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,OAAAC;AAAA,OACK;AAeC,SACE,OAAAC,QADF,QAAAC,eAAA;AAPD,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AACF,GAAoB;AAClB,MAAI,QAAQ,WAAW,GAAG;AACxB,WACE,gBAAAD,OAACX,QAAA,EACC,0BAAAY,QAACX,eAAA,EAAY,WAAU,qDACrB;AAAA,sBAAAU,OAACL,aAAA,EAAU,WAAU,wCAAuC;AAAA,MAC5D,gBAAAK,OAAC,QAAG,WAAU,4BAA2B,8BAAgB;AAAA,MACzD,gBAAAA,OAAC,OAAE,WAAU,WAAU,oDAAsC;AAAA,OAC/D,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAC,QAACZ,QAAA,EAAqB,WAAU,qCAC9B;AAAA,oBAAAW,OAACT,cAAA,EACC,0BAAAU,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAACT,aAAA,EAAU,WAAU,2BACnB;AAAA,wBAAAQ,OAACL,aAAA,EAAU,WAAU,WAAU;AAAA,QAC9B,OAAO;AAAA,QACP,OAAO,aACN,gBAAAK;AAAA,UAACN;AAAA,UAAA;AAAA,YACC,QAAO;AAAA,YACP,SAAQ;AAAA,YACR,WAAU;AAAA;AAAA,QACZ;AAAA,SAEJ;AAAA,MACA,gBAAAM;AAAA,QAACN;AAAA,QAAA;AAAA,UACC,QAAQ,OAAO,WAAW,WAAW;AAAA,UACrC,SAAQ;AAAA;AAAA,MACV;AAAA,OACF,GACF;AAAA,IACA,gBAAAO,QAACX,eAAA,EAAY,WAAU,aAEpB;AAAA,aAAO,WACN,gBAAAW,QAAC,SAAI,WAAU,0BACb;AAAA,wBAAAD,OAACJ,SAAA,EAAO,WAAU,8CAA6C;AAAA,QAC/D,gBAAAI,OAAC,SAAI,WAAU,4CACZ,iBAAO,SACV;AAAA,SACF;AAAA,MAID,OAAO,SACN,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAACH,QAAA,EAAM,WAAU,yBAAwB;AAAA,QACzC,gBAAAG,OAAC,SAAI,WAAU,4CACZ,iBAAO,OACV;AAAA,SACF;AAAA,MAID,OAAO,eACN,gBAAAA,OAAC,SAAI,WAAU,4CACZ,iBAAO,aACV;AAAA,MAIF,gBAAAC,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,QAC3B,IAAI,KAAK,OAAO,SAAS,EAAE,mBAAmB;AAAA,SAC1D;AAAA,MAGA,gBAAAA,QAAC,SAAI,WAAU,uBACb;AAAA,wBAAAA;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,eAAe,QAAQ,OAAO,EAAE;AAAA,YAC/C,WAAU;AAAA,YAEV;AAAA,8BAAAO,OAACD,OAAA,EAAI,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAElC;AAAA,QACA,gBAAAE;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,eAAe,QAAQ,OAAO,EAAE;AAAA,YAC/C,WAAU;AAAA,YAEV;AAAA,8BAAAO,OAACF,QAAA,EAAK,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAEnC;AAAA,QAEC,CAAC,OAAO,aACP,gBAAAE;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,eAAe,OAAO,WAAW,YAAY,UAAU,OAAO,EAAE;AAAA,YAC/E,WAAW,UAAU,OAAO,WAAW,oIAAoI,+IAA+I;AAAA,YAEzT,iBAAO,WAAW,YAAY;AAAA;AAAA,QACjC;AAAA,SAEJ;AAAA,OACF;AAAA,OArFS,OAAO,EAsFlB,CACD,GACH;AAEJ;;;ACpIA,OAAOS,aAAW;AAYlB,SAAS,OAAAC,OAAK,QAAAC,QAAM,WAAAC,WAAS,eAAAC,eAAa,gBAAAC,eAAc,aAAAC,mBAAiB;AACzE,SAAS,0BAAAC,yBAAwB,yBAAAC,+BAA6B;AAyBpD,SAuLc,YAAAC,YAtLZ,OAAAC,QADF,QAAAC,eAAA;AAfH,SAAS,YAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAqB;AACnB,QAAMC,KAAIL,wBAAuB;AACjC,QAAM,KAAKC,wBAAsB;AACjC,QAAM,CAAC,gBAAgB,iBAAiB,IAAIK,QAAM,SAAwB,IAAI;AAE9E,MAAI,QAAQ,WAAW,GAAG;AACxB,WACE,gBAAAH,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,qBACrB,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,OAACJ,aAAA,EAAU,WAAU,wCAAuC;AAAA,MAC5D,gBAAAI,OAAC,QAAG,WAAU,4BAA4B,UAAAE,GAAE,oBAAoB,GAAE;AAAA,MAClE,gBAAAF,OAAC,OAAE,WAAU,WACV,UAAAE,GAAE,6BAA6B,GAClC;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,QAAME,eAAa,CAAC,eAA0C;AAC5D,QAAI,CAAC;AAAY,aAAOF,GAAE,qBAAqB;AAC/C,UAAMG,QAAO,OAAO,eAAe,WAAW,IAAI,KAAK,UAAU,IAAI;AACrE,WAAOA,MAAK,mBAAmB,SAAS;AAAA,MACtC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,iBAAiB,CAAC,aAAsB;AAC5C,WAAO,WACL,gBAAAL,OAAC,SAAM,WAAU,qEACd,aAAG,eAAe,GACrB,IAEA,gBAAAA,OAAC,SAAM,WAAU,iEACd,aAAG,iBAAiB,GACvB;AAAA,EAEJ;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,QAAI,QAAQ;AACV,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAA,OAAC,QAAK,WAAU,8EACd,0BAAAA,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,WAAM,WAAU,UAEf;AAAA,oBAAAD,OAAC,WAAM,WAAU,+FACf,0BAAAC,QAAC,QACC;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,IAAI;AAAA,UAC9B,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,YAEtC,WAAW,QACV,gBAAAD,OAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,MAAM;AAAA,UAChC,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,2BACZ;AAAA,eAAG,aAAa;AAAA,YAChB,WAAW,UACV,gBAAAD,OAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,qGACX,aAAG,gBAAgB,GACtB;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,qGACX,UAAAE,GAAE,cAAc,GACnB;AAAA,MACA,gBAAAF,OAAC,QAAG,WAAU,qGACX,aAAG,eAAe,GACrB;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,WAAW;AAAA,UACrC,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,2BACZ;AAAA,eAAG,kBAAkB;AAAA,YACrB,WAAW,eACV,gBAAAD,OAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,sGACX,aAAG,gBAAgB,GACtB;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,WAAM,WAAU,2EACd,kBAAQ,IAAI,CAAC,WACZ,gBAAAC,QAAC,QAAmB,WAAU,2CAE5B;AAAA,sBAAAD,OAAC,QAAG,WAAU,+BACZ,0BAAAC,QAAC,SAAI,WAAU,qDAAoD;AAAA;AAAA,QAC/D,OAAO;AAAA,SACX,GACF;AAAA,MAGA,gBAAAD,OAAC,QAAG,WAAU,+BACZ,0BAAAA,OAAC,SAAI,WAAU,WACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,6CACZ,iBAAO,MACV;AAAA,QACC,OAAO,aACN,gBAAAA,OAAC,SAAM,WAAU,yEACd,UAAAE,GAAE,gBAAgB,GACrB;AAAA,SAEJ,GACF,GACF;AAAA,MAGA,gBAAAF,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,yCACZ,iBAAO,WAAWE,GAAE,qBAAqB,GAC5C,GACF;AAAA,MAGA,gBAAAF,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,yCACZ,iBAAO,SAASE,GAAE,qBAAqB,GAC1C,GACF;AAAA,MAGA,gBAAAF,OAAC,QAAG,WAAU,+BACX,yBAAe,OAAO,QAAQ,GACjC;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,+BACZ,0BAAAA,OAAC,SAAI,WAAU,yCACZ,UAAAI,aAAW,OAAO,SAAS,GAC9B,GACF;AAAA,MAGA,gBAAAJ,OAAC,QAAG,WAAU,8DACZ,0BAAAC,QAAC,gBACC;AAAA,wBAAAD,OAAC,uBACC,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,WAAU;AAAA,YACV,SAAS,MAAM,kBAAkB,OAAO,EAAE;AAAA,YAE1C,0BAAAA,OAACL,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,QACpC,GACF;AAAA,QACA,gBAAAM;AAAA,UAAC;AAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAM,mBAAmB,OAAO;AAAA,YAChC,cAAc,CAAC,SAAkB,kBAAkB,OAAO,OAAO,KAAK,IAAI;AAAA,YAE1E;AAAA,8BAAAA,QAAC,oBAAiB,SAAS,MAAM;AAC/B,+BAAe,QAAQ,OAAO,EAAE;AAChC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,OAACT,OAAA,EAAI,WAAU,gBAAe;AAAA,gBAC7BW,GAAE,qBAAqB;AAAA,iBAC1B;AAAA,cACA,gBAAAD,QAAC,oBAAiB,SAAS,MAAM;AAC/B,+BAAe,QAAQ,OAAO,EAAE;AAChC,kCAAkB,IAAI;AAAA,cACxB,GACE;AAAA,gCAAAD,OAACR,QAAA,EAAK,WAAU,gBAAe;AAAA,gBAC9BU,GAAE,oBAAoB;AAAA,iBACzB;AAAA,cAGC,CAAC,OAAO,aACP,gBAAAD,QAAAF,YAAA,EACE;AAAA,gCAAAC,OAAC,yBAAsB;AAAA,gBACvB,gBAAAC;AAAA,kBAAC;AAAA;AAAA,oBACC,SAAS,MAAM;AACb,qCAAe,OAAO,WAAW,YAAY,UAAU,OAAO,EAAE;AAChE,wCAAkB,IAAI;AAAA,oBACxB;AAAA,oBACA,WAAW,OAAO,WAAW,8EAA8E;AAAA,oBAE1G;AAAA,6BAAO,WAAW,gBAAAD,OAACP,WAAA,EAAQ,WAAU,gBAAe,IAAK,gBAAAO,OAACN,eAAA,EAAY,WAAU,gBAAe;AAAA,sBAC/F,OAAO,WAAWQ,GAAE,uBAAuB,IAAIA,GAAE,sBAAsB;AAAA;AAAA;AAAA,gBAC1E;AAAA,iBACF;AAAA;AAAA;AAAA,QAEJ;AAAA,SACF,GACF;AAAA,SArGO,OAAO,EAsGhB,CACD,GACH;AAAA,KACF,GACF,GACF;AAEJ;;;ACpPA,SAAS,SAAAI,SAAO,UAAAC,gBAAc;AAC9B,SAAS,0BAAAC,yBAAwB,yBAAAC,+BAA6B;AAgB1D,qBAAAC,YAIM,OAAAC,QADF,QAAAC,eAHJ;AALG,SAAS,aAAa,EAAE,OAAO,UAAU,QAAQ,GAAsB;AAC5E,QAAMC,KAAIL,wBAAuB;AACjC,QAAM,KAAKC,wBAAsB;AAEjC,SACE,gBAAAG,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAaO,GAAE,oBAAoB;AAAA,UACnC;AAAA,UACA,UAAU,CAACC,OAAM,SAASA,GAAE,OAAO,KAAK;AAAA,UACxC,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAH;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGC,SACC,gBAAAA;AAAA,MAACJ;AAAA,MAAA;AAAA,QACC,SAAS;AAAA,QACT,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAU;AAAA,QAET,aAAG,eAAe;AAAA;AAAA,IACrB;AAAA,KAEJ;AAEJ;;;ACzDA,SAAS,cAAAQ,mBAAkB;AAkBvB,gBAAAC,cAAA;AARG,SAAS,iBAAiB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAA0B;AACxB,SACE,gBAAAA;AAAA,IAACD;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,EACF;AAEJ;;;ACzBA,SAAgB,YAAAE,kBAAgB;;;ACAhC,SAAgB,YAAAC,kBAAgB;AAChC,SAAS,QAAAC,OAAM,KAAAC,WAAS;AACxB,SAAS,UAAAC,UAAQ,SAAAC,SAAO,SAAAC,SAAO,YAAAC,WAAU,QAAAC,QAAM,eAAAC,qBAAmB;AAElE,SAAS,0BAAAC,yBAAwB,yBAAAC,+BAA6B;AAqEtD,SACA,OAAAC,QADA,QAAAC,eAAA;AA5DD,IAAM,gBAA8C,CAAC;AAAA,EAC1D;AAAA,EACA;AAAA,EACA,eAAe;AAAA,EACf;AACF,MAAM;AACJ,QAAMC,KAAIJ,wBAAuB;AACjC,QAAM,KAAKC,wBAAsB;AAEjC,QAAM,CAAC,UAAU,WAAW,IAAIV,WAAS;AAAA,IACvC,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,aAAa;AAAA,IACb,YAAY,cAAc;AAAA,EAC5B,CAAC;AAED,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAE/D,QAAM,eAAe,MAAe;AAClC,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,KAAK,KAAK,GAAG;AACzB,gBAAU,OAAO;AAAA,IACnB;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOc,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,QAAI;AACF,YAAM,OAAO,QAA6B;AAAA,IAC5C,SAAS,OAAO;AACd,cAAQ,MAAM,wBAAwB,KAAK;AAAA,IAC7C;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,UAAU;AACZ,eAAS;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAH,OAAC,UAAK,UAAU,cACd,0BAAAA,OAACJ,QAAA,EACC,0BAAAK,QAACJ,eAAA,EAAY,WAAU,iBAErB;AAAA,oBAAAI,QAAC,SACH;AAAA,sBAAAA,QAACP,SAAA,EAAM,SAAQ,QAAQ;AAAA,QAAAQ,GAAE,aAAa;AAAA,QAAE;AAAA,SAAE;AAAA,MAC1C,gBAAAF;AAAA,QAACP;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,MAAMA,GAAE,OAAO,MAAM,EAAE;AAAA,UACxE,aAAaD,GAAE,8BAA8B;AAAA,UAC7C,WAAW,OAAO,OAAO,mBAAmB;AAAA;AAAA,MAC9C;AAAA,MACC,OAAO,QACN,gBAAAF,OAAC,OAAE,WAAU,6BAA6B,iBAAO,MAAK;AAAA,OAE1D;AAAA,IAGA,gBAAAC,QAAC,SACC;AAAA,sBAAAD,OAACN,SAAA,EAAM,SAAQ,WAAW,UAAAQ,GAAE,gBAAgB,GAAE;AAAA,MAC9C,gBAAAF;AAAA,QAACP;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,SAASA,GAAE,OAAO,MAAM,EAAE;AAAA,UAC3E,aAAaD,GAAE,iCAAiC;AAAA;AAAA,MAClD;AAAA,OACF;AAAA,IAGA,gBAAAD,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAACN,SAAA,EAAM,SAAQ,QAAQ,UAAAQ,GAAE,aAAa,GAAE;AAAA,QACxC,gBAAAF;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,SAAS;AAAA,YAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,MAAMA,GAAE,OAAO,MAAM,EAAE;AAAA,YACxE,aAAaD,GAAE,wBAAwB;AAAA;AAAA,QACzC;AAAA,SACF;AAAA,MAEA,gBAAAD,QAAC,SACC;AAAA,wBAAAD,OAACN,SAAA,EAAM,SAAQ,SAAS,UAAAQ,GAAE,cAAc,GAAE;AAAA,QAC1C,gBAAAF;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,SAAS;AAAA,YAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,OAAOA,GAAE,OAAO,MAAM,EAAE;AAAA,YACzE,aAAaD,GAAE,yBAAyB;AAAA;AAAA,QAC1C;AAAA,SACF;AAAA,MAEA,gBAAAD,QAAC,SACC;AAAA,wBAAAD,OAACN,SAAA,EAAM,SAAQ,WAAW,UAAAQ,GAAE,gBAAgB,GAAE;AAAA,QAC9C,gBAAAF;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,SAAS;AAAA,YAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,SAASA,GAAE,OAAO,MAAM,EAAE;AAAA,YAC3E,aAAaD,GAAE,2BAA2B;AAAA;AAAA,QAC5C;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAD,QAAC,SACC;AAAA,sBAAAD,OAACN,SAAA,EAAM,SAAQ,WAAW,UAAAQ,GAAE,gBAAgB,GAAE;AAAA,MAC9C,gBAAAF;AAAA,QAACP;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,SAASA,GAAE,OAAO,MAAM,EAAE;AAAA,UAC3E,aAAaD,GAAE,2BAA2B;AAAA;AAAA,MAC5C;AAAA,OACF;AAAA,IAGA,gBAAAD,QAAC,SACC;AAAA,sBAAAD,OAACN,SAAA,EAAM,SAAQ,SAAS,UAAAQ,GAAE,cAAc,GAAE;AAAA,MAC1C,gBAAAF;AAAA,QAACP;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,MAAK;AAAA,UACL,OAAO,SAAS;AAAA,UAChB,UAAU,CAACU,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,OAAOA,GAAE,OAAO,MAAM,EAAE;AAAA,UACzE,aAAaD,GAAE,+BAA+B;AAAA;AAAA,MAChD;AAAA,OACF;AAAA,IAGA,gBAAAD,QAAC,SACC;AAAA,sBAAAD,OAACN,SAAA,EAAM,SAAQ,eAAe,UAAAQ,GAAE,oBAAoB,GAAE;AAAA,MACtD,gBAAAF;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACQ,OAAM,YAAY,WAAS,EAAE,GAAG,MAAM,aAAaA,GAAE,OAAO,MAAM,EAAE;AAAA,UAC/E,aAAaD,GAAE,qCAAqC;AAAA,UACpD,MAAM;AAAA;AAAA,MACR;AAAA,OACF;AAAA,IAGI,gBAAAD,QAAC,SAAI,WAAU,4CACb;AAAA,sBAAAA;AAAA,QAACT;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAEV;AAAA,4BAAAQ,OAACT,KAAA,EAAE,WAAU,gBAAe;AAAA,YAC3B,GAAG,gBAAgB;AAAA;AAAA;AAAA,MACtB;AAAA,MAEA,gBAAAU;AAAA,QAACT;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU;AAAA,UAEV;AAAA,4BAAAQ,OAACV,OAAA,EAAK,WAAU,gBAAe;AAAA,YAC9B,eAAe,GAAG,gBAAgB,IAAI,GAAG,cAAc;AAAA;AAAA;AAAA,MAC1D;AAAA,OACF;AAAA,KACF,GACF,GACF;AAEJ;;;ADpLA,SAAS,0BAAAc,+BAA8B;AAkDjC,SAEI,OAAAC,QAFJ,QAAAC,eAAA;AAxCC,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,wBAAuB;AACjC,QAAM,CAAC,cAAc,eAAe,IAAII,WAAS,KAAK;AAEtD,QAAM,aAAa,OAAO,eAAkC;AAC1D,QAAI;AACF,sBAAgB,IAAI;AAIpB,UAAI,iBAAiB;AACnB,cAAM,gBAAgB,UAAU;AAAA,MAClC;AAGA,mBAAa,KAAK;AAAA,IAEpB,SAAS,OAAO;AACd,cAAQ,MAAM,2CAAsC,KAAK;AACzD,UAAI,SAAS;AACX,gBAAQ,iBAAiB,QAAQ,MAAM,UAAU,yBAAyB;AAAA,MAC5E;AAAA,IACF,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAH,OAAC,UAAO,MAAY,cAClB,0BAAAC,QAAC,iBAAc,WAAU,8CACvB;AAAA,oBAAAD,OAAC,gBAAa,WAAU,sCACtB,0BAAAA,OAAC,eAAY,WAAU,uCACpB,UAAAE,GAAE,wBAAwB,GAC7B,GACF;AAAA,IAEA,gBAAAF,OAAC,SAAI,WAAU,OACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR,UAAU;AAAA,QACV;AAAA,QACA;AAAA;AAAA,IACF,GACF;AAAA,KACF,GACF;AAEJ;;;APrEA,SAAS,aAAAI,mBAAiB;AAE1B,SAAS,0BAAAC,+BAA8B;AAwDnC,SAMU,OAAAC,QANV,QAAAC,eAAA;AA3BG,IAAM,UAAkC,CAAC;AAAA,EAC9C;AAAA,EACA,UAAU,CAAC;AAAA,EACX,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,eAAe,MAAM;AAAA,EAAC;AAAA,EACtB,SAAS,MAAM;AAAA,EAAC;AAAA,EAChB;AAAA,EACA,YAAY;AACd,MAAM;AAGJ,QAAMC,KAAIH,wBAAuB;AAEjC,QAAM,UAAU,MAAM,WAAW,CAAC;AAClC,QAAM,eAAe,MAAM,SAAS;AACpC,QAAM,cAAc,MAAM,QAAQ;AAClC,QAAM,aAAa,MAAM,cAAc;AACvC,QAAM,QAAQ,MAAM,SAAS;AAG7B,QAAM,yBAAyBI,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,yBAAyBA,QAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,uBAAuBA,QAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,QAAM,YAAY,QAAQ,CAAC,MAAM,CAAC;AAEzD,SACE,gBAAAF,QAAC,SAAI,WAAW,wBAAwB,SAAS,IAE/C;AAAA,oBAAAD,OAAC,SAAI,WAAU,sBACb,0BAAAA,OAACI,QAAA,EAAK,WAAU,2BACd,0BAAAJ,OAACK,eAAA,EAAY,WAAU,aACrB,0BAAAL,OAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,QAAQ,KAAK;AAAA,QACpB,UAAU;AAAA,QACV,SAAS,MAAM,uBAAuB,EAAE;AAAA;AAAA,IAC1C,GACF,GACF,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,kBACZ,kBAAQ,SAAS,IAChB,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,gBAAgB;AAAA,QAChB,QAAQ,QAAQ,UAAU;AAAA,QAC1B,WAAW,QAAQ,aAAa;AAAA,QAChC,QAAQ;AAAA;AAAA,IACV,IAEA,gBAAAA;AAAA,MAACM;AAAA,MAAA;AAAA,QACC,MAAMR;AAAA,QACN,OAAOI,GAAE,oBAAoB;AAAA,QAC7B,aACE,QAAQ,IACJA,GAAE,6BAA6B,IAC/BA,GAAE,qBAAqB;AAAA;AAAA,IAE/B,GAEJ;AAAA,IAGC,QAAQ,SAAS,KAAK,eAAe,SACpC,gBAAAF,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAACO;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ;;;ASxHA,OAAOC,cAAW;AAClB;AAAA,EACE,cAAAC;AAAA,EACA,cAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,OACK;;;ACLP,SAAS,UAAAC,gBAAc;AACvB,SAAS,QAAAC,cAAY;AACrB,SAAS,eAAAC,oBAAmB;AAatB,SACE,OAAAC,QADF,QAAAC,eAAA;AAPC,IAAM,iBAAgD,CAAC;AAAA,EAC5D;AACF,MAAM;AACJ,QAAM,EAAE,oBAAoB,IAAIF,aAAY;AAE5C,SACE,gBAAAE,QAAC,SAAI,WAAU,qCACb;AAAA,oBAAAA,QAAC,SACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,qCAAoC,gCAAkB;AAAA,MACpE,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,oEAErC;AAAA,OACF;AAAA,IAEC,uBACC,gBAAAC,QAACJ,UAAA,EAAO,SAAS,eAAe,WAAU,+BACxC;AAAA,sBAAAG,OAACF,QAAA,EAAK,WAAU,WAAU;AAAA,MAC1B,gBAAAE,OAAC,UAAK,0BAAY;AAAA,OACpB;AAAA,KAEJ;AAEJ;;;AC/BA,SAAgB,YAAAE,kBAAgB;AAOhC,SAAS,eAAAC,oBAAmB;;;ACP5B,SAAgB,YAAAC,kBAAgB;AAOhC,SAAS,6BAAAC,kCAAiC;;;ACP1C,SAAgB,YAAAC,YAAU,aAAAC,mBAAiB;AAO3C,SAAS,2BAA2B,yBAAAC,+BAA6B;AACjE,SAAS,QAAAC,OAAM,WAAAC,gBAAe;AA4GtB,SAgDI,YAAAC,YA/CJ,OAAAC,QADA,QAAAC,eAAA;AAjGD,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAChB,MAAM;AACJ,QAAMC,KAAI,0BAA0B;AACpC,QAAM,KAAKN,wBAAsB;AAEjC,QAAM,CAAC,UAAU,WAAW,IAAIO,WAAS;AAAA,IACvC,MAAM;AAAA,IACN,aAAa;AAAA,EACf,CAAC;AACD,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAC/D,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AAGtD,QAAM,aAAa,yBAAyB,SAAY,uBAAuB;AAG/E,EAAAC,YAAU,MAAM;AACd,QAAI,YAAY,SAAS,QAAQ;AAC/B,kBAAY;AAAA,QACV,MAAM,SAAS,QAAQ;AAAA,QACvB,aAAa,SAAS,eAAe;AAAA,MACvC,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,UAAU,IAAI,CAAC;AAEnB,QAAM,oBAAoB,CAAC,OAAe,UAA4B;AACpE,gBAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAGjD,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,EAAE;AAAA,IAC9C;AAAA,EACF;AAEA,QAAM,eAAe,MAAe;AAClC,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,KAAK,KAAK,GAAG;AACzB,gBAAU,OAAOF,GAAE,yBAAyB;AAAA,IAC9C,WAAW,SAAS,KAAK,KAAK,EAAE,SAAS,GAAG;AAC1C,gBAAU,OAAOA,GAAE,0BAA0B;AAAA,IAC/C,WAAW,SAAS,KAAK,KAAK,EAAE,SAAS,IAAI;AAC3C,gBAAU,OAAOA,GAAE,0BAA0B;AAAA,IAC/C;AAEA,QAAI,SAAS,eAAe,SAAS,YAAY,KAAK,EAAE,SAAS,KAAK;AACpE,gBAAU,cAAcA,GAAE,iCAAiC;AAAA,IAC7D;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,OAAOG,OAAuB;AACjD,IAAAA,GAAE,eAAe;AAEjB,QAAI,CAAC,aAAa,GAAG;AACnB;AAAA,IACF;AAEA,QAAI,yBAAyB,QAAW;AACtC,sBAAgB,IAAI;AAAA,IACtB;AAEA,QAAI;AAEF,YAAM,eAAkC;AAAA,QACtC,MAAM,SAAS,KAAK,KAAK;AAAA,QACzB,aAAa,SAAS,YAAY,KAAK,KAAK;AAAA,MAC9C;AAGA,YAAM,OAAO,YAAwB;AAAA,IAEvC,SAAS,OAAO;AACd,cAAQ,MAAM,0BAA0B,KAAK;AAAA,IAE/C,UAAE;AACA,UAAI,yBAAyB,QAAW;AACtC,wBAAgB,KAAK;AAAA,MACvB;AAAA,IACF;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAY;AAChB,aAAS;AAAA,EACX;AAEA,SACE,gBAAAJ,QAAC,UAAK,UAAU,cAAc,WAAU,aACtC;AAAA,oBAAAA,QAAC,SACC;AAAA,sBAAAA,QAACK,QAAA,EAAM,SAAQ,QAAQ;AAAA,QAAAJ,GAAE,aAAa;AAAA,QAAE;AAAA,SAAE;AAAA,MAC1C,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACK,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,UACzD,aAAaH,GAAE,aAAa;AAAA,UAC5B,WAAW,OAAO,OAAO,mBAAmB;AAAA,UAC5C,UAAU;AAAA,UACV,UAAQ;AAAA;AAAA,MACV;AAAA,MACC,OAAO,QACN,gBAAAF,OAAC,OAAE,WAAU,6BAA6B,iBAAO,MAAK;AAAA,OAE1D;AAAA,IAEA,gBAAAC,QAAC,SACC;AAAA,sBAAAD,OAACM,QAAA,EAAM,SAAQ,eAAe,UAAAJ,GAAE,oBAAoB,GAAE;AAAA,MACtD,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACK,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,UAChE,aAAaH,GAAE,oBAAoB;AAAA,UACnC,MAAM;AAAA,UACN,WAAW,OAAO,cAAc,mBAAmB;AAAA,UACnD,UAAU;AAAA;AAAA,MACZ;AAAA,MACC,OAAO,eACN,gBAAAF,OAAC,OAAE,WAAU,6BAA6B,iBAAO,aAAY;AAAA,MAE/D,gBAAAC,QAAC,OAAE,WAAU,8BACV;AAAA,iBAAS,YAAY;AAAA,QAAO;AAAA,QAAMC,GAAE,uBAAuB;AAAA,SAC9D;AAAA,OACF;AAAA,IAEA,gBAAAD,QAAC,SAAI,WAAU,4CACb;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAET,aAAG,gBAAgB;AAAA;AAAA,MACtB;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU;AAAA,UAET,uBACC,gBAAAC,QAAAF,YAAA,EACE;AAAA,4BAAAC,OAACF,UAAA,EAAQ,WAAU,6BAA4B;AAAA,YAC9C,GAAG,gBAAgB;AAAA,aACtB,IAEA,gBAAAG,QAAAF,YAAA,EACE;AAAA,4BAAAC,OAACH,OAAA,EAAK,WAAU,gBAAe;AAAA,YAC9B,SAAS,WAAWK,GAAE,gBAAgB,IAAIA,GAAE,gBAAgB;AAAA,aAC/D;AAAA;AAAA,MAEJ;AAAA,OACF;AAAA,KACF;AAEJ;;;ADzHM,SAEI,OAAAK,QAFJ,QAAAC,eAAA;AAvCC,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIC,2BAA0B;AACpC,QAAM,CAAC,cAAc,eAAe,IAAIC,WAAS,KAAK;AAEtD,QAAM,aAAa,OAAO,iBAA2B;AACnD,QAAI;AACF,sBAAgB,IAAI;AAIpB,UAAI,mBAAmB;AACrB,cAAM,kBAAkB,YAAY;AAAA,MACtC;AAGA,mBAAa,KAAK;AAAA,IAEpB,SAAS,OAAO;AACd,cAAQ,MAAM,6CAAwC,KAAK;AAC3D,UAAI,SAAS;AACX,gBAAQ,iBAAiB,QAAQ,MAAM,UAAU,2BAA2B;AAAA,MAC9E;AAAA,IACF,UAAE;AACA,sBAAgB,KAAK;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI;AAAc;AAClB,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAJ,OAAC,UAAO,MAAY,cAClB,0BAAAC,QAAC,iBAAc,WAAU,oBACvB;AAAA,oBAAAD,OAAC,gBACC,0BAAAA,OAAC,eAAa,UAAAE,GAAE,eAAe,GAAE,GACnC;AAAA,IAEA,gBAAAF;AAAA,MAAC;AAAA;AAAA,QACC,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAK;AAAA,QACL;AAAA;AAAA,IACF;AAAA,KACF,GACF;AAEJ;;;ADII,qBAAAK,YAYY,OAAAC,QACA,QAAAC,eAbZ;AAzDG,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,iBAAiB,kBAAkB,IAAIC,WAAS,KAAK;AAE5D,QAAM,EAAE,oBAAoB,IAAIC,aAAY;AAE5C,QAAM,aAAa;AAAA,IACjB;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS,MAAM,mBAAmB,IAAI;AAAA,MACtC,OAAO,sBAAsB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO,sBAAsB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IAC1C;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO,CAAC,KAAK;AAAA;AAAA,IACf;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,SAAS;AAAA,MACT,SAAS;AAAA,MACT,OAAO,sBAAsB,CAAC,KAAK,IAAI,CAAC;AAAA;AAAA,IAC1C;AAAA,EACF;AAGA,QAAM,UAAU,WAAW;AAAA,IAAO,YAChC,CAAC,OAAO,SAAS,OAAO,MAAM,SAAS;AAAA,EACzC,EAAE,IAAI,CAAC,EAAE,OAAO,GAAG,OAAO,MAAM,MAAM;AAEtC,SACE,gBAAAF,QAAAF,YAAA,EACA;AAAA,oBAAAC,OAAC,QACC,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAA,OAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,SAAS,OAAO;AAAA,QAChB,WAAU;AAAA,QACV,SAAS,OAAO;AAAA,QAEhB,0BAAAC,QAAC,SAAI,WAAU,sCACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,WAAW,iBAAO,MAAK;AAAA,UACvC,gBAAAC,QAAC,SAAI,WAAU,UACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,uBAAuB,iBAAO,OAAM;AAAA,YACnD,gBAAAA,OAAC,SAAI,WAAU,sBAAsB,iBAAO,aAAY;AAAA,aAC1D;AAAA,WACF;AAAA;AAAA,MAXK,OAAO;AAAA,IAYd,CACD,GACH,GACF,GACF;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd;AAAA,QACA;AAAA;AAAA,IACF;AAAA,KACA;AAEJ;;;AGpGA,SAAS,QAAAI,QAAM,OAAAC,MAAK,YAAAC,YAA0B,OAAAC,aAAW;AA4B3C,gBAAAC,QAEF,QAAAC,eAFE;AAnBP,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,aAAa,MAAM;AACvB,WAAO,QAAQ;AAAA,EACjB;AAEA,QAAM,aAAa,MAAM;AACvB,WAAO,QAAQ;AAAA,EACjB;AAEA,SACE,gBAAAA,QAAC,QAAK,WAAU,4CACd;AAAA,oBAAAD,OAAC,cAAW,WAAU,QACpB,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gCACb,0BAAAA,OAACH,MAAA,EAAI,WAAU,wBAAuB,GACxC;AAAA,QACA,gBAAAI,QAAC,SAAI,WAAU,kBACb;AAAA,0BAAAD,OAAC,aAAU,WAAU,kCAClB,mBAAS,MACZ;AAAA,UACA,gBAAAA,OAAC,SAAI,WAAU,oCACb,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAS,SAAS,WAAW,YAAY;AAAA,cACzC,WAAU;AAAA,cAET,mBAAS,WAAW,WAAW;AAAA;AAAA,UAClC,GACF;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACD,OAAA,EAAI,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAElC;AAAA,QACA,gBAAAE;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACJ,QAAA,EAAK,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAEnC;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAEA,gBAAAK,QAAC,eAAY,WAAU,QACpB;AAAA,eAAS,cACR,gBAAAD,OAAC,OAAE,WAAU,mDACV,mBAAS,aACZ,IAEA,gBAAAA,OAAC,OAAE,WAAU,6CAA4C,qCAEzD;AAAA,MAGF,gBAAAC,QAAC,SAAI,WAAU,mEACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACF,YAAA,EAAS,WAAU,WAAU;AAAA,UAC9B,gBAAAG,QAAC,UAAK;AAAA;AAAA,YACK,IAAI,KAAK,SAAS,SAAS,EAAE,mBAAmB;AAAA,aAC3D;AAAA,WACF;AAAA,QAEC,SAAS,aAAa,SAAS,cAAc,SAAS,aACrD,gBAAAA,QAAC,UAAK,WAAU,WAAU;AAAA;AAAA,UACf,IAAI,KAAK,SAAS,SAAS,EAAE,mBAAmB;AAAA,WAC3D;AAAA,SAEJ;AAAA,OACF;AAAA,KACF;AAEJ;;;ACtGA,SAAS,6BAAAC,kCAAiC;AAuBlC,SASM,OAAAC,QATN,QAAAC,eAAA;AAZD,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,2BAA0B;AACpC,MAAI,WAAW,WAAW,GAAG;AAC3B,WACE,gBAAAC,OAAC,SAAI,WAAU,kCACb,0BAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iFACb,0BAAAA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UACR,OAAM;AAAA,UAEN,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF,GACF;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,kDACX,UAAAE,GAAE,uBAAuB,GAC5B;AAAA,MACA,gBAAAF,OAAC,OAAE,WAAU,8BACV,UAAAE,GAAE,qBAAqB,GAC1B;AAAA,OACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAU,kCACb,0BAAAA,OAAC,SAAI,WAAU,uEACZ,qBAAW,IAAI,CAAC,aACf,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA;AAAA,IAHH,SAAS;AAAA,EAIhB,CACD,GACH,GACF;AAEJ;;;ACtEA,OAAOG,aAAW;AAYlB,SAAS,6BAAAC,4BAA2B,yBAAAC,+BAA6B;AACjE,SAAS,OAAAC,OAAK,QAAAC,QAAM,UAAAC,UAA8B,gBAAAC,eAAc,kBAAkB;AAyBxE,SAiMc,YAAAC,YAhMZ,OAAAC,QADF,QAAAC,eAAA;AAfH,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AACF,GAAuB;AACrB,QAAM,CAAC,gBAAgB,iBAAiB,IAAIC,QAAM,SAAwB,IAAI;AAC9E,QAAMC,KAAIV,2BAA0B;AACpC,QAAM,KAAKC,wBAAsB;AAEjC,MAAI,WAAW,WAAW,GAAG;AAC3B,WACE,gBAAAM,OAAC,QAAK,WAAU,kDACd,0BAAAA,OAAC,eAAY,WAAU,qBACrB,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,sBAAAD,OAAC,cAAW,WAAU,wCAAuC;AAAA,MAC7D,gBAAAA,OAAC,QAAG,WAAU,4BAA4B,UAAAG,GAAE,uBAAuB,GAAE;AAAA,MACrE,gBAAAH,OAAC,OAAE,WAAU,WACV,UAAAG,GAAE,kCAAkC,GACvC;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,QAAMC,eAAa,CAAC,eAA0C;AAC5D,QAAI,CAAC;AAAY,aAAO;AACxB,UAAMC,QAAO,OAAO,eAAe,WAAW,IAAI,KAAK,UAAU,IAAI;AACrE,WAAOA,MAAK,mBAAmB,SAAS;AAAA,MACtC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,iBAAiB,CAAC,aAAsB;AAC5C,WAAO,WACL,gBAAAL,OAAC,SAAM,WAAU,qEACd,UAAAG,GAAE,eAAe,GACpB,IAEA,gBAAAH,OAAC,SAAM,WAAU,iEACd,UAAAG,GAAE,iBAAiB,GACtB;AAAA,EAEJ;AAEA,QAAM,aAAa,CAAC,WAAmB;AACrC,QAAI,QAAQ;AACV,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AAEA,SACE,gBAAAH,OAAC,QAAK,WAAU,8EACd,0BAAAA,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,WAAM,WAAU,UAEf;AAAA,oBAAAD,OAAC,WAAM,WAAU,+FACf,0BAAAC,QAAC,QACC;AAAA,sBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,IAAI;AAAA,UAC9B,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,YAEtC,WAAW,QACV,gBAAAD,OAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,MAAM;AAAA,UAChC,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,2BACZ;AAAA,eAAG,aAAa;AAAA,YAChB,WAAW,UACV,gBAAAD,OAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,qGACX,aAAG,oBAAoB,GAC1B;AAAA,MAKA,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAS,MAAM,WAAW,WAAW;AAAA,UACrC,WAAU;AAAA,UAEV,0BAAAC,QAAC,SAAI,WAAU,2BACZ;AAAA,eAAG,kBAAkB;AAAA,YACrB,WAAW,eACV,gBAAAD,OAAC,UAAK,WAAU,WAAW,wBAAc,SAAS,WAAM,UAAI;AAAA,aAEhE;AAAA;AAAA,MACF;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,sGACX,aAAG,gBAAgB,GACtB;AAAA,OACF,GACF;AAAA,IAGA,gBAAAA,OAAC,WAAM,WAAU,2EACd,qBAAW,IAAI,CAAC,aACf,gBAAAC;AAAA,MAAC;AAAA;AAAA,QAEC,WAAU;AAAA,QAEV;AAAA,0BAAAA,QAAC,QAAG,WAAU,wEAAuE;AAAA;AAAA,YACjF,SAAS;AAAA,aACb;AAAA,UACA,gBAAAD,OAAC,QAAG,WAAU,+BACZ,0BAAAA,OAAC,SAAI,WAAU,WACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,gDACZ,mBAAS,MACZ;AAAA,YACC,SAAS,aACR,gBAAAA,OAAC,SAAM,WAAU,yEACd,UAAAG,GAAE,gBAAgB,GACrB;AAAA,aAEJ,GACF,GACF;AAAA,UACA,gBAAAH,OAAC,QAAG,WAAU,sDACZ,0BAAAA,OAAC,SAAI,WAAU,qBACZ,mBAAS,eAAe,OAC3B,GACF;AAAA,UAKA,gBAAAA,OAAC,QAAG,WAAU,wEACX,UAAAI,aAAW,SAAS,SAAS,GAChC;AAAA,UACA,gBAAAJ,OAAC,QAAG,WAAU,8DACZ,0BAAAC,QAAC,gBACC;AAAA,4BAAAD,OAAC,uBAAoB,SAAO,MAC1B,0BAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,WAAU;AAAA,gBACV,SAAS,MAAM,kBAAkB,SAAS,EAAE;AAAA,gBAE5C,0BAAAA,OAACF,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,YACpC,GACF;AAAA,YACA,gBAAAG;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,MAAM,mBAAmB,SAAS;AAAA,gBAClC,cAAc,CAAC,SAAS,kBAAkB,OAAO,SAAS,KAAK,IAAI;AAAA,gBAEnE;AAAA,kCAAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,SAAS,MAAM;AACb,yCAAiB,QAAQ,SAAS,EAAE;AACpC,0CAAkB,IAAI;AAAA,sBACxB;AAAA,sBACA,WAAU;AAAA,sBAEV;AAAA,wCAAAD,OAACL,OAAA,EAAI,WAAU,gBAAe;AAAA,wBAC7BQ,GAAE,qBAAqB;AAAA;AAAA;AAAA,kBAC1B;AAAA,kBAEA,gBAAAF;AAAA,oBAAC;AAAA;AAAA,sBACC,SAAS,MAAM;AACb,yCAAiB,QAAQ,SAAS,EAAE;AACpC,0CAAkB,IAAI;AAAA,sBACxB;AAAA,sBACA,WAAU;AAAA,sBAEV;AAAA,wCAAAD,OAACJ,QAAA,EAAK,WAAU,gBAAe;AAAA,wBAC9BO,GAAE,cAAc;AAAA;AAAA;AAAA,kBACnB;AAAA,kBA0BC,CAAC,SAAS,aACT,gBAAAF,QAAAF,YAAA,EACE;AAAA,oCAAAC,OAAC,yBAAsB;AAAA,oBACvB,gBAAAC;AAAA,sBAAC;AAAA;AAAA,wBACC,SAAS,MAAM;AACb,2CAAiB,UAAU,SAAS,EAAE;AACtC,4CAAkB,IAAI;AAAA,wBACxB;AAAA,wBACA,WAAU;AAAA,wBAEV;AAAA,0CAAAD,OAACH,UAAA,EAAO,WAAU,gBAAe;AAAA,0BAChCM,GAAE,gBAAgB;AAAA;AAAA;AAAA,oBACrB;AAAA,qBACF;AAAA;AAAA;AAAA,YAEJ;AAAA,aACF,GACF;AAAA;AAAA;AAAA,MAhHK,SAAS;AAAA,IAiHhB,CACD,GACH;AAAA,KACF,GACF,GACF;AAEJ;;;ACtPA,SAAS,6BAAAG,kCAAiC;AA0BpC,SAEI,OAAAC,QAFJ,QAAAC,eAAA;AAVC,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIC,2BAA0B;AAEpC,SACE,gBAAAH,OAAC,UAAO,MAAM,MAAM,cAAc,UAChC,0BAAAC,QAAC,iBAAc,WAAU,oBACvB;AAAA,oBAAAD,OAAC,gBACC,0BAAAA,OAAC,eACE,mBAAS,WAAWE,GAAE,eAAe,IAAIA,GAAE,aAAa,GAC3D,GACF;AAAA,IAEA,gBAAAF;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,IACF;AAAA,KACF,GACF;AAEJ;;;ACjDA,SAAgB,YAAAI,kBAAgB;AAUhC,SAAS,6BAAAC,4BAA2B,yBAAAC,+BAA6B;AAEjE,SAAS,4BAA4B;AA4CjC,qBAAAC,YAKU,OAAAC,QADF,QAAAC,eAJR;AAjCG,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIC,2BAA0B;AACpC,QAAM,KAAKC,wBAAsB;AACjC,QAAMC,UAAS,EAAU;AACzB,QAAM,CAAC,mBAAmB,oBAAoB,IAAIC,WAAS,KAAK;AAEhE,MAAI,CAAC;AAAU,WAAO;AAEtB,QAAM,aAAa,MAAM;AACvB,WAAO,QAAQ;AACf,YAAQ;AAAA,EACV;AAEA,QAAM,eAAe,MAAM;AACzB,yBAAqB,IAAI;AAAA,EAC3B;AAEA,QAAM,sBAAsB,MAAM;AAChC,aAAS,QAAQ;AACjB,yBAAqB,KAAK;AAC1B,YAAQ;AAAA,EACV;AAEA,QAAM,qBAAqB,MAAM;AAC/B,yBAAqB,KAAK;AAAA,EAC5B;AAEA,SACE,gBAAAL,QAAAF,YAAA,EACE;AAAA,oBAAAC,OAAC,UAAO,MAAM,CAAC,CAAC,UAAU,cAAc,SACtC,0BAAAC,QAAC,iBAAc,WAAU,oBACvB;AAAA,sBAAAD,OAAC,gBACC,0BAAAC,QAAC,SACC;AAAA,wBAAAD,OAAC,eAAY,WAAU,yBACpB,UAAAE,GAAE,oBAAoB,GACzB;AAAA,QACA,gBAAAF,OAAC,qBAAkB,WAAU,8BAC1B,UAAAE,GAAE,wBAAwB,GAC7B;AAAA,SACF,GACF;AAAA,MACC,YACC,gBAAAD,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACO,QAAA,EAAM,WAAU,qCAAqC,UAAAL,GAAE,aAAa,GAAE;AAAA,YACvE,gBAAAF,OAAC,SAAI,WAAU,yCACb,0BAAAA,OAAC,OAAE,WAAU,6BAA6B,mBAAS,MAAK,GAC1D;AAAA,aACF;AAAA,UAEC,SAAS,eACR,gBAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,4BAAAD,OAACO,QAAA,EAAM,WAAU,qCAAqC,UAAAL,GAAE,oBAAoB,GAAE;AAAA,YAC9E,gBAAAF,OAAC,SAAI,WAAU,yCACb,0BAAAA,OAAC,OAAE,WAAU,qCAAqC,mBAAS,aAAY,GACzE;AAAA,aACF;AAAA,UAGF,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAACO,QAAA,EAAM,WAAU,qCAAqC,aAAG,kBAAkB,GAAE;AAAA,YAC7E,gBAAAP,OAAC,SAAI,WAAU,yCACb,0BAAAA,OAAC,OAAE,WAAU,iBACV,mBAAS,YACN,qBAAqB,SAAS,WAAWK,OAAqB,IAC9D,GAAG,gBAAgB,GAEzB,GACF;AAAA,aACF;AAAA,UAEA,gBAAAJ,QAAC,SACC;AAAA,4BAAAD,OAACO,QAAA,EAAM,WAAU,qCAAqC,aAAG,kBAAkB,GAAE;AAAA,YAC7E,gBAAAP,OAAC,SAAI,WAAU,yCACb,0BAAAA,OAAC,OAAE,WAAU,iBACV,mBAAS,aAAa,SAAS,cAAc,SAAS,YACnD,qBAAqB,SAAS,WAAWK,OAAqB,IAC9DH,GAAE,qBAAqB,GAE7B,GACF;AAAA,aACF;AAAA,WACF;AAAA,QAEA,gBAAAD,QAAC,SAAI,WAAU,4CACb;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,SAAS;AAAA,cAER,aAAG,eAAe;AAAA;AAAA,UACrB;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS;AAAA,cAER,UAAAE,GAAE,cAAc;AAAA;AAAA,UACnB;AAAA,WACF;AAAA,SACF;AAAA,OAEJ,GACF;AAAA,IAGA,gBAAAF,OAAC,UAAO,MAAM,mBAAmB,cAAc,sBAC7C,0BAAAC,QAAC,iBAAc,WAAU,oBACvB;AAAA,sBAAAD,OAAC,gBACC,0BAAAA,OAAC,eAAa,UAAAE,GAAE,oBAAoB,GAAE,GACxC;AAAA,MACA,gBAAAD,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,OAAE,WAAU,iBACV;AAAA,UAAAC,GAAE,2BAA2B;AAAA,UAAE;AAAA,UAAC,gBAAAD,QAAC,YAAO;AAAA;AAAA,YAAE,UAAU;AAAA,YAAK;AAAA,aAAC;AAAA,UAAS;AAAA,WACtE;AAAA,QACA,gBAAAD,OAAC,OAAE,WAAU,yBACV,UAAAE,GAAE,sBAAsB,GAC3B;AAAA,QACA,gBAAAD,QAAC,SAAI,WAAU,4CACb;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,SAAS;AAAA,cAER,aAAG,gBAAgB;AAAA;AAAA,UACtB;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,SAAS;AAAA,cAER,UAAAE,GAAE,gBAAgB;AAAA;AAAA,UACrB;AAAA,WACF;AAAA,SACF;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACtKA,SAAS,SAAAM,SAAO,UAAAC,gBAAc;AAqB1B,qBAAAC,YAIM,OAAAC,QADF,QAAAC,eAHJ;AANG,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SACE,gBAAAA,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACH;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAY;AAAA,UACZ,OAAO,QAAQ,UAAU;AAAA,UACzB,UAAU,CAACK,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,UAC9C,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGC,QAAQ,UACP,gBAAAA;AAAA,MAACF;AAAA,MAAA;AAAA,QACC,SAAS;AAAA,QACT,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,KAEJ;AAEJ;;;AC/DA,SAAS,SAAAK,SAAO,UAAAC,gBAAc;AAa1B,qBAAAC,YAIM,OAAAC,QADF,QAAAC,eAHJ;AAFG,SAAS,eAAe,EAAE,OAAO,UAAU,QAAQ,GAAwB;AAChF,SACE,gBAAAA,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACH;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAY;AAAA,UACZ;AAAA,UACA,UAAU,CAACK,OAAM,SAASA,GAAE,OAAO,KAAK;AAAA,UACxC,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGC,SACC,gBAAAA;AAAA,MAACF;AAAA,MAAA;AAAA,QACC,SAAS;AAAA,QACT,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,KAEJ;AAEJ;;;AC7CI,SAEE,OAAAK,QAFF,QAAAC,eAAA;AAFG,SAAS,oBAAoB;AAClC,SACE,gBAAAA,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,OAAC,iBAAc;AAAA,IAGf,gBAAAA,OAAC,kBAAe;AAAA,IAGhB,gBAAAA,OAAC,iBAAc,MAAM,GAAG,SAAS,GAAG;AAAA,IAGpC,gBAAAA,OAAC,sBAAmB;AAAA,KACtB;AAEJ;AAEO,SAAS,wBAAwB;AACtC,SACE,gBAAAA,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,oBAAAD,OAAC,SAAI,WAAU,sCAAqC;AAAA,IACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,IACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,IACpD,gBAAAA,OAAC,SAAI,WAAU,iCAAgC;AAAA,KACjD,GACF;AAEJ;;;AZ1BA,SAAS,cAAAE,mBAAkB;AAE3B,SAAS,6BAAAC,kCAAiC;AAwDtC,SAMU,OAAAC,QANV,QAAAC,eAAA;AA3BG,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA,UAAU,CAAC;AAAA,EACX,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,mBAAmB,MAAM;AAAA,EAAC;AAAA,EAC1B,eAAe,MAAM;AAAA,EAAC;AAAA,EACtB,SAAS,MAAM;AAAA,EAAC;AAAA,EAChB;AAAA,EACA,YAAY;AACd,MAAM;AAGJ,QAAMC,KAAIH,2BAA0B;AAEpC,QAAM,aAAa,MAAM,cAAc,CAAC;AACxC,QAAM,kBAAkB,MAAM,SAAS;AACvC,QAAM,cAAc,MAAM,eAAe;AACzC,QAAM,aAAa,MAAM,cAAc;AACvC,QAAM,QAAQ,MAAM,SAAS;AAG7B,QAAM,yBAAyBI,SAAM,YAAY,gBAAgB,CAAC,cAAc,CAAC;AACjF,QAAM,2BAA2BA,SAAM,YAAY,kBAAkB,CAAC,gBAAgB,CAAC;AACvF,QAAM,uBAAuBA,SAAM,YAAY,cAAc,CAAC,YAAY,CAAC;AAC3E,QAAM,iBAAiBA,SAAM,YAAY,QAAQ,CAAC,MAAM,CAAC;AAEzD,SACE,gBAAAF,QAAC,SAAI,WAAW,wBAAwB,SAAS,IAE/C;AAAA,oBAAAD,OAAC,SAAI,WAAU,sBACb,0BAAAA,OAACI,QAAA,EAAK,WAAU,2BACd,0BAAAJ,OAACK,eAAA,EAAY,WAAU,aACrB,0BAAAL,OAAC,SAAI,WAAU,qCACb,0BAAAA;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,QAAQ,KAAK;AAAA,QACpB,UAAU;AAAA,QACV,SAAS,MAAM,uBAAuB,EAAE;AAAA;AAAA,IAC1C,GACF,GACF,GACF,GACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,kBACZ,qBAAW,SAAS,IACnB,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,kBAAkB;AAAA,QAClB,QAAQ,QAAQ,UAAU;AAAA,QAC1B,WAAW,QAAQ,aAAa;AAAA,QAChC,QAAQ;AAAA;AAAA,IACV,IAEA,gBAAAA;AAAA,MAACM;AAAA,MAAA;AAAA,QACC,MAAMR;AAAA,QACN,OAAOI,GAAE,uBAAuB;AAAA,QAChC,aACE,QAAQ,IACJA,GAAE,6BAA6B,IAC/BA,GAAE,qBAAqB;AAAA;AAAA,IAE/B,GAEJ;AAAA,IAGC,WAAW,SAAS,KAAK,kBAAkB,SAC1C,gBAAAF,OAAC,SAAI,WAAU,sBACb,0BAAAA;AAAA,MAACO;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA,cAAc;AAAA,QACd,UAAS;AAAA;AAAA,IACX,GACF;AAAA,KAEJ;AAEJ;;;AavHA;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,OACK;AAmEC,SACE,OAAAC,QADF,QAAAC,eAAA;AAlDD,IAAM,aAAwC,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,MAAM;AACJ,QAAM,iBAAiB,MAAM;AAC3B,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,uBAAuB,MAAM;AACjC,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,eAAe,OAAO,SAA4C;AACtE,QAAI;AACF,YAAM,SAAS,IAAI;AACnB,mBAAa,KAAK;AAAA,IACpB,SAAS,OAAO;AACd,cAAQ,MAAM,0BAA0B,KAAK;AAAA,IAC/C;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,iBAAa,KAAK;AAAA,EACpB;AAEA,SACE,gBAAAD,OAACE,UAAA,EAAO,MAAY,cAClB,0BAAAD,QAACE,iBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAF,QAACG,gBAAA,EACC;AAAA,sBAAAJ,OAACK,eAAA,EAAa,yBAAe,GAAE;AAAA,MAC/B,gBAAAL,OAACM,qBAAA,EACE,+BAAqB,GACxB;AAAA,OACF;AAAA,IAEA,gBAAAN;AAAA,MAAC;AAAA;AAAA,QACC,aAAa;AAAA,QACb,UAAU;AAAA,QACV,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA,YAAY;AAAA,QACZ,OAAO,eAAe;AAAA,QACtB,YAAY,SAAS,WAAW,gBAAgB,SAAS,SAAS,gBAAgB;AAAA;AAAA,IACpF;AAAA,KACF,GACF;AAEJ;;;AC7FA;AAAA,EACE,UAAAO;AAAA,EACA,gBAAAC;AAAA,EACA,uBAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,uBAAAC;AAAA,EACA,yBAAAC;AAAA,OACK;AACP;AAAA,EACE,OAAAC;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,EACA,YAAAC;AAAA,EACA,kBAAAC;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,OACK;AAkCC,gBAAAC,QA0BE,QAAAC,eA1BF;AApBD,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SACE,gBAAAA,QAAC,SAAI,WAAU,uCAEb;AAAA,oBAAAD;AAAA,MAACb;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,OAAO,IAAI;AAAA,QAC1B,WAAU;AAAA,QACV,OAAM;AAAA,QAEN,0BAAAa,OAACP,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,IAC3B;AAAA,IAEA,gBAAAO;AAAA,MAACb;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,OAAO,IAAI;AAAA,QAC1B,WAAU;AAAA,QACV,OAAM;AAAA,QAEN,0BAAAa,OAACN,QAAA,EAAK,WAAU,WAAU;AAAA;AAAA,IAC5B;AAAA,IAGA,gBAAAO,QAACb,eAAA,EACC;AAAA,sBAAAY,OAACT,sBAAA,EAAoB,SAAO,MAC1B,0BAAAS;AAAA,QAACb;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,WAAU;AAAA,UACV,OAAM;AAAA,UAEN,0BAAAa,OAACH,iBAAA,EAAe,WAAU,WAAU;AAAA;AAAA,MACtC,GACF;AAAA,MACA,gBAAAI,QAACZ,sBAAA,EAAoB,OAAM,OAAM,WAAU,QACzC;AAAA,wBAAAY,QAACX,mBAAA,EAAiB,SAAS,MAAM,eAAe,IAAI,GAClD;AAAA,0BAAAU,OAACJ,WAAA,EAAS,WAAU,gBAAe;AAAA,UAClC,KAAK,WAAW,eAAe;AAAA,WAClC;AAAA,QAEA,gBAAAK,QAACX,mBAAA,EAAiB,SAAS,MAAM,gBAAgB,IAAI,GACnD;AAAA,0BAAAU,OAACD,OAAA,EAAK,WAAU,gBAAe;AAAA,UAC9B,KAAK,YAAY,mBAAmB;AAAA,WACvC;AAAA,QAEC,eACC,gBAAAE,QAACX,mBAAA,EAAiB,SAAS,MAAM,YAAY,IAAI,GAC/C;AAAA,0BAAAU,OAACF,OAAA,EAAK,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEnC;AAAA,QAGF,gBAAAE,OAACR,wBAAA,EAAsB;AAAA,QAEtB,aACC,gBAAAS,QAACX,mBAAA,EAAiB,SAAS,MAAM,UAAU,IAAI,GAC7C;AAAA,0BAAAU,OAAC,WAAQ,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEtC;AAAA,QAGF,gBAAAC;AAAA,UAACX;AAAA,UAAA;AAAA,YACC,SAAS,MAAM,SAAS,IAAI;AAAA,YAC5B,WAAU;AAAA,YAEV;AAAA,8BAAAU,OAACL,UAAA,EAAO,WAAU,gBAAe;AAAA,cAAE;AAAA;AAAA;AAAA,QAErC;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACnHA,SAAgB,YAAAO,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,EACA,kBAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP;AAAA,EACE,eAAAC;AAAA,EACA,QAAAC;AAAA,EACA,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,OAGK;AACP,SAAS,kBAAAC,uBAAsB;AAC/B;AAAA,EAEE,2BAAAC;AAAA,EACA,sBAAAC;AAAA,OACK;AAmFC,SACE,OAAAC,QADF,QAAAC,eAAA;AAvED,IAAM,gBAA8C,CAAC;AAAA,EAC1D;AAAA,EACA;AAAA,EACA,uBAAuB;AAAA,EACvB;AAAA,EACA,UAAU;AAAA,EACV,WAAW;AACb,MAAM;AACJ,QAAM,CAAC,cAAc,eAAe,IAAIpB,WAA6B,cAAc;AACnF,QAAM,CAAC,eAAe,gBAAgB,IAAIA,WAAuB,oBAAoB;AAErF,EAAAC,YAAU,MAAM;AACd,QAAI,gBAAgB;AAClB,sBAAgB,cAAc;AAAA,IAChC;AAAA,EACF,GAAG,CAAC,cAAc,CAAC;AAEnB,EAAAA,YAAU,MAAM;AACd,QAAI,sBAAsB;AACxB,uBAAiB,oBAAoB;AAAA,IACvC;AAAA,EACF,GAAG,CAAC,oBAAoB,CAAC;AAEzB,QAAM,mBAAmB,CAAC,WAAmB;AAC3C,oBAAgB,MAAM;AACtB,iBAAa,QAAQ,aAAa;AAAA,EACpC;AAEA,QAAM,2BAA2B,CAAC,UAAwB;AACxD,qBAAiB,KAAK;AACtB,QAAI,cAAc;AAChB,mBAAa,cAAc,KAAK;AAAA,IAClC;AAAA,EACF;AAEA,QAAMoB,mBAAiB,CAAC,OAAe,aAAqB;AAC1D,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU,YAAY;AAAA,IACxB,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAEA,QAAM,eAAe,CAAC,UAAkB;AACtC,WAAO,UAAU,KAAK,cAAc,MAAM,SAAS;AAAA,EACrD;AAEA,QAAM,qBAAqB,CAAC,SAAe;AACzC,QAAI,iBAAiB,KAAK;AAAI,aAAO;AACrC,QAAI,KAAK;AAAW,aAAO;AAC3B,WAAO;AAAA,EACT;AAEA,QAAM,uBAAuB,CAAC,MAAY,UAAwB;AAChE,UAAM,cAAcL,gBAAe,KAAK,YAAU,OAAO,UAAU,KAAK;AACxE,QAAI,CAAC;AAAa,aAAO,KAAK;AAE9B,UAAM,aAAa,KAAK,QAAQ,YAAY;AAC5C,UAAM,WAAWC,yBAAwB,KAAK;AAC9C,UAAM,iBAAiB,cAAc,WAAW;AAChD,WAAO,aAAa;AAAA,EACtB;AAEA,QAAM,8BAA8B,CAAC,MAAY,UAAwB;AACvE,UAAM,aAAa,qBAAqB,MAAM,KAAK;AACnD,UAAM,cAAcD,gBAAe,KAAK,YAAU,OAAO,UAAU,KAAK;AACxE,WAAO,cAAc,aAAa,YAAY,SAAS,KAAK;AAAA,EAC9D;AAEA,MAAI,SAAS;AACX,WACE,gBAAAG,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,yCAAwC;AAAA,MACvD,gBAAAA,OAAC,SAAI,WAAU,yCACZ,WAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,MACrB,gBAAAA,OAAC,SAAY,WAAU,iCAAb,CAA2C,CACtD,GACH;AAAA,OACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAAC,QAAG,WAAU,8CAA6C,kCAAoB;AAAA,QAC/E,gBAAAA,OAAC,OAAE,WAAU,uBAAsB,sDAAwC;AAAA,SAC7E;AAAA,MAEA,gBAAAA;AAAA,QAACX;AAAA,QAAA;AAAA,UACC,OAAO;AAAA,UACP,eAAe;AAAA,UACf,WAAU;AAAA,UAET,UAAAQ,gBAAe,IAAI,CAAC,UACnB,gBAAAI,QAAC,SACC;AAAA,4BAAAD;AAAA,cAACV;AAAA,cAAA;AAAA,gBACC,OAAO,MAAM;AAAA,gBACb,IAAI,MAAM;AAAA,gBACV,WAAU;AAAA,gBACV;AAAA;AAAA,YACF;AAAA,YACA,gBAAAU;AAAA,cAACT;AAAA,cAAA;AAAA,gBACC,SAAS,MAAM;AAAA,gBACf,WAAU;AAAA,gBAEV,0BAAAU,QAAC,SAAI,WAAU,eACb;AAAA,kCAAAD,OAAC,SAAI,WAAU,iCAAiC,gBAAM,OAAM;AAAA,kBAC5D,gBAAAA,OAAC,SAAI,WAAU,+BAA+B,gBAAM,aAAY;AAAA,kBAC/DF,yBAAwB,MAAM,KAAK,IAAI,KACtC,gBAAAG,QAACb,SAAA,EAAM,SAAQ,WAAU,WAAU,QAChC;AAAA,oBAAAU,yBAAwB,MAAM,KAAK;AAAA,oBAAE;AAAA,qBACxC;AAAA,mBAEJ;AAAA;AAAA,YACF;AAAA,eApBQ,MAAM,KAqBhB,CACD;AAAA;AAAA,MACH;AAAA,OACF;AAAA,IAGA,gBAAAG,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAAC,QAAG,WAAU,8CAA6C,8BAAgB;AAAA,QAC3E,gBAAAA,OAAC,OAAE,WAAU,uBAAsB,gEAAkD;AAAA,SACvF;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,IAAI,CAAC,SACV,gBAAAC;AAAA,QAAClB;AAAA,QAAA;AAAA,UAEC,WAAW,8DACT,iBAAiB,KAAK,KAAK,+BAA+B,EAC5D,IAAI,KAAK,YAAY,+BAA+B,EAAE;AAAA,UACtD,SAAS,MAAM,CAAC,YAAY,iBAAiB,KAAK,EAAE;AAAA,UAEpD;AAAA,4BAAAiB,OAAChB,cAAA,EACC,0BAAAiB,QAAC,SAAI,WAAU,eACZ;AAAA,mBAAK,aACJ,gBAAAA,QAAC,SAAI,WAAU,yGACb;AAAA,gCAAAD,OAACP,OAAA,EAAK,WAAU,gBAAe;AAAA,gBAAE;AAAA,iBAEnC;AAAA,cAEF,gBAAAO,OAACf,aAAA,EAAW,eAAK,MAAK;AAAA,cACtB,gBAAAe,OAAC,OAAE,WAAU,oCAAoC,eAAK,aAAY;AAAA,eACpE,GACF;AAAA,YAEA,gBAAAC,QAACf,eAAA,EAEC;AAAA,8BAAAe,QAAC,SAAI,WAAU,oBACb;AAAA,gCAAAD,OAAC,SAAI,WAAU,wCACZ,UAAAE,iBAAe,qBAAqB,MAAM,aAAa,GAAG,KAAK,QAAQ,GAC1E;AAAA,gBACA,gBAAAD,QAAC,SAAI,WAAU,+BAA8B;AAAA;AAAA,kBACtCF,oBAAmB,aAAa,EAAE,YAAY;AAAA,mBACrD;AAAA,gBACA,gBAAAE,QAAC,SAAI,WAAU,mCACZ;AAAA,kBAAAC,iBAAe,4BAA4B,MAAM,aAAa,GAAG,KAAK,QAAQ;AAAA,kBAAE;AAAA,mBACnF;AAAA,gBACCJ,yBAAwB,aAAa,IAAI,KACxC,gBAAAG,QAAC,SAAI,WAAU,oCACZ;AAAA,kBAAAH,yBAAwB,aAAa;AAAA,kBAAE;AAAA,mBAC1C;AAAA,gBAED,KAAK,YAAY,KAChB,gBAAAG,QAAC,SAAI,WAAU,oCACZ;AAAA,uBAAK;AAAA,kBAAU;AAAA,mBAClB;AAAA,iBAEJ;AAAA,cAGA,gBAAAA,QAAC,SAAI,WAAU,kBACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAA,QAAC,UAAK,WAAU,+CACd;AAAA,oCAAAD,OAACN,WAAA,EAAQ,WAAU,WAAU;AAAA,oBAAE;AAAA,qBAEjC;AAAA,kBACA,gBAAAM,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,OAAO,GAAE;AAAA,mBACnE;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAA,QAAC,UAAK,WAAU,+CACd;AAAA,oCAAAD,OAACL,SAAA,EAAM,WAAU,WAAU;AAAA,oBAAE;AAAA,qBAE/B;AAAA,kBACA,gBAAAK,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,KAAK,GAAE;AAAA,mBACjE;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAA,QAAC,UAAK,WAAU,+CACd;AAAA,oCAAAD,OAACJ,cAAA,EAAW,WAAU,WAAU;AAAA,oBAAE;AAAA,qBAEpC;AAAA,kBACA,gBAAAI,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,QAAQ,GAAE;AAAA,mBACpE;AAAA,gBACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,kCAAAA,QAAC,UAAK,WAAU,+CACd;AAAA,oCAAAD,OAACL,SAAA,EAAM,WAAU,WAAU;AAAA,oBAAE;AAAA,qBAE/B;AAAA,kBACA,gBAAAK,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,SAAS,GAAE;AAAA,mBACrE;AAAA,iBACF;AAAA,cAGA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,qBAAK,SAAS,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,UACvC,gBAAAA,QAAC,SAAgB,WAAU,mCACzB;AAAA,kCAAAD,OAACR,eAAA,EAAY,WAAU,6CAA4C;AAAA,kBACnE,gBAAAQ,OAAC,UAAK,WAAU,uBAAuB,mBAAQ;AAAA,qBAFvC,KAGV,CACD;AAAA,gBACA,KAAK,SAAS,SAAS,KACtB,gBAAAC,QAAC,SAAI,WAAU,8BAA6B;AAAA;AAAA,kBACxC,KAAK,SAAS,SAAS;AAAA,kBAAE;AAAA,mBAC7B;AAAA,iBAEJ;AAAA,cAGA,gBAAAD,OAAC,SAAI,WAAU,eACZ,2BAAiB,KAAK,KACrB,gBAAAC,QAAC,SAAI,WAAU,oGACb;AAAA,gCAAAD,OAACR,eAAA,EAAY,WAAU,gBAAe;AAAA,gBAAE;AAAA,iBAE1C,IAEA,gBAAAQ;AAAA,gBAACb;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,WAAU;AAAA,kBACV;AAAA,kBACD;AAAA;AAAA,cAED,GAEJ;AAAA,eACF;AAAA;AAAA;AAAA,QA3GK,KAAK;AAAA,MA4GZ,CACD,GACH;AAAA,OACF;AAAA,KACF;AAEJ;;;AC7RA;AAAA,EACE,QAAAgB;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP;AAAA,EACE,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,EACA,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,QAAAC;AAAA,EACA,YAAAC;AAAA,OACK;AAmDS,gBAAAC,QAGE,QAAAC,eAHF;AAvCT,IAAM,WAAoC,CAAC;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,UAAU;AACZ,MAAM;AACJ,QAAMC,mBAAiB,CAAC,OAAe,aAAqB;AAC1D,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU,YAAY;AAAA,IACxB,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAEA,QAAM,sBAAsB,CAAC,UAAkB;AAC7C,WAAO,UAAU,YAAY,WAAW;AAAA,EAC1C;AAEA,QAAM,eAAe,CAAC,UAAkB;AACtC,WAAO,UAAU,KAAK,cAAc,MAAM,SAAS;AAAA,EACrD;AAEA,QAAMC,eAAa,CAACC,UAAwB;AAC1C,UAAM,UAAU,OAAOA,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAC5D,WAAO,QAAQ,mBAAmB,SAAS;AAAA,MACzC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,MAAI,YAAY,WAAW;AACzB,WACE,gBAAAJ,OAACb,QAAA,EAAK,WAAU,qCACd,0BAAAa,OAACV,eAAA,EAAY,WAAU,OACrB,0BAAAW,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,2BACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAACP,WAAA,EAAQ,WAAU,8BAA6B;AAAA,QAChD,gBAAAO,OAAC,UAAK,WAAU,iCAAiC,eAAK,MAAK;AAAA,QAC1D,KAAK,aACJ,gBAAAC,QAACV,SAAA,EAAM,SAAQ,WAAU,WAAU,WACjC;AAAA,0BAAAS,OAACJ,OAAA,EAAK,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEnC;AAAA,SAEJ,GACF;AAAA,MACA,gBAAAI,OAAC,SAAI,WAAU,cACb,0BAAAC,QAAC,SAAI,WAAU,iCACZ;AAAA,QAAAC,iBAAe,KAAK,OAAO,KAAK,QAAQ;AAAA,QACzC,gBAAAF,OAAC,UAAK,WAAU,2CACb,8BAAoB,KAAK,YAAY,GACxC;AAAA,SACF,GACF;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,MAAI,YAAY,YAAY;AAC1B,WACE,gBAAAC,QAACd,QAAA,EAAK,WAAU,qCACd;AAAA,sBAAAa,OAACZ,cAAA,EACC,0BAAAa,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,QAACZ,aAAA,EAAU,WAAU,2BACnB;AAAA,0BAAAW,OAACP,WAAA,EAAQ,WAAU,WAAU;AAAA,UAC5B,KAAK;AAAA,UACL,KAAK,aACJ,gBAAAQ,QAACV,SAAA,EAAM,SAAQ,WAAU,WAAU,WACjC;AAAA,4BAAAS,OAACJ,OAAA,EAAK,WAAU,gBAAe;AAAA,YAAE;AAAA,aAEnC;AAAA,WAEJ;AAAA,QACA,gBAAAK,QAAC,SAAI,WAAU,cACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,0CACZ;AAAA,YAAAC,iBAAe,KAAK,OAAO,KAAK,QAAQ;AAAA,YACzC,gBAAAF,OAAC,UAAK,WAAU,2CACb,8BAAoB,KAAK,YAAY,GACxC;AAAA,aACF;AAAA,UACC,KAAK,YAAY,KAChB,gBAAAC,QAAC,SAAI,WAAU,+BACZ;AAAA,iBAAK;AAAA,YAAU;AAAA,aAClB;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,MACA,gBAAAA,QAACX,eAAA,EAAY,WAAU,aACrB;AAAA,wBAAAU,OAAC,OAAE,WAAU,uBAAuB,eAAK,aAAY;AAAA,QAErD,gBAAAC,QAAC,SAAI,WAAU,kCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACP,WAAA,EAAQ,WAAU,8BAA6B;AAAA,YAChD,gBAAAO,OAAC,UAAK,WAAU,uBAAsB,sBAAQ;AAAA,YAC9C,gBAAAA,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,OAAO,GAAE;AAAA,aACnE;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACN,SAAA,EAAM,WAAU,8BAA6B;AAAA,YAC9C,gBAAAM,OAAC,UAAK,WAAU,uBAAsB,oBAAM;AAAA,YAC5C,gBAAAA,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,KAAK,GAAE;AAAA,aACjE;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACL,cAAA,EAAW,WAAU,8BAA6B;AAAA,YACnD,gBAAAK,OAAC,UAAK,WAAU,uBAAsB,uBAAS;AAAA,YAC/C,gBAAAA,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,QAAQ,GAAE;AAAA,aACpE;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACN,SAAA,EAAM,WAAU,8BAA6B;AAAA,YAC9C,gBAAAM,OAAC,UAAK,WAAU,uBAAsB,wBAAU;AAAA,YAChD,gBAAAA,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,OAAO,SAAS,GAAE;AAAA,aACrE;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,oBAAmB;AAAA;AAAA,YAAW,KAAK,SAAS;AAAA,YAAO;AAAA,aAAE;AAAA,UACpE,gBAAAA,QAAC,SAAI,WAAU,8BACZ;AAAA,iBAAK,SAAS,MAAM,GAAG,CAAC,EAAE,KAAK,IAAI;AAAA,YACnC,KAAK,SAAS,SAAS,KAAK;AAAA,aAC/B;AAAA,WACF;AAAA,QAEA,gBAAAA,QAAC,SAAI,WAAU,gEACb;AAAA,0BAAAA,QAAC,UAAK;AAAA;AAAA,YAAUE,aAAW,KAAK,SAAS;AAAA,aAAE;AAAA,UAC3C,gBAAAF,QAAC,UAAK;AAAA;AAAA,YAAa,KAAK;AAAA,aAAU;AAAA,WACpC;AAAA,QAEC,eACC,gBAAAA,QAAC,SAAI,WAAU,mEACZ;AAAA,oBACC,gBAAAD;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,IAAI;AAAA,cAC1B,WAAU;AAAA,cAEV,0BAAAQ,OAACH,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,UAC3B;AAAA,UAED,UACC,gBAAAG;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,IAAI;AAAA,cAC1B,WAAU;AAAA,cAEV,0BAAAQ,OAACF,QAAA,EAAK,WAAU,WAAU;AAAA;AAAA,UAC5B;AAAA,UAED,kBACC,gBAAAE;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,eAAe,IAAI;AAAA,cAClC,WAAU;AAAA,cAEV,0BAAAQ,OAACD,WAAA,EAAS,WAAU,WAAU;AAAA;AAAA,UAChC;AAAA,WAEJ;AAAA,SAEJ;AAAA,OACF;AAAA,EAEJ;AAGA,SACE,gBAAAE,QAACd,QAAA,EAAK,WAAU,qCACd;AAAA,oBAAAa,OAACZ,cAAA,EACC,0BAAAa,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAACZ,aAAA,EAAU,WAAU,2BACnB;AAAA,wBAAAW,OAACP,WAAA,EAAQ,WAAU,WAAU;AAAA,QAC5B,KAAK;AAAA,QACL,KAAK,aACJ,gBAAAQ,QAACV,SAAA,EAAM,SAAQ,WAAU,WAAU,WACjC;AAAA,0BAAAS,OAACJ,OAAA,EAAK,WAAU,gBAAe;AAAA,UAAE;AAAA,WAEnC;AAAA,SAEJ;AAAA,MACA,gBAAAK,QAAC,SAAI,WAAU,cACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,yCACZ;AAAA,UAAAC,iBAAe,KAAK,OAAO,KAAK,QAAQ;AAAA,UACzC,gBAAAF,OAAC,UAAK,WAAU,2CACb,8BAAoB,KAAK,YAAY,GACxC;AAAA,WACF;AAAA,QACC,KAAK,YAAY,KAChB,gBAAAC,QAAC,SAAI,WAAU,+BACZ;AAAA,eAAK;AAAA,UAAU;AAAA,WAClB;AAAA,SAEJ;AAAA,OACF,GACF;AAAA,IACA,gBAAAA,QAACX,eAAA,EAAY,WAAU,aACrB;AAAA,sBAAAU,OAAC,OAAE,WAAU,4CACV,eAAK,aACR;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,kCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACP,WAAA,EAAQ,WAAU,8BAA6B;AAAA,UAChD,gBAAAO,OAAC,UAAK,WAAU,uBAAsB,sBAAQ;AAAA,UAC9C,gBAAAA,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,UAAU,GAAE;AAAA,WAC/D;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACN,SAAA,EAAM,WAAU,8BAA6B;AAAA,UAC9C,gBAAAM,OAAC,UAAK,WAAU,uBAAsB,oBAAM;AAAA,UAC5C,gBAAAA,OAAC,UAAK,WAAU,eAAe,uBAAa,KAAK,QAAQ,GAAE;AAAA,WAC7D;AAAA,SACF;AAAA,MAEC,eACC,gBAAAC,QAAC,SAAI,WAAU,mEACZ;AAAA,kBACC,gBAAAD;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,OAAO,IAAI;AAAA,YAC1B,WAAU;AAAA,YAEV,0BAAAQ,OAACH,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,QAC3B;AAAA,QAED,UACC,gBAAAG;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,OAAO,IAAI;AAAA,YAC1B,WAAU;AAAA,YAEV,0BAAAQ,OAACF,QAAA,EAAK,WAAU,WAAU;AAAA;AAAA,QAC5B;AAAA,QAED,kBACC,gBAAAE;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,eAAe,IAAI;AAAA,YAClC,WAAU;AAAA,YAEV,0BAAAQ,OAACD,WAAA,EAAS,WAAU,WAAU;AAAA;AAAA,QAChC;AAAA,SAEJ;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AC7RA,SAAgB,YAAAM,kBAAgB;AAChC;AAAA,EACE,QAAAC;AAAA,EAGA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,eAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,uBAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,uBAAAC;AAAA,EACA,yBAAAC;AAAA,OACK;AACP;AAAA,EACE,WAAAC;AAAA,EAGA,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,QAAAC;AAAA,EACA,YAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,gBAAAC;AAAA,OACK;AAEP,SAAS,4BAA4B;AAwDJ,SAmLP,YAAAC,YAnLO,OAAAC,QAqBvB,QAAAC,eArBuB;AA1C1B,IAAM,YAAsC,CAAC;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AAAA,EACA,UAAU;AACZ,MAAM;AACJ,QAAMC,KAAI,qBAAqB;AAC/B,QAAM,CAAC,YAAY,aAAa,IAAIvB,WAAwB,IAAI;AAChE,QAAMwB,mBAAiB,CAAC,OAAe,aAAqB;AAC1D,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP,UAAU,YAAY;AAAA,IACxB,CAAC,EAAE,OAAO,KAAK;AAAA,EACjB;AAEA,QAAM,eAAe,CAAC,UAA8B;AAClD,QAAI,UAAU,UAAa,UAAU;AAAM,aAAO;AAClD,WAAO,UAAU,KAAK,cAAc,MAAM,SAAS;AAAA,EACrD;AAEA,QAAMC,eAAa,CAACC,UAAwB;AAC1C,UAAM,UAAU,OAAOA,UAAS,WAAW,IAAI,KAAKA,KAAI,IAAIA;AAC5D,WAAO,QAAQ,mBAAmB,SAAS;AAAA,MACzC,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,aAAa,CAAC,UAAkB;AACpC,QAAI,QAAQ;AACV,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAEA,QAAM,cAAc,CAAC,UAAkB;AACrC,QAAI,WAAW;AAAO,aAAO;AAC7B,WAAO,cAAc,QAAQ,gBAAAL,OAACL,YAAA,EAAU,WAAU,WAAU,IAAK,gBAAAK,OAACJ,cAAA,EAAY,WAAU,WAAU;AAAA,EACpG;AAEA,MAAI,SAAS;AACX,WACE,gBAAAI,OAACpB,QAAA,EAAK,WAAU,2BACd,0BAAAoB,OAACnB,eAAA,EAAY,WAAU,OACrB,0BAAAmB,OAAC,SAAI,WAAU,+BACZ,WAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,MACrB,gBAAAA,OAAC,SAAY,WAAU,iCAAb,CAA2C,CACtD,GACH,GACF,GACF;AAAA,EAEJ;AAEA,MAAI,MAAM,WAAW,GAAG;AACtB,WACE,gBAAAA,OAACpB,QAAA,EAAK,WAAU,2BACd,0BAAAoB,OAACnB,eAAA,EAAY,WAAU,qBACrB,0BAAAoB,QAAC,SAAI,WAAU,sBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,OAAC,QAAG,WAAU,4BAA4B,UAAAE,GAAE,kBAAkB,GAAE;AAAA,MAChE,gBAAAF,OAAC,OAAE,WAAU,WACV,UAAAE,GAAE,qBAAqB,GAC1B;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAF,OAACpB,QAAA,EAAK,WAAU,gDACd,0BAAAoB,OAACnB,eAAA,EAAY,WAAU,8BAErB,0BAAAmB,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAAC,WAAM,WAAU,UAEf;AAAA,oBAAAD,OAAC,WAAM,WAAU,4DACf,0BAAAC,QAAC,QACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,wFAAuF,uBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,6BAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,wBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,yFAAwF,qBAEtG;AAAA,OACF,GACF;AAAA,IAEA,gBAAAA,OAAC,WAAM,WAAU,qCACd,gBAAM,IAAI,CAAC,SACV,gBAAAC,QAAC,QAAiB,WAAU,2CAE1B;AAAA,sBAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gIACb,0BAAAA,OAACV,WAAA,EAAQ,WAAU,sBAAqB,GAC1C;AAAA,QACA,gBAAAW,QAAC,SACC;AAAA,0BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,yCACZ,eAAK,MACR;AAAA,YACC,KAAK,aACJ,gBAAAC,QAACnB,SAAA,EAAM,WAAU,yEACf;AAAA,8BAAAkB,OAACT,OAAA,EAAK,WAAU,gBAAe;AAAA,cAAE;AAAA,eAEnC;AAAA,aAEJ;AAAA,UACA,gBAAAS,OAAC,SAAI,WAAU,mCACZ,eAAK,aACR;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAEA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SACC;AAAA,wBAAAA,QAAC,SAAI,WAAU,yCACZ;AAAA,UAAAE,iBAAe,KAAK,WAAW,KAAK,QAAQ;AAAA,UAC7C,gBAAAH,OAAC,UAAK,WAAU,2CAA0C,oBAAM;AAAA,WAClE;AAAA,QACC,KAAK,YAAY,KAChB,gBAAAC,QAAC,SAAI,WAAU,oCACZ;AAAA,eAAK;AAAA,UAAU;AAAA,WAClB;AAAA,SAEJ,GACF;AAAA,MAGA,gBAAAA,QAAC,QAAG,WAAU,aACZ;AAAA,wBAAAA,QAAC,SAAI,WAAU,6BACZ;AAAA,uBAAa,KAAK,OAAO,OAAO;AAAA,UAAE;AAAA,WACrC;AAAA,QACA,gBAAAA,QAAC,SAAI,WAAU,+BACZ;AAAA,uBAAa,KAAK,OAAO,KAAK;AAAA,UAAE;AAAA,WACnC;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAA;AAAA,QAAChB;AAAA,QAAA;AAAA,UACC,QAAQ,KAAK,WAAW,WAAW;AAAA;AAAA,MACrC,GACF;AAAA,MAGA,gBAAAgB,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,UAAAI,aAAW,KAAK,SAAS,GAC5B,GACF;AAAA,MAEA,gBAAAJ,OAAC,QAAG,WAAU,wBACZ,0BAAAC,QAAChB,eAAA,EACC;AAAA,wBAAAe,OAACZ,sBAAA,EAAoB,SAAO,MAC1B,0BAAAY;AAAA,UAACjB;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,eAAe,KAAK,KAAK,OAAO,KAAK,EAAE;AAAA,YAEpE,0BAAAiB,OAACF,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,QACpC,GACF;AAAA,QACA,gBAAAG;AAAA,UAACf;AAAA,UAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAM,eAAe,KAAK;AAAA,YAC1B,cAAc,CAAC,SAAkB,cAAc,OAAO,KAAK,KAAK,IAAI;AAAA,YAEnE;AAAA,wBACC,gBAAAe;AAAA,gBAACd;AAAA,gBAAA;AAAA,kBACC,SAAS,MAAM;AACb,2BAAO,IAAI;AACX,kCAAc,IAAI;AAAA,kBACpB;AAAA,kBAEA;AAAA,oCAAAa,OAACR,OAAA,EAAI,WAAU,gBAAe;AAAA,oBAAE;AAAA;AAAA;AAAA,cAElC;AAAA,cAED,UACC,gBAAAS;AAAA,gBAACd;AAAA,gBAAA;AAAA,kBACC,SAAS,MAAM;AACb,2BAAO,IAAI;AACX,kCAAc,IAAI;AAAA,kBACpB;AAAA,kBAEA;AAAA,oCAAAa,OAACP,QAAA,EAAK,WAAU,gBAAe;AAAA,oBAAE;AAAA;AAAA;AAAA,cAEnC;AAAA,cAED,kBACC,gBAAAQ;AAAA,gBAACd;AAAA,gBAAA;AAAA,kBACC,SAAS,MAAM;AACb,mCAAe,IAAI;AACnB,kCAAc,IAAI;AAAA,kBACpB;AAAA,kBAEA;AAAA,oCAAAa,OAACN,WAAA,EAAS,WAAU,gBAAe;AAAA,oBAClC,KAAK,WAAW,eAAe;AAAA;AAAA;AAAA,cAClC;AAAA,cAED,YACC,gBAAAO,QAAAF,YAAA,EACE;AAAA,gCAAAC,OAACX,wBAAA,EAAsB;AAAA,gBACvB,gBAAAY;AAAA,kBAACd;AAAA,kBAAA;AAAA,oBACC,SAAS,MAAM;AACb,+BAAS,IAAI;AACb,oCAAc,IAAI;AAAA,oBACpB;AAAA,oBACA,WAAU;AAAA,oBAEV;AAAA,sCAAAa,OAACH,UAAA,EAAO,WAAU,gBAAe;AAAA,sBAAE;AAAA;AAAA;AAAA,gBAErC;AAAA,iBACF;AAAA;AAAA;AAAA,QAEJ;AAAA,SACF,GACF;AAAA,SAlIO,KAAK,EAmId,CACD,GACH;AAAA,KACF,GACF,GACF,GACF;AAEJ;;;AChSA;AAAA,EACE,SAAAS;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AAyBH,qBAAAC,YAIM,OAAAC,QADF,QAAAC,eAHJ;AAXG,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAAkB;AACpB,MAAM;AACJ,QAAM,mBAAmB,cAAc,iBAAiB;AAExD,SACE,gBAAAA,QAAAF,YAAA,EAEE;AAAA,oBAAAC,OAAC,SAAI,WAAU,wBACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD;AAAA,QAACR;AAAA,QAAA;AAAA,UACC,aAAY;AAAA,UACZ,OAAO;AAAA,UACP,UAAU,CAACU,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,UAC9C,WAAU;AAAA;AAAA,MACZ;AAAA,MACA,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAO;AAAA,UACP,SAAQ;AAAA,UAER,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAa;AAAA,cACb,GAAE;AAAA;AAAA,UACJ;AAAA;AAAA,MACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAC,QAACR,UAAA,EAAO,OAAO,cAAc,eAAe,sBAC1C;AAAA,sBAAAO,OAACJ,iBAAA,EAAc,WAAU,kBACvB,0BAAAI,OAACH,eAAA,EAAY,aAAY,UAAS,GACpC;AAAA,MACA,gBAAAI,QAACP,iBAAA,EACC;AAAA,wBAAAM,OAACL,cAAA,EAAW,OAAM,OAAM,uBAAS;AAAA,QACjC,gBAAAK,OAACL,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,QACjC,gBAAAK,OAACL,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,SACvC;AAAA,OACF;AAAA,IAGC,mBAAmB,oBAAoB,kBACtC,gBAAAK;AAAA,MAACF;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS;AAAA,QACT,WAAU;AAAA,QACX;AAAA;AAAA,IAED;AAAA,KAEJ;AAEJ;;;ACpFA;AAAA,EACE,QAAAK;AAAA,EACA,eAAAC;AAAA,OACK;AA2BG,SACE,OAAAC,QADF,QAAAC,eAAA;AAXH,IAAM,YAAsC,CAAC;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,MAAM;AACJ,SACE,gBAAAA,QAAC,SAAI,WAAW,yCAAyC,SAAS,IAChE;AAAA,oBAAAD,OAACF,QAAA,EACC,0BAAAE,OAACD,eAAA,EAAY,WAAU,QACrB,0BAAAE,QAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,0CACZ,sBACH;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,+BAA8B,yBAAW;AAAA,OAC1D,GACF,GACF;AAAA,IACA,gBAAAA,OAACF,QAAA,EACC,0BAAAE,OAACD,eAAA,EAAY,WAAU,QACrB,0BAAAE,QAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,0CACZ,uBACH;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,+BAA8B,0BAAY;AAAA,OAC3D,GACF,GACF;AAAA,IACA,gBAAAA,OAACF,QAAA,EACC,0BAAAE,OAACD,eAAA,EAAY,WAAU,QACrB,0BAAAE,QAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,2CACZ,yBACH;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,+BAA8B,4BAAc;AAAA,OAC7D,GACF,GACF;AAAA,IACA,gBAAAA,OAACF,QAAA,EACC,0BAAAE,OAACD,eAAA,EAAY,WAAU,QACrB,0BAAAE,QAAC,SAAI,WAAU,eACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,0CACZ,0BACH;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,+BAA8B,8BAAgB;AAAA,OAC/D,GACF,GACF;AAAA,KACF;AAEJ;;;ACxEA,SAAS,KAAAE,KAAG,SAAAC,QAAO,QAAAC,aAAY;AAI/B,SAAS,kBAAAC,wBAAsB;AAoFzB,gBAAAC,QAUM,QAAAC,eAVN;AA/CN,IAAMC,kBAAiC;AAAA,EACrC,EAAE,OAAO,WAAW,OAAO,WAAW,QAAQ,GAAG,UAAU,EAAE;AAAA,EAC7D,EAAE,OAAO,aAAa,OAAO,aAAa,QAAQ,GAAG,UAAU,EAAE;AAAA,EACjE,EAAE,OAAO,eAAe,OAAO,eAAe,QAAQ,GAAG,UAAU,GAAG;AAAA,EACtE,EAAE,OAAO,UAAU,OAAO,UAAU,QAAQ,IAAI,UAAU,GAAG;AAC/D;AAGA,IAAMC,2BAA0B,CAAC,UAA0B;AACzD,QAAM,eAAeD,gBAAe,KAAK,QAAM,GAAG,UAAU,KAAK;AACjE,SAAO,cAAc,YAAY;AACnC;AAEA,IAAME,4BAA2B,CAAC,WAAmB,UAA0B;AAC7E,QAAM,WAAWD,yBAAwB,KAAK;AAC9C,QAAM,eAAeD,gBAAe,KAAK,QAAM,GAAG,UAAU,KAAK;AACjE,QAAM,SAAS,cAAc,UAAU;AAEvC,QAAM,sBAAsB,YAAY;AACxC,QAAM,iBAAkB,sBAAsB,WAAY;AAC1D,SAAO,sBAAsB;AAC/B;AAEA,IAAMG,oBAAmB,CAAC,WAAmB,UAA0B;AACrE,QAAM,WAAWF,yBAAwB,KAAK;AAC9C,QAAM,eAAeD,gBAAe,KAAK,QAAM,GAAG,UAAU,KAAK;AACjE,QAAM,SAAS,cAAc,UAAU;AAEvC,QAAM,sBAAsB,YAAY;AACxC,SAAQ,sBAAsB,WAAY;AAC5C;AAEO,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,MAAI,CAAC;AAAM,WAAO;AAElB,QAAM,kBAAkB,CAAC,iBAAyB;AAChD,gBAAY,KAAK,IAAI,YAAY;AAAA,EACnC;AAEA,SACE,gBAAAD,QAAC,SAAI,WAAW,uDAAuD,OAAO,UAAU,QAAQ,IAE9F;AAAA,oBAAAD;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MAAM,aAAa,KAAK;AAAA;AAAA,IACnC;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,6FAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,kDACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAA,QAAC,QAAG,WAAU,oCAAoC;AAAA,iBAAK;AAAA,YAAK;AAAA,aAAK;AAAA,UAChE,KAAK,aACJ,gBAAAA,QAAC,SAAM,SAAQ,WAAU,WAAU,mDACjC;AAAA,4BAAAD,OAACM,OAAA,EAAK,WAAU,gBAAe;AAAA,YAAE;AAAA,aAEnC;AAAA,WAEJ;AAAA,QACA,gBAAAN;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,aAAa,KAAK;AAAA,YACjC,WAAU;AAAA,YAEV,0BAAAA,OAACO,KAAA,EAAE,WAAU,WAAU;AAAA;AAAA,QACzB;AAAA,SACF;AAAA,MAGA,gBAAAN,QAAC,SAAI,WAAU,OAEb;AAAA,wBAAAD,OAAC,OAAE,WAAU,sBAAsB,eAAK,aAAY;AAAA,QAGpD,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,4CAA2C,uCAEzD;AAAA,UAEA,gBAAAA,OAAC,SAAI,WAAU,wDACZ,UAAAE,gBAAe,IAAI,CAAC,UAAU;AAC7B,kBAAM,kBAAkBE,0BAAyB,KAAK,OAAO,MAAM,KAAK;AACxE,kBAAM,UAAUC,kBAAiB,KAAK,OAAO,MAAM,KAAK;AACxD,kBAAM,aAAa,KAAK,iBAAiB,MAAM;AAE/C,mBACE,gBAAAJ;AAAA,cAAC;AAAA;AAAA,gBAEC,WAAW,8DACT,aAAa,oCAAoC,kBACnD;AAAA,gBACA,SAAS,MAAM,gBAAgB,MAAM,KAAK;AAAA,gBAE1C;AAAA,kCAAAD,OAAC,cAAW,WAAU,QACpB,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,oCAAAD,OAAC,aAAU,WAAU,2BAClB,gBAAM,OACT;AAAA,oBACC,cACC,gBAAAA,OAACQ,QAAA,EAAM,WAAU,yBAAwB;AAAA,qBAE7C,GACF;AAAA,kBACA,gBAAAR,OAAC,eAAY,WAAU,QACrB,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,oCAAAA,QAAC,SAAI,WAAU,oCACZ;AAAA,sBAAAF,iBAAe,KAAK,OAAO,KAAK,QAAQ;AAAA,sBAAE;AAAA,uBAC7C;AAAA,oBAEC,MAAM,WAAW,KAChB,gBAAAE,QAAC,SAAI,WAAU,sCACZ;AAAA,4BAAM;AAAA,sBAAS;AAAA,uBAClB;AAAA,oBAGF,gBAAAA,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,sBAC7BF,iBAAe,iBAAiB,KAAK,QAAQ;AAAA,uBACvD;AAAA,oBAEC,UAAU,KACT,gBAAAE,QAAC,SAAI,WAAU,0BAAyB;AAAA;AAAA,sBAC/BF,iBAAe,SAAS,KAAK,QAAQ;AAAA,uBAC9C;AAAA,oBAGF,gBAAAC;AAAA,sBAAC;AAAA;AAAA,wBACC,SAAS,aAAa,YAAY;AAAA,wBAClC,MAAK;AAAA,wBACL,WAAU;AAAA,wBACV,SAAS,CAACS,OAAwB;AAChC,0BAAAA,GAAE,gBAAgB;AAClB,0CAAgB,MAAM,KAAK;AAAA,wBAC7B;AAAA,wBAEC,uBAAa,aAAa;AAAA;AAAA,oBAC7B;AAAA,qBACF,GACF;AAAA;AAAA;AAAA,cAlDK,MAAM;AAAA,YAmDb;AAAA,UAEJ,CAAC,GACH;AAAA,WACF;AAAA,QAGA,gBAAAR,QAAC,SAAI,WAAU,QACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,4CAA2C,2BAAa;AAAA,UACtE,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,QAAC,SACC;AAAA,8BAAAD,OAAC,QAAG,WAAU,kCAAiC,oBAAM;AAAA,cACrD,gBAAAC,QAAC,QAAG,WAAU,mCACZ;AAAA,gCAAAA,QAAC,QAAG,WAAU,2BACZ;AAAA,kCAAAD,OAACQ,QAAA,EAAM,WAAU,0BAAyB;AAAA,kBACzC,KAAK,OAAO,YAAY,KAAK,cAAc,KAAK,OAAO;AAAA,kBAAQ;AAAA,mBAClE;AAAA,gBACA,gBAAAP,QAAC,QAAG,WAAU,2BACZ;AAAA,kCAAAD,OAACQ,QAAA,EAAM,WAAU,0BAAyB;AAAA,kBACzC,KAAK,OAAO,UAAU,KAAK,cAAc,KAAK,OAAO;AAAA,kBAAM;AAAA,mBAC9D;AAAA,gBACA,gBAAAP,QAAC,QAAG,WAAU,2BACZ;AAAA,kCAAAD,OAACQ,QAAA,EAAM,WAAU,0BAAyB;AAAA,kBACzC,KAAK,OAAO,aAAa,KAAK,cAAc,KAAK,OAAO;AAAA,kBAAS;AAAA,mBACpE;AAAA,iBACF;AAAA,eACF;AAAA,YAEA,gBAAAP,QAAC,SACC;AAAA,8BAAAD,OAAC,QAAG,WAAU,kCAAiC,sBAAQ;AAAA,cACvD,gBAAAA,OAAC,QAAG,WAAU,mCACX,eAAK,SAAS,IAAI,CAAC,SAAS,UAC3B,gBAAAC,QAAC,QAAe,WAAU,2BACxB;AAAA,gCAAAD,OAACQ,QAAA,EAAM,WAAU,0BAAyB;AAAA,gBACzC;AAAA,mBAFM,KAGT,CACD,GACH;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,QAGC,KAAK,YAAY,KAChB,gBAAAP,QAAC,SAAI,WAAU,yDACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACQ,QAAA,EAAM,WAAU,yBAAwB;AAAA,YACzC,gBAAAP,QAAC,UAAK,WAAU,6BACb;AAAA,mBAAK;AAAA,cAAU;AAAA,eAClB;AAAA,aACF;AAAA,UACA,gBAAAA,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,YAC5B,KAAK;AAAA,YAAU;AAAA,aAC7B;AAAA,WACF;AAAA,SAEJ;AAAA,MAGA,gBAAAA,QAAC,SAAI,WAAU,+DACb;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,aAAa,KAAK;AAAA,YAClC;AAAA;AAAA,QAED;AAAA,QACA,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,MAAM,gBAAgB,KAAK,YAAY;AAAA,YAChD,WAAU;AAAA,YACX;AAAA;AAAA,cACe,KAAK;AAAA,cAAK;AAAA;AAAA;AAAA,QAC1B;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACpQA;AAAA,EACE,QAAAS;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AACP;AAAA,EACE,YAAAC;AAAA,EACA,QAAAC;AAAA,EAEA,aAAAC;AAAA,EACA,eAAAC;AAAA,EAEA,OAAAC;AAAA,OACK;AACP,SAAS,yBAAAC,+BAA6B;AAsDL,gBAAAC,QA6Bf,QAAAC,eA7Be;AA3B1B,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AAAA,EACZ;AAAA,EACA,UAAU;AACZ,MAAM;AACJ,QAAMC,KAAIH,wBAAsB;AAChC,QAAMI,eAAa,CAACC,UAAiB;AACnC,WAAO,IAAI,KAAKA,KAAI,EAAE,mBAAmB,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,aAAa,CAAC,UAAkB;AACpC,QAAI,QAAQ;AACV,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAEA,QAAM,cAAc,CAAC,UAAkB;AACrC,QAAI,WAAW;AAAO,aAAO;AAC7B,WAAO,cAAc,QAAQ,gBAAAJ,OAACJ,YAAA,EAAU,WAAU,WAAU,IAAK,gBAAAI,OAACH,cAAA,EAAY,WAAU,WAAU;AAAA,EACpG;AAEA,MAAI,SAAS;AACX,WACE,gBAAAG,OAACX,QAAA,EAAK,WAAU,2BACd,0BAAAW,OAACV,eAAA,EACC,0BAAAU,OAAC,SAAI,WAAU,2BACZ,WAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,MACrB,gBAAAA,OAAC,SAAY,WAAU,iCAAb,CAA2C,CACtD,GACH,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAACX,QAAA,EAAK,WAAU,gDACd,0BAAAW,OAACV,eAAA,EAAY,WAAU,8BAErB,0BAAAW,QAAC,SAAI,WAAU,+BACb;AAAA,oBAAAA,QAAC,WAAM,WAAU,UACf;AAAA,sBAAAD,OAAC,WAAM,WAAU,4DACf,0BAAAC,QAAC,QACC;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM,WAAW,MAAM;AAAA,YAEhC,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,cAEtC,YAAY,MAAM;AAAA,eACrB;AAAA;AAAA,QACF;AAAA,QACA,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM,WAAW,OAAO;AAAA,YAEjC,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,cAEtC,YAAY,OAAO;AAAA,eACtB;AAAA;AAAA,QACF;AAAA,QACA,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM,WAAW,QAAQ;AAAA,YAElC,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,cAEtC,YAAY,QAAQ;AAAA,eACvB;AAAA;AAAA,QACF;AAAA,QACA,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM,WAAW,UAAU;AAAA,YAEpC,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,cAEtC,YAAY,UAAU;AAAA,eACzB;AAAA;AAAA,QACF;AAAA,QACA,gBAAAD,OAAC,QAAG,WAAU,qDAAoD,yBAAW;AAAA,QAC7E,gBAAAA,OAAC,QAAG,WAAU,qDAAoD,oBAAM;AAAA,QACxE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAS,MAAM,WAAW,WAAW;AAAA,YAErC,0BAAAC,QAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,cAEtC,YAAY,WAAW;AAAA,eAC1B;AAAA;AAAA,QACF;AAAA,QACA,gBAAAD,OAAC,QAAG,WAAU,sDAAqD,qBAAO;AAAA,SAC5E,GACF;AAAA,MACA,gBAAAA,OAAC,WACE,wBAAc,IAAI,CAAC,UAClB,gBAAAC,QAAC,QAAkB,WAAU,gDAC3B;AAAA,wBAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,iCAAiC,gBAAM,MAAK,GAC7D;AAAA,QACA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAACT,SAAA,EAAM,SAAQ,WAAU,WAAU,aAChC,gBAAM,OACT,GACF;AAAA,QACA,gBAAAS,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACN,YAAA,EAAS,WAAU,8BAA6B;AAAA,UACjD,gBAAAM,OAAC,UAAK,WAAU,eAAe,gBAAM,QAAO;AAAA,UAC5C,gBAAAA,OAAC,UAAK,WAAU,+BACb,gBAAM,WAAW,IAAI,UAAU,UAClC;AAAA,WACF,GACF;AAAA,QACA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,2BACZ,gBAAM,WAAW,IAChB,gBAAAC,QAACV,SAAA,EAAM,SAAQ,WAAU,WAAU,gDAChC;AAAA,gBAAM;AAAA,UAAS;AAAA,WAClB,IAEA,gBAAAS,OAAC,UAAK,WAAU,sBAAqB,yBAAW,GAEpD,GACF;AAAA,QACA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,iDACZ,gBAAM,eAAe,kBACxB,GACF;AAAA,QACA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,2BACb,0BAAAA;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,QAAQ,MAAM,WAAW,WAAW;AAAA;AAAA,QACtC,GACF,GACF;AAAA,QACA,gBAAAO,OAAC,QAAG,WAAU,yCACX,UAAAG,aAAW,MAAM,SAAS,GAC7B;AAAA,QACA,gBAAAH,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,uCACZ;AAAA,oBACC,gBAAAD;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,KAAK;AAAA,cAC3B,WAAU;AAAA,cACV,OAAM;AAAA,cAEN,0BAAAQ,OAACF,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,UAC3B;AAAA,UAED,UACC,gBAAAE;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,KAAK;AAAA,cAC3B,WAAU;AAAA,cACV,OAAM;AAAA,cAEN,0BAAAQ,OAACL,QAAA,EAAK,WAAU,WAAU;AAAA;AAAA,UAC5B;AAAA,WAIJ,GACF;AAAA,WAvEO,MAAM,EAwEf,CACD,GACH;AAAA,OACF;AAAA,IAEC,cAAc,WAAW,KACxB,gBAAAM,QAAC,SAAI,WAAU,qBACb;AAAA,sBAAAD,OAACN,YAAA,EAAS,WAAU,6CAA4C;AAAA,MAChE,gBAAAM,OAAC,QAAG,WAAU,8CAA8C,UAAAE,GAAE,0BAA0B,GAAE;AAAA,MAC1F,gBAAAF,OAAC,OAAE,WAAU,uBACV,UAAAE,GAAE,iCAAiC,GACtC;AAAA,OACF;AAAA,KAEJ,GACF,GACF;AAEJ;;;AC9OA,SAAgB,YAAAG,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AA+HC,SACE,OAAAC,QADF,QAAAC,eAAA;AA9FD,IAAM,mBAAoD,CAAC;AAAA,EAChE,cAAc,CAAC;AAAA,EACf;AAAA,EACA;AAAA,EACA,UAAU;AACZ,MAAM;AACJ,QAAM,CAAC,UAAU,WAAW,IAAIR,WAA+B;AAAA,IAC7D,MAAM,YAAY,QAAQ;AAAA,IAC1B,OAAO,YAAY,SAAS;AAAA,IAC5B,QAAQ,YAAY,UAAU;AAAA,IAC9B,UAAU,YAAY,YAAY;AAAA,IAClC,aAAa,YAAY,eAAe;AAAA,IACxC,UAAU,YAAY,aAAa,SAAY,YAAY,WAAW;AAAA,IACtE,WAAW,YAAY,aAAa;AAAA,EACtC,CAAC;AAED,QAAM,CAAC,QAAQ,SAAS,IAAIA,WAAiC,CAAC,CAAC;AAE/D,EAAAC,YAAU,MAAM;AACd,QAAI,aAAa;AACf,kBAAY;AAAA,QACV,MAAM,YAAY,QAAQ;AAAA,QAC1B,OAAO,YAAY,SAAS;AAAA,QAC5B,QAAQ,YAAY,UAAU;AAAA,QAC9B,UAAU,YAAY,YAAY;AAAA,QAClC,aAAa,YAAY,eAAe;AAAA,QACxC,UAAU,YAAY,aAAa,SAAY,YAAY,WAAW;AAAA,QACtE,WAAW,YAAY,aAAa;AAAA,MACtC,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,WAAW,CAAC;AAEhB,QAAM,eAAe,MAAe;AAClC,UAAM,YAAoC,CAAC;AAE3C,QAAI,CAAC,SAAS,KAAK,KAAK,GAAG;AACzB,gBAAU,OAAO;AAAA,IACnB;AAEA,QAAI,CAAC,SAAS,MAAM,KAAK,GAAG;AAC1B,gBAAU,QAAQ;AAAA,IACpB,WAAW,CAAC,YAAY,KAAK,SAAS,KAAK,GAAG;AAC5C,gBAAU,QAAQ;AAAA,IACpB;AAEA,QAAI,SAAS,SAAS,GAAG;AACvB,gBAAU,SAAS;AAAA,IACrB;AAEA,QAAI,SAAS,WAAW,KAAK,SAAS,WAAW,KAAK;AACpD,gBAAU,WAAW;AAAA,IACvB;AAEA,QAAI,SAAS,YAAY,GAAG;AAC1B,gBAAU,YAAY;AAAA,IACxB;AAEA,cAAU,SAAS;AACnB,WAAO,OAAO,KAAK,SAAS,EAAE,WAAW;AAAA,EAC3C;AAEA,QAAM,eAAe,CAACQ,OAAuB;AAC3C,IAAAA,GAAE,eAAe;AAEjB,QAAI,aAAa,GAAG;AAClB,eAAS,QAAQ;AAAA,IACnB;AAAA,EACF;AAEA,QAAM,oBAAoB,CAAC,OAAmC,UAAqC;AACjG,gBAAY,WAAS;AAAA,MACnB,GAAG;AAAA,MACH,CAAC,KAAK,GAAG;AAAA,IACX,EAAE;AAGF,QAAI,OAAO,KAAK,GAAG;AACjB,gBAAU,WAAS;AAAA,QACjB,GAAG;AAAA,QACH,CAAC,KAAK,GAAG;AAAA,MACX,EAAE;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,0BAA0B,CAAC,OAAmC,UAAkB;AACpF,UAAM,WAAW,UAAU,KAAK,IAAI,SAAS,OAAO,EAAE;AACtD,QAAI,CAAC,MAAM,QAAQ,GAAG;AACpB,wBAAkB,OAAO,QAAQ;AAAA,IACnC;AAAA,EACF;AAEA,SACE,gBAAAD,QAAC,UAAK,UAAU,cAAc,WAAU,aACtC;AAAA,oBAAAA,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,SAAA,EAAM,SAAQ,QAAO,oBAAM;AAAA,QAC5B,gBAAAG;AAAA,UAACJ;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACM,OAAM,kBAAkB,QAAQA,GAAE,OAAO,KAAK;AAAA,YACzD,aAAY;AAAA,YACZ,WAAW,OAAO,OAAO,mBAAmB;AAAA;AAAA,QAC9C;AAAA,QACC,OAAO,QAAQ,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,MAAK;AAAA,SACnE;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,SAAA,EAAM,SAAQ,SAAQ,qBAAO;AAAA,QAC9B,gBAAAG;AAAA,UAACJ;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACM,OAAM,kBAAkB,SAASA,GAAE,OAAO,KAAK;AAAA,YAC1D,aAAY;AAAA,YACZ,WAAW,OAAO,QAAQ,mBAAmB;AAAA;AAAA,QAC/C;AAAA,QACC,OAAO,SAAS,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,OAAM;AAAA,QACnE,gBAAAA,OAAC,OAAE,WAAU,8BAA6B,wDAE1C;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,SAAA,EAAM,SAAQ,UAAS,sBAAQ;AAAA,QAChC,gBAAAG;AAAA,UAACJ;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACM,OAAM,wBAAwB,UAAUA,GAAE,OAAO,KAAK;AAAA,YACjE,aAAY;AAAA,YACZ,KAAI;AAAA,YACJ,WAAW,OAAO,SAAS,mBAAmB;AAAA;AAAA,QAChD;AAAA,QACC,OAAO,UAAU,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,QAAO;AAAA,SACvE;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,SAAA,EAAM,SAAQ,YAAW,0BAAY;AAAA,QACtC,gBAAAG;AAAA,UAACJ;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACM,OAAM,wBAAwB,YAAYA,GAAE,OAAO,KAAK;AAAA,YACnE,aAAY;AAAA,YACZ,KAAI;AAAA,YACJ,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,WAAW,OAAO,WAAW,mBAAmB;AAAA;AAAA,QAClD;AAAA,QACC,OAAO,YAAY,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,UAAS;AAAA,QACzE,gBAAAA,OAAC,OAAE,WAAU,8BAA6B,gEAE1C;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,SAAA,EAAM,SAAQ,aAAY,wBAAU;AAAA,QACrC,gBAAAG;AAAA,UAACJ;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU,CAACM,OAAM,wBAAwB,aAAaA,GAAE,OAAO,KAAK;AAAA,YACpE,aAAY;AAAA,YACZ,KAAI;AAAA,YACJ,WAAW,OAAO,YAAY,mBAAmB;AAAA;AAAA,QACnD;AAAA,QACC,OAAO,aAAa,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,iBAAO,WAAU;AAAA,QAC3E,gBAAAA,OAAC,OAAE,WAAU,8BAA6B,iDAE1C;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACH,SAAA,EAAM,SAAQ,YAAW,oBAAM;AAAA,QAChC,gBAAAI,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD;AAAA,YAACD;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,SAAS,SAAS;AAAA,cAClB,iBAAiB,CAAC,YAAY,kBAAkB,YAAY,OAAO;AAAA;AAAA,UACrE;AAAA,UACA,gBAAAC,OAAC,UAAK,WAAU,+BACb,mBAAS,WAAW,WAAW,YAClC;AAAA,WACF;AAAA,QACA,gBAAAA,OAAC,OAAE,WAAU,8BAA6B,sEAE1C;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAACH,SAAA,EAAM,SAAQ,eAAc,yBAAW;AAAA,MACxC,gBAAAG;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO,SAAS;AAAA,UAChB,UAAU,CAACI,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,UAChE,aAAY;AAAA,UACZ,MAAM;AAAA;AAAA,MACR;AAAA,MACA,gBAAAF,OAAC,OAAE,WAAU,8BAA6B,yDAE1C;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,kCACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,sCAAqC,qBAAO;AAAA,MAC1D,gBAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,UAAK,WAAU,uBAAsB,mBAAK;AAAA,UAAO;AAAA,UAAE,SAAS,QAAQ;AAAA,WACvE;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,UAAK,WAAU,uBAAsB,oBAAM;AAAA,UAAO;AAAA,UAAE,SAAS,SAAS;AAAA,WACzE;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,UAAK,WAAU,uBAAsB,uBAAS;AAAA,UAAO;AAAA,UAAE,SAAS;AAAA,UAAO;AAAA,UAAE,SAAS,WAAW,IAAI,UAAU;AAAA,WAC9G;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,UAAK,WAAU,uBAAsB,uBAAS;AAAA,UAAO;AAAA,UAAE,SAAS;AAAA,UAAS;AAAA,WAC5E;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,UAAK,WAAU,uBAAsB,qBAAO;AAAA,UAAO;AAAA,UAAE,SAAS,WAAW,WAAW;AAAA,WACvF;AAAA,QACC,SAAS,eACR,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,UAAK,WAAU,uBAAsB,0BAAY;AAAA,UAAO;AAAA,UAAE,SAAS;AAAA,WACtE;AAAA,SAEJ;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,SAAI,WAAU,qDACb;AAAA,sBAAAD;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,MACA,gBAAAK;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,UAAU;AAAA,UAET,oBAAU,cAAe,YAAY,KAAK,yBAAyB;AAAA;AAAA,MACtE;AAAA,OACF;AAAA,KACF;AAEJ;;;AClSA,OAAOQ,YAAS,YAAAC,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,qBAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP;AAAA,EACE,YAAAC;AAAA,EACA,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,KAAAC;AAAA,EACA,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AA2FK,SA6HY,YAAAC,YA5HV,OAAAC,QADF,QAAAC,eAAA;AAjEL,IAAM,2BAAoE,CAAC;AAAA,EAChF;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,MAAM;AACJ,QAAM,CAAC,WAAW,YAAY,IAAIxB,WAAS,KAAK;AAChD,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,cAAc,YAAY,KAAK;AAG5E,EAAAD,SAAM,UAAU,MAAM;AACpB,kBAAc,cAAc,YAAY,KAAK;AAAA,EAC/C,GAAG,CAAC,YAAY,CAAC;AAEjB,QAAM,qBAAqB,MAAM;AAC/B,QAAI,gBAAgB,gBAAgB;AAClC,qBAAe,YAAY;AAAA,IAC7B;AAAA,EACF;AAEA,QAAM,aAAa,MAAM;AACvB,QAAI,gBAAgB,QAAQ;AAC1B,aAAO,YAAY;AACnB,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,gBAAgB,UAAU;AAC5B,eAAS,YAAY;AACrB,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,mBAAmB,MAAM;AAC7B,kBAAc,CAAC,UAAU;AACzB,uBAAmB;AACnB,iBAAa,KAAK;AAAA,EACpB;AAEA,QAAM,mBAAmB,MAAM;AAC7B,kBAAc,cAAc,YAAY,KAAK;AAC7C,iBAAa,KAAK;AAAA,EACpB;AAEA,QAAM0B,eAAa,CAACC,UAAiB;AACnC,WAAO,IAAI,KAAKA,KAAI,EAAE,mBAAmB,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAEA,MAAI,CAAC;AAAc,WAAO;AAE1B,SACE,gBAAAH,OAACtB,UAAA,EAAO,MAAY,cAClB,0BAAAuB,QAACtB,iBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAqB,OAACpB,gBAAA,EACC,0BAAAqB,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAACnB,eAAA,EAAY,WAAU,yBAAwB,mCAE/C;AAAA,QACA,gBAAAmB,OAAClB,qBAAA,EAAkB,WAAU,oCAAmC,uDAEhE;AAAA,SACF;AAAA,MACA,gBAAAmB,QAAC,SAAI,WAAU,2BACZ;AAAA,kBACC,gBAAAA;AAAA,UAAChB;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAEV;AAAA,8BAAAe,OAACP,QAAA,EAAK,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAE9B;AAAA,QAED,YACC,gBAAAQ;AAAA,UAAChB;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAEV;AAAA,8BAAAe,OAACF,UAAA,EAAO,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAEhC;AAAA,SAEJ;AAAA,OACF,GACF;AAAA,IAEA,gBAAAG,QAAC,SAAI,WAAU,kBAEb;AAAA,sBAAAD,OAACjB,QAAA,EACC,0BAAAkB,QAACjB,eAAA,EAAY,WAAU,OACrB;AAAA,wBAAAiB,QAAC,QAAG,WAAU,sEACZ;AAAA,0BAAAD,OAACJ,OAAA,EAAK,WAAU,8BAA6B;AAAA,UAAE;AAAA,WAEjD;AAAA,QACA,gBAAAK,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,kBAAI;AAAA,YAC/D,gBAAAW,OAAC,OAAE,WAAU,gDAAgD,uBAAa,MAAK;AAAA,aACjF;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,mBAAK;AAAA,YAChE,gBAAAW,OAAC,SAAI,WAAU,QACb,0BAAAA,OAACd,SAAA,EAAM,SAAQ,WAAU,WAAU,qBAChC,uBAAa,OAChB,GACF;AAAA,aACF;AAAA,UACA,gBAAAe,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,yBAAW;AAAA,YACtE,gBAAAW,OAAC,OAAE,WAAU,0BACV,uBAAa,eAAe,2BAC/B;AAAA,aACF;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,wBAAU;AAAA,YACrE,gBAAAW,OAAC,OAAE,WAAU,0BAA0B,uBAAa,WAAU;AAAA,aAChE;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAGA,gBAAAA,OAACjB,QAAA,EACC,0BAAAkB,QAACjB,eAAA,EAAY,WAAU,OACrB;AAAA,wBAAAiB,QAAC,QAAG,WAAU,sEACZ;AAAA,0BAAAD,OAACH,cAAA,EAAW,WAAU,8BAA6B;AAAA,UAAE;AAAA,WAEvD;AAAA,QACA,gBAAAI,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,4BAAc;AAAA,YACzE,gBAAAY,QAAC,SAAI,WAAU,gCACb;AAAA,8BAAAD,OAACV,YAAA,EAAS,WAAU,8BAA6B;AAAA,cACjD,gBAAAU,OAAC,UAAK,WAAU,2CACb,uBAAa,QAChB;AAAA,cACA,gBAAAA,OAAC,UAAK,WAAU,uBACb,uBAAa,WAAW,IAAI,UAAU,UACzC;AAAA,eACF;AAAA,aACF;AAAA,UACA,gBAAAC,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,sBAAQ;AAAA,YACnE,gBAAAY,QAAC,SAAI,WAAU,gCACb;AAAA,8BAAAD,OAACT,UAAA,EAAQ,WAAU,8BAA6B;AAAA,cAC/C,aAAa,WAAW,IACvB,gBAAAU,QAACf,SAAA,EAAM,SAAQ,WAAU,WAAU,gDAChC;AAAA,6BAAa;AAAA,gBAAS;AAAA,iBACzB,IAEA,gBAAAc,OAAC,UAAK,WAAU,sBAAqB,yBAAW;AAAA,eAEpD;AAAA,aACF;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAGA,gBAAAA,OAACjB,QAAA,EACC,0BAAAkB,QAACjB,eAAA,EAAY,WAAU,OACrB;AAAA,wBAAAiB,QAAC,QAAG,WAAU,sEACZ;AAAA,0BAAAD,OAACR,SAAA,EAAM,WAAU,8BAA6B;AAAA,UAAE;AAAA,WAElD;AAAA,QACA,gBAAAQ,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,4BAAc;AAAA,YACzE,gBAAAW,OAAC,SAAI,WAAU,QACb,0BAAAA,OAACb,cAAA,EAAY,QAAQ,aAAa,WAAW,WAAW,YAAY,GACtE;AAAA,aACF;AAAA,UACC,kBACC,gBAAAa,OAAC,SAAI,WAAU,2BACZ,sBACC,gBAAAC,QAAAF,YAAA,EACE;AAAA,4BAAAE,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD;AAAA,gBAACZ;AAAA,gBAAA;AAAA,kBACC,SAAS;AAAA,kBACT,iBAAiB;AAAA,kBACjB,UAAU;AAAA;AAAA,cACZ;AAAA,cACA,gBAAAY,OAACX,SAAA,EAAM,WAAU,WACd,uBAAa,WAAW,YAC3B;AAAA,eACF;AAAA,YACA,gBAAAY,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAA;AAAA,gBAAChB;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,UAAU;AAAA,kBACV,WAAU;AAAA,kBAEV;AAAA,oCAAAe,OAACN,OAAA,EAAK,WAAU,WAAU;AAAA,oBAAE;AAAA;AAAA;AAAA,cAE9B;AAAA,cACA,gBAAAM;AAAA,gBAACf;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS;AAAA,kBACT,UAAU;AAAA,kBAEV,0BAAAe,OAACL,KAAA,EAAE,WAAU,WAAU;AAAA;AAAA,cACzB;AAAA,eACF;AAAA,aACF,IAEA,gBAAAK;AAAA,YAACf;AAAA,YAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,aAAa,IAAI;AAAA,cAChC,UAAU;AAAA,cACX;AAAA;AAAA,UAED,GAEJ;AAAA,WAEJ,GACF;AAAA,SACF,GACF;AAAA,MAGA,gBAAAe,OAACjB,QAAA,EACC,0BAAAkB,QAACjB,eAAA,EAAY,WAAU,OACrB;AAAA,wBAAAiB,QAAC,QAAG,WAAU,sEACZ;AAAA,0BAAAD,OAACR,SAAA,EAAM,WAAU,8BAA6B;AAAA,UAAE;AAAA,WAElD;AAAA,QACA,gBAAAS,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,qBAAO;AAAA,YAClE,gBAAAW,OAAC,OAAE,WAAU,0BAA0B,UAAAE,aAAW,aAAa,SAAS,GAAE;AAAA,aAC5E;AAAA,UACA,gBAAAD,QAAC,SACC;AAAA,4BAAAD,OAACX,SAAA,EAAM,WAAU,2CAA0C,0BAAY;AAAA,YACvE,gBAAAW,OAAC,OAAE,WAAU,0BAA0B,UAAAE,aAAW,aAAa,SAAS,GAAE;AAAA,aAC5E;AAAA,WACF;AAAA,SACF,GACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;ACxTA,OAAOE,YAAS,YAAAC,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,EACA,oBAAAC;AAAA,OACK;AACP,SAAS,gBAAAC,qBAAoB;AAC7B,SAAmB,cAAAC,cAAY,cAAAC,oBAAiC;AAuTxD,SACE,OAAAC,QADF,QAAAC,eAAA;AA1OR,IAAMC,mBAAkB;AAAA,EACtB,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,EACnC,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,EACnC,EAAE,OAAO,iBAAiB,OAAO,gBAAgB;AAAA,EACjD,EAAE,OAAO,eAAe,OAAO,cAAc;AAAA,EAC7C,EAAE,OAAO,QAAQ,OAAO,OAAO;AACjC;AAQO,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,YAAY,CAAC;AAAA,EACb,QAAQ,CAAC;AAAA,EACT,eAAe,CAAC;AAAA;AAAA,EAChB,OAAO;AAAA;AAAA,EACP;AAAA;AACF,MAAM;AAEJ,QAAM,CAAC,UAAU,WAAW,IAAIC,WAA0B,MAAM;AAC9D,QAAI,SAAS,UAAU,iBAAiB;AACtC,aAAO;AAAA,QACL,YAAY,gBAAgB;AAAA,QAC5B,QAAQ,gBAAgB;AAAA,QACxB,eAAe,gBAAgB;AAAA,QAC/B,QAAQ,gBAAgB;AAAA,QACxB,UAAU,gBAAgB;AAAA,QAC1B,QAAQ,gBAAgB;AAAA,QACxB,aAAa,gBAAgB;AAAA,QAC7B,oBAAoB,gBAAgB;AAAA,QACpC,gBAAgB,gBAAgB;AAAA,QAChC,eAAe,gBAAgB;AAAA,QAC/B,eAAe,gBAAgB;AAAA,QAC/B,WAAW,gBAAgB;AAAA,QAC3B,SAAS,gBAAgB;AAAA,MAC3B;AAAA,IACF;AAGA,UAAM,SAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AACnD,UAAM,YAAY,oBAAI,KAAK;AAC3B,cAAU,SAAS,UAAU,SAAS,IAAI,CAAC;AAC3C,UAAM,eAAe,UAAU,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAEzD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,WAAW;AAAA,MACX,SAAS;AAAA,IACX;AAAA,EACF,CAAC;AAED,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAsB,IAAI;AAClE,QAAM,CAAC,qBAAqB,sBAAsB,IAAIA,WAA6B,IAAI;AACvF,QAAM,CAAC,sBAAsB,uBAAuB,IAAIA,WAAS,KAAK;AAGtE,QAAM,kBAAkBC,SAAM,YAAY,OAAO,UAAkB;AACjE,YAAQ,IAAI,6DAAsD,KAAK;AAEvE,QAAI,CAAC,MAAM,KAAK,GAAG;AACjB,cAAQ,IAAI,2DAAoD;AAChE,aAAO,CAAC;AAAA,IACV;AAEA,4BAAwB,IAAI;AAC5B,YAAQ,IAAI,uDAAgD,KAAK;AAEjE,QAAI;AACF,YAAM,WAAW,MAAMC,cAAa,gBAAgB;AAAA,QAClD,GAAG;AAAA,QACH,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,WAAW;AAAA,MACb,CAAC;AAED,cAAQ,IAAI,wCAAiC,QAAQ;AAErD,UAAI,SAAS,WAAW,SAAS,MAAM;AACrC,cAAM,UAAU,SAAS,KAAK,UAAU,IAAI,cAAY;AAEtD,gBAAM,mBAAmB,CAAC;AAG1B,cAAI,SAAS;AAAO,6BAAiB,KAAK,GAAG,SAAS,KAAK,EAAE;AAC7D,cAAI,SAAS;AAAO,6BAAiB,KAAK,GAAG,SAAS,KAAK,EAAE;AAG7D,gBAAM,eAAe,CAAC;AACtB,cAAI,SAAS;AAAS,yBAAa,KAAK,SAAS,OAAO;AACxD,cAAI,SAAS;AAAM,yBAAa,KAAK,SAAS,IAAI;AAClD,cAAI,SAAS;AAAO,yBAAa,KAAK,SAAS,KAAK;AACpD,cAAI,SAAS;AAAS,yBAAa,KAAK,SAAS,OAAO;AACxD,cAAI,SAAS;AAAS,yBAAa,KAAK,SAAS,OAAO;AAExD,cAAI,aAAa,SAAS,GAAG;AAC3B,6BAAiB,KAAK,GAAG,aAAa,KAAK,IAAI,CAAC,EAAE;AAAA,UACpD;AAGA,cAAI,SAAS;AAAc,6BAAiB,KAAK,aAAa,SAAS,YAAY,EAAE;AACrF,cAAI,SAAS;AAAS,6BAAiB,KAAK,YAAY,SAAS,OAAO,EAAE;AAE1E,iBAAO;AAAA,YACL,OAAO,SAAS,GAAG,SAAS;AAAA,YAC5B,OAAO,SAAS;AAAA,YAChB,aAAa,iBAAiB,KAAK,IAAI,KAAK;AAAA,YAC5C,MAAM;AAAA,UACR;AAAA,QACF,CAAC;AACD,gBAAQ,IAAI,6CAAsC,OAAO;AACzD,eAAO;AAAA,MACT;AACA,cAAQ,IAAI,kEAA2D;AACvE,aAAO,CAAC;AAAA,IACV,SAAS,OAAO;AACd,cAAQ,MAAM,qDAA8C,KAAK;AACjE,aAAO,CAAC;AAAA,IACV,UAAE;AACA,8BAAwB,KAAK;AAC7B,cAAQ,IAAI,sDAA+C,KAAK;AAAA,IAClE;AAAA,EACF,GAAG,CAAC,CAAC;AAGL,EAAAC,YAAU,MAAM;AACd,QAAI,SAAS,UAAU,mBAAmB,MAAM,SAAS,KAAK,aAAa,SAAS,GAAG;AACrF,YAAM,OAAO,MAAM,KAAK,CAAAC,OAAKA,GAAE,OAAO,gBAAgB,MAAM;AAC5D,YAAM,cAAc,aAAa,KAAK,CAAAC,OAAKA,GAAE,OAAO,gBAAgB,aAAa;AAEjF,UAAI;AAAM,wBAAgB,IAAI;AAC9B,UAAI;AAAa,+BAAuB,WAAW;AAAA,IACrD;AAAA,EACF,GAAG,CAAC,MAAM,iBAAiB,OAAO,YAAY,CAAC;AAG/C,EAAAF,YAAU,MAAM;AACd,QAAI,gBAAgB,qBAAqB;AACvC,YAAM,cAAc,oBAAoB;AACxC,YAAM,WAAW,aAAa;AAE9B,kBAAY,WAAS;AAAA,QACnB,GAAG;AAAA,QACH,QAAQ,KAAK,MAAM,cAAc,GAAG,IAAI;AAAA;AAAA,QACxC;AAAA,MACF,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,cAAc,mBAAmB,CAAC;AAEtC,QAAM,oBAAoB,CAAC,OAA8B,UAAe;AACtE,gBAAY,WAAS,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,EAAE;AAGjD,QAAI,UAAU,eAAe,uBAAuB,OAAO;AACzD,YAAM,YAAY,IAAI,KAAK,KAAK;AAChC,YAAM,UAAU,IAAI,KAAK,SAAS;AAClC,cAAQ,SAAS,QAAQ,SAAS,IAAI,oBAAoB,QAAQ;AAElE,YAAM,aAAa,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AACrD,kBAAY,WAAS,EAAE,GAAG,MAAM,SAAS,WAAW,EAAE;AAAA,IACxD;AAAA,EACF;AAEA,QAAM,mBAAmB,CAAC,WAAmB;AAC3C,UAAM,OAAO,MAAM,KAAK,CAAAC,OAAKA,GAAE,OAAO,MAAM;AAC5C,oBAAgB,QAAQ,IAAI;AAC5B,2BAAuB,IAAI;AAC3B,sBAAkB,UAAU,MAAM;AAClC,sBAAkB,iBAAiB,CAAC;AAAA,EACtC;AAEA,QAAM,0BAA0B,CAAC,kBAA0B;AACzD,UAAM,cAAc,aAAa,KAAK,CAAAC,OAAKA,GAAE,OAAO,aAAa;AACjE,2BAAuB,eAAe,IAAI;AAC1C,sBAAkB,iBAAiB,aAAa;AAGhD,QAAI,eAAe,SAAS,WAAW;AACrC,YAAM,YAAY,IAAI,KAAK,SAAS,SAAS;AAC7C,YAAM,UAAU,IAAI,KAAK,SAAS;AAClC,cAAQ,SAAS,QAAQ,SAAS,IAAI,YAAY,QAAQ;AAE1D,YAAM,aAAa,QAAQ,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AACrD,wBAAkB,WAAW,UAAU;AAAA,IACzC;AAAA,EACF;AAGA,QAAM,eAAe,CAACC,OAAuB;AAC3C,IAAAA,GAAE,eAAe;AAEjB,QAAI,SAAS,sBAAsB,CAAC,SAAS,gBAAgB;AAC3D,YAAM,6DAA6D;AACnE;AAAA,IACF;AAGA,QAAI,SAAS,aAAa,SAAS,SAAS;AAC1C,YAAM,YAAY,IAAI,KAAK,SAAS,SAAS;AAC7C,YAAM,UAAU,IAAI,KAAK,SAAS,OAAO;AAEzC,UAAI,WAAW,WAAW;AACxB,cAAM,mCAAmC;AACzC;AAAA,MACF;AAAA,IACF;AAGA,aAAS,QAAQ;AAAA,EACnB;AAGA,QAAM,cAAc,SAAS,cACV,SAAS,UACT,SAAS,gBAAgB,KACzB,SAAS,SAAS,KAClB,SAAS,aACT,SAAS;AAE5B,SACE,gBAAAC,QAACC,QAAA,EACC;AAAA,oBAAAC,OAACC,cAAA,EACC,0BAAAH,QAACI,aAAA,EAAU,WAAU,2BACnB;AAAA,sBAAAF,OAACG,cAAA,EAAW,WAAU,WAAU;AAAA,MAC/B,SAAS,SAAS,iBAAiB;AAAA,OACtC,GACF;AAAA,IACA,gBAAAH,OAACI,eAAA,EACC,0BAAAN,QAAC,UAAK,UAAU,cAAc,WAAU,aAEtC;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAE,OAACK,SAAA,EAAM,SAAQ,YAAW,wBAAU;AAAA,QACpC,gBAAAL;AAAA,UAACM;AAAA,UAAA;AAAA,YACC,OAAO,SAAS;AAAA,YAChB,UAAU,CAAC,eAAe,kBAAkB,cAAc,UAAU;AAAA,YACpE,UAAU;AAAA,YACV,aAAY;AAAA,YACZ,mBAAkB;AAAA,YAClB,WAAU;AAAA,YACV,aAAY;AAAA;AAAA,QACd;AAAA,QACC,wBACC,gBAAAN,OAAC,OAAE,WAAU,yBAAwB,oCAAsB;AAAA,QAG5D,QAAQ,IAAI,aAAa,iBACxB,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,mDAErC;AAAA,SAEJ;AAAA,MAGA,gBAAAF,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAE,OAACK,SAAA,EAAM,SAAQ,QAAO,oBAAM;AAAA,QAC5B,gBAAAL;AAAA,UAACM;AAAA,UAAA;AAAA,YACC,OAAO,SAAS;AAAA,YAChB,UAAU,CAAC,WAAW,iBAAiB,MAAM;AAAA,YAC7C,SAAS,MAAM,IAAI,WAAS;AAAA,cAC1B,OAAO,KAAK,GAAG,SAAS;AAAA,cACxB,OAAO,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK,IAAI,KAAK,QAAQ;AAAA,cACrD,aAAa,gBAAgB,KAAK,KAAK;AAAA,cACvC,MAAM;AAAA,YACR,EAAE;AAAA,YACF,aAAY;AAAA,YACZ,mBAAkB;AAAA,YAClB,WAAU;AAAA,YACV,aAAY;AAAA;AAAA,QACd;AAAA,QACC,MAAM,WAAW,KAChB,gBAAAN,OAAC,OAAE,WAAU,wBAAuB,yDAA2C;AAAA,QAGhF,QAAQ,IAAI,aAAa,iBACxB,gBAAAF,QAAC,OAAE,WAAU,yBAAwB;AAAA;AAAA,UAC3B,MAAM;AAAA,UAAO;AAAA,WACvB;AAAA,SAEJ;AAAA,MAGC,gBACC,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAE,OAACK,SAAA,EAAM,SAAQ,eAAc,4BAAc;AAAA,QAC3C,gBAAAL;AAAA,UAACM;AAAA,UAAA;AAAA,YACC,OAAO,SAAS;AAAA,YAChB,UAAU,CAAC,kBAAkB,wBAAwB,aAAa;AAAA,YAClE,SAAS,aACN,OAAO,aAAW,QAAQ,WAAW,aAAa,MAAM,QAAQ,QAAQ,EACxE,IAAI,cAAY;AAAA,cACf,OAAO,QAAQ,GAAG,SAAS;AAAA,cAC3B,OAAO,GAAG,QAAQ,IAAI,KAAK,QAAQ,QAAQ,eAAe,QAAQ,KAAK,IAAI,aAAa,QAAQ;AAAA,cAChG,aAAa,QAAQ,WAAW,IAC5B,SAAS,QAAQ,OAAO,SAAS,QAAQ,QAAQ,eACjD;AAAA,cACJ,MAAM;AAAA,YACR,EAAE;AAAA,YACJ,aAAY;AAAA,YACZ,mBAAkB;AAAA,YAClB,WAAU;AAAA,YACV,aAAY;AAAA;AAAA,QACd;AAAA,QACC,aAAa,WAAW,IACvB,gBAAAN,OAAC,OAAE,WAAU,wBAAuB,uFAAyE,IAE7G,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,8EAErC;AAAA,QAGD,QAAQ,IAAI,aAAa,iBACxB,gBAAAF,QAAC,OAAE,WAAU,yBAAwB;AAAA;AAAA,UAC3B,aAAa;AAAA,UAAO;AAAA,UAAwB,aAAa,OAAO,CAAAF,OAAKA,GAAE,WAAW,aAAa,MAAMA,GAAE,QAAQ,EAAE;AAAA,UAAO;AAAA,WAClI;AAAA,SAEJ;AAAA,MAKD,SAAS,SAAS,KACjB,gBAAAE,QAAC,SAAI,WAAU,6BACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAE,OAAC,UAAK,WAAU,eAAc,2BAAa;AAAA,UAC3C,gBAAAF,QAAC,UAAK,WAAU,mCAAkC;AAAA;AAAA,YAC9C,SAAS;AAAA,YAAO;AAAA,YAAE,SAAS;AAAA,aAC/B;AAAA,WACF;AAAA,QAEC,gBAAgB,uBACf,gBAAAA,QAAC,SAAI,WAAU,8BACZ;AAAA,uBAAa;AAAA,UAAK;AAAA,UAAI,oBAAoB;AAAA,UAAK;AAAA,UAAG,oBAAoB;AAAA,UAAS;AAAA,UAC/E,oBAAoB,WAAW,KAC9B,gBAAAA,QAAC,UAAK,WAAU,uBAAsB;AAAA;AAAA,YAC5B,oBAAoB;AAAA,YAAQ;AAAA,YAAO,oBAAoB;AAAA,YAAS;AAAA,aAC1E;AAAA,WAEJ;AAAA,SAEJ;AAAA,MAIF,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAE,OAACK,SAAA,EAAM,SAAQ,UAAS,8BAAgB;AAAA,QACxC,gBAAAP;AAAA,UAACS;AAAA,UAAA;AAAA,YACC,OAAO,SAAS;AAAA,YAChB,eAAe,CAAC,UAAU,kBAAkB,UAAU,KAAK;AAAA,YAE3D;AAAA,8BAAAP,OAACQ,iBAAA,EACC,0BAAAR,OAACS,eAAA,EAAY,aAAY,yBAAwB,GACnD;AAAA,cACA,gBAAAT,OAACU,iBAAA,EACE,UAAAC,iBAAgB,IAAI,CAAC,WACpB,gBAAAX,OAACY,cAAA,EAA8B,OAAO,OAAO,OAC3C,0BAAAd,QAAC,SAAI,WAAU,2BACb;AAAA,gCAAAE,OAACa,cAAA,EAAW,WAAU,WAAU;AAAA,gBAC/B,OAAO;AAAA,iBACV,KAJe,OAAO,KAKxB,CACD,GACH;AAAA;AAAA;AAAA,QACF;AAAA,SACF;AAAA,MAGA,gBAAAf,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAE,OAACK,SAAA,EAAM,SAAQ,sBAAqB,0CAA4B;AAAA,UAChE,gBAAAL,OAAC,OAAE,WAAU,yBAAwB,oGAErC;AAAA,WACF;AAAA,QACA,gBAAAA;AAAA,UAACc;AAAA,UAAA;AAAA,YACC,SAAS,SAAS;AAAA,YAClB,iBAAiB,CAAC,YAAY,kBAAkB,sBAAsB,OAAO;AAAA;AAAA,QAC/E;AAAA,SACF;AAAA,MAGC,SAAS,sBACR,gBAAAhB,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAE,OAACK,SAAA,EAAM,SAAQ,kBAAiB,gCAAkB;AAAA,QAClD,gBAAAL;AAAA,UAACe;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,KAAI;AAAA,YACJ,KAAI;AAAA,YACJ,OAAO,SAAS,kBAAkB;AAAA,YAClC,UAAU,CAAClB,OAAM,kBAAkB,kBAAkB,SAASA,GAAE,OAAO,KAAK,CAAC;AAAA,YAC7E,aAAY;AAAA;AAAA,QACd;AAAA,SACF;AAAA,MAIF,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAE,OAACK,SAAA,EAAM,SAAQ,iBAAgB,uCAAyB;AAAA,UACxD,gBAAAL;AAAA,YAACe;AAAA,YAAA;AAAA,cACC,OAAO,SAAS,iBAAiB;AAAA,cACjC,UAAU,CAAClB,OAAM,kBAAkB,iBAAiBA,GAAE,OAAO,KAAK;AAAA,cAClE,aAAY;AAAA;AAAA,UACd;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAE,OAACK,SAAA,EAAM,SAAQ,iBAAgB,uCAAyB;AAAA,UACxD,gBAAAL;AAAA,YAACe;AAAA,YAAA;AAAA,cACC,OAAO,SAAS,iBAAiB;AAAA,cACjC,UAAU,CAAClB,OAAM,kBAAkB,iBAAiBA,GAAE,OAAO,KAAK;AAAA,cAClE,aAAY;AAAA;AAAA,UACd;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAE,OAACK,SAAA,EAAM,SAAQ,aAAY,0BAAY;AAAA,UACvC,gBAAAL;AAAA,YAACe;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,SAAS,aAAa;AAAA,cAC7B,UAAU,CAAClB,OAAM,kBAAkB,aAAaA,GAAE,OAAO,KAAK;AAAA,cAC9D,UAAQ;AAAA;AAAA,UACV;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAE,OAACK,SAAA,EAAM,SAAQ,WAAU,wBAAU;AAAA,UACnC,gBAAAL;AAAA,YAACe;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,SAAS,WAAW;AAAA,cAC3B,UAAU,CAAClB,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA,cAC5D,UAAQ;AAAA;AAAA,UACV;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAE,OAACK,SAAA,EAAM,SAAQ,eAAc,yBAAW;AAAA,QACxC,gBAAAL;AAAA,UAACgB;AAAA,UAAA;AAAA,YACC,OAAO,SAAS;AAAA,YAChB,UAAU,CAACnB,OAAM,kBAAkB,eAAeA,GAAE,OAAO,KAAK;AAAA,YAChE,aAAY;AAAA,YACZ,MAAM;AAAA;AAAA,QACR;AAAA,SACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,4CACb;AAAA,wBAAAE;AAAA,UAACiB;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,UAAU;AAAA,YACX;AAAA;AAAA,QAED;AAAA,QACA,gBAAAjB;AAAA,UAACiB;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,UAAU,CAAC,eAAe;AAAA,YAC1B,WAAU;AAAA,YAET,oBACI,SAAS,SAAS,gBAAgB,gBAClC,SAAS,SAAS,mBAAmB;AAAA;AAAA,QAE5C;AAAA,SACF;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACxjBA;AAAA,EACE,cAAAC;AAAA,EACA,cAAAC;AAAA,EAEA,SAAAC;AAAA,EACA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA,eAAAC;AAAA,EACA,YAAAC;AAAA,EACA,WAAAC;AAAA,EACA,YAAAC;AAAA,EAGA,aAAAC;AAAA,EACA,YAAAC;AAAA,OACK;AAiCD,SACE,OAAAC,QADF,QAAAC,eAAA;AAtBC,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,MAAI,CAAC;AAAS,WAAO;AAErB,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,eAAe;AAAA,MACnB,aAAa,EAAE,OAAO,4CAA4C,MAAMT,eAAa,MAAM,YAAY;AAAA,MACvG,WAAW,EAAE,OAAO,4CAA4C,MAAMD,SAAO,MAAM,UAAU;AAAA,MAC7F,UAAU,EAAE,OAAO,0CAA0C,MAAME,WAAS,MAAM,SAAS;AAAA,MAC3F,YAAY,EAAE,OAAO,0CAA0C,MAAMC,eAAa,MAAM,WAAW;AAAA,IACrG;AAEA,UAAM,SAAS,aAAa,MAAmC;AAC/D,UAAMQ,QAAO,OAAO;AAEpB,WACE,gBAAAD,QAAC,UAAK,WAAW,2EAA2E,OAAO,KAAK,IACtG;AAAA,sBAAAD,OAACE,OAAA,EAAK,WAAU,gBAAe;AAAA,MAC9B,OAAO;AAAA,OACV;AAAA,EAEJ;AAEA,QAAM,uBAAuB,CAAC,WAAmB;AAC/C,UAAM,eAAe;AAAA,MACnB,eAAeb;AAAA,MACf,iBAAiBC;AAAA,MACjB,UAAUA;AAAA,MACV,UAAUD;AAAA,IACZ;AAEA,UAAMa,QAAO,aAAa,MAAmC,KAAKb;AAClE,WAAO,gBAAAW,OAACE,OAAA,EAAK,WAAU,WAAU;AAAA,EACnC;AAEA,QAAM,uBAAuB,CAAC,WAAmB;AAC/C,UAAM,eAAe;AAAA,MACnB,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAEA,WAAO,aAAa,MAAmC,KAAK;AAAA,EAC9D;AAEA,QAAMC,eAAa,CAACC,UAAiB;AACnC,WAAO,IAAI,KAAKA,KAAI,EAAE,mBAAmB,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAEA,QAAMC,mBAAiB,CAAC,QAAgB,WAAmB,UAAU;AACnE,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,SACE,gBAAAL,OAAC,UAAO,MAAY,cAClB,0BAAAC,QAAC,iBAAc,WAAU,0CACvB;AAAA,oBAAAD,OAAC,gBACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAAC,eAAY,WAAU,yBAAwB,6BAE/C;AAAA,QACA,gBAAAA,OAAC,qBAAkB,WAAU,oCAAmC,8DAEhE;AAAA,SACF;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,2BACZ,+BACC,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM,kBAAkB,QAAQ,EAAE;AAAA,UAC3C,WAAU;AAAA,UAEV;AAAA,4BAAAD,OAACD,WAAA,EAAS,WAAU,WAAU;AAAA,YAAE;AAAA;AAAA;AAAA,MAElC,GAEJ;AAAA,OACF,GACF;AAAA,IAEA,gBAAAE,QAAC,SAAI,WAAU,kBAEb;AAAA,sBAAAD,OAAC,QACC,0BAAAC,QAAC,eAAY,WAAU,OACrB;AAAA,wBAAAA,QAAC,QAAG,WAAU,kEACZ;AAAA,0BAAAD,OAAC,UAAK,WAAU,oCAAmC;AAAA,UAAO;AAAA,WAE5D;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,yBAAW;AAAA,cAC/D,gBAAAC,QAAC,UAAK,WAAU,yBAAwB;AAAA;AAAA,gBAAE,QAAQ;AAAA,iBAAG;AAAA,eACvD;AAAA,YACA,gBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,qBAAO;AAAA,cAC1D,eAAe,QAAQ,MAAM;AAAA,eAChC;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,qBAAO;AAAA,cAC3D,gBAAAA,OAAC,UAAK,WAAU,mCACb,UAAAK,iBAAe,QAAQ,QAAQ,QAAQ,QAAQ,GAClD;AAAA,eACF;AAAA,YACA,gBAAAJ,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,qBAAO;AAAA,cAC3D,gBAAAC,QAAC,SAAI,WAAU,2BACZ;AAAA,qCAAqB,QAAQ,MAAM;AAAA,gBACpC,gBAAAD,OAAC,UAAK,WAAU,yBACb,+BAAqB,QAAQ,MAAM,GACtC;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,sBAAQ;AAAA,cAC5D,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,UAAAG,aAAW,QAAQ,SAAS,GAAE;AAAA,eACzE;AAAA,YACC,QAAQ,eACP,gBAAAF,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,wBAAU;AAAA,cAC9D,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,UAAAG,aAAW,QAAQ,WAAW,GAAE;AAAA,eAC3E;AAAA,YAED,QAAQ,aACP,gBAAAF,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,sBAAQ;AAAA,cAC5D,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,UAAAG,aAAW,QAAQ,SAAS,GAAE;AAAA,eACzE;AAAA,YAED,QAAQ,iBACP,gBAAAF,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,6BAAe;AAAA,cACnE,gBAAAA,OAAC,UAAK,WAAU,mCAAmC,kBAAQ,eAAc;AAAA,eAC3E;AAAA,aAEJ;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAGC,QAAQ,cAAc,YACrB,gBAAAA,OAAC,QACC,0BAAAC,QAAC,eAAY,WAAU,OACrB;AAAA,wBAAAA,QAAC,QAAG,WAAU,kEACZ;AAAA,0BAAAD,OAACL,WAAA,EAAS,WAAU,WAAU;AAAA,UAAE;AAAA,WAElC;AAAA,QACA,gBAAAM,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,4BAAc;AAAA,cAClE,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,kBAAQ,aAAa,SAAS,MAAK;AAAA,eAC9E;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,oBAAM;AAAA,cAC1D,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,kBAAQ,aAAa,SAAS,OAAM;AAAA,eAC/E;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,qCAAoC,0BAAY;AAAA,YAChE,gBAAAC,QAAC,UAAK,WAAU,yBAAwB;AAAA;AAAA,cAAE,QAAQ,aAAa,SAAS;AAAA,eAAG;AAAA,aAC7E,GACF;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAID,QAAQ,cAAc,QACrB,gBAAAD,OAAC,QACC,0BAAAC,QAAC,eAAY,WAAU,OACrB;AAAA,wBAAAA,QAAC,QAAG,WAAU,kEACZ;AAAA,0BAAAD,OAACJ,WAAA,EAAQ,WAAU,WAAU;AAAA,UAAE;AAAA,WAEjC;AAAA,QACA,gBAAAK,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,mBAAK;AAAA,cACzD,gBAAAA,OAAC,UAAK,WAAU,yBAAyB,kBAAQ,aAAa,KAAK,MAAK;AAAA,eAC1E;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,yBAAW;AAAA,cAC/D,gBAAAA,OAAC,UAAK,WAAU,yBACb,UAAAK,iBAAe,QAAQ,aAAa,KAAK,OAAO,QAAQ,aAAa,KAAK,QAAQ,GACrF;AAAA,eACF;AAAA,aACF;AAAA,UACA,gBAAAJ,QAAC,SAAI,WAAU,aACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,2BAAa;AAAA,cACjE,gBAAAA,OAAC,UAAK,WAAU,yBACb,kBAAQ,aAAa,aAAa,QAAQ,OAC7C;AAAA,eACF;AAAA,YACA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,8BAAAD,OAAC,UAAK,WAAU,qCAAoC,kCAAoB;AAAA,cACxE,gBAAAA,OAAC,SAAM,SAAQ,WAAU,WAAU,WAChC,kBAAQ,aAAa,QACxB;AAAA,eACF;AAAA,aACF;AAAA,WACF;AAAA,SACF,GACF;AAAA,MAIF,gBAAAA,OAAC,QACC,0BAAAC,QAAC,eAAY,WAAU,OACrB;AAAA,wBAAAA,QAAC,QAAG,WAAU,kEACZ;AAAA,0BAAAD,OAACH,WAAA,EAAS,WAAU,WAAU;AAAA,UAAE;AAAA,WAElC;AAAA,QACA,gBAAAI,QAAC,SAAI,WAAU,aACZ;AAAA,kBAAQ,iBACP,gBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,qCAAoC,6BAAe;AAAA,YACnE,gBAAAA,OAAC,UAAK,WAAU,mCAAmC,kBAAQ,eAAc;AAAA,aAC3E;AAAA,UAED,QAAQ,eACP,gBAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,qCAAoC,0BAAY;AAAA,YAChE,gBAAAA,OAAC,UAAK,WAAU,6CAA6C,kBAAQ,aAAY;AAAA,aACnF;AAAA,UAED,QAAQ,iBACP,gBAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,oCAAmC,6BAAe;AAAA,YAClE,gBAAAA,OAAC,UAAK,WAAU,4CAA4C,kBAAQ,eAAc;AAAA,aACpF;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,qDACZ;AAAA,gBAAQ,WAAW,aAAa,oBAC/B,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,MAAM,iBAAiB,QAAQ,EAAE;AAAA,YAC1C,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACR,eAAA,EAAY,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAErC;AAAA,QAED,QAAQ,WAAW,eAAe,mBACjC,gBAAAS;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,gBAAgB,QAAQ,EAAE;AAAA,YACzC,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACF,YAAA,EAAU,WAAU,WAAU;AAAA,cAAE;AAAA;AAAA;AAAA,QAEnC;AAAA,QAEF,gBAAAE;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS,MAAM,aAAa,KAAK;AAAA,YAClC;AAAA;AAAA,QAED;AAAA,SACF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AC1UA,SAAgB,YAAAM,kBAAgB;AAYhC;AAAA,EACE,OAAAC;AAAA,EAEA,YAAAC;AAAA,EACA,cAAAC;AAAA,EACA,gBAAAC;AAAA,EACA;AAAA,OACK;AAmFI,SA4Ke,YAAAC,YA5Kf,OAAAC,QAgCD,QAAAC,eAhCC;AAhCJ,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAsB;AACpB,QAAM,CAAC,YAAY,aAAa,IAAIC,WAAwB,IAAI;AAEhE,QAAMC,mBAAiB,CAAC,QAAgB,WAAmB,UAAU;AACnE,WAAO,IAAI,KAAK,aAAa,SAAS;AAAA,MACpC,OAAO;AAAA,MACP;AAAA,IACF,CAAC,EAAE,OAAO,MAAM;AAAA,EAClB;AAEA,QAAMC,eAAa,CAACC,UAAwB;AAC1C,WAAO,IAAI,KAAKA,KAAI,EAAE,mBAAmB,SAAS;AAAA,MAChD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,IACP,CAAC;AAAA,EACH;AAEA,QAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAM,YAAoC;AAAA,MACxC,aAAa;AAAA,MACb,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY;AAAA,IACd;AAEA,WAAO,gBAAAL,OAAC,eAAY,QAAQ,UAAU,OAAO,YAAY,CAAC,KAAK,YAAY;AAAA,EAC7E;AAEA,QAAM,uBAAuB,CAAC,WAAmB;AAC/C,UAAM,eAAuC;AAAA,MAC3C,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAEA,WAAO,aAAa,OAAO,YAAY,CAAC,KAAK;AAAA,EAC/C;AAEA,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,QAAK,WAAU,2BACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAA,OAAC,SAAI,WAAU,+BACZ,WAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,MACrB,gBAAAA,OAAC,SAAY,WAAU,iCAAb,CAA2C,CACtD,GACH,GACF,GACF;AAAA,EAEJ;AAEA,MAAI,SAAS,WAAW,GAAG;AACzB,WACE,gBAAAA,OAAC,QAAK,WAAU,2BACd,0BAAAA,OAAC,eAAY,WAAU,qBACrB,0BAAAC,QAAC,SAAI,WAAU,sBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBAAgB,uBAAE;AAAA,MACjC,gBAAAA,OAAC,QAAG,WAAU,4BAA2B,+BAAiB;AAAA,MAC1D,gBAAAA,OAAC,OAAE,WAAU,WAAU,2DAEvB;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,QAAK,WAAU,gDACd,0BAAAA,OAAC,eAAY,WAAU,8BAErB,0BAAAA,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAAC,WAAM,WAAU,UAEf;AAAA,oBAAAD,OAAC,WAAM,WAAU,4DACf,0BAAAC,QAAC,QACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,wFAAuF,sBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,kBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,oBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,wFAAuF,kBAErG;AAAA,MACA,gBAAAA,OAAC,QAAG,WAAU,yFAAwF,qBAEtG;AAAA,OACF,GACF;AAAA,IAEA,gBAAAA,OAAC,WAAM,WAAU,qCACd,mBAAS,IAAI,CAAC,YACb,gBAAAC,QAAC,QAAoB,WAAU,2CAE7B;AAAA,sBAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,gIACb,0BAAAA,OAACH,cAAA,EAAW,WAAU,sBAAqB,GAC7C;AAAA,QACA,gBAAAI,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,yCACZ,kBAAQ,cAAc,UAAU,QAAQ,oBAC3C;AAAA,UACC,QAAQ,iBACP,gBAAAC,QAAC,SAAI,WAAU,8BAA6B;AAAA;AAAA,YACpC,QAAQ;AAAA,aAChB;AAAA,WAEJ;AAAA,SACF,GACF;AAAA,MAGA,gBAAAD,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,kBAAQ,cAAc,MAAM,QAAQ,gBACvC,GACF;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,yCACZ,UAAAG,iBAAe,QAAQ,QAAQ,QAAQ,QAAQ,GAClD,GACF;AAAA,MAGA,gBAAAH,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,+BAAqB,QAAQ,MAAM,GACtC,GACF;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,aACX,yBAAe,QAAQ,MAAM,GAChC;AAAA,MAGA,gBAAAA,OAAC,QAAG,WAAU,aACZ,0BAAAA,OAAC,SAAI,WAAU,6BACZ,UAAAI,aAAW,QAAQ,SAAS,GAC/B,GACF;AAAA,MAGA,gBAAAJ,OAAC,QAAG,WAAU,wBACZ,0BAAAC,QAAC,gBACC;AAAA,wBAAAD,OAAC,uBAAoB,SAAO,MAC1B,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,eAAe,QAAQ,KAAK,OAAO,QAAQ,EAAE;AAAA,YAE1E,0BAAAA,OAACF,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA,QACpC,GACF;AAAA,QACA,gBAAAG;AAAA,UAAC;AAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAM,eAAe,QAAQ;AAAA,YAC7B,cAAc,CAAC,SAAkB,cAAc,OAAO,QAAQ,KAAK,IAAI;AAAA,YAEtE;AAAA,wBACC,gBAAAA;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAS,MAAM;AACb,2BAAO,OAAO;AACd,kCAAc,IAAI;AAAA,kBACpB;AAAA,kBAEA;AAAA,oCAAAD,OAACL,OAAA,EAAI,WAAU,gBAAe;AAAA,oBAAE;AAAA;AAAA;AAAA,cAElC;AAAA,cAED,qBACC,gBAAAM;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAS,MAAM;AACb,sCAAkB,OAAO;AACzB,kCAAc,IAAI;AAAA,kBACpB;AAAA,kBAEA;AAAA,oCAAAD,OAACJ,YAAA,EAAS,WAAU,gBAAe;AAAA,oBAAE;AAAA;AAAA;AAAA,cAEvC;AAAA,cAED,YAAY,QAAQ,WAAW,eAC9B,gBAAAK,QAAAF,YAAA,EACE;AAAA,gCAAAC,OAAC,yBAAsB;AAAA,gBACvB,gBAAAC;AAAA,kBAAC;AAAA;AAAA,oBACC,SAAS,MAAM;AACb,+BAAS,OAAO;AAChB,oCAAc,IAAI;AAAA,oBACpB;AAAA,oBACA,WAAU;AAAA,oBAEV;AAAA,sCAAAD,OAAC,cAAW,WAAU,gBAAe;AAAA,sBAAE;AAAA;AAAA;AAAA,gBAEzC;AAAA,iBACF;AAAA;AAAA;AAAA,QAEJ;AAAA,SACF,GACF;AAAA,SA7GO,QAAQ,EA8GjB,CACD,GACH;AAAA,KACF,GACF,GACF,GACF;AAEJ;;;AC5QkB,gBAAAM,QAOI,QAAAC,eAPJ;AAVH,SAAR,cAA+B,EAAE,OAAO,YAAY,GAAG,GAAuB;AACnF,SACE,gBAAAD,OAAC,SAAI,WAAW,wDAAwD,SAAS,IAC9E,gBAAM,IAAI,CAAC,MAAM,UAAU;AAC1B,UAAME,QAAO,KAAK;AAClB,WACE,gBAAAF,OAAC,QACC,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAAC,OAAE,WAAU,gDAAgD,eAAK,OAAM;AAAA,QACxE,gBAAAA,OAAC,OAAE,WAAW,sBAAsB,KAAK,KAAK,SAAU,eAAK,OAAM;AAAA,QAClE,KAAK,SACJ,gBAAAC,QAAC,SAAI,WAAW,mCACd,KAAK,MAAM,aAAa,mBAAmB,cAC7C,IACE;AAAA,0BAAAD,OAAC,UAAM,eAAK,MAAM,aAAa,WAAM,UAAI;AAAA,UACzC,gBAAAC,QAAC,UAAM;AAAA,iBAAK,IAAI,KAAK,MAAM,KAAK;AAAA,YAAE;AAAA,aAAC;AAAA,WACrC;AAAA,SAEJ;AAAA,MACA,gBAAAD,OAAC,SAAI,WAAW,oBAAoB,KAAK,OAAO,IAC9C,0BAAAA,OAACE,OAAA,EAAK,WAAW,WAAW,KAAK,KAAK,IAAI,GAC5C;AAAA,OACF,GACF,KAnBS,KAoBX;AAAA,EAEJ,CAAC,GACH;AAEJ;;;ACjDA,SAAS,UAAAC,eAAc;AAiCX,SACE,OAAAC,QADF,QAAAC,eAAA;AAbG,SAAR,iBAAkC;AAAA,EACvC;AAAA,EACA;AAAA,EACA,oBAAoB;AAAA,EACpB,UAAU,CAAC;AAAA,EACX,YAAY;AACd,GAA0B;AACxB,SACE,gBAAAD,OAAC,QAAK,WACJ,0BAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,mCAEb;AAAA,oBAAAD,OAAC,SAAI,WAAU,UACb,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD,OAACD,SAAA,EAAO,WAAU,iFAAgF;AAAA,MAClG,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,aAAa;AAAA,UACb,OAAO;AAAA,UACP,UAAU,CAACE,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,UAC9C,WAAU;AAAA;AAAA,MACZ;AAAA,OACF,GACF;AAAA,IAGC,QAAQ,SAAS,KAChB,gBAAAF,OAAC,SAAI,WAAU,cACZ,kBAAQ,IAAI,CAAC,QAAQ,UACpB,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,OAAO,OAAO;AAAA,QACd,UAAU,CAACE,OAA4C,OAAO,SAASA,GAAE,OAAO,KAAK;AAAA,QACrF,WAAU;AAAA,QAET,iBAAO,QAAQ,IAAI,CAAC,WACnB,gBAAAF,OAAC,YAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,KAEpB,CACD;AAAA;AAAA,MATI;AAAA,IAUP,CACD,GACH;AAAA,KAEJ,GACF,GACF;AAEJ;;;ACXM,gBAAAG,cAAA;AApDS,SAAR,iBAAkC,EAAE,QAAQ,OAAO,WAAW,YAAY,GAAG,GAAqB;AACvG,QAAM,kBAAkB,MAAM;AAC5B,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,UACL,SAAS,EAAE,OAAO,2BAA2B,MAAM,QAAQ;AAAA,UAC3D,YAAY,EAAE,OAAO,6BAA6B,MAAM,WAAW;AAAA,UACnE,gBAAgB,EAAE,OAAO,+BAA+B,MAAM,eAAe;AAAA,UAC7E,gBAAgB,EAAE,OAAO,6BAA6B,MAAM,eAAe;AAAA,QAC7E;AAAA,MAEF,KAAK;AACH,eAAO;AAAA,UACL,UAAU,EAAE,OAAO,+BAA+B,MAAM,SAAS;AAAA,UACjE,YAAY,EAAE,OAAO,6BAA6B,MAAM,WAAW;AAAA,UACnE,WAAW,EAAE,OAAO,iCAAiC,MAAM,UAAU;AAAA,UACrE,aAAa,EAAE,OAAO,2BAA2B,MAAM,YAAY;AAAA,QACrE;AAAA,MAEF,KAAK;AACH,eAAO;AAAA,UACL,WAAW,EAAE,OAAO,+BAA+B,MAAM,UAAU;AAAA,UACnE,WAAW,EAAE,OAAO,iCAAiC,MAAM,UAAU;AAAA,UACrE,SAAS,EAAE,OAAO,2BAA2B,MAAM,QAAQ;AAAA,UAC3D,eAAe,EAAE,OAAO,6BAA6B,MAAM,cAAc;AAAA,QAC3E;AAAA,MAEF,KAAK;AACH,eAAO;AAAA,UACL,WAAW,EAAE,OAAO,+BAA+B,MAAM,UAAU;AAAA,UACnE,UAAU,EAAE,OAAO,2BAA2B,MAAM,SAAS;AAAA,UAC7D,WAAW,EAAE,OAAO,iCAAiC,MAAM,UAAU;AAAA,UACrE,OAAO,EAAE,OAAO,6BAA6B,MAAM,MAAM;AAAA,UACzD,UAAU,EAAE,OAAO,6BAA6B,MAAM,SAAS;AAAA,UAC/D,QAAQ,EAAE,OAAO,iCAAiC,MAAM,OAAO;AAAA,UAC/D,YAAY,EAAE,OAAO,2BAA2B,MAAM,WAAW;AAAA,QACnE;AAAA,MAEF;AACE,eAAO;AAAA,UACL,WAAW,EAAE,OAAO,+BAA+B,MAAM,UAAU;AAAA,UACnE,SAAS,EAAE,OAAO,2BAA2B,MAAM,QAAQ;AAAA,UAC3D,WAAW,EAAE,OAAO,iCAAiC,MAAM,UAAU;AAAA,UACrE,QAAQ,EAAE,OAAO,6BAA6B,MAAM,OAAO;AAAA,QAC7D;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,SAAS,gBAAgB,EAAE,MAAkD;AAEnF,MAAI,CAAC,QAAQ;AACX,WACE,gBAAAA,OAAC,UAAK,WAAW,qGAAqG,SAAS,IAC5H,kBACH;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,UAAK,WAAW,2EAA2E,OAAO,KAAK,IAAI,SAAS,IAClH,iBAAO,MACV;AAEJ;;;AC/CI,SAOE,OAAAC,QAPF,QAAAC,eAAA;AAVW,SAAR,aAA8B;AAAA,EACnC,MAAMC;AAAA,EACN;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AAAA,EACP,WAAW;AAAA,EACX,YAAY;AACd,GAAsB;AACpB,SACE,gBAAAD;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA,wBAAAD,OAACE,OAAA,EAAK,WAAU,gBAAe;AAAA,QAC9B;AAAA;AAAA;AAAA,EACH;AAEJ;;;ACVQ,SACE,OAAAC,QADF,QAAAC,eAAA;AAXO,SAARC,YAA4B;AAAA,EACjC,MAAMC;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAoB;AAClB,SACE,gBAAAH,OAAC,QAAK,WACJ,0BAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,qBACb;AAAA,oBAAAD,OAACG,OAAA,EAAK,WAAU,6CAA4C;AAAA,IAC5D,gBAAAH,OAAC,QAAG,WAAU,gDAAgD,iBAAM;AAAA,IACpE,gBAAAA,OAAC,OAAE,WAAU,2BAA2B,uBAAY;AAAA,IACnD,eAAe,YACd,gBAAAA,OAAC,UAAO,SAAS,UACd,uBACH;AAAA,KAEJ,GACF,GACF;AAEJ;;;ACRU,SACE,OAAAI,QADF,QAAAC,eAAA;AAXK,SAAR,UAA2B;AAAA,EAChC;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV;AAAA,EACA,YAAY;AACd,GAAmB;AACjB,MAAI,SAAS;AACX,WACE,gBAAAD,OAAC,QAAK,WACJ,0BAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,oCAAmC;AAAA,MACjD,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,MACrB,gBAAAA,OAAC,SAAY,WAAU,sCAAb,CAAgD,CAC3D;AAAA,OACH,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,QAAK,WACJ,0BAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,mBACb,0BAAAC,QAAC,WAAM,WAAU,UACf;AAAA,oBAAAD,OAAC,WACC,0BAAAA,OAAC,QAAG,WAAU,0BACX,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,WAAW,uDAAuD,OAAO,aAAa,EAAE;AAAA,QAEvF,iBAAO;AAAA;AAAA,MAHH,OAAO;AAAA,IAId,CACD,GACH,GACF;AAAA,IACA,gBAAAA,OAAC,WACE,eAAK,IAAI,CAAC,KAAK,UACd,gBAAAA;AAAA,MAAC;AAAA;AAAA,QAEC,WAAW,kEACT,aAAa,mBAAmB,EAClC;AAAA,QACA,SAAS,MAAM,aAAa,GAAG;AAAA,QAE9B,kBAAQ,IAAI,CAAC,WACZ,gBAAAA,OAAC,QAAoB,WAAU,aAC5B,iBAAO,SACJ,OAAO,OAAO,IAAI,OAAO,GAAG,GAAG,GAAG,IAClC,IAAI,OAAO,GAAG,KAHX,OAAO,GAKhB,CACD;AAAA;AAAA,MAbI;AAAA,IAcP,CACD,GACH;AAAA,KACF,GACF,GACF,GACF;AAEJ;;;AC5BQ,gBAAAE,QA8DJ,QAAAC,eA9DI;AAvCR,IAAM,kBAAkB;AAAA,EACtB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AACR;AAEA,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAEA,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,EACN,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN;AAEO,SAASC,aAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAa;AACf,GAAqB;AAEnB,MAAI,eAAe,WAAW;AAC5B,WACE,gBAAAF,OAAC,SAAI,WAAU,4BACb,0BAAAA,OAAC,SAAI,WAAWG;AAAA;AAAA,MAEd,aAAa;AAAA;AAAA,MAEb,aAAa,UAAU,gBAAgB,QAAQ;AAAA;AAAA,MAE/C,YAAY,UAAU,eAAe,OAAO;AAAA;AAAA,MAE5C,YAAY,UAAU,eAAe,OAAO;AAAA;AAAA,MAE5C;AAAA,IACF,GACG,UACH,GACF;AAAA,EAEJ;AAGA,SACE,gBAAAH,OAAC,SAAI,WAAWG;AAAA;AAAA,IAEd,aAAa;AAAA;AAAA,IAEb,aAAa,UAAU,gBAAgB,QAAQ;AAAA;AAAA,IAE/C,YAAY,UAAU,eAAe,OAAO;AAAA;AAAA,IAE5C,YAAY,UAAU,eAAe,OAAO;AAAA;AAAA,IAE5C;AAAA,EACF,GACG,UACH;AAEJ;AAGO,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AACF,GAGG;AACD,SACE,gBAAAH,OAAC,SAAI,WAAWG,IAAG,QAAQ,SAAS,GACjC,UACH;AAEJ;AAEO,SAAS,UAAU;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,SACE,gBAAAF,QAAC,SAAI,WAAWE,IAAG,QAAQ,SAAS,GAClC;AAAA,oBAAAH,OAAC,QAAG,WAAU,oCACX,UACH;AAAA,IACC,YACC,gBAAAA,OAAC,OAAE,WAAU,sBACV,oBACH;AAAA,KAEJ;AAEJ;AAEO,SAASI,aAAY;AAAA,EAC1B;AAAA,EACA;AACF,GAGG;AACD,SACE,gBAAAJ,OAAC,SAAI,WAAWG,IAAG,aAAa,SAAS,GACtC,UACH;AAEJ;AAEO,SAAS,YAAY;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,SACE,gBAAAF,QAAC,aAAQ,WAAWE,IAAG,aAAa,SAAS,GAC1C;AAAA,aACC,gBAAAH,OAAC,QAAG,WAAU,uCACX,iBACH;AAAA,IAED;AAAA,KACH;AAEJ;;;ACzIU,gBAAAK,QAKA,QAAAC,eALA;AAZK,SAAR,gBAAiC;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA,YAAY;AACd,GAAyB;AACvB,SACE,gBAAAD,OAAC,cAAW,WACV,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,oBAAAD,OAAC,SACC,0BAAAA,OAAC,aAAU,UACR,iBACH,GACF;AAAA,IACC,eAAe,YAAY,cAC1B,gBAAAC,QAAC,UAAO,SAAS,UACf;AAAA,sBAAAD,OAAC,cAAW,WAAU,gBAAe;AAAA,MACpC;AAAA,OACH;AAAA,KAEJ,GACF;AAEJ;;;ACZQ,gBAAAE,QAOM,QAAAC,eAPN;AATO,SAAR,mBAAoC;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAA4B;AAC1B,SACE,gBAAAA,QAAC,QAAK,WACJ;AAAA,oBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAU,iCAAmB,GAChC;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,eAAK,IAAI,CAAC,QAAQ;AACjB,YAAME,QAAO,IAAI;AACjB,aACE,gBAAAD;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UAER,SAAS,MAAM,YAAY,IAAI,EAAE;AAAA,UACjC,WAAW,wGACT,cAAc,IAAI,KACd,yCACA,mEACN;AAAA,UAEA;AAAA,4BAAAD,OAACE,OAAA,EAAK,WAAU,WAAU;AAAA,YACzB,IAAI;AAAA;AAAA;AAAA,QATA,IAAI;AAAA,MAUX;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KACF;AAEJ;;;ACGU,gBAAAC,QAwBE,QAAAC,eAxBF;AAvBK,SAAR,aAA8B;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AACd,GAAsB;AACpB,QAAM,cAAc,CAAC,UAAqB;AACxC,UAAM,cAAc;AAAA,MAClB,OAAO,OAAO,MAAM,IAAI,KAAK;AAAA,MAC7B,UAAU,CAACC,OAAW,SAAS,MAAM,MAAMA,GAAE,OAAO,KAAK;AAAA,MACzD,aAAa,MAAM;AAAA,MACnB,UAAU,MAAM;AAAA,MAChB,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,IACb;AAEA,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK;AACH,eACE,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACE,GAAG;AAAA,YACJ,MAAM,MAAM,QAAQ;AAAA,YACpB,UAAU,CAACE,OAAM,SAAS,MAAM,MAAMA,GAAE,OAAO,KAAK;AAAA;AAAA,QACtD;AAAA,MAGJ,KAAK;AACH,eACE,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,OAAO,MAAM,IAAI,KAAK;AAAA,YAC7B,eAAe,CAAC,UAAU,SAAS,MAAM,MAAM,KAAK;AAAA,YAEnD,gBAAM,SAAS,IAAI,CAAC,WACnB,gBAAAA,OAAC,YAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,KAEpB,CACD;AAAA;AAAA,QACH;AAAA,MAGJ,KAAK;AACH,eACE,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,WAAM,WAAU,2CACd,gBAAM,OACT;AAAA,YACC,MAAM,eACL,gBAAAA,OAAC,OAAE,WAAU,8BAA8B,gBAAM,aAAY;AAAA,aAEjE;AAAA,UACA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAS,OAAO,MAAM,IAAI,KAAK;AAAA,cAC/B,iBAAiB,CAAC,YAAY,SAAS,MAAM,MAAM,OAAO;AAAA;AAAA,UAC5D;AAAA,WACF;AAAA,MAGJ;AACE,eAAO,gBAAAA,OAAC,SAAO,GAAG,aAAa,MAAM,MAAM,MAAM;AAAA,IACrD;AAAA,EACF;AAEA,SACE,gBAAAC,QAAC,QAAK,WACJ;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAD,OAAC,aAAW,iBAAM;AAAA,MAClB,gBAAAC,QAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,OAAC,UAAO,SAAQ,WAAU,SAAS,SAAS,mBAE5C;AAAA,QACA,gBAAAA,OAAC,UAAO,SAAS,QAAQ,UAAU,QAChC,mBAAS,cAAc,QAC1B;AAAA,SACF;AAAA,OACF,GACF;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,iBAAO,IAAI,CAAC,UACX,gBAAAC,QAAC,SACE;AAAA,YAAM,SAAS,YACd,gBAAAA,QAAC,WAAM,WAAU,sDACd;AAAA,cAAM;AAAA,QACN,MAAM,YAAY,gBAAAD,OAAC,UAAK,WAAU,qBAAoB,eAAC;AAAA,SAC1D;AAAA,MAED,YAAY,KAAK;AAAA,MACjB,MAAM,eAAe,MAAM,SAAS,YACnC,gBAAAA,OAAC,OAAE,WAAU,mCAAmC,gBAAM,aAAY;AAAA,SAT5D,MAAM,IAWhB,CACD,GACH,GACF;AAAA,KACF;AAEJ;;;AC/EgB,SACE,OAAAG,QADF,QAAAC,eAAA;AAtCD,SAAR,aAA8B,EAAE,aAAa,YAAY,GAAG,GAAsB;AACvF,QAAMC,mBAAiB,CAAC,WAAoB;AAC1C,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,mBAAmB,CAAC,WAAoB;AAC5C,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAW,wDAAwD,SAAS,IAC9E,sBAAY,IAAI,CAAC,MAAM,UAAU;AAChC,UAAMG,QAAO,KAAK;AAClB,UAAM,cAAc,KAAK,SAASD,iBAAe,KAAK,MAAM,IAAI,KAAK;AACrE,UAAM,gBAAgB,KAAK,SAAS,iBAAiB,KAAK,MAAM,IAAI,KAAK;AAEzE,WACE,gBAAAF,OAAC,QACC,0BAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAAC,OAAE,WAAU,2CAA2C,eAAK,OAAM;AAAA,QACnE,gBAAAA,OAAC,OAAE,WAAW,sBAAsB,WAAW,IAAK,eAAK,OAAM;AAAA,SACjE;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAW,oBAAoB,aAAa,IAC/C,0BAAAA,OAACG,OAAA,EAAK,WAAW,WAAW,WAAW,IAAI,GAC7C;AAAA,OACF,GACF,KAXS,KAYX;AAAA,EAEJ,CAAC,GACH;AAEJ;;;ACnBM,gBAAAC,QAcE,QAAAC,eAdF;AAfS,SAAR,eAAgC;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,YAAY;AACd,GAAwB;AACtB,SACE,gBAAAA,QAACC,cAAA,EAAY,WACX;AAAA,oBAAAF;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,aAAY;AAAA,QACZ,UAAU;AAAA;AAAA,IACZ;AAAA,IAEA,gBAAAC,QAACE,cAAA,EAEC;AAAA,sBAAAH;AAAA,QAAC;AAAA;AAAA,UACC;AAAA,UACA,WAAU;AAAA;AAAA,MACZ;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,yCAEb;AAAA,wBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACF,GACF;AAAA,QAGA,gBAAAA,OAAC,SAAI,WAAU,iBACZ,UACH;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AClFA,SAAS,SAAAI,QAAO,UAAAC,SAAQ,QAAAC,OAAM,QAAAC,OAAM,cAAc;AAG3C,IAAM,eAAe;AAAA,EAC1B,EAAE,IAAI,WAAW,OAAO,WAAW,MAAMH,OAAM;AAAA,EAC/C,EAAE,IAAI,YAAY,OAAO,YAAY,MAAMC,QAAO;AAAA,EAClD,EAAE,IAAI,SAAS,OAAO,SAAS,MAAMC,MAAK;AAAA,EAC1C,EAAE,IAAI,iBAAiB,OAAO,iBAAiB,MAAMC,MAAK;AAAA,EAC1D,EAAE,IAAI,UAAU,OAAO,UAAU,MAAM,OAAO;AAChD;AAGO,IAAM,wBAAwB;AAAA,EACnC;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,UAAU;AAAA,EACZ;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,MACP,EAAE,OAAO,MAAM,OAAO,UAAU;AAAA,MAChC,EAAE,OAAO,MAAM,OAAO,UAAU;AAAA,MAChC,EAAE,OAAO,MAAM,OAAO,SAAS;AAAA,MAC/B,EAAE,OAAO,MAAM,OAAO,SAAS;AAAA,IACjC;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,MACP,EAAE,OAAO,OAAO,OAAO,MAAM;AAAA,MAC7B,EAAE,OAAO,oBAAoB,OAAO,eAAe;AAAA,MACnD,EAAE,OAAO,mBAAmB,OAAO,eAAe;AAAA,MAClD,EAAE,OAAO,kBAAkB,OAAO,gBAAgB;AAAA,MAClD,EAAE,OAAO,uBAAuB,OAAO,eAAe;AAAA,IACxD;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,MACP,EAAE,OAAO,cAAc,OAAO,aAAa;AAAA,MAC3C,EAAE,OAAO,cAAc,OAAO,aAAa;AAAA,MAC3C,EAAE,OAAO,cAAc,OAAO,aAAa;AAAA,IAC7C;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,MACP,EAAE,OAAO,OAAO,OAAO,MAAM;AAAA,MAC7B,EAAE,OAAO,OAAO,OAAO,MAAM;AAAA,MAC7B,EAAE,OAAO,OAAO,OAAO,MAAM;AAAA,MAC7B,EAAE,OAAO,OAAO,OAAO,MAAM;AAAA,IAC/B;AAAA,EACF;AACF;AAGO,IAAM,yBAAyB;AAAA,EACpC;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AACF;AAGO,IAAM,sBAAsB;AAAA,EACjC;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,KAAK;AAAA,IACL,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AACF;AAGO,IAAM,6BAA6B;AAAA,EACxC;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,EACf;AACF;AAGO,IAAM,uBAAuB;AAAA,EAClC;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,MACP,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,MACnC,EAAE,OAAO,SAAS,OAAO,QAAQ;AAAA,MACjC,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,MACnC,EAAE,OAAO,WAAW,OAAO,UAAU;AAAA,IACvC;AAAA,EACF;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,KAAK;AAAA,IACL,aAAa;AAAA,EACf;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,aAAa;AAAA,EACf;AACF;;;ACjKU,SAEI,OAAAC,QAFJ,QAAAC,eAAA;AAtCK,SAAR,aAA8B;AAAA,EACnC;AAAA,EACA;AAAA,EACA,MAAMC;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAsB;AACpB,QAAM,kBAAkB,MAAM;AAC5B,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,UACT,aAAa;AAAA,QACf;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,UACT,aAAa;AAAA,QACf;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,OAAO;AAAA,UACP,SAAS;AAAA,UACT,aAAa;AAAA,QACf;AAAA,IACJ;AAAA,EACF;AAEA,QAAM,SAAS,gBAAgB;AAE/B,SACE,gBAAAD,QAAC,QAAK,WAAW,GAAG,SAAS,IAAI,OAAO,WAAW,aACjD;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,SAAI,WAAW,oBAAoB,OAAO,OAAO,IAChD,0BAAAA,OAACE,OAAA,EAAK,WAAW,WAAW,OAAO,KAAK,IAAI,GAC9C;AAAA,QACA,gBAAAF,OAAC,aAAU,WAAU,WAAW,iBAAM;AAAA,SACxC;AAAA,MACC,eAAe,YACd,gBAAAA,OAAC,UAAO,SAAQ,WAAU,MAAK,MAAK,SAAS,UAC1C,uBACH;AAAA,OAEJ,GACF;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,OAAE,WAAU,+BAA+B,uBAAY,GAC1D;AAAA,KACF;AAEJ;;;ACvCY,gBAAAG,QAOI,QAAAC,eAPJ;AAdG,SAAR,WAA4B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAMC;AAAA,EACN;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAoB;AAClB,SACE,gBAAAF,OAAC,QAAK,WACJ,0BAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,oBAAAA,QAAC,SACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,2CAA2C,iBAAM;AAAA,MAC9D,gBAAAA,OAAC,OAAE,WAAW,sBAAsB,KAAK,IAAK,iBAAM;AAAA,MACnD,UACC,gBAAAC,QAAC,SAAI,WAAW,wCACd,OAAO,aAAa,mBAAmB,cACzC,IACE;AAAA,wBAAAD,OAAC,UAAM,iBAAO,aAAa,WAAM,UAAI;AAAA,QACrC,gBAAAC,QAAC,UAAM;AAAA,eAAK,IAAI,OAAO,KAAK;AAAA,UAAE;AAAA,WAAC;AAAA,QAC/B,gBAAAA,QAAC,UAAK,WAAU,sBAAqB;AAAA;AAAA,UAAI,OAAO;AAAA,WAAO;AAAA,SACzD;AAAA,OAEJ;AAAA,IACA,gBAAAD,OAAC,SAAI,WAAW,oBAAoB,OAAO,IACzC,0BAAAA,OAACE,OAAA,EAAK,WAAW,WAAW,KAAK,IAAI,GACvC;AAAA,KACF,GACF,GACF;AAEJ;;;ACjDA,SAA+B,QAAAC,QAAM,YAAAC,WAAU,UAAU,cAAAC,cAAY,gBAAAC,eAAc,aAAAC,aAAW,eAAAC,eAAa,eAAAC,eAAa,QAAAC,aAAY;AAmF5H,gBAAAC,QAYU,QAAAC,eAZV;AAhEO,SAAR,aAA8B;AAAA,EACnC;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,YAAY;AACd,GAAsB;AACpB,QAAMC,gBAAe,CAAC,SAAiB;AACrC,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,QAAgB,SAA6B;AACnE,UAAM,cAAc,OAAO,YAAY;AAGvC,QAAI,YAAY,SAAS,QAAQ,KAAK,YAAY,SAAS,KAAK,GAAG;AACjE,aAAON;AAAA,IACT,WAAW,YAAY,SAAS,QAAQ,KAAK,YAAY,SAAS,MAAM,GAAG;AACzE,aAAOH;AAAA,IACT,WAAW,YAAY,SAAS,QAAQ,KAAK,YAAY,SAAS,QAAQ,GAAG;AAC3E,aAAOI;AAAA,IACT,WAAW,YAAY,SAAS,OAAO,KAAK,YAAY,SAAS,MAAM,GAAG;AACxE,aAAOL;AAAA,IACT,WAAW,YAAY,SAAS,SAAS,KAAK,YAAY,SAAS,SAAS,GAAG;AAC7E,aAAOE;AAAA,IACT,WAAW,YAAY,SAAS,OAAO,KAAK,YAAY,SAAS,UAAU,GAAG;AAC5E,aAAOC;AAAA,IACT,WAAW,YAAY,SAAS,QAAQ,KAAK,YAAY,SAAS,QAAQ,GAAG;AAC3E,aAAO;AAAA,IACT,WAAW,YAAY,SAAS,OAAO,KAAK,YAAY,SAAS,MAAM,GAAG;AACxE,aAAOE;AAAA,IACT,WAAW,YAAY,SAAS,SAAS,KAAK,YAAY,SAAS,UAAU,GAAG;AAC9E,aAAOC;AAAA,IACT;AAGA,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAOA;AAAA,MACT,KAAK;AACH,eAAOD;AAAA,MACT,KAAK;AACH,eAAOA;AAAA,MACT,KAAK;AAAA,MACL;AACE,eAAOE;AAAA,IACX;AAAA,EACF;AAEA,QAAM,oBAAoB,WAAW,MAAM,GAAG,QAAQ;AAEtD,SACE,gBAAAE,QAAC,QAAK,WACJ;AAAA,oBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAW,iBAAM,GACpB;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,4BAAkB,IAAI,CAAC,aAAa;AACnC,YAAMG,QAAO,SAAS,QAAQ,eAAe,SAAS,QAAQ,SAAS,IAAI;AAC3E,aACE,gBAAAF,QAAC,SAAsB,WAAU,0BAC/B;AAAA,wBAAAD,OAAC,SAAI,WAAW,oBAAoBE,cAAa,SAAS,IAAI,CAAC,IAC7D,0BAAAF,OAACG,OAAA,EAAK,WAAU,WAAU,GAC5B;AAAA,QACA,gBAAAF,QAAC,SAAI,WAAU,kBACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAAC,UAAK,WAAU,yCAAyC,mBAAS,MAAK;AAAA,YACvE,gBAAAA,OAAC,UAAK,WAAU,+BAA+B,mBAAS,QAAO;AAAA,aACjE;AAAA,UACA,gBAAAA,OAAC,OAAE,WAAU,oCAAoC,mBAAS,aAAY;AAAA,UACtE,gBAAAA,OAAC,OAAE,WAAU,mCAAmC,mBAAS,WAAU;AAAA,WACrE;AAAA,WAXQ,SAAS,EAYnB;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KACF;AAEJ;;;ACnFQ,gBAAAI,QAaQ,QAAAC,eAbR;AARO,SAAR,aAA8B;AAAA,EACnC;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAsB;AACpB,SACE,gBAAAA,QAAC,QAAK,WACJ;AAAA,oBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAW,iBAAM,GACpB;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,yCACZ,kBAAQ,IAAI,CAAC,WAAW;AACvB,YAAME,QAAO,OAAO;AACpB,aACE,gBAAAD;AAAA,QAAC;AAAA;AAAA,UAEC,SAAS,OAAO,WAAW;AAAA,UAC3B,SAAS,OAAO;AAAA,UAChB,WAAU;AAAA,UAEV;AAAA,4BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACE,OAAA,EAAK,WAAU,WAAU;AAAA,cAC1B,gBAAAF,OAAC,UAAK,WAAU,eAAe,iBAAO,OAAM;AAAA,eAC9C;AAAA,YACA,gBAAAA,OAAC,UAAK,WAAU,wCAAwC,iBAAO,aAAY;AAAA;AAAA;AAAA,QATtE,OAAO;AAAA,MAUd;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KACF;AAEJ;;;ACAQ,gBAAAG,QAWU,QAAAC,eAXV;AAlCO,SAAR,aAA8B;AAAA,EACnC;AAAA,EACA;AAAA,EACA,YAAY;AACd,GAAsB;AACpB,QAAMC,mBAAiB,CAAC,WAAmB;AACzC,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAM,gBAAgB,CAAC,WAAmB;AACxC,YAAQ,QAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAD,QAAC,QAAK,WACJ;AAAA,oBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAW,iBAAM,GACpB;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,kBAAQ,IAAI,CAAC,QAAQ,UAAU;AAC9B,YAAMG,QAAO,OAAO;AACpB,YAAM,aAAc,OAAO,QAAQ,OAAO,MAAO;AAEjD,aACE,gBAAAF,QAAC,SAAgB,WAAU,aACzB;AAAA,wBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACG,OAAA,EAAK,WAAU,8BAA6B;AAAA,YAC7C,gBAAAH,OAAC,UAAK,WAAU,yCAAyC,iBAAO,MAAK;AAAA,aACvE;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAA,QAAC,UAAK,WAAU,+BACb;AAAA,qBAAO;AAAA,cAAM;AAAA,cAAI,OAAO;AAAA,cAAI;AAAA,cAAE,OAAO;AAAA,eACxC;AAAA,YACA,gBAAAD,OAAC,UAAK,WAAW,6CAA6CE,iBAAe,OAAO,MAAM,CAAC,IACxF,wBAAc,OAAO,MAAM,GAC9B;AAAA,aACF;AAAA,WACF;AAAA,QACA,gBAAAF,OAAC,SAAI,WAAU,0CACb,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAW,oBAAoBE,iBAAe,OAAO,MAAM,CAAC;AAAA,YAC5D,OAAO,EAAE,OAAO,GAAG,KAAK,IAAI,YAAY,GAAG,CAAC,IAAI;AAAA;AAAA,QACjD,GACH;AAAA,WApBQ,KAqBV;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KACF;AAEJ;;;ACzFA,SAAS,cAAAE,aAAY,gBAAAC,eAAc,YAAAC,WAAU,KAAK,SAAS,WAAW,MAAM,YAAAC,WAAU,SAAAC,cAAa;AAsE7F,SACE,OAAAC,QADF,QAAAC,eAAA;AA9CN,IAAM,kBAAkB,CAAC,aAAqB;AAC5C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAY,aAAOH;AAAA,IACxB,KAAK;AAAO,aAAOC;AAAA,IACnB;AAAS,aAAOF;AAAA,EAClB;AACF;AAEA,IAAMK,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAY,aAAO;AAAA,IACxB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAM,eAAe,CAAC,UAAkB;AACtC,UAAQ,OAAO;AAAA,IACb,KAAK;AAAM,aAAOP;AAAA,IAClB,KAAK;AAAQ,aAAOC;AAAA,IACpB,KAAK;AAAU,aAAOC;AAAA,IACtB;AAAS,aAAOA;AAAA,EAClB;AACF;AAEA,IAAM,gBAAgB,CAAC,OAAe,WAAmB;AACvD,MAAI,UAAU;AAAM,WAAO;AAC3B,MAAI,UAAU;AAAQ,WAAO;AAC7B,SAAO;AACT;AAEA,SAAS,sBAAsB,EAAE,QAAQ,QAAQ,GAA+B;AAC9E,QAAMM,QAAO,gBAAgB,OAAO,QAAQ;AAC5C,QAAM,YAAY,aAAa,OAAO,KAAK;AAC3C,QAAM,aAAa,cAAc,OAAO,OAAO,OAAO,MAAM;AAE5D,SACE,gBAAAF;AAAA,IAAC;AAAA;AAAA,MACC,WAAW,iDAAiD,UAAU,yBAAyB,EAAE;AAAA,MACjG,SAAS,MAAM,UAAU,MAAM;AAAA,MAE/B;AAAA,wBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,0BAAAD,OAAC,aAAU,WAAU,2CAClB,iBAAO,MACV;AAAA,UACA,gBAAAA,OAACG,OAAA,EAAK,WAAU,8BAA6B;AAAA,WAC/C;AAAA,QACA,gBAAAF,QAAC,eACC;AAAA,0BAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,8BAAAA,QAAC,UAAK,WAAU,wCACb;AAAA,uBAAO;AAAA,gBAAO,OAAO;AAAA,iBACxB;AAAA,cACA,gBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,gCAAAD,OAAC,aAAU,WAAW,WAAW,UAAU,IAAI;AAAA,gBAC/C,gBAAAC,QAAC,UAAK,WAAW,WAAW,UAAU,IACnC;AAAA,yBAAO,SAAS,IAAI,MAAM;AAAA,kBAAI,OAAO;AAAA,kBAAQ,OAAO;AAAA,mBACvD;AAAA,iBACF;AAAA,eACF;AAAA,YACA,gBAAAD,OAAC,SAAM,WAAWE,gBAAe,OAAO,MAAM,GAC3C,iBAAO,QACV;AAAA,aACF;AAAA,UACA,gBAAAF,OAAC,OAAE,WAAU,mCACV,iBAAO,aACV;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,mCACb;AAAA,4BAAAA,QAAC,SAAI;AAAA;AAAA,cAAO,OAAO,UAAU;AAAA,cAAS,OAAO;AAAA,eAAK;AAAA,YAClD,gBAAAA,QAAC,SAAI;AAAA;AAAA,cAAW,OAAO,UAAU;AAAA,cAAU,OAAO;AAAA,eAAK;AAAA,aACzD;AAAA,WACF;AAAA;AAAA;AAAA,EACF;AAEJ;AAGA,IAAO,gCAAQ;;;ACzGf,SAAS,iBAAAG,iBAAe,eAAAC,eAAa,SAAAC,SAAO,QAAAC,cAAY;AAiDhD,SACE,OAAAC,QADF,QAAAC,eAAA;AA9BR,IAAM,mBAAmB,CAAC,aAAqB;AAC7C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAY,aAAO;AAAA,IACxB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAM,kBAAkB,CAAC,aAAqB;AAC5C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAO,aAAOL;AAAA,IACnB,KAAK;AAAU,aAAOA;AAAA,IACtB,KAAK;AAAQ,aAAOA;AAAA,IACpB,KAAK;AAAY,aAAOA;AAAA,IACxB;AAAS,aAAOA;AAAA,EAClB;AACF;AAEA,SAAS,qBAAqB;AAAA,EAC5B,OAAAM;AAAA,EACA;AAAA,EACA;AACF,GAA8B;AAC5B,QAAM,eAAe,gBAAgBA,OAAM,QAAQ;AAEnD,SACE,gBAAAD,QAAC,QAAK,WAAU,kCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,gBAAa,WAAU,2BAA0B;AAAA,QAClD,gBAAAA,OAAC,aAAU,WAAU,yCAClB,UAAAE,OAAM,QACT;AAAA,SACF;AAAA,MACA,gBAAAF,OAAC,SAAM,WAAW,iBAAiBE,OAAM,QAAQ,GAC9C,UAAAA,OAAM,UACT;AAAA,OACF;AAAA,IACA,gBAAAD,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,UAAAE,OAAM,SACT;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,+DACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACF,SAAA,EAAM,WAAU,WAAU;AAAA,UAC3B,gBAAAE,OAAC,UAAM,cAAI,KAAKE,OAAM,SAAS,EAAE,eAAe,GAAE;AAAA,WACpD;AAAA,QACCA,OAAM,YAAYA,OAAM,cACvB,gBAAAD,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACD,QAAA,EAAK,WAAU,WAAU;AAAA,UAC1B,gBAAAE,QAAC,UAAK;AAAA;AAAA,YAAaC,OAAM;AAAA,aAAW;AAAA,WACtC;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,+BACZ,UAAAE,OAAM,WACL,gBAAAD,QAAC,SAAI,WAAU,8CACb;AAAA,0BAAAD,OAACH,eAAA,EAAY,WAAU,WAAU;AAAA,UACjC,gBAAAG,OAAC,UAAK,WAAU,WAAU,sBAAQ;AAAA,WACpC,IAEA,gBAAAC,QAAC,SAAI,WAAU,+CACb;AAAA,0BAAAD,OAACJ,iBAAA,EAAc,WAAU,WAAU;AAAA,UACnC,gBAAAI,OAAC,UAAK,WAAU,WAAU,oBAAM;AAAA,WAClC,GAEJ;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,2BACC,gBAAAD;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,cAAcE,MAAK;AAAA,cACnC;AAAA;AAAA,UAED;AAAA,UAED,CAACA,OAAM,YAAY,aAClB,gBAAAF;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,UAAUE,OAAM,EAAE;AAAA,cAClC;AAAA;AAAA,UAED;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,+BAAQ;;;ACxGL,gBAAAC,cAAA;AATK,SAAR,uBAAwC;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAgC;AAC9B,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,uEACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,MAAI,QAAQ,WAAW,GAAG;AACxB,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,8CAAgC,GACpE;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,uEACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,SAAS;AAAA;AAAA,IAFJ,OAAO;AAAA,EAGd,CACD,GACH;AAEJ;;;ACrBU,gBAAAC,QAuBA,QAAAC,eAvBA;AAXK,SAAR,sBAAuC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,WAAW;AACb,GAA+B;AAC7B,MAAI,SAAS;AACX,WACE,gBAAAD,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,QAAM,gBAAgB,OAAO,MAAM,GAAG,QAAQ;AAC9C,QAAM,eAAe,cAAc,OAAO,CAAAE,WAAS,CAACA,OAAM,QAAQ;AAClE,QAAM,iBAAiB,cAAc,OAAO,CAAAA,WAASA,OAAM,QAAQ;AAEnE,MAAI,OAAO,WAAW,GAAG;AACvB,WACE,gBAAAF,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,mCAAqB,GACzD;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAU,aAEZ;AAAA,iBAAa,SAAS,KACrB,gBAAAA,QAAC,SACC;AAAA,sBAAAA,QAAC,QAAG,WAAU,8CAA6C;AAAA;AAAA,QACzC,aAAa;AAAA,QAAO;AAAA,SACtC;AAAA,MACA,gBAAAD,OAAC,SAAI,WAAU,aACZ,uBAAa,IAAI,CAACE,WACjB,gBAAAF;AAAA,QAAC;AAAA;AAAA,UAEC,OAAOE;AAAA,UACP,WAAW;AAAA,UACX,eAAe;AAAA;AAAA,QAHVA,OAAM;AAAA,MAIb,CACD,GACH;AAAA,OACF;AAAA,IAID,eAAe,SAAS,KACvB,gBAAAD,QAAC,SACC;AAAA,sBAAAA,QAAC,QAAG,WAAU,8CAA6C;AAAA;AAAA,QACrC,eAAe;AAAA,QAAO;AAAA,SAC5C;AAAA,MACA,gBAAAD,OAAC,SAAI,WAAU,aACZ,yBAAe,IAAI,CAACE,WACnB,gBAAAF;AAAA,QAAC;AAAA;AAAA,UAEC,OAAOE;AAAA,UACP,eAAe;AAAA;AAAA,QAFVA,OAAM;AAAA,MAGb,CACD,GACH;AAAA,OACF;AAAA,KAEJ;AAEJ;;;AC5EA;AAAA,EACE;AAAA,EACA,QAAAC;AAAA,EAEA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AAAA,OAEK;AAiFC,SACE,OAAAC,QADF,QAAAC,eAAA;AAtDR,IAAM,eAAe,CAAC,SAAiB;AACrC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAU,aAAO;AAAA,IACtB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAe,aAAO;AAAA,IAC3B,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAa,aAAO;AAAA,IACzB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAM,mBAAmB,CAAC,aAAqB;AAC7C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAY,aAAO;AAAA,IACxB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAM,gBAAgB,CAAC,WAAmB;AACxC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAW,aAAOL;AAAA,IACvB,KAAK;AAAe,aAAOH;AAAA,IAC3B,KAAK;AAAa,aAAOC;AAAA,IACzB,KAAK;AAAU,aAAOC;AAAA,IACtB,KAAK;AAAa,aAAOA;AAAA,IACzB;AAAS,aAAOC;AAAA,EAClB;AACF;AAEA,SAAS,oBAAoB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAA6B;AAC3B,QAAM,aAAa,cAAc,KAAK,MAAM;AAE5C,SACE,gBAAAI,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,UAAO,WAAU,8BAA6B;AAAA,QAC/C,gBAAAA,OAAC,aAAU,WAAU,yCAClB,eAAK,MACR;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAW,iBAAiB,KAAK,QAAQ,GAC7C,eAAK,UACR;AAAA,QACA,gBAAAA,OAAC,SAAM,WAAW,aAAa,KAAK,IAAI,GACrC,eAAK,MACR;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAC,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,eAAK,aACR;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,+DACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACF,YAAA,EAAS,WAAU,WAAU;AAAA,UAC9B,gBAAAE,OAAC,UAAM,cAAI,KAAK,KAAK,WAAW,EAAE,mBAAmB,GAAE;AAAA,WACzD;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACH,SAAA,EAAM,WAAU,WAAU;AAAA,UAC3B,gBAAAG,OAAC,UAAM,eAAK,mBAAkB;AAAA,WAChC;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACD,QAAA,EAAK,WAAU,WAAU;AAAA,UAC1B,gBAAAC,OAAC,UAAM,eAAK,WAAU;AAAA,WACxB;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAAC,cAAW,WAAU,8BAA6B;AAAA,UACnD,gBAAAA,OAAC,SAAM,WAAWE,gBAAe,KAAK,MAAM,GACzC,eAAK,OAAO,QAAQ,KAAK,GAAG,GAC/B;AAAA,WACF;AAAA,QAEC,KAAK,kBACJ,gBAAAD,QAAC,UAAK,WAAU,8BAA6B;AAAA;AAAA,UAClC,KAAK;AAAA,WAChB;AAAA,SAEJ;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,gCAAkB;AAAA,QACjE,gBAAAA,OAAC,SAAI,WAAU,wBACZ,eAAK,iBAAiB,IAAI,CAAC,SAAS,UACnC,gBAAAA,OAAC,UAAiB,WAAU,6CACzB,qBADQ,KAEX,CACD,GACH;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,IAAI;AAAA,YAClC;AAAA;AAAA,QAED,GAEJ;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,eAAK,WAAW,aAAa,WAC5B,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,QAAQ,KAAK,EAAE;AAAA,cAC9B,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACN,OAAA,EAAK,WAAU,WAAU;AAAA,gBAC1B,gBAAAM,OAAC,UAAK,mBAAK;AAAA;AAAA;AAAA,UACb;AAAA,UAGD,KAAK,WAAW,iBAAiB,cAChC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,WAAW,KAAK,EAAE;AAAA,cACjC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACL,eAAA,EAAY,WAAU,WAAU;AAAA,gBACjC,gBAAAK,OAAC,UAAK,sBAAQ;AAAA;AAAA;AAAA,UAChB;AAAA,WAGA,KAAK,WAAW,aAAa,KAAK,WAAW,kBAAkB,YAC/D,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,KAAK,EAAE;AAAA,cAC/B,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACJ,WAAA,EAAQ,WAAU,WAAU;AAAA,gBAC7B,gBAAAI,OAAC,UAAK,oBAAM;AAAA;AAAA;AAAA,UACd;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,8BAAQ;;;AChNf,SAAS,UAAAG,SAAQ,OAAAC,OAAK,UAAAC,eAAc;AAgB5B,SACE,OAAAC,QADF,QAAAC,eAAA;AARO,SAAR,sBAAuC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAA+B;AAC7B,SACE,gBAAAA,QAAC,QAAK,WAAU,kCACd;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,2BACnB;AAAA,sBAAAD,OAACH,SAAA,EAAO,WAAU,WAAU;AAAA,MAAE;AAAA,OAEhC,GACF;AAAA,IACA,gBAAAI,QAAC,eACC;AAAA,sBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAAC,SAAI,WAAW,wBAAwB,WAAW,eAAe,cAAc,IAAI;AAAA,UACpF,gBAAAA,OAAC,UAAK,WAAU,uBACb,qBAAW,4BAA4B,iBAC1C;AAAA,WACF;AAAA,QACA,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,WAAW,YAAY;AAAA,YAChC,SAAS;AAAA,YACT,UAAU;AAAA,YACV,WAAU;AAAA,YAET;AAAA,yBAAW,gBAAAD,OAACF,OAAA,EAAI,WAAU,WAAU,IAAK,gBAAAE,OAACD,SAAA,EAAO,WAAU,WAAU;AAAA,cACrE,WAAW,YAAY;AAAA,cAAS;AAAA;AAAA;AAAA,QACnC;AAAA,SACF;AAAA,MAEC,YACC,gBAAAC,OAAC,SAAI,WAAU,6DACb,0BAAAC,QAAC,OAAE,WAAU,2BACX;AAAA,wBAAAD,OAAC,YAAO,sBAAQ;AAAA,QAAS;AAAA,SAE3B,GACF;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AC9BU,gBAAAE,cAAA;AAZK,SAAR,qBAAsC;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAA8B;AAC5B,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,MAAI,MAAM,WAAW,GAAG;AACtB,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,wCAA0B,GAC9D;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,IAAI,CAAC,SACV,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,eAAe;AAAA;AAAA,IALV,KAAK;AAAA,EAMZ,CACD,GACH;AAEJ;;;AChDA,SAAS,YAAAC,YAAU,SAAAC,SAAO,QAAAC,OAAM,eAAe;AA0DvC,SACE,OAAAC,QADF,QAAAC,eAAA;AAlCR,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAa,aAAO;AAAA,IACzB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,iBAAgB,CAAC,WAAmB;AACxC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAU,aAAOL;AAAA,IACtB,KAAK;AAAa,aAAOD;AAAA,IACzB,KAAK;AAAa,aAAOA;AAAA,IACzB,KAAK;AAAa,aAAOA;AAAA,IACzB;AAAS,aAAOA;AAAA,EAClB;AACF;AAEe,SAAR,sBAAuC;AAAA,EAC5C,QAAAO;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAA+B;AAC7B,QAAM,aAAaD,eAAcC,QAAO,MAAM;AAC9C,QAAM,YAAY,IAAI,KAAKA,QAAO,SAAS;AAC3C,QAAM,UAAU,IAAI,KAAKA,QAAO,OAAO;AACvC,QAAM,WAAW,KAAK,OAAO,QAAQ,QAAQ,IAAI,UAAU,QAAQ,MAAM,MAAO,KAAK,GAAG;AAExF,SACE,gBAAAH,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,cAAW,WAAU,8BAA6B;AAAA,QACnD,gBAAAA,OAAC,aAAU,WAAU,yCAClB,UAAAI,QAAO,MACV;AAAA,SACF;AAAA,MACA,gBAAAJ,OAAC,SAAM,WAAWE,gBAAeE,QAAO,MAAM,GAC3C,UAAAA,QAAO,QACV;AAAA,OACF;AAAA,IACA,gBAAAH,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,UAAAI,QAAO,aACV;AAAA,MAEA,gBAAAH,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,yBAAW;AAAA,UAChD,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,oBAAU,eAAe,GAAE;AAAA,WAClE;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,uBAAS;AAAA,UAC9C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,kBAAQ,eAAe,GAAE;AAAA,WAChE;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,uBAAS;AAAA,UAC9C,gBAAAC,QAAC,UAAK,WAAU,qBAAqB;AAAA;AAAA,YAAS;AAAA,aAAM;AAAA,WACtD;AAAA,SACF;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,gCAAkB;AAAA,QACjE,gBAAAA,OAAC,SAAI,WAAU,wBACZ,UAAAI,QAAO,iBAAiB,IAAI,CAAC,SAAS,UACrC,gBAAAJ,OAAC,UAAiB,WAAU,6CACzB,qBADQ,KAEX,CACD,GACH;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,4BAAc;AAAA,QAC7D,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,+BACZ;AAAA,YAAAG,QAAO,cAAc,QACpB,gBAAAJ,OAACD,OAAA,EAAK,WAAU,0BAAyB,IAEzC,gBAAAC,OAAC,WAAQ,WAAU,yBAAwB;AAAA,YAE7C,gBAAAA,OAAC,UAAK,WAAU,WAAU,mBAAK;AAAA,aACjC;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,+BACZ;AAAA,YAAAG,QAAO,cAAc,SACpB,gBAAAJ,OAACD,OAAA,EAAK,WAAU,0BAAyB,IAEzC,gBAAAC,OAAC,WAAQ,WAAU,yBAAwB;AAAA,YAE7C,gBAAAA,OAAC,UAAK,WAAU,WAAU,oBAAM;AAAA,aAClC;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,+BACZ;AAAA,YAAAG,QAAO,cAAc,YACpB,gBAAAJ,OAACD,OAAA,EAAK,WAAU,0BAAyB,IAEzC,gBAAAC,OAAC,WAAQ,WAAU,yBAAwB;AAAA,YAE7C,gBAAAA,OAAC,UAAK,WAAU,WAAU,uBAAS;AAAA,aACrC;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAcI,OAAM;AAAA,YACpC;AAAA;AAAA,QAED,GAEJ;AAAA,QAEA,gBAAAH,QAAC,SAAI,WAAU,kBACZ;AAAA,UAAAG,QAAO,WAAW,eAAe,UAChC,gBAAAJ;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,OAAOI,OAAM;AAAA,cAC7B;AAAA;AAAA,UAED;AAAA,WAGAA,QAAO,WAAW,eAAeA,QAAO,WAAW,aAAa,YAChE,gBAAAJ;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAASI,QAAO,EAAE;AAAA,cAClC;AAAA;AAAA,UAED;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACtKA;AAAA,EACE,YAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EAEA,QAAAC;AAAA,EACA,aAAAC;AAAA,EACA;AAAA,EACA,WAAAC;AAAA,EACA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA,iBAAAC;AAAA,OACK;AA2EC,SACE,OAAAC,QADF,QAAAC,eAAA;AAnDR,IAAMC,gBAAe,CAAC,SAAiB;AACrC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAe,aAAO;AAAA,IAC3B,KAAK;AAAgB,aAAO;AAAA,IAC5B;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAa,aAAO;AAAA,IACzB,KAAK;AAAe,aAAO;AAAA,IAC3B,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAa,aAAO;AAAA,IACzB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,iBAAgB,CAAC,WAAmB;AACxC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAa,aAAOP;AAAA,IACzB,KAAK;AAAe,aAAOJ;AAAA,IAC3B,KAAK;AAAU,aAAOK;AAAA,IACtB,KAAK;AAAa,aAAOC;AAAA,IACzB;AAAS,aAAON;AAAA,EAClB;AACF;AAEA,IAAM,kBAAkB,CAAC,aAAqB;AAC5C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAS,aAAOE;AAAA,IACrB,KAAK;AAAQ,aAAOC;AAAA,IACpB;AAAS,aAAOP;AAAA,EAClB;AACF;AAEA,SAAS,WAAW;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAoB;AAClB,QAAM,aAAae,eAAc,OAAO,MAAM;AAC9C,QAAM,eAAe,gBAAgB,OAAO,QAAQ;AAEpD,SACE,gBAAAH,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACX,WAAA,EAAS,WAAU,8BAA6B;AAAA,QACjD,gBAAAW,OAAC,aAAU,WAAU,yCAClB,iBAAO,MACV;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAWE,cAAa,OAAO,IAAI,GACvC,iBAAO,MACV;AAAA,QACA,gBAAAF,OAAC,SAAM,WAAWG,gBAAe,OAAO,MAAM,GAC3C,iBAAO,QACV;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAF,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,iBAAO,aACV;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,mBAAK;AAAA,UAC1C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,iBAAO,MAAK;AAAA,WACnD;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,sBAAQ;AAAA,UAC7C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,KAAK,OAAO,SAAS,EAAE,mBAAmB,GAAE;AAAA,WACvF;AAAA,QACC,OAAO,eACN,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,wBAAU;AAAA,UAC/C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,KAAK,OAAO,WAAW,EAAE,mBAAmB,GAAE;AAAA,WACzF;AAAA,QAED,OAAO,YACN,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,uBAAS;AAAA,UAC9C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,iBAAO,UAAS;AAAA,WACvD;AAAA,SAEJ;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAAC,cAAW,WAAU,8BAA6B;AAAA,UACnD,gBAAAA,OAAC,UAAK,WAAU,8BACb,iBAAO,OAAO,QAAQ,KAAK,GAAG,GACjC;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAAC,gBAAa,WAAU,8BAA6B;AAAA,UACrD,gBAAAA,OAAC,UAAK,WAAU,8BAA8B,iBAAO,UAAS;AAAA,WAChE;AAAA,SACF;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,qEACb,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACN,QAAA,EAAK,WAAU,WAAU;AAAA,QAC1B,gBAAAM,OAAC,UAAM,iBAAO,WAAU;AAAA,SAC1B,GACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,MAAM;AAAA,YACpC;AAAA;AAAA,QAED,GAEJ;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,iBAAO,WAAW,eAAe,cAChC,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,WAAW,OAAO,EAAE;AAAA,cACnC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACV,YAAA,EAAS,WAAU,WAAU;AAAA,gBAC9B,gBAAAU,OAAC,UAAK,sBAAQ;AAAA;AAAA;AAAA,UAChB;AAAA,UAGD,OAAO,WAAW,eAAe,aAChC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,UAAU,OAAO,EAAE;AAAA,cAClC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACT,OAAA,EAAK,WAAU,WAAU;AAAA,gBAC1B,gBAAAS,OAAC,UAAK,qBAAO;AAAA;AAAA;AAAA,UACf;AAAA,UAGD,YACC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,OAAO,EAAE;AAAA,cACjC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACR,UAAA,EAAO,WAAU,WAAU;AAAA,gBAC5B,gBAAAQ,OAAC,UAAK,oBAAM;AAAA;AAAA;AAAA,UACd;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,qBAAQ;;;ACjNf;AAAA,EACE,SAAAK;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EAEA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA,iBAAAC;AAAA,OACK;AA0EC,SACE,OAAAC,QADF,QAAAC,eAAA;AApDR,IAAM,oBAAoB,CAAC,cAAsB;AAC/C,UAAQ,WAAW;AAAA,IACjB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAW,aAAO;AAAA,IACvB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAY,aAAO;AAAA,IACxB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,gBAAe,CAAC,SAAiB;AACrC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAe,aAAO;AAAA,IAC3B,KAAK;AAAgB,aAAO;AAAA,IAC5B;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,iBAAgB,CAAC,WAAmB;AACxC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAU,aAAOP;AAAA,IACtB,KAAK;AAAU,aAAOF;AAAA,IACtB,KAAK;AAAY,aAAOG;AAAA,IACxB;AAAS,aAAOC;AAAA,EAClB;AACF;AAEA,SAAS,mBAAmB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAA4B;AAC1B,QAAM,aAAaK,eAAc,SAAS,MAAM;AAChD,QAAM,cAAc,IAAI,KAAK,SAAS,OAAO;AAC7C,QAAM,cAAc,SAAS,UAAU,IAAI,KAAK,SAAS,OAAO,IAAI;AAEpE,SACE,gBAAAH,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACP,SAAA,EAAM,WAAU,8BAA6B;AAAA,QAC9C,gBAAAO,OAAC,aAAU,WAAU,yCAClB,mBAAS,MACZ;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAW,kBAAkB,SAAS,SAAS,GACnD,mBAAS,WACZ;AAAA,QACA,gBAAAA,OAAC,SAAM,WAAWG,cAAa,SAAS,IAAI,GACzC,mBAAS,MACZ;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAF,QAAC,eACC;AAAA,sBAAAA,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,uBAAS;AAAA,UAC9C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,sBAAY,eAAe,GAAE;AAAA,WACpE;AAAA,QACC,eACC,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,uBAAS;AAAA,UAC9C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,sBAAY,eAAe,GAAE;AAAA,WACpE;AAAA,QAEF,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,wBAAU;AAAA,UAC/C,gBAAAC,QAAC,UAAK,WAAU,qBAAqB;AAAA,qBAAS;AAAA,YAAU;AAAA,aAAK;AAAA,WAC/D;AAAA,SACF;AAAA,MAEA,gBAAAD,OAAC,SAAI,WAAU,0CACb,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,cAAW,WAAU,8BAA6B;AAAA,QACnD,gBAAAA,OAAC,SAAM,WAAWE,gBAAe,SAAS,MAAM,GAC7C,mBAAS,QACZ;AAAA,SACF,GACF;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,QAAQ;AAAA,YACtC;AAAA;AAAA,QAED,GAEJ;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,mBAAS,WAAW,YAAY,WAC/B,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,QAAQ,SAAS,EAAE;AAAA,cAClC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACL,QAAA,EAAM,WAAU,WAAU;AAAA,gBAC3B,gBAAAK,OAAC,UAAK,mBAAK;AAAA;AAAA;AAAA,UACb;AAAA,UAGD,SAAS,WAAW,YAAY,YAC/B,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,SAAS,EAAE;AAAA,cACnC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACN,OAAA,EAAK,WAAU,WAAU;AAAA,gBAC1B,gBAAAM,OAAC,UAAK,oBAAM;AAAA;AAAA;AAAA,UACd;AAAA,UAGD,UACC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,OAAO,QAAQ;AAAA,cAC9B,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACJ,WAAA,EAAS,WAAU,WAAU;AAAA,gBAC9B,gBAAAI,OAAC,UAAK,kBAAI;AAAA;AAAA;AAAA,UACZ;AAAA,UAGD,YACC,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,SAAS,EAAE;AAAA,cACpC;AAAA;AAAA,UAED;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,6BAAQ;;;AC3KL,gBAAAK,cAAA;AAZK,SAAR,WAA4B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAoB;AAClB,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,MAAI,QAAQ,WAAW,GAAG;AACxB,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,8BAAgB,GACpD;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,UAAU;AAAA,MACV,eAAe;AAAA;AAAA,IALV,OAAO;AAAA,EAMd,CACD,GACH;AAEJ;;;AC1BU,gBAAAC,cAAA;AAbK,SAAR,oBAAqC;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAA6B;AAC3B,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,MAAI,UAAU,WAAW,GAAG;AAC1B,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,uCAAyB,GAC7D;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,oBAAU,IAAI,CAAC,aACd,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,SAAS;AAAA,MACT,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAe;AAAA;AAAA,IANV,SAAS;AAAA,EAOhB,CACD,GACH;AAEJ;;;ACvDA,SAAgB,YAAAC,kBAAgB;AAIhC;AAAA,EACE;AAAA,EACA,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,WAAAC;AAAA,EAEA,QAAAC;AAAA,OAEK;AA2EC,SACE,OAAAC,QADF,QAAAC,eAAA;AA9CR,IAAMC,gBAAe,CAAC,SAAiB;AACrC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAW,aAAO;AAAA,IACvB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,kBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAY,aAAO;AAAA,IACxB,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAW,aAAO;AAAA,IACvB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,SAAS,WAAW;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAoB;AAClB,QAAM,CAAC,SAAS,UAAU,IAAIC,WAAS,KAAK;AAE5C,QAAM,sBAAsB,MAAM;AAChC,eAAW,CAAC,OAAO;AAAA,EACrB;AAEA,QAAM,aAAa,MAAM;AACvB,QAAI,QAAQ;AACV,aAAO,OAAO,GAAG;AAAA,IACnB,OAAO;AACL,gBAAU,UAAU,UAAU,OAAO,GAAG;AAAA,IAC1C;AAAA,EACF;AAEA,QAAM,kBAAmB,OAAO,MAAM,WAAW,OAAO,MAAM,QAAS;AAEvE,SACE,gBAAAH,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,OAAI,WAAU,8BAA6B;AAAA,QAC5C,gBAAAA,OAAC,aAAU,WAAU,yCAClB,iBAAO,MACV;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAWE,cAAa,OAAO,IAAI,GACvC,iBAAO,MACV;AAAA,QACA,gBAAAF,OAAC,SAAM,WAAWG,gBAAe,OAAO,MAAM,GAC3C,iBAAO,QACV;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAF,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,iBAAO,aACV;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,QACb,0BAAAC,QAAC,SAAI,WAAU,oCACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,8DACb,oBAAU,OAAO,MAAM,oJAC1B;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAET,oBAAU,gBAAAA,OAACJ,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAI,OAACL,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,QACvE;AAAA,QACA,gBAAAK;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAEV,0BAAAA,OAACN,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,QAC5B;AAAA,SACF,GACF;AAAA,MAEA,gBAAAO,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,oBAAM;AAAA,UAC3C,gBAAAC,QAAC,UAAK,WAAU,qBACb;AAAA,mBAAO,MAAM,SAAS,eAAe;AAAA,YAAE;AAAA,YAAI,OAAO,MAAM,MAAM,eAAe;AAAA,aAChF;AAAA,WACF;AAAA,QACA,gBAAAD,OAAC,SAAI,WAAU,uCACb,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAW,oBACT,kBAAkB,KAAK,eACvB,kBAAkB,KAAK,kBAAkB,cAC3C;AAAA,YACA,OAAO,EAAE,OAAO,GAAG,KAAK,IAAI,iBAAiB,GAAG,CAAC,IAAI;AAAA;AAAA,QACvD,GACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,sBAAQ;AAAA,UAC7C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,KAAK,OAAO,SAAS,EAAE,mBAAmB,GAAE;AAAA,WACvF;AAAA,QACC,OAAO,YACN,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,wBAAU;AAAA,UAC/C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,KAAK,OAAO,QAAQ,EAAE,mBAAmB,GAAE;AAAA,WACtF;AAAA,QAED,OAAO,aACN,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,sBAAQ;AAAA,UAC7C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,KAAK,OAAO,SAAS,EAAE,mBAAmB,GAAE;AAAA,WACvF;AAAA,SAEJ;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,0BAAY;AAAA,QAC3D,gBAAAA,OAAC,SAAI,WAAU,wBACZ,iBAAO,YAAY,IAAI,CAAC,YAAY,UACnC,gBAAAA,OAAC,UAAiB,WAAU,6CACzB,wBADQ,KAEX,CACD,GACH;AAAA,SACF;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,qEACb,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACD,QAAA,EAAK,WAAU,WAAU;AAAA,QAC1B,gBAAAC,OAAC,UAAM,iBAAO,WAAU;AAAA,SAC1B,GACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,MAAM;AAAA,YACpC;AAAA;AAAA,QAED,GAEJ;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,iBAAO,WAAW,YAAY,YAC7B,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,OAAO,EAAE;AAAA,cACjC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACF,WAAA,EAAQ,WAAU,WAAU;AAAA,gBAC7B,gBAAAE,OAAC,UAAK,oBAAM;AAAA;AAAA;AAAA,UACd;AAAA,UAGD,YACC,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,SAAS,OAAO,EAAE;AAAA,cACjC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACH,UAAA,EAAO,WAAU,WAAU;AAAA,gBAC5B,gBAAAG,OAAC,UAAK,oBAAM;AAAA;AAAA;AAAA,UACd;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,qBAAQ;;;AClOf;AAAA,EACE,SAAAK;AAAA,EACA,YAAAC;AAAA,EAEA,QAAAC;AAAA,OAEK;AAmDC,SACE,OAAAC,QADF,QAAAC,eAAA;AA5BR,IAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAS,aAAO;AAAA,IACrB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,mBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAc,aAAO;AAAA,IAC1B,KAAK;AAAe,aAAO;AAAA,IAC3B;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,SAAS,gBAAgB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AACF,GAAyB;AACvB,SACE,gBAAAD,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACH,QAAA,EAAM,WAAU,8BAA6B;AAAA,QAC9C,gBAAAG,OAAC,aAAU,WAAU,mDAClB,mBAAS,MACZ;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAW,eAAe,SAAS,MAAM,GAC7C,mBAAS,QACZ;AAAA,QACA,gBAAAA,OAAC,SAAM,WAAWE,iBAAe,SAAS,MAAM,GAC7C,mBAAS,QACZ;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAD,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,mBAAS,aACZ;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,sBAAQ;AAAA,UAC7C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,mBAAS,SAAQ;AAAA,WACxD;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,yBAAW;AAAA,UAChD,gBAAAC,QAAC,UAAK,WAAU,qBACb;AAAA,qBAAS,UAAU;AAAA,YAAS;AAAA,YAAe,SAAS,UAAU;AAAA,aACjE;AAAA,WACF;AAAA,QACA,gBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,4BAAc;AAAA,UACnD,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,KAAK,SAAS,YAAY,EAAE,mBAAmB,GAAE;AAAA,WAC5F;AAAA,SACF;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,qEACb,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACD,QAAA,EAAK,WAAU,WAAU;AAAA,QAC1B,gBAAAE,QAAC,UAAK;AAAA;AAAA,UAAa,SAAS;AAAA,WAAW;AAAA,SACzC,GACF;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,QAAQ;AAAA,YACtC;AAAA;AAAA,QAED,GAEJ;AAAA,QAEA,gBAAAA,OAAC,SAAI,WAAU,kBACZ,oBACC,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAS,MAAM,OAAO,QAAQ;AAAA,YAC9B,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACF,WAAA,EAAS,WAAU,WAAU;AAAA,cAC9B,gBAAAE,OAAC,UAAK,kBAAI;AAAA;AAAA;AAAA,QACZ,GAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,0BAAQ;;;ACjHL,gBAAAG,cAAA;AAZK,SAAR,YAA6B;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAqB;AACnB,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,MAAI,QAAQ,WAAW,GAAG;AACxB,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,+BAAiB,GACrD;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,WACZ,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,eAAe;AAAA;AAAA,IALV,OAAO;AAAA,EAMd,CACD,GACH;AAEJ;;;AChCU,gBAAAC,cAAA;AAVK,SAAR,iBAAkC;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAA0B;AACxB,MAAI,SAAS;AACX,WACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,MAAI,UAAU,WAAW,GAAG;AAC1B,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,oCAAsB,GAC1D;AAAA,EAEJ;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,wDACZ,oBAAU,IAAI,CAAC,aACd,gBAAAA;AAAA,IAAC;AAAA;AAAA,MAEC;AAAA,MACA,QAAQ;AAAA,MACR,eAAe;AAAA;AAAA,IAHV,SAAS;AAAA,EAIhB,CACD,GACH;AAEJ;;;AC1CA;AAAA,EAEE,OAAAC;AAAA,EAEA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,WAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AAqEC,SACE,OAAAC,QADF,QAAAC,eAAA;AA7CR,IAAM,gBAAgB,CAAC,UAAkB;AACvC,UAAQ,OAAO;AAAA,IACb,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAS,aAAO;AAAA,IACrB,KAAK;AAAS,aAAO;AAAA,IACrB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAM,iBAAiB,CAAC,WAAmB;AACzC,UAAQ,QAAQ;AAAA,IACd,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAY,aAAO;AAAA,IACxB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAW,aAAO;AAAA,IACvB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAU,aAAO;AAAA,IACtB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAM,eAAe,CAAC,UAAkB;AACtC,UAAQ,OAAO;AAAA,IACb,KAAK;AAAS,aAAON;AAAA,IACrB,KAAK;AAAQ,aAAOC;AAAA,IACpB,KAAK;AAAQ,aAAOC;AAAA,IACpB,KAAK;AAAS,aAAOC;AAAA,IACrB,KAAK;AAAS,aAAOC;AAAA,IACrB;AAAS,aAAOJ;AAAA,EAClB;AACF;AAEA,SAAS,aAAa;AAAA,EACpB;AAAA,EACA;AAAA,EACA,kBAAkB;AACpB,GAAsB;AACpB,QAAM,YAAY,aAAa,IAAI,KAAK;AACxC,QAAM,UAAU,IAAI,KAAK,IAAI,SAAS;AAEtC,SACE,gBAAAM,QAAC,QAAK,WAAU,qCACd;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,aAAU,WAAU,8BAA6B;AAAA,QAClD,gBAAAA,OAAC,aAAU,WAAU,yCAClB,cAAI,SACP;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAW,cAAc,IAAI,KAAK,GACtC,cAAI,OACP;AAAA,QACA,gBAAAA,OAAC,SAAM,WAAW,eAAe,IAAI,MAAM,GACxC,cAAI,QACP;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAC,QAAC,eACE;AAAA,UAAI,WACH,gBAAAD,OAAC,OAAE,WAAU,oCACV,cAAI,SACP;AAAA,MAGF,gBAAAC,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,wBAAU;AAAA,UAC/C,gBAAAA,OAAC,UAAK,WAAU,+BAA+B,kBAAQ,eAAe,GAAE;AAAA,WAC1E;AAAA,QACC,IAAI,UACH,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,sBAAQ;AAAA,UAC7C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,cAAI,QAAO;AAAA,WAClD;AAAA,QAED,IAAI,aACH,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,yBAAW;AAAA,UAChD,gBAAAA,OAAC,UAAK,WAAU,+BAA+B,cAAI,WAAU;AAAA,WAC/D;AAAA,QAED,IAAI,aACH,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,yBAAW;AAAA,UAChD,gBAAAA,OAAC,UAAK,WAAU,+BAA+B,cAAI,WAAU;AAAA,WAC/D;AAAA,SAEJ;AAAA,MAEC,mBAAmB,IAAI,cACtB,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,0BAAY;AAAA,QAC3D,gBAAAA,OAAC,SAAI,WAAU,gFACZ,cAAI,YACP;AAAA,SACF;AAAA,MAGD,mBAAmB,IAAI,YACtB,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,uBAAS;AAAA,QACxD,gBAAAA,OAAC,SAAI,WAAU,gFACZ,eAAK,UAAU,IAAI,UAAU,MAAM,CAAC,GACvC;AAAA,SACF;AAAA,MAGF,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,0DACZ;AAAA,cAAI,UACH,gBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAACP,QAAA,EAAK,WAAU,WAAU;AAAA,YAC1B,gBAAAO,OAAC,UAAM,cAAI,QAAO;AAAA,aACpB;AAAA,UAED,IAAI,aACH,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAACN,QAAA,EAAM,WAAU,WAAU;AAAA,YAC3B,gBAAAM,OAAC,UAAM,cAAI,WAAU;AAAA,aACvB;AAAA,WAEJ;AAAA,QAEA,gBAAAA,OAAC,SAAI,WAAU,kBACZ,2BACC,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,cAAc,GAAG;AAAA,YAChC,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACR,OAAA,EAAI,WAAU,WAAU;AAAA,cACzB,gBAAAQ,OAAC,UAAK,0BAAY;AAAA;AAAA;AAAA,QACpB,GAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,uBAAQ;;;ACnKL,gBAAAE,QA6BA,QAAAC,eA7BA;AAXK,SAAR,SAA0B;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,WAAW;AAAA,EACX,kBAAkB;AACpB,GAAkB;AAChB,MAAI,SAAS;AACX,WACE,gBAAAD,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,QAAM,cAAc,KAAK,MAAM,GAAG,QAAQ;AAE1C,MAAI,KAAK,WAAW,GAAG;AACrB,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,2BAAa,GACjD;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAU,aACZ;AAAA,gBAAY,IAAI,CAAC,QAChB,gBAAAD;AAAA,MAAC;AAAA;AAAA,QAEC;AAAA,QACA,eAAe;AAAA,QACf;AAAA;AAAA,MAHK,IAAI;AAAA,IAIX,CACD;AAAA,IAEA,KAAK,SAAS,YACb,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAC,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,MAC/B;AAAA,MAAS;AAAA,MAAK,KAAK;AAAA,MAAO;AAAA,OACrC,GACF;AAAA,KAEJ;AAEJ;;;ACrDA,SAAS,UAAAC,SAAQ,UAAAC,SAAQ,aAAAC,YAAW,YAAAC,kBAAgB;AA2D5C,SACE,OAAAC,QADF,QAAAC,eAAA;AA3CR,IAAM,eAAe;AAAA,EACnB,EAAE,OAAO,OAAO,OAAO,aAAa;AAAA,EACpC,EAAE,OAAO,SAAS,OAAO,QAAQ;AAAA,EACjC,EAAE,OAAO,QAAQ,OAAO,OAAO;AAAA,EAC/B,EAAE,OAAO,QAAQ,OAAO,UAAU;AAAA,EAClC,EAAE,OAAO,SAAS,OAAO,QAAQ;AAAA,EACjC,EAAE,OAAO,SAAS,OAAO,QAAQ;AACnC;AAEA,IAAM,gBAAgB;AAAA,EACpB,EAAE,OAAO,OAAO,OAAO,cAAc;AAAA,EACrC,EAAE,OAAO,OAAO,OAAO,MAAM;AAAA,EAC7B,EAAE,OAAO,YAAY,OAAO,WAAW;AAAA,EACvC,EAAE,OAAO,QAAQ,OAAO,iBAAiB;AAAA,EACzC,EAAE,OAAO,WAAW,OAAO,UAAU;AAAA,EACrC,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,EACnC,EAAE,OAAO,UAAU,OAAO,SAAS;AACrC;AAEA,IAAM,cAAc;AAAA,EAClB,EAAE,OAAO,OAAO,OAAO,WAAW;AAAA,EAClC,EAAE,OAAO,SAAS,OAAO,QAAQ;AAAA,EACjC,EAAE,OAAO,aAAa,OAAO,YAAY;AAAA,EACzC,EAAE,OAAO,QAAQ,OAAO,YAAY;AAAA,EACpC,EAAE,OAAO,SAAS,OAAO,aAAa;AACxC;AAEe,SAAR,WAA4B;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAAoB;AAClB,SACE,gBAAAA,QAAC,QACC;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,2BACnB;AAAA,sBAAAD,OAACH,SAAA,EAAO,WAAU,WAAU;AAAA,MAAE;AAAA,OAEhC,GACF;AAAA,IACA,gBAAAI,QAAC,eACC;AAAA,sBAAAA,QAAC,SAAI,WAAU,6DACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,sDAAqD,oBAEtE;AAAA,UACA,gBAAAC,QAAC,SAAI,WAAU,YACb;AAAA,4BAAAD,OAACJ,SAAA,EAAO,WAAU,iFAAgF;AAAA,YAClG,gBAAAI;AAAA,cAAC;AAAA;AAAA,gBACC,aAAY;AAAA,gBACZ,OAAO;AAAA,gBACP,UAAU,CAACE,OAAM,eAAeA,GAAE,OAAO,KAAK;AAAA,gBAC9C,WAAU;AAAA;AAAA,YACZ;AAAA,aACF;AAAA,WACF;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,sDAAqD,mBAEtE;AAAA,UACA,gBAAAA,OAAC,UAAO,OAAO,aAAa,eAAe,qBACxC,uBAAa,IAAI,CAAC,WACjB,gBAAAA,OAAC,YAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,KAEpB,CACD,GACH;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,sDAAqD,oBAEtE;AAAA,UACA,gBAAAA,OAAC,UAAO,OAAO,cAAc,eAAe,sBACzC,wBAAc,IAAI,CAAC,WAClB,gBAAAA,OAAC,YAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,KAEpB,CACD,GACH;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,WAAM,WAAU,sDAAqD,wBAEtE;AAAA,UACA,gBAAAA,OAAC,UAAO,OAAO,YAAY,eAAe,oBACvC,sBAAY,IAAI,CAAC,WAChB,gBAAAA,OAAC,YAA0B,OAAO,OAAO,OACtC,iBAAO,SADG,OAAO,KAEpB,CACD,GACH;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,+BACZ,uBACC,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,UAAU;AAAA,YACV,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACF,YAAA,EAAU,WAAW,WAAW,UAAU,iBAAiB,EAAE,IAAI;AAAA,cAClE,gBAAAE,OAAC,UAAK,qBAAO;AAAA;AAAA;AAAA,QACf,GAEJ;AAAA,QAEA,gBAAAA,OAAC,SAAI,WAAU,+BACZ,sBACC,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAACD,YAAA,EAAS,WAAU,WAAU;AAAA,cAC9B,gBAAAC,OAAC,UAAK,oBAAM;AAAA;AAAA;AAAA,QACd,GAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AC3JA;AAAA,EACE,UAAAG;AAAA,EACA,OAAAC;AAAA,EAEA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA,QAAAC;AAAA,OACK;AAgFC,SACE,OAAAC,QADF,QAAAC,eAAA;AAvDR,IAAMC,gBAAe,CAAC,SAAiB;AACrC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAiB,aAAO;AAAA,IAC7B,KAAK;AAAgB,aAAO;AAAA,IAC5B,KAAK;AAAuB,aAAO;AAAA,IACnC,KAAK;AAAe,aAAO;AAAA,IAC3B,KAAK;AAAuB,aAAO;AAAA,IACnC;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,oBAAmB,CAAC,aAAqB;AAC7C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAO,aAAO;AAAA,IACnB,KAAK;AAAU,aAAO;AAAA,IACtB,KAAK;AAAQ,aAAO;AAAA,IACpB,KAAK;AAAY,aAAO;AAAA,IACxB;AAAS,aAAO;AAAA,EAClB;AACF;AAEA,IAAMC,mBAAkB,CAAC,aAAqB;AAC5C,UAAQ,UAAU;AAAA,IAChB,KAAK;AAAO,aAAOL;AAAA,IACnB,KAAK;AAAU,aAAOH;AAAA,IACtB,KAAK;AAAQ,aAAOA;AAAA,IACpB,KAAK;AAAY,aAAOE;AAAA,IACxB;AAAS,aAAOC;AAAA,EAClB;AACF;AAEA,IAAM,cAAc,CAAC,SAAiB;AACpC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAiB,aAAOF;AAAA,IAC7B,KAAK;AAAgB,aAAOC;AAAA,IAC5B,KAAK;AAAuB,aAAOF;AAAA,IACnC,KAAK;AAAe,aAAOE;AAAA,IAC3B,KAAK;AAAuB,aAAOA;AAAA,IACnC;AAAS,aAAON;AAAA,EAClB;AACF;AAEA,SAAS,kBAAkB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA,kBAAkB;AACpB,GAA2B;AACzB,QAAM,eAAeY,iBAAgB,MAAM,QAAQ;AACnD,QAAM,WAAW,YAAY,MAAM,IAAI;AACvC,QAAM,YAAY,IAAI,KAAK,MAAM,SAAS;AAE1C,SACE,gBAAAH,QAAC,QAAK,WAAW,qCAAqC,MAAM,aAAa,aAAa,gCAAgC,EAAE,IACtH;AAAA,oBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,YAAS,WAAU,8BAA6B;AAAA,QACjD,gBAAAA,OAAC,aAAU,WAAU,yCAClB,gBAAM,aACT;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAM,WAAWE,cAAa,MAAM,IAAI,GACtC,gBAAM,KAAK,QAAQ,KAAK,GAAG,GAC9B;AAAA,QACA,gBAAAF,OAAC,SAAM,WAAWG,kBAAiB,MAAM,QAAQ,GAC9C,gBAAM,UACT;AAAA,SACF;AAAA,OACF;AAAA,IACA,gBAAAF,QAAC,eACC;AAAA,sBAAAD,OAAC,OAAE,WAAU,oCACV,gBAAM,SACT;AAAA,MAEA,gBAAAC,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,wBAAU;AAAA,UAC/C,gBAAAA,OAAC,UAAK,WAAU,+BAA+B,oBAAU,eAAe,GAAE;AAAA,WAC5E;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,qBAAO;AAAA,UAC5C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,gBAAM,QAAO;AAAA,WACpD;AAAA,QACC,MAAM,UACL,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,sBAAQ;AAAA,UAC7C,gBAAAA,OAAC,UAAK,WAAU,qBAAqB,gBAAM,QAAO;AAAA,WACpD;AAAA,QAED,MAAM,aACL,gBAAAC,QAAC,SAAI,WAAU,6CACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,sBAAqB,yBAAW;AAAA,UAChD,gBAAAA,OAAC,UAAK,WAAU,+BAA+B,gBAAM,WAAU;AAAA,WACjE;AAAA,SAEJ;AAAA,MAEC,mBAAmB,MAAM,aACxB,gBAAAC,QAAC,SAAI,WAAU,QACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,mCAAkC,yBAAW;AAAA,QAC1D,gBAAAA,OAAC,OAAE,WAAU,uCAAuC,gBAAM,WAAU;AAAA,SACtE;AAAA,MAGF,gBAAAC,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAAC,gBAAa,WAAU,8BAA6B;AAAA,UACpD,MAAM,WACL,gBAAAC,QAAC,SAAI,WAAU,8CACb;AAAA,4BAAAD,OAACH,eAAA,EAAY,WAAU,WAAU;AAAA,YACjC,gBAAAG,OAAC,UAAK,WAAU,WAAU,sBAAQ;AAAA,aACpC,IAEA,gBAAAC,QAAC,SAAI,WAAU,+CACb;AAAA,4BAAAD,OAACJ,iBAAA,EAAc,WAAU,WAAU;AAAA,YACnC,gBAAAI,OAAC,UAAK,WAAU,WAAU,oBAAM;AAAA,aAClC;AAAA,WAEJ;AAAA,QAEC,MAAM,YAAY,MAAM,cACvB,gBAAAC,QAAC,UAAK,WAAU,8BAA6B;AAAA;AAAA,UAChC,IAAI,KAAK,MAAM,UAAU,EAAE,mBAAmB;AAAA,WAC3D;AAAA,SAEJ;AAAA,MAEA,gBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,0DACZ;AAAA,gBAAM,UACL,gBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAACN,QAAA,EAAK,WAAU,WAAU;AAAA,YAC1B,gBAAAM,OAAC,UAAM,gBAAM,QAAO;AAAA,aACtB;AAAA,UAED,MAAM,aACL,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAACL,QAAA,EAAM,WAAU,WAAU;AAAA,YAC3B,gBAAAK,OAAC,UAAM,gBAAM,WAAU;AAAA,aACzB;AAAA,WAEJ;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,kBACZ;AAAA,2BACC,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,MAAM,cAAc,KAAK;AAAA,cAClC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACP,OAAA,EAAI,WAAU,WAAU;AAAA,gBACzB,gBAAAO,OAAC,UAAK,0BAAY;AAAA;AAAA;AAAA,UACpB;AAAA,UAGD,CAAC,MAAM,YAAY,aAClB,gBAAAC;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,UAAU,MAAM,EAAE;AAAA,cACjC,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACH,eAAA,EAAY,WAAU,WAAU;AAAA,gBACjC,gBAAAG,OAAC,UAAK,qBAAO;AAAA;AAAA;AAAA,UACf;AAAA,WAEJ;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAGA,IAAO,4BAAQ;;;AC9LL,gBAAAK,QAuBA,QAAAC,eAvBA;AAZK,SAAR,mBAAoC;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,WAAW;AAAA,EACX,kBAAkB;AACpB,GAA4B;AAC1B,MAAI,SAAS;AACX,WACE,gBAAAD,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,+CAAjB,KAA6D,CACxE,GACH;AAAA,EAEJ;AAEA,QAAM,gBAAgB,OAAO,MAAM,GAAG,QAAQ;AAC9C,QAAM,eAAe,cAAc,OAAO,WAAS,CAAC,MAAM,QAAQ;AAClE,QAAM,iBAAiB,cAAc,OAAO,WAAS,MAAM,QAAQ;AAEnE,MAAI,OAAO,WAAW,GAAG;AACvB,WACE,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,sBAAqB,sCAAwB,GAC5D;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAU,aAEZ;AAAA,iBAAa,SAAS,KACrB,gBAAAA,QAAC,SACC;AAAA,sBAAAA,QAAC,QAAG,WAAU,8CAA6C;AAAA;AAAA,QAChC,aAAa;AAAA,QAAO;AAAA,SAC/C;AAAA,MACA,gBAAAD,OAAC,SAAI,WAAU,aACZ,uBAAa,IAAI,CAAC,UACjB,gBAAAA;AAAA,QAAC;AAAA;AAAA,UAEC;AAAA,UACA,eAAe;AAAA,UACf,WAAW;AAAA,UACX;AAAA;AAAA,QAJK,MAAM;AAAA,MAKb,CACD,GACH;AAAA,OACF;AAAA,IAID,eAAe,SAAS,KACvB,gBAAAC,QAAC,SACC;AAAA,sBAAAA,QAAC,QAAG,WAAU,8CAA6C;AAAA;AAAA,QACrC,eAAe;AAAA,QAAO;AAAA,SAC5C;AAAA,MACA,gBAAAD,OAAC,SAAI,WAAU,aACZ,yBAAe,IAAI,CAAC,UACnB,gBAAAA;AAAA,QAAC;AAAA;AAAA,UAEC;AAAA,UACA,eAAe;AAAA,UACf;AAAA;AAAA,QAHK,MAAM;AAAA,MAIb,CACD,GACH;AAAA,OACF;AAAA,IAGD,OAAO,SAAS,YACf,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAC,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,MAC/B;AAAA,MAAS;AAAA,MAAK,OAAO;AAAA,MAAO;AAAA,OACvC,GACF;AAAA,KAEJ;AAEJ;;;ACzFA;AAAA,EAKE,cAAAC;AAAA,EACA,gBAAAC;AAAA,OAEK;AA4BK,SACE,OAAAC,QADF,QAAAC,eAAA;AATG,SAAR,oBAAqC,EAAE,QAAQ,GAA6B;AACjF,SACE,gBAAAD,OAAC,SAAI,WAAU,wDACZ,kBAAQ,IAAI,CAAC,QAAQ,UAAU;AAC9B,UAAME,QAAO,OAAO;AACpB,UAAM,aAAa,OAAO,QAAQ,aAAaJ,eAAaC;AAE5D,WACE,gBAAAE,QAAC,QAAiB,WAAU,qCAC1B;AAAA,sBAAAA,QAAC,cAAW,WAAU,6DACpB;AAAA,wBAAAD,OAAC,aAAU,WAAU,2CAClB,iBAAO,OACV;AAAA,QACA,gBAAAA,OAAC,SAAI,WAAW,kBAAkB,OAAO,OAAO,IAC9C,0BAAAA,OAACE,OAAA,EAAK,WAAW,WAAW,OAAO,KAAK,IAAI,GAC9C;AAAA,SACF;AAAA,MACA,gBAAAD,QAAC,eACC;AAAA,wBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,wCACZ,iBAAO,OACV;AAAA,UACC,OAAO,UACN,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,cAAW,WAAW,WACrB,OAAO,OAAO,aAAa,mBAAmB,cAChD,IAAI;AAAA,YACJ,gBAAAC,QAAC,UAAK,WAAW,WACf,OAAO,OAAO,aAAa,mBAAmB,cAChD,IACG;AAAA,qBAAO,OAAO,aAAa,MAAM;AAAA,cAAI,OAAO,OAAO;AAAA,cAAM;AAAA,eAC5D;AAAA,aACF;AAAA,WAEJ;AAAA,QACC,OAAO,UACN,gBAAAD,OAAC,OAAE,WAAU,mCACV,iBAAO,OAAO,QACjB;AAAA,SAEJ;AAAA,SAhCS,KAiCX;AAAA,EAEJ,CAAC,GACH;AAEJ;;;AC5EA,SAAgB,YAAAG,kBAA2B;AAC3C;AAAA,EAAS,QAAAC;AAAA,EACP,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,OACkB;;;ACbpB,OAAOC,YAAS,YAAAC,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AACP;AAAA,EACE,QAAAC;AAAA,EACA,YAAAC;AAAA,EACA,UAAAC;AAAA,EACA,WAAAC;AAAA,EACA,YAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,WAAAC;AAAA,EACA,QAAAC;AAAA,EAEA,OAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AA+DQ,SAuPO,YAAAC,YAvPP,OAAAC,QAaX,QAAAC,eAbW;AAnBf,SAAS,cAAc,EAAE,SAAS,GAAyB;AACzD,QAAM,mBAAmB,CAACC,cAAqB;AAC7C,YAAQA,WAAU;AAAA,MAChB,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAMC,mBAAkB,CAACD,cAAqB;AAC5C,YAAQA,WAAU;AAAA,MAChB,KAAK;AACH,eAAO,gBAAAF,OAACL,WAAA,EAAQ,WAAU,WAAU;AAAA,MACtC,KAAK;AACH,eAAO,gBAAAK,OAACL,WAAA,EAAQ,WAAU,WAAU;AAAA,MACtC,KAAK;AACH,eAAO,gBAAAK,OAACP,iBAAA,EAAc,WAAU,WAAU;AAAA,MAC5C,KAAK;AACH,eAAO,gBAAAO,OAACJ,QAAA,EAAK,WAAU,WAAU;AAAA,MACnC;AACE,eAAO,gBAAAI,OAACJ,QAAA,EAAK,WAAU,WAAU;AAAA,IACrC;AAAA,EACF;AAEA,SACE,gBAAAK,QAAClB,SAAA,EAAM,WAAW,kCAAkC,iBAAiB,QAAQ,CAAC,IAC3E;AAAA,IAAAoB,iBAAgB,QAAQ;AAAA,IACxB;AAAA,KACH;AAEJ;AAGA,SAAS,YAAY,EAAE,OAAO,GAAuB;AACnD,QAAM,iBAAiB,CAACC,YAAmB;AACzC,YAAQA,SAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAJ,OAACjB,SAAA,EAAM,WAAW,eAAe,MAAM,GACpC,kBACH;AAEJ;AAGA,SAAS,WAAW,EAAE,MAAM,MAAM,GAAiC;AACjE,QAAM,CAAC,YAAY,aAAa,IAAIP,SAAM,SAAS,KAAK;AAExD,MAAI,CAAC,MAAM;AACT,WACE,gBAAAyB,QAACjB,QAAA,EACC;AAAA,sBAAAgB,OAACd,cAAA,EACC,0BAAAc,OAACb,aAAA,EAAU,WAAU,WAAW,iBAAM,GACxC;AAAA,MACA,gBAAAa,OAACf,eAAA,EACC,0BAAAe,OAAC,OAAE,WAAU,+BAA8B,+BAAiB,GAC9D;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAACjB,QAAA,EACC;AAAA,oBAAAgB,OAACd,cAAA,EACC,0BAAAe,QAACd,aAAA,EAAU,WAAU,6CAClB;AAAA;AAAA,MACD,gBAAAc;AAAA,QAACnB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS,MAAM,cAAc,CAAC,UAAU;AAAA,UAEvC;AAAA,yBAAa,gBAAAkB,OAACF,SAAA,EAAO,WAAU,WAAU,IAAK,gBAAAE,OAACH,OAAA,EAAI,WAAU,WAAU;AAAA,YACvE,aAAa,aAAa;AAAA;AAAA;AAAA,MAC7B;AAAA,OACF,GACF;AAAA,IACA,gBAAAG,OAACf,eAAA,EACC,0BAAAe,OAAC,SAAI,WAAW,kEACd,aAAa,aAAa,UAC5B,IACG,eAAK,UAAU,MAAM,MAAM,CAAC,GAC/B,GACF;AAAA,KACF;AAEJ;AAGA,SAAS,cAAc,EAAE,QAAQ,GAAyD;AACxF,MAAI,CAAC,WAAW,OAAO,KAAK,OAAO,EAAE,WAAW,GAAG;AACjD,WACE,gBAAAC,QAACjB,QAAA,EACC;AAAA,sBAAAgB,OAACd,cAAA,EACC,0BAAAc,OAACb,aAAA,EAAU,WAAU,WAAU,qBAAO,GACxC;AAAA,MACA,gBAAAa,OAACf,eAAA,EACC,0BAAAe,OAAC,OAAE,WAAU,+BAA8B,iCAAmB,GAChE;AAAA,OACF;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAACjB,QAAA,EACC;AAAA,oBAAAgB,OAACd,cAAA,EACC,0BAAAe,QAACd,aAAA,EAAU,WAAU,WAAU;AAAA;AAAA,MAAU,OAAO,KAAK,OAAO,EAAE;AAAA,MAAO;AAAA,OAAQ,GAC/E;AAAA,IACA,gBAAAa,OAACf,eAAA,EACC,0BAAAe,OAAC,SAAI,WAAU,aACZ,iBAAO,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,OAAO,MAAM,MAC1C,gBAAAC,QAAC,SAAgB,WAAU,yBACzB;AAAA,sBAAAD,OAAC,SAAI,WAAU,4BAA4B,iBAAM;AAAA,MACjD,gBAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,oCAAmC,uBAAS;AAAA,UAC3D,gBAAAA,OAAC,SAAI,WAAU,8DACZ,iBAAO,QAAQ,OAAO,SAAS,KAAK,UAAU,OAAO,GAAG,GAC3D;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,oCAAmC,uBAAS;AAAA,UAC3D,gBAAAA,OAAC,SAAI,WAAU,kEACZ,iBAAO,QAAQ,OAAO,SAAS,KAAK,UAAU,OAAO,GAAG,GAC3D;AAAA,WACF;AAAA,SACF;AAAA,SAfQ,KAgBV,CACD,GACH,GACF;AAAA,KACF;AAEJ;AAGO,SAAS,eAAe,EAAE,KAAK,QAAQ,QAAQ,GAAwB;AAC5E,QAAM,CAAC,WAAW,YAAY,IAAIvB,WAAqD,UAAU;AAEjG,MAAI,CAAC;AAAK,WAAO;AAEjB,QAAM4B,eAAa,CAAC,eAAuB;AACzC,WAAO,IAAI,KAAK,UAAU,EAAE,eAAe,SAAS;AAAA,MAClD,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,cAAc;AAAA,IAChB,CAAC;AAAA,EACH;AAEA,QAAMC,mBAAkB,CAAC,aAAqB;AAC5C,YAAQ,UAAU;AAAA,MAChB,KAAK;AACH,eAAO,gBAAAN,OAACP,iBAAA,EAAc,WAAU,WAAU;AAAA,MAC5C,KAAK;AACH,eAAO,gBAAAO,OAACR,WAAA,EAAS,WAAU,WAAU;AAAA,MACvC,KAAK;AACH,eAAO,gBAAAQ,OAACT,UAAA,EAAQ,WAAU,WAAU;AAAA,MACtC,KAAK;AACH,eAAO,gBAAAS,OAACN,eAAA,EAAY,WAAU,WAAU;AAAA,MAC1C;AACE,eAAO,gBAAAM,OAACJ,QAAA,EAAK,WAAU,WAAU;AAAA,IACrC;AAAA,EACF;AAEA,SACE,gBAAAI,OAACtB,UAAA,EAAO,MAAM,QAAQ,cAAc,SAClC,0BAAAuB,QAACtB,iBAAA,EAAc,WAAU,0CACvB;AAAA,oBAAAqB,OAACpB,gBAAA,EACC,0BAAAoB,OAACnB,eAAA,EAAY,+BAAiB,GAChC;AAAA,IAEA,gBAAAoB,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAD,OAAChB,QAAA,EACC,0BAAAiB,QAAChB,eAAA,EAAY,WAAU,OACrB;AAAA,wBAAAgB,QAAC,SAAI,WAAU,gCACb;AAAA,0BAAAD,OAAC,eAAY,QAAQ,IAAI,QAAQ;AAAA,UACjC,gBAAAA,OAAC,iBAAc,UAAU,IAAI,UAAU;AAAA,UACvC,gBAAAC,QAAClB,SAAA,EAAM,SAAQ,WAAU,WAAU,2BAChC;AAAA,YAAAuB,iBAAgB,IAAI,QAAQ;AAAA,YAC5B,IAAI;AAAA,aACP;AAAA,WACF;AAAA,QAEA,gBAAAL,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAA,QAAC,QAAG,WAAU,yBACX;AAAA,gBAAI;AAAA,YAAW;AAAA,YAAG,IAAI,cAAc,IAAI;AAAA,aAC3C;AAAA,UACC,IAAI,eACH,gBAAAD,OAAC,OAAE,WAAU,uBAAuB,cAAI,aAAY;AAAA,WAExD;AAAA,SACF,GACF;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD;AAAA,YAAClB;AAAA,YAAA;AAAA,cACC,SAAS,cAAc,aAAa,YAAY;AAAA,cAChD,SAAS,MAAM,aAAa,UAAU;AAAA,cACtC,MAAK;AAAA,cACN;AAAA;AAAA,UAED;AAAA,UACA,gBAAAkB;AAAA,YAAClB;AAAA,YAAA;AAAA,cACC,SAAS,cAAc,YAAY,YAAY;AAAA,cAC/C,SAAS,MAAM,aAAa,SAAS;AAAA,cACrC,MAAK;AAAA,cACN;AAAA;AAAA,UAED;AAAA,UACA,gBAAAkB;AAAA,YAAClB;AAAA,YAAA;AAAA,cACC,SAAS,cAAc,YAAY,YAAY;AAAA,cAC/C,SAAS,MAAM,aAAa,SAAS;AAAA,cACrC,MAAK;AAAA,cACN;AAAA;AAAA,UAED;AAAA,UACA,gBAAAkB;AAAA,YAAClB;AAAA,YAAA;AAAA,cACC,SAAS,cAAc,QAAQ,YAAY;AAAA,cAC3C,SAAS,MAAM,aAAa,KAAK;AAAA,cACjC,MAAK;AAAA,cACN;AAAA;AAAA,UAED;AAAA,WACF;AAAA,QAEC,cAAc,cACb,gBAAAmB,QAAC,SAAI,WAAU,aACf;AAAA,0BAAAA,QAAC,SAAI,WAAU,yCACb;AAAA,4BAAAA,QAACjB,QAAA,EACC;AAAA,8BAAAgB,OAACd,cAAA,EACC,0BAAAe,QAACd,aAAA,EAAU,WAAU,mCACnB;AAAA,gCAAAa,OAACZ,QAAA,EAAK,WAAU,WAAU;AAAA,gBAAE;AAAA,iBAE9B,GACF;AAAA,cACA,gBAAAY,OAACf,eAAA,EAAY,WAAU,aACpB,cAAI,OACH,gBAAAgB,QAAAF,YAAA,EACE;AAAA,gCAAAE,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,kBAAI;AAAA,kBACjD,gBAAAA,OAAC,SAAI,WAAU,uBAAuB,cAAI,KAAK,MAAK;AAAA,mBACtD;AAAA,gBACA,gBAAAC,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,mBAAK;AAAA,kBAClD,gBAAAA,OAAC,SAAI,WAAU,WAAW,cAAI,KAAK,OAAM;AAAA,mBAC3C;AAAA,gBACA,gBAAAC,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,kBAAI;AAAA,kBACjD,gBAAAA,OAAC,SAAI,WAAU,WAAW,cAAI,KAAK,MAAK;AAAA,mBAC1C;AAAA,iBACF,IAEA,gBAAAA,OAAC,OAAE,WAAU,+BAA8B,2CAA6B,GAE5E;AAAA,eACF;AAAA,YAEA,gBAAAC,QAACjB,QAAA,EACC;AAAA,8BAAAgB,OAACd,cAAA,EACC,0BAAAe,QAACd,aAAA,EAAU,WAAU,mCACnB;AAAA,gCAAAa,OAACX,YAAA,EAAS,WAAU,WAAU;AAAA,gBAAE;AAAA,iBAElC,GACF;AAAA,cACA,gBAAAY,QAAChB,eAAA,EAAY,WAAU,aACrB;AAAA,gCAAAgB,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,uBAAS;AAAA,kBACtD,gBAAAA,OAAC,SAAI,WAAU,WAAW,UAAAK,aAAW,IAAI,SAAS,GAAE;AAAA,mBACtD;AAAA,gBACA,gBAAAJ,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,oBAAM;AAAA,kBACnD,gBAAAA,OAAC,SAAI,WAAU,WAAW,cAAI,QAAO;AAAA,mBACvC;AAAA,gBACA,gBAAAC,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,yBAAW;AAAA,kBACxD,gBAAAA,OAAC,SAAI,WAAU,WAAW,cAAI,YAAW;AAAA,mBAC3C;AAAA,gBACA,gBAAAC,QAAC,SACC;AAAA,kCAAAD,OAAC,SAAI,WAAU,+BAA8B,uBAAS;AAAA,kBACtD,gBAAAA,OAAC,SAAI,WAAU,qBAAqB,cAAI,UAAS;AAAA,mBACnD;AAAA,iBACF;AAAA,eACF;AAAA,aACF;AAAA,UAEC,IAAI,YACH,gBAAAC,QAACjB,QAAA,EACC;AAAA,4BAAAgB,OAACd,cAAA,EACC,0BAAAc,OAACb,aAAA,EAAU,WAAU,WAAU,8BAAgB,GACjD;AAAA,YACA,gBAAAa,OAACf,eAAA,EACC,0BAAAgB,QAAC,SAAI,WAAU,aACb;AAAA,8BAAAA,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,2BAAa;AAAA,gBAC1D,gBAAAA,OAAC,SAAI,WAAU,uBAAuB,cAAI,SAAS,MAAK;AAAA,iBAC1D;AAAA,cACA,gBAAAC,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,yBAAW;AAAA,gBACxD,gBAAAA,OAAC,SAAI,WAAU,qBAAqB,cAAI,SAAS,IAAG;AAAA,iBACtD;AAAA,eACF,GACF;AAAA,aACF;AAAA,UAGD,IAAI,UACH,gBAAAC,QAACjB,QAAA,EACC;AAAA,4BAAAgB,OAACd,cAAA,EACC,0BAAAc,OAACb,aAAA,EAAU,WAAU,WAAU,4BAAc,GAC/C;AAAA,YACA,gBAAAa,OAACf,eAAA,EACC,0BAAAgB,QAAC,SAAI,WAAU,aACb;AAAA,8BAAAA,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,yBAAW;AAAA,gBACxD,gBAAAA,OAAC,SAAI,WAAU,uBAAuB,cAAI,OAAO,MAAK;AAAA,iBACxD;AAAA,cACA,gBAAAC,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,uBAAS;AAAA,gBACtD,gBAAAA,OAAC,SAAI,WAAU,qBAAqB,cAAI,OAAO,IAAG;AAAA,iBACpD;AAAA,eACF,GACF;AAAA,aACF;AAAA,WAEF;AAAA,QAGD,cAAc,aACb,gBAAAA,OAAC,SAAI,WAAU,aACb,0BAAAA,OAAC,iBAAc,SAAS,IAAI,SAAS,GACvC;AAAA,QAGD,cAAc,aACb,gBAAAA,OAAC,SAAI,WAAU,aACf,0BAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAACjB,QAAA,EACC;AAAA,4BAAAgB,OAACd,cAAA,EACC,0BAAAe,QAACd,aAAA,EAAU,WAAU,mCACnB;AAAA,8BAAAa,OAACV,SAAA,EAAO,WAAU,WAAU;AAAA,cAAE;AAAA,eAEhC,GACF;AAAA,YACA,gBAAAW,QAAChB,eAAA,EAAY,WAAU,aACrB;AAAA,8BAAAgB,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,wBAAU;AAAA,gBACvD,gBAAAA,OAAC,SAAI,WAAU,qBAAqB,cAAI,aAAa,WAAU;AAAA,iBACjE;AAAA,cACA,gBAAAC,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,wBAAU;AAAA,gBACvD,gBAAAA,OAAC,SAAI,WAAU,qBAAqB,cAAI,aAAa,WAAU;AAAA,iBACjE;AAAA,cACA,gBAAAC,QAAC,SACC;AAAA,gCAAAD,OAAC,SAAI,WAAU,+BAA8B,wBAAU;AAAA,gBACvD,gBAAAA,OAAC,SAAI,WAAU,qBAAqB,cAAI,aAAa,WAAU;AAAA,iBACjE;AAAA,eACF;AAAA,aACF;AAAA,UAEA,gBAAAC,QAACjB,QAAA,EACC;AAAA,4BAAAgB,OAACd,cAAA,EACC,0BAAAe,QAACd,aAAA,EAAU,WAAU,mCACnB;AAAA,8BAAAa,OAACT,UAAA,EAAQ,WAAU,WAAU;AAAA,cAAE;AAAA,eAEjC,GACF;AAAA,YACA,gBAAAS,OAACf,eAAA,EACC,0BAAAe,OAAC,SAAI,WAAU,2DACZ,cAAI,aAAa,WACpB,GACF;AAAA,aACF;AAAA,WACF,GACA;AAAA,QAGD,cAAc,SACb,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,cAAW,MAAM,IAAI,WAAW,OAAM,cAAa;AAAA,UACpD,gBAAAA,OAAC,cAAW,MAAM,IAAI,WAAW,OAAM,cAAa;AAAA,UACpD,gBAAAA,OAAC,cAAW,MAAM,IAAI,UAAU,OAAM,YAAW;AAAA,WACnD;AAAA,SAEJ;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;ADxdA;AAAA,EAEE,UAAAO;AAAA,EACA,aAAAC;AAAA,EACA,OAAAC;AAAA,EAGA,YAAAC;AAAA,EACA,iBAAAC;AAAA,EAEA,WAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,OAGK;AAoFQ,gBAAAC,QAaX,QAAAC,eAbW;AAnBf,SAASC,eAAc,EAAE,SAAS,GAAyB;AACzD,QAAM,mBAAmB,CAACC,cAAqB;AAC7C,YAAQA,WAAU;AAAA,MAChB,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,QAAMC,mBAAkB,CAACD,cAAqB;AAC5C,YAAQA,WAAU;AAAA,MAChB,KAAK;AACH,eAAO,gBAAAH,OAACH,WAAA,EAAQ,WAAU,WAAU;AAAA,MACtC,KAAK;AACH,eAAO,gBAAAG,OAACH,WAAA,EAAQ,WAAU,WAAU;AAAA,MACtC,KAAK;AACH,eAAO,gBAAAG,OAACJ,iBAAA,EAAc,WAAU,WAAU;AAAA,MAC5C,KAAK;AACH,eAAO,gBAAAI,OAACF,QAAA,EAAK,WAAU,WAAU;AAAA,MACnC;AACE,eAAO,gBAAAE,OAACF,QAAA,EAAK,WAAU,WAAU;AAAA,IACrC;AAAA,EACF;AAEA,SACE,gBAAAG,QAACI,SAAA,EAAM,WAAW,kCAAkC,iBAAiB,QAAQ,CAAC,IAC3E;AAAA,IAAAD,iBAAgB,QAAQ;AAAA,IACxB;AAAA,KACH;AAEJ;AAGA,SAASE,aAAY,EAAE,OAAO,GAAuB;AACnD,QAAM,iBAAiB,CAACC,YAAmB;AACzC,YAAQA,SAAQ;AAAA,MACd,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,SACE,gBAAAP,OAACK,SAAA,EAAM,WAAW,eAAe,MAAM,GACpC,kBACH;AAEJ;AAQA,SAAS,YAAY,EAAE,KAAK,cAAc,GAAqB;AAC7D,QAAMG,eAAa,CAAC,eAAuB;AACzC,WAAO,IAAI,KAAK,UAAU,EAAE,eAAe,SAAS;AAAA,MAClD,OAAO;AAAA,MACP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAEA,SACE,gBAAAR,OAACS,QAAA,EAAK,WAAU,0CACd,0BAAAT,OAACU,eAAA,EAAY,WAAU,OACrB,0BAAAT,QAAC,SAAI,WAAU,qCACb;AAAA,oBAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,sBAAAD,OAACM,cAAA,EAAY,QAAQ,IAAI,QAAQ;AAAA,MACjC,gBAAAN,OAACE,gBAAA,EAAc,UAAU,IAAI,UAAU;AAAA,MAEvC,gBAAAD,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,mCACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,0CACb;AAAA,gBAAI;AAAA,YAAW;AAAA,YAAG,IAAI,cAAc,IAAI;AAAA,aAC3C;AAAA,UACC,IAAI,QACH,gBAAAA,QAAC,UAAK,WAAU,8BAA6B;AAAA;AAAA,YACvC,IAAI,KAAK;AAAA,aACf;AAAA,WAEJ;AAAA,QAEC,IAAI,eACH,gBAAAD,OAAC,OAAE,WAAU,6CACV,cAAI,aACP;AAAA,SAEJ;AAAA,MAEA,gBAAAA,OAAC,SAAI,WAAU,gDACZ,UAAAQ,aAAW,IAAI,SAAS,GAC3B;AAAA,OACF;AAAA,IAEA,gBAAAP;AAAA,MAACU;AAAA,MAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,cAAc,GAAG;AAAA,QAChC,WAAU;AAAA,QAEV;AAAA,0BAAAX,OAACN,OAAA,EAAI,WAAU,gBAAe;AAAA,UAAE;AAAA;AAAA;AAAA,IAElC;AAAA,KACF,GACF,GACF;AAEJ;AASA,SAAS,eAAe,EAAE,QAAQ,gBAAgB,QAAQ,GAAwB;AAChF,QAAM,oBAAoB,CAAC,OAA6B,UAAkB;AACxE,mBAAe;AAAA,MACb,GAAG;AAAA,MACH,CAAC,KAAK,GAAG,UAAU,SAAS,UAAU,KAAK,SAAY;AAAA,IACzD,CAAC;AAAA,EACH;AAEA,SACE,gBAAAO,QAACQ,QAAA,EAAK,WAAU,QACd;AAAA,oBAAAT,OAACY,cAAA,EACC,0BAAAX,QAACY,aAAA,EAAU,WAAU,2BACnB;AAAA,sBAAAb,OAACR,SAAA,EAAO,WAAU,WAAU;AAAA,MAAE;AAAA,OAEhC,GACF;AAAA,IACA,gBAAAS,QAACS,eAAA,EACC;AAAA,sBAAAT,QAAC,SAAI,WAAU,wDACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,oBAAM;AAAA,UAC7C,gBAAAC;AAAA,YAACa;AAAA,YAAA;AAAA,cACC,OAAO,OAAO,UAAU;AAAA,cACxB,eAAe,CAAC,UAAU,kBAAkB,UAAU,KAAK;AAAA,cAE3D;AAAA,gCAAAd,OAACe,iBAAA,EACC,0BAAAf,OAACgB,eAAA,EAAY,aAAY,eAAc,GACzC;AAAA,gBACA,gBAAAf,QAACgB,iBAAA,EACC;AAAA,kCAAAjB,OAACkB,cAAA,EAAW,OAAM,OAAM,yBAAW;AAAA,kBACnC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,kBACjC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,kBACjC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,kBACjC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,SAAQ,mBAAK;AAAA,kBAC/B,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,kBACjC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,QAAO,kBAAI;AAAA,mBAC/B;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAEA,gBAAAjB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,yBAAW;AAAA,UAClD,gBAAAC;AAAA,YAACa;AAAA,YAAA;AAAA,cACC,OAAO,OAAO,cAAc;AAAA,cAC5B,eAAe,CAAC,UAAU,kBAAkB,cAAc,KAAK;AAAA,cAE/D;AAAA,gCAAAd,OAACe,iBAAA,EACC,0BAAAf,OAACgB,eAAA,EAAY,aAAY,gBAAe,GAC1C;AAAA,gBACA,gBAAAf,QAACgB,iBAAA,EACC;AAAA,kCAAAjB,OAACkB,cAAA,EAAW,OAAM,OAAM,0BAAY;AAAA,kBACpC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,QAAO,kBAAI;AAAA,kBAC7B,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,WAAU,qBAAO;AAAA,kBACnC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,SAAQ,mBAAK;AAAA,kBAC/B,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,kBACrC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,WAAU,qBAAO;AAAA,kBACnC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,kBACrC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,mBACnC;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAEA,gBAAAjB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,sBAAQ;AAAA,UAC/C,gBAAAC;AAAA,YAACa;AAAA,YAAA;AAAA,cACC,OAAO,OAAO,YAAY;AAAA,cAC1B,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,cAE7D;AAAA,gCAAAd,OAACe,iBAAA,EACC,0BAAAf,OAACgB,eAAA,EAAY,aAAY,kBAAiB,GAC5C;AAAA,gBACA,gBAAAf,QAACgB,iBAAA,EACC;AAAA,kCAAAjB,OAACkB,cAAA,EAAW,OAAM,OAAM,4BAAc;AAAA,kBACtC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,QAAO,kBAAI;AAAA,kBAC7B,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,WAAU,qBAAO;AAAA,kBACnC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,SAAQ,mBAAK;AAAA,kBAC/B,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,mBACvC;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAEA,gBAAAjB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,sBAAQ;AAAA,UAC/C,gBAAAC;AAAA,YAACa;AAAA,YAAA;AAAA,cACC,OAAO,OAAO,YAAY;AAAA,cAC1B,eAAe,CAAC,UAAU,kBAAkB,YAAY,KAAK;AAAA,cAE7D;AAAA,gCAAAd,OAACe,iBAAA,EACC,0BAAAf,OAACgB,eAAA,EAAY,aAAY,kBAAiB,GAC5C;AAAA,gBACA,gBAAAf,QAACgB,iBAAA,EACC;AAAA,kCAAAjB,OAACkB,cAAA,EAAW,OAAM,OAAM,4BAAc;AAAA,kBACtC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,WAAU,qBAAO;AAAA,kBACnC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,kBACrC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,YAAW,sBAAQ;AAAA,kBACrC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,UAAS,oBAAM;AAAA,kBACjC,gBAAAlB,OAACkB,cAAA,EAAW,OAAM,cAAa,wBAAU;AAAA,mBAC3C;AAAA;AAAA;AAAA,UACF;AAAA,WACF;AAAA,QAEA,gBAAAjB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,wBAAU;AAAA,UACjD,gBAAAA;AAAA,YAACmB;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,OAAO,aAAa;AAAA,cAC3B,UAAU,CAACC,OAAM,kBAAkB,aAAaA,GAAE,OAAO,KAAK;AAAA;AAAA,UAChE;AAAA,WACF;AAAA,QAEA,gBAAAnB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,sBAAQ;AAAA,UAC/C,gBAAAA;AAAA,YAACmB;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO,OAAO,WAAW;AAAA,cACzB,UAAU,CAACC,OAAM,kBAAkB,WAAWA,GAAE,OAAO,KAAK;AAAA;AAAA,UAC9D;AAAA,WACF;AAAA,QAEA,gBAAAnB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,uBAAS;AAAA,UAChD,gBAAAA;AAAA,YAACmB;AAAA,YAAA;AAAA,cACC,aAAY;AAAA,cACZ,OAAO,OAAO,YAAY;AAAA,cAC1B,UAAU,CAACC,OAAM,kBAAkB,YAAYA,GAAE,OAAO,KAAK;AAAA;AAAA,UAC/D;AAAA,WACF;AAAA,QAEA,gBAAAnB,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,WAAM,WAAU,uBAAsB,qBAAO;AAAA,UAC9C,gBAAAA;AAAA,YAACmB;AAAA,YAAA;AAAA,cACC,aAAY;AAAA,cACZ,OAAO,OAAO,UAAU;AAAA,cACxB,UAAU,CAACC,OAAM,kBAAkB,UAAUA,GAAE,OAAO,KAAK;AAAA;AAAA,UAC7D;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAnB,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,OAACW,UAAA,EAAO,SAAQ,WAAU,SAAS,SAAS,2BAE5C;AAAA,QACA,gBAAAV,QAAC,SAAI,WAAU,+BAA8B;AAAA;AAAA,UAClC,QAAQ,SAAS;AAAA,UAAG;AAAA,WAC/B;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAsBO,SAAS,eAAe;AAAA,EAC7B,YAAY;AAAA,EACZ,OAAO,CAAC;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,SAAS,EAAE,OAAO,IAAI,QAAQ,EAAE;AAAA,EAChC,aAAa,EAAE,OAAO,GAAG,OAAO,IAAI,QAAQ,GAAG,SAAS,MAAM;AAAA,EAC9D,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,gBAAgB,MAAM;AAAA,EAAC;AAAA,EACvB,aAAa,MAAM;AAAA,EAAC;AAAA,EACpB,YAAY,MAAM;AAAA,EAAC;AAAA,EACnB,gBAAgB,MAAM;AAAA,EAAC;AACzB,GAAwB;AACtB,QAAM,CAAC,aAAa,cAAc,IAAIoB,WAA0B,IAAI;AACpE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS,KAAK;AACtD,QAAM,CAAC,WAAW,YAAY,IAAIA,WAA2B,MAAM;AAGnE,QAAM,oBAAoB,CAAC,QAAkB;AAC3C,mBAAe,GAAG;AAClB,oBAAgB,IAAI;AACpB,kBAAc,GAAG;AAAA,EACnB;AAEA,QAAM,oBAAoB,MAAM;AAC9B,mBAAe,IAAI;AACnB,oBAAgB,KAAK;AAAA,EACvB;AAEA,SACE,gBAAApB,QAAC,SAAI,WACH;AAAA,oBAAAA,QAAC,SAAI,WAAU,QACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,6CAA4C,wBAAU;AAAA,MACpE,gBAAAA,OAAC,OAAE,WAAU,uBAAsB,0EAEnC;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD;AAAA,UAACW;AAAA,UAAA;AAAA,YACC,SAAS,cAAc,SAAS,YAAY;AAAA,YAC5C,SAAS,MAAM,aAAa,MAAM;AAAA,YACnC;AAAA;AAAA,QAED;AAAA,QACA,gBAAAX;AAAA,UAACW;AAAA,UAAA;AAAA,YACC,SAAS,cAAc,UAAU,YAAY;AAAA,YAC7C,SAAS,MAAM,aAAa,OAAO;AAAA,YACpC;AAAA;AAAA,QAED;AAAA,SACF;AAAA,MAEC,cAAc,UACb,gBAAAV,QAAC,SAAI,WAAU,aACf;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA,SAAS;AAAA;AAAA,QACX;AAAA,QAEA,gBAAAC,QAACQ,QAAA,EACC;AAAA,0BAAAT,OAACY,cAAA,EACC,0BAAAX,QAACY,aAAA,EAAU,WAAU,qCACnB;AAAA,4BAAAZ,QAAC,UAAK;AAAA;AAAA,cAAa,YAAY,SAAS;AAAA,cAAE;AAAA,eAAO;AAAA,YACjD,gBAAAD,OAAC,SAAI,WAAU,2BACb,0BAAAC;AAAA,cAACU;AAAA,cAAA;AAAA,gBACG,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,SAAS;AAAA,gBACT,UAAU;AAAA,gBAEV;AAAA,kCAAAX,OAACP,YAAA,EAAU,WAAW,gBAAgB,UAAU,iBAAiB,EAAE,IAAI;AAAA,kBAAE;AAAA;AAAA;AAAA,YAE3E,GACJ;AAAA,aACF,GACF;AAAA,UACA,gBAAAO,OAACU,eAAA,EACE,oBACC,gBAAAT,QAAC,SAAI,WAAU,oBACb;AAAA,4BAAAD,OAACP,YAAA,EAAU,WAAU,qCAAoC;AAAA,YACzD,gBAAAO,OAAC,OAAE,WAAU,uBAAsB,mCAAqB;AAAA,aAC1D,IACkB,CAAC,QAAQ,KAAK,WAAW,IAC3C,gBAAAA,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,uBAAsB,kCAAoB,GACzD,IAEA,gBAAAA,OAAC,SAAI,WAAU,aACZ,eAAK,IAAI,SACR,gBAAAA;AAAA,YAAC;AAAA;AAAA,cAEC;AAAA,cACA,eAAe;AAAA;AAAA,YAFV,IAAI;AAAA,UAGX,CACD,GACH,GAEJ;AAAA,WACF;AAAA,SACA;AAAA,MAGD,cAAc,WACb,gBAAAA,OAAC,SAAI,WAAU,aACd,kBACC,gBAAAC,QAAC,SAAI,WAAU,wDACb;AAAA,wBAAAD,OAACS,QAAA,EACC,0BAAAT,OAACU,eAAA,EAAY,WAAU,OACrB,0BAAAT,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,OAAE,WAAU,2CAA0C,wBAAU;AAAA,YACjE,gBAAAA,OAAC,OAAE,WAAU,wCAAwC,gBAAM,WAAU;AAAA,aACvE;AAAA,UACA,gBAAAA,OAACL,WAAA,EAAS,WAAU,yBAAwB;AAAA,WAC9C,GACF,GACF;AAAA,QAEA,gBAAAK,OAACS,QAAA,EACC,0BAAAT,OAACU,eAAA,EAAY,WAAU,OACrB,0BAAAT,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,OAAE,WAAU,2CAA0C,6BAAe;AAAA,YACtE,gBAAAA,OAAC,OAAE,WAAU,wCAAwC,gBAAM,gBAAe;AAAA,YAC1E,gBAAAA,OAAC,OAAE,WAAU,8BAA6B,2BAAa;AAAA,aACzD;AAAA,UACA,gBAAAA,OAACD,SAAA,EAAM,WAAU,0BAAyB;AAAA,WAC5C,GACF,GACF;AAAA,QAEA,gBAAAC,OAACS,QAAA,EACC,0BAAAT,OAACU,eAAA,EAAY,WAAU,OACrB,0BAAAT,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,OAAE,WAAU,2CAA0C,6BAAe;AAAA,YACtE,gBAAAA,OAAC,OAAE,WAAU,wCACV,gBAAM,eAAe,YAAY,GACpC;AAAA,aACF;AAAA,UACA,gBAAAA,OAACJ,iBAAA,EAAc,WAAU,wBAAuB;AAAA,WAClD,GACF,GACF;AAAA,QAEA,gBAAAI,OAACS,QAAA,EACC,0BAAAT,OAACU,eAAA,EAAY,WAAU,OACrB,0BAAAT,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAAC,OAAE,WAAU,2CAA0C,6BAAe;AAAA,YACtE,gBAAAA,OAAC,OAAE,WAAU,wCACV,gBAAM,eAAe,YAAY,GACpC;AAAA,aACF;AAAA,UACA,gBAAAA,OAACL,WAAA,EAAS,WAAU,2BAA0B;AAAA,WAChD,GACF,GACF;AAAA,SACF,IAEA,gBAAAK,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,uBAAsB,sCAAwB,GAC7D,GAEF;AAAA,OAEJ;AAAA,IAGC,eACC,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,SAAS;AAAA;AAAA,IACX;AAAA,KAEJ;AAEJ;AAGO,SAAS,qBAAqB,EAAE,YAAY,GAAG,GAA2B;AAC/E,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA,MAAM,CAAC;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ,EAAE,OAAO,IAAI,QAAQ,EAAE;AAAA,MAC/B,YAAY,EAAE,OAAO,GAAG,OAAO,IAAI,QAAQ,GAAG,SAAS,MAAM;AAAA,MAC7D,gBAAgB,MAAM;AAAA,MAAC;AAAA,MACvB,eAAe,MAAM;AAAA,MAAC;AAAA,MACtB,YAAY,MAAM;AAAA,MAAC;AAAA,MACnB,WAAW,MAAM;AAAA,MAAC;AAAA,MAClB,eAAe,MAAM;AAAA,MAAC;AAAA;AAAA,EACxB;AAEJ;;;AExlBA,SAAgB,YAAAsB,YAAU,aAAAC,mBAAiB;AAC3C;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EAEA,eAAAC;AAAA,EAEA,SAAAC;AAAA,EAIA,YAAAC;AAAA,EAMA,sBAAAC;AAAA,OACK;AAoBP,SAAS,qBAAAC,oBAAmB,YAAAC,iBAAgB;AAC5C,SAAS,uBAAAC,sBAAqB,qBAAAC,0BAAsD;AACpF,SAAS,wBAAAC,8BAA4B;;;ACzCrC;AAAA,EACE,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP,SAAuC,WAAAC,WAAS,aAAAC,kBAAiB;AACjE,SAAS,kBAAAC,wBAAsB;;;ACV/B,YAAY,eAAe;AAwBpB,IAAM,2BAA2B,CAAC,OAAyB,iBAAuC;AACvG,MAAI,MAAM,cAAc,QAAQ;AAC9B,WAAO,MAAM;AAAA,EACf;AAGA,QAAM,kBAAkB,MAAM,cAAc,MAAM;AAClD,QAAM,kBAAkB,aAAa,mBAAmB;AACxD,SAAO,kBAAkB;AAC3B;AAgBO,IAAM,4BAA4B,CAAC,OAAyB,iBAAuC;AACxG,SAAO,yBAAyB,OAAO,YAAY;AACrD;AAGO,IAAM,qBAAqB,CAAC,UAAoC;AACrE,MAAI,MAAM,cAAc,QAAQ;AAC9B,WAAO;AAAA,EACT;AAEA,UAAQ,MAAM,QAAQ;AAAA,IACpB,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AA2CO,IAAM,uBAAuB,CAAC,OAAyB,iBAA+B;AAC3F,MAAI,MAAM,cAAc,QAAQ;AAC9B,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA,QACX;AAAA,UACE,OAAO;AAAA,UACP,OAAO,MAAM;AAAA,UACb,SAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,UAAQ,MAAM,QAAQ;AAAA,IACpB,KAAK;AACH,YAAM,kBAAkB,MAAM,cAAc,MAAM;AAClD,YAAM,kBAAkB,aAAa,mBAAmB;AACxD,YAAM,kBAAkB,yBAAyB,OAAO,YAAY;AACpE,YAAM,gBAAgB,aAAa,kBAAkB,aAAa,eAAe,KAAK,MAAM;AAE5F,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa,gBACT,+DACA;AAAA,QACJ,aAAa;AAAA,UACX;AAAA,YACE,OAAO;AAAA,YACP,OAAO,MAAM;AAAA,UACf;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,OAAO,CAAC,MAAM;AAAA,YACd,YAAY;AAAA,UACd;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,UACT;AAAA,UACA,GAAI,gBAAgB;AAAA,YAClB;AAAA,cACE,OAAO;AAAA,cACP,OAAO;AAAA,cACP,cAAc;AAAA,cACd,gBAAgB,GAAG,aAAa,cAAc,GAAG,aAAa,oBAAoB,MAAM,aAAa,iBAAiB,KAAK,EAAE;AAAA,YAC/H;AAAA,UACF,IAAI,CAAC;AAAA,UACL;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,YACP,SAAS;AAAA,YACT,cAAc;AAAA,UAChB;AAAA,QACF;AAAA,MACF;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa,CAAC;AAAA,MAChB;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa,CAAC;AAAA,MAChB;AAAA,IAEF;AACE,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa,CAAC;AAAA,MAChB;AAAA,EACJ;AACF;AAGO,IAAM,mBAAmB,CAAC,OAAyB,iBAA+B;AACvF,MAAI,MAAM,cAAc,QAAQ;AAC9B,WAAO;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa,CAAC;AAAA,IAChB;AAAA,EACF;AAGA,UAAQ,MAAM,QAAQ;AAAA,IACpB,KAAK;AACH,YAAM,kBAAkB,aAAa,mBAAmB;AACxD,YAAM,YAAY,aAAa,aAAa;AAC5C,YAAM,eAAe,kBAAkB;AAEvC,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa;AAAA,UACX;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,OAAO,CAAC;AAAA,YACR,YAAY;AAAA,UACd;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,OAAO;AAAA,YACP,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa,CAAC;AAAA,MAChB;AAAA,IAEF;AACE,aAAO;AAAA,QACL,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa,CAAC;AAAA,MAChB;AAAA,EACJ;AACF;;;ADzLa,gBAAAC,QA8BH,QAAAC,eA9BG;AA1BN,IAAM,wBAA8D,CAAC;AAAA,EAC1E;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,mBAAmB,SAAS;AAClC,QAAM,eAAe,SAAS;AAG9B,QAAM,UAAU,mBACZ,qBAAqB,OAAO,YAAY,IACxC,iBAAiB,OAAO,YAAY;AAExC,QAAM,gBAAgB,MAAM;AAC1B,QAAI,kBAAkB;AACpB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,kBAAkB;AACpB,aAAO,gBAAAD,OAACE,WAAA,EAAQ,WAAU,0BAAyB;AAAA,IACrD;AACA,WAAO,gBAAAF,OAACG,YAAA,EAAU,WAAU,yBAAwB;AAAA,EACtD;AAEA,QAAM,sBAAsB,MAAM;AAChC,QAAI,kBAAkB;AACpB,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAEA,QAAM,gBAAgB,YAAY;AAChC,QAAI;AACF,UAAI,oBAAoB,iBAAiB;AACvC,cAAM,gBAAgB;AAAA,MACxB,WAAW,gBAAgB,iBAAiB;AAC1C,cAAM,gBAAgB;AAAA,MACxB;AACA,cAAQ;AAAA,IACV,SAAS,OAAO;AAEd,cAAQ,MAAM,gCAAgC,KAAK;AAAA,IACrD;AAAA,EACF;AAEA,SACE,gBAAAH,OAACI,UAAA,EAAO,MAAM,QAAQ,cAAc,SAClC,0BAAAH,QAACI,iBAAA,EAAc,WAAU,aACvB;AAAA,oBAAAL,OAACM,gBAAA,EACC,0BAAAL,QAACM,eAAA,EAAY,WAAU,2BACpB;AAAA,mBAAa;AAAA,MACd,gBAAAP,OAAC,UAAK,WAAU,iBAAiB,wBAAc,GAAE;AAAA,OACnD,GACF;AAAA,IAEA,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,6BACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,qCAAoC;AAAA;AAAA,YAAQ,MAAM;AAAA,aAAY;AAAA,UAC9E,gBAAAD,OAACQ,SAAA,EAAM,SAAS,MAAM,cAAc,SAAS,YAAY,aACtD,gBAAM,WACT;AAAA,WACF;AAAA,QACA,gBAAAP,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,UAC1B,MAAM,UAAU;AAAA,UAAU;AAAA,UAAE,MAAM,UAAU;AAAA,WACzD;AAAA,QACA,gBAAAA,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,UAC5B,MAAM;AAAA,WACjB;AAAA,SACF;AAAA,MAGA,gBAAAD,OAAC,SAAI,WAAU,aAEb,0BAAAC,QAAC,SAAI,WAAU,eACD;AAAA,wBAAAD,OAAC,QAAG,WAAU,4CACzB,6BAAmB,0BAA0B,sBAChD;AAAA,QAGG,QAAQ,eAAe,QAAQ,YAAY,SAAS,KACnD,gBAAAC,QAAC,SAAI,WAAU,uFACb;AAAA,0BAAAD,OAAC,UACE,kBAAQ,YAAY,KAAK,UAAS,KAAa,OAAO,GAAG,UAAU,SAChES,iBAAe,QAAQ,YAAY,KAAK,UAAS,KAAa,OAAO,GAAG,SAAS,CAAC,IAClF,QAEN;AAAA,UAEC,aAAa,kBACb,aAAa,mBAAmB,WAChC,aAAa,eAAe,KAAK,MAAM,MACtC,gBAAAR,QAAC,UAAK,WAAU,0CAAyC;AAAA;AAAA,YACpD,aAAa;AAAA,aAClB;AAAA,UAED,aAAa,mBAAmB,WAChC,aAAa,qBACb,aAAa,kBAAkB,KAAK,MAAM,MACzC,gBAAAA,QAAC,UAAK,WAAU,0CAAyC;AAAA;AAAA,YACpD,aAAa;AAAA,aAClB;AAAA,WAEJ;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,IAEA,gBAAAA,QAACS,gBAAA,EAAa,WAAU,cACtB;AAAA,sBAAAV,OAACW,UAAA,EAAO,SAAQ,WAAU,SAAS,SAAS,mBAE5C;AAAA,MACC,QAAQ,eAAe,QAAQ,YAAY,SAAS,KACnD,gBAAAX,OAACW,UAAA,EAAO,SAAS,eACd,8BAAoB,GACvB;AAAA,OAEJ;AAAA,KACF,GACF;AAEJ;;;AErKA,SAAS,QAAAC,cAAY;AACrB,SAAS,wBAAAC,8BAA4B;AACrC,SAAS,wBAAAC,6BAA4B;AAa7B,SAuCM,YAAAC,YAtCJ,OAAAC,QADF,QAAAC,eAAA;AAND,IAAM,mBAAoD,CAAC,EAAE,MAAM,MAAM;AAC9E,QAAMC,KAAIL,uBAAqB;AAE/B,SACE,gBAAAI,QAAC,QAAK,WAAU,iBACd;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,mCACnB;AAAA,sBAAAD,OAACJ,QAAA,EAAK,WAAU,WAAU;AAAA,MACzBM,GAAE,yBAAyB;AAAA,OAC9B,GACF;AAAA,IACA,gBAAAD,QAAC,eAAY,WAAU,oBACrB;AAAA,sBAAAA,QAAC,SAAI,WAAU,yCAEb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aAEb;AAAA,0BAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,cAAAC,GAAE,eAAe;AAAA,cAAE;AAAA,eAAC;AAAA,YAC7D,gBAAAF,OAAC,UAAK,WAAU,uBACb,gBAAM,UAAU,YACb,GAAG,MAAM,SAAS,SAAS,IAAI,MAAM,SAAS,YAAY,EAAE,GAAG,KAAK,IACpE,MAAM,gBAAgBE,GAAE,qBAAqB,GACnD;AAAA,aACF;AAAA,UAGA,gBAAAD,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,cAAAC,GAAE,gBAAgB;AAAA,cAAE;AAAA,eAAC;AAAA,YAC9D,gBAAAF,OAAC,UAAK,WAAU,uBACb,gBAAM,UAAU,SAAS,MAAM,iBAAiB,OACnD;AAAA,aACF;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,cAAAC,GAAE,eAAe;AAAA,cAAE;AAAA,eAAC;AAAA,YAC7D,gBAAAF,OAAC,UAAK,WAAU,uBACb,gBAAM,QAAQ,QAAS,MAAc,cAAc,OACtD;AAAA,aACF;AAAA,WACF;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,aACZ;AAAA,gBAAM,cAAc,UACnB,gBAAAA,QAAAF,YAAA,EACE;AAAA,4BAAAE,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,gBAAAC,GAAE,kBAAkB;AAAA,gBAAE;AAAA,iBAAC;AAAA,cAChE,gBAAAF,OAAC,UAAK,WAAU,uBACb,gBAAM,eAAeF,sBAAqB,MAAM,YAAY,IAAI,OACnE;AAAA,eACF;AAAA,YACA,gBAAAG,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,gBAAAC,GAAE,kBAAkB;AAAA,gBAAE;AAAA,iBAAC;AAAA,cAChE,gBAAAF,OAAC,UAAK,WAAU,uBACb,gBAAM,eAAeF,sBAAqB,MAAM,YAAY,IAAI,OACnE;AAAA,eACF;AAAA,aACF;AAAA,UAIF,gBAAAG,QAAC,SAAI,WAAU,wBACb;AAAA,4BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,cAAAC,GAAE,kBAAkB;AAAA,cAAE;AAAA,eAAC;AAAA,YAChE,gBAAAF,OAAC,UAAK,WAAU,uBACb,gBAAM,YAAYF,sBAAqB,MAAM,SAAS,IAAI,OAC7D;AAAA,aACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAE,OAAC,SAAI,WAAU,UAAS;AAAA,OAC1B;AAAA,KACF;AAEJ;;;ACrFA,SAAS,WAAAG,iBAAe;AACxB,SAAS,wBAAAC,8BAA4B;AACrC,SAAS,qBAAAC,0BAAyB;AAc1B,SACE,OAAAC,QADF,QAAAC,eAAA;AAPD,IAAM,oBAAsD,CAAC,EAAE,MAAM,MAAM;AAChF,QAAMC,KAAIJ,uBAAqB;AAC/B,QAAM,cAAcC,mBAAkB;AAEtC,SACE,gBAAAE,QAAC,QACC;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,mCACnB;AAAA,sBAAAD,OAACH,WAAA,EAAQ,WAAU,WAAU;AAAA,MAC5BK,GAAE,iBAAiB;AAAA,OACtB,GACF;AAAA,IACA,gBAAAF,OAAC,eACE,gBAAM,WAAW,WAAW,IAC3B,gBAAAC,QAAC,SAAI,WAAU,kCACb;AAAA,sBAAAD,OAACH,WAAA,EAAQ,WAAU,sCAAqC;AAAA,MACxD,gBAAAG,OAAC,OAAE,WAAU,WAAW,UAAAE,GAAE,eAAe,GAAE;AAAA,OAC7C,IAEA,gBAAAF,OAAC,SAAI,WAAU,aACZ,gBAAM,WAAW,IAAI,CAAC,MAAM,UAC3B,gBAAAA,OAAC,SAAgB,WAAU,oDACzB,0BAAAC,QAAC,SAAI,WAAU,0BAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,4FACb,0BAAAA,OAACH,WAAA,EAAQ,WAAU,yBAAwB,GAC7C,GACF;AAAA,MAGA,gBAAAI,QAAC,SAAI,WAAU,kBACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,qCACZ,eAAK,SAAS,QAAQ,mBACzB;AAAA,QACA,gBAAAA,OAAC,SAAI,WAAU,yBACZ,eAAK,SAAS,OAAO,GAAGE,GAAE,eAAe,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,mBACxE;AAAA,QACA,gBAAAD,QAAC,SAAI,WAAU,yBACZ;AAAA,sBAAY,KAAK,SAAS;AAAA,UAAE;AAAA,UAAI,KAAK;AAAA,WACxC;AAAA,QACE,KAAa,SACb,gBAAAA,QAAC,SAAI,WAAU,8BACZ;AAAA,UAAAC,GAAE,cAAc;AAAA,UAAE;AAAA,UAAI,KAAa,SAASA,GAAE,gBAAgB;AAAA,WACjE;AAAA,SAEJ;AAAA,OACF,KA1BQ,KA2BV,CACD,GACH,GAEJ;AAAA,KACF;AAEJ;;;AChEA,SAAS,cAAAC,oBAAkB;AAC3B,SAAS,wBAAAC,8BAA4B;AACrC,SAAS,qBAAAC,0BAAyB;AA4B1B,SACE,OAAAC,QADF,QAAAC,eAAA;AAXD,IAAM,mBAAoD,CAAC;AAAA,EAChE;AAAA,EACA;AAAA,EACA,0BAAAC;AACF,MAAM;AACJ,QAAMC,KAAIL,uBAAqB;AAC/B,QAAM,cAAcC,mBAAkB;AAEtC,SACE,gBAAAE,QAAC,QACC;AAAA,oBAAAD,OAAC,cACC,0BAAAC,QAAC,aAAU,WAAU,mCACnB;AAAA,sBAAAD,OAACH,cAAA,EAAW,WAAU,WAAU;AAAA,MAC/BM,GAAE,qBAAqB;AAAA,OAC1B,GACF;AAAA,IACA,gBAAAF,QAAC,eAAY,WAAU,aAErB;AAAA,sBAAAA,QAAC,SAAI,WAAU,gCACb;AAAA,wBAAAA,QAAC,UAAK,WAAU,iBAAiB;AAAA,UAAAE,GAAE,iBAAiB;AAAA,UAAE;AAAA,WAAC;AAAA,QACvD,gBAAAH,OAAC,UAAK,WAAU,eAAe,sBAAY,MAAM,eAAe,CAAC,GAAE;AAAA,SACrE;AAAA,MAGE,MAAc,iBAAiB,KAC/B,gBAAAC,QAAC,SAAI,WAAU,+CACb;AAAA,wBAAAA,QAAC,UACE;AAAA,UAAAE,GAAE,kBAAkB;AAAA,UAAE;AAAA,UAAG,MAAc,iBAAiB,gBAAiB,MAAc,gBACpF,IAAK,MAAc,aAAa,OAChC;AAAA,UAAW;AAAA,WACjB;AAAA,QACA,gBAAAF,QAAC,UAAK,WAAU,eAAc;AAAA;AAAA,UAAE,YAAa,MAAc,cAAc;AAAA,WAAE;AAAA,SAC7E;AAAA,MAID,MAAM,cAAc,UAAU,MAAM,gBAAgB,KACnD,gBAAAA,QAAC,SAAI,WAAU,gCACb;AAAA,wBAAAA,QAAC,UAAK,WAAU,iBAAiB;AAAA,UAAAE,GAAE,gBAAgB;AAAA,UAAE;AAAA,WAAC;AAAA,QACtD,gBAAAH,OAAC,UAAK,WAAU,eAAe,sBAAY,MAAM,aAAa,GAAE;AAAA,SAClE;AAAA,MAIF,gBAAAC,QAAC,SAAI,WAAU,uFACb;AAAA,wBAAAA,QAAC,UAAM;AAAA,UAAAE,GAAE,mBAAmB;AAAA,UAAE;AAAA,WAAC;AAAA,QAC/B,gBAAAH,OAAC,UAAM,sBAAY,MAAM,eAAe,CAAC,GAAE;AAAA,SAC7C;AAAA,MAGC,MAAM,cAAc,UACnB,gBAAAC,QAAC,SAAI,WAAU,8DACb;AAAA,wBAAAA,QAAC,UAAK,WAAU,iBAAiB;AAAA,UAAAE,GAAE,yBAAyB;AAAA,UAAE;AAAA,WAAC;AAAA,QAC/D,gBAAAH,OAAC,UAAK,WAAW,eACf,MAAM,WAAW,aAAa,oBAC9B,MAAM,WAAW,aAAa,kBAC9B,eACF,IACG,gBAAM,WAAW,aAChB,gBAAAC,QAAC,UAAK,WAAU,2BACd;AAAA,0BAAAD,OAAC,UAAM,sBAAYE,0BAAyB,OAAO,YAAY,CAAC,GAAE;AAAA,UACjE,aAAa,kBAAkB,aAAa,mBAAmB,WAC9D,gBAAAD,QAAC,UAAK,WAAU,2DAA0D;AAAA;AAAA,YACrE,aAAa;AAAA,aAClB;AAAA,UAED,aAAa,mBAAmB,WAAW,aAAa,qBACvD,gBAAAA,QAAC,UAAK,WAAU,2DAA0D;AAAA;AAAA,YACrE,aAAa;AAAA,aAClB;AAAA,UAED,aAAa,mBAAmB,WAAW,CAAC,aAAa,qBACxD,gBAAAA,QAAC,UAAK,WAAU,2DAA0D;AAAA;AAAA,YACrEE,GAAE,mBAAmB;AAAA,aAC1B;AAAA,WAEJ,IAED,MAAM,WAAW,aAAaA,GAAE,yBAAyB,IACzDA,GAAE,2BAA2B,GAChC;AAAA,SACF;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AC1GA;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,UAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AACP,SAAS,YAAAC,WAAU,QAAAC,OAAM,QAAAC,cAAY;AACrC,SAAS,wBAAAC,8BAA4B;AACrC,SAAS,qBAAAC,0BAAyB;AAoD1B,SAOE,YAAAC,YANA,OAAAC,QADF,QAAAC,eAAA;AAvBD,IAAM,oBAAsD,CAAC;AAAA,EAClE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIL,uBAAqB;AAC/B,QAAM,cAAcC,mBAAkB;AAEtC,SACE,gBAAAG,QAACpB,QAAA,EACC;AAAA,oBAAAmB,OAAClB,cAAA,EACC,0BAAAmB,QAAClB,aAAA,EAAU,WAAU,mCACnB;AAAA,sBAAAiB,OAACN,WAAA,EAAS,WAAU,WAAU;AAAA,MAC7BQ,GAAE,sBAAsB;AAAA,OAC3B,GACF;AAAA,IACA,gBAAAF,OAAChB,eAAA,EAAY,WAAU,aACpB,8BACC,gBAAAiB,QAAAF,YAAA,EAEE;AAAA,sBAAAE,QAAC,SACC;AAAA,wBAAAA,QAACd,SAAA,EAAM,SAAQ,aAAY,WAAU,qCAClC;AAAA,UAAAe,GAAE,kBAAkB;AAAA,UACpB,CAAC,mBAAmB,KACnB,gBAAAF,OAAC,UAAK,WAAU,8BAA6B,mDAAqC;AAAA,WAEtF;AAAA,QACA,gBAAAA;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,OAAO,aAAa,aAAa;AAAA,YACjC,UAAU,CAACiB,OAAM,iBAAiB,EAAE,WAAW,WAAWA,GAAE,OAAO,KAAK,KAAK,EAAE,CAAC;AAAA,YAChF,WAAU;AAAA,YACV,aAAY;AAAA,YACZ,UAAU,CAAC,mBAAmB;AAAA;AAAA,QAChC;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SACC;AAAA,wBAAAA,QAACd,SAAA,EAAM,SAAQ,mBAAkB,WAAU,qCACxC;AAAA,UAAAe,GAAE,wBAAwB;AAAA,UAC1B,CAAC,yBAAyB,KACzB,gBAAAF,OAAC,UAAK,WAAU,8BAA6B,mDAAqC;AAAA,WAEtF;AAAA,QACA,gBAAAA;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,KAAI;AAAA,YACJ,MAAK;AAAA,YACL,OAAO,aAAa,mBAAmB;AAAA,YACvC,UAAU,CAACiB,OAAM,iBAAiB,EAAE,iBAAiB,WAAWA,GAAE,OAAO,KAAK,KAAK,EAAE,CAAC;AAAA,YACtF,WAAU;AAAA,YACV,aAAY;AAAA,YACZ,UAAU,CAAC,yBAAyB;AAAA;AAAA,QACtC;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SACC;AAAA,wBAAAA,QAACd,SAAA,EAAM,SAAQ,kBAAiB,WAAU,qCACvC;AAAA,UAAAe,GAAE,uBAAuB;AAAA,UACzB,CAAC,wBAAwB,KACxB,gBAAAF,OAAC,UAAK,WAAU,8BAA6B,mDAAqC;AAAA,WAEtF;AAAA,QACA,gBAAAC;AAAA,UAACZ;AAAA,UAAA;AAAA,YACC,eAAe,CAAC,UAAU,iBAAiB,EAAE,gBAAgB,MAAM,CAAC;AAAA,YACpE,OAAO,aAAa,kBAAkB;AAAA,YACtC,cAAc;AAAA,YAEd;AAAA,8BAAAW,OAACR,iBAAA,EAAc,WAAU,QACvB,0BAAAQ,OAACP,eAAA,EAAY,aAAY,0BAAyB,GACpD;AAAA,cACA,gBAAAO,OAACV,iBAAA,EACE,0BAAgB,IAAI,UACnB,gBAAAU,OAACT,cAAA,EAAsB,OAAO,MAAO,kBAApB,IAAyB,CAC3C,GACH;AAAA;AAAA;AAAA,QACF;AAAA,SACF;AAAA,MAGA,gBAAAU,QAAC,SACC;AAAA,wBAAAA,QAACd,SAAA,EAAM,SAAQ,qBAAoB,WAAU,qCAC1C;AAAA,UAAAe,GAAE,0BAA0B;AAAA,UAC5B,CAAC,2BAA2B,KAC3B,gBAAAF,OAAC,UAAK,WAAU,8BAA6B,mDAAqC;AAAA,WAEtF;AAAA,QACA,gBAAAA;AAAA,UAACd;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,OAAO,aAAa,qBAAqB;AAAA,YACzC,UAAU,CAACiB,OAAM,iBAAiB,EAAE,mBAAmBA,GAAE,OAAO,MAAM,CAAC;AAAA,YACvE,WAAU;AAAA,YACV,aAAY;AAAA,YACZ,UAAU,CAAC,2BAA2B;AAAA;AAAA,QACxC;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SACC;AAAA,wBAAAD,OAACb,SAAA,EAAM,SAAQ,SAAQ,WAAU,qCAC9B,UAAAe,GAAE,cAAc,GACnB;AAAA,QACA,gBAAAF;AAAA,UAACZ;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,OAAO,aAAa,SAAS;AAAA,YAC7B,UAAU,CAACe,OAAM,iBAAiB,EAAE,OAAOA,GAAE,OAAO,MAAM,CAAC;AAAA,YAC3D,MAAM;AAAA,YACN,WAAU;AAAA,YACV,aAAY;AAAA;AAAA,QACd;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SAAI,WAAU,mBACb;AAAA,wBAAAA;AAAA,UAAChB;AAAA,UAAA;AAAA,YACC,SAAS;AAAA,YACT,UAAU,WAAW;AAAA,YACrB,WAAU;AAAA,YAEV;AAAA,8BAAAe,OAACL,OAAA,EAAK,WAAU,WAAU;AAAA,cACzB,mBAAmBO,GAAE,eAAe,IAAIA,GAAE,oBAAoB;AAAA;AAAA;AAAA,QACjE;AAAA,QACA,gBAAAF;AAAA,UAACf;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YAET,UAAAiB,GAAE,eAAe;AAAA;AAAA,QACpB;AAAA,SACF;AAAA,OACF,IAEA,gBAAAD,QAAAF,YAAA,EAEE;AAAA,sBAAAE,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,wBACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAC,GAAE,kBAAkB;AAAA,YAAE;AAAA,aAAC;AAAA,UAChE,gBAAAF,OAAC,UAAK,WAAU,uBACb,6BAAmB,IAChB,YAAY,aAAa,aAAa,CAAC,IACvC,gBAAAA,OAAC,UAAK,WAAU,wBAAuB,sBAAQ,GAErD;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAC,GAAE,wBAAwB;AAAA,YAAE;AAAA,aAAC;AAAA,UACtE,gBAAAF,OAAC,UAAK,WAAU,uBACb,mCAAyB,IACtB,YAAY,aAAa,mBAAmB,CAAC,IAC7C,gBAAAA,OAAC,UAAK,WAAU,wBAAuB,sBAAQ,GAErD;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAC,GAAE,uBAAuB;AAAA,YAAE;AAAA,aAAC;AAAA,UACrE,gBAAAF,OAAC,UAAK,WAAU,uBACb,kCAAwB,IACpB,aAAa,kBAAkB,kBAChC,gBAAAA,OAAC,UAAK,WAAU,wBAAuB,sBAAQ,GAErD;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAC,GAAE,0BAA0B;AAAA,YAAE;AAAA,aAAC;AAAA,UACxE,gBAAAF,OAAC,UAAK,WAAU,uBACb,qCAA2B,IACvB,aAAa,qBAAqBE,GAAE,kBAAkB,IACvD,gBAAAF,OAAC,UAAK,WAAU,wBAAuB,sBAAQ,GAErD;AAAA,WACF;AAAA,QACA,gBAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAC,GAAE,cAAc;AAAA,YAAE;AAAA,aAAC;AAAA,UAC5D,gBAAAF,OAAC,UAAK,WAAU,uBAAuB,uBAAa,SAASE,GAAE,gBAAgB,GAAE;AAAA,WACnF;AAAA,SACF;AAAA,MAGA,gBAAAD;AAAA,QAAChB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAU;AAAA,UAEV;AAAA,4BAAAe,OAACJ,QAAA,EAAK,WAAU,WAAU;AAAA,YACzBM,GAAE,qBAAqB;AAAA;AAAA;AAAA,MAC1B;AAAA,OACF,GAEJ;AAAA,KACF;AAEJ;;;AC/PA,SAAS,QAAAE,QAAM,KAAAC,KAAG,WAAAC,WAAS,aAAAC,YAAW,SAAS,QAAAC,cAAY;AAC3D,SAAS,wBAAAC,8BAA4B;AACrC,SAAS,sBAAsB;AA6CvB,gBAAAC,QAOM,QAAAC,eAPN;AAvBD,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,uBAAqB;AAE/B,SACE,gBAAAC,OAAC,SAAI,WAAU,uDACb,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAD,OAAC,QAAG,WAAU,qCAAqC,UAAAE,GAAE,qBAAqB,GAAE;AAAA,IAG5E,gBAAAD,QAAC,SAAI,WAAU,qCAEb;AAAA,sBAAAD,OAAC,SACE,uBACC,gBAAAC;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAU;AAAA,UACV,UAAU;AAAA,UAEV;AAAA,4BAAAD,OAACL,KAAA,EAAE,WAAU,gBAAe;AAAA,YAC3B,kBAAkBO,GAAE,mBAAmB,IAAIA,GAAE,qBAAqB;AAAA;AAAA;AAAA,MACrE,GAEJ;AAAA,MAGA,gBAAAD,QAAC,SAAI,WAAU,cAEb;AAAA,wBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YACV,UAAU,CAAC;AAAA,YACX,OACE,CAAC,UACG,cACE,2DACA,4DACFC,GAAE,kBAAkB;AAAA,YAG1B;AAAA,8BAAAF,OAACN,QAAA,EAAK,WAAU,gBAAe;AAAA,cAC9BQ,GAAE,kBAAkB;AAAA;AAAA;AAAA,QACvB;AAAA,QAGC,aACC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YACV,UAAU;AAAA,YAEV;AAAA,8BAAAD,OAACJ,WAAA,EAAQ,WAAU,gBAAe;AAAA,cACjC,kBAAkBM,GAAE,mBAAmB,IAAIA,GAAE,wBAAwB;AAAA;AAAA;AAAA,QACxE;AAAA,QAID,aACC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YACV,UAAU;AAAA,YAEV;AAAA,8BAAAD,OAACH,YAAA,EAAU,WAAU,gBAAe;AAAA,cACnC,kBAAkBK,GAAE,mBAAmB,IAAIA,GAAE,wBAAwB;AAAA;AAAA;AAAA,QACxE;AAAA,QAID,YACC,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,SAAS;AAAA,YACT,WAAU;AAAA,YAEV;AAAA,8BAAAD,OAAC,WAAQ,WAAU,gBAAe;AAAA,cACjCE,GAAE,sBAAsB;AAAA;AAAA;AAAA,QAC3B;AAAA,SAEJ;AAAA,OACF;AAAA,IAGA,gBAAAF,OAAC,SAAI,WAAU,+EACb,0BAAAC,QAAC,SAAI,WAAU,0BACb;AAAA,sBAAAD,OAACF,QAAA,EAAK,WAAU,8CAA6C;AAAA,MAC7D,gBAAAG,QAAC,SACC;AAAA,wBAAAA,QAAC,OAAE,WAAU,kCAAkC;AAAA,UAAAC,GAAE,qBAAqB;AAAA,UAAE;AAAA,WAAC;AAAA,QACzE,gBAAAD,QAAC,QAAG,WAAU,2BACZ;AAAA,0BAAAA,QAAC,QAAG;AAAA;AAAA,YAAGC,GAAE,sBAAsB;AAAA,YAAE;AAAA,YAAC,gBAAAF,OAAC,UAAK,WAAU,sCAAsC,yBAAe,UAAS;AAAA,aAAO;AAAA,UACvH,gBAAAC,QAAC,QAAG;AAAA;AAAA,YAAGC,GAAE,sBAAsB;AAAA,YAAE;AAAA,YAAC,gBAAAF,OAAC,UAAK,WAAU,uCAAuC,yBAAe,WAAU;AAAA,aAAO;AAAA,WAC3H;AAAA,SACF;AAAA,OACF,GACF;AAAA,KACF,GACF;AAEJ;;;AP7FA,SAAS,aAAAG,kBAAiB;AA+Bd,SACE,OAAAC,QADF,QAAAC,eAAA;AANZ,IAAM,sBAAgC,MAAM;AAC1C,SACE,gBAAAA,QAAC,SAAI,WAAU,aAEX;AAAA,oBAAAD,OAAC,SAAI,WAAU,kDACb,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,QAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,SACjC;AAAA,MACA,gBAAAD,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,UAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,WACjC;AAAA,QACA,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,SACjC;AAAA,OACF,GACF;AAAA,IAGA,gBAAAD,QAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,2BAEb;AAAA,wBAAAD,OAAC,SACC,0BAAAC,QAACE,QAAA,EAAK,WAAU,iBAChB;AAAA,0BAAAH,OAACI,cAAA,EACC,0BAAAH,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACE,WAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,aACjC,GACF;AAAA,UACA,gBAAAD,QAACI,eAAA,EAAY,WAAU,oBACrB;AAAA,4BAAAJ,QAAC,SAAI,WAAU,yCAEb;AAAA,8BAAAD,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAC,QAAC,SAAgB,WAAU,wBACzB;AAAA,gCAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,gBAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,mBAFvB,KAGV,CACD,GACH;AAAA,cAEA,gBAAAF,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAC,QAAC,SAAgB,WAAU,wBACzB;AAAA,gCAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,gBAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,mBAFvB,KAGV,CACD,GACH;AAAA,eACF;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,UAAS;AAAA,aAC1B;AAAA,WACA,GACF;AAAA,QAGA,gBAAAC,QAACE,QAAA,EACC;AAAA,0BAAAH,OAACI,cAAA,EACC,0BAAAH,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACE,WAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,aACjC,GACF;AAAA,UACA,gBAAAF,OAACK,eAAA,EACC,0BAAAL,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAAC,SAAgB,WAAU,oDACzB,0BAAAC,QAAC,SAAI,WAAU,0BACb;AAAA,4BAAAD,OAACE,WAAA,EAAS,WAAU,wBAAuB;AAAA,YAC3C,gBAAAD,QAAC,SAAI,WAAU,oBACb;AAAA,8BAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,cAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,cAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,eACjC;AAAA,aACF,KARQ,KASV,CACD,GACH,GACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAD,QAAC,SAAI,WAAU,aAEb;AAAA,wBAAAA,QAACE,QAAA,EACC;AAAA,0BAAAH,OAACI,cAAA,EACC,0BAAAH,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACE,WAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,aACjC,GACF;AAAA,UACA,gBAAAD,QAACI,eAAA,EAAY,WAAU,aACpB;AAAA,kBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAJ,QAAC,SAAgB,WAAU,gCACzB;AAAA,8BAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,cAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,iBAFvB,KAGV,CACD;AAAA,YACD,gBAAAF,OAAC,SAAI,WAAU,iCACb,0BAAAC,QAAC,SAAI,WAAU,wBACb;AAAA,8BAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,cAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,eACjC,GACF;AAAA,aACF;AAAA,WACF;AAAA,QAGA,gBAAAD,QAACE,QAAA,EACC;AAAA,0BAAAH,OAACI,cAAA,EACC,0BAAAH,QAAC,SAAI,WAAU,2BACb;AAAA,4BAAAD,OAACE,WAAA,EAAS,WAAU,WAAU;AAAA,YAC9B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,aACjC,GACF;AAAA,UACA,gBAAAD,QAACI,eAAA,EAAY,WAAU,aACrB;AAAA,4BAAAL,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAC,QAAC,SAAgB,WAAU,wBACzB;AAAA,8BAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,cAC/B,gBAAAF,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,iBAFvB,KAGV,CACD,GACH;AAAA,YACA,gBAAAF,OAACE,WAAA,EAAS,WAAU,eAAc;AAAA,aACpC;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAF,OAAC,SAAI,WAAU,uDACb,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAACE,WAAA,EAAS,WAAU,YAAW;AAAA,MAC/B,gBAAAD,QAAC,SAAI,WAAU,qCACb;AAAA,wBAAAD,OAACE,WAAA,EAAS,WAAU,aAAY;AAAA,QAChC,gBAAAF,OAAC,SAAI,WAAU,cACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,UACjC,gBAAAA,OAACE,WAAA,EAAqB,WAAU,eAAjB,KAA6B,CAC7C,GACH;AAAA,SACF;AAAA,OACF,GACF;AAAA,KACJ;AAEJ;AAEO,IAAM,cAA0C,CAAC;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAU;AAAA,EACV,cAAc;AAChB,MAAM;AAEJ,QAAM,cAAcI,mBAAkB;AACtC,QAAM,EAAE,cAAc,YAAY,WAAW,YAAY,IAAIC,UAAS;AACtE,QAAMC,KAAIC,uBAAqB;AAG/B,QAAM,mBAAmB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,QAAM,CAAC,cAAc,eAAe,IAAIC,WAAuB;AAAA,IAC7D,WAAW,MAAM,aAAa;AAAA,IAC9B,iBAAiB,MAAM,mBAAmB;AAAA,IAC1C,gBAAgB,MAAM,kBAAkB;AAAA,IACxC,mBAAmB,MAAM,qBAAqB;AAAA,IAC9C,OAAO,MAAM,SAAS;AAAA,EACxB,CAAC;AACD,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAuB,YAAY;AAC3E,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAG9D,QAAM,CAAC,uBAAuB,wBAAwB,IAAIA,WAAS,KAAK;AACxE,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAGhE,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAC5D,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAC5D,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAG5D,QAAM,CAAC,yBAAyB,0BAA0B,IAAIA,WAAS,KAAK;AAG5E,EAAAC,YAAU,MAAM;AACd,QAAI,OAAO;AACT,YAAM,cAA4B;AAAA,QAChC,WAAW,MAAM,aAAa;AAAA,QAC9B,iBAAiB,MAAM,mBAAmB;AAAA,QAC1C,gBAAgB,MAAM,kBAAkB;AAAA,QACxC,mBAAmB,MAAM,qBAAqB;AAAA,QAC9C,OAAO,MAAM,SAAS;AAAA,MACxB;AACA,sBAAgB,WAAW;AAC3B,sBAAgB,WAAW;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,KAAK,CAAC;AAGV,MAAI,SAAS;AACX,WAAO,gBAAAX,OAAC,uBAAoB;AAAA,EAC9B;AAOA,QAAM,cAAc,MAAM,cAAc;AAGxC,QAAM,cAAc,MAAM,cAAc;AAGxC,QAAM,gBAAgB,MAAM;AAO5B,QAAM,YAAY,YAChB,kBAAkB,cAClB,kBAAkB,cAClB,kBAAkB;AAGpB,QAAM,UAAU;AAAA,GAEb,eAAe,kBAAkB;AAAA,EAEjC,eAAe,kBAAkB;AAIpC,QAAM,YAAY,YAChB,eACA,kBAAkB;AAGpB,QAAM,YAAY,YAChB,eACA,kBAAkB;AAGpB,QAAM,WAAW;AAOjB,QAAM,qBAAqB,MAAM;AAC/B,QAAI;AAAa,aAAO;AAExB,QAAI,aAAa;AACf,cAAQ,eAAe;AAAA,QACrB,KAAK;AACH,iBAAO;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,QAAM,2BAA2B,MAAM;AACrC,QAAI;AAAa,aAAO;AAExB,QAAI,aAAa;AACf,cAAQ,eAAe;AAAA,QACrB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,QAAM,0BAA0B,MAAM;AACpC,QAAI;AAAa,aAAO;AAExB,QAAI,aAAa;AACf,cAAQ,eAAe;AAAA,QACrB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,QAAM,6BAA6B,MAAM;AACvC,QAAI;AAAa,aAAO;AAExB,QAAI,aAAa;AACf,cAAQ,eAAe;AAAA,QACrB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,uBAAuB,CAAC,YAAmC;AAC/D,oBAAgB,WAAS,EAAE,GAAG,MAAM,GAAG,QAAQ,EAAE;AAAA,EAGnD;AAEA,QAAM,qBAAqB,YAAY;AACrC,QAAI,gBAAgB;AAClB,0BAAoB,IAAI;AACxB,gBAAU,aAAa,4CAA4C;AAEnE,UAAI;AACF,cAAM,eAAe,YAAY;AACjC,qBAAaQ,GAAE,sBAAsB,GAAGA,GAAE,6BAA6B,CAAC;AACxE,wBAAgB,YAAY;AAC5B,6BAAqB,KAAK;AAAA,MAC5B,SAAS,OAAO;AACd,mBAAWA,GAAE,mBAAmB,GAAGA,GAAE,0BAA0B,CAAC;AAAA,MAClE,UAAE;AACA,4BAAoB,KAAK;AAAA,MAC3B;AAAA,IACF,OAAO;AAEL,sBAAgB,YAAY;AAC5B,2BAAqB,KAAK;AAAA,IAC5B;AAAA,EACF;AAEA,QAAM,mBAAmB,MAAM;AAC7B,oBAAgB,YAAY;AAC5B,yBAAqB,KAAK;AAAA,EAE5B;AAEA,QAAM,mBAAmB,MAAM;AAC7B,QAAI;AACF,aAAO,MAAM;AAAA,IAEf,SAAS,OAAO;AACd,iBAAW,eAAe,6CAA6C;AAAA,IACzE;AAAA,EACF;AAEA,QAAM,oBAAoB,YAAY;AACpC,QAAI;AACF,yBAAmB,IAAI;AACvB,YAAMT,WAAU,YAAY,MAAM,EAAE;AACpC,mBAAa,qBAAqB,kCAAkC;AACpE,wBAAkB,eAAe,MAAM,IAAI,UAAU;AACrD,+BAAyB,KAAK;AAG9B,UAAI,OAAO,WAAW,aAAa;AACjC,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,iBAAiB,mDAAmD;AAAA,IACjF,UAAE;AACA,yBAAmB,KAAK;AAAA,IAC1B;AAAA,EACF;AAEA,QAAM,oBAAoB,YAAY;AACpC,QAAI;AACF,yBAAmB,IAAI;AACvB,YAAMA,WAAU,YAAY,MAAM,EAAE;AACpC,mBAAa,qBAAqB,kCAAkC;AACpE,wBAAkB,eAAe,MAAM,IAAI,UAAU;AACrD,2BAAqB,KAAK;AAG1B,UAAI,OAAO,WAAW,aAAa;AACjC,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,iBAAiB,mDAAmD;AAAA,IACjF,UAAE;AACA,yBAAmB,KAAK;AAAA,IAC1B;AAAA,EACF;AAEA,QAAM,yBAAyB,MAAM;AACnC,+BAA2B,IAAI;AAAA,EACjC;AAEA,QAAM,oBAAoB,YAAY;AACpC,QAAI;AACF,yBAAmB,IAAI;AACvB,YAAMA,WAAU,YAAY,MAAM,EAAE;AACpC,mBAAa,2BAA2B,2BAA2B;AACnE,wBAAkB,eAAe,MAAM,IAAI,WAAW;AAGtD,UAAI,OAAO,WAAW,aAAa;AACjC,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,uBAAuB,2CAA2C;AAAA,IAC/E,UAAE;AACA,yBAAmB,KAAK;AACxB,iCAA2B,KAAK;AAAA,IAClC;AAAA,EACF;AAGA,QAAM,oBAAoB,MAAM;AAC9B,6BAAyB,IAAI;AAAA,EAC/B;AAGA,QAAM,oBAAoB,MAAM;AAC9B,yBAAqB,IAAI;AAAA,EAC3B;AAEA,QAAM,kBAAkB,MAAM;AAC5B,QAAI,QAAQ;AACV,UAAI;AACF,eAAO,KAAK;AAAA,MAEd,SAAS,OAAO;AACd,mBAAW,eAAe,8CAA8C;AAAA,MAC1E;AAAA,IACF;AAAA,EACF;AAGA,QAAM,8BAA8B,MAAM;AACxC,QAAI,QAAQ;AACV,UAAI;AAEF,cAAM,gBAAgB;AAAA,UACpB,GAAG;AAAA,UACH,WAAW,aAAa;AAAA,UACxB,iBAAiB,aAAa;AAAA,UAC9B,gBAAgB,aAAa;AAAA,UAC7B,mBAAmB,aAAa;AAAA,UAChC,OAAO,aAAa;AAAA,QACtB;AAEA,eAAO,aAAa;AAAA,MAEtB,SAAS,OAAO;AACd,mBAAW,eAAe,8CAA8C;AAAA,MAC1E;AAAA,IACF;AAAA,EACF;AAEA,SACE,gBAAAE,QAAC,SAAI,WAAU,aAEX;AAAA,oBAAAD,OAAC,SAAI,WAAU,kDACb,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAA,QAAC,QAAG,WAAU,oCACX;AAAA,UAAAO,GAAE,cAAc;AAAA,UAAE;AAAA,UAAG,MAAM;AAAA,WAC9B;AAAA,QACA,gBAAAR,OAAC,OAAE,WAAU,yBACV,UAAAQ,GAAE,sBAAsB,GAC3B;AAAA,SACF;AAAA,MACA,gBAAAP,QAAC,SAAI,WAAU,2BAEb;AAAA,wBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAO,GAAE,iBAAiB;AAAA,YAAE;AAAA,aAAC;AAAA,UAC/D,gBAAAR;AAAA,YAACY;AAAA,YAAA;AAAA,cACC,WAAWC,mBAAkB,MAAM,SAA2C;AAAA,cAE7E,UAAAL,GAAE,aAAa,MAAM,SAAS,EAAE;AAAA;AAAA,UACnC;AAAA,WACF;AAAA,QAEA,gBAAAP,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAA,QAAC,UAAK,WAAU,yBAAyB;AAAA,YAAAO,GAAE,cAAc;AAAA,YAAE;AAAA,aAAC;AAAA,UAC5D,gBAAAR;AAAA,YAACY;AAAA,YAAA;AAAA,cACC,WAAWE,qBAAoB,MAAM,MAA0C,KAAK;AAAA,cAEnF,UAAAN,GAAE,UAAU,MAAM,MAAM,EAAE;AAAA;AAAA,UAC7B;AAAA,WACF;AAAA,SACF;AAAA,OACF,GACF;AAAA,IAGA,gBAAAP,QAAC,SAAI,WAAU,sDAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,2BAEb;AAAA,wBAAAD,OAAC,oBAAiB,OAAc;AAAA,QAGhC,gBAAAA,OAAC,qBAAkB,OAAc;AAAA,SACnC;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,wBAAAD;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACF;AAAA,QAGA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,kBAAkB;AAAA,YAClB,gBAAgB;AAAA,YAChB,cAAc;AAAA,YACd,aAAa,MAAM,qBAAqB,IAAI;AAAA,YAC5C,iBAAiB;AAAA;AAAA,QACT;AAAA,SACF;AAAA,OACA;AAAA,IAGX,eACC,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU;AAAA,QACV,SAAS;AAAA;AAAA,IACX;AAAA,IAIJ,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR,SAAS,MAAM,yBAAyB,KAAK;AAAA,QAC7C;AAAA,QACA,cAAc;AAAA,QACd,MAAK;AAAA,QACL,iBAAiB;AAAA;AAAA,IACnB;AAAA,IAGA,gBAAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR,SAAS,MAAM,qBAAqB,KAAK;AAAA,QACzC;AAAA,QACA,cAAc;AAAA,QACd,MAAK;AAAA,QACL,iBAAiB;AAAA;AAAA,IACnB;AAAA,IAGA,gBAAAA;AAAA,MAACe;AAAA,MAAA;AAAA,QACC,MAAM;AAAA,QACN,cAAc;AAAA,QACd,MAAK;AAAA,QACL,OAAOP,GAAE,yBAAyB;AAAA,QAClC,aAAaA,GAAE,2BAA2B;AAAA,QAC1C,aAAaA,GAAE,qBAAqB;AAAA,QACpC,YAAYA,GAAE,kBAAkB;AAAA,QAChC,WAAW;AAAA,QACX,UAAU,MAAM,2BAA2B,KAAK;AAAA,QAChD,WAAW;AAAA;AAAA,IACb;AAAA,KACF;AAEJ;;;AQzrBA,SAAS,cAAAQ,oBAAkB;AAC3B,SAAS,kBAAAC,wBAAsB;AAgBzB,SACE,OAAAC,QADF,QAAAC,eAAA;AAPC,IAAM,eAA4C,CAAC,EAAE,OAAO,aAAa,MAAM;AACpF,QAAM,mBAAmB,0BAA0B,OAAO,YAAY;AACtE,QAAM,kBAAkB,mBAAmB,KAAK;AAEhD,SACE,gBAAAA,QAAC,SAAI,WAAU,OAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,gCACb;AAAA,sBAAAD,OAACE,cAAA,EAAW,WAAU,yBAAwB;AAAA,MAC9C,gBAAAF,OAAC,QAAG,WAAU,uCAAsC,2BAAa;AAAA,OACnE;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,iBAAgB,sBAAQ;AAAA,QACxC,gBAAAA,OAAC,UAAK,WAAU,+BACb,UAAAG,iBAAe,MAAM,QAAQ,GAChC;AAAA,SACF;AAAA,MAGC,MAAM,kBAAkB,MAAM,iBAAiB,KAC9C,gBAAAF,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,iBAAgB,sBAAQ;AAAA,QACxC,gBAAAC,QAAC,UAAK,WAAU,8BAA6B;AAAA;AAAA,UACzCE,iBAAe,MAAM,cAAc;AAAA,WACvC;AAAA,SACF;AAAA,MAID,MAAM,aAAa,MAAM,YAAY,KACpC,gBAAAF,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,iBAAgB,iBAAG;AAAA,QACnC,gBAAAA,OAAC,UAAK,WAAU,6BACb,UAAAG,iBAAe,MAAM,SAAS,GACjC;AAAA,SACF;AAAA,MAIF,gBAAAF,QAAC,SAAI,WAAU,mEACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,uCAAsC,0BAAY;AAAA,QAClE,gBAAAA,OAAC,UAAK,WAAU,oCACb,UAAAG,iBAAe,MAAM,WAAW,GACnC;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,iBAAgB,qBAAO;AAAA,QACvC,gBAAAA,OAAC,UAAK,WAAU,6BACb,UAAAG,iBAAe,MAAM,aAAa,GACrC;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAD,OAAC,UAAK,WAAU,iBAAgB,uBAAS;AAAA,QACzC,gBAAAA,OAAC,UAAK,WAAU,6BACb,UAAAG,iBAAe,MAAM,cAAc,MAAM,aAAa,GACzD;AAAA,SACF;AAAA,MAGA,gBAAAF,QAAC,SAAI,WAAU,iCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,uCACb,2BACH;AAAA,UACA,gBAAAA,OAAC,UAAK,WAAW,qBACf,mBAAmB,IAAI,kBACvB,qBAAqB,IAAI,kBAAkB,iBAC7C,IACG,+BAAqB,IACpB,gBAAAA,OAAC,UAAK,WAAU,iBAAgB,eAAC,IAEjC,GAAGG,iBAAe,KAAK,IAAI,gBAAgB,CAAC,CAAC,IAEjD;AAAA,WACF;AAAA,QAGC,MAAM,cAAc,UACpB,MAAM,WAAW,cACjB,aAAa,YACb,aAAa,SAAS,KAAK,MAAM,MAChC,gBAAAF,QAAC,SAAI,WAAU,0CAAyC;AAAA;AAAA,UAClD,aAAa;AAAA,WACnB;AAAA,QAGD,MAAM,cAAc,UAAU,MAAM,WAAW,cAC9C,gBAAAD,OAAC,SAAI,WAAU,8BACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAAC,UAAK,uBAAE;AAAA,UACR,gBAAAC,QAAC,UACE;AAAA,YAAAE,iBAAe,MAAM,WAAW;AAAA,YAAE;AAAA,YAAyBA,iBAAe,MAAM,aAAa;AAAA,YAAE;AAAA,YAAYA,iBAAe,aAAa,UAAU;AAAA,YAAE;AAAA,aACtJ;AAAA,WACF,GACF;AAAA,QAGD,MAAM,cAAc,UAAU,MAAM,WAAW,YAC9C,gBAAAH,OAAC,SAAI,WAAU,8BACb,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,0BAAAD,OAAC,UAAK,uBAAE;AAAA,UACR,gBAAAC,QAAC,UACE;AAAA,YAAAE,iBAAe,aAAa,UAAU;AAAA,YAAE;AAAA,YAAgBA,iBAAe,aAAa,SAAS;AAAA,YAAE;AAAA,aAClG;AAAA,WACF,GACF;AAAA,SAEJ;AAAA,OACF;AAAA,KACF;AAEJ;;;ACzHI,SAEE,OAAAC,QAFF,QAAAC,eAAA;AAFG,SAAS,eAAe;AAC7B,SACE,gBAAAA,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,OAAC,iBAAc;AAAA,IAGf,gBAAAA,OAAC,kBAAe;AAAA,IAGhB,gBAAAA,OAAC,gBAAa,OAAO,GAAG;AAAA,IAGxB,gBAAAA,OAAC,sBAAmB;AAAA,KACtB;AAEJ;AAEO,SAAS,oBAAoB;AAClC,SACE,gBAAAC,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,QAC5D,gBAAAA,OAAC,SAAI,WAAU,8CAA6C;AAAA,SAC9D;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,+CAA8C;AAAA,QAC7D,gBAAAA,OAAC,SAAI,WAAU,+CAA8C;AAAA,SAC/D;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,yCAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,4DAA2D,GAC5E;AAAA,MAGA,gBAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,UAC5D,gBAAAA,OAAC,SAAI,WAAU,aACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,UAC5D,gBAAAA,OAAC,SAAI,WAAU,0BACZ,gBAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,MACjC,gBAAAA,OAAC,SAAY,WAAU,kDAAb,CAA4D,CACvE,GACH;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,8CAA6C;AAAA,MAC5D,gBAAAA,OAAC,gBAAa,OAAO,GAAG;AAAA,OAC1B;AAAA,KACF;AAEJ;;;ACnEI,SAEE,OAAAE,QAFF,QAAAC,eAAA;AAFG,SAAS,iBAAiB;AAC/B,SACE,gBAAAA,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAD,OAAC,iBAAc;AAAA,IAGf,gBAAAA,OAAC,kBAAe;AAAA,IAGhB,gBAAAA,OAAC,gBAAa,OAAO,GAAG;AAAA,IAGxB,gBAAAA,OAAC,sBAAmB;AAAA,KACtB;AAEJ;AAEO,SAAS,sBAAsB;AACpC,SACE,gBAAAA,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,iBACb;AAAA,oBAAAD,OAAC,SAAI,WAAU,sCAAqC;AAAA,IACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,IACpD,gBAAAA,OAAC,SAAI,WAAU,sCAAqC;AAAA,IACpD,gBAAAA,OAAC,SAAI,WAAU,iCAAgC;AAAA,KACjD,GACF;AAEJ;;;AClCA,SAAgB,YAAAE,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,aAAAC,YAAW,uBAAuB;AAC3C;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,YAAY;AAAA,EACZ,aAAAC;AAAA,EACA,SAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AAEP,SAAS,WAAAC,UAAS,2BAAAC,iCAA+B;AACjD,SAAS,YAAAC,WAAU,WAAAC,UAAS,aAAa,oBAAAC,yBAAwB;AACjE,SAAS,YAAAC,kBAAgB;;;ACbzB,SAAgB,YAAAC,kBAAgB;AAChC;AAAA,EACE,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,eAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP,SAAS,gBAAAC,qBAAoB;AAC7B,SAAS,+BAA+B;AA0ChC,SACE,OAAAC,QADF,QAAAC,eAAA;AAfD,IAAMC,kBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAAC;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,kBAAkB,mBAAmB,IAAIZ,WAAS,KAAK;AAC9D,QAAMa,KAAI,wBAAwB;AAGlC,MAAI,SAAS;AACX,WACE,gBAAAH,QAACP,cAAA,EACC;AAAA,sBAAAO,QAACN,aAAA,EACC;AAAA,wBAAAK,OAACJ,YAAA,EAAW,UAAAQ,GAAE,OAAO,GAAE;AAAA,QACvB,gBAAAJ,OAAC,OAAG,UAAAI,GAAE,UAAU,GAAE;AAAA,SACpB;AAAA,MACA,gBAAAJ,OAAC,SAAI,WAAU,0CACb,0BAAAC,QAAC,SAAI,WAAU,eACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,6EAA4E;AAAA,QAC3F,gBAAAA,OAAC,OAAE,WAAU,iBAAiB,UAAAI,GAAE,SAAS,KAAK,uBAAsB;AAAA,SACtE,GACF;AAAA,OACF;AAAA,EAEJ;AAKA,SACE,gBAAAH,QAACP,cAAA,EACC;AAAA,oBAAAO,QAACN,aAAA,EACC;AAAA,sBAAAK,OAACJ,YAAA,EAAW,UAAAQ,GAAE,OAAO,GAAE;AAAA,MACvB,gBAAAJ,OAAC,OAAG,UAAAI,GAAE,UAAU,GAAE;AAAA,OACpB;AAAA,IAEA,gBAAAH,QAAC,SAAI,WAAU,mCAEb;AAAA,sBAAAD,OAAC,SAAI,WAAU,yBACb,0BAAAA,OAACR,QAAA,EACC,0BAAAQ,OAACP,eAAA,EAAY,WAAU,OACrB,0BAAAO,OAAC,SAAI,WAAU,aACZ,UAAAG,WACE,OAAO,CAAC,SAAS;AAEhB,YAAI,CAAC,KAAK;AAAO,iBAAO;AAGxB,cAAM,YAAY,MAAM,QAAQ,IAAI,KAAK,EAAE,YAAY;AACvD,cAAM,UAAU,KAAK,MAAM,KAAK,UAAQ,KAAK,YAAY,MAAM,QAAQ;AAEvE,eAAO;AAAA,MACT,CAAC,EACA,IAAI,CAAC,SAAS;AACb,cAAME,QAAO,KAAK;AAClB,cAAM,WAAW,kBAAkB,KAAK;AAExC,eACE,gBAAAJ;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YAER,SAAS,MAAM,gBAAgB,KAAK,EAAE;AAAA,YACtC,WAAW,iGACT,WACI,wDACA,gCACN;AAAA,YAEA;AAAA,8BAAAE,OAACK,OAAA,EAAK,WAAU,WAAU;AAAA,cAC1B,gBAAAJ,QAAC,SAAI,WAAU,kBACb;AAAA,gCAAAD,OAAC,OAAE,WAAU,eAAe,eAAK,OAAM;AAAA,gBACvC,gBAAAA,OAAC,OAAE,WAAU,kCAAkC,eAAK,aAAY;AAAA,iBAClE;AAAA,cACA,gBAAAA,OAACD,eAAA,EAAa,WAAU,WAAU;AAAA;AAAA;AAAA,UAb7B,KAAK;AAAA,QAcZ;AAAA,MAEJ,CAAC,GACL,GACF,GACF,GACF;AAAA,MAGA,gBAAAC,OAAC,SAAI,WAAU,kBACb,0BAAAA,OAACH,cAAA,EACE,UACH,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACnIA;AAAA,EACE,QAAAS;AAAA,EACA,cAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP,SAAS,2BAAAC,gCAA+B;AAmD9B,gBAAAC,QAME,QAAAC,eANF;AA1BH,IAAM,iBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAElC,UAAQ,IAAI,2CAAoC,IAAI;AACpD,UAAQ,IAAI,mDAA4C;AAAA,IACtD,WAAW,MAAM;AAAA,IACjB,cAAc,MAAM;AAAA,IACpB,kBAAkB,MAAM;AAAA,IACxB,iBAAiB,MAAM;AAAA,IACvB,cAAc,MAAM;AAAA,IACpB,aAAa,MAAM;AAAA,EACrB,CAAC;AAED,SACE,gBAAAC,OAAC,SAAI,WAAU,aACb,0BAAAC,QAACR,QAAA,EACC;AAAA,oBAAAQ,QAACP,cAAA,EAAW,WAAU,wDACpB;AAAA,sBAAAM,OAAC,QAAG,WAAU,yCAAyC,UAAAE,GAAE,6BAA6B,GAAE;AAAA,MACvF,CAAC,YACA,gBAAAF,OAACJ,UAAA,EAAO,SAAS,QAAQ,MAAK,MAC3B,UAAAM,GAAE,cAAc,GACnB,IAEA,gBAAAD,QAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,OAACJ,UAAA,EAAO,SAAS,QAAQ,SAAQ,WAAU,MAAK,MAAK,UAAU,YAC5D,uBAAaM,GAAE,gBAAgB,IAAIA,GAAE,cAAc,GACtD;AAAA,QACA,gBAAAF,OAACJ,UAAA,EAAO,SAAS,UAAU,SAAQ,WAAU,MAAK,MAAK,UAAU,YAC9D,UAAAM,GAAE,gBAAgB,GACrB;AAAA,SACF;AAAA,OAEJ;AAAA,IACA,gBAAAF,OAACL,eAAA,EAAY,WAAU,YACrB,0BAAAK,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,aAAY,WAAU,gDAClC,UAAAI,GAAE,mBAAmB,GACxB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,wBAAwB;AAAA;AAAA,QACzC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,aAAaE,GAAE,qBAAqB,GAC7C;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SACC;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,YAAW,WAAU,gDACjC,UAAAI,GAAE,kBAAkB,GACvB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,uBAAuB;AAAA;AAAA,QACxC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,YAAYE,GAAE,qBAAqB,GAC5C;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SACC;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,SAAQ,WAAU,gDAC9B,UAAAI,GAAE,eAAe,GACpB;AAAA,QACA,gBAAAF,OAAC,SAAI,WAAU,YACb,0BAAAA;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,MAAM,SAAS;AAAA,YACtB,aAAaK,GAAE,eAAe;AAAA,YAC9B,UAAU;AAAA,YACV,WAAU;AAAA;AAAA,QACZ,GACF;AAAA,SACF;AAAA,MAEA,gBAAAD,QAAC,SACC;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,SAAQ,WAAU,gDAC9B,UAAAI,GAAE,eAAe,GACpB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,oBAAoB;AAAA;AAAA,QACrC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,SAASE,GAAE,qBAAqB,GACzC;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAACF,SAAA,EAAM,WAAU,gDACd,UAAAI,GAAE,cAAc,GACnB;AAAA,QACA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,OAAO,KAAK,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,KAAK,MAAM,CAAC,IAAI,QACzE;AAAA,SACF;AAAA,OACF,GACF,GACF;AAAA,KACF,GACF;AAEJ;;;AC1KA,SAAgB,YAAAG,YAAU,aAAAC,aAAW,UAAAC,eAAc;AACnD;AAAA,EACE,QAAAC;AAAA,EACA,cAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,2BAAAC;AAAA,OACK;AACP,SAAS,gBAAAC,gBAAc,cAAAC,oBAAkB;AACzC,SAAS,gBAAAC,eAAc,kBAAAC,kBAAgB,mBAAmB;AAC1D;AAAA,EACE;AAAA,EACA;AAAA,EACA,aAAAC;AAAA,OACK;AAGP,SAAS,2BAAAC,gCAA+B;AAgJ9B,SAiQY,YAAAC,YAjQZ,OAAAC,QAME,QAAAC,eANF;AA9GH,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIJ,yBAAwB;AAClC,QAAM,CAAC,cAAc,eAAe,IAAIhB,WAAc,IAAI;AAC1D,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAC5D,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAuB,eAAe;AACtF,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAC9D,QAAM,cAAcE,QAAO,KAAK;AAGhC,QAAMmB,oBAAkF;AAAA,IACtF,EAAE,OAAO,OAAO,OAAOD,GAAE,mBAAmB,GAAG,QAAQ,IAAI;AAAA,IAC3D,EAAE,OAAO,OAAO,OAAOA,GAAE,yBAAyB,GAAG,QAAQ,SAAI;AAAA,EACnE;AAGA,UAAQ,IAAI,4CAAqC,IAAI;AACrD,UAAQ,IAAI,qDAA8C,MAAM,QAAQ;AACxE,UAAQ,IAAI,uDAAgD,MAAM,UAAU;AAC5E,UAAQ,IAAI,iDAA0C,MAAM,IAAI;AAChE,UAAQ,IAAI,uDAAgD,eAAe;AAC3E,UAAQ,IAAI,2DAAoD,YAAY,OAAO;AAGnF,EAAAnB,YAAU,MAAM;AACd,UAAM,oBAAoB,YAAY;AAEpC,UAAI,MAAM,cAAc,CAAC,MAAM,YAAY,CAAC,YAAY,SAAS;AAC/D,gBAAQ,IAAI,oDAA6C,KAAK,UAAU;AACxE,oBAAY,UAAU;AACtB,2BAAmB,IAAI;AAEvB,YAAI;AACF,gBAAM,SAAS,MAAMY,cAAa,gBAAgB,KAAK,UAAU;AACjE,kBAAQ,IAAI,oCAA6B,MAAM;AAE/C,cAAI,OAAO,WAAW,OAAO,MAAM;AAEjC,kBAAM,eAAgB,OAAO,KAAa,YAAY,OAAO;AAC7D,oBAAQ,IAAI,mCAA8B,YAAY;AACtD,4BAAgB,YAAY;AAAA,UAC9B,OAAO;AACL,oBAAQ,MAAM,yCAAoC,MAAM;AAAA,UAC1D;AAAA,QACF,SAAS,OAAO;AACd,kBAAQ,MAAM,2CAAoC,KAAK;AAAA,QACzD,UAAE;AACA,6BAAmB,KAAK;AACxB,sBAAY,UAAU;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AAEA,sBAAkB;AAGlB,WAAO,MAAM;AACX,kBAAY,UAAU;AAAA,IACxB;AAAA,EACF,GAAG,CAAC,MAAM,YAAY,MAAM,QAAQ,CAAC;AAGrC,QAAM,WAAW,MAAM,YAAY;AAGnC,EAAAZ,YAAU,MAAM;AACd,wBAAoB,eAAe;AAAA,EACrC,GAAG,CAAC,eAAe,CAAC;AAGpB,QAAM,uBAAuB,OAAO,aAA2B;AAC7D,QAAI,aAAa;AAAiB;AAElC,wBAAoB,IAAI;AACxB,QAAI;AACF,YAAM,iBAAiB,QAAQ;AAC/B,0BAAoB,QAAQ;AAAA,IAC9B,SAAS,OAAO;AACd,cAAQ,MAAM,8BAA8B,KAAK;AACjD,0BAAoB,eAAe;AAAA,IACrC,UAAE;AACA,0BAAoB,KAAK;AAAA,IAC3B;AAAA,EACF;AAGA,UAAQ,IAAI,oDAA6C;AAAA,IACvD,iBAAiB,MAAM;AAAA,IACvB,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,iBAAiB,UAAU;AAAA,IAC3B,kBAAkB,UAAU;AAAA,IAC5B,kBAAkB,UAAU;AAAA,IAC5B,yBAAyB,UAAU;AAAA,EACrC,CAAC;AAED,SACE,gBAAAkB,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,QAAChB,QAAA,EACC;AAAA,sBAAAgB,QAACf,cAAA,EAAW,WAAU,wDACpB;AAAA,wBAAAc,OAAC,QAAG,WAAU,yCAAyC,UAAAE,GAAE,8BAA8B,GAAE;AAAA,QACxF,CAAC,YACA,gBAAAF,OAACZ,UAAA,EAAO,SAAS,QAAQ,MAAK,MAC3B,UAAAc,GAAE,eAAe,GACpB,IAEA,gBAAAD,QAAC,SAAI,WAAU,cACb;AAAA,0BAAAD,OAACZ,UAAA,EAAO,SAAS,QAAQ,SAAQ,WAAU,MAAK,MAAK,UAAU,YAC5D,uBAAac,GAAE,iBAAiB,IAAIA,GAAE,eAAe,GACxD;AAAA,UACA,gBAAAF,OAACZ,UAAA,EAAO,SAAS,UAAU,SAAQ,WAAU,MAAK,MAAK,UAAU,YAC9D,UAAAc,GAAE,iBAAiB,GACtB;AAAA,WACF;AAAA,SAEJ;AAAA,MACA,gBAAAF,OAACb,eAAA,EAAY,WAAU,YACpB,4BACC,gBAAAa,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,iBAAgB,6CAA+B,GAC9D,IACE,CAAC,YAAY,CAAC,MAAM,aACtB,gBAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,iBAAgB,+CAAiC;AAAA,QAC9D,gBAAAC,QAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,UAC5B,MAAM,QAAQ;AAAA,UAAU;AAAA,UACnB,MAAM,aAAa,QAAQ;AAAA,UAAK;AAAA,UAC3B,MAAM,WAAW,QAAQ;AAAA,UAAK;AAAA,UACjC,eAAe,QAAQ;AAAA,WAC5C;AAAA,SACF,IAEA,gBAAAA,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,gBAAe,WAAU,gDACrC,UAAAY,GAAE,eAAe,GACpB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,4BAA4B;AAAA;AAAA,UAC7C,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,QAAQE,GAAE,sBAAsB,GAC7C;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,iBAAgB,WAAU,gDACtC,UAAAY,GAAE,gBAAgB,GACrB;AAAA,UACA,gBAAAF,OAAC,SAAI,WAAU,YACb,0BAAAA;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,UAAU,SAAS;AAAA,cAC1B,aAAaa,GAAE,gBAAgB;AAAA,cAC/B,UAAU;AAAA,cACV,WAAU;AAAA;AAAA,UACZ,GACF;AAAA,WACF;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,SAAQ,WAAU,gDAC9B,UAAAY,GAAE,gBAAgB,GACrB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,qBAAqB;AAAA;AAAA,UACtC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,SAASE,GAAE,sBAAsB,GAC9C;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,iBAAgB,WAAU,gDACtC,UAAAY,GAAE,gBAAgB,GACrB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,qBAAqB;AAAA;AAAA,UACtC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,SAASE,GAAE,sBAAsB,GAC9C;AAAA,WAEJ;AAAA,QAEA,gBAAAF,OAAC,SAAI,WAAU,iBACb,0BAAAC,QAAC,SAAI,WAAU,yCACb;AAAA,0BAAAA,QAAC,SACC;AAAA,4BAAAD,OAACV,SAAA,EAAM,SAAQ,gBAAe,WAAU,gDACrC,UAAAY,GAAE,uBAAuB,GAC5B;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,YACb,0BAAAA;AAAA,cAACX;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,OAAO,UAAU,gBAAgBa,GAAE,sBAAsB;AAAA,gBACzD,aAAaA,GAAE,uBAAuB;AAAA,gBACtC,UAAU;AAAA,gBACV,WAAU;AAAA;AAAA,YACZ,GACF;AAAA,YACJ,gBAAAF,OAAC,OAAE,WAAU,8BACV,oBAAU,eAAe,2BAA2B,SAAS,YAA4B,IAAIE,GAAE,uBAAuB,GACzH;AAAA,aACE;AAAA,UAEA,gBAAAD,QAAC,SACC;AAAA,4BAAAD,OAACV,SAAA,EAAM,SAAQ,eAAc,WAAU,gDACpC,UAAAY,GAAE,sBAAsB,GAC3B;AAAA,YACA,gBAAAF,OAAC,SAAI,WAAU,YACb,0BAAAA;AAAA,cAACX;AAAA,cAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,OAAO,UAAU,eAAea,GAAE,sBAAsB;AAAA,gBACxD,aAAaA,GAAE,sBAAsB;AAAA,gBACrC,UAAU;AAAA,gBACV,WAAU;AAAA;AAAA,YACZ,GACF;AAAA,YACJ,gBAAAF,OAAC,OAAE,WAAU,8BACV,oBAAU,cAAc,0BAA0B,SAAS,WAA0B,IAAIE,GAAE,sBAAsB,GACpH;AAAA,aACE;AAAA,WACF,GACF;AAAA,QAEA,gBAAAD,QAAC,SAAI,WAAU,iBACb;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,mBAAkB,WAAU,gDACxC,UAAAY,GAAE,kBAAkB,GACvB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,uBAAuB;AAAA;AAAA,UACxC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,WAAWE,GAAE,sBAAsB,GAChD;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,gBAAe,WAAU,gDACrC,UAAAY,GAAE,eAAe,GACpB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,oBAAoB;AAAA;AAAA,UACrC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,QAAQE,GAAE,sBAAsB,GAC7C;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,iBAAgB,WAAU,gDACtC,UAAAY,GAAE,gBAAgB,GACrB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,qBAAqB;AAAA;AAAA,UACtC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,SAASE,GAAE,sBAAsB,GAC9C;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,mBAAkB,WAAU,gDACxC,UAAAY,GAAE,kBAAkB,GACvB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACX;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,SAAS;AAAA,cAChB,UAAU;AAAA,cACV,aAAaa,GAAE,uBAAuB;AAAA;AAAA,UACxC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,oBAAU,WAAWE,GAAE,sBAAsB,GAChD;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAACV,SAAA,EAAM,SAAQ,mBAAkB,WAAU,gDACxC,UAAAY,GAAE,kBAAkB,GACvB;AAAA,UACC,YACC,gBAAAF;AAAA,YAACR;AAAA,YAAA;AAAA,cACC,SAASK;AAAA,cACT,OAAO,SAAS;AAAA,cAChB,UAAU,CAAC,gBAAgB;AACzB,wBAAQ,IAAI,4DAAqD,WAAW;AAC5E,wBAAQ,IAAI,wDAAiD,SAAS,OAAO;AAE7E,8BAAc;AAAA,kBACZ,QAAQ,EAAE,MAAM,WAAW,OAAO,YAAY;AAAA,gBAChD,CAAwC;AACxC,wBAAQ,IAAI,iDAA0C;AAAA,cACxD;AAAA,cACA,aAAY;AAAA,cACZ,cAAa;AAAA;AAAA,UACf,IAEA,gBAAAG,OAAC,OAAE,WAAU,yEACV,oBAAU,UACT,gBAAAC,QAAAF,YAAA,EACG;AAAA,YAAAF,WAAU,KAAK,OAAK,EAAE,SAAS,SAAS,OAAO,GAAG,QAAQ;AAAA,YAC1D,SAAS;AAAA,aACZ,IAEAK,GAAE,sBAAsB,GAE5B;AAAA,WAEJ;AAAA,SACF,GAEJ;AAAA,OACF;AAAA,IAGA,gBAAAF,OAACf,QAAA,EACC,0BAAAgB,QAACd,eAAA,EAAY,WAAU,OACrB;AAAA,sBAAAc,QAAC,SAAI,WAAU,gCACb;AAAA,wBAAAD,OAACN,cAAA,EAAW,WAAU,yBAAwB;AAAA,QAC9C,gBAAAM,OAAC,QAAG,WAAU,uCAAuC,UAAAE,GAAE,2BAA2B,GAAE;AAAA,SACtF;AAAA,MACA,gBAAAF,OAAC,OAAE,WAAU,8BACV,UAAAE,GAAE,uBAAuB,GAC5B;AAAA,MAEA,gBAAAF,OAAC,SAAI,WAAU,yCACZ,UAAAG,kBAAiB,IAAI,CAAC,WAAW;AAChC,cAAM,SAAS,YAAY,OAAO,KAAK;AACvC,cAAM,aAAa,qBAAqB,OAAO;AAC/C,cAAM,YAAY,oBAAoB,OAAO;AAE7C,eACE,gBAAAF;AAAA,UAAC;AAAA;AAAA,YAEC,SAAS,MAAM,qBAAqB,OAAO,KAAK;AAAA,YAChD,UAAU,oBAAoB;AAAA,YAC9B,WAAW;AAAA;AAAA,sBAEP,YACE,iCACA,gEACJ;AAAA,sBACE,mBAAmB,2BAA2B,YAAY,mBAAmB,gBAAgB;AAAA;AAAA,YAGjG;AAAA,8BAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,OAAC,SAAI,WAAU,YAAY,iBAAO,QAAO;AAAA,kBACzC,gBAAAC,QAAC,SACC;AAAA,oCAAAD,OAAC,SAAI,WAAU,+BACZ,iBAAO,OACV;AAAA,oBACA,gBAAAA,OAAC,SAAI,WAAU,yBACZ,iBAAO,OACV;AAAA,qBACF;AAAA,mBACF;AAAA,gBACC,aACC,gBAAAC,QAACV,SAAA,EAAM,SAAQ,WAAU,WAAU,+BACjC;AAAA,kCAAAS,OAACP,gBAAA,EAAa,WAAU,gBAAe;AAAA,kBACtCS,GAAE,mBAAmB;AAAA,mBACxB;AAAA,iBAEJ;AAAA,cAGA,gBAAAD,QAAC,SAAI,WAAU,sCACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,8BAA8B;AAAA,kBAAAC,GAAE,yBAAyB;AAAA,kBAAE;AAAA,mBAAC;AAAA,gBAC3E,gBAAAD,QAAC,SAAI,WAAU,oCACb;AAAA,kCAAAD,OAAC,UAAM,UAAAJ,iBAAe,KAAK,OAAO,KAAK,GAAE;AAAA,kBACzC,gBAAAI,OAAC,UAAM,UAAAJ,iBAAe,KAAO,OAAO,KAAK,GAAE;AAAA,mBAC7C;AAAA,iBACF;AAAA;AAAA;AAAA,UAvCK,OAAO;AAAA,QAwCd;AAAA,MAEJ,CAAC,GACH;AAAA,MAEC,oBACC,gBAAAI,OAAC,OAAE,WAAU,8BACV,UAAAE,GAAE,yBAAyB,GAC9B;AAAA,OAEJ,GACF;AAAA,KACF;AAEJ;;;AC5fA;AAAA,EACE,QAAAE;AAAA,EACA,cAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP,SAAS,2BAAAC,gCAA+B;AA0C9B,gBAAAC,QAME,QAAAC,eANF;AAhBH,IAAM,gBAA8C,CAAC;AAAA,EAC1D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAElC,SACE,gBAAAC,OAAC,SAAI,WAAU,aACb,0BAAAC,QAACR,QAAA,EACC;AAAA,oBAAAQ,QAACP,cAAA,EAAW,WAAU,wDACpB;AAAA,sBAAAM,OAAC,QAAG,WAAU,yCAAyC,UAAAE,GAAE,0BAA0B,GAAE;AAAA,MACpF,CAAC,YACA,gBAAAF,OAACJ,UAAA,EAAO,SAAS,QAAQ,MAAK,MAC3B,UAAAM,GAAE,aAAa,GAClB,IAEA,gBAAAD,QAAC,SAAI,WAAU,cACb;AAAA,wBAAAD,OAACJ,UAAA,EAAO,SAAS,QAAQ,SAAQ,WAAU,MAAK,MAAK,UAAU,YAC5D,uBAAaM,GAAE,eAAe,IAAIA,GAAE,aAAa,GACpD;AAAA,QACA,gBAAAF,OAACJ,UAAA,EAAO,SAAS,UAAU,SAAQ,WAAU,MAAK,MAAK,UAAU,YAC9D,UAAAM,GAAE,eAAe,GACpB;AAAA,SACF;AAAA,OAEJ;AAAA,IACA,gBAAAF,OAACL,eAAA,EAAY,WAAU,YACpB,WAAC,MAAM,SACN,gBAAAK,OAAC,SAAI,WAAU,oBACb,0BAAAA,OAAC,OAAE,WAAU,iBAAiB,UAAAE,GAAE,qBAAqB,GAAE,GACzD,IAEA,gBAAAD,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,cAAa,WAAU,gDACnC,UAAAI,GAAE,aAAa,GAClB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,wBAAwB;AAAA;AAAA,QACzC,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,QAAQ,QAAQE,GAAE,oBAAoB,GAC/C;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SACC;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,eAAc,WAAU,gDACpC,UAAAI,GAAE,cAAc,GACnB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,yBAAyB;AAAA;AAAA,QAC1C,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,QAAQ,SAASE,GAAE,oBAAoB,GAChD;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,iBAAgB,WAAU,gDACtC,UAAAI,GAAE,gBAAgB,GACrB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,2BAA2B;AAAA;AAAA,QAC5C,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,QAAQ,WAAWE,GAAE,oBAAoB,GAClD;AAAA,SAEJ;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,iBACb;AAAA,wBAAAD,OAACF,SAAA,EAAM,SAAQ,qBAAoB,WAAU,gDAC1C,UAAAI,GAAE,oBAAoB,GACzB;AAAA,QACC,YACC,gBAAAF;AAAA,UAACH;AAAA,UAAA;AAAA,YACC,IAAG;AAAA,YACH,MAAK;AAAA,YACL,MAAK;AAAA,YACL,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,YACV,aAAaK,GAAE,yBAAyB;AAAA;AAAA,QAC1C,IAEA,gBAAAF,OAAC,OAAE,WAAU,iDACV,gBAAM,QAAQ,eAAeE,GAAE,oBAAoB,GACtD;AAAA,SAEJ;AAAA,OACF,GAEJ;AAAA,KACF,GACF;AAEJ;;;AC9JA;AAAA,EACE,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP;AAAA,EACE,cAAAC;AAAA,EACA,eAAAC;AAAA,EACA,iBAAAC;AAAA,EACA,YAAAC;AAAA,EACA,cAAAC;AAAA,OACK;AACP,SAAS,2BAAAC,gCAA+B;AA4B5B,SACE,OAAAC,QADF,QAAAC,eAAA;AAZL,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAElC,MAAI,qBAAqB;AACvB,WACE,gBAAAC,OAAC,SAAI,WAAU,aACb,0BAAAA,OAACV,QAAA,EACC,0BAAAU,OAACT,eAAA,EAAY,WAAU,OACrB,0BAAAU,QAAC,SAAI,WAAU,yCACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,gEAA+D;AAAA,MAC9E,gBAAAA,OAAC,UAAK,WAAU,sBAAsB,UAAAE,GAAE,sBAAsB,GAAE;AAAA,OAClE,GACF,GACF,GACF;AAAA,EAEJ;AAEA,MAAI,kBAAkB,iBAAiB;AACrC,WACE,gBAAAF,OAAC,SAAI,WAAU,aAEb,0BAAAA,OAACV,QAAA,EACG,0BAAAW,QAACV,eAAA,EAAY,WAAU,OACrB;AAAA,sBAAAU,QAAC,SAAI,WAAU,0CACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAD,OAACN,cAAA,EAAW,WAAU,yBAAwB;AAAA,UAC9C,gBAAAO,QAAC,SACC;AAAA,4BAAAD,OAAC,QAAG,WAAU,yCAAyC,UAAAE,GAAE,0BAA0B,GAAE;AAAA,YACrF,gBAAAF,OAAC,OAAE,WAAU,yBAAyB,2BAAiB,aAAa,MAAM,QAAQ,qBAAoB;AAAA,aACxG;AAAA,WACF;AAAA,QACA,gBAAAA;AAAA,UAACP;AAAA,UAAA;AAAA,YACC,SAAS,iBAAiB,YAAY,gBAAgB;AAAA,YACtD,WAAW,iBAAiB,YAAY,4BAA4B,iBAAiB,iBAAiB,kCAAkC;AAAA,YAEvI,2BAAiB,YAAYS,GAAE,sBAAsB,IAAI,iBAAiB,iBAAiBA,GAAE,2BAA2B,IAAIA,GAAE,qBAAqB;AAAA;AAAA,QACtJ;AAAA,SACF;AAAA,MAEA,gBAAAD,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,6BACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAACF,cAAA,EAAW,WAAU,yBAAwB;AAAA,YAC9C,gBAAAE,OAAC,UAAK,WAAU,qCAAqC,UAAAE,GAAE,qBAAqB,GAAE;AAAA,aAChF;AAAA,UACA,gBAAAD,QAAC,OAAE,WAAU,yCAAwC;AAAA;AAAA,YACjD,iBAAiB,aAAa,UAAU;AAAA,aAC5C;AAAA,UACA,gBAAAD,OAAC,OAAE,WAAU,yBACV,2BAAiB,aAAa,YAAY,WAC7C;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,6BACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAACH,YAAA,EAAS,WAAU,yBAAwB;AAAA,YAC5C,gBAAAG,OAAC,UAAK,WAAU,qCAAqC,UAAAE,GAAE,0BAA0B,GAAE;AAAA,aACrF;AAAA,UACA,gBAAAF,OAAC,OAAE,WAAU,yCACV,2BAAiB,aAAa,mBAC7B,IAAI,KAAK,iBAAiB,aAAa,gBAAgB,EAAE,mBAAmB,SAAS;AAAA,YACnF,OAAO;AAAA,YACP,KAAK;AAAA,YACL,MAAM;AAAA,UACR,CAAC,IAAI,OACT;AAAA,UACC,iBAAiB,mBAChB,gBAAAC,QAAC,OAAE,WAAU,yBACV;AAAA,6BAAiB;AAAA,YAAgB;AAAA,YAAEC,GAAE,4BAA4B;AAAA,aACpE;AAAA,WAEJ;AAAA,QAEA,gBAAAD,QAAC,SAAI,WAAU,6BACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,4BAAAD,OAACL,eAAA,EAAY,WAAU,yBAAwB;AAAA,YAC/C,gBAAAK,OAAC,UAAK,WAAU,qCAAqC,UAAAE,GAAE,qBAAqB,GAAE;AAAA,aAChF;AAAA,UACA,gBAAAF,OAAC,OAAE,WAAU,oDACV,2BAAiB,aAAa,UAAUE,GAAE,qBAAqB,GAClE;AAAA,UACA,gBAAAF,OAAC,OAAE,WAAU,yBACV,2BAAiB,aAAa,oBAAoBE,GAAE,iCAAiC,IAAIA,GAAE,iCAAiC,GAC/H;AAAA,WACF;AAAA,SACF;AAAA,MAEC,iBAAiB,kBAChB,gBAAAF,OAAC,SAAI,WAAU,6DACb,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACJ,iBAAA,EAAc,WAAU,2BAA0B;AAAA,QACnD,gBAAAK,QAAC,OAAE,WAAU,2BACV;AAAA,UAAAC,GAAE,wBAAwB;AAAA,UAAE;AAAA,UAAE,iBAAiB;AAAA,UAAgB;AAAA,UAAEA,GAAE,4BAA4B;AAAA,UAAE;AAAA,UACjGA,GAAE,+BAA+B;AAAA,WACpC;AAAA,SACF,GACF;AAAA,MAIF,gBAAAF,OAAC,SAAI,WAAU,sCACb,0BAAAA,OAAC,OAAE,WAAU,qCACV,8BAAoB,iBACjBE,GAAE,8BAA8B,IAChCA,GAAE,yBAAyB,GAEjC,GACF;AAAA,OACF,GACF,GACJ;AAAA,EAEJ;AAEA,SACE,gBAAAF,OAAC,SAAI,WAAU,aACb,0BAAAA,OAACV,QAAA,EACC,0BAAAU,OAACT,eAAA,EAAY,WAAU,OACrB,0BAAAU,QAAC,SAAI,WAAU,oBACb;AAAA,oBAAAD,OAACN,cAAA,EAAW,WAAU,wCAAuC;AAAA,IAC7D,gBAAAM,OAAC,QAAG,WAAU,8CAA8C,UAAAE,GAAE,6BAA6B,GAAE;AAAA,IAC7F,gBAAAF,OAAC,OAAE,WAAU,8BAA8B,UAAAE,GAAE,iCAAiC,GAAE;AAAA,KAG9E,oBAAoB,WAAW,oBAAoB,eACnD,gBAAAF,OAACR,UAAA,EACE,UAAAU,GAAE,2BAA2B,GAChC;AAAA,IAID,oBAAoB,kBACnB,gBAAAF,OAAC,OAAE,WAAU,yBACV,UAAAE,GAAE,2BAA2B,GAChC;AAAA,KAEJ,GACF,GACF,GACF;AAEJ;;;AC/KA;AAAA,EACE,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AACP,SAAS,QAAQ,UAAAC,UAAQ,OAAAC,YAAW;AACpC,SAAS,2BAAAC,gCAA+B;AAgCxB,gBAAAC,QACA,QAAAC,eADA;AAfT,IAAM,iBAAgD,CAAC;AAAA,EAC5D;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAElC,SACE,gBAAAC,OAAC,SAAI,WAAU,aACb,0BAAAA,OAACP,QAAA,EACC,0BAAAO,OAACN,eAAA,EAAY,WAAU,OACrB,0BAAAO,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,QAAC,SAAI,WAAU,+DACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACF,MAAA,EAAI,WAAU,yBAAwB;AAAA,QACvC,gBAAAG,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,yCAAyC,UAAAE,GAAE,6BAA6B,GAAE;AAAA,UACxF,gBAAAF,OAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,4BAA4B,GAAE;AAAA,WACxE;AAAA,SACF;AAAA,MACA,gBAAAF;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UAER,UAAAO,GAAE,8BAA8B;AAAA;AAAA,MACnC;AAAA,OACF;AAAA,IAEA,gBAAAF,OAACJ,YAAA,EAAU;AAAA,IAEX,gBAAAK,QAAC,SAAI,WAAU,+DACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,UAAO,WAAU,yBAAwB;AAAA,QAC1C,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,yCAAyC,UAAAE,GAAE,sBAAsB,GAAE;AAAA,UACjF,gBAAAF,OAAC,OAAE,WAAU,yBAAyB,UAAAE,GAAE,qBAAqB,GAAE;AAAA,WACjE;AAAA,SACF;AAAA,MACA,gBAAAF;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAU;AAAA,UAET,UAAAO,GAAE,iBAAiB;AAAA;AAAA,MACtB;AAAA,OACF;AAAA,IAEA,gBAAAF,OAACJ,YAAA,EAAU;AAAA,IAEX,gBAAAK,QAAC,SAAI,WAAU,8DACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACH,UAAA,EAAO,WAAU,wBAAuB;AAAA,QACzC,gBAAAI,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,wCAAwC,UAAAE,GAAE,4BAA4B,GAAE;AAAA,UACtF,gBAAAF,OAAC,OAAE,WAAU,wBAAwB,UAAAE,GAAE,2BAA2B,GAAE;AAAA,WACtE;AAAA,SACF;AAAA,MACA,gBAAAF;AAAA,QAACL;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAET,uBAAaO,GAAE,kBAAkB,IAAIA,GAAE,uBAAuB;AAAA;AAAA,MACjE;AAAA,OACF;AAAA,KACF,GACF,GACF,GACF;AAEJ;;;AChGA,SAAgB,YAAAC,YAAU,iBAAAC,sBAAqB;AAK/C,SAAS,WAAW,SAAAC,cAAa;AACjC,SAAS,aAAAC,kBAAiB;AAC1B,SAAS,2BAAAC,gCAA+B;AA2ChC,SACE,OAAAC,QADF,QAAAC,eAAA;AAxCR,IAAM,YAAY;AAAA,EAChB,EAAE,OAAO,MAAM,OAAO,WAAW,MAAM,qBAAO;AAAA,EAC9C,EAAE,OAAO,MAAM,OAAO,wBAAc,MAAM,qBAAO;AACnD;AAQO,SAAS,kBAAkB;AAChC,QAAMC,KAAIH,yBAAwB;AAClC,QAAM,gBAAgB,EAAU;AAChC,QAAM,SAASD,WAAU;AACzB,QAAM,CAAC,WAAW,eAAe,IAAIK,eAAc;AACnD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,aAAa;AAEtE,QAAM,uBAAuB,CAAC,cAAsB;AAClD,wBAAoB,SAAS;AAE7B,oBAAgB,MAAM;AAEpB,UAAI,OAAO,WAAW,aAAa;AACjC,qBAAa,QAAQ,4BAA4B,SAAS;AAG1D,iBAAS,SAAS,eAAe,SAAS;AAAA,MAC5C;AAGA,aAAO,QAAQ;AAAA,IACjB,CAAC;AAAA,EACH;AAEA,QAAM,kBAAkB,UAAU,KAAK,UAAQ,KAAK,UAAU,aAAa;AAE3E,SACE,gBAAAH,QAAC,QACC;AAAA,oBAAAA,QAAC,cACC;AAAA,sBAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,wBAAAD,OAAC,aAAU,WAAU,+BAA8B;AAAA,QACnD,gBAAAA,OAAC,aAAW,UAAAE,GAAE,gBAAgB,GAAE;AAAA,SAClC;AAAA,MACA,gBAAAF,OAAC,mBACE,UAAAE,GAAE,mBAAmB,GACxB;AAAA,OACF;AAAA,IACA,gBAAAD,QAAC,eAAY,WAAU,aACrB;AAAA,sBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,WAAM,WAAU,yCACd,UAAAE,GAAE,0BAA0B,GAC/B;AAAA,QACA,gBAAAD,QAAC,SAAI,WAAU,gEACb;AAAA,0BAAAD,OAAC,UAAK,WAAU,YAAY,2BAAiB,MAAK;AAAA,UAClD,gBAAAA,OAAC,UAAK,WAAU,iCAAiC,2BAAiB,OAAM;AAAA,UACxE,gBAAAA,OAACH,QAAA,EAAM,WAAU,uCAAsC;AAAA,WACzD;AAAA,SACF;AAAA,MAEA,gBAAAI,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAD,OAAC,WAAM,WAAU,yCACd,UAAAE,GAAE,yBAAyB,GAC9B;AAAA,QACA,gBAAAD;AAAA,UAAC;AAAA;AAAA,YACC,OAAO;AAAA,YACP,eAAe;AAAA,YACf,UAAU;AAAA,YAEV;AAAA,8BAAAD,OAAC,iBAAc,WAAU,UACvB,0BAAAA,OAAC,eAAY,aAAaE,GAAE,0BAA0B,GAAG,GAC3D;AAAA,cACA,gBAAAF,OAAC,iBACE,oBAAU,IAAI,CAAC,aACd,gBAAAA,OAAC,cAAgC,OAAO,SAAS,OAC/C,0BAAAC,QAAC,SAAI,WAAU,2BACb;AAAA,gCAAAD,OAAC,UAAK,WAAU,WAAW,mBAAS,MAAK;AAAA,gBACzC,gBAAAA,OAAC,UAAM,mBAAS,OAAM;AAAA,gBACrB,SAAS,UAAU,iBAClB,gBAAAA,OAACH,QAAA,EAAM,WAAU,oCAAmC;AAAA,iBAExD,KAPe,SAAS,KAQ1B,CACD,GACH;AAAA;AAAA;AAAA,QACF;AAAA,SACF;AAAA,MAEC,aACC,gBAAAI,QAAC,SAAI,WAAU,uDACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,yFAAwF;AAAA,QACvG,gBAAAA,OAAC,UAAM,UAAAE,GAAE,0BAA0B,GAAE;AAAA,SACvC;AAAA,MAGF,gBAAAF,OAAC,SAAI,WAAU,+BACb,0BAAAC,QAAC,OAAE,WAAU,+BAA8B;AAAA;AAAA,QACrCC,GAAE,kCAAkC;AAAA,SAC1C,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACjHA,SAAgB,YAAAG,kBAAgB;AAChC;AAAA,EACE,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AACP,SAAS,OAAAC,OAAK,UAAAC,eAAc;AAC5B,SAAS,2BAAAC,gCAA+B;AA0ChC,SACE,OAAAC,QADF,QAAAC,eAAA;AAnBD,IAAMC,wBAA4D,CAAC;AAAA,EACxE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIJ,yBAAwB;AAElC,QAAM,CAAC,qBAAqB,sBAAsB,IAAIN,WAAS,KAAK;AACpE,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAC5D,QAAM,CAAC,qBAAqB,sBAAsB,IAAIA,WAAS,KAAK;AAEpE,MAAI,CAAC;AAAQ,WAAO;AAEpB,SACE,gBAAAO,OAAC,SAAI,WAAU,8EACb,0BAAAC,QAAC,SAAI,WAAU,gDACb;AAAA,oBAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,qCAAqC,UAAAG,GAAE,sBAAsB,GAAE;AAAA,MAC7E,gBAAAH;AAAA,QAACN;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS;AAAA,UACT,WAAU;AAAA,UAEV,0BAAAM,OAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,OAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,wBAAuB,GAC9F;AAAA;AAAA,MACF;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,sBAAAA,QAAC,SACC;AAAA,wBAAAD,OAACJ,SAAA,EAAM,SAAQ,mBAAkB,WAAU,gDACxC,UAAAO,GAAE,gCAAgC,GACrC;AAAA,QACA,gBAAAF,QAAC,SAAI,WAAU,YACb;AAAA,0BAAAD;AAAA,YAACL;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAM,sBAAsB,SAAS;AAAA,cACrC,OAAO,aAAa;AAAA,cACpB;AAAA,cACA,aAAaQ,GAAE,2CAA2C;AAAA,cAC1D,WAAU;AAAA;AAAA,UACZ;AAAA,UACA,gBAAAH;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,uBAAuB,CAAC,mBAAmB;AAAA,cAC1D,WAAU;AAAA,cAET,gCACC,gBAAAA,OAACF,SAAA,EAAO,WAAU,WAAU,IAE5B,gBAAAE,OAACH,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,UAE7B;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAI,QAAC,SACC;AAAA,wBAAAD,OAACJ,SAAA,EAAM,SAAQ,eAAc,WAAU,gDACpC,UAAAO,GAAE,4BAA4B,GACjC;AAAA,QACA,gBAAAF,QAAC,SAAI,WAAU,YACb;AAAA,0BAAAD;AAAA,YAACL;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAM,kBAAkB,SAAS;AAAA,cACjC,OAAO,aAAa;AAAA,cACpB;AAAA,cACA,aAAaQ,GAAE,uCAAuC;AAAA,cACtD,WAAU;AAAA;AAAA,UACZ;AAAA,UACA,gBAAAH;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,mBAAmB,CAAC,eAAe;AAAA,cAClD,WAAU;AAAA,cAET,4BACC,gBAAAA,OAACF,SAAA,EAAO,WAAU,WAAU,IAE5B,gBAAAE,OAACH,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,UAE7B;AAAA,WACF;AAAA,SACF;AAAA,MAEA,gBAAAI,QAAC,SACC;AAAA,wBAAAD,OAACJ,SAAA,EAAM,SAAQ,mBAAkB,WAAU,gDACxC,UAAAO,GAAE,gCAAgC,GACrC;AAAA,QACA,gBAAAF,QAAC,SAAI,WAAU,YACb;AAAA,0BAAAD;AAAA,YAACL;AAAA,YAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAM,sBAAsB,SAAS;AAAA,cACrC,OAAO,aAAa;AAAA,cACpB;AAAA,cACA,aAAaQ,GAAE,2CAA2C;AAAA,cAC1D,WAAU;AAAA;AAAA,UACZ;AAAA,UACA,gBAAAH;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,SAAS,MAAM,uBAAuB,CAAC,mBAAmB;AAAA,cAC1D,WAAU;AAAA,cAET,gCACC,gBAAAA,OAACF,SAAA,EAAO,WAAU,WAAU,IAE5B,gBAAAE,OAACH,OAAA,EAAI,WAAU,WAAU;AAAA;AAAA,UAE7B;AAAA,WACF;AAAA,SACF;AAAA,OACF;AAAA,IAEA,gBAAAI,QAAC,SAAI,WAAU,mCACb;AAAA,sBAAAD;AAAA,QAACN;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAET,UAAAS,GAAE,uBAAuB;AAAA;AAAA,MAC5B;AAAA,MACA,gBAAAH;AAAA,QAACN;AAAA,QAAA;AAAA,UACC,SAAS;AAAA,UACT,UAAU;AAAA,UAET,uBAAaS,GAAE,yBAAyB,IAAIA,GAAE,+BAA+B;AAAA;AAAA,MAChF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;ACtKA,SAAS,UAAAC,gBAAc;AACvB,SAAS,2BAAAC,gCAA+B;AA8BhC,SAGM,OAAAC,QAHN,QAAAC,eAAA;AAbD,IAAM,sBAA0D,CAAC;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,QAAMC,KAAIH,yBAAwB;AAElC,MAAI,CAAC;AAAQ,WAAO;AAEpB,SACE,gBAAAC,OAAC,SAAI,WAAU,8EACb,0BAAAC,QAAC,SAAI,WAAU,gDACb;AAAA,oBAAAA,QAAC,SAAI,WAAU,0BACb;AAAA,sBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,wBAAuB,MAAK,QAAO,QAAO,gBAAe,SAAQ,aAC9E,0BAAAA,OAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,6IAA4I,GACnN,GACF;AAAA,MACA,gBAAAA,OAAC,SAAI,WAAU,QACb,0BAAAA,OAAC,QAAG,WAAU,qCAAqC,UAAAE,GAAE,2BAA2B,GAAE,GACpF;AAAA,OACF;AAAA,IAEA,gBAAAD,QAAC,SAAI,WAAU,QACb;AAAA,sBAAAD,OAAC,OAAE,WAAU,yBACV,UAAAE,GAAE,iCAAiC,GACtC;AAAA,MACA,gBAAAD,QAAC,QAAG,WAAU,8DACZ;AAAA,wBAAAD,OAAC,QAAI,UAAAE,GAAE,iCAAiC,GAAE;AAAA,QAC1C,gBAAAF,OAAC,QAAI,UAAAE,GAAE,kCAAkC,GAAE;AAAA,QAC3C,gBAAAF,OAAC,QAAI,UAAAE,GAAE,qCAAqC,GAAE;AAAA,QAC9C,gBAAAF,OAAC,QAAI,UAAAE,GAAE,sCAAsC,GAAE;AAAA,SACjD;AAAA,MACA,gBAAAF,OAAC,OAAE,WAAU,8BACX,0BAAAA,OAAC,YAAQ,UAAAE,GAAE,yCAAyC,GAAE,GACxD;AAAA,OACF;AAAA,IAEA,gBAAAD,QAAC,SAAI,WAAU,8BACb;AAAA,sBAAAD;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAET,UAAAI,GAAE,4BAA4B;AAAA;AAAA,MACjC;AAAA,MACA,gBAAAF;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UAET,uBAAaI,GAAE,8BAA8B,IAAIA,GAAE,mCAAmC;AAAA;AAAA,MACzF;AAAA,OACF;AAAA,KACF,GACF;AAEJ;;;AT4cU,SA2EN,YAAAC,YA3EM,OAAAC,QA2EN,QAAAC,eA3EM;AA1fV,IAAM,0BAA0B,CAACC,OAAW;AAAA,EAC1C;AAAA,IACE,IAAI;AAAA,IACJ,OAAOA,GAAE,yBAAyB;AAAA,IAClC,MAAMC;AAAA,IACN,aAAaD,GAAE,+BAA+B;AAAA,EAChD;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,OAAOA,GAAE,0BAA0B;AAAA,IACnC,MAAME;AAAA,IACN,aAAaF,GAAE,gCAAgC;AAAA,IAC/C,OAAO,CAAC,UAAU;AAAA,EACpB;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,OAAOA,GAAE,wBAAwB;AAAA,IACjC,MAAMG;AAAA,IACN,aAAaH,GAAE,8BAA8B;AAAA,IAC7C,OAAO,CAAC,gBAAgB,cAAc;AAAA,EACxC;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,OAAOA,GAAE,8BAA8B;AAAA,IACvC,MAAMI;AAAA,IACN,aAAaJ,GAAE,oCAAoC;AAAA,IACnD,OAAO,CAAC,SAAS,YAAY,cAAc;AAAA;AAAA,EAC7C;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,OAAOA,GAAE,0BAA0B;AAAA,IACnC,MAAMK;AAAA,IACN,aAAaL,GAAE,gCAAgC;AAAA,EACjD;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,OAAOA,GAAE,yBAAyB;AAAA,IAClC,MAAM;AAAA,IACN,aAAaA,GAAE,+BAA+B;AAAA,EAChD;AACF;AAMO,IAAM,oBAA8B,MAAM;AAC/C,QAAMA,KAAIM,0BAAwB;AAClC,QAAM,EAAE,MAAM,QAAQ,QAAQ,IAAIC,SAAQ;AAC1C,QAAM,EAAE,cAAc,WAAW,IAAIC,WAAS;AAC9C,QAAM,EAAE,UAAU,YAAY,IAAIC,aAAY;AAC9C,QAAM,SAASC,WAAU;AACzB,QAAM,eAAe,gBAAgB;AAGrC,QAAM,aAAa,aAAa,IAAI,KAAK,KAAK;AAG9C,QAAM,CAAC,eAAe,gBAAgB,IAAIC,WAAS,UAAU;AAG7D,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,iBAAiB,kBAAkB,IAAIA,WAAS,KAAK;AAC5D,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,KAAK;AAGlD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS;AAAA,IACvD,WAAW,MAAM,aAAa;AAAA,IAC9B,UAAU,MAAM,YAAY;AAAA,IAC5B,OAAO,MAAM,SAAS;AAAA,EACxB,CAAC;AAED,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS;AAAA,IACvD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,cAAc;AAAA,IACd,aAAa;AAAA,IACb,OAAO;AAAA,EACT,CAAC;AAED,QAAM,CAAC,gBAAgB,iBAAiB,IAAIA,WAAS;AAAA,IACnD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,SAAS;AAAA,IACT,aAAa;AAAA,EACf,CAAC;AAGD,QAAM,CAAC,oBAAoB,qBAAqB,IAAIA,WAAS,KAAK;AAClE,QAAM,CAAC,oBAAoB,qBAAqB,IAAIA,WAAS,KAAK;AAClE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAS;AAAA,IAC/C,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,iBAAiB;AAAA,EACnB,CAAC;AAED,QAAM,CAAC,mBAAmB,oBAAoB,IAAIA,WAAS,KAAK;AAChE,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,KAAK;AAGlD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAc,IAAI;AAClE,QAAM,CAAC,qBAAqB,sBAAsB,IAAIA,WAAS,IAAI;AAGnE,EAAAC,YAAU,MAAM;AACd,UAAMC,cAAa,aAAa,IAAI,KAAK,KAAK;AAC9C,QAAIA,gBAAe,eAAe;AAChC,uBAAiBA,WAAU;AAAA,IAC7B;AAAA,EACF,GAAG,CAAC,YAAY,CAAC;AAGjB,QAAM,sBAAsB,CAAC,YAAoB;AAC/C,qBAAiB,OAAO;AACxB,WAAO,KAAK,iBAAiB,OAAO,EAAE;AAAA,EACxC;AAGA,EAAAD,YAAU,MAAM;AACd,QAAI,MAAM;AACR,0BAAoB;AAAA,QAClB,WAAW,KAAK,aAAa;AAAA,QAC7B,UAAU,KAAK,YAAY;AAAA,QAC3B,OAAO,KAAK,SAAS;AAAA,MACvB,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AAGT,EAAAA,YAAU,MAAM;AACd,UAAM,wBAAwB,YAAY;AACxC,UAAI;AACF,+BAAuB,IAAI;AAC3B,cAAM,WAAW,MAAME,kBAAiB,iCAAiC;AAEzE,gBAAQ,IAAI,mDAA4C,QAAQ;AAEhE,YAAI,SAAS,WAAW,SAAS,MAAM;AAiBrC,gBAAM,OAAO,SAAS;AAGtB,gBAAM,kBAAkB;AAAA,YACtB,iBAAiB;AAAA,YACjB,cAAc;AAAA;AAAA,cAEZ,IAAI,KAAK;AAAA,cACT,QAAQ,KAAK;AAAA,cACb,UAAU,KAAK;AAAA,cACf,oBAAoB,KAAK;AAAA,cACzB,kBAAkB,KAAK;AAAA;AAAA,cAGvB,QAAQ,KAAK;AAAA,cACb,UAAU,KAAK;AAAA,cACf,UAAU,KAAK;AAAA;AAAA,cAGf,YAAY,KAAK;AAAA,cACjB,UAAU,KAAK;AAAA;AAAA,cAGf,mBAAmB,KAAK;AAAA,cACxB,YAAY,KAAK;AAAA,cACjB,cAAc,KAAK;AAAA;AAAA,cAGnB,MAAM;AAAA,gBACJ,IAAI,KAAK;AAAA,gBACT,MAAM,KAAK;AAAA,gBACX,aAAa,KAAK;AAAA,gBAClB,WAAW,KAAK;AAAA,gBAChB,UAAU,KAAK;AAAA,cACjB;AAAA,YACF;AAAA;AAAA,YAGA,QAAQ,KAAK;AAAA,YACb,cAAc,KAAK;AAAA,YACnB,UAAU,KAAK,WAAW;AAAA,YAC1B,WAAW,KAAK,WAAW;AAAA,YAC3B,SAAS,KAAK,WAAW;AAAA,YACzB,YAAY,KAAK,WAAW;AAAA,YAC5B,WAAW,KAAK;AAAA,YAChB,gBAAgB,KAAK;AAAA,YACrB,eAAe,KAAK;AAAA;AAAA,YAGpB,UAAU;AAAA,cACR,IAAI,KAAK;AAAA,cACT,MAAM,KAAK;AAAA,cACX,OAAO,KAAK;AAAA,YACd;AAAA;AAAA,YAGA,QAAQ,KAAK;AAAA,YACb,OAAO,KAAK;AAAA;AAAA,YAGZ,UAAU,KAAK;AAAA,UACjB;AAEA,kBAAQ,IAAI,+CAA0C,eAAe;AACrE,8BAAoB,eAAe;AAAA,QACrC,OAAO;AACL,kBAAQ,IAAI,2CAAsC,QAAQ;AAC1D,8BAAoB,IAAI;AAAA,QAC1B;AAAA,MACF,SAAS,OAAO;AACd,gBAAQ,MAAM,qCAAqC,KAAK;AACxD,4BAAoB,IAAI;AAAA,MAC1B,UAAE;AACA,+BAAuB,KAAK;AAAA,MAC9B;AAAA,IACF;AAEA,0BAAsB;AAAA,EACxB,GAAG,CAAC,CAAC;AAGL,EAAAF,YAAU,MAAM;AACd,QAAI,MAAM,YAAY,MAAM,SAAS,YAAY;AAC/C,0BAAoB;AAAA,QAClB,MAAM,KAAK,SAAS,QAAQ;AAAA,QAC5B,OAAO,KAAK,SAAS,SAAS;AAAA,QAC9B,SAAS,KAAK,SAAS,WAAW;AAAA,QAClC,MAAM,KAAK,SAAS,QAAQ;AAAA,QAC5B,OAAO,KAAK,SAAS,SAAS;AAAA,QAC9B,SAAS,KAAK,SAAS,WAAW;AAAA,QAClC,SAAS,KAAK,SAAS,WAAW;AAAA,QAClC,cAAc,KAAK,SAAS,gBAAgB;AAAA,QAC5C,aAAa,KAAK,SAAS,eAAe;AAAA,QAC1C,OAAO,KAAK,SAAS,SAAS;AAAA,MAChC,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,WAAW,MAAM,SAAS,kBAAkB,MAAM,SAAS,iBAAiB;AACpF,wBAAkB;AAAA,QAChB,MAAM,KAAK,OAAO,QAAQ;AAAA,QAC1B,OAAO,KAAK,OAAO,SAAS;AAAA,QAC5B,SAAS,KAAK,OAAO,WAAW;AAAA,QAChC,aAAa,KAAK,OAAO,eAAe;AAAA,MAC1C,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AAGT,QAAM,oBAAoB,wBAAwBZ,EAAC;AACnD,QAAM,oBAAoB,kBAAkB,OAAO,UAAQ;AAEzD,QAAI,KAAK,OAAO;AACd,aAAO,KAAK,MAAM,SAAS,MAAM,QAAQ,EAAE;AAAA,IAC7C;AAEA,WAAO;AAAA,EACT,CAAC;AAGD,QAAM,4BAA4B,CAACe,OAA2C;AAC5E,UAAM,EAAE,MAAM,MAAM,IAAIA,GAAE;AAC1B,wBAAoB,WAAS,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,EAAE;AAAA,EAC1D;AAEA,QAAM,4BAA4B,CAACA,OAA2C;AAC5E,UAAM,EAAE,MAAM,MAAM,IAAIA,GAAE;AAC1B,wBAAoB,WAAS,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,EAAE;AAAA,EAC1D;AAEA,QAAM,0BAA0B,CAACA,OAA2C;AAC1E,UAAM,EAAE,MAAM,MAAM,IAAIA,GAAE;AAC1B,sBAAkB,WAAS,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,EAAE;AAAA,EACxD;AAEA,QAAM,uBAAuB,CAACA,OAA2C;AACvE,UAAM,EAAE,MAAM,MAAM,IAAIA,GAAE;AAC1B,oBAAgB,WAAS,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,EAAE;AAAA,EACtD;AAGA,QAAM,4BAA4B,MAAM,qBAAqB,IAAI;AACjE,QAAM,8BAA8B,YAAY;AAC9C,QAAI;AACF,oBAAc,IAAI;AAClB,YAAM,WAAW,MAAM,YAAY,kBAAkB,gBAAgB;AACrE,UAAI,SAAS,SAAS;AAEpB,cAAM,aAAa,aAAa,QAAQ,UAAU;AAClD,YAAI,YAAY;AACd,gBAAM,WAAW,KAAK,MAAM,UAAU;AACtC,cAAI,SAAS,MAAM;AAEjB,qBAAS,KAAK,YAAY,iBAAiB;AAC3C,qBAAS,KAAK,WAAW,iBAAiB;AAC1C,qBAAS,KAAK,QAAQ,iBAAiB;AACvC,qBAAS,KAAK,OAAO,GAAG,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ;AAE/E,yBAAa,QAAQ,YAAY,KAAK,UAAU,QAAQ,CAAC;AACzD,oBAAQ,IAAI,mDAA8C;AAG1D,gBAAI,MAAM;AACR,mBAAK,YAAY,iBAAiB;AAClC,mBAAK,WAAW,iBAAiB;AACjC,mBAAK,QAAQ,iBAAiB;AAC9B,mBAAK,OAAO,GAAG,iBAAiB,SAAS,IAAI,iBAAiB,QAAQ;AACtE,sBAAQ,IAAI,6CAAwC;AAAA,YACtD;AAAA,UACF;AAAA,QACF;AAEA,6BAAqB,KAAK;AAC1B,qBAAa,WAAWf,GAAE,iCAAiC,CAAC;AAAA,MAC9D,OAAO;AACL,mBAAW,SAAS,SAAS,SAASA,GAAE,sCAAsC,CAAC;AAAA,MACjF;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,SAASA,GAAE,sCAAsC,CAAC;AAAA,IAC/D,UAAE;AACA,oBAAc,KAAK;AAAA,IACrB;AAAA,EACF;AACA,QAAM,uBAAuB,MAAM,qBAAqB,KAAK;AAE7D,QAAM,yBAAyB,MAAM,qBAAqB,IAAI;AAC9D,QAAM,2BAA2B,YAAY;AAC3C,QAAI;AACF,cAAQ,IAAI,2CAAoC;AAChD,cAAQ,IAAI,+BAAwB,gBAAgB;AACpD,oBAAc,IAAI;AAClB,YAAM,WAAW,MAAM,YAAY,mBAAmB,gBAAgB;AACtE,cAAQ,IAAI,2BAAoB,QAAQ;AAExC,UAAI,SAAS,SAAS;AACpB,gBAAQ,IAAI,iDAA0C;AAGtD,cAAM,aAAa,aAAa,QAAQ,UAAU;AAClD,gBAAQ,IAAI,uCAAgC,aAAa,WAAW,MAAM;AAE1E,YAAI,YAAY;AACd,gBAAM,WAAW,KAAK,MAAM,UAAU;AACtC,kBAAQ,IAAI,4CAAqC,SAAS,MAAM,QAAQ;AAExE,cAAI,SAAS,QAAQ,SAAS,KAAK,UAAU;AAE3C,qBAAS,KAAK,SAAS,UAAU,iBAAiB;AAClD,oBAAQ,IAAI,wDAAiD,SAAS,KAAK,SAAS,OAAO;AAE3F,yBAAa,QAAQ,YAAY,KAAK,UAAU,QAAQ,CAAC;AACzD,oBAAQ,IAAI,oDAA+C,SAAS,KAAK,SAAS,OAAO;AAGzF,gBAAI,QAAQ,KAAK,UAAU;AACzB,mBAAK,SAAS,UAAU,iBAAiB;AACzC,sBAAQ,IAAI,8CAAyC,KAAK,SAAS,OAAO;AAAA,YAC5E;AAAA,UACF,OAAO;AACL,oBAAQ,IAAI,iDAA4C;AAAA,UAC1D;AAAA,QACF,OAAO;AACL,kBAAQ,IAAI,0CAAqC;AAAA,QACnD;AAEA,6BAAqB,KAAK;AAC1B,qBAAa,WAAWA,GAAE,8BAA8B,CAAC;AAAA,MAC3D,OAAO;AACL,gBAAQ,IAAI,sBAAiB,SAAS,KAAK;AAC3C,mBAAW,SAAS,SAAS,SAASA,GAAE,mCAAmC,CAAC;AAAA,MAC9E;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6CAAwC,KAAK;AAC3D,iBAAW,SAASA,GAAE,mCAAmC,CAAC;AAAA,IAC5D,UAAE;AACA,oBAAc,KAAK;AAAA,IACrB;AAAA,EACF;AACA,QAAM,uBAAuB,MAAM,qBAAqB,KAAK;AAE7D,QAAM,uBAAuB,MAAM,mBAAmB,IAAI;AAC1D,QAAM,yBAAyB,YAAY;AACzC,QAAI;AACF,oBAAc,IAAI;AAClB,YAAM,WAAW,MAAM,YAAY,iBAAiB,cAAc;AAClE,UAAI,SAAS,SAAS;AACpB,2BAAmB,KAAK;AACxB,qBAAa,WAAWA,GAAE,4BAA4B,CAAC;AAAA,MACzD,OAAO;AACL,mBAAW,SAAS,SAAS,SAASA,GAAE,iCAAiC,CAAC;AAAA,MAC5E;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,SAASA,GAAE,iCAAiC,CAAC;AAAA,IAC1D,UAAE;AACA,oBAAc,KAAK;AAAA,IACrB;AAAA,EACF;AACA,QAAM,qBAAqB,MAAM,mBAAmB,KAAK;AAEzD,QAAM,gBAAgB,YAAY;AAChC,QAAI;AACF,YAAM,OAAO;AAAA,IACf,SAAS,OAAO;AACd,cAAQ,MAAM,sBAAsB,KAAK;AAAA,IAC3C;AAAA,EACF;AAEA,QAAM,sBAAsB,YAAY;AACtC,QAAI;AACF,oBAAc,IAAI;AAElB,UAAI,CAAC,MAAM,IAAI;AACb,cAAM,IAAI,MAAM,mBAAmB;AAAA,MACrC;AAEA,YAAM,WAAW,MAAMgB,UAAS,WAAW,KAAK,EAAE;AAClD,UAAI,SAAS,SAAS;AACpB,qBAAa,mBAAmBhB,GAAE,yBAAyB,CAAC;AAC5D,cAAM,OAAO;AAAA,MACf,OAAO;AACL,mBAAW,iBAAiB,SAAS,WAAWA,GAAE,8BAA8B,CAAC;AAAA,MACnF;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,iBAAiBA,GAAE,8BAA8B,CAAC;AAAA,IAC/D,UAAE;AACA,oBAAc,KAAK;AACnB,2BAAqB,KAAK;AAAA,IAC5B;AAAA,EACF;AAEA,QAAM,uBAAuB,YAAY;AACvC,QAAI;AACF,4BAAsB,IAAI;AAC1B,UAAI,aAAa,gBAAgB,aAAa,iBAAiB;AAC7D,cAAM,IAAI,MAAMA,GAAE,2BAA2B,CAAC;AAAA,MAChD;AACA,UAAI,aAAa,YAAY,SAAS,GAAG;AACvC,cAAM,IAAI,MAAMA,GAAE,2BAA2B,CAAC;AAAA,MAChD;AACA,YAAM,WAAW,MAAMiB,SAAQ,eAAe,aAAa,iBAAiB,aAAa,WAAW;AACpG,UAAI,SAAS,SAAS;AACpB,8BAAsB,KAAK;AAC3B,wBAAgB,EAAE,iBAAiB,IAAI,aAAa,IAAI,iBAAiB,GAAG,CAAC;AAC7E,qBAAa,oBAAoBjB,GAAE,0BAA0B,CAAC;AAAA,MAChE,OAAO;AACL,cAAM,IAAI,MAAM,SAAS,WAAWA,GAAE,+BAA+B,CAAC;AAAA,MACxE;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,0BAA0B,iBAAiB,QAAQ,MAAM,UAAUA,GAAE,+BAA+B,CAAC;AAAA,IAClH,UAAE;AACA,4BAAsB,KAAK;AAAA,IAC7B;AAAA,EACF;AAEA,QAAM,uBAAuB,OAAO,gBAA8B;AAChE,QAAI;AACF,oBAAc,IAAI;AAClB,YAAM,WAAW,MAAM,YAAY,uBAAuB,EAAE,UAAU,YAAY,CAAC;AACnF,UAAI,SAAS,SAAS;AAEpB,oBAAY,WAAW;AAGvB,cAAM,aAAa,aAAa,QAAQ,UAAU;AAClD,YAAI,YAAY;AACd,gBAAM,WAAW,KAAK,MAAM,UAAU;AACtC,cAAI,SAAS,QAAQ,SAAS,KAAK,UAAU;AAC3C,qBAAS,KAAK,SAAS,WAAW;AAClC,yBAAa,QAAQ,YAAY,KAAK,UAAU,QAAQ,CAAC;AAAA,UAC3D;AAAA,QACF;AAEA,qBAAa,WAAWA,GAAE,0BAA0B,CAAC;AAAA,MACvD,OAAO;AACL,mBAAW,SAAS,SAAS,SAASA,GAAE,+BAA+B,CAAC;AAAA,MAC1E;AAAA,IACF,SAAS,OAAO;AACd,iBAAW,SAASA,GAAE,+BAA+B,CAAC;AAAA,IACxD,UAAE;AACA,oBAAc,KAAK;AAAA,IACrB;AAAA,EACF;AAEA,QAAM,sBAAsB,MAAM;AAChC,YAAQ,eAAe;AAAA,MACrB,KAAK;AACH,eACE,gBAAAF;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA,WAAW;AAAA,YACX;AAAA,YACA,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,eAAe;AAAA;AAAA,QACjB;AAAA,MAEJ,KAAK;AACH,eACE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA,WAAW;AAAA,YACX;AAAA,YACA,UAAU;AAAA,YACV,iBAAiB;AAAA,YACjB,QAAQ;AAAA,YACR,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,eAAe;AAAA,YACf,kBAAkB;AAAA;AAAA,QACpB;AAAA,MAEJ,KAAK;AACH,eACE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA,WAAW;AAAA,YACX;AAAA,YACA,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,eAAe;AAAA;AAAA,QACjB;AAAA,MAEJ,KAAK;AACH,eACE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA,iBAAiB,MAAM;AAAA;AAAA,QACzB;AAAA,MAEJ,KAAK;AACH,eAAO,gBAAAA,OAAC,mBAAgB;AAAA,MAC1B,KAAK;AACH,eACE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAW;AAAA,YACX,iBAAiB,MAAM,qBAAqB,IAAI;AAAA,YAChD,kBAAkB,MAAM,sBAAsB,IAAI;AAAA,YAClD;AAAA;AAAA,QACF;AAAA,MAEJ;AACE,eACE,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA,WAAW;AAAA,YACX;AAAA,YACA,UAAU;AAAA,YACV,QAAQ;AAAA,YACR,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,eAAe;AAAA;AAAA,QACjB;AAAA,IAEN;AAAA,EACF;AAEA,SACE,gBAAAC,QAAAF,YAAA,EACE;AAAA,oBAAAC;AAAA,MAACoB;AAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA,iBAAiB;AAAA,QAEhB,8BAAoB;AAAA;AAAA,IACvB;AAAA,IAEA,gBAAApB;AAAA,MAACqB;AAAA,MAAA;AAAA,QACC,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ;AAAA,QACA,SAAS,MAAM,sBAAsB,KAAK;AAAA,QAC1C,UAAU;AAAA,QACV,UAAU;AAAA;AAAA,IACZ;AAAA,IAEA,gBAAArB;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ;AAAA,QACR;AAAA,QACA,SAAS,MAAM,qBAAqB,KAAK;AAAA,QACzC,WAAW;AAAA;AAAA,IACb;AAAA,KAEF;AAEJ;AAEA,IAAO,mBAAQ;;;AUloBf;AAAA,EACE,QAAAsB;AAAA,EACA,eAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP,SAAS,UAAAC,eAAc;AAmBjB,SACE,OAAAC,QADF,QAAAC,eAAA;AALC,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AACF,MAAM;AACJ,SACE,gBAAAA,QAAC,SAAI,WAAU,aACb;AAAA,oBAAAA,QAAC,SACC;AAAA,sBAAAD,OAAC,QAAG,WAAU,oCAAmC,sBAAQ;AAAA,MACzD,gBAAAA,OAAC,OAAE,WAAU,iBAAgB,gEAAkD;AAAA,OACjF;AAAA,IAEA,gBAAAA,OAACJ,QAAA,EACC,0BAAAI,OAACH,eAAA,EAAY,WAAU,OACrB,0BAAAG,OAAC,SAAI,WAAU,aACb,0BAAAC,QAAC,SAAI,WAAU,+DACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAACD,SAAA,EAAO,WAAU,yBAAwB;AAAA,QAC1C,gBAAAE,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,6BAA4B,sBAAQ;AAAA,UAClD,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,8DAAgD;AAAA,WACvF;AAAA,SACF;AAAA,MACA,gBAAAA;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACV;AAAA;AAAA,MAED;AAAA,OACF,GACF,GACF,GACF;AAAA,KACF;AAEJ;;;ACrDA,SAAgB,YAAAI,YAAU,aAAAC,mBAAiB;AAC3C,SAAS,cAAAC,cAAY,gBAAAC,gBAAc,eAAAC,qBAAmB;AAEtD,SAAS,kBAAAC,kBAAgB,eAAAC,oBAAmB;AAG5C;AAAA,EACE,QAAAC;AAAA,EACA,eAAAC;AAAA,EACA,mBAAAC;AAAA,EACA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,OACK;AAkEC,SACE,OAAAC,QADF,QAAAC,eAAA;AA/DR,IAAM,mBAAgG;AAAA,EACpG,EAAE,OAAO,OAAO,OAAO,qBAAqB,QAAQ,KAAK,MAAM,YAAY;AAAA,EAC3E,EAAE,OAAO,OAAO,OAAO,gCAA2B,QAAQ,UAAK,MAAM,kBAAkB;AACzF;AAsBO,IAAM,kBAAkD,CAAC;AAAA,EAC9D;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AACF,MAAM;AACJ,QAAM,CAAC,kBAAkB,mBAAmB,IAAIf,WAAuB,eAAe;AACtF,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAS,KAAK;AAGlD,EAAAC,YAAU,MAAM;AACd,wBAAoB,eAAe;AACnC,kBAAc,KAAK;AAAA,EACrB,GAAG,CAAC,eAAe,CAAC;AAGpB,QAAM,eAAe,CAAC,aAA2B;AAC/C,wBAAoB,QAAQ;AAC5B,kBAAc,aAAa,eAAe;AAAA,EAC5C;AAGA,QAAM,aAAa,YAAY;AAC7B,QAAI,CAAC;AAAY;AACjB,UAAM,iBAAiB,gBAAgB;AACvC,kBAAc,KAAK;AAAA,EACrB;AAGA,QAAM,eAAe,MAAM;AACzB,wBAAoB,eAAe;AACnC,kBAAc,KAAK;AAAA,EACrB;AAEA,SACE,gBAAAc,QAAC,SAAI,WAAU,aAEb;AAAA,oBAAAA,QAAC,SACC;AAAA,sBAAAA,QAAC,QAAG,WAAU,4DACZ;AAAA,wBAAAD,OAACZ,cAAA,EAAW,WAAU,yBAAwB;AAAA,QAAE;AAAA,SAElD;AAAA,MACA,gBAAAY,OAAC,OAAE,WAAU,sBAAqB,2FAElC;AAAA,OACF;AAAA,IAGC,cACC,gBAAAC,QAAC,SAAI,WAAU,+EACb;AAAA,sBAAAD,OAACV,eAAA,EAAY,WAAU,gDAA+C;AAAA,MACtE,gBAAAW,QAAC,SAAI,WAAU,UACb;AAAA,wBAAAD,OAAC,OAAE,WAAU,uCAAsC,6BAEnD;AAAA,QACA,gBAAAA,OAAC,OAAE,WAAU,gCAA+B,oFAE5C;AAAA,SACF;AAAA,OACF;AAAA,IAIF,gBAAAC,QAACR,QAAA,EACC;AAAA,sBAAAQ,QAACL,cAAA,EACC;AAAA,wBAAAI,OAACH,aAAA,EAAU,WAAU,WAAU,8BAAgB;AAAA,QAC/C,gBAAAG,OAACL,kBAAA,EAAgB,mEAEjB;AAAA,SACF;AAAA,MACA,gBAAAK,OAACN,eAAA,EACC,0BAAAO,QAAC,SAAI,WAAU,4EACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,YAAY,UAAAR,aAAY,eAAe,GAAG,UAAU,KAAI;AAAA,QACvE,gBAAAS,QAAC,SAAI,WAAU,UACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,uCACZ,UAAAR,aAAY,eAAe,GAAG,QAAQ,aACzC;AAAA,UACA,gBAAAS,QAAC,SAAI,WAAU,yBAAwB;AAAA;AAAA,YAC9B;AAAA,aACT;AAAA,WACF;AAAA,QACC,qBAAqB,mBAAmB,CAAC,cACxC,gBAAAA,QAACF,SAAA,EAAM,SAAQ,WAAU,WAAU,+BACjC;AAAA,0BAAAC,OAACX,gBAAA,EAAa,WAAU,gBAAe;AAAA,UAAE;AAAA,WAE3C;AAAA,SAEJ,GACF;AAAA,OACF;AAAA,IAGA,gBAAAY,QAACR,QAAA,EACC;AAAA,sBAAAQ,QAACL,cAAA,EACC;AAAA,wBAAAI,OAACH,aAAA,EAAU,WAAU,WAAU,6BAAe;AAAA,QAC9C,gBAAAG,OAACL,kBAAA,EAAgB,kDAEjB;AAAA,SACF;AAAA,MACA,gBAAAK,OAACN,eAAA,EACC,0BAAAM,OAAC,SAAI,WAAU,yCACZ,2BAAiB,IAAI,CAAC,WAAiF;AACtG,cAAM,SAASR,aAAY,OAAO,KAAK;AACvC,YAAI,CAAC;AAAQ,iBAAO;AACpB,cAAM,aAAa,qBAAqB,OAAO;AAC/C,cAAM,YAAY,oBAAoB,OAAO;AAE7C,eACE,gBAAAS;AAAA,UAAC;AAAA;AAAA,YAEC,SAAS,MAAM,aAAa,OAAO,KAAK;AAAA,YACxC,UAAU;AAAA,YACV,WAAW;AAAA;AAAA,sBAEP,aACE,yCACA,gEACJ;AAAA,sBACE,aAAa,kCAAkC,gBAAgB;AAAA;AAAA,YAGnE;AAAA,8BAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,gCAAAA,QAAC,SAAI,WAAU,2BACb;AAAA,kCAAAD,OAAC,SAAI,WAAU,YAAY,iBAAO,QAAO;AAAA,kBACzC,gBAAAC,QAAC,SACC;AAAA,oCAAAD,OAAC,SAAI,WAAU,+BACZ,iBAAO,MACV;AAAA,oBACA,gBAAAA,OAAC,SAAI,WAAU,yBACZ,iBAAO,OACV;AAAA,qBACF;AAAA,mBACF;AAAA,gBACC,cACC,gBAAAA,OAACX,gBAAA,EAAa,WAAU,yBAAwB;AAAA,iBAEpD;AAAA,cAGA,gBAAAY,QAAC,SAAI,WAAU,sCACb;AAAA,gCAAAD,OAAC,SAAI,WAAU,8BAA6B,sBAAQ;AAAA,gBACpD,gBAAAC,QAAC,SAAI,WAAU,aACb;AAAA,kCAAAA,QAAC,SAAI,WAAU,yBACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,qBAAO;AAAA,oBACvC,gBAAAA,OAAC,UAAK,WAAU,eAAe,UAAAT,iBAAe,IAAI,OAAO,KAAK,GAAE;AAAA,qBAClE;AAAA,kBACA,gBAAAU,QAAC,SAAI,WAAU,yBACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,sBAAQ;AAAA,oBACxC,gBAAAA,OAAC,UAAK,WAAU,eAAe,UAAAT,iBAAe,KAAM,OAAO,KAAK,GAAE;AAAA,qBACpE;AAAA,kBACA,gBAAAU,QAAC,SAAI,WAAU,yBACb;AAAA,oCAAAD,OAAC,UAAK,WAAU,iBAAgB,qBAAO;AAAA,oBACvC,gBAAAA,OAAC,UAAK,WAAU,eAAe,UAAAT,iBAAe,KAAS,OAAO,KAAK,GAAE;AAAA,qBACvE;AAAA,mBACF;AAAA,iBACF;AAAA,cAGC,aAAa,CAAC,cACb,gBAAAS,OAAC,SAAI,WAAU,0BACb,0BAAAA,OAACD,SAAA,EAAM,SAAQ,WAAU,WAAU,uCAAsC,qBAEzE,GACF;AAAA;AAAA;AAAA,UAtDG,OAAO;AAAA,QAwDd;AAAA,MAEJ,CAAC,GACH,GACF;AAAA,OACF;AAAA,IAGA,gBAAAE,QAACR,QAAA,EACC;AAAA,sBAAAQ,QAACL,cAAA,EACC;AAAA,wBAAAI,OAACH,aAAA,EAAU,WAAU,WAAU,8BAAgB;AAAA,QAC/C,gBAAAI,QAACN,kBAAA,EAAgB;AAAA;AAAA,UACcH,aAAY,gBAAgB,GAAG,QAAQ;AAAA,WACtE;AAAA,SACF;AAAA,MACA,gBAAAQ,OAACN,eAAA,EACC,0BAAAO,QAAC,SAAI,WAAU,yCACb;AAAA,wBAAAA,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,yBAAwB,oBAAM;AAAA,UAC7C,gBAAAA,OAAC,SAAI,WAAU,yBAAyB,UAAAR,aAAY,gBAAgB,GAAG,UAAU,KAAI;AAAA,WACvF;AAAA,QACA,gBAAAS,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,yBAAwB,kBAAI;AAAA,UAC3C,gBAAAA,OAAC,SAAI,WAAU,yBAAyB,4BAAiB;AAAA,WAC3D;AAAA,QACA,gBAAAC,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,yBAAwB,4BAAc;AAAA,UACrD,gBAAAA,OAAC,SAAI,WAAU,yBAAyB,UAAAR,aAAY,gBAAgB,GAAG,qBAAqB,GAAE;AAAA,WAChG;AAAA,QACA,gBAAAS,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,yBAAwB,6BAAe;AAAA,UACtD,gBAAAA,OAAC,SAAI,WAAU,oCACZ,UAAAR,aAAY,gBAAgB,GAAG,eAAe,WAAW,SAC5D;AAAA,WACF;AAAA,QACA,gBAAAS,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,yBAAwB,oBAAM;AAAA,UAC7C,gBAAAA,OAAC,SAAI,WAAU,yBAAyB,UAAAR,aAAY,gBAAgB,GAAG,UAAU,SAAQ;AAAA,WAC3F;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAGC,cACC,gBAAAS,QAAC,SAAI,WAAU,qDACb;AAAA,sBAAAD;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,UAAU;AAAA,UACX;AAAA;AAAA,MAED;AAAA,MACA,gBAAAE;AAAA,QAACF;AAAA,QAAA;AAAA,UACC,SAAS;AAAA,UACT,UAAU,cAAc,CAAC;AAAA,UAExB,uBAAa,cAAc;AAAA;AAAA,MAC9B;AAAA,OACF;AAAA,IAIF,gBAAAG,QAAC,SAAI,WAAU,mCACb;AAAA,sBAAAA,QAAC,OACC;AAAA,wBAAAD,OAAC,YAAO,mBAAK;AAAA,QAAS;AAAA,SAGxB;AAAA,MACA,gBAAAA,OAAC,OAAE,iGAEH;AAAA,OACF;AAAA,KACF;AAEJ;;;AC1RA,SAAS,YAAAE,kBAAgB;AACzB;AAAA,EACE,QAAAC;AAAA,EACA,WAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EAEA,gBAAAC;AAAA,EACA,SAAAC;AAAA,EACA,aAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,EACA,KAAAC;AAAA,EACA;AAAA,EACA,cAAAC;AAAA,EAEA,SAAAC;AAAA,EACA,eAAAC;AAAA,EAEA;AAAA,EACA,YAAAC;AAAA,EACA,YAAAC;AAAA,OAMK;AA0GS,gBAAAC,QAGJ,QAAAC,eAHI;AApFT,SAAS,cAAc;AAAA,EAC5B,UAAU;AAAA,EACV;AAAA,EACA,qBAAqB;AAAA,EACrB,iBAAiB;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AACF,GAAuB;AACrB,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAE9D,QAAM,iBAA4B;AAAA,IAChC,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMC,MAAK;AAAA,IACrD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,UAAQ;AAAA,IACtD,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMC,QAAM;AAAA,IACtD,EAAE,MAAM,WAAW,OAAO,UAAU,MAAMC,cAAa;AAAA,IACvD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,WAAS;AAAA,EACzD;AAEA,QAAM,gBAA2B;AAAA,IAC/B,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMJ,MAAK;AAAA,IACrD,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMK,YAAU;AAAA,IAC1D;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAMJ;AAAA,IACR;AAAA,IACA,EAAE,MAAM,kBAAkB,OAAO,iBAAiB,MAAMK,QAAM;AAAA,IAC9D,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,aAAW;AAAA,IACzD,EAAE,MAAM,UAAU,OAAO,SAAS,MAAML,QAAM;AAAA,IAC9C;AAAA,MACE,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAME;AAAA,MACN,UAAU;AAAA,QACR,EAAE,MAAM,kBAAkB,OAAO,qBAAqB,MAAMI,UAAS;AAAA,QACrE,EAAE,MAAM,qBAAqB,OAAO,kBAAkB,MAAM,YAAY;AAAA,QACxE,EAAE,MAAM,sBAAsB,OAAO,cAAc,MAAMC,UAAS;AAAA,MACpE;AAAA,IACF;AAAA,EAEF;AAGA,QAAM,uBAAuB,CAAC,OAAkBC,cAAsB;AACpE,QAAI,CAACA;AAAU,aAAO;AAGtB,QAAIA,cAAa,gBAAgB;AAE/B,aAAO,MAAM;AAAA,QAAO,UAClB,KAAK,SAAS,cACd,KAAK,SAAS,oBACd,KAAK,SAAS,YACd,KAAK,SAAS;AAAA,MAChB;AAAA,IACF,WAAWA,cAAa,gBAAgB;AAEtC,aAAO,MAAM;AAAA,QAAO,UAClB,KAAK,SAAS,YACd,KAAK,SAAS,cACd,KAAK,SAAS,oBACd,KAAK,SAAS,YACd,KAAK,SAAS;AAAA,MAChB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,YAAY,UACzB,qBAAqB,eAAe,QAAQ,IAC5C;AAIJ,SACE,gBAAAZ,QAAC,YAAO,WAAU,iEAChB;AAAA,oBAAAD,OAAC,SAAI,WAAU,0CACb,0BAAAC,QAAC,SAAI,WAAU,0CAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,qBACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,+GACb,0BAAAA,OAACc,QAAA,EAAM,WAAU,sBAAqB,GACxC,GACF;AAAA,QACA,gBAAAb,QAAC,SAAI,WAAU,QACb;AAAA,0BAAAD,OAAC,QAAG,WAAU,mCAAkC,yBAAW;AAAA,UAC3D,gBAAAA,OAAC,OAAE,WAAU,oCAAoC,mBAAQ;AAAA,WAC3D;AAAA,SACF;AAAA,MAGA,gBAAAA,OAAC,SAAI,WAAU,yCACZ,mBAAS,IAAI,CAAC,SAAS;AACtB,cAAMe,QAAO,KAAK;AAClB,cAAM,WAAW,gBAAgB,KAAK,QAAS,KAAK,YAAY,KAAK,SAAS,KAAK,aAAW,gBAAgB,QAAQ,IAAI;AAC1H,cAAM,cAAc,KAAK,YAAY,KAAK,SAAS,SAAS;AAE5D,YAAI,aAAa;AACf,iBACE,gBAAAd,QAAC,SAAoB,WAAU,kBAC7B;AAAA,4BAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAM,KAAK;AAAA,gBACX,WAAW,gGACT,WACI,oDACA,oDACN;AAAA,gBAEA;AAAA,kCAAAD,OAACe,OAAA,EAAK,WAAW,WAAW,WAAW,kBAAkB,eAAe,IAAI;AAAA,kBAC3E,KAAK;AAAA,kBACN,gBAAAf,OAACgB,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA;AAAA,YACnC;AAAA,YAGA,gBAAAhB,OAAC,SAAI,WAAU,4LACb,0BAAAA,OAAC,SAAI,WAAU,QACZ,eAAK,UAAU,IAAI,CAAC,YAAY;AAC/B,oBAAM,UAAU,QAAQ;AACxB,oBAAM,cAAc,gBAAgB,QAAQ;AAC5C,qBACE,gBAAAC;AAAA,gBAAC;AAAA;AAAA,kBAEC,MAAM,QAAQ;AAAA,kBACd,WAAW,+DACT,cACI,6BACA,oDACN;AAAA,kBAEA;AAAA,oCAAAD,OAAC,WAAQ,WAAW,WAAW,cAAc,kBAAkB,eAAe,IAAI;AAAA,oBACjF,QAAQ;AAAA;AAAA;AAAA,gBATJ,QAAQ;AAAA,cAUf;AAAA,YAEJ,CAAC,GACH,GACF;AAAA,eApCQ,KAAK,IAqCf;AAAA,QAEJ;AAEA,eACE,gBAAAC;AAAA,UAAC;AAAA;AAAA,YAEC,MAAM,KAAK;AAAA,YACX,WAAW,gGACT,WACI,oDACA,oDACN;AAAA,YAEA;AAAA,8BAAAD,OAACe,OAAA,EAAK,WAAW,WAAW,WAAW,kBAAkB,eAAe,IAAI;AAAA,cAC3E,KAAK;AAAA;AAAA;AAAA,UATD,KAAK;AAAA,QAUZ;AAAA,MAEJ,CAAC,GACH;AAAA,MAGA,gBAAAd,QAAC,SAAI,WAAU,+BAEb;AAAA,wBAAAA,QAAC,SAAI,WAAU,+BAEb;AAAA,0BAAAD;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,WAAU;AAAA,cAEV,0BAAAA,OAACiB,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,UAC5B;AAAA,UAGC,YAAY,YACX,gBAAAhB;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAACM,eAAA,EAAa,WAAU,WAAU;AAAA,gBACjC,iBAAiB,KAChB,gBAAAN,OAAC,SAAM,WAAU,8FACd,2BAAiB,IAAI,OAAO,gBAC/B;AAAA;AAAA;AAAA,UAEJ;AAAA,WAEJ;AAAA,QAGA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS;AAAA,cACT,WAAU;AAAA,cAEV;AAAA,gCAAAD,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACkB,QAAA,EAAK,WAAU,sBAAqB,GACvC;AAAA,gBACA,gBAAAlB,OAAC,UAAK,WAAU,uCAAsC,qBAAO;AAAA;AAAA;AAAA,UAC/D;AAAA,UAEA,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS;AAAA,cACT,WAAU;AAAA,cACV,OAAM;AAAA,cAEN,0BAAAA,OAACmB,SAAA,EAAO,WAAU,WAAU;AAAA;AAAA,UAC9B;AAAA,WACF;AAAA,QAGA,gBAAAnB,OAAC,SAAI,WAAU,aACb,0BAAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,oBAAoB,CAAC,gBAAgB;AAAA,YACpD,WAAU;AAAA,YAET,6BAAmB,gBAAAA,OAACoB,KAAA,EAAE,WAAU,WAAU,IAAK,gBAAApB,OAAC,QAAK,WAAU,WAAU;AAAA;AAAA,QAC5E,GACF;AAAA,SACF;AAAA,OACF,GAGF;AAAA,IAGC,oBACC,gBAAAA,OAAC,SAAI,WAAU,+CACb,0BAAAA,OAAC,SAAI,WAAU,4BACZ,mBAAS,IAAI,CAAC,SAAS;AACtB,YAAMe,QAAO,KAAK;AAClB,YAAM,WAAW,gBAAgB,KAAK,QAAS,KAAK,YAAY,KAAK,SAAS,KAAK,aAAW,gBAAgB,QAAQ,IAAI;AAC1H,YAAM,cAAc,KAAK,YAAY,KAAK,SAAS,SAAS;AAE5D,aACE,gBAAAd,QAAC,SACC;AAAA,wBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,MAAM,KAAK;AAAA,YACX,WAAW,sEACT,WACI,oDACA,oDACN;AAAA,YACA,SAAS,MAAM,oBAAoB,KAAK;AAAA,YAExC;AAAA,8BAAAD,OAACe,OAAA,EAAK,WAAW,WAAW,WAAW,kBAAkB,eAAe,IAAI;AAAA,cAC3E,KAAK;AAAA;AAAA;AAAA,QACR;AAAA,QAGC,eACC,gBAAAf,OAAC,SAAI,WAAU,kBACZ,eAAK,UAAU,IAAI,CAAC,YAAY;AAC/B,gBAAM,UAAU,QAAQ;AACxB,gBAAM,cAAc,gBAAgB,QAAQ;AAC5C,iBACE,gBAAAC;AAAA,YAAC;AAAA;AAAA,cAEC,MAAM,QAAQ;AAAA,cACd,WAAW,oEACT,cACI,oDACA,oDACN;AAAA,cACA,SAAS,MAAM,oBAAoB,KAAK;AAAA,cAExC;AAAA,gCAAAD,OAAC,WAAQ,WAAW,WAAW,cAAc,kBAAkB,eAAe,IAAI;AAAA,gBACjF,QAAQ;AAAA;AAAA;AAAA,YAVJ,QAAQ;AAAA,UAWf;AAAA,QAEJ,CAAC,GACH;AAAA,WApCM,KAAK,IAsCf;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KAEJ;AAEJ;;;ACpVA;AAAA,EACE,QAAAqB;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EAEA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,WAAAC;AAAA,EAEA,cAAAC;AAAA,EACA,aAAAC;AAAA,EACA,UAAAC;AAAA,EAEA,SAAAC;AAAA,OACK;AAqDS,gBAAAC,QAGJ,QAAAC,eAHI;AAtCT,SAAS,oBAAoB;AAAA,EAClC,UAAU;AAAA,EACV;AAAA,EACA,qBAAqB;AAAA,EACrB,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,eAAe;AAAA,EACf,gBAAgB;AAClB,GAA6B;AAC3B,QAAM,iBAAiB;AAAA,IACrB,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMC,MAAK;AAAA,IACrD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,UAAQ;AAAA,IACtD,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMC,QAAM;AAAA,IACtD,EAAE,MAAM,WAAW,OAAO,UAAU,MAAMC,eAAa;AAAA,IACvD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,WAAS;AAAA,EACzD;AAEA,QAAM,gBAAgB;AAAA,IACpB,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMJ,MAAK;AAAA,IACrD,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMK,OAAM;AAAA,IACtD,EAAE,MAAM,UAAU,OAAO,SAAS,MAAMJ,UAAQ;AAAA,IAChD,EAAE,MAAM,kBAAkB,OAAO,iBAAiB,MAAMK,QAAM;AAAA,IAC9D,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,aAAW;AAAA,IACzD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMH,WAAS;AAAA,IACvD,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMI,WAAU;AAAA,IAC1D,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,QAAO;AAAA,EACvD;AAEA,QAAM,WAAW,YAAY,UAAU,gBAAgB;AAEvD,SACE,gBAAAV,QAAC,YAAO,WAAU,iEAChB;AAAA,oBAAAA,QAAC,SAAI,WAAU,0CACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,0CAEb;AAAA,wBAAAA,QAAC,SAAI,WAAU,qBACb;AAAA,0BAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,+GACb,0BAAAA,OAACO,QAAA,EAAM,WAAU,sBAAqB,GACxC,GACF;AAAA,UACA,gBAAAN,QAAC,SAAI,WAAU,QACb;AAAA,4BAAAD,OAAC,QAAG,WAAU,mCAAkC,yBAAW;AAAA,YAC3D,gBAAAA,OAAC,OAAE,WAAU,oCAAoC,mBAAQ;AAAA,aAC3D;AAAA,WACF;AAAA,QAGA,gBAAAA,OAAC,SAAI,WAAU,yCACZ,mBAAS,IAAI,CAAC,SAAS;AACtB,gBAAMY,QAAO,KAAK;AAClB,gBAAM,WAAW,gBAAgB,KAAK;AACtC,iBACE,gBAAAX;AAAA,YAAC;AAAA;AAAA,cAEC,MAAM,KAAK;AAAA,cACX,WAAW,gGACT,WACI,oDACA,oDACN;AAAA,cAEA;AAAA,gCAAAD,OAACY,OAAA,EAAK,WAAW,WAAW,WAAW,kBAAkB,eAAe,IAAI;AAAA,gBAC3E,KAAK;AAAA;AAAA;AAAA,YATD,KAAK;AAAA,UAUZ;AAAA,QAEJ,CAAC,GACH;AAAA,QAGA,gBAAAX,QAAC,SAAI,WAAU,+BAEb;AAAA,0BAAAD,OAAC,UAAK,QAAQ,cAAc,QAAO,OAAM,WAAU,mBACjD,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,4BAAAD,OAACa,SAAA,EAAO,WAAU,4EAA2E;AAAA,YAC7F,gBAAAb;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,aAAY;AAAA,gBACZ,WAAU;AAAA;AAAA,YACZ;AAAA,aACF,GACF;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,+BAEb;AAAA,4BAAAD;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,WAAU;AAAA,gBAEV,0BAAAA,OAACc,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,YAC5B;AAAA,YAGC,YAAY,YACX,gBAAAb;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,WAAU;AAAA,gBAEV;AAAA,kCAAAD,OAACK,gBAAA,EAAa,WAAU,WAAU;AAAA,kBACjC,iBAAiB,KAChB,gBAAAL,OAAC,SAAM,WAAU,8FACd,2BAAiB,IAAI,OAAO,gBAC/B;AAAA;AAAA;AAAA,YAEJ;AAAA,aAEJ;AAAA,UAGA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,UAAK,QAAQ,eAAe,QAAO,OAClC,0BAAAC;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,WAAU;AAAA,gBAEV;AAAA,kCAAAD,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACe,QAAA,EAAK,WAAU,sBAAqB,GACvC;AAAA,kBACA,gBAAAf,OAAC,UAAK,WAAU,uCAAsC,qBAAO;AAAA;AAAA;AAAA,YAC/D,GACF;AAAA,YAEA,gBAAAA,OAAC,UAAK,QAAQ,cAAc,QAAO,QACjC,0BAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,WAAU;AAAA,gBACV,OAAM;AAAA,gBAEN,0BAAAA,OAACgB,SAAA,EAAO,WAAU,WAAU;AAAA;AAAA,YAC9B,GACF;AAAA,aACF;AAAA,UAGA,gBAAAhB,OAAC,SAAI,WAAU,aACb,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,WAAU;AAAA,cACV,MAAK;AAAA,cACL,2BAAuB;AAAA,cAEvB,0BAAAA,OAACiB,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,UAC5B,GACF;AAAA,WACF;AAAA,SACF;AAAA,MAGA,gBAAAjB,OAAC,SAAI,WAAU,kBACb,0BAAAA,OAAC,UAAK,QAAQ,cAAc,QAAO,OACjC,0BAAAC,QAAC,SAAI,WAAU,YACb;AAAA,wBAAAD,OAACa,SAAA,EAAO,WAAU,4EAA2E;AAAA,QAC7F,gBAAAb;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,WAAU;AAAA;AAAA,QACZ;AAAA,SACF,GACF,GACF;AAAA,OACF;AAAA,IAGA,gBAAAA,OAAC,SAAI,WAAU,sDAAqD,oBAAgB,MAClF,0BAAAA,OAAC,SAAI,WAAU,4BACZ,mBAAS,IAAI,CAAC,SAAS;AACtB,YAAMY,QAAO,KAAK;AAClB,YAAM,WAAW,gBAAgB,KAAK;AACtC,aACE,gBAAAX;AAAA,QAAC;AAAA;AAAA,UAEC,MAAM,KAAK;AAAA,UACX,WAAW,4EACT,WACI,oDACA,oDACN;AAAA,UAEA;AAAA,4BAAAD,OAACY,OAAA,EAAK,WAAW,WAAW,WAAW,kBAAkB,eAAe,IAAI;AAAA,YAC3E,KAAK;AAAA;AAAA;AAAA,QATD,KAAK;AAAA,MAUZ;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KACF;AAEJ;;;ACrOA,SAAgB,YAAAM,kBAAgB;AA2B5B,SAEI,OAAAC,QAFJ,QAAAC,eAAA;AAfW,SAAR,sBAAuC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,WAAW,MAAM;AAAA,EAAC;AAAA,EAClB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,gBAAgB;AAClB,GAA+B;AAC7B,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAE9D,QAAM,uBAAuB,MAAM;AACjC,wBAAoB,CAAC,gBAAgB;AAAA,EACvC;AAEA,SACE,gBAAAD,QAAC,SAAI,WAAU,iCACZ;AAAA,KAAC,eACA,gBAAAD;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb,kBAAkB,gBAAgB,uBAAuB;AAAA;AAAA,IAC3D;AAAA,IAEF,gBAAAA,OAAC,UAAK,WAAW,0BAA0B,CAAC,cAAc,4CAA4C,EAAE,IACtG,0BAAAA,OAAC,SAAI,WAAU,iBAEb,0BAAAA,OAAC,SAAI,WAAU,aACZ,UACH,GACF,GACF;AAAA,KACF;AAEJ;;;AC/CA,SAAgB,YAAAG,kBAAgB;AA6BxB,gBAAAC,QAWE,QAAAC,eAXF;AAjBO,SAAR,yBAA0C;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,WAAW,MAAM;AAAA,EAAC;AAAA,EAClB,cAAc;AAAA,EACd,cAAc;AAAA,EACd,gBAAgB;AAClB,GAAkC;AAChC,QAAM,CAAC,kBAAkB,mBAAmB,IAAIC,WAAS,KAAK;AAE9D,QAAM,uBAAuB,MAAM;AACjC,wBAAoB,CAAC,gBAAgB;AAAA,EACvC;AAEA,SACE,gBAAAD,QAAC,SAAI,WAAU,6EACZ;AAAA,KAAC,eACA,gBAAAD;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA,aAAa;AAAA,QACb,kBAAkB,gBAAgB,uBAAuB;AAAA;AAAA,IAC3D;AAAA,IAEF,gBAAAA,OAAC,UAAK,WAAW,0BAA0B,CAAC,cAAc,4CAA4C,EAAE,IACtG,0BAAAC,QAAC,SAAI,WAAU,iBAEb;AAAA,sBAAAA,QAAC,SAAI,WAAU,iGACb;AAAA,wBAAAD,OAAC,QAAG,WAAU,mDAAkD,mCAEhE;AAAA,QACA,gBAAAA,OAAC,OAAE,WAAU,sCAAqC,4DAElD;AAAA,SACF;AAAA,MAGA,gBAAAA,OAAC,SAAI,WAAU,aACZ,UACH;AAAA,OACF,GACF;AAAA,KACF;AAEJ;;;ACxCU,gBAAAG,QASM,QAAAC,eATN;AALH,IAAM,cAA0C,CAAC,EAAE,KAAK,MAAM;AACnE,SACE,gBAAAA,QAAC,SAAI,WAAU,8CACb;AAAA,oBAAAA,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAU,gCAAkB,GAC/B;AAAA,MACA,gBAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,SAAI,WAAU,mFACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,yBAAwB,uBAEvC;AAAA,YACA,gBAAAC,QAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,qCAAoC,2BAAa;AAAA,cAC9D,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,mCAAqB;AAAA,eAC5D;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAM,SAAQ,WAAU,WAAU,WAChC,eAAK,cACR;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,mFACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,yBAAwB,uBAEvC;AAAA,YACA,gBAAAC,QAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,qCAAoC,2BAAa;AAAA,cAC9D,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,kCAAoB;AAAA,eAC3D;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAM,SAAQ,WAAU,WAAU,WAChC,eAAK,cACR;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,mFACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,yBAAwB,0BAEvC;AAAA,YACA,gBAAAC,QAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,qCAAoC,2BAAa;AAAA,cAC9D,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,2BAAa;AAAA,eACpD;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAM,SAAQ,eAAc,WAAU,WACpC,eAAK,cACR;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,SAAI,WAAU,mFACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,yBAAwB,uBAEvC;AAAA,YACA,gBAAAC,QAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,qCAAoC,4BAAc;AAAA,cAC/D,gBAAAA,OAAC,OAAE,WAAU,yBAAwB,kCAAoB;AAAA,eAC3D;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAM,SAAQ,WAAU,WAAU,WAChC,eAAK,eACR;AAAA,WACF;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,QACC;AAAA,sBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAU,2BAAa,GAC1B;AAAA,MACA,gBAAAA,OAAC,eACC,0BAAAC,QAAC,SAAI,WAAU,aACb;AAAA,wBAAAA,QAAC,UAAO,WAAU,uCAAsC,SAAQ,WAC9D;AAAA,0BAAAD,OAAC,UAAK,WAAU,QAAO,uBAAE;AAAA,UACzB,gBAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,eAAc,4BAAc;AAAA,YAC3C,gBAAAA,OAAC,SAAI,WAAU,yBAAwB,qCAAuB;AAAA,aAChE;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,UAAO,WAAU,uCAAsC,SAAQ,WAC9D;AAAA,0BAAAD,OAAC,UAAK,WAAU,QAAO,uBAAE;AAAA,UACzB,gBAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,eAAc,4BAAc;AAAA,YAC3C,gBAAAA,OAAC,SAAI,WAAU,yBAAwB,oCAAsB;AAAA,aAC/D;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,UAAO,WAAU,uCAAsC,SAAQ,WAC9D;AAAA,0BAAAD,OAAC,UAAK,WAAU,QAAO,0BAAE;AAAA,UACzB,gBAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,eAAc,4BAAc;AAAA,YAC3C,gBAAAA,OAAC,SAAI,WAAU,yBAAwB,uCAAyB;AAAA,aAClE;AAAA,WACF;AAAA,QAEA,gBAAAC,QAAC,UAAO,WAAU,uCAAsC,SAAQ,WAC9D;AAAA,0BAAAD,OAAC,UAAK,WAAU,QAAO,uBAAE;AAAA,UACzB,gBAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,4BAAAD,OAAC,SAAI,WAAU,eAAc,4BAAc;AAAA,YAC3C,gBAAAA,OAAC,SAAI,WAAU,yBAAwB,qCAAuB;AAAA,aAChE;AAAA,WACF;AAAA,SACF,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;AC7GI,gBAAAE,QAOM,QAAAC,eAPN;AARJ,IAAM,kBAAkD,CAAC;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MACE,gBAAAA,QAAC,QAAK,WAAU,gJACd;AAAA,kBAAAD,OAAC,SAAI,WAAW,qDAAqD,KAAK,IAAI;AAAA,EAC9E,gBAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAA,OAAC,OAAE,MAAY,WAAU,SACvB,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,oBAAAD,OAAC,SAAI,WAAW,0CAA0C,KAAK,2GAC5D,gBACH;AAAA,IACA,gBAAAC,QAAC,SAAI,WAAU,UACb;AAAA,sBAAAD,OAAC,QAAG,WAAU,oFACX,iBACH;AAAA,MACA,gBAAAA,OAAC,OAAE,WAAU,6BAA6B,uBAAY;AAAA,OACxD;AAAA,IACA,gBAAAA,OAAC,SAAI,WAAU,6DACb,0BAAAA,OAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,OAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,gBAAe,GACtF,GACF;AAAA,KACF,GACF,GACF;AAAA,GACF;AAGK,IAAM,uBAAiC,MAAM;AAClD,QAAM,eAAe;AAAA,IACnB;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,EACF;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,QACb,0BAAAC,QAAC,QAAK,WAAU,8DACd;AAAA,oBAAAD,OAAC,cAAW,WAAU,QACpB,0BAAAA,OAAC,aAAU,WAAU,mCAAkC,2BAAa,GACtE;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,wDACZ,uBAAa,IAAI,CAAC,QAAQ,UACzB,gBAAAA,OAAC,mBAA6B,GAAG,UAAX,KAAmB,CAC1C,GACH,GACF;AAAA,KACF,GACF;AAEJ;;;ACNU,gBAAAE,QAaY,QAAAC,eAbZ;AAvEH,IAAM,sBAAkD,CAAC,EAAE,KAAK,MAAM;AAC3E,QAAM,aAAa;AAAA,IACjB;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO,KAAK;AAAA,MACZ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,IACb;AAAA,EACF;AAEA,QAAM,eAAe;AAAA,IACnB;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,EACF;AAEA,SACE,gBAAAA,QAAC,SAAI,WAAU,8CACb;AAAA,oBAAAA,QAAC,QAAK,WAAU,8DACd;AAAA,sBAAAD,OAAC,cAAW,WAAU,QACpB,0BAAAA,OAAC,aAAU,WAAU,mCAAkC,gCAAkB,GAC3E;AAAA,MACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,qBAAW,IAAI,CAAC,WAAW,UAC1B,gBAAAC,QAAC,SAAgB,WAAU,6JACzB;AAAA,wBAAAD,OAAC,SAAI,WAAW,qDAAqD,UAAU,KAAK,IAAI;AAAA,QACxF,gBAAAA,OAAC,SAAI,WAAU,OACb,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,0BAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,4BAAAD,OAAC,SAAI,WAAW,0CAA0C,UAAU,KAAK,mEACtE,oBAAU,MACb;AAAA,YACA,gBAAAC,QAAC,SACC;AAAA,8BAAAD,OAAC,OAAE,WAAU,mCAAmC,oBAAU,OAAM;AAAA,cAChE,gBAAAA,OAAC,OAAE,WAAU,6BAA6B,oBAAU,aAAY;AAAA,eAClE;AAAA,aACF;AAAA,UACA,gBAAAA,OAAC,SAAM,SAAQ,WAAU,WAAW,+BAA+B,UAAU,SAAS,aACnF,oBAAU,OACb;AAAA,WACF,GACF;AAAA,WAjBQ,KAkBV,CACD,GACH,GACF;AAAA,OACF;AAAA,IAEA,gBAAAC,QAAC,QAAK,WAAU,8DACd;AAAA,sBAAAD,OAAC,cAAW,WAAU,QACpB,0BAAAA,OAAC,aAAU,WAAU,mCAAkC,2BAAa,GACtE;AAAA,MACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,aACZ,uBAAa,IAAI,CAAC,QAAQ,UACzB,gBAAAC;AAAA,QAAC;AAAA;AAAA,UAEC,WAAU;AAAA,UACV,SAAQ;AAAA,UAER;AAAA,4BAAAD,OAAC,SAAI,WAAW,qDAAqD,OAAO,KAAK,IAAI;AAAA,YACrF,gBAAAA,OAAC,UAAK,WAAU,iBAAiB,iBAAO,MAAK;AAAA,YAC7C,gBAAAC,QAAC,SAAI,WAAU,oBACb;AAAA,8BAAAD,OAAC,SAAI,WAAU,mCAAmC,iBAAO,OAAM;AAAA,cAC/D,gBAAAA,OAAC,SAAI,WAAU,6BAA6B,iBAAO,aAAY;AAAA,eACjE;AAAA;AAAA;AAAA,QATK;AAAA,MAUP,CACD,GACH,GACF;AAAA,OACF;AAAA,KACF;AAEJ;;;ACrHU,gBAAAE,QAGA,QAAAC,eAHA;AAXV,IAAMC,mBAAkD,CAAC;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MACE,gBAAAF,OAAC,QAAK,WAAU,uEACd,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAA,OAAC,OAAE,MAAY,WAAU,SACvB,0BAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,kBAAAD,OAAC,SAAI,WAAU,2BACZ,gBACH;AAAA,EACA,gBAAAC,QAAC,SAAI,WAAU,UACb;AAAA,oBAAAD,OAAC,QAAG,WAAU,qCAAqC,iBAAM;AAAA,IACzD,gBAAAA,OAAC,OAAE,WAAU,yBAAyB,uBAAY;AAAA,KACpD;AAAA,EACA,gBAAAA,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,WAAU,MAAK,QAAO,QAAO,gBAAe,SAAQ,aACjE,0BAAAA,OAAC,UAAK,eAAc,SAAQ,gBAAe,SAAQ,aAAa,GAAG,GAAE,gBAAe,GACtF,GACF;AAAA,GACF,GACF,GACF,GACF;AAGK,IAAM,mBAA6B,MAAM;AAC9C,QAAM,eAAe;AAAA,IACnB;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,aAAa;AAAA,MACb,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,EACF;AAEA,SACE,gBAAAA,OAAC,SAAI,WAAU,QACb,0BAAAC,QAAC,QACC;AAAA,oBAAAD,OAAC,cACC,0BAAAA,OAAC,aAAU,2BAAa,GAC1B;AAAA,IACA,gBAAAA,OAAC,eACC,0BAAAA,OAAC,SAAI,WAAU,wDACZ,uBAAa,IAAI,CAAC,QAAQ,UACzB,gBAAAA,OAACE,kBAAA,EAA6B,GAAG,UAAX,KAAmB,CAC1C,GACH,GACF;AAAA,KACF,GACF;AAEJ;;;ACtFA,SAAgB,aAAAC,mBAAiB;AACjC,SAAS,UAAAC,SAAQ,KAAAC,WAAS;AAC1B,SAAS,MAAAC,WAAU;AACnB,SAAS,UAAAC,gBAAc;AACvB,SAAS,0BAA0B;AA+C7B,SACE,OAAAC,QADF,QAAAC,eAAA;AAnCC,IAAM,cAA0C,CAAC;AAAA,EACtD,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,WAAW;AAAA,EACX,eAAe;AACjB,MAAM;AACJ,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,mBAAmB;AAAA,IACrB;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAGD,EAAAN,YAAU,MAAM;AACd,QAAI,gBAAgB,CAAC,OAAO;AAC1B,yBAAmB,YAAY;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,cAAc,OAAO,kBAAkB,CAAC;AAG5C,EAAAA,YAAU,MAAM;AACd,WAAO;AAAA,EACT,GAAG,CAAC,OAAO,CAAC;AAEZ,SACE,gBAAAM,QAAC,SAAI,WAAWH,IAAG,YAAY,SAAS,GACtC;AAAA,oBAAAG,QAAC,SAAI,WAAU,YACb;AAAA,sBAAAD,OAACJ,SAAA,EAAO,WAAU,4EAA2E;AAAA,MAC7F,gBAAAI;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,OAAO;AAAA,UACP,UAAU,CAACE,OAAM,mBAAmBA,GAAE,OAAO,KAAK;AAAA,UAClD;AAAA,UACA;AAAA,UACA,WAAWJ;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA;AAAA,MACF;AAAA,MACC,SACC,gBAAAE;AAAA,QAACD;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS;AAAA,UACT,MAAK;AAAA,UACL,WAAU;AAAA,UAEV,0BAAAC,OAACH,KAAA,EAAE,WAAU,WAAU;AAAA;AAAA,MACzB;AAAA,OAEJ;AAAA,IACC,eACC,gBAAAG,OAAC,SAAI,WAAU,uDACb,0BAAAA,OAAC,SAAI,WAAU,gEAA+D,GAChF;AAAA,KAEJ;AAEJ;;;ACrFA,SAAS,YAAAG,kBAAgB;AACzB;AAAA,EACE,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,KAAAC;AAAA,EACA,eAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,OAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,aAAAC;AAAA,OACK;AACP,SAAS,UAAAC,gBAAc;AA+EP,gBAAAC,QASM,QAAAC,eATN;AAnET,SAAS,WAAW;AAAA,EACzB,UAAU;AAAA,EACV;AAAA,EACA,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB;AAAA,EACA,cAAc;AAAA,EACd;AACF,GAAoB;AAClB,QAAM,CAAC,QAAQ,SAAS,IAAIhB,WAAS,KAAK;AAE1C,QAAM,iBAAiB;AAAA,IACrB,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMC,MAAK;AAAA,IACrD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMC,QAAM;AAAA,IACpD,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMC,QAAM;AAAA,IACtD,EAAE,MAAM,WAAW,OAAO,UAAU,MAAMD,QAAM;AAAA,IAChD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAME,WAAS;AAAA,EACzD;AAEA,QAAM,gBAAgB;AAAA,IACpB,EAAE,MAAM,cAAc,OAAO,aAAa,MAAMH,MAAK;AAAA,IACrD,EAAE,MAAM,UAAU,OAAO,SAAS,MAAME,QAAM;AAAA,IAC9C,EAAE,MAAM,YAAY,OAAO,WAAW,MAAMU,YAAU;AAAA,IACtD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMX,QAAM;AAAA,IACpD,EAAE,MAAM,eAAe,OAAO,cAAc,MAAMS,KAAI;AAAA,IACtD,EAAE,MAAM,WAAW,OAAO,UAAU,MAAMC,eAAa;AAAA,IACvD,EAAE,MAAM,aAAa,OAAO,YAAY,MAAMR,WAAS;AAAA,EACzD;AAGA,QAAM,uBAAuB,CAAC,OAA6Ba,cAAsB;AAC/E,QAAI,CAACA;AAAU,aAAO;AAGtB,QAAIA,cAAa,gBAAgB;AAE/B,aAAO,MAAM;AAAA,QAAO,UAClB,KAAK,SAAS,cACd,KAAK,SAAS,oBACd,KAAK,SAAS,YACd,KAAK,SAAS;AAAA,MAChB;AAAA,IACF,WAAWA,cAAa,gBAAgB;AAEtC,aAAO,MAAM;AAAA,QAAO,UAClB,KAAK,SAAS,YACd,KAAK,SAAS,cACd,KAAK,SAAS,oBACd,KAAK,SAAS,YACd,KAAK,SAAS;AAAA,MAChB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,QAAM,WAAW,YAAY,UACzB,qBAAqB,eAAe,QAAQ,IAC5C;AAEJ,SACE,gBAAAD,QAAC,SAAI,WAAU,6CACb;AAAA,oBAAAD,OAAC,SAAI,WAAU,0CACb,0BAAAC,QAAC,SAAI,WAAU,0CACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,qBACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,iBACb,0BAAAA,OAAC,SAAI,WAAU,wEACb,0BAAAA,OAACb,SAAA,EAAM,WAAU,sBAAqB,GACxC,GACF;AAAA,QACC,CAAC,eACA,gBAAAa,OAAC,SAAI,WAAU,yBACb,0BAAAA,OAAC,SAAI,WAAU,iCACZ,mBAAS,IAAI,CAAC,SAAS;AACtB,gBAAMG,QAAO,KAAK;AAClB,iBACE,gBAAAF;AAAA,YAAC;AAAA;AAAA,cAEC,MAAM,KAAK;AAAA,cACX,WAAW,gFACT,gBAAgB,KAAK,OACjB,kCACA,mCACN;AAAA,cAEA;AAAA,gCAAAD,OAACG,OAAA,EAAK,WAAU,gBAAe;AAAA,gBAC9B,CAAC,eAAe,KAAK;AAAA;AAAA;AAAA,YATjB,KAAK;AAAA,UAUZ;AAAA,QAEJ,CAAC,GACH,GACF;AAAA,SAEJ;AAAA,MACA,gBAAAF,QAAC,SAAI,WAAU,+BACZ;AAAA,SAAC,eAAe,iBAAiB,oBAChC,gBAAAD;AAAA,UAACD;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS;AAAA,YACT,WAAU;AAAA,YACV,OAAO,cAAc,mBAAmB;AAAA,YAEvC,wBACC,gBAAAC,OAACL,eAAA,EAAa,WAAU,WAAU,IAElC,gBAAAK,OAACN,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA,QAErC;AAAA,QAEF,gBAAAO,QAACF,UAAA,EAAO,SAAQ,SAAQ,MAAK,MAAK,WAAU,qCAC1C;AAAA,0BAAAC,OAACV,QAAA,EAAK,WAAU,gBAAe;AAAA,UAC9B,CAAC,eAAe;AAAA,WACnB;AAAA,QACA,gBAAAW,QAACF,UAAA,EAAO,SAAQ,SAAQ,MAAK,MAAK,WAAU,qCAC1C;AAAA,0BAAAC,OAACT,SAAA,EAAO,WAAU,gBAAe;AAAA,UAChC,CAAC,eAAe;AAAA,WACnB;AAAA,QACC,CAAC,eACA,gBAAAS,OAAC,SAAI,WAAU,aACb,0BAAAA;AAAA,UAACD;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,SAAS,MAAM,UAAU,CAAC,MAAM;AAAA,YAChC,WAAU;AAAA,YAET,mBAAS,gBAAAC,OAACP,KAAA,EAAE,WAAU,WAAU,IAAK,gBAAAO,OAACR,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,QAClE,GACF;AAAA,SAEJ;AAAA,OACF,GACF;AAAA,IAEC,CAAC,eAAe,UACf,gBAAAQ,OAAC,SAAI,WAAU,aACb,0BAAAA,OAAC,SAAI,WAAU,oCACZ,mBAAS,IAAI,CAAC,SAAS;AACtB,YAAMG,QAAO,KAAK;AAClB,aACE,gBAAAF;AAAA,QAAC;AAAA;AAAA,UAEC,MAAM,KAAK;AAAA,UACX,WAAW,sEACT,gBAAgB,KAAK,OACjB,kCACA,mCACN;AAAA,UAEA;AAAA,4BAAAD,OAACG,OAAA,EAAK,WAAU,gBAAe;AAAA,YAC9B,KAAK;AAAA;AAAA;AAAA,QATD,KAAK;AAAA,MAUZ;AAAA,IAEJ,CAAC,GACH,GACF;AAAA,KAEJ;AAEJ;;;AC3LA,SAAgB,YAAAC,kBAAgB;AAChC,OAAOC,WAAU;AACjB,SAAS,mBAAmB;AAC5B,SAAS,MAAAC,WAAU;AACnB,SAAS,UAAAC,gBAAc;AACvB;AAAA,EACE,eAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EAEA,aAAAC;AAAA,EACA,YAAAC;AAAA,EACA,cAAAC;AAAA,EAEA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,eAAAC;AAAA,EACA,YAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,OAEK;AA2HK,SACE,OAAAC,QADF,QAAAC,eAAA;AAtGZ,IAAM,iBAA6B;AAAA,EACjC;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMd;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMG;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMD;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMI;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMD;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMJ;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAMG;AAAA,IACN,UAAU;AAAA,MACR;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAMG;AAAA,MACR;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAMC;AAAA,MACR;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,MAAMC;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACF;AAEO,IAAM,eAA4C,CAAC;AAAA,EACxD;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,cAAc;AAAA,EACd;AAAA,EACA,qBAAqB;AACvB,MAAM;AACJ,QAAM,CAAC,eAAe,gBAAgB,IAAIf,WAAmB,CAAC,CAAC;AAC/D,QAAM,WAAW,YAAY;AAE7B,QAAM,iBAAiB,CAAC,SAAiB;AACvC;AAAA,MAAiB,UACf,KAAK,SAAS,IAAI,IACd,KAAK,OAAO,UAAQ,SAAS,IAAI,IACjC,CAAC,GAAG,MAAM,IAAI;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,WAAW,CAAC,SAAiB;AACjC,QAAI,SAAS,cAAc;AACzB,aAAO,aAAa;AAAA,IACtB;AACA,WAAO,SAAS,WAAW,IAAI;AAAA,EACjC;AAEA,QAAM,iBAAiB,CAAC,MAAgB,QAAQ,MAAM;AACpD,UAAM,cAAc,KAAK,YAAY,KAAK,SAAS,SAAS;AAC5D,UAAM,aAAa,cAAc,SAAS,KAAK,IAAI;AACnD,UAAM,SAAS,SAAS,KAAK,IAAI;AACjC,UAAMqB,QAAO,KAAK;AAElB,WACE,gBAAAD,QAAC,SACE;AAAA,oBACC,gBAAAA;AAAA,QAACjB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,MAAM,eAAe,KAAK,IAAI;AAAA,UACvC,WAAWD;AAAA,YACT;AAAA,YACA,SACI,8BACA;AAAA,UACN;AAAA,UAEA;AAAA,4BAAAkB,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACE,OAAA,EAAK,WAAWnB;AAAA,gBACf;AAAA,gBACA,SAAS,kBAAkB;AAAA,cAC7B,GAAG;AAAA,cACF,CAAC,eACA,gBAAAiB,OAAC,UAAM,eAAK,OAAM;AAAA,eAEtB;AAAA,YACC,CAAC,eACA,gBAAAA,OAACd,eAAA,EAAa,WAAWH;AAAA,cACvB;AAAA,cACA,aAAa,cAAc;AAAA,YAC7B,GAAG;AAAA;AAAA;AAAA,MAEP,IAEA,gBAAAkB;AAAA,QAACnB;AAAA,QAAA;AAAA,UACC,MAAM,KAAK;AAAA,UACX,WAAWC;AAAA,YACT;AAAA,YACA,SACI,8BACA;AAAA,UACN;AAAA,UAEA;AAAA,4BAAAkB,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACE,OAAA,EAAK,WAAWnB;AAAA,gBACf;AAAA,gBACA,SAAS,kBAAkB;AAAA,cAC7B,GAAG;AAAA,cACF,CAAC,eACA,gBAAAiB,OAAC,UAAM,eAAK,OAAM;AAAA,eAEtB;AAAA,YACC,CAAC,eAAe,KAAK,SACpB,gBAAAA,OAAC,UAAK,WAAU,uHACb,eAAK,OACR;AAAA;AAAA;AAAA,MAEJ;AAAA,MAID,eAAe,cAAc,CAAC,eAC7B,gBAAAA,OAAC,SAAI,WAAU,uBACZ,eAAK,UAAU,IAAI,CAAC,YAAY;AAC/B,cAAM,UAAU,QAAQ;AACxB,cAAM,YAAY,SAAS,QAAQ,IAAI;AAEvC,eACE,gBAAAC;AAAA,UAACnB;AAAA,UAAA;AAAA,YAEC,MAAM,QAAQ;AAAA,YACd,WAAWC;AAAA,cACT;AAAA,cACA,YAAY,8BAA8B;AAAA,YAC5C;AAAA,YAEA;AAAA,8BAAAiB,OAAC,WAAQ,WAAU,WAAU;AAAA,cAC7B,gBAAAA,OAAC,UAAM,kBAAQ,OAAM;AAAA;AAAA;AAAA,UARhB,QAAQ;AAAA,QASf;AAAA,MAEJ,CAAC,GACH;AAAA,SA5EM,KAAK,IA8Ef;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAWlB;AAAA,IACd;AAAA,IACA,cAAc,SAAS;AAAA,EACzB,GAEE;AAAA,oBAAAkB,QAAC,SAAI,WAAU,gEACZ;AAAA,OAAC,eACA,gBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,yHACb,0BAAAA,OAACH,SAAA,EAAM,WAAU,sBAAqB,GACxC;AAAA,QACA,gBAAAI,QAAC,SACC;AAAA,0BAAAD,OAAC,QAAG,WAAU,2CAA0C,wBAAU;AAAA,UAClE,gBAAAA,OAAC,OAAE,WAAU,+BAA8B,mBAAK;AAAA,WAClD;AAAA,SACF;AAAA,MAGD,eACC,gBAAAA,OAAC,SAAI,WAAU,iIACb,0BAAAA,OAACH,SAAA,EAAM,WAAU,sBAAqB,GACxC;AAAA,MAGF,gBAAAG;AAAA,QAAChB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS;AAAA,UACT,WAAU;AAAA,UAET,wBACC,gBAAAgB,OAACd,eAAA,EAAa,WAAU,WAAU,IAElC,gBAAAc,OAACf,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA,MAErC;AAAA,OACF;AAAA,IAGA,gBAAAe,OAAC,SAAI,WAAU,8CACZ,yBAAe,IAAI,CAAC,SAAS,eAAe,IAAI,CAAC,GACpD;AAAA,IAGA,gBAAAC,QAAC,SAAI,WAAU,8BACZ;AAAA,cAAQ,CAAC,eACR,gBAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACD,QAAA,EAAK,WAAU,sBAAqB,GACvC;AAAA,QACA,gBAAAE,QAAC,SAAI,WAAU,kBACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,kDACV,eAAK,QAAQ,KAAK,OACrB;AAAA,UACA,gBAAAA,OAAC,OAAE,WAAU,uCACV,eAAK,MACR;AAAA,WACF;AAAA,SACF;AAAA,MAGD,QAAQ,eACP,gBAAAA,OAAC,SAAI,WAAU,wCACb,0BAAAA,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACD,QAAA,EAAK,WAAU,sBAAqB,GACvC,GACF;AAAA,MAGD,YACC,gBAAAE;AAAA,QAACjB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAWD;AAAA,YACT;AAAA,YACA,eAAe;AAAA,UACjB;AAAA,UAEA;AAAA,4BAAAiB,OAACF,SAAA,EAAO,WAAU,WAAU;AAAA,YAC3B,CAAC,eAAe,gBAAAE,OAAC,UAAK,WAAU,QAAO,oBAAM;AAAA;AAAA;AAAA,MAChD;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AC/SA,SAAgB,YAAAG,YAAU,aAAAC,mBAAiB;AAC3C,OAAOC,WAAU;AACjB,SAAS,eAAAC,oBAAmB;AAC5B,SAAS,MAAAC,WAAU;AACnB,SAAS,UAAAC,gBAAc;AAEvB,SAAS,yBAAAC,+BAA6B;AACtC;AAAA,EACE,eAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,aAAAC;AAAA,EACA,YAAAC;AAAA,EACA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,QAAAC;AAAA,EAEA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,eAAAC;AAAA,OACK;AAsPK,SACE,OAAAC,QADF,QAAAC,eAAA;AA7NZ,IAAM,qBAAqB,CAACC,OAAuB;AAAA,EACjD;AAAA,IACE,OAAOA,GAAE,sBAAsB;AAAA,IAC/B,MAAM;AAAA,IACN,MAAMd;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAOc,GAAE,mBAAmB;AAAA,IAC5B,MAAM;AAAA,IACN,MAAMX;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAOW,GAAE,qBAAqB;AAAA,IAC9B,MAAM;AAAA,IACN,MAAMZ;AAAA,IACN,UAAU;AAAA,MACR;AAAA,QACE,OAAOY,GAAE,wBAAwB;AAAA,QACjC,MAAM;AAAA,QACN,MAAMZ;AAAA,MACR;AAAA,MACA;AAAA,QACE,OAAOY,GAAE,uBAAuB;AAAA,QAChC,MAAM;AAAA,QACN,MAAMP;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAOO,GAAE,sBAAsB;AAAA,IAC/B,MAAM;AAAA,IACN,MAAMb;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAOa,GAAE,kBAAkB;AAAA,IAC3B,MAAM;AAAA,IACN,MAAMN;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAOM,GAAE,oBAAoB;AAAA,IAC7B,MAAM;AAAA,IACN,MAAMV;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAOU,GAAE,qBAAqB;AAAA,IAC9B,MAAM;AAAA,IACN,MAAMR;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAOQ,GAAE,qBAAqB;AAAA,IAC9B,MAAM;AAAA,IACN,MAAMT;AAAA,EACR;AACF;AAEO,IAAM,gBAA8C,CAAC;AAAA,EAC1D;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,cAAc;AAAA,EACd;AAAA,EACA,qBAAqB;AAAA,EACrB,iBAAiB;AAAA,EACjB;AAAA,EACA;AACF,MAAM;AACJ,QAAM,CAAC,eAAe,gBAAgB,IAAId,WAAmB,CAAC,CAAC;AAC/D,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAwB,IAAI;AAChE,QAAM,CAAC,YAAY,aAAa,IAAIA,WAAwB,IAAI;AAChE,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,WAAW;AACpE,QAAM,CAAC,cAAc,eAAe,IAAIA,WAAwB,IAAI;AACpE,QAAM,WAAWG,aAAY;AAG7B,QAAMoB,KAAIjB,wBAAsB;AAGhC,QAAM,wBAAwB,CAAC,OAAmB,aAAsB;AACtE,QAAI,CAAC;AAAU,aAAO;AAGtB,QAAI,aAAa,gBAAgB;AAE/B,aAAO,MAAM;AAAA,QAAO,UAClB,KAAK,SAAS,cACd,KAAK,SAAS,oBACd,KAAK,SAAS,YACd,KAAK,SAAS;AAAA,MAChB;AAAA,IACF,WAAW,aAAa,gBAAgB;AAEtC,aAAO,MAAM;AAAA,QAAO,UAClB,KAAK,SAAS,YACd,KAAK,SAAS,cACd,KAAK,SAAS,oBACd,KAAK,SAAS,YACd,KAAK,SAAS;AAAA,MAChB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,QAAMkB,aAAY,sBAAsB,mBAAmBD,EAAC,GAAG,MAAM,IAAI;AAGzE,EAAAtB,YAAU,MAAM;AACd,UAAM,aAAa,YAAY;AAC/B,wBAAoB,UAAU;AAE9B,QAAI,gBAAgB,eAAe,cAAc;AAC/C,sBAAgB,IAAI;AAAA,IACtB;AAAA,EACF,GAAG,CAAC,UAAU,aAAa,YAAY,CAAC;AAGxC,EAAAA,YAAU,MAAM;AACd,QAAI,YAAY;AACd,MAAAuB,WAAU,QAAQ,UAAQ;AACxB,mBAAW,KAAK,IAAI;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAACA,YAAW,UAAU,CAAC;AAG1B,EAAAvB,YAAU,MAAM;AACd,UAAM,qBAAqB,CAAC,UAAsB;AAChD,YAAM,SAAS,MAAM;AACrB,YAAM,oBAAoB,OAAO,QAAQ,WAAW;AACpD,YAAM,oBAAoB,OAAO,QAAQ,gBAAgB;AAEzD,UAAI,cAAc,SAAS,KAAK,CAAC,qBAAqB,CAAC,mBAAmB;AACxE,yBAAiB,CAAC,CAAC;AAAA,MACrB;AAAA,IACF;AAEA,aAAS,iBAAiB,aAAa,kBAAkB;AACzD,WAAO,MAAM,SAAS,oBAAoB,aAAa,kBAAkB;AAAA,EAC3E,GAAG,CAAC,aAAa,CAAC;AAElB,QAAM,iBAAiB,CAAC,SAAiB;AACvC;AAAA,MAAiB,UACf,KAAK,SAAS,IAAI,IACd,KAAK,OAAO,UAAQ,SAAS,IAAI,IACjC,CAAC,GAAG,MAAM,IAAI;AAAA,IACpB;AAAA,EACF;AAEA,QAAM,WAAW,CAAC,SAAiB;AAEjC,UAAM,qBAAqB,YAAY;AACvC,QAAI,SAAS,cAAc;AACzB,aAAO,uBAAuB;AAAA,IAChC;AACA,WAAO,mBAAmB,WAAW,IAAI;AAAA,EAC3C;AAEA,QAAM,iBAAiB,CAAC,SAAiB;AAEvC,oBAAgB,IAAI;AACpB,wBAAoB,IAAI;AAGxB,kBAAc,IAAI;AAGlB,eAAW,MAAM,cAAc,IAAI,GAAG,GAAG;AAGzC,QAAI,YAAY;AAEd,4BAAsB,MAAM;AAC1B,mBAAW,IAAI;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AAEA,QAAM,iBAAiB,CAAC,SAAiB;AACvC,kBAAc,IAAI;AAClB,QAAI,YAAY;AACd,iBAAW,IAAI;AAAA,IACjB;AAAA,EACF;AAGA,QAAM,iBAAiB,CAAC,MAAgB,QAAQ,MAAM;AACpD,UAAM,cAAc,KAAK,YAAY,KAAK,SAAS,SAAS;AAC5D,UAAM,aAAa,cAAc,SAAS,KAAK,IAAI;AACnD,UAAM,SAAS,SAAS,KAAK,IAAI;AACjC,UAAM,YAAY,eAAe,KAAK;AACtC,UAAM,iBAAiB,iBAAiB,KAAK;AAC7C,UAAM,YAAY,eAAe,KAAK;AACtC,UAAMwB,QAAO,KAAK;AAGlB,UAAM,kBAAkB,UAAU;AAElC,WACE,gBAAAH,QAAC,SAAoB,WAAU,YAC5B;AAAA,oBACC,gBAAAA;AAAA,QAACjB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,CAACqB,OAAM;AACd,YAAAA,GAAE,eAAe;AACjB,YAAAA,GAAE,gBAAgB;AAClB,2BAAe,KAAK,IAAI;AAAA,UAC1B;AAAA,UACA,cAAc,MAAM,eAAe,KAAK,IAAI;AAAA,UAC5C,cAAc,MAAM,cAAc,IAAI;AAAA,UACtC,WAAWtB;AAAA,YACT;AAAA,YACA,kBACI,4DACA;AAAA,YACJ,aAAa,CAAC,kBAAkB,oBAAoB;AAAA,YACpD,YAAY,2BAA2B;AAAA,YACvC,iBAAiB,6CAA6C;AAAA,UAChE;AAAA,UAEA;AAAA,4BAAAkB,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACI,OAAA,EAAK,WAAWrB;AAAA,gBACf;AAAA,gBACA,kBAAkB,kBAAkB;AAAA,cACtC,GAAG;AAAA,cACF,CAAC,eACA,gBAAAiB,OAAC,UAAM,eAAK,OAAM;AAAA,eAEtB;AAAA,YACC,CAAC,eACA,gBAAAA,OAACD,cAAA,EAAY,WAAWhB;AAAA,cACtB;AAAA,cACA,aAAa,eAAe;AAAA,YAC9B,GAAG;AAAA,YAIJ,aAAa,CAAC,mBACb,gBAAAiB,OAAC,SAAI,WAAU,8EAA6E;AAAA,YAI7F,kBACC,gBAAAA,OAAC,SAAI,WAAU,uFAAsF;AAAA;AAAA;AAAA,MAEzG,IAEA,gBAAAC;AAAA,QAACjB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS,CAACqB,OAAM;AACd,YAAAA,GAAE,eAAe;AACjB,YAAAA,GAAE,gBAAgB;AAClB,2BAAe,KAAK,IAAI;AAAA,UAC1B;AAAA,UACA,cAAc,MAAM,eAAe,KAAK,IAAI;AAAA,UAC5C,cAAc,MAAM,cAAc,IAAI;AAAA,UACtC,WAAWtB;AAAA,YACT;AAAA,YACA,kBACI,4DACA;AAAA,YACJ,aAAa,CAAC,kBAAkB,oBAAoB;AAAA,YACpD,YAAY,2BAA2B;AAAA,YACvC,iBAAiB,6CAA6C;AAAA,UAChE;AAAA,UAEA;AAAA,4BAAAkB,QAAC,SAAI,WAAU,2BACb;AAAA,8BAAAD,OAACI,OAAA,EAAK,WAAWrB;AAAA,gBACf;AAAA,gBACA,kBAAkB,kBAAkB;AAAA,cACtC,GAAG;AAAA,cACF,CAAC,eACA,gBAAAiB,OAAC,UAAM,eAAK,OAAM;AAAA,eAEtB;AAAA,YACC,CAAC,eAAe,KAAK,SACpB,gBAAAA,OAAC,UAAK,WAAU,uHACb,eAAK,OACR;AAAA,YAID,aAAa,CAAC,mBACb,gBAAAA,OAAC,SAAI,WAAU,8EAA6E;AAAA,YAI7F,kBACC,gBAAAA,OAAC,SAAI,WAAU,uFAAsF;AAAA;AAAA;AAAA,MAEzG;AAAA,MAID,eAAe,cAAc,CAAC,eAC7B,gBAAAA,OAAC,SAAI,WAAU,uBAAsB,gBAAa,QAC/C,eAAK,UAAU,IAAI,CAAC,YAAY;AAC/B,cAAM,UAAU,QAAQ;AACxB,cAAM,YAAY,SAAS,QAAQ,IAAI;AACvC,cAAM,gBAAgB,iBAAiB,QAAQ;AAC/C,cAAM,aAAa,eAAe,QAAQ;AAC1C,cAAM,qBAAqB,aAAa;AAExC,eACE,gBAAAC;AAAA,UAACjB;AAAA,UAAA;AAAA,YACC,SAAQ;AAAA,YAER,SAAS,CAACqB,OAAM;AACd,cAAAA,GAAE,eAAe;AACjB,cAAAA,GAAE,gBAAgB;AAClB,6BAAe,QAAQ,IAAI;AAE3B,yBAAW,MAAM;AACf,iCAAiB,CAAC,CAAC;AAAA,cACrB,GAAG,EAAE;AAAA,YACP;AAAA,YACA,WAAWtB;AAAA,cACT;AAAA,cACA,qBAAqB,4CAA4C;AAAA,cACjE,aAAa,2BAA2B;AAAA,cACxC,gBAAgB,4BAA4B;AAAA,YAC9C;AAAA,YAEA;AAAA,8BAAAiB,OAAC,WAAQ,WAAWjB;AAAA,gBAClB;AAAA,gBACA,qBAAqB,kBAAkB;AAAA,cACzC,GAAG;AAAA,cACF,QAAQ;AAAA,cACR,iBACC,gBAAAiB,OAAC,SAAI,WAAU,yEAAwE;AAAA;AAAA;AAAA,UAvBpF,QAAQ;AAAA,QAyBf;AAAA,MAEJ,CAAC,GACH;AAAA,SAvIM,KAAK,IAyIf;AAAA,EAEJ;AAEA,SACE,gBAAAC,QAAC,SAAI,WAAWlB;AAAA,IACd;AAAA,IACA,cAAc,SAAS;AAAA,EACzB,GAEE;AAAA,oBAAAiB,OAAC,SAAI,WAAU,UACZ,UAAAG,WAAU,IAAI,UACb,gBAAAH,OAACnB,OAAA,EAAqB,MAAM,KAAK,QAAtB,KAAK,IAAuB,CACxC,GACH;AAAA,IAGA,gBAAAoB,QAAC,SAAI,WAAU,gEACZ;AAAA,OAAC,eACA,gBAAAA,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,6GACb,0BAAAA,OAACR,aAAA,EAAU,WAAU,sBAAqB,GAC5C;AAAA,QACA,gBAAAQ,OAAC,SACC,0BAAAA,OAAC,QAAG,WAAU,2CAA0C,wBAAU,GACpE;AAAA,SACF;AAAA,MAGD,eACC,gBAAAA,OAAC,SAAI,WAAU,qHACb,0BAAAA,OAACR,aAAA,EAAU,WAAU,sBAAqB,GAC5C;AAAA,MAGF,gBAAAQ;AAAA,QAAChB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAS;AAAA,UACT,WAAU;AAAA,UAET,wBACC,gBAAAgB,OAACb,eAAA,EAAa,WAAU,WAAU,IAElC,gBAAAa,OAACd,cAAA,EAAY,WAAU,WAAU;AAAA;AAAA,MAErC;AAAA,OACF;AAAA,IAIA,gBAAAc,OAAC,SAAI,WAAU,8CACZ,UAAAG,WAAU,IAAI,CAAC,SAAS,eAAe,IAAI,CAAC,GAC/C;AAAA,IAGA,gBAAAF,QAAC,SAAI,WAAU,8BACZ;AAAA,cAAQ,CAAC,eACR,gBAAAA,QAAC,SAAI,WAAU,oCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACJ,QAAA,EAAK,WAAU,sBAAqB,GACvC;AAAA,QACA,gBAAAK,QAAC,SAAI,WAAU,kBACb;AAAA,0BAAAD,OAAC,OAAE,WAAU,kDACV,eAAK,QAAQ,KAAK,OACrB;AAAA,UACA,gBAAAA,OAAC,OAAE,WAAU,uCACV,eAAK,MACR;AAAA,WACF;AAAA,QACA,gBAAAA,OAAC,SAAI,WAAU,+BACZ,2BAAiB,KAChB,gBAAAC,QAAC,SAAI,WAAU,YACb;AAAA,0BAAAD,OAACT,gBAAA,EAAa,WAAU,8BAA6B;AAAA,UACrD,gBAAAS,OAAC,UAAK,WAAU,uHACb,0BACH;AAAA,WACF,GAEJ;AAAA,SACF;AAAA,MAGD,QAAQ,eACP,gBAAAC,QAAC,SAAI,WAAU,wCACb;AAAA,wBAAAD,OAAC,SAAI,WAAU,qGACb,0BAAAA,OAACJ,QAAA,EAAK,WAAU,sBAAqB,GACvC;AAAA,QACA,gBAAAK,QAAC,SAAI,WAAU,+BACZ;AAAA,+BAAqB,KACpB,gBAAAA,QAAC,SAAI,WAAU,YACb;AAAA,4BAAAD,OAACF,OAAA,EAAK,WAAU,8BAA6B;AAAA,YAC7C,gBAAAE,OAAC,UAAK,WAAU,sHACb,8BACH;AAAA,aACF;AAAA,UAED,iBAAiB,KAChB,gBAAAC,QAAC,SAAI,WAAU,YACb;AAAA,4BAAAD,OAACT,gBAAA,EAAa,WAAU,8BAA6B;AAAA,YACrD,gBAAAS,OAAC,UAAK,WAAU,uHACb,0BACH;AAAA,aACF;AAAA,WAEJ;AAAA,SACF;AAAA,MAGD,YACC,gBAAAC;AAAA,QAACjB;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAWD;AAAA,YACT;AAAA,YACA,eAAe;AAAA,UACjB;AAAA,UAEA;AAAA,4BAAAiB,OAACH,SAAA,EAAO,WAAU,WAAU;AAAA,YAC3B,CAAC,eAAe,gBAAAG,OAAC,UAAK,WAAU,QAAQ,UAAAE,GAAE,mBAAmB,GAAE;AAAA;AAAA;AAAA,MAClE;AAAA,OAEJ;AAAA,KACF;AAEJ;;;AC9fA,SAAS,YAAAI,kBAAgB;AACzB,SAAS,QAAAC,aAAY;AACrB,SAAS,UAAAC,UAAQ,WAAAC,gBAAe;AAgCxB,gBAAAC,QAiBI,QAAAC,eAjBJ;AApBD,SAAS,OAAO;AAAA,EACrB,UAAU;AAAA,EACV;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAW,MAAM;AAAA,EAAC;AAAA,EAClB,cAAc;AAAA,EACd,gBAAgB;AAClB,GAAgB;AACd,QAAM,CAAC,aAAa,cAAc,IAAIL,WAAS,KAAK;AACpD,QAAM,CAAC,kBAAkB,mBAAmB,IAAIA,WAAS,KAAK;AAE9D,QAAM,uBAAuB,MAAM;AACjC,wBAAoB,CAAC,gBAAgB;AAAA,EACvC;AAEA,SACE,gBAAAK,QAAC,SAAI,WAAU,8BAEZ;AAAA,KAAC,eACA,gBAAAD;AAAA,MAACD;AAAA,MAAA;AAAA,QACC;AAAA,QACA,QAAQ;AAAA,QACR,UAAU,MAAM,eAAe,CAAC,WAAW;AAAA,QAC3C;AAAA,QACA,aAAa,eAAe;AAAA,QAC5B,aAAa;AAAA,QACb,kBAAkB,gBAAgB,uBAAuB;AAAA;AAAA,IAC3D;AAAA,IAIF,gBAAAE;AAAA,MAAC;AAAA;AAAA,QAAI,WAAW,GAAG,CAAC,cAAc,4CAA4C,EAAE;AAAA,QAC3E,OAAO,EAAE,YAAY,cAAc,MAAM,mBAAmB,SAAS,QAAQ;AAAA,QAEhF;AAAA,0BAAAD,OAAC,SAAI,WAAU,+CACb,0BAAAC,QAAC,SAAI,WAAU,+CACb;AAAA,4BAAAA,QAAC,SAAI,WAAU,qBACZ;AAAA,eAAC,eACA,gBAAAD;AAAA,gBAACF;AAAA,gBAAA;AAAA,kBACC,SAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,SAAS,MAAM,eAAe,IAAI;AAAA,kBAClC,WAAU;AAAA,kBAEV,0BAAAE,OAACH,OAAA,EAAK,WAAU,WAAU;AAAA;AAAA,cAC5B;AAAA,cAEF,gBAAAG,OAAC,QAAG,WAAU,2CACX,sBAAY,UAAU,gBAAgB,eACzC;AAAA,eACF;AAAA,YACA,gBAAAA,OAAC,SAAI,WAAU,+BAEf;AAAA,aACF,GACF;AAAA,UAGA,gBAAAA,OAAC,UAAK,WAAU,OACb,UACH;AAAA;AAAA;AAAA,IACF;AAAA,KACF;AAEJ;;;ACvEA;AAAA,EACE,iBAAAE;AAAA,EACA,eAAAC;AAAA,EACA,SAAAC;AAAA,EACA,cAAAC;AAAA,EACA,cAAAC;AAAA,EACA,OAAAC;AAAA,OACK;AACP,SAAS,6BAAAC,kCAAiC;AA2BlC,gBAAAC,QAUE,QAAAC,eAVF;AAnBD,SAAS,mBAAmB,EAAE,cAAc,OAAO,YAAY,IAAI,gBAAgB,GAA4B;AACpH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,EACF,IAAIF,2BAA0B;AAE9B,MAAI,SAAS;AACX,WACE,gBAAAC,OAAC,SAAI,WAAW,iBAAiB,SAAS,IACxC,0BAAAA,OAAC,SAAI,WAAU,gCAA+B,GAChD;AAAA,EAEJ;AAEA,MAAI,SAAS,CAAC,iBAAiB;AAC7B,WACE,gBAAAA,OAAC,SAAI,WAED,+BAAoB,WAAW,oBAAoB,eACnD,gBAAAC;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,OAAO,SAAS,OAAO;AAAA,QAEtC;AAAA,0BAAAD,OAACJ,cAAA,EAAW,WAAU,gBAAe;AAAA,UAAE;AAAA;AAAA;AAAA,IAEzC,GAEJ;AAAA,EAEJ;AAKA,QAAMM,iBAAgB,MAAM;AAC1B,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAS,eAAO,gBAAAF,OAACF,MAAA,EAAI,WAAU,WAAU;AAAA,MAC9C,KAAK;AAAU,eAAO,gBAAAE,OAACN,eAAA,EAAY,WAAU,WAAU;AAAA,MACvD,KAAK;AAAW,eAAO,gBAAAM,OAACP,iBAAA,EAAc,WAAU,WAAU;AAAA,MAC1D,KAAK;AAAY,eAAO,gBAAAO,OAACP,iBAAA,EAAc,WAAU,WAAU;AAAA,MAC3D,KAAK;AAAY,eAAO,gBAAAO,OAACJ,cAAA,EAAW,WAAU,WAAU;AAAA,MACxD,KAAK;AAAU,eAAO,gBAAAI,OAACL,SAAA,EAAM,WAAU,WAAU;AAAA,MACjD;AAAS,eAAO,gBAAAK,OAACL,SAAA,EAAM,WAAU,WAAU;AAAA,IAC7C;AAAA,EACF;AAEA,QAAM,mBAAmB,MAAM;AAC7B,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAU,eAAO;AAAA,MACtB,KAAK;AAAS,eAAO;AAAA,MACrB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAU,eAAO;AAAA,MACtB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAEA,QAAM,gBAAgB,MAAM;AAE1B,QAAI;AAAe,aAAO;AAG1B,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAU,eAAO,iBAAiB,cAAc,eAAe,UAAU;AAAA,MAC9E,KAAK;AAAS,eAAO,UAAU,eAAe;AAAA,MAC9C,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAU,eAAO;AAAA,MACtB;AAAS,eAAO,UAAU;AAAA,IAC5B;AAAA,EACF;AAGA,QAAM,iBAAiB,MAAM;AAC3B,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAU,eAAO,iBAAiB,sBAAsB;AAAA,MAC7D,KAAK;AAAS,eAAO;AAAA,MACrB,KAAK;AAAW,eAAO;AAAA,MACvB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAY,eAAO;AAAA,MACxB,KAAK;AAAU,eAAO;AAAA,MACtB;AAAS,eAAO;AAAA,IAClB;AAAA,EACF;AAGA,QAAM,mBAAmB,WAAW,aAAa,WAAW,cAAc,WAAW,cAAc;AAEnG,MAAI,aAAa;AACf,WACE,gBAAAK,OAAC,QAAK,WAAW,cAAc,eAAe,CAAC,IAAI,SAAS,IAC1D,0BAAAA,OAAC,eAAY,WAAU,OACrB,0BAAAC,QAAC,SAAI,WAAU,qCACb;AAAA,sBAAAA,QAAC,SAAI,WAAU,+BACZ;AAAA,QAAAC,eAAc;AAAA,QACf,gBAAAD,QAAC,SACC;AAAA,0BAAAD,OAAC,SAAI,WAAU,6BAA6B,oBAAS;AAAA,UACrD,gBAAAA,OAAC,SAAI,WAAU,yBAAyB,wBAAc,GAAE;AAAA,WAC1D;AAAA,SACF;AAAA,MACA,gBAAAC,QAAC,SAAI,WAAU,+BACb;AAAA,wBAAAD,OAAC,eAAY,QAAgB,MAAK,gBAAe,SAAQ,SACzD;AAAA,SAEE,oBAAoB,WAAW,oBAAoB,eAAe,oBAClE,gBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAS,MAAM,OAAO,SAAS,OAAO;AAAA,YAEtC;AAAA,8BAAAD,OAACH,cAAA,EAAW,WAAU,gBAAe;AAAA,cACpC,WAAW,aAAa,WAAW,aAAa,UAAU;AAAA;AAAA;AAAA,QAC7D;AAAA,SAEJ;AAAA,OACF,GACF,GACF;AAAA,EAEJ;AAEA,SACE,gBAAAI,QAAC,SAAI,WAAW,+BAA+B,SAAS,IACrD;AAAA,IAAAC,eAAc;AAAA,IACf,gBAAAD,QAAC,UAAK,WAAU,eAAe;AAAA;AAAA,MAAS;AAAA,MAAI,cAAc;AAAA,OAAE;AAAA,IAC5D,gBAAAD,OAAC,eAAY,QAAgB,MAAK,gBAAe,SAAQ,SAAQ,MAAK,MAAK;AAAA,KAEzE,oBAAoB,WAAW,oBAAoB,eAAe,oBAClE,gBAAAC;AAAA,MAAC;AAAA;AAAA,QACC,SAAQ;AAAA,QACR,MAAK;AAAA,QACL,SAAS,MAAM,OAAO,SAAS,OAAO;AAAA,QAEtC;AAAA,0BAAAD,OAACH,cAAA,EAAW,WAAU,gBAAe;AAAA,UACpC,WAAW,aAAa,WAAW,aAAa,UAAU;AAAA;AAAA;AAAA,IAC7D;AAAA,KAEJ;AAEJ;","names":["exports","module","split","normalizePath","getter","forEach","isArray","exports","module","join","d","camelCase","snakeCase","exports","module","toposort","i","e","exports","module","isArray","keys","exports","d","e","g","k","n","p","r","t","v","w","exports","REACT_ELEMENT_TYPE","object","Element","Fragment","Portal","exports","module","exports","module","defineProperty","hoistNonReactStatics","keys","e","date","locale","cva","clsx","twMerge","cn","jsx","cva","cn","jsx","jsx","jsxs","React","cva","jsx","cva","cn","React","cva","jsx","jsxs","React","cn","React","cva","jsx","React","cn","React","jsx","cn","jsx","sizeClasses","cn","jsx","sizeClasses","cn","React","jsx","jsxs","jsxs","cn","jsx","jsx","jsxs","React","jsx","jsxs","jsx","cn","jsxs","jsx","jsxs","React","jsx","cn","React","jsx","jsxs","Label","React","AlertTriangle","AlertCircle","Info","CheckCircle","XCircle","jsx","jsxs","getTypeConfig","Label","e","React","jsx","jsxs","cn","jsx","jsxs","sizeClasses","useState","jsx","useCurrency","Component","useCurrency","jsx","React","jsx","Separator","React","React","jsx","cn","React","ChevronDown","Check","jsx","jsxs","cn","e","Check","ChevronDown","React","jsx","cn","useState","useEffect","jsx","jsxs","useState","useEffect","e","useState","jsx","jsxs","useState","jsx","jsxs","e","Label","useState","useRef","useEffect","ChevronRight","X","jsx","jsxs","useState","useRef","useEffect","formatDate","date","daysInMonth","startingDayOfWeek","cn","X","ChevronRight","React","jsx","jsxs","t","React","React","jsx","cn","jsx","jsxs","cn","useState","useEffect","jsx","jsxs","CheckCircle","XCircle","Loader2","jsx","jsxs","sizeClasses","AlertTriangle","CheckCircle","jsx","jsxs","p","React","ChevronDown","jsx","jsxs","filtered","o","e","cn","ChevronDown","v","React","ChevronDown","Fragment","jsx","jsxs","o","e","cn","ChevronDown","useState","useEffect","createContext","useContext","X","CheckCircle","AlertCircle","Info","AlertTriangle","jsx","jsxs","CheckCircle","AlertCircle","AlertTriangle","Info","useState","useEffect","Icon","X","createContext","useContext","useState","useEffect","useRef","useCommonTranslations","Package","CheckCircle","XCircle","AlertCircle","Loader2","Fragment","jsx","jsxs","t","useState","useRef","useEffect","o","e","currentImageCount","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Button","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Textarea","Badge","formatCurrency","SearchableSelect","useToast","Fragment","jsx","jsxs","p","e","useState","useEffect","useCallback","useToast","customersApi","productsApi","formatCurrency","useOrderTranslations","BUSINESS","useState","useEffect","useCallback","useRef","useToast","e","useState","useCallback","BUSINESS","VALIDATION","useState","useCallback","formatCurrency","useState","useCallback","PAGINATION","React","Card","CardHeader","CardTitle","CardContent","Input","SearchableSelect","Skeleton","Button","useFormatCurrency","useProductTranslations","Package","Trash2","ProductAvailabilityAsyncDisplay","jsx","jsxs","e","t","p","React","useState","Card","CardHeader","CardTitle","CardContent","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","DateRangePicker","Textarea","Skeleton","Button","useOrderTranslations","Search","X","Plus","Fragment","jsx","jsxs","NumberInput","e","t","Card","CardHeader","CardTitle","CardContent","Button","useFormatCurrency","useOrderTranslations","CheckCircle","XCircle","jsx","jsxs","t","useState","Dialog","DialogContent","DialogHeader","DialogTitle","useState","X","useCommonTranslations","jsx","jsxs","t","useState","e","Label","X","jsx","jsxs","useState","Dialog","DialogContent","DialogHeader","DialogTitle","Dialog","DialogContent","DialogHeader","DialogTitle","Card","CardHeader","CardTitle","CardContent","Badge","Separator","Table","TableHeader","TableBody","TableHead","TableRow","TableCell","Button","formatCurrency","useOrderTranslations","Info","Package","DollarSign","Calendar","User","AlertTriangle","CheckCircle","X","Fragment","jsx","jsxs","t","warnings","warning","ShoppingCart","jsx","jsxs","Dialog","DialogContent","DialogHeader","DialogTitle","jsx","jsxs","t","useOrderTranslations","useState","useEffect","useToast","useCallback","formatCurrency","BUSINESS","productsApi","customersApi","e","o","useState","Package","DollarSign","Plus","Trash2","CheckCircle","Fragment","jsx","jsxs","useState","e","formatCurrency","Label","useState","value","result","isArray","k","v","isIndex","keys","n","date","t","toposort","p","isMergeableObject","array","Symbol","e","objectProto","nativeObjectToString","symToStringTag","objectProto","hasOwnProperty","array","isObject","funcProto","funcToString","e","funcProto","objectProto","funcToString","hasOwnProperty","object","object","Map","objectProto","hasOwnProperty","objectProto","hasOwnProperty","HASH_UNDEFINED","array","e","object","objectProto","hasOwnProperty","object","object","n","objectProto","hasOwnProperty","Buffer","MAX_SAFE_INTEGER","argsTag","funcTag","objectTag","freeExports","freeModule","moduleExports","e","objectProto","hasOwnProperty","objectProto","objectProto","hasOwnProperty","object","object","object","object","objectProto","hasOwnProperty","object","object","object","freeExports","freeModule","moduleExports","Buffer","array","array","objectProto","propertyIsEnumerable","object","object","array","nativeGetSymbols","object","object","object","object","object","Promise","Set","WeakMap","mapTag","objectTag","setTag","weakMapTag","dataViewTag","objectProto","hasOwnProperty","array","Uint8Array","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","object","object","object","mapTag","setTag","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","object","key","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","CLONE_SYMBOLS_FLAG","clone","array","symbolTag","string","number","INFINITY","symbolProto","symbolToString","toString","FormikContext","React","undefined","displayName","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","invariant","isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isEmptyChildren","children","React","count","isPromise","value","isObject","isFunction","then","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","obj","key","def","p","path","toPath","length","setIn","value","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","isObject","Array","isArray","nextPath","isInteger","Number","setNestedObjectValues","object","visited","response","WeakMap","Object","keys","k","val","get","set","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","React","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","invariant","current","setIteration","stateRef","cloneDeep","dispatch","action","prev","x","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","isPromise","then","actualException","process","env","NODE_ENV","console","warn","runValidationSchema","validationSchema","schema","isFunction","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","isString","persist","target","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","isNaN","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","console","warn","yupToFormErrors","yupError","errors","inner","length","setIn","path","message","err","getIn","validateYupSchema","values","schema","sync","context","normalizedValues","prepareDataForValidation","abortEarly","data","Array","isArray","k","Object","prototype","hasOwnProperty","call","key","String","map","value","isPlainObject","undefined","arrayMerge","target","source","options","destination","slice","forEach","merge","e","i","cloneRequested","clone","shouldClone","isMergeableObject","deepmerge","indexOf","push","getSelectedValues","from","filter","el","selected","getValueForCheckbox","currentValue","checked","valueProp","Boolean","currentArrayOfValues","isValueInArray","index","concat","useIsomorphicLayoutEffect","window","document","createElement","React","useEventCallback","fn","ref","current","args","apply","Form","React","props","ref","action","rest","_action","useFormikContext","handleReset","handleSubmit","onSubmit","onReset","displayName","move","array","from","to","copy","copyArrayLike","value","splice","swap","arrayLike","indexA","indexB","a","insert","index","replace","Array","isArray","maxIndex","Object","keys","map","key","parseInt","reduce","max","el","length","createAlterationHandler","alteration","defaultFunction","fn","data","isObject","clone","FieldArrayInner","props","updateArrayField","alterTouched","alterErrors","name","setFormikState","formik","prevState","updateErrors","updateTouched","values","setIn","getIn","fieldError","errors","undefined","fieldTouched","touched","isEmptyArray","push","cloneDeep","handlePush","handleSwap","handleMove","handleInsert","handleReplace","unshift","arr","handleUnshift","handleRemove","remove","handlePop","pop","bind","componentDidUpdate","prevProps","validateOnChange","isEqual","validateForm","result","isFunction","every","v","tmp","slice","render","arrayHelpers","component","children","restOfFormik","form","React","isEmptyChildren","only","defaultProps","Button","Card","CardContent","Input","e","Button","jsx","jsxs","jsx","jsxs","useState","t","error","e","Card","CardContent","Input","Button","useState","useRouter","Eye","EyeOff","Mail","Lock","User","CheckCircle","Button","Card","CardHeader","CardTitle","CardDescription","CardContent","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","useToast","useAuthTranslations","Fragment","jsx","jsxs","useRouter","useState","t","e","useState","Mail","ArrowLeft","CheckCircle","Button","Card","CardHeader","CardTitle","CardDescription","CardContent","Input","useAuthTranslations","jsx","jsxs","useState","t","error","e","jsx","jsxs","jsx","jsxs","jsx","jsxs","useCommonTranslations","jsx","jsxs","useCommonTranslations","useFormattedDaily","useFormattedMonthOnly","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsx","jsxs","ResponsiveContainer","Tooltip","Legend","jsx","jsxs","jsx","jsxs","getStatusColor","jsx","jsxs","jsx","jsxs","n","jsx","jsxs","jsx","jsxs","getStatusColor","formatDate","jsx","jsxs","jsx","jsxs","getStatusColor","jsx","jsxs","jsx","jsxs","jsx","jsxs","useState","useEffect","Link","useRouter","cn","Button","Card","ChevronLeft","ChevronRight","Fragment","jsx","jsxs","e","jsx","jsxs","useState","jsx","jsxs","React","jsx","jsxs","jsx","jsxs","useCallback","Input","Button","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","useProductTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","e","useState","useState","Package","Fragment","jsx","jsxs","useState","images","cn","e","Fragment","jsx","jsxs","useState","useState","useFormatCurrency","useProductTranslations","useCommonTranslations","getProductImageUrl","Eye","Edit","ShoppingCart","Trash2","Package","jsx","jsxs","useState","t","formatCurrency","e","useState","useState","useState","Plus","Loader2","AlertCircle","useToast","useProductTranslations","useCommonTranslations","Fragment","jsx","jsxs","useState","t","Loader2","Plus","AlertCircle","jsx","jsxs","useState","Fragment","jsx","jsxs","useState","jsx","jsxs","useRouter","useProductTranslations","useCommonTranslations","Package","formatCurrency","jsx","jsxs","useRouter","t","useProductTranslations","useCommonTranslations","e","formatCurrency","Package","jsx","useState","useEffect","Button","useToast","useProductTranslations","useCommonTranslations","Save","Loader2","Fragment","jsx","jsxs","useState","useToast","t","useProductTranslations","useCommonTranslations","useEffect","Button","Loader2","Save","useState","useEffect","Package","DollarSign","ShoppingCart","TrendingUp","RefreshCw","BarChart3","ArrowLeft","useOrderTranslations","useCommonTranslations","React","Card","CardContent","CardHeader","CardTitle","useOrderTranslations","jsx","jsxs","OrderHeader","t","formatCurrency","React","useState","useEffect","Input","Button","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","useOrderTranslations","useCommonTranslations","Fragment","jsx","jsxs","OrderFilters","t","e","Calendar","Clock","TrendingUp","AlertCircle","Fragment","jsx","jsxs","useState","Calendar","AlertCircle","Fragment","jsx","jsxs","useState","Label","e","React","useFormatCurrency","useOrderTranslations","ORDER_STATUS_COLORS","Eye","Edit","jsx","jsxs","React","OrderTable","t","o","formatDate","Button","Card","CardContent","jsx","jsxs","Card","CardContent","CardHeader","CardTitle","Badge","jsx","jsxs","formatCurrency","Pagination","jsx","TableSkeleton","SearchSkeleton","PaginationSkeleton","StatsSkeleton","jsx","jsxs","Pagination","Fragment","jsx","jsxs","t","useOrderTranslations","useCommonTranslations","useState","useEffect","totalPages","BarChart3","RefreshCw","ArrowLeft","ShoppingCart","Package","DollarSign","formatCurrency","TrendingUp","useState","useEffect","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Button","Card","CardContent","CardHeader","CardTitle","Badge","ShoppingCart","Calendar","User","DollarSign","Package","X","ordersApi","useOrderTranslations","jsx","jsxs","t","error","formatCurrency","formatDate","date","Pagination","EmptyState","Button","Card","CardContent","useUserRole","useProductTranslations","Download","jsx","jsxs","t","React","React","Pagination","EmptyState","Button","Card","CardContent","React","Button","Card","CardContent","DropdownMenu","DropdownMenuContent","DropdownMenuItem","DropdownMenuTrigger","DropdownMenuSeparator","Eye","Edit","Trash2","MoreVertical","useCustomerTranslations","jsx","jsxs","t","formatDate","date","useState","useEffect","Trash2","useCustomerTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","useState","useEffect","merchantsApi","formatDate","date","Card","CardContent","CardHeader","CardTitle","Button","Edit","ShoppingBag","Trash2","useCustomerTranslations","jsx","jsxs","t","formatDate","date","Card","CardContent","CardHeader","CardTitle","jsx","jsxs","formatDate","date","formatCurrency","Button","jsx","jsxs","useState","useCustomerTranslations","jsx","jsxs","t","useState","useState","useEffect","forwardRef","useImperativeHandle","Save","X","Button","Input","Label","Card","CardContent","useCustomerTranslations","useCommonTranslations","jsx","jsxs","t","e","errorMessage","useState","useEffect","Save","X","Button","Input","Label","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Card","CardContent","jsx","jsxs","e","useState","useEffect","useRouter","Plus","Filter","jsx","jsxs","useState","useRouter","useEffect","Plus","Filter","Card","CardContent","CardHeader","CardTitle","jsx","jsxs","formatCurrency","Input","Button","useCustomerTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","e","Card","CardContent","CardHeader","CardTitle","Badge","jsx","jsxs","formatCurrency","formatDate","useState","useEffect","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Card","CardContent","CardHeader","CardTitle","Badge","Package","Calendar","DollarSign","User","MapPin","Clock","ORDER_STATUS_COLORS","useOrderTranslations","jsx","jsxs","t","formatCurrency","formatDate","date","TableSkeleton","SearchSkeleton","PaginationSkeleton","StatsSkeleton","jsx","jsxs","Download","useUserRole","useCustomerTranslations","jsx","jsxs","t","React","Button","Card","CardContent","EmptyState","Pagination","React","Pagination","Card","CardContent","AlertCircle","useOrderTranslations","jsx","jsxs","React","Orders","t","useState","useEffect","Button","Label","DateRangePicker","useOrderTranslations","jsx","jsxs","RentalPeriodSelector","t","React","Users","Building2","TrendingUp","jsx","jsxs","jsx","jsxs","Fragment","jsx","jsxs","e","useState","Eye","Edit","MoreVertical","jsx","jsxs","useState","useState","useEffect","useState","Eye","Edit","Building","MoreVertical","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","Card","CardHeader","CardTitle","CardContent","Badge","Separator","formatDate","formatCurrency","Edit","Clock","ArrowRight","X","jsx","jsxs","getStatusColor","normalizedStatus","useState","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","Card","CardHeader","CardTitle","CardContent","Input","Label","Alert","AlertDescription","formatDate","formatCurrency","Calendar","DollarSign","Clock","jsx","jsxs","e","useState","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","Card","CardHeader","CardTitle","CardContent","Label","Alert","AlertDescription","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Badge","formatCurrency","ArrowRight","Check","X","jsx","jsxs","p","features","useState","useEffect","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","Card","CardHeader","CardTitle","CardContent","Badge","cn","useState","useEffect","DollarSign","Users","CreditCard","AlertCircle","jsx","jsxs","useState","useEffect","p","e","getDiscountPercentage","formatCurrency","Label","formatCurrency","DollarSign","TrendingUp","Calendar","jsx","jsxs","useState","useEffect","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Card","CardHeader","CardTitle","CardContent","cn","Badge","DialogFooter","Button","Fragment","jsx","jsxs","useState","formatDate","date","formatCurrency","Building","MoreVertical","Eye","Edit","useState","useEffect","Calendar","DollarSign","Users","Building","CreditCard","AlertCircle","CheckCircle","jsx","jsxs","useState","useEffect","p","e","formatCurrency","Label","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Button","Badge","cn","formatCurrency","Check","Users","Store","Package","Zap","TrendingUp","Fragment","jsx","jsxs","useState","useEffect","Dialog","DialogContent","DialogHeader","DialogTitle","Button","Card","CardContent","CardHeader","CardTitle","Badge","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Separator","Check","CreditCard","AlertTriangle","Clock","Shield","Zap","jsx","jsxs","BILLING_CYCLES","Icon","AlertTriangle","CreditCard","Download","Clock","Shield","XCircle","CheckCircle","Info","jsx","jsxs","getStatusIcon","getStatusColor","Calendar","Clock","AlertTriangle","CheckCircle","Pause","XCircle","jsx","jsxs","getStatusIcon","Lock","AlertTriangle","Fragment","jsx","jsxs","useState","Card","CardHeader","CardTitle","CardContent","Button","Badge","Pagination","formatDate","formatCurrency","Download","Eye","Fragment","jsx","jsxs","p","useState","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","Input","Label","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","formatDate","formatCurrency","CreditCard","Building2","AlertCircle","jsx","jsxs","d","e","useState","useEffect","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","Label","Card","formatDate","formatCurrency","Check","CreditCard","Building2","Fragment","jsx","jsxs","p","React","formatDate","formatCurrency","Clock","TrendingUp","RefreshCw","XCircle","Pause","Play","CreditCard","User","Download","DollarSign","AlertCircle","AlertTriangle","Percent","FileText","jsx","jsxs","React","Icon","useState","useEffect","jsx","useState","useEffect","CreditCard","Clock","ArrowRight","Pause","Play","Plus","X","jsx","jsxs","getDiscountPercentage","calculateDiscountedPrice","useState","useEffect","formatDate","date","getStatusColor","p","Label","e","jsx","jsxs","React","useRouter","useState","useEffect","Pause","XCircle","AlertCircle","CheckCircle","Clock","History","Fragment","jsx","jsxs","useState","useEffect","subscriptionsApi","Icon","Building2","Users","Package","ShoppingCart","jsx","jsxs","useRouter","useState","useEffect","useCallback","Calendar","jsx","jsxs","t","ChevronLeft","ChevronRight","useCalendarTranslations","jsx","jsxs","t","ChevronLeft","ChevronRight","Clock","CheckCircle","Package","useCalendarTranslations","jsx","jsxs","t","React","useCalendarTranslations","jsx","jsxs","t","jsx","jsxs","jsx","jsxs","useState","useEffect","useCallback","date","Package","User","Clock","useOrderTranslations","jsx","jsxs","t","React","Pagination","EmptyState","Card","CardContent","Plus","jsx","jsxs","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Button","Fragment","jsx","jsxs","e","Card","Badge","Button","Mail","Phone","Calendar","Building","UserIcon","jsx","jsxs","formatDate","Card","CardContent","jsx","jsxs","t","React","Eye","Edit","Trash2","MoreVertical","UserCheck","useUsersTranslations","jsx","jsxs","t","React","formatDate","date","jsx","jsxs","useState","useEffect","useRouter","ConfirmationDialog","useState","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","ConfirmationDialog","useState","getAuthToken","Eye","EyeOff","jsx","jsxs","useState","e","Label","Card","CardContent","Button","useUsersTranslations","Fragment","jsx","jsxs","t","useUsersTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","useState","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","Button","ConfirmationDialog","Fragment","jsx","jsxs","useRouter","useState","useEffect","ConfirmationDialog","useState","useState","useEffect","Save","X","useState","Eye","EyeOff","Building2","Store","Fragment","jsx","jsxs","useState","Label","e","EyeOff","Eye","Building2","Store","outletsApi","useUsersTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","useState","useEffect","formData","e","X","Save","useUsersTranslations","jsx","jsxs","t","useState","Card","CardContent","Button","Eye","Edit","Store","Mail","Phone","Calendar","jsx","jsxs","formatDate","Button","Plus","Download","jsx","jsxs","UserCheck","UserX","Trash2","jsx","jsxs","UserIcon","useUserRole","useUsersTranslations","jsx","jsxs","Users","t","React","Card","CardContent","EmptyState","Pagination","React","Pagination","EmptyState","Card","CardContent","Card","CardHeader","CardTitle","Button","Building2","Grid","List","Plus","jsx","jsxs","t","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Button","Fragment","jsx","jsxs","e","Card","CardContent","CardHeader","CardTitle","Button","StatusBadge","Building2","MapPin","Phone","Edit","Eye","jsx","jsxs","React","Eye","Edit","XCircle","CheckCircle","MoreVertical","Building2","useOutletsTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","React","formatDate","date","Input","Button","useOutletsTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","e","Pagination","jsx","useState","useState","Save","X","Button","Input","Label","Textarea","Card","CardContent","useOutletsTranslations","useCommonTranslations","jsx","jsxs","t","e","useOutletsTranslations","jsx","jsxs","t","useState","Building2","useOutletsTranslations","jsx","jsxs","t","React","Card","CardContent","EmptyState","Pagination","React","Pagination","EmptyState","Card","CardContent","Button","Plus","useUserRole","jsx","jsxs","useState","useUserRole","useState","useCategoriesTranslations","useState","useEffect","useCommonTranslations","Save","Loader2","Fragment","jsx","jsxs","t","useState","useEffect","e","Label","jsx","jsxs","t","useCategoriesTranslations","useState","Fragment","jsx","jsxs","useState","useUserRole","Edit","Tag","Calendar","Eye","jsx","jsxs","useCategoriesTranslations","jsx","jsxs","t","React","useCategoriesTranslations","useCommonTranslations","Eye","Edit","Trash2","MoreVertical","Fragment","jsx","jsxs","React","t","formatDate","date","useCategoriesTranslations","jsx","jsxs","t","useCategoriesTranslations","useState","useCategoriesTranslations","useCommonTranslations","Fragment","jsx","jsxs","t","useCategoriesTranslations","useCommonTranslations","locale","useState","Label","Input","Button","Fragment","jsx","jsxs","e","Input","Button","Fragment","jsx","jsxs","e","jsx","jsxs","FolderOpen","useCategoriesTranslations","jsx","jsxs","t","React","Card","CardContent","EmptyState","Pagination","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","jsx","jsxs","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Button","DropdownMenu","DropdownMenuContent","DropdownMenuItem","DropdownMenuTrigger","DropdownMenuSeparator","Eye","Edit","Trash2","Settings","MoreHorizontal","Copy","Star","jsx","jsxs","useState","useEffect","Card","CardHeader","CardTitle","CardContent","Button","Badge","RadioGroup","RadioGroupItem","Label","CheckCircle","Star","Package","Users","CreditCard","BILLING_CYCLES","getBillingCycleDiscount","formatBillingCycle","jsx","jsxs","formatCurrency","Card","CardHeader","CardTitle","CardContent","Badge","Button","Package","Users","CreditCard","Star","Eye","Edit","Settings","jsx","jsxs","formatCurrency","formatDate","date","useState","Card","CardContent","Badge","Button","StatusBadge","DropdownMenu","DropdownMenuContent","DropdownMenuItem","DropdownMenuTrigger","DropdownMenuSeparator","Package","Star","Eye","Edit","Settings","ChevronUp","ChevronDown","Trash2","MoreVertical","Fragment","jsx","jsxs","t","formatCurrency","formatDate","date","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Button","Fragment","jsx","jsxs","e","Card","CardContent","jsx","jsxs","X","Check","Star","formatCurrency","jsx","jsxs","BILLING_CYCLES","getBillingCycleDiscount","calculateDiscountedPrice","calculateSavings","Star","X","Check","e","Card","CardContent","Badge","Button","StatusBadge","Calendar","Edit","ChevronUp","ChevronDown","Eye","useCommonTranslations","jsx","jsxs","t","formatDate","date","useState","useEffect","Button","Input","Label","Textarea","Switch","jsx","jsxs","e","React","useState","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Card","CardContent","Button","Badge","StatusBadge","Switch","Label","Calendar","Percent","Clock","Edit","Save","X","Info","DollarSign","Trash2","Fragment","jsx","jsxs","formatDate","date","React","useState","useEffect","Button","Input","Label","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Card","CardContent","CardHeader","CardTitle","Switch","SearchableSelect","merchantsApi","DollarSign","CreditCard","jsx","jsxs","PAYMENT_METHODS","useState","React","merchantsApi","useEffect","p","v","e","jsxs","Card","jsx","CardHeader","CardTitle","DollarSign","CardContent","Label","SearchableSelect","Select","SelectTrigger","SelectValue","SelectContent","PAYMENT_METHODS","SelectItem","CreditCard","Switch","Input","Textarea","Button","CreditCard","DollarSign","Clock","CheckCircle","XCircle","AlertCircle","Building","Package","FileText","RotateCcw","Download","jsx","jsxs","Icon","formatDate","date","formatCurrency","useState","Eye","Download","CreditCard","MoreVertical","Fragment","jsx","jsxs","useState","formatCurrency","formatDate","date","jsx","jsxs","Icon","Search","jsx","jsxs","e","jsx","jsx","jsxs","Icon","jsx","jsxs","EmptyState","Icon","jsx","jsxs","jsx","jsxs","PageWrapper","cn","PageContent","jsx","jsxs","jsx","jsxs","Icon","jsx","jsxs","e","jsx","jsxs","getStatusColor","Icon","jsx","jsxs","PageWrapper","PageContent","Globe","Shield","Mail","Bell","jsx","jsxs","Icon","jsx","jsxs","Icon","User","Settings","CreditCard","ShoppingCart","Building2","AlertCircle","CheckCircle","Info","jsx","jsxs","getTypeColor","Icon","jsx","jsxs","Icon","jsx","jsxs","getStatusColor","Icon","TrendingUp","TrendingDown","Activity","Database","Globe","jsx","jsxs","getStatusColor","Icon","AlertTriangle","CheckCircle","Clock","User","jsx","jsxs","alert","jsx","jsx","jsxs","alert","Play","CheckCircle","XCircle","Clock","Calendar","User","jsx","jsxs","getStatusColor","Shield","Eye","EyeOff","jsx","jsxs","jsx","Calendar","Clock","Bell","jsx","jsxs","getStatusColor","getStatusIcon","window","Database","Download","Play","Trash2","Clock","User","HardDrive","Archive","CheckCircle","XCircle","AlertTriangle","jsx","jsxs","getTypeColor","getStatusColor","getStatusIcon","Clock","Play","Pause","Settings","CheckCircle","XCircle","AlertTriangle","jsx","jsxs","getStatusColor","getTypeColor","getStatusIcon","jsx","jsx","useState","Copy","Eye","EyeOff","Trash2","XCircle","User","jsx","jsxs","getTypeColor","getStatusColor","useState","Globe","Settings","User","jsx","jsxs","getStatusColor","jsx","jsx","Eye","User","Globe","Info","CheckCircle","AlertTriangle","XCircle","AlertCircle","jsx","jsxs","jsx","jsxs","Search","Filter","RefreshCw","Download","jsx","jsxs","e","Shield","Eye","User","Globe","AlertTriangle","CheckCircle","XCircle","Info","jsx","jsxs","getTypeColor","getSeverityColor","getSeverityIcon","jsx","jsxs","TrendingUp","TrendingDown","jsx","jsxs","Icon","useState","Card","CardContent","CardHeader","CardTitle","Button","Input","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Badge","React","useState","Dialog","DialogContent","DialogHeader","DialogTitle","Button","Badge","Card","CardContent","CardHeader","CardTitle","User","Calendar","MapPin","Monitor","Activity","AlertTriangle","CheckCircle","XCircle","Info","Eye","EyeOff","Fragment","jsx","jsxs","severity","getSeverityIcon","action","formatDate","getCategoryIcon","Filter","RefreshCw","Eye","Activity","AlertTriangle","XCircle","Info","Clock","jsx","jsxs","SeverityBadge","severity","getSeverityIcon","Badge","ActionBadge","action","formatDate","Card","CardContent","Button","CardHeader","CardTitle","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Input","e","useState","useState","useEffect","Card","CardHeader","CardContent","Badge","Skeleton","ConfirmationDialog","useFormatCurrency","useToast","ORDER_STATUS_COLORS","ORDER_TYPE_COLORS","useOrderTranslations","Dialog","DialogContent","DialogHeader","DialogTitle","DialogFooter","Button","Badge","Package","RotateCcw","formatCurrency","jsx","jsxs","Package","RotateCcw","Dialog","DialogContent","DialogHeader","DialogTitle","Badge","formatCurrency","DialogFooter","Button","Info","useOrderTranslations","useFormattedFullDate","Fragment","jsx","jsxs","t","Package","useOrderTranslations","useFormatCurrency","jsx","jsxs","t","DollarSign","useOrderTranslations","useFormatCurrency","jsx","jsxs","calculateCollectionTotal","t","Card","CardHeader","CardTitle","CardContent","Button","Input","Label","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Settings","Save","Edit","useOrderTranslations","useFormatCurrency","Fragment","jsx","jsxs","t","e","Edit","X","Package","RotateCcw","Info","useOrderTranslations","jsx","jsxs","t","ordersApi","jsx","jsxs","Skeleton","Card","CardHeader","CardContent","useFormatCurrency","useToast","t","useOrderTranslations","useState","useEffect","Badge","ORDER_TYPE_COLORS","ORDER_STATUS_COLORS","ConfirmationDialog","DollarSign","formatCurrency","jsx","jsxs","DollarSign","formatCurrency","jsx","jsxs","jsx","jsxs","useState","useEffect","useRouter","User","CreditCard","Building2","Store","Languages","useAuth","useSettingsTranslations","usersApi","authApi","subscriptionsApi","useToast","useState","Card","CardContent","PageWrapper","PageHeader","PageTitle","PageContent","Button","ChevronRight","jsx","jsxs","SettingsLayout","menuItems","t","Icon","Card","CardHeader","CardContent","Button","Input","Label","useSettingsTranslations","jsx","jsxs","t","useState","useEffect","useRef","Card","CardHeader","CardContent","Button","Input","Label","Badge","SearchableCountrySelect","CheckCircle2","DollarSign","merchantsApi","formatCurrency","COUNTRIES","useSettingsTranslations","Fragment","jsx","jsxs","t","CURRENCY_OPTIONS","Card","CardHeader","CardContent","Button","Input","Label","useSettingsTranslations","jsx","jsxs","t","Card","CardContent","Button","Badge","CreditCard","CheckCircle","AlertTriangle","Calendar","DollarSign","useSettingsTranslations","jsx","jsxs","t","Card","CardContent","Button","Separator","Trash2","Key","useSettingsTranslations","jsx","jsxs","t","useState","useTransition","Check","useRouter","useSettingsTranslations","jsx","jsxs","t","useTransition","useState","useState","Button","Input","Label","Eye","EyeOff","useSettingsTranslations","jsx","jsxs","ChangePasswordDialog","t","Button","useSettingsTranslations","jsx","jsxs","t","Fragment","jsx","jsxs","t","User","Building2","Store","CreditCard","Languages","useSettingsTranslations","useAuth","useToast","useCurrency","useRouter","useState","useEffect","tabFromUrl","subscriptionsApi","e","usersApi","authApi","SettingsLayout","ChangePasswordDialog","Card","CardContent","Button","Shield","jsx","jsxs","useState","useEffect","DollarSign","CheckCircle2","AlertCircle","formatCurrency","getCurrency","Card","CardContent","CardDescription","CardHeader","CardTitle","Button","Badge","jsx","jsxs","useState","Home","Package","Users","Settings","ShoppingCart","Store","Building2","Bell","User","LogOut","X","CreditCard","Clock","ChevronDown","FileText","Database","jsx","jsxs","useState","Home","Package","Users","ShoppingCart","Settings","Building2","Clock","CreditCard","Database","FileText","userRole","Store","Icon","ChevronDown","Bell","User","LogOut","X","Home","Store","Users","Settings","User","LogOut","Menu","Search","Bell","ShoppingCart","Package","CreditCard","BarChart3","Shield","Clock","jsx","jsxs","Home","Package","Users","ShoppingCart","Settings","Store","Clock","CreditCard","BarChart3","Shield","Icon","Search","Bell","User","LogOut","Menu","useState","jsx","jsxs","useState","useState","jsx","jsxs","useState","jsx","jsxs","jsx","jsxs","jsx","jsxs","jsx","jsxs","QuickActionCard","useEffect","Search","X","cn","Button","jsx","jsxs","e","useState","Home","Store","Users","Settings","User","LogOut","Menu","X","ChevronLeft","ChevronRight","Tag","ShoppingCart","Building2","Button","jsx","jsxs","userRole","Icon","useState","Link","cn","Button","ChevronLeft","ChevronRight","Home","Users","Package","Building2","Settings","CreditCard","Clock","Database","ShieldCheck","FileText","Store","LogOut","User","jsx","jsxs","Icon","useState","useEffect","Link","usePathname","cn","Button","useCommonTranslations","ChevronLeft","ChevronRight","Home","Users","Package","ShoppingCart","Building2","Settings","Calendar","Tag","User","LogOut","Bell","ChevronDown","jsx","jsxs","t","menuItems","Icon","e","useState","Menu","Button","Sidebar","jsx","jsxs","AlertTriangle","CheckCircle","Clock","CreditCard","TrendingUp","Zap","useSubscriptionStatusInfo","jsx","jsxs","getStatusIcon"]}